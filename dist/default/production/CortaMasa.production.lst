

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 24 14:48:20 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	text37,global,reloc=2,class=CODE,delta=1
    54                           	psect	text38,global,reloc=2,class=CODE,delta=1
    55                           	psect	text39,global,reloc=2,class=CODE,delta=1
    56                           	psect	text40,global,reloc=2,class=CODE,delta=1
    57                           	psect	text41,global,reloc=2,class=CODE,delta=1
    58                           	psect	text42,global,reloc=2,class=CODE,delta=1
    59                           	psect	text43,global,reloc=2,class=CODE,delta=1
    60                           	psect	text44,global,reloc=2,class=CODE,delta=1
    61                           	psect	text45,global,reloc=2,class=CODE,delta=1
    62                           	psect	text46,global,reloc=2,class=CODE,delta=1
    63                           	psect	text47,global,reloc=2,class=CODE,delta=1
    64                           	psect	text48,global,reloc=2,class=CODE,delta=1
    65                           	psect	text49,global,reloc=2,class=CODE,delta=1
    66                           	psect	text50,global,reloc=2,class=CODE,delta=1
    67                           	psect	text51,global,reloc=2,class=CODE,delta=1
    68                           	psect	text52,global,reloc=2,class=CODE,delta=1
    69                           	psect	text53,global,reloc=2,class=CODE,delta=1
    70                           	psect	text54,global,reloc=2,class=CODE,delta=1
    71                           	psect	text55,global,reloc=2,class=CODE,delta=1
    72                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    73                           	psect	text57,global,reloc=2,class=CODE,delta=1
    74                           	psect	text58,global,reloc=2,class=CODE,delta=1
    75                           	psect	text59,global,reloc=2,class=CODE,delta=1
    76                           	psect	text60,global,reloc=2,class=CODE,delta=1
    77                           	psect	text61,global,reloc=2,class=CODE,delta=1
    78                           	psect	text62,global,reloc=2,class=CODE,delta=1
    79                           	psect	text63,global,reloc=2,class=CODE,delta=1
    80                           	psect	text64,global,reloc=2,class=CODE,delta=1
    81                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    82                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    83                           	psect	text66,global,reloc=2,class=CODE,delta=1
    84                           	psect	text67,global,reloc=2,class=CODE,delta=1
    85                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    86                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    87                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    88  0000                     
    89                           	psect	idataCOMRAM
    90  00398E                     __pidataCOMRAM:
    91                           	opt stack 0
    92                           
    93                           ;initializer for _contra
    94  00398E  01                 	db	1
    95  00398F  02                 	db	2
    96  003990  03                 	db	3
    97  003991  04                 	db	4
    98                           
    99                           ;initializer for _m3Xcorte
   100  003992  CCCD               	dw	52429
   101  003994  3DCC               	dw	15820
   102                           
   103                           ;initializer for _pi
   104  003996  0FDB               	dw	4059
   105  003998  4049               	dw	16457
   106                           
   107                           ;initializer for _tempkgXcorte
   108  00399A  CCCD               	dw	52429
   109  00399C  3DCC               	dw	15820
   110                           
   111                           ;initializer for _tiXcorte
   112  00399E  0000               	dw	0
   113  0039A0  4000               	dw	16384
   114                           
   115                           ;initializer for lcd_init@F7556
   116  0039A2  28                 	db	40
   117  0039A3  0C                 	db	12
   118  0039A4  01                 	db	1
   119  0039A5  06                 	db	6
   120                           
   121                           ;initializer for _tempNumCortes
   122  0039A6  0001               	dw	1
   123                           
   124                           	psect	idataBANK0
   125  0039C0                     __pidataBANK0:
   126                           	opt stack 0
   127                           
   128                           ;initializer for _densidadMasa
   129  0039C0  0000               	dw	0
   130  0039C2  3FC0               	dw	16320
   131                           
   132                           ;initializer for _diamTubo
   133  0039C4  0000               	dw	0
   134  0039C6  41A0               	dw	16800
   135                           
   136                           ;initializer for _kgXcorte
   137  0039C8  CCCD               	dw	52429
   138  0039CA  3DCC               	dw	15820
   139                           
   140                           ;initializer for _velocidadMasa
   141  0039CC  0000               	dw	0
   142  0039CE  4000               	dw	16384
   143                           
   144                           ;initializer for _numCortes
   145  0039D0  0001               	dw	1
   146                           
   147                           ;initializer for _lastSttDOWN
   148  0039D2  01                 	db	1
   149                           
   150                           ;initializer for _lastSttENTER
   151  0039D3  01                 	db	1
   152                           
   153                           ;initializer for _lastSttRETRO
   154  0039D4  01                 	db	1
   155                           
   156                           ;initializer for _lastSttUP
   157  0039D5  01                 	db	1
   158                           
   159                           	psect	mediumconst
   160  007E02                     __pmediumconst:
   161                           	opt stack 0
   162  007E02  00                 	db	0
   163  007E03                     __npowers_:
   164                           	opt stack 0
   165  007E03  0000               	dw	0
   166  007E05  3F80               	dw	16256
   167  007E07  CCCD               	dw	52429
   168  007E09  3DCC               	dw	15820
   169  007E0B  D70A               	dw	55050
   170  007E0D  3C23               	dw	15395
   171  007E0F  126F               	dw	4719
   172  007E11  3A83               	dw	14979
   173  007E13  B717               	dw	46871
   174  007E15  38D1               	dw	14545
   175  007E17  C5AC               	dw	50604
   176  007E19  3727               	dw	14119
   177  007E1B  37BD               	dw	14269
   178  007E1D  3586               	dw	13702
   179  007E1F  BF95               	dw	49045
   180  007E21  33D6               	dw	13270
   181  007E23  CC77               	dw	52343
   182  007E25  322B               	dw	12843
   183  007E27  705F               	dw	28767
   184  007E29  3089               	dw	12425
   185  007E2B  E6FF               	dw	59135
   186  007E2D  2EDB               	dw	11995
   187  007E2F  E508               	dw	58632
   188  007E31  1E3C               	dw	7740
   189  007E33  4260               	dw	16992
   190  007E35  0DA2               	dw	3490
   191  007E37                     __end_of__npowers_:
   192                           	opt stack 0
   193  007E37                     __powers_:
   194                           	opt stack 0
   195  007E37  0000               	dw	0
   196  007E39  3F80               	dw	16256
   197  007E3B  0000               	dw	0
   198  007E3D  4120               	dw	16672
   199  007E3F  0000               	dw	0
   200  007E41  42C8               	dw	17096
   201  007E43  0000               	dw	0
   202  007E45  447A               	dw	17530
   203  007E47  4000               	dw	16384
   204  007E49  461C               	dw	17948
   205  007E4B  5000               	dw	20480
   206  007E4D  47C3               	dw	18371
   207  007E4F  2400               	dw	9216
   208  007E51  4974               	dw	18804
   209  007E53  9680               	dw	38528
   210  007E55  4B18               	dw	19224
   211  007E57  BC20               	dw	48160
   212  007E59  4CBE               	dw	19646
   213  007E5B  6B28               	dw	27432
   214  007E5D  4E6E               	dw	20078
   215  007E5F  02F9               	dw	761
   216  007E61  5015               	dw	20501
   217  007E63  78EC               	dw	30956
   218  007E65  60AD               	dw	24749
   219  007E67  F2CA               	dw	62154
   220  007E69  7149               	dw	29001
   221  007E6B                     __end_of__powers_:
   222                           	opt stack 0
   223  007E6B                     _dpowers:
   224                           	opt stack 0
   225  007E6B  0001               	dw	1
   226  007E6D  0000               	dw	0
   227  007E6F  000A               	dw	10
   228  007E71  0000               	dw	0
   229  007E73  0064               	dw	100
   230  007E75  0000               	dw	0
   231  007E77  03E8               	dw	1000
   232  007E79  0000               	dw	0
   233  007E7B  2710               	dw	10000
   234  007E7D  0000               	dw	0
   235  007E7F  86A0               	dw	34464
   236  007E81  0001               	dw	1
   237  007E83  4240               	dw	16960
   238  007E85  000F               	dw	15
   239  007E87  9680               	dw	38528
   240  007E89  0098               	dw	152
   241  007E8B  E100               	dw	57600
   242  007E8D  05F5               	dw	1525
   243  007E8F  CA00               	dw	51712
   244  007E91  3B9A               	dw	15258
   245  007E93                     __end_of_dpowers:
   246                           	opt stack 0
   247  0000                     _ANSELAbits	set	3896
   248  0000                     _ANSELCbits	set	3898
   249  0000                     _CCPTMRS0bits	set	3913
   250  0000                     _BAUDCON1bits	set	4024
   251  0000                     _CCP2CONbits	set	3942
   252  0000                     _CCPR2L	set	3943
   253  0000                     _ECCP2ASbits	set	3940
   254  0000                     _EEADR	set	4009
   255  0000                     _EECON1bits	set	4006
   256  0000                     _EECON2	set	4007
   257  0000                     _EEDATA	set	4008
   258  0000                     _INTCONbits	set	4082
   259  0000                     _IPR1bits	set	3999
   260  0000                     _LATBbits	set	3978
   261  0000                     _LATCbits	set	3979
   262  0000                     _OSCCON2bits	set	4050
   263  0000                     _OSCCONbits	set	4051
   264  0000                     _OSCTUNEbits	set	3995
   265  0000                     _PIE1bits	set	3997
   266  0000                     _PIR1bits	set	3998
   267  0000                     _PORTAbits	set	3968
   268  0000                     _PORTBbits	set	3969
   269  0000                     _PR2	set	4027
   270  0000                     _PSTR2CONbits	set	3939
   271  0000                     _PWM2CONbits	set	3941
   272  0000                     _RCONbits	set	4048
   273  0000                     _RCREG1	set	4014
   274  0000                     _RCSTA1bits	set	4011
   275  0000                     _SPBRG1	set	4015
   276  0000                     _SPBRGH1	set	4016
   277  0000                     _T2CONbits	set	4026
   278  0000                     _TRISAbits	set	3986
   279  0000                     _TRISBbits	set	3987
   280  0000                     _TRISCbits	set	3988
   281  0000                     _TXREG1	set	4013
   282  0000                     _TXSTA1bits	set	4012
   283  0000                     _WDTCONbits	set	4049
   284  007E93                     STR_3:
   285  007E93  20                 	db	32
   286  007E94  20                 	db	32
   287  007E95  20                 	db	32
   288  007E96  20                 	db	32
   289  007E97  20                 	db	32
   290  007E98  44                 	db	68	;'D'
   291  007E99  65                 	db	101	;'e'
   292  007E9A  74                 	db	116	;'t'
   293  007E9B  65                 	db	101	;'e'
   294  007E9C  6E                 	db	110	;'n'
   295  007E9D  69                 	db	105	;'i'
   296  007E9E  64                 	db	100	;'d'
   297  007E9F  6F                 	db	111	;'o'
   298  007EA0  20                 	db	32
   299  007EA1  20                 	db	32
   300  007EA2  20                 	db	32
   301  007EA3  20                 	db	32
   302  007EA4  20                 	db	32
   303  007EA5  00                 	db	0
   304  007EA6                     STR_4:
   305  007EA6  50                 	db	80	;'P'
   306  007EA7  72                 	db	114	;'r'
   307  007EA8  6F                 	db	111	;'o'
   308  007EA9  63                 	db	99	;'c'
   309  007EAA  65                 	db	101	;'e'
   310  007EAB  73                 	db	115	;'s'
   311  007EAC  6F                 	db	111	;'o'
   312  007EAD  20                 	db	32
   313  007EAE  65                 	db	101	;'e'
   314  007EAF  6E                 	db	110	;'n'
   315  007EB0  3A                 	db	58	;':'
   316  007EB1  20                 	db	32
   317  007EB2  20                 	db	32
   318  007EB3  20                 	db	32
   319  007EB4  20                 	db	32
   320  007EB5  20                 	db	32
   321  007EB6  0A                 	db	10
   322  007EB7  00                 	db	0
   323  007EB8                     STR_16:
   324  007EB8  44                 	db	68	;'D'
   325  007EB9  65                 	db	101	;'e'
   326  007EBA  6E                 	db	110	;'n'
   327  007EBB  73                 	db	115	;'s'
   328  007EBC  69                 	db	105	;'i'
   329  007EBD  64                 	db	100	;'d'
   330  007EBE  61                 	db	97	;'a'
   331  007EBF  64                 	db	100	;'d'
   332  007EC0  20                 	db	32
   333  007EC1  4D                 	db	77	;'M'
   334  007EC2  61                 	db	97	;'a'
   335  007EC3  73                 	db	115	;'s'
   336  007EC4  61                 	db	97	;'a'
   337  007EC5  3A                 	db	58	;':'
   338  007EC6  20                 	db	32
   339  007EC7  20                 	db	32
   340  007EC8  0A                 	db	10
   341  007EC9  00                 	db	0
   342  007ECA                     STR_14:
   343  007ECA  44                 	db	68	;'D'
   344  007ECB  69                 	db	105	;'i'
   345  007ECC  61                 	db	97	;'a'
   346  007ECD  6D                 	db	109	;'m'
   347  007ECE  65                 	db	101	;'e'
   348  007ECF  74                 	db	116	;'t'
   349  007ED0  72                 	db	114	;'r'
   350  007ED1  6F                 	db	111	;'o'
   351  007ED2  20                 	db	32
   352  007ED3  54                 	db	84	;'T'
   353  007ED4  75                 	db	117	;'u'
   354  007ED5  62                 	db	98	;'b'
   355  007ED6  6F                 	db	111	;'o'
   356  007ED7  3A                 	db	58	;':'
   357  007ED8  20                 	db	32
   358  007ED9  20                 	db	32
   359  007EDA  0A                 	db	10
   360  007EDB  00                 	db	0
   361  007EDC                     STR_18:
   362  007EDC  56                 	db	86	;'V'
   363  007EDD  65                 	db	101	;'e'
   364  007EDE  6C                 	db	108	;'l'
   365  007EDF  6F                 	db	111	;'o'
   366  007EE0  63                 	db	99	;'c'
   367  007EE1  69                 	db	105	;'i'
   368  007EE2  64                 	db	100	;'d'
   369  007EE3  61                 	db	97	;'a'
   370  007EE4  64                 	db	100	;'d'
   371  007EE5  20                 	db	32
   372  007EE6  4D                 	db	77	;'M'
   373  007EE7  61                 	db	97	;'a'
   374  007EE8  73                 	db	115	;'s'
   375  007EE9  61                 	db	97	;'a'
   376  007EEA  3A                 	db	58	;':'
   377  007EEB  20                 	db	32
   378  007EEC  0A                 	db	10
   379  007EED  00                 	db	0
   380  007EEE                     STR_1:
   381  007EEE  45                 	db	69	;'E'
   382  007EEF  73                 	db	115	;'s'
   383  007EF0  74                 	db	116	;'t'
   384  007EF1  61                 	db	97	;'a'
   385  007EF2  64                 	db	100	;'d'
   386  007EF3  6F                 	db	111	;'o'
   387  007EF4  20                 	db	32
   388  007EF5  70                 	db	112	;'p'
   389  007EF6  72                 	db	114	;'r'
   390  007EF7  6F                 	db	111	;'o'
   391  007EF8  63                 	db	99	;'c'
   392  007EF9  65                 	db	101	;'e'
   393  007EFA  73                 	db	115	;'s'
   394  007EFB  6F                 	db	111	;'o'
   395  007EFC  3A                 	db	58	;':'
   396  007EFD  20                 	db	32
   397  007EFE  0A                 	db	10
   398  007EFF  00                 	db	0
   399  007F00                     STR_8:
   400  007F00  56                 	db	86	;'V'
   401  007F01  61                 	db	97	;'a'
   402  007F02  6C                 	db	108	;'l'
   403  007F03  6F                 	db	111	;'o'
   404  007F04  72                 	db	114	;'r'
   405  007F05  20                 	db	32
   406  007F06  70                 	db	112	;'p'
   407  007F07  6F                 	db	111	;'o'
   408  007F08  72                 	db	114	;'r'
   409  007F09  20                 	db	32
   410  007F0A  43                 	db	67	;'C'
   411  007F0B  6F                 	db	111	;'o'
   412  007F0C  72                 	db	114	;'r'
   413  007F0D  74                 	db	116	;'t'
   414  007F0E  65                 	db	101	;'e'
   415  007F0F  3A                 	db	58	;':'
   416  007F10  0A                 	db	10
   417  007F11  00                 	db	0
   418  007F12                     STR_12:
   419  007F12  43                 	db	67	;'C'
   420  007F13  61                 	db	97	;'a'
   421  007F14  6E                 	db	110	;'n'
   422  007F15  74                 	db	116	;'t'
   423  007F16  69                 	db	105	;'i'
   424  007F17  64                 	db	100	;'d'
   425  007F18  61                 	db	97	;'a'
   426  007F19  64                 	db	100	;'d'
   427  007F1A  20                 	db	32
   428  007F1B  43                 	db	67	;'C'
   429  007F1C  6F                 	db	111	;'o'
   430  007F1D  72                 	db	114	;'r'
   431  007F1E  74                 	db	116	;'t'
   432  007F1F  65                 	db	101	;'e'
   433  007F20  73                 	db	115	;'s'
   434  007F21  3A                 	db	58	;':'
   435  007F22  0A                 	db	10
   436  007F23  00                 	db	0
   437  007F24                     STR_13:
   438  007F24  20                 	db	32
   439  007F25  20                 	db	32
   440  007F26  20                 	db	32
   441  007F27  20                 	db	32
   442  007F28  20                 	db	32
   443  007F29  20                 	db	32
   444  007F2A  20                 	db	32
   445  007F2B  25                 	db	37
   446  007F2C  75                 	db	117	;'u'
   447  007F2D  73                 	db	115	;'s'
   448  007F2E  20                 	db	32
   449  007F2F  20                 	db	32
   450  007F30  20                 	db	32
   451  007F31  20                 	db	32
   452  007F32  20                 	db	32
   453  007F33  20                 	db	32
   454  007F34  20                 	db	32
   455  007F35  00                 	db	0
   456  007F36                     STR_6:
   457  007F36  20                 	db	32
   458  007F37  20                 	db	32
   459  007F38  20                 	db	32
   460  007F39  20                 	db	32
   461  007F3A  20                 	db	32
   462  007F3B  20                 	db	32
   463  007F3C  20                 	db	32
   464  007F3D  6D                 	db	109	;'m'
   465  007F3E  33                 	db	51	;'3'
   466  007F3F  20                 	db	32
   467  007F40  20                 	db	32
   468  007F41  20                 	db	32
   469  007F42  20                 	db	32
   470  007F43  20                 	db	32
   471  007F44  20                 	db	32
   472  007F45  20                 	db	32
   473  007F46  00                 	db	0
   474  007F47                     STR_5:
   475  007F47  20                 	db	32
   476  007F48  20                 	db	32
   477  007F49  20                 	db	32
   478  007F4A  20                 	db	32
   479  007F4B  20                 	db	32
   480  007F4C  20                 	db	32
   481  007F4D  20                 	db	32
   482  007F4E  6B                 	db	107	;'k'
   483  007F4F  67                 	db	103	;'g'
   484  007F50  20                 	db	32
   485  007F51  20                 	db	32
   486  007F52  20                 	db	32
   487  007F53  20                 	db	32
   488  007F54  20                 	db	32
   489  007F55  20                 	db	32
   490  007F56  20                 	db	32
   491  007F57  00                 	db	0
   492  007F58                     STR_7:
   493  007F58  20                 	db	32
   494  007F59  20                 	db	32
   495  007F5A  20                 	db	32
   496  007F5B  20                 	db	32
   497  007F5C  20                 	db	32
   498  007F5D  20                 	db	32
   499  007F5E  20                 	db	32
   500  007F5F  73                 	db	115	;'s'
   501  007F60  65                 	db	101	;'e'
   502  007F61  63                 	db	99	;'c'
   503  007F62  20                 	db	32
   504  007F63  20                 	db	32
   505  007F64  20                 	db	32
   506  007F65  20                 	db	32
   507  007F66  20                 	db	32
   508  007F67  20                 	db	32
   509  007F68  00                 	db	0
   510  007F69                     STR_15:
   511  007F69  20                 	db	32
   512  007F6A  20                 	db	32
   513  007F6B  20                 	db	32
   514  007F6C  20                 	db	32
   515  007F6D  20                 	db	32
   516  007F6E  20                 	db	32
   517  007F6F  25                 	db	37
   518  007F70  66                 	db	102	;'f'
   519  007F71  20                 	db	32
   520  007F72  6D                 	db	109	;'m'
   521  007F73  6D                 	db	109	;'m'
   522  007F74  20                 	db	32
   523  007F75  20                 	db	32
   524  007F76  20                 	db	32
   525  007F77  20                 	db	32
   526  007F78  20                 	db	32
   527  007F79  00                 	db	0
   528  007F7A                     STR_19:
   529  007F7A  20                 	db	32
   530  007F7B  20                 	db	32
   531  007F7C  20                 	db	32
   532  007F7D  20                 	db	32
   533  007F7E  20                 	db	32
   534  007F7F  25                 	db	37
   535  007F80  66                 	db	102	;'f'
   536  007F81  20                 	db	32
   537  007F82  6D                 	db	109	;'m'
   538  007F83  2F                 	db	47
   539  007F84  73                 	db	115	;'s'
   540  007F85  20                 	db	32
   541  007F86  20                 	db	32
   542  007F87  20                 	db	32
   543  007F88  20                 	db	32
   544  007F89  20                 	db	32
   545  007F8A  00                 	db	0
   546  007F8B                     STR_10:
   547  007F8B  20                 	db	32
   548  007F8C  20                 	db	32
   549  007F8D  20                 	db	32
   550  007F8E  20                 	db	32
   551  007F8F  20                 	db	32
   552  007F90  20                 	db	32
   553  007F91  20                 	db	32
   554  007F92  25                 	db	37
   555  007F93  66                 	db	102	;'f'
   556  007F94  20                 	db	32
   557  007F95  6D                 	db	109	;'m'
   558  007F96  33                 	db	51	;'3'
   559  007F97  20                 	db	32
   560  007F98  20                 	db	32
   561  007F99  20                 	db	32
   562  007F9A  20                 	db	32
   563  007F9B  00                 	db	0
   564  007F9C                     STR_9:
   565  007F9C  20                 	db	32
   566  007F9D  20                 	db	32
   567  007F9E  20                 	db	32
   568  007F9F  20                 	db	32
   569  007FA0  20                 	db	32
   570  007FA1  20                 	db	32
   571  007FA2  20                 	db	32
   572  007FA3  25                 	db	37
   573  007FA4  66                 	db	102	;'f'
   574  007FA5  20                 	db	32
   575  007FA6  6B                 	db	107	;'k'
   576  007FA7  67                 	db	103	;'g'
   577  007FA8  20                 	db	32
   578  007FA9  20                 	db	32
   579  007FAA  20                 	db	32
   580  007FAB  20                 	db	32
   581  007FAC  00                 	db	0
   582  007FAD                     STR_21:
   583  007FAD  20                 	db	32
   584  007FAE  20                 	db	32
   585  007FAF  20                 	db	32
   586  007FB0  20                 	db	32
   587  007FB1  25                 	db	37
   588  007FB2  75                 	db	117	;'u'
   589  007FB3  25                 	db	37
   590  007FB4  75                 	db	117	;'u'
   591  007FB5  25                 	db	37
   592  007FB6  75                 	db	117	;'u'
   593  007FB7  25                 	db	37
   594  007FB8  75                 	db	117	;'u'
   595  007FB9  20                 	db	32
   596  007FBA  20                 	db	32
   597  007FBB  20                 	db	32
   598  007FBC  20                 	db	32
   599  007FBD  00                 	db	0
   600  007FBE                     STR_17:
   601  007FBE  20                 	db	32
   602  007FBF  20                 	db	32
   603  007FC0  20                 	db	32
   604  007FC1  20                 	db	32
   605  007FC2  20                 	db	32
   606  007FC3  25                 	db	37
   607  007FC4  66                 	db	102	;'f'
   608  007FC5  20                 	db	32
   609  007FC6  6B                 	db	107	;'k'
   610  007FC7  67                 	db	103	;'g'
   611  007FC8  2F                 	db	47
   612  007FC9  6D                 	db	109	;'m'
   613  007FCA  33                 	db	51	;'3'
   614  007FCB  20                 	db	32
   615  007FCC  20                 	db	32
   616  007FCD  20                 	db	32
   617  007FCE  00                 	db	0
   618  007FCF                     STR_11:
   619  007FCF  20                 	db	32
   620  007FD0  20                 	db	32
   621  007FD1  20                 	db	32
   622  007FD2  20                 	db	32
   623  007FD3  20                 	db	32
   624  007FD4  20                 	db	32
   625  007FD5  20                 	db	32
   626  007FD6  25                 	db	37
   627  007FD7  66                 	db	102	;'f'
   628  007FD8  20                 	db	32
   629  007FD9  73                 	db	115	;'s'
   630  007FDA  65                 	db	101	;'e'
   631  007FDB  63                 	db	99	;'c'
   632  007FDC  20                 	db	32
   633  007FDD  20                 	db	32
   634  007FDE  20                 	db	32
   635  007FDF  00                 	db	0
   636  007FE0                     STR_2:
   637  007FE0  20                 	db	32
   638  007FE1  20                 	db	32
   639  007FE2  20                 	db	32
   640  007FE3  20                 	db	32
   641  007FE4  25                 	db	37
   642  007FE5  75                 	db	117	;'u'
   643  007FE6  73                 	db	115	;'s'
   644  007FE7  20                 	db	32
   645  007FE8  2F                 	db	47
   646  007FE9  20                 	db	32
   647  007FEA  25                 	db	37
   648  007FEB  75                 	db	117	;'u'
   649  007FEC  73                 	db	115	;'s'
   650  007FED  20                 	db	32
   651  007FEE  20                 	db	32
   652  007FEF  20                 	db	32
   653  007FF0  00                 	db	0
   654  007FF1                     STR_20:
   655  007FF1  43                 	db	67	;'C'
   656  007FF2  6F                 	db	111	;'o'
   657  007FF3  6E                 	db	110	;'n'
   658  007FF4  74                 	db	116	;'t'
   659  007FF5  72                 	db	114	;'r'
   660  007FF6  61                 	db	97	;'a'
   661  007FF7  73                 	db	115	;'s'
   662  007FF8  65                 	db	101	;'e'
   663  007FF9  6E                 	db	110	;'n'
   664  007FFA  61                 	db	97	;'a'
   665  007FFB  3A                 	db	58	;':'
   666  007FFC  0A                 	db	10
   667  007FFD  00                 	db	0
   668                           
   669                           ; #config settings
   670  007FFE  00                 	db	0	; dummy byte at the end
   671  0000                     
   672                           	psect	cinit
   673  00349A                     __pcinit:
   674                           	opt stack 0
   675  00349A                     start_initialization:
   676                           	opt stack 0
   677  00349A                     __initialization:
   678                           	opt stack 0
   679                           
   680                           ; Initialize objects allocated to BANK0 (22 bytes)
   681                           ; load TBLPTR registers with __pidataBANK0
   682  00349A  0EC0               	movlw	low __pidataBANK0
   683  00349C  6EF6               	movwf	tblptrl,c
   684  00349E  0E39               	movlw	high __pidataBANK0
   685  0034A0  6EF7               	movwf	tblptrh,c
   686  0034A2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   687  0034A4  6EF8               	movwf	tblptru,c
   688  0034A6  EE00  F0C4         	lfsr	0,__pdataBANK0
   689  0034AA  EE10 F016          	lfsr	1,22
   690  0034AE                     copy_data0:
   691  0034AE  0009               	tblrd		*+
   692  0034B0  CFF5 FFEE          	movff	tablat,postinc0
   693  0034B4  50E5               	movf	postdec1,w,c
   694  0034B6  50E1               	movf	fsr1l,w,c
   695  0034B8  E1FA               	bnz	copy_data0
   696                           
   697                           ; Initialize objects allocated to COMRAM (26 bytes)
   698                           ; load TBLPTR registers with __pidataCOMRAM
   699  0034BA  0E8E               	movlw	low __pidataCOMRAM
   700  0034BC  6EF6               	movwf	tblptrl,c
   701  0034BE  0E39               	movlw	high __pidataCOMRAM
   702  0034C0  6EF7               	movwf	tblptrh,c
   703  0034C2  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   704  0034C4  6EF8               	movwf	tblptru,c
   705  0034C6  EE00  F022         	lfsr	0,__pdataCOMRAM
   706  0034CA  EE10 F01A          	lfsr	1,26
   707  0034CE                     copy_data1:
   708  0034CE  0009               	tblrd		*+
   709  0034D0  CFF5 FFEE          	movff	tablat,postinc0
   710  0034D4  50E5               	movf	postdec1,w,c
   711  0034D6  50E1               	movf	fsr1l,w,c
   712  0034D8  E1FA               	bnz	copy_data1
   713                           
   714                           ; Clear objects allocated to BANK0 (19 bytes)
   715  0034DA  EE00  F0DA         	lfsr	0,__pbssBANK0
   716  0034DE  0E13               	movlw	19
   717  0034E0                     clear_0:
   718  0034E0  6AEE               	clrf	postinc0,c
   719  0034E2  06E8               	decf	wreg,f,c
   720  0034E4  E1FD               	bnz	clear_0
   721                           
   722                           ; Clear objects allocated to COMRAM (15 bytes)
   723  0034E6  EE00  F03C         	lfsr	0,__pbssCOMRAM
   724  0034EA  0E0F               	movlw	15
   725  0034EC                     clear_1:
   726  0034EC  6AEE               	clrf	postinc0,c
   727  0034EE  06E8               	decf	wreg,f,c
   728  0034F0  E1FD               	bnz	clear_1
   729  0034F2                     end_of_initialization:
   730                           	opt stack 0
   731  0034F2                     __end_of__initialization:
   732                           	opt stack 0
   733  0034F2  904B               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   734  0034F4  924B               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   735  0034F6  0E00               	movlw	low (__Lmediumconst shr (0+16))
   736  0034F8  6EF8               	movwf	tblptru,c
   737  0034FA  0100               	movlb	0
   738  0034FC  EF5B  F00D         	goto	_main	;jump to C main() function
   739                           tblptru	equ	0xFF8
   740                           tblptrh	equ	0xFF7
   741                           tblptrl	equ	0xFF6
   742                           tablat	equ	0xFF5
   743                           postinc0	equ	0xFEE
   744                           wreg	equ	0xFE8
   745                           postdec1	equ	0xFE5
   746                           fsr1l	equ	0xFE1
   747                           
   748                           	psect	bssCOMRAM
   749  00003C                     __pbssCOMRAM:
   750                           	opt stack 0
   751  00003C                     _calFactor:
   752                           	opt stack 0
   753  00003C                     	ds	4
   754  000040                     _introducido:
   755                           	opt stack 0
   756  000040                     	ds	4
   757  000044                     _DOWNisLP:
   758                           	opt stack 0
   759  000044                     	ds	1
   760  000045                     _ENTERisLP:
   761                           	opt stack 0
   762  000045                     	ds	1
   763  000046                     _RETROisLP:
   764                           	opt stack 0
   765  000046                     	ds	1
   766  000047                     _UPisLP:
   767                           	opt stack 0
   768  000047                     	ds	1
   769  000048                     _advMode:
   770                           	opt stack 0
   771  000048                     	ds	1
   772  000049                     _ie:
   773                           	opt stack 0
   774  000049                     	ds	1
   775  00004A                     _passSection:
   776                           	opt stack 0
   777  00004A                     	ds	1
   778                           tblptru	equ	0xFF8
   779                           tblptrh	equ	0xFF7
   780                           tblptrl	equ	0xFF6
   781                           tablat	equ	0xFF5
   782                           postinc0	equ	0xFEE
   783                           wreg	equ	0xFE8
   784                           postdec1	equ	0xFE5
   785                           fsr1l	equ	0xFE1
   786                           
   787                           	psect	dataCOMRAM
   788  000022                     __pdataCOMRAM:
   789                           	opt stack 0
   790  000022                     _contra:
   791                           	opt stack 0
   792  000022                     	ds	4
   793  000026                     _m3Xcorte:
   794                           	opt stack 0
   795  000026                     	ds	4
   796  00002A                     _pi:
   797                           	opt stack 0
   798  00002A                     	ds	4
   799  00002E                     _tempkgXcorte:
   800                           	opt stack 0
   801  00002E                     	ds	4
   802  000032                     _tiXcorte:
   803                           	opt stack 0
   804  000032                     	ds	4
   805  000036                     lcd_init@F7556:
   806                           	opt stack 0
   807  000036                     	ds	4
   808  00003A                     _tempNumCortes:
   809                           	opt stack 0
   810  00003A                     	ds	2
   811                           tblptru	equ	0xFF8
   812                           tblptrh	equ	0xFF7
   813                           tblptrl	equ	0xFF6
   814                           tablat	equ	0xFF5
   815                           postinc0	equ	0xFEE
   816                           wreg	equ	0xFE8
   817                           postdec1	equ	0xFE5
   818                           fsr1l	equ	0xFE1
   819                           
   820                           	psect	bssBANK0
   821  0000DA                     __pbssBANK0:
   822                           	opt stack 0
   823  0000DA                     _fData:
   824                           	opt stack 0
   825  0000DA                     	ds	4
   826  0000DE                     _i16Data:
   827                           	opt stack 0
   828  0000DE                     	ds	2
   829  0000E0                     _proceso:
   830                           	opt stack 0
   831  0000E0                     	ds	2
   832  0000E2                     _DOWNsecurLock:
   833                           	opt stack 0
   834  0000E2                     	ds	1
   835  0000E3                     _ENTERsecurLock:
   836                           	opt stack 0
   837  0000E3                     	ds	1
   838  0000E4                     _RETROsecurLock:
   839                           	opt stack 0
   840  0000E4                     	ds	1
   841  0000E5                     _UPsecurLock:
   842                           	opt stack 0
   843  0000E5                     	ds	1
   844  0000E6                     _actualScreen:
   845                           	opt stack 0
   846  0000E6                     	ds	1
   847  0000E7                     _holdDOWNcont:
   848                           	opt stack 0
   849  0000E7                     	ds	1
   850  0000E8                     _holdENTERcont:
   851                           	opt stack 0
   852  0000E8                     	ds	1
   853  0000E9                     _holdRETROcont:
   854                           	opt stack 0
   855  0000E9                     	ds	1
   856  0000EA                     _holdUPcont:
   857                           	opt stack 0
   858  0000EA                     	ds	1
   859  0000EB                     _menuSection:
   860                           	opt stack 0
   861  0000EB                     	ds	1
   862  0000EC                     _tVarProceso:
   863                           	opt stack 0
   864  0000EC                     	ds	1
   865                           tblptru	equ	0xFF8
   866                           tblptrh	equ	0xFF7
   867                           tblptrl	equ	0xFF6
   868                           tablat	equ	0xFF5
   869                           postinc0	equ	0xFEE
   870                           wreg	equ	0xFE8
   871                           postdec1	equ	0xFE5
   872                           fsr1l	equ	0xFE1
   873                           
   874                           	psect	dataBANK0
   875  0000C4                     __pdataBANK0:
   876                           	opt stack 0
   877  0000C4                     _densidadMasa:
   878                           	opt stack 0
   879  0000C4                     	ds	4
   880  0000C8                     _diamTubo:
   881                           	opt stack 0
   882  0000C8                     	ds	4
   883  0000CC                     _kgXcorte:
   884                           	opt stack 0
   885  0000CC                     	ds	4
   886  0000D0                     _velocidadMasa:
   887                           	opt stack 0
   888  0000D0                     	ds	4
   889  0000D4                     _numCortes:
   890                           	opt stack 0
   891  0000D4                     	ds	2
   892  0000D6                     _lastSttDOWN:
   893                           	opt stack 0
   894  0000D6                     	ds	1
   895  0000D7                     _lastSttENTER:
   896                           	opt stack 0
   897  0000D7                     	ds	1
   898  0000D8                     _lastSttRETRO:
   899                           	opt stack 0
   900  0000D8                     	ds	1
   901  0000D9                     _lastSttUP:
   902                           	opt stack 0
   903  0000D9                     	ds	1
   904                           tblptru	equ	0xFF8
   905                           tblptrh	equ	0xFF7
   906                           tblptrl	equ	0xFF6
   907                           tablat	equ	0xFF5
   908                           postinc0	equ	0xFEE
   909                           wreg	equ	0xFE8
   910                           postdec1	equ	0xFE5
   911                           fsr1l	equ	0xFE1
   912                           
   913                           	psect	cstackBANK1
   914  000100                     __pcstackBANK1:
   915                           	opt stack 0
   916  000100                     ?_printf:
   917                           	opt stack 0
   918  000100                     printf@f:
   919                           	opt stack 0
   920                           
   921                           ; 2 bytes @ 0x0
   922  000100                     	ds	10
   923  00010A                     _printf$2763:
   924                           	opt stack 0
   925                           
   926                           ; 4 bytes @ 0xA
   927  00010A                     	ds	4
   928  00010E                     printf@ap:
   929                           	opt stack 0
   930                           
   931                           ; 2 bytes @ 0xE
   932  00010E                     	ds	2
   933  000110                     printf@flag:
   934                           	opt stack 0
   935                           
   936                           ; 2 bytes @ 0x10
   937  000110                     	ds	2
   938  000112                     printf@prec:
   939                           	opt stack 0
   940                           
   941                           ; 2 bytes @ 0x12
   942  000112                     	ds	2
   943  000114                     printf@val:
   944                           	opt stack 0
   945                           
   946                           ; 4 bytes @ 0x14
   947  000114                     	ds	4
   948  000118                     printf@exp:
   949                           	opt stack 0
   950                           
   951                           ; 2 bytes @ 0x18
   952  000118                     	ds	2
   953  00011A                     printf@tmpval:
   954                           	opt stack 0
   955                           
   956                           ; 4 bytes @ 0x1A
   957  00011A                     	ds	4
   958  00011E                     printf@fval:
   959                           	opt stack 0
   960                           
   961                           ; 4 bytes @ 0x1E
   962  00011E                     	ds	4
   963  000122                     printf@c:
   964                           	opt stack 0
   965                           
   966                           ; 1 bytes @ 0x22
   967  000122                     	ds	1
   968                           tblptru	equ	0xFF8
   969                           tblptrh	equ	0xFF7
   970                           tblptrl	equ	0xFF6
   971                           tablat	equ	0xFF5
   972                           postinc0	equ	0xFEE
   973                           wreg	equ	0xFE8
   974                           postdec1	equ	0xFE5
   975                           fsr1l	equ	0xFE1
   976                           
   977                           	psect	cstackBANK0
   978  000060                     __pcstackBANK0:
   979                           	opt stack 0
   980  000060                     i1putch@val:
   981                           	opt stack 0
   982                           
   983                           ; 1 bytes @ 0x0
   984  000060                     	ds	1
   985  000061                     ??_isr:
   986                           
   987                           ; 1 bytes @ 0x1
   988  000061                     	ds	17
   989  000072                     ??_lcd_read_4bits:
   990  000072                     ?___wmul:
   991                           	opt stack 0
   992  000072                     ?___awmod:
   993                           	opt stack 0
   994  000072                     ?__tdiv_to_l_:
   995                           	opt stack 0
   996  000072                     ?__div_to_l_:
   997                           	opt stack 0
   998  000072                     ?___fldiv:
   999                           	opt stack 0
  1000  000072                     ?___flneg:
  1001                           	opt stack 0
  1002  000072                     ?___lldiv:
  1003                           	opt stack 0
  1004  000072                     ?___xxtofl:
  1005                           	opt stack 0
  1006  000072                     _lcd_send_4bits$1593:
  1007                           	opt stack 0
  1008  000072                     readEEPROM@adr:
  1009                           	opt stack 0
  1010  000072                     delay_ms@del:
  1011                           	opt stack 0
  1012  000072                     setPWM2duty@actuator:
  1013                           	opt stack 0
  1014  000072                     ___wmul@multiplier:
  1015                           	opt stack 0
  1016  000072                     ___awmod@dividend:
  1017                           	opt stack 0
  1018  000072                     __div_to_l_@f1:
  1019                           	opt stack 0
  1020  000072                     ___flge@ff1:
  1021                           	opt stack 0
  1022  000072                     ___flneg@f1:
  1023                           	opt stack 0
  1024  000072                     __tdiv_to_l_@f1:
  1025                           	opt stack 0
  1026  000072                     ___lldiv@dividend:
  1027                           	opt stack 0
  1028  000072                     ___fldiv@b:
  1029                           	opt stack 0
  1030  000072                     ___xxtofl@val:
  1031                           	opt stack 0
  1032                           
  1033                           ; 4 bytes @ 0x12
  1034  000072                     	ds	1
  1035  000073                     lcd_read_4bits@n:
  1036                           	opt stack 0
  1037  000073                     _lcd_send_4bits$1594:
  1038                           	opt stack 0
  1039                           
  1040                           ; 1 bytes @ 0x13
  1041  000073                     	ds	1
  1042  000074                     ??_delay_ms:
  1043  000074                     ??_setPWM2duty:
  1044  000074                     lcd_read_byte@low:
  1045                           	opt stack 0
  1046  000074                     _lcd_send_4bits$1595:
  1047                           	opt stack 0
  1048  000074                     ___wmul@multiplicand:
  1049                           	opt stack 0
  1050  000074                     ___awmod@divisor:
  1051                           	opt stack 0
  1052                           
  1053                           ; 2 bytes @ 0x14
  1054  000074                     	ds	1
  1055  000075                     lcd_read_byte@high:
  1056                           	opt stack 0
  1057  000075                     _lcd_send_4bits$1596:
  1058                           	opt stack 0
  1059  000075                     delay_ms@i:
  1060                           	opt stack 0
  1061                           
  1062                           ; 2 bytes @ 0x15
  1063  000075                     	ds	1
  1064  000076                     ??___xxtofl:
  1065  000076                     lcd_send_4bits@n:
  1066                           	opt stack 0
  1067  000076                     ___awmod@counter:
  1068                           	opt stack 0
  1069  000076                     setPWM2duty@act:
  1070                           	opt stack 0
  1071  000076                     ___wmul@product:
  1072                           	opt stack 0
  1073  000076                     __div_to_l_@f2:
  1074                           	opt stack 0
  1075  000076                     ___flge@ff2:
  1076                           	opt stack 0
  1077  000076                     __tdiv_to_l_@f2:
  1078                           	opt stack 0
  1079  000076                     ___lldiv@divisor:
  1080                           	opt stack 0
  1081  000076                     ___fldiv@a:
  1082                           	opt stack 0
  1083                           
  1084                           ; 4 bytes @ 0x16
  1085  000076                     	ds	1
  1086  000077                     lcd_send_byte@n:
  1087                           	opt stack 0
  1088  000077                     ___awmod@sign:
  1089                           	opt stack 0
  1090                           
  1091                           ; 1 bytes @ 0x17
  1092  000077                     	ds	1
  1093  000078                     ??_lcd_send_byte:
  1094  000078                     ?___awdiv:
  1095                           	opt stack 0
  1096  000078                     ___awdiv@dividend:
  1097                           	opt stack 0
  1098                           
  1099                           ; 2 bytes @ 0x18
  1100  000078                     	ds	1
  1101  000079                     lcd_send_byte@address:
  1102                           	opt stack 0
  1103                           
  1104                           ; 1 bytes @ 0x19
  1105  000079                     	ds	1
  1106  00007A                     ??__tdiv_to_l_:
  1107  00007A                     ??___fldiv:
  1108  00007A                     ??_lcd_init:
  1109  00007A                     ??___flge:
  1110  00007A                     lcd_gotoxy@fila:
  1111                           	opt stack 0
  1112  00007A                     ___xxtofl@sign:
  1113                           	opt stack 0
  1114  00007A                     ___awdiv@divisor:
  1115                           	opt stack 0
  1116  00007A                     __div_to_l_@quot:
  1117                           	opt stack 0
  1118  00007A                     ___lldiv@quotient:
  1119                           	opt stack 0
  1120                           
  1121                           ; 4 bytes @ 0x1A
  1122  00007A                     	ds	1
  1123  00007B                     lcd_gotoxy@pos:
  1124                           	opt stack 0
  1125  00007B                     ___xxtofl@exp:
  1126                           	opt stack 0
  1127  00007B                     lcd_init@LCD_INIT_STRING:
  1128                           	opt stack 0
  1129                           
  1130                           ; 4 bytes @ 0x1B
  1131  00007B                     	ds	1
  1132  00007C                     lcd_gotoxy@address:
  1133                           	opt stack 0
  1134  00007C                     ___awdiv@counter:
  1135                           	opt stack 0
  1136  00007C                     ___xxtofl@arg:
  1137                           	opt stack 0
  1138                           
  1139                           ; 4 bytes @ 0x1C
  1140  00007C                     	ds	1
  1141  00007D                     ??_lcd_putc:
  1142  00007D                     ___awdiv@sign:
  1143                           	opt stack 0
  1144  00007D                     __tdiv_to_l_@quot:
  1145                           	opt stack 0
  1146                           
  1147                           ; 4 bytes @ 0x1D
  1148  00007D                     	ds	1
  1149  00007E                     lcd_putc@cha:
  1150                           	opt stack 0
  1151  00007E                     __div_to_l_@cntr:
  1152                           	opt stack 0
  1153  00007E                     ___lldiv@counter:
  1154                           	opt stack 0
  1155  00007E                     ___fldiv@sign:
  1156                           	opt stack 0
  1157  00007E                     ___awdiv@quotient:
  1158                           	opt stack 0
  1159                           
  1160                           ; 2 bytes @ 0x1E
  1161  00007E                     	ds	1
  1162  00007F                     ?___llmod:
  1163                           	opt stack 0
  1164  00007F                     lcd_init@i:
  1165                           	opt stack 0
  1166  00007F                     putch@val:
  1167                           	opt stack 0
  1168  00007F                     __div_to_l_@exp1:
  1169                           	opt stack 0
  1170  00007F                     ___llmod@dividend:
  1171                           	opt stack 0
  1172  00007F                     ___fldiv@rem:
  1173                           	opt stack 0
  1174                           
  1175                           ; 4 bytes @ 0x1F
  1176  00007F                     	ds	1
  1177  000080                     ?___flmul:
  1178                           	opt stack 0
  1179  000080                     ___flmul@b:
  1180                           	opt stack 0
  1181                           
  1182                           ; 4 bytes @ 0x20
  1183  000080                     	ds	1
  1184  000081                     __tdiv_to_l_@cntr:
  1185                           	opt stack 0
  1186                           
  1187                           ; 1 bytes @ 0x21
  1188  000081                     	ds	1
  1189  000082                     __tdiv_to_l_@exp1:
  1190                           	opt stack 0
  1191                           
  1192                           ; 1 bytes @ 0x22
  1193  000082                     	ds	1
  1194  000083                     ___fldiv@new_exp:
  1195                           	opt stack 0
  1196  000083                     ___llmod@divisor:
  1197                           	opt stack 0
  1198                           
  1199                           ; 4 bytes @ 0x23
  1200  000083                     	ds	1
  1201  000084                     ___flmul@a:
  1202                           	opt stack 0
  1203                           
  1204                           ; 4 bytes @ 0x24
  1205  000084                     	ds	1
  1206  000085                     ___fldiv@grs:
  1207                           	opt stack 0
  1208                           
  1209                           ; 4 bytes @ 0x25
  1210  000085                     	ds	2
  1211  000087                     ___llmod@counter:
  1212                           	opt stack 0
  1213                           
  1214                           ; 1 bytes @ 0x27
  1215  000087                     	ds	1
  1216  000088                     ??___flmul:
  1217                           
  1218                           ; 1 bytes @ 0x28
  1219  000088                     	ds	1
  1220  000089                     ___fldiv@bexp:
  1221                           	opt stack 0
  1222                           
  1223                           ; 1 bytes @ 0x29
  1224  000089                     	ds	1
  1225  00008A                     ___fldiv@aexp:
  1226                           	opt stack 0
  1227                           
  1228                           ; 1 bytes @ 0x2A
  1229  00008A                     	ds	2
  1230  00008C                     ___flmul@sign:
  1231                           	opt stack 0
  1232                           
  1233                           ; 1 bytes @ 0x2C
  1234  00008C                     	ds	1
  1235  00008D                     ___flmul@aexp:
  1236                           	opt stack 0
  1237                           
  1238                           ; 1 bytes @ 0x2D
  1239  00008D                     	ds	1
  1240  00008E                     ___flmul@grs:
  1241                           	opt stack 0
  1242                           
  1243                           ; 4 bytes @ 0x2E
  1244  00008E                     	ds	4
  1245  000092                     ___flmul@bexp:
  1246                           	opt stack 0
  1247                           
  1248                           ; 1 bytes @ 0x32
  1249  000092                     	ds	1
  1250  000093                     ___flmul@prod:
  1251                           	opt stack 0
  1252                           
  1253                           ; 4 bytes @ 0x33
  1254  000093                     	ds	4
  1255  000097                     ___flmul@temp:
  1256                           	opt stack 0
  1257                           
  1258                           ; 2 bytes @ 0x37
  1259  000097                     	ds	2
  1260  000099                     ?_fround:
  1261                           	opt stack 0
  1262  000099                     ?_scale:
  1263                           	opt stack 0
  1264  000099                     calcSysVars@temp:
  1265                           	opt stack 0
  1266                           
  1267                           ; 4 bytes @ 0x39
  1268  000099                     	ds	4
  1269  00009D                     _fround$2761:
  1270                           	opt stack 0
  1271  00009D                     _scale$2762:
  1272                           	opt stack 0
  1273                           
  1274                           ; 4 bytes @ 0x3D
  1275  00009D                     	ds	4
  1276  0000A1                     scale@scl:
  1277                           	opt stack 0
  1278  0000A1                     _fround$2760:
  1279                           	opt stack 0
  1280                           
  1281                           ; 4 bytes @ 0x41
  1282  0000A1                     	ds	1
  1283  0000A2                     ?___fltol:
  1284                           	opt stack 0
  1285  0000A2                     ___fltol@f1:
  1286                           	opt stack 0
  1287                           
  1288                           ; 4 bytes @ 0x42
  1289  0000A2                     	ds	3
  1290  0000A5                     fround@prec:
  1291                           	opt stack 0
  1292                           
  1293                           ; 1 bytes @ 0x45
  1294  0000A5                     	ds	1
  1295  0000A6                     ??___fltol:
  1296  0000A6                     ?___fladd:
  1297                           	opt stack 0
  1298  0000A6                     ___fladd@b:
  1299                           	opt stack 0
  1300                           
  1301                           ; 4 bytes @ 0x46
  1302  0000A6                     	ds	4
  1303  0000AA                     ___fltol@sign1:
  1304                           	opt stack 0
  1305  0000AA                     ___fladd@a:
  1306                           	opt stack 0
  1307                           
  1308                           ; 4 bytes @ 0x4A
  1309  0000AA                     	ds	1
  1310  0000AB                     ___fltol@exp1:
  1311                           	opt stack 0
  1312                           
  1313                           ; 1 bytes @ 0x4B
  1314  0000AB                     	ds	3
  1315  0000AE                     ??___fladd:
  1316                           
  1317                           ; 1 bytes @ 0x4E
  1318  0000AE                     	ds	8
  1319  0000B6                     ___fladd@signs:
  1320                           	opt stack 0
  1321                           
  1322                           ; 1 bytes @ 0x56
  1323  0000B6                     	ds	1
  1324  0000B7                     ___fladd@aexp:
  1325                           	opt stack 0
  1326                           
  1327                           ; 1 bytes @ 0x57
  1328  0000B7                     	ds	1
  1329  0000B8                     ___fladd@bexp:
  1330                           	opt stack 0
  1331                           
  1332                           ; 1 bytes @ 0x58
  1333  0000B8                     	ds	1
  1334  0000B9                     ___fladd@grs:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x59
  1338  0000B9                     	ds	1
  1339  0000BA                     ?___flsub:
  1340                           	opt stack 0
  1341  0000BA                     ___flsub@b:
  1342                           	opt stack 0
  1343                           
  1344                           ; 4 bytes @ 0x5A
  1345  0000BA                     	ds	4
  1346  0000BE                     ___flsub@a:
  1347                           	opt stack 0
  1348                           
  1349                           ; 4 bytes @ 0x5E
  1350  0000BE                     	ds	4
  1351  0000C2                     ??_printf:
  1352  0000C2                     
  1353                           ; 1 bytes @ 0x62
  1354  0000C2                     	ds	2
  1355  0000C4                     tblptru	equ	0xFF8
  1356                           tblptrh	equ	0xFF7
  1357                           tblptrl	equ	0xFF6
  1358                           tablat	equ	0xFF5
  1359                           postinc0	equ	0xFEE
  1360                           wreg	equ	0xFE8
  1361                           postdec1	equ	0xFE5
  1362                           fsr1l	equ	0xFE1
  1363                           
  1364                           ; 1 bytes @ 0x64
  1365                           
  1366                           	psect	cstackCOMRAM
  1367  000001                     __pcstackCOMRAM:
  1368                           	opt stack 0
  1369  000001                     i2setPWM2duty@actuator:
  1370                           	opt stack 0
  1371                           
  1372                           ; 2 bytes @ 0x0
  1373  000001                     	ds	2
  1374  000003                     ??i2_setPWM2duty:
  1375                           
  1376                           ; 1 bytes @ 0x2
  1377  000003                     	ds	2
  1378  000005                     i2setPWM2duty@act:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x4
  1382  000005                     	ds	2
  1383  000007                     ??_hp_isr:
  1384                           
  1385                           ; 1 bytes @ 0x6
  1386  000007                     	ds	14
  1387  000015                     ??i1_lcd_read_4bits:
  1388  000015                     i1_lcd_send_4bits$1593:
  1389                           	opt stack 0
  1390                           
  1391                           ; 1 bytes @ 0x14
  1392  000015                     	ds	1
  1393  000016                     i1lcd_read_4bits@n:
  1394                           	opt stack 0
  1395  000016                     i1_lcd_send_4bits$1594:
  1396                           	opt stack 0
  1397                           
  1398                           ; 1 bytes @ 0x15
  1399  000016                     	ds	1
  1400  000017                     i1lcd_read_byte@low:
  1401                           	opt stack 0
  1402  000017                     i1_lcd_send_4bits$1595:
  1403                           	opt stack 0
  1404                           
  1405                           ; 1 bytes @ 0x16
  1406  000017                     	ds	1
  1407  000018                     i1lcd_read_byte@high:
  1408                           	opt stack 0
  1409  000018                     i1_lcd_send_4bits$1596:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x17
  1413  000018                     	ds	1
  1414  000019                     i1lcd_send_4bits@n:
  1415                           	opt stack 0
  1416                           
  1417                           ; 1 bytes @ 0x18
  1418  000019                     	ds	1
  1419  00001A                     i1lcd_send_byte@n:
  1420                           	opt stack 0
  1421                           
  1422                           ; 1 bytes @ 0x19
  1423  00001A                     	ds	1
  1424  00001B                     ??i1_lcd_send_byte:
  1425                           
  1426                           ; 1 bytes @ 0x1A
  1427  00001B                     	ds	1
  1428  00001C                     i1lcd_send_byte@address:
  1429                           	opt stack 0
  1430                           
  1431                           ; 1 bytes @ 0x1B
  1432  00001C                     	ds	1
  1433  00001D                     i1lcd_gotoxy@fila:
  1434                           	opt stack 0
  1435                           
  1436                           ; 1 bytes @ 0x1C
  1437  00001D                     	ds	1
  1438  00001E                     i1lcd_gotoxy@pos:
  1439                           	opt stack 0
  1440                           
  1441                           ; 1 bytes @ 0x1D
  1442  00001E                     	ds	1
  1443  00001F                     i1lcd_gotoxy@address:
  1444                           	opt stack 0
  1445                           
  1446                           ; 1 bytes @ 0x1E
  1447  00001F                     	ds	1
  1448  000020                     ??i1_lcd_putc:
  1449                           
  1450                           ; 1 bytes @ 0x1F
  1451  000020                     	ds	1
  1452  000021                     i1lcd_putc@cha:
  1453                           	opt stack 0
  1454                           
  1455                           ; 1 bytes @ 0x20
  1456  000021                     	ds	1
  1457  000022                     tblptru	equ	0xFF8
  1458                           tblptrh	equ	0xFF7
  1459                           tblptrl	equ	0xFF6
  1460                           tablat	equ	0xFF5
  1461                           postinc0	equ	0xFEE
  1462                           wreg	equ	0xFE8
  1463                           postdec1	equ	0xFE5
  1464                           fsr1l	equ	0xFE1
  1465                           
  1466                           ; 1 bytes @ 0x21
  1467 ;;
  1468 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1469 ;;
  1470 ;; *************** function _main *****************
  1471 ;; Defined at:
  1472 ;;		line 25 in file "source/main.c"
  1473 ;; Parameters:    Size  Location     Type
  1474 ;;		None
  1475 ;; Auto vars:     Size  Location     Type
  1476 ;;		None
  1477 ;; Return value:  Size  Location     Type
  1478 ;;                  1    wreg      void 
  1479 ;; Registers used:
  1480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1481 ;; Tracked objects:
  1482 ;;		On entry : 0/0
  1483 ;;		On exit  : 0/0
  1484 ;;		Unchanged: 0/0
  1485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1486 ;;      Params:         0       0       0       0       0       0       0
  1487 ;;      Locals:         0       0       0       0       0       0       0
  1488 ;;      Temps:          0       0       0       0       0       0       0
  1489 ;;      Totals:         0       0       0       0       0       0       0
  1490 ;;Total ram usage:        0 bytes
  1491 ;; Hardware stack levels required when called:   20
  1492 ;; This function calls:
  1493 ;;		_EEPROMConfig
  1494 ;;		_PWM2Config
  1495 ;;		_UARTConfig
  1496 ;;		_clockConfig
  1497 ;;		_delay_ms
  1498 ;;		_drawScreen
  1499 ;;		_execCombinations
  1500 ;;		_interruptConfig
  1501 ;;		_ioConfig
  1502 ;;		_ioInitStt
  1503 ;;		_lcd_init
  1504 ;;		_longPressDOWN
  1505 ;;		_longPressENTER
  1506 ;;		_longPressRETRO
  1507 ;;		_longPressUP
  1508 ;;		_pressDOWN
  1509 ;;		_pressENTER
  1510 ;;		_pressRETRO
  1511 ;;		_pressUP
  1512 ;;		_releaseDOWN
  1513 ;;		_releaseENTER
  1514 ;;		_releaseRETRO
  1515 ;;		_releaseUP
  1516 ;;		_sysParamInit
  1517 ;; This function is called by:
  1518 ;;		Startup code after reset
  1519 ;; This function uses a non-reentrant model
  1520 ;;
  1521                           
  1522                           	psect	text0
  1523  001AB6                     __ptext0:
  1524                           	opt stack 0
  1525  001AB6                     _main:
  1526                           	opt stack 11
  1527                           
  1528                           ;main.c: 27: clockConfig();
  1529                           
  1530                           ;incstack = 0
  1531  001AB6  EC80  F01C         	call	_clockConfig	;wreg free
  1532                           
  1533                           ;main.c: 28: ioInitStt();
  1534  001ABA  EC2B  F01D         	call	_ioInitStt	;wreg free
  1535                           
  1536                           ;main.c: 29: EEPROMConfig();
  1537  001ABE  EC37  F01D         	call	_EEPROMConfig	;wreg free
  1538                           
  1539                           ;main.c: 30: sysParamInit();
  1540  001AC2  EC64  F015         	call	_sysParamInit	;wreg free
  1541                           
  1542                           ;main.c: 31: ioConfig();
  1543  001AC6  EC3A  F01C         	call	_ioConfig	;wreg free
  1544                           
  1545                           ;main.c: 32: lcd_init();
  1546  001ACA  EC2D  F017         	call	_lcd_init	;wreg free
  1547                           
  1548                           ;main.c: 33: PWM2Config();
  1549  001ACE  EC80  F01A         	call	_PWM2Config	;wreg free
  1550                           
  1551                           ;main.c: 34: UARTConfig();
  1552  001AD2  ECE8  F01B         	call	_UARTConfig	;wreg free
  1553                           
  1554                           ;main.c: 35: interruptConfig();
  1555  001AD6  EC2F  F01D         	call	_interruptConfig	;wreg free
  1556  001ADA                     l468:
  1557  001ADA  0004               	clrwdt		;# 
  1558                           
  1559                           ;main.c: 39: drawScreen();
  1560  001ADC  ECB7  F01C         	call	_drawScreen	;wreg free
  1561                           
  1562                           ;main.c: 40: if(!PORTAbits.RA2 && lastSttUP) {
  1563  001AE0  B480               	btfsc	3968,2,c	;volatile
  1564  001AE2  D010               	goto	l469
  1565  001AE4  0100               	movlb	0	; () banked
  1566  001AE6  51D9               	movf	_lastSttUP& (0+255),w,b
  1567  001AE8  0100               	movlb	0	; () banked
  1568  001AEA  B4D8               	btfsc	status,2,c
  1569  001AEC  D00B               	goto	l469
  1570                           
  1571                           ; BSR set to: 0
  1572                           ;main.c: 41: lastSttUP = 0;
  1573  001AEE  0E00               	movlw	0
  1574  001AF0  0100               	movlb	0	; () banked
  1575  001AF2  6FD9               	movwf	_lastSttUP& (0+255),b
  1576                           
  1577                           ; BSR set to: 0
  1578                           ;main.c: 42: delay_ms(200);
  1579  001AF4  0E00               	movlw	0
  1580  001AF6  0100               	movlb	0	; () banked
  1581  001AF8  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1582  001AFA  0EC8               	movlw	200
  1583  001AFC  6F72               	movwf	delay_ms@del& (0+255),b
  1584  001AFE  EC4C  F01B         	call	_delay_ms	;wreg free
  1585                           
  1586                           ;main.c: 43: }else if(PORTAbits.RA2 && !lastSttUP) {
  1587  001B02  D044               	goto	l6843
  1588  001B04                     l469:
  1589  001B04  A480               	btfss	3968,2,c	;volatile
  1590  001B06  D016               	goto	l6821
  1591  001B08  0100               	movlb	0	; () banked
  1592  001B0A  51D9               	movf	_lastSttUP& (0+255),w,b
  1593  001B0C  0100               	movlb	0	; () banked
  1594  001B0E  A4D8               	btfss	status,2,c
  1595  001B10  D011               	goto	l6821
  1596                           
  1597                           ; BSR set to: 0
  1598                           ;main.c: 44: lastSttUP = 1;
  1599  001B12  0E01               	movlw	1
  1600  001B14  0100               	movlb	0	; () banked
  1601  001B16  6FD9               	movwf	_lastSttUP& (0+255),b
  1602                           
  1603                           ; BSR set to: 0
  1604                           ;main.c: 45: if(holdUPcont < 10)
  1605  001B18  0E0A               	movlw	10
  1606  001B1A  0100               	movlb	0	; () banked
  1607  001B1C  61EA               	cpfslt	_holdUPcont& (0+255),b
  1608  001B1E  D002               	goto	l472
  1609                           
  1610                           ; BSR set to: 0
  1611                           ;main.c: 46: pressUP();
  1612  001B20  EC6B  F01C         	call	_pressUP	;wreg free
  1613  001B24                     l472:
  1614                           
  1615                           ;main.c: 47: delay_ms(50);
  1616  001B24  0E00               	movlw	0
  1617  001B26  0100               	movlb	0	; () banked
  1618  001B28  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1619  001B2A  0E32               	movlw	50
  1620  001B2C  6F72               	movwf	delay_ms@del& (0+255),b
  1621  001B2E  EC4C  F01B         	call	_delay_ms	;wreg free
  1622                           
  1623                           ;main.c: 48: }else if(PORTAbits.RA2 == lastSttUP) {
  1624  001B32  D02C               	goto	l6843
  1625  001B34                     l6821:
  1626  001B34  A480               	btfss	3968,2,c	;volatile
  1627  001B36  D002               	goto	u7880
  1628  001B38  0E01               	movlw	1
  1629  001B3A  D001               	goto	u7886
  1630  001B3C                     u7880:
  1631  001B3C  0E00               	movlw	0
  1632  001B3E                     u7886:
  1633  001B3E  0100               	movlb	0	; () banked
  1634  001B40  19D9               	xorwf	_lastSttUP& (0+255),w,b
  1635  001B42  A4D8               	btfss	status,2,c
  1636  001B44  D023               	goto	l6843
  1637                           
  1638                           ; BSR set to: 0
  1639                           ;main.c: 49: if(PORTAbits.RA2) {
  1640  001B46  A480               	btfss	3968,2,c	;volatile
  1641  001B48  D006               	goto	l6829
  1642                           
  1643                           ; BSR set to: 0
  1644                           ;main.c: 50: holdUPcont = 0;
  1645  001B4A  0E00               	movlw	0
  1646  001B4C  0100               	movlb	0	; () banked
  1647  001B4E  6FEA               	movwf	_holdUPcont& (0+255),b
  1648                           
  1649                           ; BSR set to: 0
  1650                           ;main.c: 51: releaseUP();
  1651  001B50  EC0D  F01D         	call	_releaseUP	;wreg free
  1652                           
  1653                           ;main.c: 52: }
  1654  001B54  D01B               	goto	l6843
  1655  001B56                     l6829:
  1656                           
  1657                           ;main.c: 53: else {
  1658                           ;main.c: 54: if(!UPsecurLock)
  1659  001B56  0100               	movlb	0	; () banked
  1660  001B58  51E5               	movf	_UPsecurLock& (0+255),w,b
  1661  001B5A  A4D8               	btfss	status,2,c
  1662  001B5C  D002               	goto	l6833
  1663                           
  1664                           ; BSR set to: 0
  1665                           ;main.c: 55: holdUPcont++;
  1666  001B5E  0100               	movlb	0	; () banked
  1667  001B60  2BEA               	incf	_holdUPcont& (0+255),f,b
  1668  001B62                     l6833:
  1669                           
  1670                           ; BSR set to: 0
  1671                           ;main.c: 56: if(holdUPcont > 9) {
  1672  001B62  0E09               	movlw	9
  1673  001B64  0100               	movlb	0	; () banked
  1674  001B66  65EA               	cpfsgt	_holdUPcont& (0+255),b
  1675  001B68  D00A               	goto	l6841
  1676                           
  1677                           ; BSR set to: 0
  1678                           ;main.c: 57: if(holdUPcont < 26)
  1679  001B6A  0E1A               	movlw	26
  1680  001B6C  0100               	movlb	0	; () banked
  1681  001B6E  61EA               	cpfslt	_holdUPcont& (0+255),b
  1682  001B70  D003               	goto	l6839
  1683                           
  1684                           ; BSR set to: 0
  1685                           ;main.c: 58: longPressUP();
  1686  001B72  ECAD  F018         	call	_longPressUP	;wreg free
  1687  001B76  D003               	goto	l6841
  1688  001B78                     l6839:
  1689                           
  1690                           ;main.c: 59: else
  1691                           ;main.c: 60: UPsecurLock = 1;
  1692  001B78  0E01               	movlw	1
  1693  001B7A  0100               	movlb	0	; () banked
  1694  001B7C  6FE5               	movwf	_UPsecurLock& (0+255),b
  1695  001B7E                     l6841:
  1696                           
  1697                           ;main.c: 61: }
  1698                           ;main.c: 62: delay_ms(200);
  1699  001B7E  0E00               	movlw	0
  1700  001B80  0100               	movlb	0	; () banked
  1701  001B82  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1702  001B84  0EC8               	movlw	200
  1703  001B86  6F72               	movwf	delay_ms@del& (0+255),b
  1704  001B88  EC4C  F01B         	call	_delay_ms	;wreg free
  1705  001B8C                     l6843:
  1706                           
  1707                           ;main.c: 63: }
  1708                           ;main.c: 64: }
  1709                           ;main.c: 65: if(!PORTAbits.RA3 && lastSttDOWN) {
  1710  001B8C  B680               	btfsc	3968,3,c	;volatile
  1711  001B8E  D010               	goto	l481
  1712  001B90  0100               	movlb	0	; () banked
  1713  001B92  51D6               	movf	_lastSttDOWN& (0+255),w,b
  1714  001B94  0100               	movlb	0	; () banked
  1715  001B96  B4D8               	btfsc	status,2,c
  1716  001B98  D00B               	goto	l481
  1717                           
  1718                           ; BSR set to: 0
  1719                           ;main.c: 66: lastSttDOWN = 0;
  1720  001B9A  0E00               	movlw	0
  1721  001B9C  0100               	movlb	0	; () banked
  1722  001B9E  6FD6               	movwf	_lastSttDOWN& (0+255),b
  1723                           
  1724                           ; BSR set to: 0
  1725                           ;main.c: 67: delay_ms(200);
  1726  001BA0  0E00               	movlw	0
  1727  001BA2  0100               	movlb	0	; () banked
  1728  001BA4  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1729  001BA6  0EC8               	movlw	200
  1730  001BA8  6F72               	movwf	delay_ms@del& (0+255),b
  1731  001BAA  EC4C  F01B         	call	_delay_ms	;wreg free
  1732                           
  1733                           ;main.c: 68: }else if(PORTAbits.RA3 && !lastSttDOWN) {
  1734  001BAE  D044               	goto	l6881
  1735  001BB0                     l481:
  1736  001BB0  A680               	btfss	3968,3,c	;volatile
  1737  001BB2  D016               	goto	l6859
  1738  001BB4  0100               	movlb	0	; () banked
  1739  001BB6  51D6               	movf	_lastSttDOWN& (0+255),w,b
  1740  001BB8  0100               	movlb	0	; () banked
  1741  001BBA  A4D8               	btfss	status,2,c
  1742  001BBC  D011               	goto	l6859
  1743                           
  1744                           ; BSR set to: 0
  1745                           ;main.c: 69: lastSttDOWN = 1;
  1746  001BBE  0E01               	movlw	1
  1747  001BC0  0100               	movlb	0	; () banked
  1748  001BC2  6FD6               	movwf	_lastSttDOWN& (0+255),b
  1749                           
  1750                           ; BSR set to: 0
  1751                           ;main.c: 70: if(holdDOWNcont < 10)
  1752  001BC4  0E0A               	movlw	10
  1753  001BC6  0100               	movlb	0	; () banked
  1754  001BC8  61E7               	cpfslt	_holdDOWNcont& (0+255),b
  1755  001BCA  D002               	goto	l484
  1756                           
  1757                           ; BSR set to: 0
  1758                           ;main.c: 71: pressDOWN();
  1759  001BCC  EC94  F01C         	call	_pressDOWN	;wreg free
  1760  001BD0                     l484:
  1761                           
  1762                           ;main.c: 72: delay_ms(50);
  1763  001BD0  0E00               	movlw	0
  1764  001BD2  0100               	movlb	0	; () banked
  1765  001BD4  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1766  001BD6  0E32               	movlw	50
  1767  001BD8  6F72               	movwf	delay_ms@del& (0+255),b
  1768  001BDA  EC4C  F01B         	call	_delay_ms	;wreg free
  1769                           
  1770                           ;main.c: 73: }else if(PORTAbits.RA3 == lastSttDOWN) {
  1771  001BDE  D02C               	goto	l6881
  1772  001BE0                     l6859:
  1773  001BE0  A680               	btfss	3968,3,c	;volatile
  1774  001BE2  D002               	goto	u7990
  1775  001BE4  0E01               	movlw	1
  1776  001BE6  D001               	goto	u7996
  1777  001BE8                     u7990:
  1778  001BE8  0E00               	movlw	0
  1779  001BEA                     u7996:
  1780  001BEA  0100               	movlb	0	; () banked
  1781  001BEC  19D6               	xorwf	_lastSttDOWN& (0+255),w,b
  1782  001BEE  A4D8               	btfss	status,2,c
  1783  001BF0  D023               	goto	l6881
  1784                           
  1785                           ; BSR set to: 0
  1786                           ;main.c: 74: if(PORTAbits.RA3) {
  1787  001BF2  A680               	btfss	3968,3,c	;volatile
  1788  001BF4  D006               	goto	l6867
  1789                           
  1790                           ; BSR set to: 0
  1791                           ;main.c: 75: holdDOWNcont = 0;
  1792  001BF6  0E00               	movlw	0
  1793  001BF8  0100               	movlb	0	; () banked
  1794  001BFA  6FE7               	movwf	_holdDOWNcont& (0+255),b
  1795                           
  1796                           ; BSR set to: 0
  1797                           ;main.c: 76: releaseDOWN();
  1798  001BFC  EC1F  F01D         	call	_releaseDOWN	;wreg free
  1799                           
  1800                           ;main.c: 77: }
  1801  001C00  D01B               	goto	l6881
  1802  001C02                     l6867:
  1803                           
  1804                           ;main.c: 78: else {
  1805                           ;main.c: 79: if(!DOWNsecurLock)
  1806  001C02  0100               	movlb	0	; () banked
  1807  001C04  51E2               	movf	_DOWNsecurLock& (0+255),w,b
  1808  001C06  A4D8               	btfss	status,2,c
  1809  001C08  D002               	goto	l6871
  1810                           
  1811                           ; BSR set to: 0
  1812                           ;main.c: 80: holdDOWNcont++;
  1813  001C0A  0100               	movlb	0	; () banked
  1814  001C0C  2BE7               	incf	_holdDOWNcont& (0+255),f,b
  1815  001C0E                     l6871:
  1816                           
  1817                           ; BSR set to: 0
  1818                           ;main.c: 81: if(holdDOWNcont > 9) {
  1819  001C0E  0E09               	movlw	9
  1820  001C10  0100               	movlb	0	; () banked
  1821  001C12  65E7               	cpfsgt	_holdDOWNcont& (0+255),b
  1822  001C14  D00A               	goto	l6879
  1823                           
  1824                           ; BSR set to: 0
  1825                           ;main.c: 82: if(holdDOWNcont < 26)
  1826  001C16  0E1A               	movlw	26
  1827  001C18  0100               	movlb	0	; () banked
  1828  001C1A  61E7               	cpfslt	_holdDOWNcont& (0+255),b
  1829  001C1C  D003               	goto	l6877
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;main.c: 83: longPressDOWN();
  1833  001C1E  EC3C  F01D         	call	_longPressDOWN	;wreg free
  1834  001C22  D003               	goto	l6879
  1835  001C24                     l6877:
  1836                           
  1837                           ;main.c: 84: else
  1838                           ;main.c: 85: DOWNsecurLock = 1;
  1839  001C24  0E01               	movlw	1
  1840  001C26  0100               	movlb	0	; () banked
  1841  001C28  6FE2               	movwf	_DOWNsecurLock& (0+255),b
  1842  001C2A                     l6879:
  1843                           
  1844                           ;main.c: 86: }
  1845                           ;main.c: 87: delay_ms(200);
  1846  001C2A  0E00               	movlw	0
  1847  001C2C  0100               	movlb	0	; () banked
  1848  001C2E  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1849  001C30  0EC8               	movlw	200
  1850  001C32  6F72               	movwf	delay_ms@del& (0+255),b
  1851  001C34  EC4C  F01B         	call	_delay_ms	;wreg free
  1852  001C38                     l6881:
  1853                           
  1854                           ;main.c: 88: }
  1855                           ;main.c: 89: }
  1856                           ;main.c: 90: if(!PORTAbits.RA4 && lastSttRETRO) {
  1857  001C38  B880               	btfsc	3968,4,c	;volatile
  1858  001C3A  D010               	goto	l493
  1859  001C3C  0100               	movlb	0	; () banked
  1860  001C3E  51D8               	movf	_lastSttRETRO& (0+255),w,b
  1861  001C40  0100               	movlb	0	; () banked
  1862  001C42  B4D8               	btfsc	status,2,c
  1863  001C44  D00B               	goto	l493
  1864                           
  1865                           ; BSR set to: 0
  1866                           ;main.c: 91: lastSttRETRO = 0;
  1867  001C46  0E00               	movlw	0
  1868  001C48  0100               	movlb	0	; () banked
  1869  001C4A  6FD8               	movwf	_lastSttRETRO& (0+255),b
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;main.c: 92: delay_ms(200);
  1873  001C4C  0E00               	movlw	0
  1874  001C4E  0100               	movlb	0	; () banked
  1875  001C50  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1876  001C52  0EC8               	movlw	200
  1877  001C54  6F72               	movwf	delay_ms@del& (0+255),b
  1878  001C56  EC4C  F01B         	call	_delay_ms	;wreg free
  1879                           
  1880                           ;main.c: 93: }else if(PORTAbits.RA4 && !lastSttRETRO) {
  1881  001C5A  D044               	goto	l6921
  1882  001C5C                     l493:
  1883  001C5C  A880               	btfss	3968,4,c	;volatile
  1884  001C5E  D016               	goto	l6899
  1885  001C60  0100               	movlb	0	; () banked
  1886  001C62  51D8               	movf	_lastSttRETRO& (0+255),w,b
  1887  001C64  0100               	movlb	0	; () banked
  1888  001C66  A4D8               	btfss	status,2,c
  1889  001C68  D011               	goto	l6899
  1890                           
  1891                           ; BSR set to: 0
  1892                           ;main.c: 94: lastSttRETRO = 1;
  1893  001C6A  0E01               	movlw	1
  1894  001C6C  0100               	movlb	0	; () banked
  1895  001C6E  6FD8               	movwf	_lastSttRETRO& (0+255),b
  1896                           
  1897                           ; BSR set to: 0
  1898                           ;main.c: 95: if(holdRETROcont < 10)
  1899  001C70  0E0A               	movlw	10
  1900  001C72  0100               	movlb	0	; () banked
  1901  001C74  61E9               	cpfslt	_holdRETROcont& (0+255),b
  1902  001C76  D002               	goto	l6897
  1903                           
  1904                           ; BSR set to: 0
  1905                           ;main.c: 96: pressRETRO();
  1906  001C78  EC3A  F01D         	call	_pressRETRO	;wreg free
  1907  001C7C                     l6897:
  1908                           
  1909                           ;main.c: 97: delay_ms(50);
  1910  001C7C  0E00               	movlw	0
  1911  001C7E  0100               	movlb	0	; () banked
  1912  001C80  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1913  001C82  0E32               	movlw	50
  1914  001C84  6F72               	movwf	delay_ms@del& (0+255),b
  1915  001C86  EC4C  F01B         	call	_delay_ms	;wreg free
  1916                           
  1917                           ;main.c: 98: }else if(PORTAbits.RA4 == lastSttRETRO) {
  1918  001C8A  D02C               	goto	l6921
  1919  001C8C                     l6899:
  1920  001C8C  A880               	btfss	3968,4,c	;volatile
  1921  001C8E  D002               	goto	u8100
  1922  001C90  0E01               	movlw	1
  1923  001C92  D001               	goto	u8106
  1924  001C94                     u8100:
  1925  001C94  0E00               	movlw	0
  1926  001C96                     u8106:
  1927  001C96  0100               	movlb	0	; () banked
  1928  001C98  19D8               	xorwf	_lastSttRETRO& (0+255),w,b
  1929  001C9A  A4D8               	btfss	status,2,c
  1930  001C9C  D023               	goto	l6921
  1931                           
  1932                           ; BSR set to: 0
  1933                           ;main.c: 99: if(PORTAbits.RA4) {
  1934  001C9E  A880               	btfss	3968,4,c	;volatile
  1935  001CA0  D006               	goto	l6907
  1936                           
  1937                           ; BSR set to: 0
  1938                           ;main.c: 100: holdRETROcont = 0;
  1939  001CA2  0E00               	movlw	0
  1940  001CA4  0100               	movlb	0	; () banked
  1941  001CA6  6FE9               	movwf	_holdRETROcont& (0+255),b
  1942                           
  1943                           ; BSR set to: 0
  1944                           ;main.c: 101: releaseRETRO();
  1945  001CA8  EC13  F01D         	call	_releaseRETRO	;wreg free
  1946                           
  1947                           ;main.c: 102: }
  1948  001CAC  D01B               	goto	l6921
  1949  001CAE                     l6907:
  1950                           
  1951                           ;main.c: 103: else {
  1952                           ;main.c: 104: if(!RETROsecurLock)
  1953  001CAE  0100               	movlb	0	; () banked
  1954  001CB0  51E4               	movf	_RETROsecurLock& (0+255),w,b
  1955  001CB2  A4D8               	btfss	status,2,c
  1956  001CB4  D002               	goto	l6911
  1957                           
  1958                           ; BSR set to: 0
  1959                           ;main.c: 105: holdRETROcont++;
  1960  001CB6  0100               	movlb	0	; () banked
  1961  001CB8  2BE9               	incf	_holdRETROcont& (0+255),f,b
  1962  001CBA                     l6911:
  1963                           
  1964                           ; BSR set to: 0
  1965                           ;main.c: 106: if(holdRETROcont > 9) {
  1966  001CBA  0E09               	movlw	9
  1967  001CBC  0100               	movlb	0	; () banked
  1968  001CBE  65E9               	cpfsgt	_holdRETROcont& (0+255),b
  1969  001CC0  D00A               	goto	l6919
  1970                           
  1971                           ; BSR set to: 0
  1972                           ;main.c: 107: if(holdRETROcont < 26)
  1973  001CC2  0E1A               	movlw	26
  1974  001CC4  0100               	movlb	0	; () banked
  1975  001CC6  61E9               	cpfslt	_holdRETROcont& (0+255),b
  1976  001CC8  D003               	goto	l6917
  1977                           
  1978                           ; BSR set to: 0
  1979                           ;main.c: 108: longPressRETRO();
  1980  001CCA  EC25  F01D         	call	_longPressRETRO	;wreg free
  1981  001CCE  D003               	goto	l6919
  1982  001CD0                     l6917:
  1983                           
  1984                           ;main.c: 109: else
  1985                           ;main.c: 110: RETROsecurLock = 1;
  1986  001CD0  0E01               	movlw	1
  1987  001CD2  0100               	movlb	0	; () banked
  1988  001CD4  6FE4               	movwf	_RETROsecurLock& (0+255),b
  1989  001CD6                     l6919:
  1990                           
  1991                           ;main.c: 111: }
  1992                           ;main.c: 112: delay_ms(200);
  1993  001CD6  0E00               	movlw	0
  1994  001CD8  0100               	movlb	0	; () banked
  1995  001CDA  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  1996  001CDC  0EC8               	movlw	200
  1997  001CDE  6F72               	movwf	delay_ms@del& (0+255),b
  1998  001CE0  EC4C  F01B         	call	_delay_ms	;wreg free
  1999  001CE4                     l6921:
  2000                           
  2001                           ;main.c: 113: }
  2002                           ;main.c: 114: }
  2003                           ;main.c: 115: if(!PORTAbits.RA5 && lastSttENTER) {
  2004  001CE4  BA80               	btfsc	3968,5,c	;volatile
  2005  001CE6  D010               	goto	l505
  2006  001CE8  0100               	movlb	0	; () banked
  2007  001CEA  51D7               	movf	_lastSttENTER& (0+255),w,b
  2008  001CEC  0100               	movlb	0	; () banked
  2009  001CEE  B4D8               	btfsc	status,2,c
  2010  001CF0  D00B               	goto	l505
  2011                           
  2012                           ; BSR set to: 0
  2013                           ;main.c: 116: lastSttENTER = 0;
  2014  001CF2  0E00               	movlw	0
  2015  001CF4  0100               	movlb	0	; () banked
  2016  001CF6  6FD7               	movwf	_lastSttENTER& (0+255),b
  2017                           
  2018                           ; BSR set to: 0
  2019                           ;main.c: 117: delay_ms(200);
  2020  001CF8  0E00               	movlw	0
  2021  001CFA  0100               	movlb	0	; () banked
  2022  001CFC  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  2023  001CFE  0EC8               	movlw	200
  2024  001D00  6F72               	movwf	delay_ms@del& (0+255),b
  2025  001D02  EC4C  F01B         	call	_delay_ms	;wreg free
  2026                           
  2027                           ;main.c: 118: }else if(PORTAbits.RA5 && !lastSttENTER) {
  2028  001D06  D044               	goto	l6961
  2029  001D08                     l505:
  2030  001D08  AA80               	btfss	3968,5,c	;volatile
  2031  001D0A  D016               	goto	l6939
  2032  001D0C  0100               	movlb	0	; () banked
  2033  001D0E  51D7               	movf	_lastSttENTER& (0+255),w,b
  2034  001D10  0100               	movlb	0	; () banked
  2035  001D12  A4D8               	btfss	status,2,c
  2036  001D14  D011               	goto	l6939
  2037                           
  2038                           ; BSR set to: 0
  2039                           ;main.c: 119: lastSttENTER = 1;
  2040  001D16  0E01               	movlw	1
  2041  001D18  0100               	movlb	0	; () banked
  2042  001D1A  6FD7               	movwf	_lastSttENTER& (0+255),b
  2043                           
  2044                           ; BSR set to: 0
  2045                           ;main.c: 120: if(holdENTERcont < 10)
  2046  001D1C  0E0A               	movlw	10
  2047  001D1E  0100               	movlb	0	; () banked
  2048  001D20  61E8               	cpfslt	_holdENTERcont& (0+255),b
  2049  001D22  D002               	goto	l6937
  2050                           
  2051                           ; BSR set to: 0
  2052                           ;main.c: 121: pressENTER();
  2053  001D24  EC3B  F01D         	call	_pressENTER	;wreg free
  2054  001D28                     l6937:
  2055                           
  2056                           ;main.c: 122: delay_ms(50);
  2057  001D28  0E00               	movlw	0
  2058  001D2A  0100               	movlb	0	; () banked
  2059  001D2C  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  2060  001D2E  0E32               	movlw	50
  2061  001D30  6F72               	movwf	delay_ms@del& (0+255),b
  2062  001D32  EC4C  F01B         	call	_delay_ms	;wreg free
  2063                           
  2064                           ;main.c: 123: }else if(PORTAbits.RA5 == lastSttENTER) {
  2065  001D36  D02C               	goto	l6961
  2066  001D38                     l6939:
  2067  001D38  AA80               	btfss	3968,5,c	;volatile
  2068  001D3A  D002               	goto	u8210
  2069  001D3C  0E01               	movlw	1
  2070  001D3E  D001               	goto	u8216
  2071  001D40                     u8210:
  2072  001D40  0E00               	movlw	0
  2073  001D42                     u8216:
  2074  001D42  0100               	movlb	0	; () banked
  2075  001D44  19D7               	xorwf	_lastSttENTER& (0+255),w,b
  2076  001D46  A4D8               	btfss	status,2,c
  2077  001D48  D023               	goto	l6961
  2078                           
  2079                           ; BSR set to: 0
  2080                           ;main.c: 124: if(PORTAbits.RA5) {
  2081  001D4A  AA80               	btfss	3968,5,c	;volatile
  2082  001D4C  D006               	goto	l6947
  2083                           
  2084                           ; BSR set to: 0
  2085                           ;main.c: 125: holdENTERcont = 0;
  2086  001D4E  0E00               	movlw	0
  2087  001D50  0100               	movlb	0	; () banked
  2088  001D52  6FE8               	movwf	_holdENTERcont& (0+255),b
  2089                           
  2090                           ; BSR set to: 0
  2091                           ;main.c: 126: releaseENTER();
  2092  001D54  EC19  F01D         	call	_releaseENTER	;wreg free
  2093                           
  2094                           ;main.c: 127: }
  2095  001D58  D01B               	goto	l6961
  2096  001D5A                     l6947:
  2097                           
  2098                           ;main.c: 128: else {
  2099                           ;main.c: 129: if(!ENTERsecurLock)
  2100  001D5A  0100               	movlb	0	; () banked
  2101  001D5C  51E3               	movf	_ENTERsecurLock& (0+255),w,b
  2102  001D5E  A4D8               	btfss	status,2,c
  2103  001D60  D002               	goto	l6951
  2104                           
  2105                           ; BSR set to: 0
  2106                           ;main.c: 130: holdENTERcont++;
  2107  001D62  0100               	movlb	0	; () banked
  2108  001D64  2BE8               	incf	_holdENTERcont& (0+255),f,b
  2109  001D66                     l6951:
  2110                           
  2111                           ; BSR set to: 0
  2112                           ;main.c: 131: if(holdENTERcont > 9) {
  2113  001D66  0E09               	movlw	9
  2114  001D68  0100               	movlb	0	; () banked
  2115  001D6A  65E8               	cpfsgt	_holdENTERcont& (0+255),b
  2116  001D6C  D00A               	goto	l6959
  2117                           
  2118                           ; BSR set to: 0
  2119                           ;main.c: 132: if(holdENTERcont < 26)
  2120  001D6E  0E1A               	movlw	26
  2121  001D70  0100               	movlb	0	; () banked
  2122  001D72  61E8               	cpfslt	_holdENTERcont& (0+255),b
  2123  001D74  D003               	goto	l6957
  2124                           
  2125                           ; BSR set to: 0
  2126                           ;main.c: 133: longPressENTER();
  2127  001D76  ECAF  F01B         	call	_longPressENTER	;wreg free
  2128  001D7A  D003               	goto	l6959
  2129  001D7C                     l6957:
  2130                           
  2131                           ;main.c: 134: else
  2132                           ;main.c: 135: ENTERsecurLock = 1;
  2133  001D7C  0E01               	movlw	1
  2134  001D7E  0100               	movlb	0	; () banked
  2135  001D80  6FE3               	movwf	_ENTERsecurLock& (0+255),b
  2136  001D82                     l6959:
  2137                           
  2138                           ;main.c: 136: }
  2139                           ;main.c: 137: delay_ms(200);
  2140  001D82  0E00               	movlw	0
  2141  001D84  0100               	movlb	0	; () banked
  2142  001D86  6F73               	movwf	(delay_ms@del+1)& (0+255),b
  2143  001D88  0EC8               	movlw	200
  2144  001D8A  6F72               	movwf	delay_ms@del& (0+255),b
  2145  001D8C  EC4C  F01B         	call	_delay_ms	;wreg free
  2146  001D90                     l6961:
  2147                           
  2148                           ;main.c: 138: }
  2149                           ;main.c: 139: }
  2150                           ;main.c: 140: execCombinations();
  2151  001D90  EC3D  F01D         	call	_execCombinations	;wreg free
  2152  001D94  D6A2               	goto	l468
  2153  001D96                     __end_of_main:
  2154                           	opt stack 0
  2155                           tblptru	equ	0xFF8
  2156                           tblptrh	equ	0xFF7
  2157                           tblptrl	equ	0xFF6
  2158                           tablat	equ	0xFF5
  2159                           postinc0	equ	0xFEE
  2160                           wreg	equ	0xFE8
  2161                           postdec1	equ	0xFE5
  2162                           fsr1l	equ	0xFE1
  2163                           status	equ	0xFD8
  2164                           
  2165 ;; *************** function _sysParamInit *****************
  2166 ;; Defined at:
  2167 ;;		line 124 in file "source/sysParams.h"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2181 ;;      Params:         0       0       0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:   13
  2188 ;; This function calls:
  2189 ;;		_calcSysVars
  2190 ;;		_readEEPROM
  2191 ;; This function is called by:
  2192 ;;		_main
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196                           	psect	text1
  2197  002AC8                     __ptext1:
  2198                           	opt stack 0
  2199  002AC8                     _sysParamInit:
  2200                           	opt stack 17
  2201                           
  2202                           ;sysParams.h: 125: tVarProceso = readEEPROM(1);
  2203                           
  2204                           ;incstack = 0
  2205  002AC8  0E01               	movlw	1
  2206  002ACA  ECF6  F01C         	call	_readEEPROM
  2207  002ACE  0100               	movlb	0	; () banked
  2208  002AD0  6FEC               	movwf	_tVarProceso& (0+255),b
  2209                           
  2210                           ;sysParams.h: 126: fData.floatMB = readEEPROM(2);
  2211  002AD2  0E02               	movlw	2
  2212  002AD4  ECF6  F01C         	call	_readEEPROM
  2213  002AD8  0100               	movlb	0	; () banked
  2214  002ADA  6FDD               	movwf	(_fData+3)& (0+255),b
  2215                           
  2216                           ;sysParams.h: 127: fData.floatUB = readEEPROM(3);
  2217  002ADC  0E03               	movlw	3
  2218  002ADE  ECF6  F01C         	call	_readEEPROM
  2219  002AE2  0100               	movlb	0	; () banked
  2220  002AE4  6FDC               	movwf	(_fData+2)& (0+255),b
  2221                           
  2222                           ;sysParams.h: 128: fData.floatHB = readEEPROM(4);
  2223  002AE6  0E04               	movlw	4
  2224  002AE8  ECF6  F01C         	call	_readEEPROM
  2225  002AEC  0100               	movlb	0	; () banked
  2226  002AEE  6FDB               	movwf	(_fData+1)& (0+255),b
  2227                           
  2228                           ;sysParams.h: 129: fData.floatLB = readEEPROM(5);
  2229  002AF0  0E05               	movlw	5
  2230  002AF2  ECF6  F01C         	call	_readEEPROM
  2231  002AF6  0100               	movlb	0	; () banked
  2232  002AF8  6FDA               	movwf	_fData& (0+255),b
  2233                           
  2234                           ; BSR set to: 0
  2235                           ;sysParams.h: 130: tiXcorte = fData.floatdat;
  2236  002AFA  C0DA  F032         	movff	_fData,_tiXcorte
  2237  002AFE  C0DB  F033         	movff	_fData+1,_tiXcorte+1
  2238  002B02  C0DC  F034         	movff	_fData+2,_tiXcorte+2
  2239  002B06  C0DD  F035         	movff	_fData+3,_tiXcorte+3
  2240                           
  2241                           ;sysParams.h: 131: i16Data.int16HB = readEEPROM(6);
  2242  002B0A  0E06               	movlw	6
  2243  002B0C  ECF6  F01C         	call	_readEEPROM
  2244  002B10  0100               	movlb	0	; () banked
  2245  002B12  6FDF               	movwf	(_i16Data+1)& (0+255),b
  2246                           
  2247                           ;sysParams.h: 132: i16Data.int16LB = readEEPROM(7);
  2248  002B14  0E07               	movlw	7
  2249  002B16  ECF6  F01C         	call	_readEEPROM
  2250  002B1A  0100               	movlb	0	; () banked
  2251  002B1C  6FDE               	movwf	_i16Data& (0+255),b
  2252                           
  2253                           ; BSR set to: 0
  2254                           ;sysParams.h: 133: numCortes = i16Data.int16dat;
  2255  002B1E  C0DE  F0D4         	movff	_i16Data,_numCortes
  2256  002B22  C0DF  F0D5         	movff	_i16Data+1,_numCortes+1
  2257                           
  2258                           ;sysParams.h: 134: fData.floatMB = readEEPROM(8);
  2259  002B26  0E08               	movlw	8
  2260  002B28  ECF6  F01C         	call	_readEEPROM
  2261  002B2C  0100               	movlb	0	; () banked
  2262  002B2E  6FDD               	movwf	(_fData+3)& (0+255),b
  2263                           
  2264                           ;sysParams.h: 135: fData.floatUB = readEEPROM(9);
  2265  002B30  0E09               	movlw	9
  2266  002B32  ECF6  F01C         	call	_readEEPROM
  2267  002B36  0100               	movlb	0	; () banked
  2268  002B38  6FDC               	movwf	(_fData+2)& (0+255),b
  2269                           
  2270                           ;sysParams.h: 136: fData.floatHB = readEEPROM(10);
  2271  002B3A  0E0A               	movlw	10
  2272  002B3C  ECF6  F01C         	call	_readEEPROM
  2273  002B40  0100               	movlb	0	; () banked
  2274  002B42  6FDB               	movwf	(_fData+1)& (0+255),b
  2275                           
  2276                           ;sysParams.h: 137: fData.floatLB = readEEPROM(11);
  2277  002B44  0E0B               	movlw	11
  2278  002B46  ECF6  F01C         	call	_readEEPROM
  2279  002B4A  0100               	movlb	0	; () banked
  2280  002B4C  6FDA               	movwf	_fData& (0+255),b
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;sysParams.h: 138: diamTubo = fData.floatdat;
  2284  002B4E  C0DA  F0C8         	movff	_fData,_diamTubo
  2285  002B52  C0DB  F0C9         	movff	_fData+1,_diamTubo+1
  2286  002B56  C0DC  F0CA         	movff	_fData+2,_diamTubo+2
  2287  002B5A  C0DD  F0CB         	movff	_fData+3,_diamTubo+3
  2288                           
  2289                           ;sysParams.h: 139: fData.floatMB = readEEPROM(12);
  2290  002B5E  0E0C               	movlw	12
  2291  002B60  ECF6  F01C         	call	_readEEPROM
  2292  002B64  0100               	movlb	0	; () banked
  2293  002B66  6FDD               	movwf	(_fData+3)& (0+255),b
  2294                           
  2295                           ;sysParams.h: 140: fData.floatUB = readEEPROM(13);
  2296  002B68  0E0D               	movlw	13
  2297  002B6A  ECF6  F01C         	call	_readEEPROM
  2298  002B6E  0100               	movlb	0	; () banked
  2299  002B70  6FDC               	movwf	(_fData+2)& (0+255),b
  2300                           
  2301                           ;sysParams.h: 141: fData.floatHB = readEEPROM(14);
  2302  002B72  0E0E               	movlw	14
  2303  002B74  ECF6  F01C         	call	_readEEPROM
  2304  002B78  0100               	movlb	0	; () banked
  2305  002B7A  6FDB               	movwf	(_fData+1)& (0+255),b
  2306                           
  2307                           ;sysParams.h: 142: fData.floatLB = readEEPROM(15);
  2308  002B7C  0E0F               	movlw	15
  2309  002B7E  ECF6  F01C         	call	_readEEPROM
  2310  002B82  0100               	movlb	0	; () banked
  2311  002B84  6FDA               	movwf	_fData& (0+255),b
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;sysParams.h: 143: densidadMasa = fData.floatdat;
  2315  002B86  C0DA  F0C4         	movff	_fData,_densidadMasa
  2316  002B8A  C0DB  F0C5         	movff	_fData+1,_densidadMasa+1
  2317  002B8E  C0DC  F0C6         	movff	_fData+2,_densidadMasa+2
  2318  002B92  C0DD  F0C7         	movff	_fData+3,_densidadMasa+3
  2319                           
  2320                           ;sysParams.h: 144: fData.floatMB = readEEPROM(16);
  2321  002B96  0E10               	movlw	16
  2322  002B98  ECF6  F01C         	call	_readEEPROM
  2323  002B9C  0100               	movlb	0	; () banked
  2324  002B9E  6FDD               	movwf	(_fData+3)& (0+255),b
  2325                           
  2326                           ;sysParams.h: 145: fData.floatUB = readEEPROM(17);
  2327  002BA0  0E11               	movlw	17
  2328  002BA2  ECF6  F01C         	call	_readEEPROM
  2329  002BA6  0100               	movlb	0	; () banked
  2330  002BA8  6FDC               	movwf	(_fData+2)& (0+255),b
  2331                           
  2332                           ;sysParams.h: 146: fData.floatHB = readEEPROM(18);
  2333  002BAA  0E12               	movlw	18
  2334  002BAC  ECF6  F01C         	call	_readEEPROM
  2335  002BB0  0100               	movlb	0	; () banked
  2336  002BB2  6FDB               	movwf	(_fData+1)& (0+255),b
  2337                           
  2338                           ;sysParams.h: 147: fData.floatLB = readEEPROM(19);
  2339  002BB4  0E13               	movlw	19
  2340  002BB6  ECF6  F01C         	call	_readEEPROM
  2341  002BBA  0100               	movlb	0	; () banked
  2342  002BBC  6FDA               	movwf	_fData& (0+255),b
  2343                           
  2344                           ; BSR set to: 0
  2345                           ;sysParams.h: 148: velocidadMasa = fData.floatdat;
  2346  002BBE  C0DA  F0D0         	movff	_fData,_velocidadMasa
  2347  002BC2  C0DB  F0D1         	movff	_fData+1,_velocidadMasa+1
  2348  002BC6  C0DC  F0D2         	movff	_fData+2,_velocidadMasa+2
  2349  002BCA  C0DD  F0D3         	movff	_fData+3,_velocidadMasa+3
  2350                           
  2351                           ; BSR set to: 0
  2352                           ;sysParams.h: 149: calcSysVars();
  2353  002BCE  ECBD  F014         	call	_calcSysVars	;wreg free
  2354  002BD2  0012               	return		;funcret
  2355  002BD4                     __end_of_sysParamInit:
  2356                           	opt stack 0
  2357                           tblptru	equ	0xFF8
  2358                           tblptrh	equ	0xFF7
  2359                           tblptrl	equ	0xFF6
  2360                           tablat	equ	0xFF5
  2361                           postinc0	equ	0xFEE
  2362                           wreg	equ	0xFE8
  2363                           postdec1	equ	0xFE5
  2364                           fsr1l	equ	0xFE1
  2365                           status	equ	0xFD8
  2366                           
  2367 ;; *************** function _readEEPROM *****************
  2368 ;; Defined at:
  2369 ;;		line 46 in file "source/sysParams.h"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  adr             1    wreg     unsigned char 
  2372 ;; Auto vars:     Size  Location     Type
  2373 ;;  adr             1   18[BANK0 ] unsigned char 
  2374 ;; Return value:  Size  Location     Type
  2375 ;;                  1    wreg      unsigned char 
  2376 ;; Registers used:
  2377 ;;		wreg, status,2
  2378 ;; Tracked objects:
  2379 ;;		On entry : 0/0
  2380 ;;		On exit  : 0/0
  2381 ;;		Unchanged: 0/0
  2382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2383 ;;      Params:         0       0       0       0       0       0       0
  2384 ;;      Locals:         0       1       0       0       0       0       0
  2385 ;;      Temps:          0       0       0       0       0       0       0
  2386 ;;      Totals:         0       1       0       0       0       0       0
  2387 ;;Total ram usage:        1 bytes
  2388 ;; Hardware stack levels used:    1
  2389 ;; Hardware stack levels required when called:   11
  2390 ;; This function calls:
  2391 ;;		Nothing
  2392 ;; This function is called by:
  2393 ;;		_sysParamInit
  2394 ;; This function uses a non-reentrant model
  2395 ;;
  2396                           
  2397                           	psect	text2
  2398  0039EC                     __ptext2:
  2399                           	opt stack 0
  2400  0039EC                     _readEEPROM:
  2401                           	opt stack 18
  2402                           
  2403                           ;incstack = 0
  2404                           ;readEEPROM@adr stored from wreg
  2405  0039EC  0100               	movlb	0	; () banked
  2406  0039EE  6F72               	movwf	readEEPROM@adr& (0+255),b
  2407                           
  2408                           ;sysParams.h: 47: EEADR = adr;
  2409  0039F0  C072  FFA9         	movff	readEEPROM@adr,4009	;volatile
  2410                           
  2411                           ;sysParams.h: 48: EECON1bits.RD = 1;
  2412  0039F4  80A6               	bsf	4006,0,c	;volatile
  2413  0039F6                     l322:
  2414  0039F6  B0A6               	btfsc	4006,0,c	;volatile
  2415  0039F8  D7FE               	goto	l322
  2416                           
  2417                           ;sysParams.h: 50: return EEDATA;
  2418  0039FA  50A8               	movf	4008,w,c	;volatile
  2419  0039FC  0012               	return		;funcret
  2420  0039FE                     __end_of_readEEPROM:
  2421                           	opt stack 0
  2422                           tblptru	equ	0xFF8
  2423                           tblptrh	equ	0xFF7
  2424                           tblptrl	equ	0xFF6
  2425                           tablat	equ	0xFF5
  2426                           postinc0	equ	0xFEE
  2427                           wreg	equ	0xFE8
  2428                           postdec1	equ	0xFE5
  2429                           fsr1l	equ	0xFE1
  2430                           status	equ	0xFD8
  2431                           
  2432 ;; *************** function _calcSysVars *****************
  2433 ;; Defined at:
  2434 ;;		line 85 in file "source/sysParams.h"
  2435 ;; Parameters:    Size  Location     Type
  2436 ;;		None
  2437 ;; Auto vars:     Size  Location     Type
  2438 ;;  temp            4   57[BANK0 ] float 
  2439 ;; Return value:  Size  Location     Type
  2440 ;;                  1    wreg      void 
  2441 ;; Registers used:
  2442 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2443 ;; Tracked objects:
  2444 ;;		On entry : 0/0
  2445 ;;		On exit  : 0/0
  2446 ;;		Unchanged: 0/0
  2447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2448 ;;      Params:         0       0       0       0       0       0       0
  2449 ;;      Locals:         0       4       0       0       0       0       0
  2450 ;;      Temps:          0       0       0       0       0       0       0
  2451 ;;      Totals:         0       4       0       0       0       0       0
  2452 ;;Total ram usage:        4 bytes
  2453 ;; Hardware stack levels used:    1
  2454 ;; Hardware stack levels required when called:   12
  2455 ;; This function calls:
  2456 ;;		___fldiv
  2457 ;;		___flmul
  2458 ;; This function is called by:
  2459 ;;		_sysParamInit
  2460 ;; This function uses a non-reentrant model
  2461 ;;
  2462                           
  2463                           	psect	text3
  2464  00297A                     __ptext3:
  2465                           	opt stack 0
  2466  00297A                     _calcSysVars:
  2467                           	opt stack 17
  2468                           
  2469                           ;sysParams.h: 86: float temp = 0;
  2470                           
  2471                           ;incstack = 0
  2472  00297A  0E00               	movlw	0
  2473  00297C  0100               	movlb	0	; () banked
  2474  00297E  6F99               	movwf	calcSysVars@temp& (0+255),b
  2475  002980  0E00               	movlw	0
  2476  002982  6F9A               	movwf	(calcSysVars@temp+1)& (0+255),b
  2477  002984  0E00               	movlw	0
  2478  002986  6F9B               	movwf	(calcSysVars@temp+2)& (0+255),b
  2479  002988  0E00               	movlw	0
  2480  00298A  6F9C               	movwf	(calcSysVars@temp+3)& (0+255),b
  2481                           
  2482                           ; BSR set to: 0
  2483                           ;sysParams.h: 87: temp = (float)diamTubo / 2000.0f;
  2484  00298C  C0C8  F072         	movff	_diamTubo,___fldiv@b
  2485  002990  C0C9  F073         	movff	_diamTubo+1,___fldiv@b+1
  2486  002994  C0CA  F074         	movff	_diamTubo+2,___fldiv@b+2
  2487  002998  C0CB  F075         	movff	_diamTubo+3,___fldiv@b+3
  2488  00299C  0E00               	movlw	0
  2489  00299E  0100               	movlb	0	; () banked
  2490  0029A0  6F76               	movwf	___fldiv@a& (0+255),b
  2491  0029A2  0E00               	movlw	0
  2492  0029A4  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  2493  0029A6  0EFA               	movlw	250
  2494  0029A8  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  2495  0029AA  0E44               	movlw	68
  2496  0029AC  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  2497  0029AE  EC7B  F00B         	call	___fldiv	;wreg free
  2498  0029B2  C072  F099         	movff	?___fldiv,calcSysVars@temp
  2499  0029B6  C073  F09A         	movff	?___fldiv+1,calcSysVars@temp+1
  2500  0029BA  C074  F09B         	movff	?___fldiv+2,calcSysVars@temp+2
  2501  0029BE  C075  F09C         	movff	?___fldiv+3,calcSysVars@temp+3
  2502                           
  2503                           ;sysParams.h: 88: temp *= temp;
  2504  0029C2  C099  F080         	movff	calcSysVars@temp,___flmul@b
  2505  0029C6  C09A  F081         	movff	calcSysVars@temp+1,___flmul@b+1
  2506  0029CA  C09B  F082         	movff	calcSysVars@temp+2,___flmul@b+2
  2507  0029CE  C09C  F083         	movff	calcSysVars@temp+3,___flmul@b+3
  2508  0029D2  C099  F084         	movff	calcSysVars@temp,___flmul@a
  2509  0029D6  C09A  F085         	movff	calcSysVars@temp+1,___flmul@a+1
  2510  0029DA  C09B  F086         	movff	calcSysVars@temp+2,___flmul@a+2
  2511  0029DE  C09C  F087         	movff	calcSysVars@temp+3,___flmul@a+3
  2512  0029E2  EC28  F009         	call	___flmul	;wreg free
  2513  0029E6  C080  F099         	movff	?___flmul,calcSysVars@temp
  2514  0029EA  C081  F09A         	movff	?___flmul+1,calcSysVars@temp+1
  2515  0029EE  C082  F09B         	movff	?___flmul+2,calcSysVars@temp+2
  2516  0029F2  C083  F09C         	movff	?___flmul+3,calcSysVars@temp+3
  2517                           
  2518                           ;sysParams.h: 89: temp *= pi;
  2519  0029F6  C099  F080         	movff	calcSysVars@temp,___flmul@b
  2520  0029FA  C09A  F081         	movff	calcSysVars@temp+1,___flmul@b+1
  2521  0029FE  C09B  F082         	movff	calcSysVars@temp+2,___flmul@b+2
  2522  002A02  C09C  F083         	movff	calcSysVars@temp+3,___flmul@b+3
  2523  002A06  C02A  F084         	movff	_pi,___flmul@a
  2524  002A0A  C02B  F085         	movff	_pi+1,___flmul@a+1
  2525  002A0E  C02C  F086         	movff	_pi+2,___flmul@a+2
  2526  002A12  C02D  F087         	movff	_pi+3,___flmul@a+3
  2527  002A16  EC28  F009         	call	___flmul	;wreg free
  2528  002A1A  C080  F099         	movff	?___flmul,calcSysVars@temp
  2529  002A1E  C081  F09A         	movff	?___flmul+1,calcSysVars@temp+1
  2530  002A22  C082  F09B         	movff	?___flmul+2,calcSysVars@temp+2
  2531  002A26  C083  F09C         	movff	?___flmul+3,calcSysVars@temp+3
  2532                           
  2533                           ;sysParams.h: 90: temp *= velocidadMasa;
  2534  002A2A  C099  F080         	movff	calcSysVars@temp,___flmul@b
  2535  002A2E  C09A  F081         	movff	calcSysVars@temp+1,___flmul@b+1
  2536  002A32  C09B  F082         	movff	calcSysVars@temp+2,___flmul@b+2
  2537  002A36  C09C  F083         	movff	calcSysVars@temp+3,___flmul@b+3
  2538  002A3A  C0D0  F084         	movff	_velocidadMasa,___flmul@a
  2539  002A3E  C0D1  F085         	movff	_velocidadMasa+1,___flmul@a+1
  2540  002A42  C0D2  F086         	movff	_velocidadMasa+2,___flmul@a+2
  2541  002A46  C0D3  F087         	movff	_velocidadMasa+3,___flmul@a+3
  2542  002A4A  EC28  F009         	call	___flmul	;wreg free
  2543  002A4E  C080  F099         	movff	?___flmul,calcSysVars@temp
  2544  002A52  C081  F09A         	movff	?___flmul+1,calcSysVars@temp+1
  2545  002A56  C082  F09B         	movff	?___flmul+2,calcSysVars@temp+2
  2546  002A5A  C083  F09C         	movff	?___flmul+3,calcSysVars@temp+3
  2547                           
  2548                           ;sysParams.h: 91: m3Xcorte = (float)temp * tiXcorte;
  2549  002A5E  C099  F080         	movff	calcSysVars@temp,___flmul@b
  2550  002A62  C09A  F081         	movff	calcSysVars@temp+1,___flmul@b+1
  2551  002A66  C09B  F082         	movff	calcSysVars@temp+2,___flmul@b+2
  2552  002A6A  C09C  F083         	movff	calcSysVars@temp+3,___flmul@b+3
  2553  002A6E  C032  F084         	movff	_tiXcorte,___flmul@a
  2554  002A72  C033  F085         	movff	_tiXcorte+1,___flmul@a+1
  2555  002A76  C034  F086         	movff	_tiXcorte+2,___flmul@a+2
  2556  002A7A  C035  F087         	movff	_tiXcorte+3,___flmul@a+3
  2557  002A7E  EC28  F009         	call	___flmul	;wreg free
  2558  002A82  C080  F026         	movff	?___flmul,_m3Xcorte
  2559  002A86  C081  F027         	movff	?___flmul+1,_m3Xcorte+1
  2560  002A8A  C082  F028         	movff	?___flmul+2,_m3Xcorte+2
  2561  002A8E  C083  F029         	movff	?___flmul+3,_m3Xcorte+3
  2562                           
  2563                           ;sysParams.h: 92: kgXcorte = (float)densidadMasa * m3Xcorte;
  2564  002A92  C0C4  F080         	movff	_densidadMasa,___flmul@b
  2565  002A96  C0C5  F081         	movff	_densidadMasa+1,___flmul@b+1
  2566  002A9A  C0C6  F082         	movff	_densidadMasa+2,___flmul@b+2
  2567  002A9E  C0C7  F083         	movff	_densidadMasa+3,___flmul@b+3
  2568  002AA2  C026  F084         	movff	_m3Xcorte,___flmul@a
  2569  002AA6  C027  F085         	movff	_m3Xcorte+1,___flmul@a+1
  2570  002AAA  C028  F086         	movff	_m3Xcorte+2,___flmul@a+2
  2571  002AAE  C029  F087         	movff	_m3Xcorte+3,___flmul@a+3
  2572  002AB2  EC28  F009         	call	___flmul	;wreg free
  2573  002AB6  C080  F0CC         	movff	?___flmul,_kgXcorte
  2574  002ABA  C081  F0CD         	movff	?___flmul+1,_kgXcorte+1
  2575  002ABE  C082  F0CE         	movff	?___flmul+2,_kgXcorte+2
  2576  002AC2  C083  F0CF         	movff	?___flmul+3,_kgXcorte+3
  2577  002AC6  0012               	return		;funcret
  2578  002AC8                     __end_of_calcSysVars:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           tblptrh	equ	0xFF7
  2582                           tblptrl	equ	0xFF6
  2583                           tablat	equ	0xFF5
  2584                           postinc0	equ	0xFEE
  2585                           wreg	equ	0xFE8
  2586                           postdec1	equ	0xFE5
  2587                           fsr1l	equ	0xFE1
  2588                           status	equ	0xFD8
  2589                           
  2590 ;; *************** function ___fldiv *****************
  2591 ;; Defined at:
  2592 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
  2593 ;; Parameters:    Size  Location     Type
  2594 ;;  b               4   18[BANK0 ] void 
  2595 ;;  a               4   22[BANK0 ] void 
  2596 ;; Auto vars:     Size  Location     Type
  2597 ;;  grs             4   37[BANK0 ] unsigned long 
  2598 ;;  rem             4   31[BANK0 ] unsigned long 
  2599 ;;  new_exp         2   35[BANK0 ] int 
  2600 ;;  aexp            1   42[BANK0 ] unsigned char 
  2601 ;;  bexp            1   41[BANK0 ] unsigned char 
  2602 ;;  sign            1   30[BANK0 ] unsigned char 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;                  4   18[BANK0 ] unsigned char 
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2612 ;;      Params:         0       8       0       0       0       0       0
  2613 ;;      Locals:         0      13       0       0       0       0       0
  2614 ;;      Temps:          0       4       0       0       0       0       0
  2615 ;;      Totals:         0      25       0       0       0       0       0
  2616 ;;Total ram usage:       25 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:   11
  2619 ;; This function calls:
  2620 ;;		Nothing
  2621 ;; This function is called by:
  2622 ;;		_calcSysVars
  2623 ;;		_preAutoCal
  2624 ;;		_autoCal
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           	psect	text4
  2629  0016F6                     __ptext4:
  2630                           	opt stack 0
  2631  0016F6                     ___fldiv:
  2632                           	opt stack 17
  2633                           
  2634                           ;incstack = 0
  2635  0016F6  0100               	movlb	0	; () banked
  2636  0016F8  5175               	movf	(___fldiv@b+3)& (0+255),w,b
  2637  0016FA  0B80               	andlw	128
  2638  0016FC  0100               	movlb	0	; () banked
  2639  0016FE  6F7E               	movwf	___fldiv@sign& (0+255),b
  2640  001700  0100               	movlb	0	; () banked
  2641  001702  5175               	movf	(___fldiv@b+3)& (0+255),w,b
  2642  001704  2575               	addwf	(___fldiv@b+3)& (0+255),w,b
  2643  001706  0100               	movlb	0	; () banked
  2644  001708  6F89               	movwf	___fldiv@bexp& (0+255),b
  2645                           
  2646                           ; BSR set to: 0
  2647  00170A  0100               	movlb	0	; () banked
  2648  00170C  AF74               	btfss	(___fldiv@b+2)& (0+255),7,b
  2649  00170E  D002               	goto	l4465
  2650                           
  2651                           ; BSR set to: 0
  2652  001710  0100               	movlb	0	; () banked
  2653  001712  8189               	bsf	___fldiv@bexp& (0+255),0,b
  2654  001714                     l4465:
  2655                           
  2656                           ; BSR set to: 0
  2657  001714  0100               	movlb	0	; () banked
  2658  001716  5189               	movf	___fldiv@bexp& (0+255),w,b
  2659  001718  0100               	movlb	0	; () banked
  2660  00171A  B4D8               	btfsc	status,2,c
  2661  00171C  D012               	goto	l4475
  2662                           
  2663                           ; BSR set to: 0
  2664  00171E  0100               	movlb	0	; () banked
  2665  001720  2989               	incf	___fldiv@bexp& (0+255),w,b
  2666  001722  A4D8               	btfss	status,2,c
  2667  001724  D009               	goto	l4471
  2668                           
  2669                           ; BSR set to: 0
  2670  001726  0E00               	movlw	0
  2671  001728  0100               	movlb	0	; () banked
  2672  00172A  6F72               	movwf	___fldiv@b& (0+255),b
  2673  00172C  0E00               	movlw	0
  2674  00172E  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  2675  001730  0E00               	movlw	0
  2676  001732  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  2677  001734  0E00               	movlw	0
  2678  001736  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  2679  001738                     l4471:
  2680                           
  2681                           ; BSR set to: 0
  2682  001738  0100               	movlb	0	; () banked
  2683  00173A  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
  2684                           
  2685                           ; BSR set to: 0
  2686  00173C  0E00               	movlw	0
  2687  00173E  0100               	movlb	0	; () banked
  2688  001740  D008               	goto	L1
  2689  001742                     l4475:
  2690                           
  2691                           ; BSR set to: 0
  2692  001742  0E00               	movlw	0
  2693  001744  0100               	movlb	0	; () banked
  2694  001746  6F72               	movwf	___fldiv@b& (0+255),b
  2695  001748  0E00               	movlw	0
  2696  00174A  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  2697  00174C  0E00               	movlw	0
  2698  00174E  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  2699  001750  0E00               	movlw	0
  2700  001752                     L1:
  2701  001752  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  2702                           
  2703                           ; BSR set to: 0
  2704                           
  2705                           ; BSR set to: 0
  2706  001754  0100               	movlb	0	; () banked
  2707  001756  5179               	movf	(___fldiv@a+3)& (0+255),w,b
  2708  001758  0B80               	andlw	128
  2709  00175A  0100               	movlb	0	; () banked
  2710  00175C  1B7E               	xorwf	___fldiv@sign& (0+255),f,b
  2711                           
  2712                           ; BSR set to: 0
  2713  00175E  0100               	movlb	0	; () banked
  2714  001760  5179               	movf	(___fldiv@a+3)& (0+255),w,b
  2715  001762  2579               	addwf	(___fldiv@a+3)& (0+255),w,b
  2716  001764  0100               	movlb	0	; () banked
  2717  001766  6F8A               	movwf	___fldiv@aexp& (0+255),b
  2718                           
  2719                           ; BSR set to: 0
  2720  001768  0100               	movlb	0	; () banked
  2721  00176A  AF78               	btfss	(___fldiv@a+2)& (0+255),7,b
  2722  00176C  D002               	goto	l4485
  2723                           
  2724                           ; BSR set to: 0
  2725  00176E  0100               	movlb	0	; () banked
  2726  001770  818A               	bsf	___fldiv@aexp& (0+255),0,b
  2727  001772                     l4485:
  2728                           
  2729                           ; BSR set to: 0
  2730  001772  0100               	movlb	0	; () banked
  2731  001774  518A               	movf	___fldiv@aexp& (0+255),w,b
  2732  001776  0100               	movlb	0	; () banked
  2733  001778  B4D8               	btfsc	status,2,c
  2734  00177A  D012               	goto	l4495
  2735                           
  2736                           ; BSR set to: 0
  2737  00177C  0100               	movlb	0	; () banked
  2738  00177E  298A               	incf	___fldiv@aexp& (0+255),w,b
  2739  001780  A4D8               	btfss	status,2,c
  2740  001782  D009               	goto	l4491
  2741                           
  2742                           ; BSR set to: 0
  2743  001784  0E00               	movlw	0
  2744  001786  0100               	movlb	0	; () banked
  2745  001788  6F76               	movwf	___fldiv@a& (0+255),b
  2746  00178A  0E00               	movlw	0
  2747  00178C  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  2748  00178E  0E00               	movlw	0
  2749  001790  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  2750  001792  0E00               	movlw	0
  2751  001794  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  2752  001796                     l4491:
  2753                           
  2754                           ; BSR set to: 0
  2755  001796  0100               	movlb	0	; () banked
  2756  001798  8F78               	bsf	(___fldiv@a+2)& (0+255),7,b
  2757                           
  2758                           ; BSR set to: 0
  2759  00179A  0E00               	movlw	0
  2760  00179C  0100               	movlb	0	; () banked
  2761  00179E  D008               	goto	L2
  2762  0017A0                     l4495:
  2763                           
  2764                           ; BSR set to: 0
  2765  0017A0  0E00               	movlw	0
  2766  0017A2  0100               	movlb	0	; () banked
  2767  0017A4  6F76               	movwf	___fldiv@a& (0+255),b
  2768  0017A6  0E00               	movlw	0
  2769  0017A8  6F77               	movwf	(___fldiv@a+1)& (0+255),b
  2770  0017AA  0E00               	movlw	0
  2771  0017AC  6F78               	movwf	(___fldiv@a+2)& (0+255),b
  2772  0017AE  0E00               	movlw	0
  2773  0017B0                     L2:
  2774  0017B0  6F79               	movwf	(___fldiv@a+3)& (0+255),b
  2775                           
  2776                           ; BSR set to: 0
  2777                           
  2778                           ; BSR set to: 0
  2779  0017B2  0100               	movlb	0	; () banked
  2780  0017B4  5176               	movf	___fldiv@a& (0+255),w,b
  2781  0017B6  0100               	movlb	0	; () banked
  2782  0017B8  1177               	iorwf	(___fldiv@a+1)& (0+255),w,b
  2783  0017BA  0100               	movlb	0	; () banked
  2784  0017BC  1178               	iorwf	(___fldiv@a+2)& (0+255),w,b
  2785  0017BE  0100               	movlb	0	; () banked
  2786  0017C0  1179               	iorwf	(___fldiv@a+3)& (0+255),w,b
  2787  0017C2  A4D8               	btfss	status,2,c
  2788  0017C4  D017               	goto	l4507
  2789                           
  2790                           ; BSR set to: 0
  2791  0017C6  0E00               	movlw	0
  2792  0017C8  0100               	movlb	0	; () banked
  2793  0017CA  6F72               	movwf	___fldiv@b& (0+255),b
  2794  0017CC  0E00               	movlw	0
  2795  0017CE  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  2796  0017D0  0E00               	movlw	0
  2797  0017D2  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  2798  0017D4  0E00               	movlw	0
  2799  0017D6  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  2800                           
  2801                           ; BSR set to: 0
  2802  0017D8  0100               	movlb	0	; () banked
  2803  0017DA  0E80               	movlw	128
  2804  0017DC  1374               	iorwf	(___fldiv@b+2)& (0+255),f,b
  2805  0017DE  0E7F               	movlw	127
  2806  0017E0  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
  2807                           
  2808                           ; BSR set to: 0
  2809  0017E2  C072  F072         	movff	___fldiv@b,?___fldiv
  2810  0017E6  C073  F073         	movff	___fldiv@b+1,?___fldiv+1
  2811  0017EA  C074  F074         	movff	___fldiv@b+2,?___fldiv+2
  2812  0017EE  C075  F075         	movff	___fldiv@b+3,?___fldiv+3
  2813                           
  2814                           ; BSR set to: 0
  2815  0017F2  0012               	return	
  2816  0017F4                     l4507:
  2817                           
  2818                           ; BSR set to: 0
  2819  0017F4  0100               	movlb	0	; () banked
  2820  0017F6  5189               	movf	___fldiv@bexp& (0+255),w,b
  2821  0017F8  0100               	movlb	0	; () banked
  2822  0017FA  A4D8               	btfss	status,2,c
  2823  0017FC  D012               	goto	l4515
  2824                           
  2825                           ; BSR set to: 0
  2826  0017FE  0E00               	movlw	0
  2827  001800  0100               	movlb	0	; () banked
  2828  001802  6F72               	movwf	___fldiv@b& (0+255),b
  2829  001804  0E00               	movlw	0
  2830  001806  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  2831  001808  0E00               	movlw	0
  2832  00180A  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  2833  00180C  0E00               	movlw	0
  2834  00180E  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  2835                           
  2836                           ; BSR set to: 0
  2837  001810  C072  F072         	movff	___fldiv@b,?___fldiv
  2838  001814  C073  F073         	movff	___fldiv@b+1,?___fldiv+1
  2839  001818  C074  F074         	movff	___fldiv@b+2,?___fldiv+2
  2840  00181C  C075  F075         	movff	___fldiv@b+3,?___fldiv+3
  2841                           
  2842                           ; BSR set to: 0
  2843  001820  0012               	return	
  2844  001822                     l4515:
  2845                           
  2846                           ; BSR set to: 0
  2847  001822  0100               	movlb	0	; () banked
  2848  001824  518A               	movf	___fldiv@aexp& (0+255),w,b
  2849  001826  0100               	movlb	0	; () banked
  2850  001828  6F7A               	movwf	??___fldiv& (0+255),b
  2851  00182A  6B7B               	clrf	(??___fldiv+1)& (0+255),b
  2852  00182C  0100               	movlb	0	; () banked
  2853  00182E  1F7A               	comf	??___fldiv& (0+255),f,b
  2854  001830  1F7B               	comf	(??___fldiv+1)& (0+255),f,b
  2855  001832  4B7A               	infsnz	??___fldiv& (0+255),f,b
  2856  001834  2B7B               	incf	(??___fldiv+1)& (0+255),f,b
  2857  001836  0100               	movlb	0	; () banked
  2858  001838  5189               	movf	___fldiv@bexp& (0+255),w,b
  2859  00183A  0100               	movlb	0	; () banked
  2860  00183C  6F7C               	movwf	(??___fldiv+2)& (0+255),b
  2861  00183E  6B7D               	clrf	(??___fldiv+3)& (0+255),b
  2862  001840  0100               	movlb	0	; () banked
  2863  001842  517A               	movf	??___fldiv& (0+255),w,b
  2864  001844  0100               	movlb	0	; () banked
  2865  001846  277C               	addwf	(??___fldiv+2)& (0+255),f,b
  2866  001848  0100               	movlb	0	; () banked
  2867  00184A  517B               	movf	(??___fldiv+1)& (0+255),w,b
  2868  00184C  0100               	movlb	0	; () banked
  2869  00184E  237D               	addwfc	(??___fldiv+3)& (0+255),f,b
  2870  001850  0E7F               	movlw	127
  2871  001852  0100               	movlb	0	; () banked
  2872  001854  257C               	addwf	(??___fldiv+2)& (0+255),w,b
  2873  001856  0100               	movlb	0	; () banked
  2874  001858  6F83               	movwf	___fldiv@new_exp& (0+255),b
  2875  00185A  0E00               	movlw	0
  2876  00185C  0100               	movlb	0	; () banked
  2877  00185E  217D               	addwfc	(??___fldiv+3)& (0+255),w,b
  2878  001860  0100               	movlb	0	; () banked
  2879  001862  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
  2880                           
  2881                           ; BSR set to: 0
  2882  001864  C072  F07F         	movff	___fldiv@b,___fldiv@rem
  2883  001868  C073  F080         	movff	___fldiv@b+1,___fldiv@rem+1
  2884  00186C  C074  F081         	movff	___fldiv@b+2,___fldiv@rem+2
  2885  001870  C075  F082         	movff	___fldiv@b+3,___fldiv@rem+3
  2886                           
  2887                           ; BSR set to: 0
  2888  001874  0E00               	movlw	0
  2889  001876  0100               	movlb	0	; () banked
  2890  001878  6F72               	movwf	___fldiv@b& (0+255),b
  2891  00187A  0E00               	movlw	0
  2892  00187C  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  2893  00187E  0E00               	movlw	0
  2894  001880  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  2895  001882  0E00               	movlw	0
  2896  001884  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  2897                           
  2898                           ; BSR set to: 0
  2899  001886  0E00               	movlw	0
  2900  001888  0100               	movlb	0	; () banked
  2901  00188A  6F85               	movwf	___fldiv@grs& (0+255),b
  2902  00188C  0E00               	movlw	0
  2903  00188E  6F86               	movwf	(___fldiv@grs+1)& (0+255),b
  2904  001890  0E00               	movlw	0
  2905  001892  6F87               	movwf	(___fldiv@grs+2)& (0+255),b
  2906  001894  0E00               	movlw	0
  2907  001896  6F88               	movwf	(___fldiv@grs+3)& (0+255),b
  2908                           
  2909                           ; BSR set to: 0
  2910  001898  0E00               	movlw	0
  2911  00189A  0100               	movlb	0	; () banked
  2912  00189C  6F8A               	movwf	___fldiv@aexp& (0+255),b
  2913  00189E  D042               	goto	l1143
  2914  0018A0                     l4525:
  2915                           
  2916                           ; BSR set to: 0
  2917  0018A0  0100               	movlb	0	; () banked
  2918  0018A2  518A               	movf	___fldiv@aexp& (0+255),w,b
  2919  0018A4  0100               	movlb	0	; () banked
  2920  0018A6  B4D8               	btfsc	status,2,c
  2921  0018A8  D017               	goto	l4533
  2922                           
  2923                           ; BSR set to: 0
  2924  0018AA  0100               	movlb	0	; () banked
  2925  0018AC  90D8               	bcf	status,0,c
  2926  0018AE  377F               	rlcf	___fldiv@rem& (0+255),f,b
  2927  0018B0  3780               	rlcf	(___fldiv@rem+1)& (0+255),f,b
  2928  0018B2  3781               	rlcf	(___fldiv@rem+2)& (0+255),f,b
  2929  0018B4  3782               	rlcf	(___fldiv@rem+3)& (0+255),f,b
  2930  0018B6  0100               	movlb	0	; () banked
  2931  0018B8  90D8               	bcf	status,0,c
  2932  0018BA  3772               	rlcf	___fldiv@b& (0+255),f,b
  2933  0018BC  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
  2934  0018BE  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
  2935  0018C0  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
  2936                           
  2937                           ; BSR set to: 0
  2938  0018C2  0100               	movlb	0	; () banked
  2939  0018C4  AF88               	btfss	(___fldiv@grs+3)& (0+255),7,b
  2940  0018C6  D002               	goto	l1146
  2941                           
  2942                           ; BSR set to: 0
  2943  0018C8  0100               	movlb	0	; () banked
  2944  0018CA  8172               	bsf	___fldiv@b& (0+255),0,b
  2945  0018CC                     l1146:
  2946                           
  2947                           ; BSR set to: 0
  2948  0018CC  0100               	movlb	0	; () banked
  2949  0018CE  90D8               	bcf	status,0,c
  2950  0018D0  3785               	rlcf	___fldiv@grs& (0+255),f,b
  2951  0018D2  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  2952  0018D4  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  2953  0018D6  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  2954  0018D8                     l4533:
  2955                           
  2956                           ; BSR set to: 0
  2957  0018D8  0100               	movlb	0	; () banked
  2958  0018DA  5176               	movf	___fldiv@a& (0+255),w,b
  2959  0018DC  0100               	movlb	0	; () banked
  2960  0018DE  5D7F               	subwf	___fldiv@rem& (0+255),w,b
  2961  0018E0  0100               	movlb	0	; () banked
  2962  0018E2  5177               	movf	(___fldiv@a+1)& (0+255),w,b
  2963  0018E4  0100               	movlb	0	; () banked
  2964  0018E6  5980               	subwfb	(___fldiv@rem+1)& (0+255),w,b
  2965  0018E8  0100               	movlb	0	; () banked
  2966  0018EA  5178               	movf	(___fldiv@a+2)& (0+255),w,b
  2967  0018EC  0100               	movlb	0	; () banked
  2968  0018EE  5981               	subwfb	(___fldiv@rem+2)& (0+255),w,b
  2969  0018F0  0100               	movlb	0	; () banked
  2970  0018F2  5179               	movf	(___fldiv@a+3)& (0+255),w,b
  2971  0018F4  0100               	movlb	0	; () banked
  2972  0018F6  5982               	subwfb	(___fldiv@rem+3)& (0+255),w,b
  2973  0018F8  A0D8               	btfss	status,0,c
  2974  0018FA  D012               	goto	l4539
  2975                           
  2976                           ; BSR set to: 0
  2977  0018FC  0100               	movlb	0	; () banked
  2978  0018FE  8D88               	bsf	(___fldiv@grs+3)& (0+255),6,b
  2979                           
  2980                           ; BSR set to: 0
  2981  001900  0100               	movlb	0	; () banked
  2982  001902  5176               	movf	___fldiv@a& (0+255),w,b
  2983  001904  0100               	movlb	0	; () banked
  2984  001906  5F7F               	subwf	___fldiv@rem& (0+255),f,b
  2985  001908  0100               	movlb	0	; () banked
  2986  00190A  5177               	movf	(___fldiv@a+1)& (0+255),w,b
  2987  00190C  0100               	movlb	0	; () banked
  2988  00190E  5B80               	subwfb	(___fldiv@rem+1)& (0+255),f,b
  2989  001910  0100               	movlb	0	; () banked
  2990  001912  5178               	movf	(___fldiv@a+2)& (0+255),w,b
  2991  001914  0100               	movlb	0	; () banked
  2992  001916  5B81               	subwfb	(___fldiv@rem+2)& (0+255),f,b
  2993  001918  0100               	movlb	0	; () banked
  2994  00191A  5179               	movf	(___fldiv@a+3)& (0+255),w,b
  2995  00191C  0100               	movlb	0	; () banked
  2996  00191E  5B82               	subwfb	(___fldiv@rem+3)& (0+255),f,b
  2997  001920                     l4539:
  2998                           
  2999                           ; BSR set to: 0
  3000  001920  0100               	movlb	0	; () banked
  3001  001922  2B8A               	incf	___fldiv@aexp& (0+255),f,b
  3002  001924                     l1143:
  3003                           
  3004                           ; BSR set to: 0
  3005  001924  0E19               	movlw	25
  3006  001926  0100               	movlb	0	; () banked
  3007  001928  658A               	cpfsgt	___fldiv@aexp& (0+255),b
  3008  00192A  D7BA               	goto	l4525
  3009                           
  3010                           ; BSR set to: 0
  3011                           
  3012                           ; BSR set to: 0
  3013  00192C  0100               	movlb	0	; () banked
  3014  00192E  517F               	movf	___fldiv@rem& (0+255),w,b
  3015  001930  0100               	movlb	0	; () banked
  3016  001932  1180               	iorwf	(___fldiv@rem+1)& (0+255),w,b
  3017  001934  0100               	movlb	0	; () banked
  3018  001936  1181               	iorwf	(___fldiv@rem+2)& (0+255),w,b
  3019  001938  0100               	movlb	0	; () banked
  3020  00193A  1182               	iorwf	(___fldiv@rem+3)& (0+255),w,b
  3021  00193C  B4D8               	btfsc	status,2,c
  3022  00193E  D018               	goto	l4551
  3023                           
  3024                           ; BSR set to: 0
  3025  001940  0100               	movlb	0	; () banked
  3026  001942  8185               	bsf	___fldiv@grs& (0+255),0,b
  3027                           
  3028                           ; BSR set to: 0
  3029  001944  D015               	goto	l4551
  3030  001946                     l4545:
  3031                           
  3032                           ; BSR set to: 0
  3033  001946  0100               	movlb	0	; () banked
  3034  001948  90D8               	bcf	status,0,c
  3035  00194A  3772               	rlcf	___fldiv@b& (0+255),f,b
  3036  00194C  3773               	rlcf	(___fldiv@b+1)& (0+255),f,b
  3037  00194E  3774               	rlcf	(___fldiv@b+2)& (0+255),f,b
  3038  001950  3775               	rlcf	(___fldiv@b+3)& (0+255),f,b
  3039                           
  3040                           ; BSR set to: 0
  3041  001952  0100               	movlb	0	; () banked
  3042  001954  AF88               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3043  001956  D002               	goto	l1152
  3044                           
  3045                           ; BSR set to: 0
  3046  001958  0100               	movlb	0	; () banked
  3047  00195A  8172               	bsf	___fldiv@b& (0+255),0,b
  3048  00195C                     l1152:
  3049                           
  3050                           ; BSR set to: 0
  3051  00195C  0100               	movlb	0	; () banked
  3052  00195E  90D8               	bcf	status,0,c
  3053  001960  3785               	rlcf	___fldiv@grs& (0+255),f,b
  3054  001962  3786               	rlcf	(___fldiv@grs+1)& (0+255),f,b
  3055  001964  3787               	rlcf	(___fldiv@grs+2)& (0+255),f,b
  3056  001966  3788               	rlcf	(___fldiv@grs+3)& (0+255),f,b
  3057  001968  0100               	movlb	0	; () banked
  3058  00196A  0783               	decf	___fldiv@new_exp& (0+255),f,b
  3059  00196C  A0D8               	btfss	status,0,c
  3060  00196E  0784               	decf	(___fldiv@new_exp+1)& (0+255),f,b
  3061  001970                     l4551:
  3062                           
  3063                           ; BSR set to: 0
  3064  001970  0100               	movlb	0	; () banked
  3065  001972  AF74               	btfss	(___fldiv@b+2)& (0+255),7,b
  3066  001974  D7E8               	goto	l4545
  3067                           
  3068                           ; BSR set to: 0
  3069                           
  3070                           ; BSR set to: 0
  3071  001976  0E00               	movlw	0
  3072  001978  0100               	movlb	0	; () banked
  3073  00197A  6F8A               	movwf	___fldiv@aexp& (0+255),b
  3074                           
  3075                           ; BSR set to: 0
  3076  00197C  0100               	movlb	0	; () banked
  3077  00197E  AF88               	btfss	(___fldiv@grs+3)& (0+255),7,b
  3078  001980  D024               	goto	l1154
  3079                           
  3080                           ; BSR set to: 0
  3081  001982  0EFF               	movlw	255
  3082  001984  0100               	movlb	0	; () banked
  3083  001986  1585               	andwf	___fldiv@grs& (0+255),w,b
  3084  001988  0100               	movlb	0	; () banked
  3085  00198A  6F7A               	movwf	??___fldiv& (0+255),b
  3086  00198C  0EFF               	movlw	255
  3087  00198E  0100               	movlb	0	; () banked
  3088  001990  1586               	andwf	(___fldiv@grs+1)& (0+255),w,b
  3089  001992  0100               	movlb	0	; () banked
  3090  001994  6F7B               	movwf	(??___fldiv+1)& (0+255),b
  3091  001996  0EFF               	movlw	255
  3092  001998  0100               	movlb	0	; () banked
  3093  00199A  1587               	andwf	(___fldiv@grs+2)& (0+255),w,b
  3094  00199C  0100               	movlb	0	; () banked
  3095  00199E  6F7C               	movwf	(??___fldiv+2)& (0+255),b
  3096  0019A0  0E7F               	movlw	127
  3097  0019A2  0100               	movlb	0	; () banked
  3098  0019A4  1588               	andwf	(___fldiv@grs+3)& (0+255),w,b
  3099  0019A6  0100               	movlb	0	; () banked
  3100  0019A8  6F7D               	movwf	(??___fldiv+3)& (0+255),b
  3101  0019AA  0100               	movlb	0	; () banked
  3102  0019AC  517A               	movf	??___fldiv& (0+255),w,b
  3103  0019AE  0100               	movlb	0	; () banked
  3104  0019B0  117B               	iorwf	(??___fldiv+1)& (0+255),w,b
  3105  0019B2  0100               	movlb	0	; () banked
  3106  0019B4  117C               	iorwf	(??___fldiv+2)& (0+255),w,b
  3107  0019B6  0100               	movlb	0	; () banked
  3108  0019B8  117D               	iorwf	(??___fldiv+3)& (0+255),w,b
  3109  0019BA  A4D8               	btfss	status,2,c
  3110  0019BC  D003               	goto	l4561
  3111                           
  3112                           ; BSR set to: 0
  3113                           
  3114                           ; BSR set to: 0
  3115  0019BE  0100               	movlb	0	; () banked
  3116  0019C0  A172               	btfss	___fldiv@b& (0+255),0,b
  3117  0019C2  D003               	goto	l1154
  3118  0019C4                     l4561:
  3119                           
  3120                           ; BSR set to: 0
  3121  0019C4  0E01               	movlw	1
  3122  0019C6  0100               	movlb	0	; () banked
  3123  0019C8  6F8A               	movwf	___fldiv@aexp& (0+255),b
  3124  0019CA                     l1154:
  3125                           
  3126                           ; BSR set to: 0
  3127  0019CA  0100               	movlb	0	; () banked
  3128  0019CC  518A               	movf	___fldiv@aexp& (0+255),w,b
  3129  0019CE  0100               	movlb	0	; () banked
  3130  0019D0  B4D8               	btfsc	status,2,c
  3131  0019D2  D023               	goto	l4571
  3132                           
  3133                           ; BSR set to: 0
  3134  0019D4  0E01               	movlw	1
  3135  0019D6  0100               	movlb	0	; () banked
  3136  0019D8  2772               	addwf	___fldiv@b& (0+255),f,b
  3137  0019DA  0E00               	movlw	0
  3138  0019DC  2373               	addwfc	(___fldiv@b+1)& (0+255),f,b
  3139  0019DE  2374               	addwfc	(___fldiv@b+2)& (0+255),f,b
  3140  0019E0  2375               	addwfc	(___fldiv@b+3)& (0+255),f,b
  3141                           
  3142                           ; BSR set to: 0
  3143  0019E2  0100               	movlb	0	; () banked
  3144  0019E4  A175               	btfss	(___fldiv@b+3)& (0+255),0,b
  3145  0019E6  D019               	goto	l4571
  3146                           
  3147                           ; BSR set to: 0
  3148  0019E8  C072  F07A         	movff	___fldiv@b,??___fldiv
  3149  0019EC  C073  F07B         	movff	___fldiv@b+1,??___fldiv+1
  3150  0019F0  C074  F07C         	movff	___fldiv@b+2,??___fldiv+2
  3151  0019F4  C075  F07D         	movff	___fldiv@b+3,??___fldiv+3
  3152  0019F8  0100               	movlb	0	; () banked
  3153  0019FA  357D               	rlcf	(??___fldiv+3)& (0+255),w,b
  3154  0019FC  337D               	rrcf	(??___fldiv+3)& (0+255),f,b
  3155  0019FE  337C               	rrcf	(??___fldiv+2)& (0+255),f,b
  3156  001A00  337B               	rrcf	(??___fldiv+1)& (0+255),f,b
  3157  001A02  337A               	rrcf	??___fldiv& (0+255),f,b
  3158  001A04  C07A  F072         	movff	??___fldiv,___fldiv@b
  3159  001A08  C07B  F073         	movff	??___fldiv+1,___fldiv@b+1
  3160  001A0C  C07C  F074         	movff	??___fldiv+2,___fldiv@b+2
  3161  001A10  C07D  F075         	movff	??___fldiv+3,___fldiv@b+3
  3162                           
  3163                           ; BSR set to: 0
  3164  001A14  0100               	movlb	0	; () banked
  3165  001A16  4B83               	infsnz	___fldiv@new_exp& (0+255),f,b
  3166  001A18  2B84               	incf	(___fldiv@new_exp+1)& (0+255),f,b
  3167  001A1A                     l4571:
  3168                           
  3169                           ; BSR set to: 0
  3170  001A1A  0100               	movlb	0	; () banked
  3171  001A1C  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3172  001A1E  D014               	goto	l4575
  3173  001A20  0100               	movlb	0	; () banked
  3174  001A22  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3175  001A24  E104               	bnz	u4980
  3176  001A26  0100               	movlb	0	; () banked
  3177  001A28  2983               	incf	___fldiv@new_exp& (0+255),w,b
  3178  001A2A  A0D8               	btfss	status,0,c
  3179  001A2C  D00D               	goto	l4575
  3180  001A2E                     u4980:
  3181                           
  3182                           ; BSR set to: 0
  3183  001A2E  0E00               	movlw	0
  3184  001A30  0100               	movlb	0	; () banked
  3185  001A32  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3186  001A34  6983               	setf	___fldiv@new_exp& (0+255),b
  3187  001A36  0E00               	movlw	0
  3188  001A38  0100               	movlb	0	; () banked
  3189  001A3A  6F72               	movwf	___fldiv@b& (0+255),b
  3190  001A3C  0E00               	movlw	0
  3191  001A3E  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  3192  001A40  0E00               	movlw	0
  3193  001A42  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  3194  001A44  0E00               	movlw	0
  3195  001A46  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  3196  001A48                     l4575:
  3197                           
  3198                           ; BSR set to: 0
  3199  001A48  0100               	movlb	0	; () banked
  3200  001A4A  BF84               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
  3201  001A4C  D007               	goto	l4577
  3202  001A4E  0100               	movlb	0	; () banked
  3203  001A50  5184               	movf	(___fldiv@new_exp+1)& (0+255),w,b
  3204  001A52  E115               	bnz	l4579
  3205  001A54  0100               	movlb	0	; () banked
  3206  001A56  0583               	decf	___fldiv@new_exp& (0+255),w,b
  3207  001A58  B0D8               	btfsc	status,0,c
  3208  001A5A  D011               	goto	l4579
  3209  001A5C                     l4577:
  3210                           
  3211                           ; BSR set to: 0
  3212  001A5C  0E00               	movlw	0
  3213  001A5E  0100               	movlb	0	; () banked
  3214  001A60  6F84               	movwf	(___fldiv@new_exp+1)& (0+255),b
  3215  001A62  0E00               	movlw	0
  3216  001A64  6F83               	movwf	___fldiv@new_exp& (0+255),b
  3217  001A66  0E00               	movlw	0
  3218  001A68  0100               	movlb	0	; () banked
  3219  001A6A  6F72               	movwf	___fldiv@b& (0+255),b
  3220  001A6C  0E00               	movlw	0
  3221  001A6E  6F73               	movwf	(___fldiv@b+1)& (0+255),b
  3222  001A70  0E00               	movlw	0
  3223  001A72  6F74               	movwf	(___fldiv@b+2)& (0+255),b
  3224  001A74  0E00               	movlw	0
  3225  001A76  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  3226  001A78  0E00               	movlw	0
  3227  001A7A  0100               	movlb	0	; () banked
  3228  001A7C  6F7E               	movwf	___fldiv@sign& (0+255),b
  3229  001A7E                     l4579:
  3230                           
  3231                           ; BSR set to: 0
  3232  001A7E  C083  F089         	movff	___fldiv@new_exp,___fldiv@bexp
  3233                           
  3234                           ; BSR set to: 0
  3235  001A82  0100               	movlb	0	; () banked
  3236  001A84  A189               	btfss	___fldiv@bexp& (0+255),0,b
  3237  001A86  D003               	goto	l4585
  3238                           
  3239                           ; BSR set to: 0
  3240  001A88  0100               	movlb	0	; () banked
  3241  001A8A  8F74               	bsf	(___fldiv@b+2)& (0+255),7,b
  3242  001A8C  D002               	goto	l4587
  3243  001A8E                     l4585:
  3244                           
  3245                           ; BSR set to: 0
  3246  001A8E  0100               	movlb	0	; () banked
  3247  001A90  9F74               	bcf	(___fldiv@b+2)& (0+255),7,b
  3248  001A92                     l4587:
  3249                           
  3250                           ; BSR set to: 0
  3251  001A92  0100               	movlb	0	; () banked
  3252  001A94  90D8               	bcf	status,0,c
  3253  001A96  3189               	rrcf	___fldiv@bexp& (0+255),w,b
  3254  001A98  0100               	movlb	0	; () banked
  3255  001A9A  6F75               	movwf	(___fldiv@b+3)& (0+255),b
  3256                           
  3257                           ; BSR set to: 0
  3258  001A9C  0100               	movlb	0	; () banked
  3259  001A9E  517E               	movf	___fldiv@sign& (0+255),w,b
  3260  001AA0  0100               	movlb	0	; () banked
  3261  001AA2  1375               	iorwf	(___fldiv@b+3)& (0+255),f,b
  3262                           
  3263                           ; BSR set to: 0
  3264  001AA4  C072  F072         	movff	___fldiv@b,?___fldiv
  3265  001AA8  C073  F073         	movff	___fldiv@b+1,?___fldiv+1
  3266  001AAC  C074  F074         	movff	___fldiv@b+2,?___fldiv+2
  3267  001AB0  C075  F075         	movff	___fldiv@b+3,?___fldiv+3
  3268  001AB4  0012               	return	
  3269  001AB6                     __end_of___fldiv:
  3270                           	opt stack 0
  3271                           tblptru	equ	0xFF8
  3272                           tblptrh	equ	0xFF7
  3273                           tblptrl	equ	0xFF6
  3274                           tablat	equ	0xFF5
  3275                           postinc0	equ	0xFEE
  3276                           wreg	equ	0xFE8
  3277                           postdec1	equ	0xFE5
  3278                           fsr1l	equ	0xFE1
  3279                           status	equ	0xFD8
  3280                           
  3281 ;; *************** function _releaseUP *****************
  3282 ;; Defined at:
  3283 ;;		line 59 in file "source/DisplayProtocol.h"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3297 ;;      Params:         0       0       0       0       0       0       0
  3298 ;;      Locals:         0       0       0       0       0       0       0
  3299 ;;      Temps:          0       0       0       0       0       0       0
  3300 ;;      Totals:         0       0       0       0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used:    1
  3303 ;; Hardware stack levels required when called:   11
  3304 ;; This function calls:
  3305 ;;		Nothing
  3306 ;; This function is called by:
  3307 ;;		_main
  3308 ;; This function uses a non-reentrant model
  3309 ;;
  3310                           
  3311                           	psect	text5
  3312  003A1A                     __ptext5:
  3313                           	opt stack 0
  3314  003A1A                     _releaseUP:
  3315                           	opt stack 19
  3316                           
  3317                           ;DisplayProtocol.h: 60: UPisLP = 0;
  3318                           
  3319                           ; BSR set to: 0
  3320                           ;incstack = 0
  3321  003A1A  0E00               	movlw	0
  3322  003A1C  6E47               	movwf	_UPisLP,c
  3323                           
  3324                           ;DisplayProtocol.h: 61: UPsecurLock = 0;
  3325  003A1E  0E00               	movlw	0
  3326  003A20  0100               	movlb	0	; () banked
  3327  003A22  6FE5               	movwf	_UPsecurLock& (0+255),b
  3328                           
  3329                           ; BSR set to: 0
  3330  003A24  0012               	return		;funcret
  3331  003A26                     __end_of_releaseUP:
  3332                           	opt stack 0
  3333                           tblptru	equ	0xFF8
  3334                           tblptrh	equ	0xFF7
  3335                           tblptrl	equ	0xFF6
  3336                           tablat	equ	0xFF5
  3337                           postinc0	equ	0xFEE
  3338                           wreg	equ	0xFE8
  3339                           postdec1	equ	0xFE5
  3340                           fsr1l	equ	0xFE1
  3341                           status	equ	0xFD8
  3342                           
  3343 ;; *************** function _releaseRETRO *****************
  3344 ;; Defined at:
  3345 ;;		line 94 in file "source/DisplayProtocol.h"
  3346 ;; Parameters:    Size  Location     Type
  3347 ;;		None
  3348 ;; Auto vars:     Size  Location     Type
  3349 ;;		None
  3350 ;; Return value:  Size  Location     Type
  3351 ;;                  1    wreg      void 
  3352 ;; Registers used:
  3353 ;;		wreg, status,2
  3354 ;; Tracked objects:
  3355 ;;		On entry : 0/0
  3356 ;;		On exit  : 0/0
  3357 ;;		Unchanged: 0/0
  3358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3359 ;;      Params:         0       0       0       0       0       0       0
  3360 ;;      Locals:         0       0       0       0       0       0       0
  3361 ;;      Temps:          0       0       0       0       0       0       0
  3362 ;;      Totals:         0       0       0       0       0       0       0
  3363 ;;Total ram usage:        0 bytes
  3364 ;; Hardware stack levels used:    1
  3365 ;; Hardware stack levels required when called:   11
  3366 ;; This function calls:
  3367 ;;		Nothing
  3368 ;; This function is called by:
  3369 ;;		_main
  3370 ;; This function uses a non-reentrant model
  3371 ;;
  3372                           
  3373                           	psect	text6
  3374  003A26                     __ptext6:
  3375                           	opt stack 0
  3376  003A26                     _releaseRETRO:
  3377                           	opt stack 19
  3378                           
  3379                           ;DisplayProtocol.h: 95: RETROisLP = 0;
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;incstack = 0
  3383  003A26  0E00               	movlw	0
  3384  003A28  6E46               	movwf	_RETROisLP,c
  3385                           
  3386                           ;DisplayProtocol.h: 96: RETROsecurLock = 0;
  3387  003A2A  0E00               	movlw	0
  3388  003A2C  0100               	movlb	0	; () banked
  3389  003A2E  6FE4               	movwf	_RETROsecurLock& (0+255),b
  3390                           
  3391                           ; BSR set to: 0
  3392  003A30  0012               	return		;funcret
  3393  003A32                     __end_of_releaseRETRO:
  3394                           	opt stack 0
  3395                           tblptru	equ	0xFF8
  3396                           tblptrh	equ	0xFF7
  3397                           tblptrl	equ	0xFF6
  3398                           tablat	equ	0xFF5
  3399                           postinc0	equ	0xFEE
  3400                           wreg	equ	0xFE8
  3401                           postdec1	equ	0xFE5
  3402                           fsr1l	equ	0xFE1
  3403                           status	equ	0xFD8
  3404                           
  3405 ;; *************** function _releaseENTER *****************
  3406 ;; Defined at:
  3407 ;;		line 117 in file "source/DisplayProtocol.h"
  3408 ;; Parameters:    Size  Location     Type
  3409 ;;		None
  3410 ;; Auto vars:     Size  Location     Type
  3411 ;;		None
  3412 ;; Return value:  Size  Location     Type
  3413 ;;                  1    wreg      void 
  3414 ;; Registers used:
  3415 ;;		wreg, status,2
  3416 ;; Tracked objects:
  3417 ;;		On entry : 0/0
  3418 ;;		On exit  : 0/0
  3419 ;;		Unchanged: 0/0
  3420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3421 ;;      Params:         0       0       0       0       0       0       0
  3422 ;;      Locals:         0       0       0       0       0       0       0
  3423 ;;      Temps:          0       0       0       0       0       0       0
  3424 ;;      Totals:         0       0       0       0       0       0       0
  3425 ;;Total ram usage:        0 bytes
  3426 ;; Hardware stack levels used:    1
  3427 ;; Hardware stack levels required when called:   11
  3428 ;; This function calls:
  3429 ;;		Nothing
  3430 ;; This function is called by:
  3431 ;;		_main
  3432 ;; This function uses a non-reentrant model
  3433 ;;
  3434                           
  3435                           	psect	text7
  3436  003A32                     __ptext7:
  3437                           	opt stack 0
  3438  003A32                     _releaseENTER:
  3439                           	opt stack 19
  3440                           
  3441                           ;DisplayProtocol.h: 118: ENTERisLP = 0;
  3442                           
  3443                           ; BSR set to: 0
  3444                           ;incstack = 0
  3445  003A32  0E00               	movlw	0
  3446  003A34  6E45               	movwf	_ENTERisLP,c
  3447                           
  3448                           ;DisplayProtocol.h: 119: ENTERsecurLock = 0;
  3449  003A36  0E00               	movlw	0
  3450  003A38  0100               	movlb	0	; () banked
  3451  003A3A  6FE3               	movwf	_ENTERsecurLock& (0+255),b
  3452                           
  3453                           ; BSR set to: 0
  3454  003A3C  0012               	return		;funcret
  3455  003A3E                     __end_of_releaseENTER:
  3456                           	opt stack 0
  3457                           tblptru	equ	0xFF8
  3458                           tblptrh	equ	0xFF7
  3459                           tblptrl	equ	0xFF6
  3460                           tablat	equ	0xFF5
  3461                           postinc0	equ	0xFEE
  3462                           wreg	equ	0xFE8
  3463                           postdec1	equ	0xFE5
  3464                           fsr1l	equ	0xFE1
  3465                           status	equ	0xFD8
  3466                           
  3467 ;; *************** function _releaseDOWN *****************
  3468 ;; Defined at:
  3469 ;;		line 79 in file "source/DisplayProtocol.h"
  3470 ;; Parameters:    Size  Location     Type
  3471 ;;		None
  3472 ;; Auto vars:     Size  Location     Type
  3473 ;;		None
  3474 ;; Return value:  Size  Location     Type
  3475 ;;                  1    wreg      void 
  3476 ;; Registers used:
  3477 ;;		wreg, status,2
  3478 ;; Tracked objects:
  3479 ;;		On entry : 0/0
  3480 ;;		On exit  : 0/0
  3481 ;;		Unchanged: 0/0
  3482 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3483 ;;      Params:         0       0       0       0       0       0       0
  3484 ;;      Locals:         0       0       0       0       0       0       0
  3485 ;;      Temps:          0       0       0       0       0       0       0
  3486 ;;      Totals:         0       0       0       0       0       0       0
  3487 ;;Total ram usage:        0 bytes
  3488 ;; Hardware stack levels used:    1
  3489 ;; Hardware stack levels required when called:   11
  3490 ;; This function calls:
  3491 ;;		Nothing
  3492 ;; This function is called by:
  3493 ;;		_main
  3494 ;; This function uses a non-reentrant model
  3495 ;;
  3496                           
  3497                           	psect	text8
  3498  003A3E                     __ptext8:
  3499                           	opt stack 0
  3500  003A3E                     _releaseDOWN:
  3501                           	opt stack 19
  3502                           
  3503                           ;DisplayProtocol.h: 80: DOWNisLP = 0;
  3504                           
  3505                           ; BSR set to: 0
  3506                           ;incstack = 0
  3507  003A3E  0E00               	movlw	0
  3508  003A40  6E44               	movwf	_DOWNisLP,c
  3509                           
  3510                           ;DisplayProtocol.h: 81: DOWNsecurLock = 0;
  3511  003A42  0E00               	movlw	0
  3512  003A44  0100               	movlb	0	; () banked
  3513  003A46  6FE2               	movwf	_DOWNsecurLock& (0+255),b
  3514                           
  3515                           ; BSR set to: 0
  3516  003A48  0012               	return		;funcret
  3517  003A4A                     __end_of_releaseDOWN:
  3518                           	opt stack 0
  3519                           tblptru	equ	0xFF8
  3520                           tblptrh	equ	0xFF7
  3521                           tblptrl	equ	0xFF6
  3522                           tablat	equ	0xFF5
  3523                           postinc0	equ	0xFEE
  3524                           wreg	equ	0xFE8
  3525                           postdec1	equ	0xFE5
  3526                           fsr1l	equ	0xFE1
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _pressUP *****************
  3530 ;; Defined at:
  3531 ;;		line 28 in file "source/DisplayProtocol.h"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;		None
  3534 ;; Auto vars:     Size  Location     Type
  3535 ;;		None
  3536 ;; Return value:  Size  Location     Type
  3537 ;;                  1    wreg      void 
  3538 ;; Registers used:
  3539 ;;		wreg, status,2, status,0
  3540 ;; Tracked objects:
  3541 ;;		On entry : 0/0
  3542 ;;		On exit  : 0/0
  3543 ;;		Unchanged: 0/0
  3544 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3545 ;;      Params:         0       0       0       0       0       0       0
  3546 ;;      Locals:         0       0       0       0       0       0       0
  3547 ;;      Temps:          0       0       0       0       0       0       0
  3548 ;;      Totals:         0       0       0       0       0       0       0
  3549 ;;Total ram usage:        0 bytes
  3550 ;; Hardware stack levels used:    1
  3551 ;; Hardware stack levels required when called:   11
  3552 ;; This function calls:
  3553 ;;		Nothing
  3554 ;; This function is called by:
  3555 ;;		_main
  3556 ;; This function uses a non-reentrant model
  3557 ;;
  3558                           
  3559                           	psect	text9
  3560  0038D6                     __ptext9:
  3561                           	opt stack 0
  3562  0038D6                     _pressUP:
  3563                           	opt stack 19
  3564                           
  3565                           ;DisplayProtocol.h: 29: if(actualScreen == 0 || actualScreen == 4) {
  3566                           
  3567                           ; BSR set to: 0
  3568                           ;incstack = 0
  3569  0038D6  0100               	movlb	0	; () banked
  3570  0038D8  51E6               	movf	_actualScreen& (0+255),w,b
  3571  0038DA  B4D8               	btfsc	status,2,c
  3572  0038DC  D005               	goto	l4969
  3573                           
  3574                           ; BSR set to: 0
  3575  0038DE  0E04               	movlw	4
  3576  0038E0  0100               	movlb	0	; () banked
  3577  0038E2  19E6               	xorwf	_actualScreen& (0+255),w,b
  3578  0038E4  A4D8               	btfss	status,2,c
  3579  0038E6  0012               	return	
  3580  0038E8                     l4969:
  3581                           
  3582                           ; BSR set to: 0
  3583                           ;DisplayProtocol.h: 30: menuSection++;
  3584  0038E8  0100               	movlb	0	; () banked
  3585  0038EA  2BEB               	incf	_menuSection& (0+255),f,b
  3586                           
  3587                           ; BSR set to: 0
  3588                           ;DisplayProtocol.h: 31: if(menuSection > 6)
  3589  0038EC  0100               	movlb	0	; () banked
  3590  0038EE  51EB               	movf	_menuSection& (0+255),w,b
  3591  0038F0  0A80               	xorlw	128
  3592  0038F2  0F79               	addlw	-135
  3593  0038F4  A0D8               	btfss	status,0,c
  3594  0038F6  0012               	return	
  3595                           
  3596                           ; BSR set to: 0
  3597                           ;DisplayProtocol.h: 32: menuSection = 0;
  3598  0038F8  0E00               	movlw	0
  3599  0038FA  0100               	movlb	0	; () banked
  3600  0038FC  6FEB               	movwf	_menuSection& (0+255),b
  3601                           
  3602                           ; BSR set to: 0
  3603  0038FE  0012               	return	
  3604  003900                     __end_of_pressUP:
  3605                           	opt stack 0
  3606                           tblptru	equ	0xFF8
  3607                           tblptrh	equ	0xFF7
  3608                           tblptrl	equ	0xFF6
  3609                           tablat	equ	0xFF5
  3610                           postinc0	equ	0xFEE
  3611                           wreg	equ	0xFE8
  3612                           postdec1	equ	0xFE5
  3613                           fsr1l	equ	0xFE1
  3614                           status	equ	0xFD8
  3615                           
  3616 ;; *************** function _pressRETRO *****************
  3617 ;; Defined at:
  3618 ;;		line 84 in file "source/DisplayProtocol.h"
  3619 ;; Parameters:    Size  Location     Type
  3620 ;;		None
  3621 ;; Auto vars:     Size  Location     Type
  3622 ;;		None
  3623 ;; Return value:  Size  Location     Type
  3624 ;;                  1    wreg      void 
  3625 ;; Registers used:
  3626 ;;		None
  3627 ;; Tracked objects:
  3628 ;;		On entry : 0/0
  3629 ;;		On exit  : 0/0
  3630 ;;		Unchanged: 0/0
  3631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3632 ;;      Params:         0       0       0       0       0       0       0
  3633 ;;      Locals:         0       0       0       0       0       0       0
  3634 ;;      Temps:          0       0       0       0       0       0       0
  3635 ;;      Totals:         0       0       0       0       0       0       0
  3636 ;;Total ram usage:        0 bytes
  3637 ;; Hardware stack levels used:    1
  3638 ;; Hardware stack levels required when called:   11
  3639 ;; This function calls:
  3640 ;;		Nothing
  3641 ;; This function is called by:
  3642 ;;		_main
  3643 ;; This function uses a non-reentrant model
  3644 ;;
  3645                           
  3646                           	psect	text10
  3647  003A74                     __ptext10:
  3648                           	opt stack 0
  3649  003A74                     _pressRETRO:
  3650                           	opt stack 19
  3651                           
  3652                           ; BSR set to: 0
  3653                           ;incstack = 0
  3654  003A74  0012               	return		;funcret
  3655  003A76                     __end_of_pressRETRO:
  3656                           	opt stack 0
  3657                           tblptru	equ	0xFF8
  3658                           tblptrh	equ	0xFF7
  3659                           tblptrl	equ	0xFF6
  3660                           tablat	equ	0xFF5
  3661                           postinc0	equ	0xFEE
  3662                           wreg	equ	0xFE8
  3663                           postdec1	equ	0xFE5
  3664                           fsr1l	equ	0xFE1
  3665                           status	equ	0xFD8
  3666                           
  3667 ;; *************** function _pressENTER *****************
  3668 ;; Defined at:
  3669 ;;		line 99 in file "source/DisplayProtocol.h"
  3670 ;; Parameters:    Size  Location     Type
  3671 ;;		None
  3672 ;; Auto vars:     Size  Location     Type
  3673 ;;		None
  3674 ;; Return value:  Size  Location     Type
  3675 ;;                  1    wreg      void 
  3676 ;; Registers used:
  3677 ;;		None
  3678 ;; Tracked objects:
  3679 ;;		On entry : 0/0
  3680 ;;		On exit  : 0/0
  3681 ;;		Unchanged: 0/0
  3682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3683 ;;      Params:         0       0       0       0       0       0       0
  3684 ;;      Locals:         0       0       0       0       0       0       0
  3685 ;;      Temps:          0       0       0       0       0       0       0
  3686 ;;      Totals:         0       0       0       0       0       0       0
  3687 ;;Total ram usage:        0 bytes
  3688 ;; Hardware stack levels used:    1
  3689 ;; Hardware stack levels required when called:   11
  3690 ;; This function calls:
  3691 ;;		Nothing
  3692 ;; This function is called by:
  3693 ;;		_main
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           	psect	text11
  3698  003A76                     __ptext11:
  3699                           	opt stack 0
  3700  003A76                     _pressENTER:
  3701                           	opt stack 19
  3702                           
  3703                           ;incstack = 0
  3704  003A76  0012               	return		;funcret
  3705  003A78                     __end_of_pressENTER:
  3706                           	opt stack 0
  3707                           tblptru	equ	0xFF8
  3708                           tblptrh	equ	0xFF7
  3709                           tblptrl	equ	0xFF6
  3710                           tablat	equ	0xFF5
  3711                           postinc0	equ	0xFEE
  3712                           wreg	equ	0xFE8
  3713                           postdec1	equ	0xFE5
  3714                           fsr1l	equ	0xFE1
  3715                           status	equ	0xFD8
  3716                           
  3717 ;; *************** function _pressDOWN *****************
  3718 ;; Defined at:
  3719 ;;		line 64 in file "source/DisplayProtocol.h"
  3720 ;; Parameters:    Size  Location     Type
  3721 ;;		None
  3722 ;; Auto vars:     Size  Location     Type
  3723 ;;		None
  3724 ;; Return value:  Size  Location     Type
  3725 ;;                  1    wreg      void 
  3726 ;; Registers used:
  3727 ;;		wreg, status,2, status,0
  3728 ;; Tracked objects:
  3729 ;;		On entry : 0/0
  3730 ;;		On exit  : 0/0
  3731 ;;		Unchanged: 0/0
  3732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3733 ;;      Params:         0       0       0       0       0       0       0
  3734 ;;      Locals:         0       0       0       0       0       0       0
  3735 ;;      Temps:          0       0       0       0       0       0       0
  3736 ;;      Totals:         0       0       0       0       0       0       0
  3737 ;;Total ram usage:        0 bytes
  3738 ;; Hardware stack levels used:    1
  3739 ;; Hardware stack levels required when called:   11
  3740 ;; This function calls:
  3741 ;;		Nothing
  3742 ;; This function is called by:
  3743 ;;		_main
  3744 ;; This function uses a non-reentrant model
  3745 ;;
  3746                           
  3747                           	psect	text12
  3748  003928                     __ptext12:
  3749                           	opt stack 0
  3750  003928                     _pressDOWN:
  3751                           	opt stack 19
  3752                           
  3753                           ;DisplayProtocol.h: 65: if(actualScreen == 0 || actualScreen == 4) {
  3754                           
  3755                           ;incstack = 0
  3756  003928  0100               	movlb	0	; () banked
  3757  00392A  51E6               	movf	_actualScreen& (0+255),w,b
  3758  00392C  B4D8               	btfsc	status,2,c
  3759  00392E  D005               	goto	l5003
  3760                           
  3761                           ; BSR set to: 0
  3762  003930  0E04               	movlw	4
  3763  003932  0100               	movlb	0	; () banked
  3764  003934  19E6               	xorwf	_actualScreen& (0+255),w,b
  3765  003936  A4D8               	btfss	status,2,c
  3766  003938  0012               	return	
  3767  00393A                     l5003:
  3768                           
  3769                           ; BSR set to: 0
  3770                           ;DisplayProtocol.h: 66: menuSection--;
  3771  00393A  0100               	movlb	0	; () banked
  3772  00393C  07EB               	decf	_menuSection& (0+255),f,b
  3773                           
  3774                           ; BSR set to: 0
  3775                           ;DisplayProtocol.h: 67: if(menuSection < 0)
  3776  00393E  0100               	movlb	0	; () banked
  3777  003940  AFEB               	btfss	_menuSection& (0+255),7,b
  3778  003942  0012               	return	
  3779                           
  3780                           ; BSR set to: 0
  3781                           ;DisplayProtocol.h: 68: menuSection = 6;
  3782  003944  0E06               	movlw	6
  3783  003946  0100               	movlb	0	; () banked
  3784  003948  6FEB               	movwf	_menuSection& (0+255),b
  3785                           
  3786                           ; BSR set to: 0
  3787  00394A  0012               	return	
  3788  00394C                     __end_of_pressDOWN:
  3789                           	opt stack 0
  3790                           tblptru	equ	0xFF8
  3791                           tblptrh	equ	0xFF7
  3792                           tblptrl	equ	0xFF6
  3793                           tablat	equ	0xFF5
  3794                           postinc0	equ	0xFEE
  3795                           wreg	equ	0xFE8
  3796                           postdec1	equ	0xFE5
  3797                           fsr1l	equ	0xFE1
  3798                           status	equ	0xFD8
  3799                           
  3800 ;; *************** function _longPressUP *****************
  3801 ;; Defined at:
  3802 ;;		line 36 in file "source/DisplayProtocol.h"
  3803 ;; Parameters:    Size  Location     Type
  3804 ;;		None
  3805 ;; Auto vars:     Size  Location     Type
  3806 ;;		None
  3807 ;; Return value:  Size  Location     Type
  3808 ;;                  1    wreg      void 
  3809 ;; Registers used:
  3810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  3811 ;; Tracked objects:
  3812 ;;		On entry : 0/0
  3813 ;;		On exit  : 0/0
  3814 ;;		Unchanged: 0/0
  3815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3816 ;;      Params:         0       0       0       0       0       0       0
  3817 ;;      Locals:         0       0       0       0       0       0       0
  3818 ;;      Temps:          0       1       0       0       0       0       0
  3819 ;;      Totals:         0       1       0       0       0       0       0
  3820 ;;Total ram usage:        1 bytes
  3821 ;; Hardware stack levels used:    1
  3822 ;; Hardware stack levels required when called:   11
  3823 ;; This function calls:
  3824 ;;		Nothing
  3825 ;; This function is called by:
  3826 ;;		_main
  3827 ;; This function uses a non-reentrant model
  3828 ;;
  3829                           
  3830                           	psect	text13
  3831  00315A                     __ptext13:
  3832                           	opt stack 0
  3833  00315A                     _longPressUP:
  3834                           	opt stack 19
  3835                           
  3836                           ;DisplayProtocol.h: 39: if(actualScreen == 0 || actualScreen == 4) {
  3837                           
  3838                           ; BSR set to: 0
  3839                           ;incstack = 0
  3840  00315A  0100               	movlb	0	; () banked
  3841  00315C  51E6               	movf	_actualScreen& (0+255),w,b
  3842  00315E  B4D8               	btfsc	status,2,c
  3843  003160  D005               	goto	l4979
  3844                           
  3845                           ; BSR set to: 0
  3846  003162  0E04               	movlw	4
  3847  003164  0100               	movlb	0	; () banked
  3848  003166  19E6               	xorwf	_actualScreen& (0+255),w,b
  3849  003168  A4D8               	btfss	status,2,c
  3850  00316A  D01A               	goto	l4991
  3851  00316C                     l4979:
  3852                           
  3853                           ; BSR set to: 0
  3854                           ;DisplayProtocol.h: 40: if(holdENTERcont > 5) {
  3855  00316C  0E05               	movlw	5
  3856  00316E  0100               	movlb	0	; () banked
  3857  003170  65E8               	cpfsgt	_holdENTERcont& (0+255),b
  3858  003172  D012               	goto	l4989
  3859                           
  3860                           ; BSR set to: 0
  3861                           ;DisplayProtocol.h: 41: if(actualScreen == 0) {
  3862  003174  0100               	movlb	0	; () banked
  3863  003176  51E6               	movf	_actualScreen& (0+255),w,b
  3864  003178  A4D8               	btfss	status,2,c
  3865  00317A  D005               	goto	l4985
  3866                           
  3867                           ; BSR set to: 0
  3868                           ;DisplayProtocol.h: 42: actualScreen = 1;
  3869  00317C  0E01               	movlw	1
  3870  00317E  0100               	movlb	0	; () banked
  3871  003180  6FE6               	movwf	_actualScreen& (0+255),b
  3872                           
  3873                           ;DisplayProtocol.h: 43: passSection = 0;
  3874  003182  0E00               	movlw	0
  3875  003184  6E4A               	movwf	_passSection,c
  3876  003186                     l4985:
  3877                           
  3878                           ; BSR set to: 0
  3879                           ;DisplayProtocol.h: 44: }
  3880                           ;DisplayProtocol.h: 45: if(actualScreen == 4)
  3881  003186  0E04               	movlw	4
  3882  003188  0100               	movlb	0	; () banked
  3883  00318A  19E6               	xorwf	_actualScreen& (0+255),w,b
  3884  00318C  A4D8               	btfss	status,2,c
  3885  00318E  0012               	return	
  3886                           
  3887                           ; BSR set to: 0
  3888                           ;DisplayProtocol.h: 46: actualScreen = 0;
  3889  003190  0E00               	movlw	0
  3890  003192  0100               	movlb	0	; () banked
  3891  003194  6FE6               	movwf	_actualScreen& (0+255),b
  3892                           
  3893                           ; BSR set to: 0
  3894                           ;DisplayProtocol.h: 47: }else
  3895  003196  0012               	return	
  3896  003198                     l4989:
  3897                           
  3898                           ; BSR set to: 0
  3899                           ;DisplayProtocol.h: 48: menuSection = 0;
  3900  003198  0E00               	movlw	0
  3901  00319A  0100               	movlb	0	; () banked
  3902  00319C  6FEB               	movwf	_menuSection& (0+255),b
  3903                           
  3904                           ; BSR set to: 0
  3905                           ;DisplayProtocol.h: 49: }else if(actualScreen == 1) {
  3906  00319E  0012               	return	
  3907  0031A0                     l4991:
  3908                           
  3909                           ; BSR set to: 0
  3910  0031A0  0100               	movlb	0	; () banked
  3911  0031A2  05E6               	decf	_actualScreen& (0+255),w,b
  3912  0031A4  A4D8               	btfss	status,2,c
  3913  0031A6  0012               	return	
  3914                           
  3915                           ; BSR set to: 0
  3916                           ;DisplayProtocol.h: 51: introducido[passSection]++;
  3917  0031A8  504A               	movf	_passSection,w,c
  3918  0031AA  0D01               	mullw	1
  3919  0031AC  0E40               	movlw	low _introducido
  3920  0031AE  24F3               	addwf	prodl,w,c
  3921  0031B0  6ED9               	movwf	fsr2l,c
  3922  0031B2  0E00               	movlw	high _introducido
  3923  0031B4  20F4               	addwfc	prodh,w,c
  3924  0031B6  6EDA               	movwf	fsr2h,c
  3925  0031B8  2ADF               	incf	indf2,f,c
  3926                           
  3927                           ;DisplayProtocol.h: 52: if(introducido[passSection] > 6)
  3928  0031BA  504A               	movf	_passSection,w,c
  3929  0031BC  0D01               	mullw	1
  3930  0031BE  0E40               	movlw	low _introducido
  3931  0031C0  24F3               	addwf	prodl,w,c
  3932  0031C2  6ED9               	movwf	fsr2l,c
  3933  0031C4  0E00               	movlw	high _introducido
  3934  0031C6  20F4               	addwfc	prodh,w,c
  3935  0031C8  6EDA               	movwf	fsr2h,c
  3936  0031CA  0E06               	movlw	6
  3937  0031CC  64DF               	cpfsgt	indf2,c
  3938  0031CE  0012               	return	
  3939                           
  3940                           ; BSR set to: 0
  3941                           ;DisplayProtocol.h: 53: introducido[passSection] = 0;
  3942  0031D0  504A               	movf	_passSection,w,c
  3943  0031D2  0D01               	mullw	1
  3944  0031D4  0E40               	movlw	low _introducido
  3945  0031D6  24F3               	addwf	prodl,w,c
  3946  0031D8  6ED9               	movwf	fsr2l,c
  3947  0031DA  0E00               	movlw	high _introducido
  3948  0031DC  20F4               	addwfc	prodh,w,c
  3949  0031DE  6EDA               	movwf	fsr2h,c
  3950  0031E0  0E00               	movlw	0
  3951  0031E2  6EDF               	movwf	indf2,c
  3952                           
  3953                           ; BSR set to: 0
  3954                           
  3955                           ; BSR set to: 0
  3956  0031E4  0012               	return	
  3957  0031E6                     __end_of_longPressUP:
  3958                           	opt stack 0
  3959                           tblptru	equ	0xFF8
  3960                           tblptrh	equ	0xFF7
  3961                           tblptrl	equ	0xFF6
  3962                           tablat	equ	0xFF5
  3963                           prodh	equ	0xFF4
  3964                           prodl	equ	0xFF3
  3965                           postinc0	equ	0xFEE
  3966                           wreg	equ	0xFE8
  3967                           postdec1	equ	0xFE5
  3968                           fsr1l	equ	0xFE1
  3969                           indf2	equ	0xFDF
  3970                           fsr2h	equ	0xFDA
  3971                           fsr2l	equ	0xFD9
  3972                           status	equ	0xFD8
  3973                           
  3974 ;; *************** function _longPressRETRO *****************
  3975 ;; Defined at:
  3976 ;;		line 88 in file "source/DisplayProtocol.h"
  3977 ;; Parameters:    Size  Location     Type
  3978 ;;		None
  3979 ;; Auto vars:     Size  Location     Type
  3980 ;;		None
  3981 ;; Return value:  Size  Location     Type
  3982 ;;                  1    wreg      void 
  3983 ;; Registers used:
  3984 ;;		wreg, status,2
  3985 ;; Tracked objects:
  3986 ;;		On entry : 0/0
  3987 ;;		On exit  : 0/0
  3988 ;;		Unchanged: 0/0
  3989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3990 ;;      Params:         0       0       0       0       0       0       0
  3991 ;;      Locals:         0       0       0       0       0       0       0
  3992 ;;      Temps:          0       0       0       0       0       0       0
  3993 ;;      Totals:         0       0       0       0       0       0       0
  3994 ;;Total ram usage:        0 bytes
  3995 ;; Hardware stack levels used:    1
  3996 ;; Hardware stack levels required when called:   11
  3997 ;; This function calls:
  3998 ;;		Nothing
  3999 ;; This function is called by:
  4000 ;;		_main
  4001 ;; This function uses a non-reentrant model
  4002 ;;
  4003                           
  4004                           	psect	text14
  4005  003A4A                     __ptext14:
  4006                           	opt stack 0
  4007  003A4A                     _longPressRETRO:
  4008                           	opt stack 19
  4009                           
  4010                           ;DisplayProtocol.h: 89: if(!RETROisLP) {
  4011                           
  4012                           ; BSR set to: 0
  4013                           ;incstack = 0
  4014  003A4A  5046               	movf	_RETROisLP,w,c
  4015  003A4C  A4D8               	btfss	status,2,c
  4016  003A4E  0012               	return	
  4017                           
  4018                           ;DisplayProtocol.h: 90: RETROisLP = 1;
  4019  003A50  0E01               	movlw	1
  4020  003A52  6E46               	movwf	_RETROisLP,c
  4021  003A54  0012               	return	
  4022  003A56                     __end_of_longPressRETRO:
  4023                           	opt stack 0
  4024                           tblptru	equ	0xFF8
  4025                           tblptrh	equ	0xFF7
  4026                           tblptrl	equ	0xFF6
  4027                           tablat	equ	0xFF5
  4028                           prodh	equ	0xFF4
  4029                           prodl	equ	0xFF3
  4030                           postinc0	equ	0xFEE
  4031                           wreg	equ	0xFE8
  4032                           postdec1	equ	0xFE5
  4033                           fsr1l	equ	0xFE1
  4034                           indf2	equ	0xFDF
  4035                           fsr2h	equ	0xFDA
  4036                           fsr2l	equ	0xFD9
  4037                           status	equ	0xFD8
  4038                           
  4039 ;; *************** function _longPressENTER *****************
  4040 ;; Defined at:
  4041 ;;		line 103 in file "source/DisplayProtocol.h"
  4042 ;; Parameters:    Size  Location     Type
  4043 ;;		None
  4044 ;; Auto vars:     Size  Location     Type
  4045 ;;		None
  4046 ;; Return value:  Size  Location     Type
  4047 ;;                  1    wreg      void 
  4048 ;; Registers used:
  4049 ;;		wreg, status,2, status,0
  4050 ;; Tracked objects:
  4051 ;;		On entry : 0/0
  4052 ;;		On exit  : 0/0
  4053 ;;		Unchanged: 0/0
  4054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4055 ;;      Params:         0       0       0       0       0       0       0
  4056 ;;      Locals:         0       0       0       0       0       0       0
  4057 ;;      Temps:          0       0       0       0       0       0       0
  4058 ;;      Totals:         0       0       0       0       0       0       0
  4059 ;;Total ram usage:        0 bytes
  4060 ;; Hardware stack levels used:    1
  4061 ;; Hardware stack levels required when called:   11
  4062 ;; This function calls:
  4063 ;;		Nothing
  4064 ;; This function is called by:
  4065 ;;		_main
  4066 ;; This function uses a non-reentrant model
  4067 ;;
  4068                           
  4069                           	psect	text15
  4070  00375E                     __ptext15:
  4071                           	opt stack 0
  4072  00375E                     _longPressENTER:
  4073                           	opt stack 19
  4074                           
  4075                           ;DisplayProtocol.h: 104: if(!ENTERisLP) {
  4076                           
  4077                           ;incstack = 0
  4078  00375E  5045               	movf	_ENTERisLP,w,c
  4079  003760  A4D8               	btfss	status,2,c
  4080  003762  0012               	return	
  4081                           
  4082                           ;DisplayProtocol.h: 105: ENTERisLP = 1;
  4083  003764  0E01               	movlw	1
  4084  003766  6E45               	movwf	_ENTERisLP,c
  4085                           
  4086                           ;DisplayProtocol.h: 106: if(holdUPcont > 5) {
  4087  003768  0E05               	movlw	5
  4088  00376A  0100               	movlb	0	; () banked
  4089  00376C  65EA               	cpfsgt	_holdUPcont& (0+255),b
  4090  00376E  D010               	goto	l5031
  4091                           
  4092                           ; BSR set to: 0
  4093                           ;DisplayProtocol.h: 107: if(actualScreen == 0)
  4094  003770  0100               	movlb	0	; () banked
  4095  003772  51E6               	movf	_actualScreen& (0+255),w,b
  4096  003774  A4D8               	btfss	status,2,c
  4097  003776  D003               	goto	l5027
  4098                           
  4099                           ; BSR set to: 0
  4100                           ;DisplayProtocol.h: 108: actualScreen = 1;
  4101  003778  0E01               	movlw	1
  4102  00377A  0100               	movlb	0	; () banked
  4103  00377C  6FE6               	movwf	_actualScreen& (0+255),b
  4104  00377E                     l5027:
  4105                           
  4106                           ; BSR set to: 0
  4107                           ;DisplayProtocol.h: 109: if(actualScreen == 4)
  4108  00377E  0E04               	movlw	4
  4109  003780  0100               	movlb	0	; () banked
  4110  003782  19E6               	xorwf	_actualScreen& (0+255),w,b
  4111  003784  A4D8               	btfss	status,2,c
  4112  003786  0012               	return	
  4113                           
  4114                           ; BSR set to: 0
  4115                           ;DisplayProtocol.h: 110: actualScreen = 0;
  4116  003788  0E00               	movlw	0
  4117  00378A  0100               	movlb	0	; () banked
  4118  00378C  6FE6               	movwf	_actualScreen& (0+255),b
  4119                           
  4120                           ; BSR set to: 0
  4121                           ;DisplayProtocol.h: 111: }else {
  4122  00378E  0012               	return	
  4123  003790                     l5031:
  4124                           
  4125                           ; BSR set to: 0
  4126                           ;DisplayProtocol.h: 112: actualScreen = 2;
  4127  003790  0E02               	movlw	2
  4128  003792  0100               	movlb	0	; () banked
  4129  003794  6FE6               	movwf	_actualScreen& (0+255),b
  4130                           
  4131                           ; BSR set to: 0
  4132  003796  0012               	return	
  4133  003798                     __end_of_longPressENTER:
  4134                           	opt stack 0
  4135                           tblptru	equ	0xFF8
  4136                           tblptrh	equ	0xFF7
  4137                           tblptrl	equ	0xFF6
  4138                           tablat	equ	0xFF5
  4139                           prodh	equ	0xFF4
  4140                           prodl	equ	0xFF3
  4141                           postinc0	equ	0xFEE
  4142                           wreg	equ	0xFE8
  4143                           postdec1	equ	0xFE5
  4144                           fsr1l	equ	0xFE1
  4145                           indf2	equ	0xFDF
  4146                           fsr2h	equ	0xFDA
  4147                           fsr2l	equ	0xFD9
  4148                           status	equ	0xFD8
  4149                           
  4150 ;; *************** function _longPressDOWN *****************
  4151 ;; Defined at:
  4152 ;;		line 72 in file "source/DisplayProtocol.h"
  4153 ;; Parameters:    Size  Location     Type
  4154 ;;		None
  4155 ;; Auto vars:     Size  Location     Type
  4156 ;;		None
  4157 ;; Return value:  Size  Location     Type
  4158 ;;                  1    wreg      void 
  4159 ;; Registers used:
  4160 ;;		None
  4161 ;; Tracked objects:
  4162 ;;		On entry : 0/0
  4163 ;;		On exit  : 0/0
  4164 ;;		Unchanged: 0/0
  4165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4166 ;;      Params:         0       0       0       0       0       0       0
  4167 ;;      Locals:         0       0       0       0       0       0       0
  4168 ;;      Temps:          0       0       0       0       0       0       0
  4169 ;;      Totals:         0       0       0       0       0       0       0
  4170 ;;Total ram usage:        0 bytes
  4171 ;; Hardware stack levels used:    1
  4172 ;; Hardware stack levels required when called:   11
  4173 ;; This function calls:
  4174 ;;		Nothing
  4175 ;; This function is called by:
  4176 ;;		_main
  4177 ;; This function uses a non-reentrant model
  4178 ;;
  4179                           
  4180                           	psect	text16
  4181  003A78                     __ptext16:
  4182                           	opt stack 0
  4183  003A78                     _longPressDOWN:
  4184                           	opt stack 19
  4185                           
  4186                           ;incstack = 0
  4187  003A78  0012               	return		;funcret
  4188  003A7A                     __end_of_longPressDOWN:
  4189                           	opt stack 0
  4190                           tblptru	equ	0xFF8
  4191                           tblptrh	equ	0xFF7
  4192                           tblptrl	equ	0xFF6
  4193                           tablat	equ	0xFF5
  4194                           prodh	equ	0xFF4
  4195                           prodl	equ	0xFF3
  4196                           postinc0	equ	0xFEE
  4197                           wreg	equ	0xFE8
  4198                           postdec1	equ	0xFE5
  4199                           fsr1l	equ	0xFE1
  4200                           indf2	equ	0xFDF
  4201                           fsr2h	equ	0xFDA
  4202                           fsr2l	equ	0xFD9
  4203                           status	equ	0xFD8
  4204                           
  4205 ;; *************** function _lcd_init *****************
  4206 ;; Defined at:
  4207 ;;		line 179 in file "source/../../vclib_lcd.h"
  4208 ;; Parameters:    Size  Location     Type
  4209 ;;		None
  4210 ;; Auto vars:     Size  Location     Type
  4211 ;;  LCD_INIT_STR    4   27[BANK0 ] unsigned char [4]
  4212 ;;  i               1   31[BANK0 ] unsigned char 
  4213 ;; Return value:  Size  Location     Type
  4214 ;;                  1    wreg      void 
  4215 ;; Registers used:
  4216 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4217 ;; Tracked objects:
  4218 ;;		On entry : 0/0
  4219 ;;		On exit  : 0/0
  4220 ;;		Unchanged: 0/0
  4221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4222 ;;      Params:         0       0       0       0       0       0       0
  4223 ;;      Locals:         0       5       0       0       0       0       0
  4224 ;;      Temps:          0       1       0       0       0       0       0
  4225 ;;      Totals:         0       6       0       0       0       0       0
  4226 ;;Total ram usage:        6 bytes
  4227 ;; Hardware stack levels used:    1
  4228 ;; Hardware stack levels required when called:   14
  4229 ;; This function calls:
  4230 ;;		_lcd_send_4bits
  4231 ;;		_lcd_send_byte
  4232 ;; This function is called by:
  4233 ;;		_main
  4234 ;; This function uses a non-reentrant model
  4235 ;;
  4236                           
  4237                           	psect	text17
  4238  002E5A                     __ptext17:
  4239                           	opt stack 0
  4240  002E5A                     _lcd_init:
  4241                           	opt stack 16
  4242                           
  4243                           ;vclib_lcd.h: 180: unsigned char i;
  4244                           ;vclib_lcd.h: 181: unsigned char LCD_INIT_STRING[4] = {0x20 | (2 << 2), 0xc, 1, 6};
  4245                           
  4246                           ;incstack = 0
  4247  002E5A  C036  F07B         	movff	lcd_init@F7556,lcd_init@LCD_INIT_STRING
  4248  002E5E  C037  F07C         	movff	lcd_init@F7556+1,lcd_init@LCD_INIT_STRING+1
  4249  002E62  C038  F07D         	movff	lcd_init@F7556+2,lcd_init@LCD_INIT_STRING+2
  4250  002E66  C039  F07E         	movff	lcd_init@F7556+3,lcd_init@LCD_INIT_STRING+3
  4251                           
  4252                           ;vclib_lcd.h: 184: PORTBbits.RB3 = 0;
  4253  002E6A  9681               	bcf	3969,3,c	;volatile
  4254                           
  4255                           ;vclib_lcd.h: 185: PORTBbits.RB1 = 0;
  4256  002E6C  9281               	bcf	3969,1,c	;volatile
  4257                           
  4258                           ;vclib_lcd.h: 186: PORTBbits.RB2 = 0;
  4259  002E6E  9481               	bcf	3969,2,c	;volatile
  4260                           
  4261                           ;vclib_lcd.h: 187: _delay((unsigned long)((15)*(16000000/4000.0)));
  4262  002E70  0E4E               	movlw	78
  4263  002E72  0100               	movlb	0	; () banked
  4264  002E74  6F7A               	movwf	??_lcd_init& (0+255),b
  4265  002E76  0EEB               	movlw	235
  4266  002E78                     u8277:
  4267  002E78  2EE8               	decfsz	wreg,f,c
  4268  002E7A  D7FE               	goto	u8277
  4269  002E7C  2F7A               	decfsz	??_lcd_init& (0+255),f,b
  4270  002E7E  D7FC               	goto	u8277
  4271  002E80  F000               	nop	
  4272                           
  4273                           ;vclib_lcd.h: 188: for (i = 1; i <= 3; ++i) {
  4274  002E82  0E01               	movlw	1
  4275  002E84  0100               	movlb	0	; () banked
  4276  002E86  6F7F               	movwf	lcd_init@i& (0+255),b
  4277  002E88                     l6585:
  4278                           
  4279                           ; BSR set to: 0
  4280  002E88  0E03               	movlw	3
  4281  002E8A  0100               	movlb	0	; () banked
  4282  002E8C  657F               	cpfsgt	lcd_init@i& (0+255),b
  4283  002E8E  D001               	goto	l6589
  4284  002E90  D00F               	goto	l6597
  4285  002E92                     l6589:
  4286                           
  4287                           ; BSR set to: 0
  4288                           ;vclib_lcd.h: 189: lcd_send_4bits(3);
  4289  002E92  0E03               	movlw	3
  4290  002E94  EC66  F018         	call	_lcd_send_4bits
  4291                           
  4292                           ;vclib_lcd.h: 190: _delay((unsigned long)((5)*(16000000/4000.0)));
  4293  002E98  0E1A               	movlw	26
  4294  002E9A  0100               	movlb	0	; () banked
  4295  002E9C  6F7A               	movwf	??_lcd_init& (0+255),b
  4296  002E9E  0EF8               	movlw	248
  4297  002EA0                     u8287:
  4298  002EA0  2EE8               	decfsz	wreg,f,c
  4299  002EA2  D7FE               	goto	u8287
  4300  002EA4  2F7A               	decfsz	??_lcd_init& (0+255),f,b
  4301  002EA6  D7FC               	goto	u8287
  4302  002EA8  D000               	nop2	
  4303  002EAA  0100               	movlb	0	; () banked
  4304  002EAC  2B7F               	incf	lcd_init@i& (0+255),f,b
  4305  002EAE  D7EC               	goto	l6585
  4306  002EB0                     l6597:
  4307                           
  4308                           ; BSR set to: 0
  4309                           ;vclib_lcd.h: 191: }
  4310                           ;vclib_lcd.h: 192: lcd_send_4bits(2);
  4311  002EB0  0E02               	movlw	2
  4312  002EB2  EC66  F018         	call	_lcd_send_4bits
  4313                           
  4314                           ;vclib_lcd.h: 193: _delay((unsigned long)((5)*(16000000/4000.0)));
  4315  002EB6  0E1A               	movlw	26
  4316  002EB8  0100               	movlb	0	; () banked
  4317  002EBA  6F7A               	movwf	??_lcd_init& (0+255),b
  4318  002EBC  0EF8               	movlw	248
  4319  002EBE                     u8297:
  4320  002EBE  2EE8               	decfsz	wreg,f,c
  4321  002EC0  D7FE               	goto	u8297
  4322  002EC2  2F7A               	decfsz	??_lcd_init& (0+255),f,b
  4323  002EC4  D7FC               	goto	u8297
  4324  002EC6  D000               	nop2	
  4325                           
  4326                           ;vclib_lcd.h: 194: for (i = 0; i <= 3; ++i)
  4327  002EC8  0E00               	movlw	0
  4328  002ECA  0100               	movlb	0	; () banked
  4329  002ECC  6F7F               	movwf	lcd_init@i& (0+255),b
  4330  002ECE                     l6603:
  4331                           
  4332                           ; BSR set to: 0
  4333  002ECE  0E03               	movlw	3
  4334  002ED0  0100               	movlb	0	; () banked
  4335  002ED2  657F               	cpfsgt	lcd_init@i& (0+255),b
  4336  002ED4  D001               	goto	l6607
  4337  002ED6  0012               	return	
  4338  002ED8                     l6607:
  4339                           
  4340                           ; BSR set to: 0
  4341                           ;vclib_lcd.h: 195: lcd_send_byte(0, LCD_INIT_STRING[i]);
  4342  002ED8  0100               	movlb	0	; () banked
  4343  002EDA  517F               	movf	lcd_init@i& (0+255),w,b
  4344  002EDC  0D01               	mullw	1
  4345  002EDE  0E7B               	movlw	low lcd_init@LCD_INIT_STRING
  4346  002EE0  24F3               	addwf	prodl,w,c
  4347  002EE2  6ED9               	movwf	fsr2l,c
  4348  002EE4  0E00               	movlw	high lcd_init@LCD_INIT_STRING
  4349  002EE6  20F4               	addwfc	prodh,w,c
  4350  002EE8  6EDA               	movwf	fsr2h,c
  4351  002EEA  50DF               	movf	indf2,w,c
  4352  002EEC  0100               	movlb	0	; () banked
  4353  002EEE  6F77               	movwf	lcd_send_byte@n& (0+255),b
  4354  002EF0  0E00               	movlw	0
  4355  002EF2  EC6F  F01B         	call	_lcd_send_byte
  4356  002EF6  0100               	movlb	0	; () banked
  4357  002EF8  2B7F               	incf	lcd_init@i& (0+255),f,b
  4358  002EFA  D7E9               	goto	l6603
  4359  002EFC                     __end_of_lcd_init:
  4360                           	opt stack 0
  4361                           tblptru	equ	0xFF8
  4362                           tblptrh	equ	0xFF7
  4363                           tblptrl	equ	0xFF6
  4364                           tablat	equ	0xFF5
  4365                           prodh	equ	0xFF4
  4366                           prodl	equ	0xFF3
  4367                           postinc0	equ	0xFEE
  4368                           wreg	equ	0xFE8
  4369                           postdec1	equ	0xFE5
  4370                           fsr1l	equ	0xFE1
  4371                           indf2	equ	0xFDF
  4372                           fsr2h	equ	0xFDA
  4373                           fsr2l	equ	0xFD9
  4374                           status	equ	0xFD8
  4375                           
  4376 ;; *************** function _ioInitStt *****************
  4377 ;; Defined at:
  4378 ;;		line 80 in file "source/IOConfig.h"
  4379 ;; Parameters:    Size  Location     Type
  4380 ;;		None
  4381 ;; Auto vars:     Size  Location     Type
  4382 ;;		None
  4383 ;; Return value:  Size  Location     Type
  4384 ;;                  1    wreg      void 
  4385 ;; Registers used:
  4386 ;;		None
  4387 ;; Tracked objects:
  4388 ;;		On entry : 0/0
  4389 ;;		On exit  : 0/0
  4390 ;;		Unchanged: 0/0
  4391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4392 ;;      Params:         0       0       0       0       0       0       0
  4393 ;;      Locals:         0       0       0       0       0       0       0
  4394 ;;      Temps:          0       0       0       0       0       0       0
  4395 ;;      Totals:         0       0       0       0       0       0       0
  4396 ;;Total ram usage:        0 bytes
  4397 ;; Hardware stack levels used:    1
  4398 ;; Hardware stack levels required when called:   11
  4399 ;; This function calls:
  4400 ;;		Nothing
  4401 ;; This function is called by:
  4402 ;;		_main
  4403 ;; This function uses a non-reentrant model
  4404 ;;
  4405                           
  4406                           	psect	text18
  4407  003A56                     __ptext18:
  4408                           	opt stack 0
  4409  003A56                     _ioInitStt:
  4410                           	opt stack 19
  4411                           
  4412                           ;IOConfig.h: 81: LATCbits.LATC4 = 0;
  4413                           
  4414                           ; BSR set to: 0
  4415                           ;incstack = 0
  4416  003A56  988B               	bcf	3979,4,c	;volatile
  4417                           
  4418                           ;IOConfig.h: 82: LATBbits.LATB0 = 0;
  4419  003A58  908A               	bcf	3978,0,c	;volatile
  4420                           
  4421                           ;IOConfig.h: 83: LATCbits.LATC5 = 0;
  4422  003A5A  9A8B               	bcf	3979,5,c	;volatile
  4423  003A5C  0012               	return		;funcret
  4424  003A5E                     __end_of_ioInitStt:
  4425                           	opt stack 0
  4426                           tblptru	equ	0xFF8
  4427                           tblptrh	equ	0xFF7
  4428                           tblptrl	equ	0xFF6
  4429                           tablat	equ	0xFF5
  4430                           prodh	equ	0xFF4
  4431                           prodl	equ	0xFF3
  4432                           postinc0	equ	0xFEE
  4433                           wreg	equ	0xFE8
  4434                           postdec1	equ	0xFE5
  4435                           fsr1l	equ	0xFE1
  4436                           indf2	equ	0xFDF
  4437                           fsr2h	equ	0xFDA
  4438                           fsr2l	equ	0xFD9
  4439                           status	equ	0xFD8
  4440                           
  4441 ;; *************** function _ioConfig *****************
  4442 ;; Defined at:
  4443 ;;		line 63 in file "source/IOConfig.h"
  4444 ;; Parameters:    Size  Location     Type
  4445 ;;		None
  4446 ;; Auto vars:     Size  Location     Type
  4447 ;;		None
  4448 ;; Return value:  Size  Location     Type
  4449 ;;                  1    wreg      void 
  4450 ;; Registers used:
  4451 ;;		None
  4452 ;; Tracked objects:
  4453 ;;		On entry : 0/0
  4454 ;;		On exit  : 0/0
  4455 ;;		Unchanged: 0/0
  4456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4457 ;;      Params:         0       0       0       0       0       0       0
  4458 ;;      Locals:         0       0       0       0       0       0       0
  4459 ;;      Temps:          0       0       0       0       0       0       0
  4460 ;;      Totals:         0       0       0       0       0       0       0
  4461 ;;Total ram usage:        0 bytes
  4462 ;; Hardware stack levels used:    1
  4463 ;; Hardware stack levels required when called:   11
  4464 ;; This function calls:
  4465 ;;		Nothing
  4466 ;; This function is called by:
  4467 ;;		_main
  4468 ;; This function uses a non-reentrant model
  4469 ;;
  4470                           
  4471                           	psect	text19
  4472  003874                     __ptext19:
  4473                           	opt stack 0
  4474  003874                     _ioConfig:
  4475                           	opt stack 19
  4476                           
  4477                           ;IOConfig.h: 64: TRISBbits.TRISB1 = 0;
  4478                           
  4479                           ;incstack = 0
  4480  003874  9293               	bcf	3987,1,c	;volatile
  4481                           
  4482                           ;IOConfig.h: 65: TRISBbits.TRISB2 = 0;
  4483  003876  9493               	bcf	3987,2,c	;volatile
  4484                           
  4485                           ;IOConfig.h: 66: TRISBbits.TRISB3 = 0;
  4486  003878  9693               	bcf	3987,3,c	;volatile
  4487                           
  4488                           ;IOConfig.h: 67: TRISBbits.TRISB0 = 0;
  4489  00387A  9093               	bcf	3987,0,c	;volatile
  4490                           
  4491                           ;IOConfig.h: 68: TRISCbits.TRISC5 = 0;
  4492  00387C  9A94               	bcf	3988,5,c	;volatile
  4493                           
  4494                           ;IOConfig.h: 69: TRISAbits.TRISA7 = 1;
  4495  00387E  8E92               	bsf	3986,7,c	;volatile
  4496                           
  4497                           ;IOConfig.h: 70: TRISAbits.TRISA6 = 1;
  4498  003880  8C92               	bsf	3986,6,c	;volatile
  4499                           
  4500                           ;IOConfig.h: 71: TRISCbits.TRISC2 = 1; ANSELCbits.ANSC2 = 0;
  4501  003882  8494               	bsf	3988,2,c	;volatile
  4502  003884  010F               	movlb	15	; () banked
  4503  003886  953A               	bcf	58,2,b	;volatile
  4504                           
  4505                           ;IOConfig.h: 72: TRISCbits.TRISC3 = 1; ANSELCbits.ANSC3 = 0;
  4506  003888  8694               	bsf	3988,3,c	;volatile
  4507  00388A  010F               	movlb	15	; () banked
  4508  00388C  973A               	bcf	58,3,b	;volatile
  4509                           
  4510                           ;IOConfig.h: 73: TRISAbits.TRISA2 = 1; ANSELAbits.ANSA2 = 0;
  4511  00388E  8492               	bsf	3986,2,c	;volatile
  4512  003890  010F               	movlb	15	; () banked
  4513  003892  9538               	bcf	56,2,b	;volatile
  4514                           
  4515                           ;IOConfig.h: 74: TRISAbits.TRISA3 = 1; ANSELAbits.ANSA3 = 0;
  4516  003894  8692               	bsf	3986,3,c	;volatile
  4517  003896  010F               	movlb	15	; () banked
  4518  003898  9738               	bcf	56,3,b	;volatile
  4519                           
  4520                           ;IOConfig.h: 75: TRISAbits.TRISA4 = 1;
  4521  00389A  8892               	bsf	3986,4,c	;volatile
  4522                           
  4523                           ;IOConfig.h: 76: TRISAbits.TRISA5 = 1; ANSELAbits.ANSA5 = 0;
  4524  00389C  8A92               	bsf	3986,5,c	;volatile
  4525  00389E  010F               	movlb	15	; () banked
  4526  0038A0  9B38               	bcf	56,5,b	;volatile
  4527                           
  4528                           ;IOConfig.h: 77: TRISCbits.TRISC4 = 0;
  4529  0038A2  9894               	bcf	3988,4,c	;volatile
  4530                           
  4531                           ; BSR set to: 15
  4532  0038A4  0012               	return		;funcret
  4533  0038A6                     __end_of_ioConfig:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           prodh	equ	0xFF4
  4540                           prodl	equ	0xFF3
  4541                           postinc0	equ	0xFEE
  4542                           wreg	equ	0xFE8
  4543                           postdec1	equ	0xFE5
  4544                           fsr1l	equ	0xFE1
  4545                           indf2	equ	0xFDF
  4546                           fsr2h	equ	0xFDA
  4547                           fsr2l	equ	0xFD9
  4548                           status	equ	0xFD8
  4549                           
  4550 ;; *************** function _interruptConfig *****************
  4551 ;; Defined at:
  4552 ;;		line 90 in file "source/SYSConfig.h"
  4553 ;; Parameters:    Size  Location     Type
  4554 ;;		None
  4555 ;; Auto vars:     Size  Location     Type
  4556 ;;		None
  4557 ;; Return value:  Size  Location     Type
  4558 ;;                  1    wreg      void 
  4559 ;; Registers used:
  4560 ;;		None
  4561 ;; Tracked objects:
  4562 ;;		On entry : 0/0
  4563 ;;		On exit  : 0/0
  4564 ;;		Unchanged: 0/0
  4565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4566 ;;      Params:         0       0       0       0       0       0       0
  4567 ;;      Locals:         0       0       0       0       0       0       0
  4568 ;;      Temps:          0       0       0       0       0       0       0
  4569 ;;      Totals:         0       0       0       0       0       0       0
  4570 ;;Total ram usage:        0 bytes
  4571 ;; Hardware stack levels used:    1
  4572 ;; Hardware stack levels required when called:   11
  4573 ;; This function calls:
  4574 ;;		Nothing
  4575 ;; This function is called by:
  4576 ;;		_main
  4577 ;; This function uses a non-reentrant model
  4578 ;;
  4579                           
  4580                           	psect	text20
  4581  003A5E                     __ptext20:
  4582                           	opt stack 0
  4583  003A5E                     _interruptConfig:
  4584                           	opt stack 19
  4585                           
  4586                           ;SYSConfig.h: 91: RCONbits.IPEN = 1;
  4587                           
  4588                           ; BSR set to: 15
  4589                           ;incstack = 0
  4590  003A5E  8ED0               	bsf	4048,7,c	;volatile
  4591                           
  4592                           ;SYSConfig.h: 92: INTCONbits.PEIE = 1;
  4593  003A60  8CF2               	bsf	intcon,6,c	;volatile
  4594                           
  4595                           ;SYSConfig.h: 93: INTCONbits.GIE = 1;
  4596  003A62  8EF2               	bsf	intcon,7,c	;volatile
  4597  003A64  0012               	return		;funcret
  4598  003A66                     __end_of_interruptConfig:
  4599                           	opt stack 0
  4600                           tblptru	equ	0xFF8
  4601                           tblptrh	equ	0xFF7
  4602                           tblptrl	equ	0xFF6
  4603                           tablat	equ	0xFF5
  4604                           prodh	equ	0xFF4
  4605                           prodl	equ	0xFF3
  4606                           intcon	equ	0xFF2
  4607                           postinc0	equ	0xFEE
  4608                           wreg	equ	0xFE8
  4609                           postdec1	equ	0xFE5
  4610                           fsr1l	equ	0xFE1
  4611                           indf2	equ	0xFDF
  4612                           fsr2h	equ	0xFDA
  4613                           fsr2l	equ	0xFD9
  4614                           status	equ	0xFD8
  4615                           
  4616 ;; *************** function _execCombinations *****************
  4617 ;; Defined at:
  4618 ;;		line 122 in file "source/DisplayProtocol.h"
  4619 ;; Parameters:    Size  Location     Type
  4620 ;;		None
  4621 ;; Auto vars:     Size  Location     Type
  4622 ;;		None
  4623 ;; Return value:  Size  Location     Type
  4624 ;;                  1    wreg      void 
  4625 ;; Registers used:
  4626 ;;		wreg, status,2
  4627 ;; Tracked objects:
  4628 ;;		On entry : 0/0
  4629 ;;		On exit  : 0/0
  4630 ;;		Unchanged: 0/0
  4631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4632 ;;      Params:         0       0       0       0       0       0       0
  4633 ;;      Locals:         0       0       0       0       0       0       0
  4634 ;;      Temps:          0       0       0       0       0       0       0
  4635 ;;      Totals:         0       0       0       0       0       0       0
  4636 ;;Total ram usage:        0 bytes
  4637 ;; Hardware stack levels used:    1
  4638 ;; Hardware stack levels required when called:   11
  4639 ;; This function calls:
  4640 ;;		Nothing
  4641 ;; This function is called by:
  4642 ;;		_main
  4643 ;; This function uses a non-reentrant model
  4644 ;;
  4645                           
  4646                           	psect	text21
  4647  003A7A                     __ptext21:
  4648                           	opt stack 0
  4649  003A7A                     _execCombinations:
  4650                           	opt stack 19
  4651                           
  4652                           ;incstack = 0
  4653  003A7A  0012               	return	
  4654  003A7C                     __end_of_execCombinations:
  4655                           	opt stack 0
  4656                           tblptru	equ	0xFF8
  4657                           tblptrh	equ	0xFF7
  4658                           tblptrl	equ	0xFF6
  4659                           tablat	equ	0xFF5
  4660                           prodh	equ	0xFF4
  4661                           prodl	equ	0xFF3
  4662                           intcon	equ	0xFF2
  4663                           postinc0	equ	0xFEE
  4664                           wreg	equ	0xFE8
  4665                           postdec1	equ	0xFE5
  4666                           fsr1l	equ	0xFE1
  4667                           indf2	equ	0xFDF
  4668                           fsr2h	equ	0xFDA
  4669                           fsr2l	equ	0xFD9
  4670                           status	equ	0xFD8
  4671                           
  4672 ;; *************** function _drawScreen *****************
  4673 ;; Defined at:
  4674 ;;		line 209 in file "source/DisplayProtocol.h"
  4675 ;; Parameters:    Size  Location     Type
  4676 ;;		None
  4677 ;; Auto vars:     Size  Location     Type
  4678 ;;		None
  4679 ;; Return value:  Size  Location     Type
  4680 ;;                  1    wreg      void 
  4681 ;; Registers used:
  4682 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4683 ;; Tracked objects:
  4684 ;;		On entry : 0/0
  4685 ;;		On exit  : 0/0
  4686 ;;		Unchanged: 0/0
  4687 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4688 ;;      Params:         0       0       0       0       0       0       0
  4689 ;;      Locals:         0       0       0       0       0       0       0
  4690 ;;      Temps:          0       0       0       0       0       0       0
  4691 ;;      Totals:         0       0       0       0       0       0       0
  4692 ;;Total ram usage:        0 bytes
  4693 ;; Hardware stack levels used:    1
  4694 ;; Hardware stack levels required when called:   19
  4695 ;; This function calls:
  4696 ;;		_drawMenu
  4697 ;;		_drawPassWord
  4698 ;; This function is called by:
  4699 ;;		_main
  4700 ;; This function uses a non-reentrant model
  4701 ;;
  4702                           
  4703                           	psect	text22
  4704  00396E                     __ptext22:
  4705                           	opt stack 0
  4706  00396E                     _drawScreen:
  4707                           	opt stack 11
  4708                           
  4709                           ;DisplayProtocol.h: 210: switch(actualScreen) {
  4710                           
  4711                           ;incstack = 0
  4712  00396E  D006               	goto	l6681
  4713  003970                     l6675:
  4714                           
  4715                           ;DisplayProtocol.h: 212: drawMenu();
  4716  003970  EC34  F010         	call	_drawMenu	;wreg free
  4717                           
  4718                           ;DisplayProtocol.h: 213: break;
  4719  003974  0012               	return	
  4720  003976                     l6677:
  4721                           
  4722                           ;DisplayProtocol.h: 215: drawPassWord();
  4723  003976  ECDE  F01A         	call	_drawPassWord	;wreg free
  4724                           
  4725                           ;DisplayProtocol.h: 217: }
  4726                           ;DisplayProtocol.h: 218: }
  4727                           
  4728                           ;DisplayProtocol.h: 216: break;
  4729  00397A  0012               	return	
  4730  00397C                     l6681:
  4731  00397C  0100               	movlb	0	; () banked
  4732  00397E  51E6               	movf	_actualScreen& (0+255),w,b
  4733                           
  4734                           ; Switch size 1, requested type "space"
  4735                           ; Number of cases is 2, Range of values is 0 to 1
  4736                           ; switch strategies available:
  4737                           ; Name         Instructions Cycles
  4738                           ; simple_byte            7     4 (average)
  4739                           ;	Chosen strategy is simple_byte
  4740  003980  0A00               	xorlw	0	; case 0
  4741  003982  B4D8               	btfsc	status,2,c
  4742  003984  D7F5               	goto	l6675
  4743  003986  0A01               	xorlw	1	; case 1
  4744  003988  A4D8               	btfss	status,2,c
  4745  00398A  0012               	return	
  4746  00398C  D7F4               	goto	l6677
  4747  00398E                     __end_of_drawScreen:
  4748                           	opt stack 0
  4749                           tblptru	equ	0xFF8
  4750                           tblptrh	equ	0xFF7
  4751                           tblptrl	equ	0xFF6
  4752                           tablat	equ	0xFF5
  4753                           prodh	equ	0xFF4
  4754                           prodl	equ	0xFF3
  4755                           intcon	equ	0xFF2
  4756                           postinc0	equ	0xFEE
  4757                           wreg	equ	0xFE8
  4758                           postdec1	equ	0xFE5
  4759                           fsr1l	equ	0xFE1
  4760                           indf2	equ	0xFDF
  4761                           fsr2h	equ	0xFDA
  4762                           fsr2l	equ	0xFD9
  4763                           status	equ	0xFD8
  4764                           
  4765 ;; *************** function _drawPassWord *****************
  4766 ;; Defined at:
  4767 ;;		line 202 in file "source/DisplayProtocol.h"
  4768 ;; Parameters:    Size  Location     Type
  4769 ;;		None
  4770 ;; Auto vars:     Size  Location     Type
  4771 ;;		None
  4772 ;; Return value:  Size  Location     Type
  4773 ;;                  1    wreg      void 
  4774 ;; Registers used:
  4775 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4776 ;; Tracked objects:
  4777 ;;		On entry : 0/0
  4778 ;;		On exit  : 0/0
  4779 ;;		Unchanged: 0/0
  4780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4781 ;;      Params:         0       0       0       0       0       0       0
  4782 ;;      Locals:         0       0       0       0       0       0       0
  4783 ;;      Temps:          0       0       0       0       0       0       0
  4784 ;;      Totals:         0       0       0       0       0       0       0
  4785 ;;Total ram usage:        0 bytes
  4786 ;; Hardware stack levels used:    1
  4787 ;; Hardware stack levels required when called:   18
  4788 ;; This function calls:
  4789 ;;		_lcd_gotoxy
  4790 ;;		_printf
  4791 ;; This function is called by:
  4792 ;;		_drawScreen
  4793 ;; This function uses a non-reentrant model
  4794 ;;
  4795                           
  4796                           	psect	text23
  4797  0035BC                     __ptext23:
  4798                           	opt stack 0
  4799  0035BC                     _drawPassWord:
  4800                           	opt stack 11
  4801                           
  4802                           ;DisplayProtocol.h: 203: lcd_gotoxy(1,1);
  4803                           
  4804                           ;incstack = 0
  4805  0035BC  0E01               	movlw	1
  4806  0035BE  0100               	movlb	0	; () banked
  4807  0035C0  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  4808  0035C2  0E01               	movlw	1
  4809  0035C4  EC53  F01C         	call	_lcd_gotoxy
  4810                           
  4811                           ;DisplayProtocol.h: 204: printf("Contrasena:\n");
  4812  0035C8  0EF1               	movlw	low STR_20
  4813  0035CA  0101               	movlb	1	; () banked
  4814  0035CC  6F00               	movwf	printf@f& (0+255),b
  4815  0035CE  0E7F               	movlw	high STR_20
  4816  0035D0  0101               	movlb	1	; () banked
  4817  0035D2  6F01               	movwf	(printf@f+1)& (0+255),b
  4818  0035D4  EC5B  F000         	call	_printf	;wreg free
  4819                           
  4820                           ;DisplayProtocol.h: 205: printf("    %u%u%u%u    ", introducido[0], introducido[1],
  4821                           ;DisplayProtocol.h: 206: introducido[2], introducido[3]);
  4822  0035D8  0EAD               	movlw	low STR_21
  4823  0035DA  0101               	movlb	1	; () banked
  4824  0035DC  6F00               	movwf	printf@f& (0+255),b
  4825  0035DE  0E7F               	movlw	high STR_21
  4826  0035E0  0101               	movlb	1	; () banked
  4827  0035E2  6F01               	movwf	(printf@f+1)& (0+255),b
  4828  0035E4  C040  F102         	movff	_introducido,?_printf+2
  4829  0035E8  0101               	movlb	1	; () banked
  4830  0035EA  6B03               	clrf	(?_printf+3)& (0+255),b
  4831  0035EC  C041  F104         	movff	_introducido+1,?_printf+4
  4832  0035F0  0101               	movlb	1	; () banked
  4833  0035F2  6B05               	clrf	(?_printf+5)& (0+255),b
  4834  0035F4  C042  F106         	movff	_introducido+2,?_printf+6
  4835  0035F8  0101               	movlb	1	; () banked
  4836  0035FA  6B07               	clrf	(?_printf+7)& (0+255),b
  4837  0035FC  C043  F108         	movff	_introducido+3,?_printf+8
  4838  003600  0101               	movlb	1	; () banked
  4839  003602  6B09               	clrf	(?_printf+9)& (0+255),b
  4840  003604  EC5B  F000         	call	_printf	;wreg free
  4841  003608  0012               	return		;funcret
  4842  00360A                     __end_of_drawPassWord:
  4843                           	opt stack 0
  4844                           tblptru	equ	0xFF8
  4845                           tblptrh	equ	0xFF7
  4846                           tblptrl	equ	0xFF6
  4847                           tablat	equ	0xFF5
  4848                           prodh	equ	0xFF4
  4849                           prodl	equ	0xFF3
  4850                           intcon	equ	0xFF2
  4851                           postinc0	equ	0xFEE
  4852                           wreg	equ	0xFE8
  4853                           postdec1	equ	0xFE5
  4854                           fsr1l	equ	0xFE1
  4855                           indf2	equ	0xFDF
  4856                           fsr2h	equ	0xFDA
  4857                           fsr2l	equ	0xFD9
  4858                           status	equ	0xFD8
  4859                           
  4860 ;; *************** function _drawMenu *****************
  4861 ;; Defined at:
  4862 ;;		line 131 in file "source/DisplayProtocol.h"
  4863 ;; Parameters:    Size  Location     Type
  4864 ;;		None
  4865 ;; Auto vars:     Size  Location     Type
  4866 ;;		None
  4867 ;; Return value:  Size  Location     Type
  4868 ;;                  1    wreg      void 
  4869 ;; Registers used:
  4870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4871 ;; Tracked objects:
  4872 ;;		On entry : 0/0
  4873 ;;		On exit  : 0/0
  4874 ;;		Unchanged: 0/0
  4875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4876 ;;      Params:         0       0       0       0       0       0       0
  4877 ;;      Locals:         0       0       0       0       0       0       0
  4878 ;;      Temps:          0       0       0       0       0       0       0
  4879 ;;      Totals:         0       0       0       0       0       0       0
  4880 ;;Total ram usage:        0 bytes
  4881 ;; Hardware stack levels used:    1
  4882 ;; Hardware stack levels required when called:   18
  4883 ;; This function calls:
  4884 ;;		_lcd_gotoxy
  4885 ;;		_printf
  4886 ;; This function is called by:
  4887 ;;		_drawScreen
  4888 ;; This function uses a non-reentrant model
  4889 ;;
  4890                           
  4891                           	psect	text24
  4892  002068                     __ptext24:
  4893                           	opt stack 0
  4894  002068                     _drawMenu:
  4895                           	opt stack 11
  4896                           
  4897                           ;DisplayProtocol.h: 132: switch(menuSection) {
  4898                           
  4899                           ;incstack = 0
  4900  002068  D12E               	goto	l6569
  4901  00206A                     l6505:
  4902                           
  4903                           ;DisplayProtocol.h: 134: lcd_gotoxy(1,1);
  4904  00206A  0E01               	movlw	1
  4905  00206C  0100               	movlb	0	; () banked
  4906  00206E  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  4907  002070  0E01               	movlw	1
  4908  002072  EC53  F01C         	call	_lcd_gotoxy
  4909                           
  4910                           ;DisplayProtocol.h: 135: printf("Estado proceso: \n");
  4911  002076  0EEE               	movlw	low STR_1
  4912  002078  0101               	movlb	1	; () banked
  4913  00207A  6F00               	movwf	printf@f& (0+255),b
  4914  00207C  0E7E               	movlw	high STR_1
  4915  00207E  0101               	movlb	1	; () banked
  4916  002080  6F01               	movwf	(printf@f+1)& (0+255),b
  4917  002082  EC5B  F000         	call	_printf	;wreg free
  4918                           
  4919                           ;DisplayProtocol.h: 136: if(proceso > 0) {
  4920  002086  0100               	movlb	0	; () banked
  4921  002088  BFE1               	btfsc	(_proceso+1)& (0+255),7,b
  4922  00208A  D018               	goto	l6513
  4923  00208C  0100               	movlb	0	; () banked
  4924  00208E  51E1               	movf	(_proceso+1)& (0+255),w,b
  4925  002090  E104               	bnz	u7700
  4926  002092  0100               	movlb	0	; () banked
  4927  002094  05E0               	decf	_proceso& (0+255),w,b
  4928  002096  A0D8               	btfss	status,0,c
  4929  002098  D011               	goto	l6513
  4930  00209A                     u7700:
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;DisplayProtocol.h: 137: printf("    %us / %us   ", proceso, numCortes);
  4934  00209A  0EE0               	movlw	low STR_2
  4935  00209C  0101               	movlb	1	; () banked
  4936  00209E  6F00               	movwf	printf@f& (0+255),b
  4937  0020A0  0E7F               	movlw	high STR_2
  4938  0020A2  0101               	movlb	1	; () banked
  4939  0020A4  6F01               	movwf	(printf@f+1)& (0+255),b
  4940  0020A6  C0E0  F102         	movff	_proceso,?_printf+2
  4941  0020AA  C0E1  F103         	movff	_proceso+1,?_printf+3
  4942  0020AE  C0D4  F104         	movff	_numCortes,?_printf+4
  4943  0020B2  C0D5  F105         	movff	_numCortes+1,?_printf+5
  4944  0020B6  EC5B  F000         	call	_printf	;wreg free
  4945                           
  4946                           ;DisplayProtocol.h: 138: }else
  4947  0020BA  0012               	return	
  4948  0020BC                     l6513:
  4949                           
  4950                           ;DisplayProtocol.h: 139: printf("     Detenido     ");
  4951  0020BC  0E93               	movlw	low STR_3
  4952  0020BE  0101               	movlb	1	; () banked
  4953  0020C0  6F00               	movwf	printf@f& (0+255),b
  4954  0020C2  0E7E               	movlw	high STR_3
  4955  0020C4  0101               	movlb	1	; () banked
  4956  0020C6  6F01               	movwf	(printf@f+1)& (0+255),b
  4957  0020C8  EC5B  F000         	call	_printf	;wreg free
  4958                           
  4959                           ;DisplayProtocol.h: 140: break;
  4960  0020CC  0012               	return	
  4961  0020CE                     l6515:
  4962                           
  4963                           ;DisplayProtocol.h: 142: lcd_gotoxy(1,1);
  4964  0020CE  0E01               	movlw	1
  4965  0020D0  0100               	movlb	0	; () banked
  4966  0020D2  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  4967  0020D4  0E01               	movlw	1
  4968  0020D6  EC53  F01C         	call	_lcd_gotoxy
  4969                           
  4970                           ;DisplayProtocol.h: 143: printf("Proceso en:     \n");
  4971  0020DA  0EA6               	movlw	low STR_4
  4972  0020DC  0101               	movlb	1	; () banked
  4973  0020DE  6F00               	movwf	printf@f& (0+255),b
  4974  0020E0  0E7E               	movlw	high STR_4
  4975  0020E2  0101               	movlb	1	; () banked
  4976  0020E4  6F01               	movwf	(printf@f+1)& (0+255),b
  4977  0020E6  EC5B  F000         	call	_printf	;wreg free
  4978                           
  4979                           ;DisplayProtocol.h: 144: switch(tVarProceso) {
  4980  0020EA  D01B               	goto	l6527
  4981  0020EC                     l6519:
  4982                           
  4983                           ;DisplayProtocol.h: 146: printf("       kg       ");
  4984  0020EC  0E47               	movlw	low STR_5
  4985  0020EE  0101               	movlb	1	; () banked
  4986  0020F0  6F00               	movwf	printf@f& (0+255),b
  4987  0020F2  0E7F               	movlw	high STR_5
  4988  0020F4  0101               	movlb	1	; () banked
  4989  0020F6  6F01               	movwf	(printf@f+1)& (0+255),b
  4990  0020F8  EC5B  F000         	call	_printf	;wreg free
  4991                           
  4992                           ;DisplayProtocol.h: 147: break;
  4993  0020FC  0012               	return	
  4994  0020FE                     l6521:
  4995                           
  4996                           ;DisplayProtocol.h: 150: printf("       m3       ");
  4997  0020FE  0E36               	movlw	low STR_6
  4998  002100  0101               	movlb	1	; () banked
  4999  002102  6F00               	movwf	printf@f& (0+255),b
  5000  002104  0E7F               	movlw	high STR_6
  5001  002106  0101               	movlb	1	; () banked
  5002  002108  6F01               	movwf	(printf@f+1)& (0+255),b
  5003  00210A  EC5B  F000         	call	_printf	;wreg free
  5004                           
  5005                           ;DisplayProtocol.h: 151: break;
  5006  00210E  0012               	return	
  5007  002110                     l6523:
  5008                           
  5009                           ;DisplayProtocol.h: 154: printf("       sec      ");
  5010  002110  0E58               	movlw	low STR_7
  5011  002112  0101               	movlb	1	; () banked
  5012  002114  6F00               	movwf	printf@f& (0+255),b
  5013  002116  0E7F               	movlw	high STR_7
  5014  002118  0101               	movlb	1	; () banked
  5015  00211A  6F01               	movwf	(printf@f+1)& (0+255),b
  5016  00211C  EC5B  F000         	call	_printf	;wreg free
  5017                           
  5018                           ;DisplayProtocol.h: 156: }
  5019                           ;DisplayProtocol.h: 157: }
  5020                           
  5021                           ;DisplayProtocol.h: 155: break;
  5022  002120  0012               	return	
  5023  002122                     l6527:
  5024  002122  0100               	movlb	0	; () banked
  5025  002124  51EC               	movf	_tVarProceso& (0+255),w,b
  5026                           
  5027                           ; Switch size 1, requested type "space"
  5028                           ; Number of cases is 3, Range of values is 0 to 2
  5029                           ; switch strategies available:
  5030                           ; Name         Instructions Cycles
  5031                           ; simple_byte           10     6 (average)
  5032                           ;	Chosen strategy is simple_byte
  5033  002126  0A00               	xorlw	0	; case 0
  5034  002128  B4D8               	btfsc	status,2,c
  5035  00212A  D7E0               	goto	l6519
  5036  00212C  0A01               	xorlw	1	; case 1
  5037  00212E  B4D8               	btfsc	status,2,c
  5038  002130  D7E6               	goto	l6521
  5039  002132  0A03               	xorlw	3	; case 2
  5040  002134  A4D8               	btfss	status,2,c
  5041                           
  5042                           ; BSR set to: 0
  5043                           ;DisplayProtocol.h: 158: break;
  5044  002136  0012               	return	
  5045  002138  D7EB               	goto	l6523
  5046  00213A                     l6529:
  5047                           
  5048                           ; BSR set to: 0
  5049                           ;DisplayProtocol.h: 160: lcd_gotoxy(1,1);
  5050  00213A  0E01               	movlw	1
  5051  00213C  0100               	movlb	0	; () banked
  5052  00213E  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  5053  002140  0E01               	movlw	1
  5054  002142  EC53  F01C         	call	_lcd_gotoxy
  5055                           
  5056                           ;DisplayProtocol.h: 161: printf("Valor por Corte:\n");
  5057  002146  0E00               	movlw	low STR_8
  5058  002148  0101               	movlb	1	; () banked
  5059  00214A  6F00               	movwf	printf@f& (0+255),b
  5060  00214C  0E7F               	movlw	high STR_8
  5061  00214E  0101               	movlb	1	; () banked
  5062  002150  6F01               	movwf	(printf@f+1)& (0+255),b
  5063  002152  EC5B  F000         	call	_printf	;wreg free
  5064                           
  5065                           ;DisplayProtocol.h: 162: switch(tVarProceso) {
  5066  002156  D033               	goto	l6541
  5067  002158                     l6533:
  5068                           
  5069                           ;DisplayProtocol.h: 164: printf("       %f kg    ",kgXcorte);
  5070  002158  0E9C               	movlw	low STR_9
  5071  00215A  0101               	movlb	1	; () banked
  5072  00215C  6F00               	movwf	printf@f& (0+255),b
  5073  00215E  0E7F               	movlw	high STR_9
  5074  002160  0101               	movlb	1	; () banked
  5075  002162  6F01               	movwf	(printf@f+1)& (0+255),b
  5076  002164  C0CC  F102         	movff	_kgXcorte,?_printf+2
  5077  002168  C0CD  F103         	movff	_kgXcorte+1,?_printf+3
  5078  00216C  C0CE  F104         	movff	_kgXcorte+2,?_printf+4
  5079  002170  C0CF  F105         	movff	_kgXcorte+3,?_printf+5
  5080  002174  EC5B  F000         	call	_printf	;wreg free
  5081                           
  5082                           ;DisplayProtocol.h: 165: break;
  5083  002178  0012               	return	
  5084  00217A                     l6535:
  5085                           
  5086                           ;DisplayProtocol.h: 168: printf("       %f m3    ",kgXcorte);
  5087  00217A  0E8B               	movlw	low STR_10
  5088  00217C  0101               	movlb	1	; () banked
  5089  00217E  6F00               	movwf	printf@f& (0+255),b
  5090  002180  0E7F               	movlw	high STR_10
  5091  002182  0101               	movlb	1	; () banked
  5092  002184  6F01               	movwf	(printf@f+1)& (0+255),b
  5093  002186  C0CC  F102         	movff	_kgXcorte,?_printf+2
  5094  00218A  C0CD  F103         	movff	_kgXcorte+1,?_printf+3
  5095  00218E  C0CE  F104         	movff	_kgXcorte+2,?_printf+4
  5096  002192  C0CF  F105         	movff	_kgXcorte+3,?_printf+5
  5097  002196  EC5B  F000         	call	_printf	;wreg free
  5098                           
  5099                           ;DisplayProtocol.h: 169: break;
  5100  00219A  0012               	return	
  5101  00219C                     l6537:
  5102                           
  5103                           ;DisplayProtocol.h: 172: printf("       %f sec   ",kgXcorte);
  5104  00219C  0ECF               	movlw	low STR_11
  5105  00219E  0101               	movlb	1	; () banked
  5106  0021A0  6F00               	movwf	printf@f& (0+255),b
  5107  0021A2  0E7F               	movlw	high STR_11
  5108  0021A4  0101               	movlb	1	; () banked
  5109  0021A6  6F01               	movwf	(printf@f+1)& (0+255),b
  5110  0021A8  C0CC  F102         	movff	_kgXcorte,?_printf+2
  5111  0021AC  C0CD  F103         	movff	_kgXcorte+1,?_printf+3
  5112  0021B0  C0CE  F104         	movff	_kgXcorte+2,?_printf+4
  5113  0021B4  C0CF  F105         	movff	_kgXcorte+3,?_printf+5
  5114  0021B8  EC5B  F000         	call	_printf	;wreg free
  5115                           
  5116                           ;DisplayProtocol.h: 174: }
  5117                           ;DisplayProtocol.h: 175: }
  5118                           
  5119                           ;DisplayProtocol.h: 173: break;
  5120  0021BC  0012               	return	
  5121  0021BE                     l6541:
  5122  0021BE  0100               	movlb	0	; () banked
  5123  0021C0  51EC               	movf	_tVarProceso& (0+255),w,b
  5124                           
  5125                           ; Switch size 1, requested type "space"
  5126                           ; Number of cases is 3, Range of values is 0 to 2
  5127                           ; switch strategies available:
  5128                           ; Name         Instructions Cycles
  5129                           ; simple_byte           10     6 (average)
  5130                           ;	Chosen strategy is simple_byte
  5131  0021C2  0A00               	xorlw	0	; case 0
  5132  0021C4  B4D8               	btfsc	status,2,c
  5133  0021C6  D7C8               	goto	l6533
  5134  0021C8  0A01               	xorlw	1	; case 1
  5135  0021CA  B4D8               	btfsc	status,2,c
  5136  0021CC  D7D6               	goto	l6535
  5137  0021CE  0A03               	xorlw	3	; case 2
  5138  0021D0  A4D8               	btfss	status,2,c
  5139                           
  5140                           ; BSR set to: 0
  5141                           ;DisplayProtocol.h: 176: break;
  5142  0021D2  0012               	return	
  5143  0021D4  D7E3               	goto	l6537
  5144  0021D6                     l6543:
  5145                           
  5146                           ; BSR set to: 0
  5147                           ;DisplayProtocol.h: 178: lcd_gotoxy(1,1);
  5148  0021D6  0E01               	movlw	1
  5149  0021D8  0100               	movlb	0	; () banked
  5150  0021DA  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  5151  0021DC  0E01               	movlw	1
  5152  0021DE  EC53  F01C         	call	_lcd_gotoxy
  5153                           
  5154                           ;DisplayProtocol.h: 179: printf("Cantidad Cortes:\n");
  5155  0021E2  0E12               	movlw	low STR_12
  5156  0021E4  0101               	movlb	1	; () banked
  5157  0021E6  6F00               	movwf	printf@f& (0+255),b
  5158  0021E8  0E7F               	movlw	high STR_12
  5159  0021EA  0101               	movlb	1	; () banked
  5160  0021EC  6F01               	movwf	(printf@f+1)& (0+255),b
  5161  0021EE  EC5B  F000         	call	_printf	;wreg free
  5162                           
  5163                           ;DisplayProtocol.h: 180: printf("       %us       ",numCortes);
  5164  0021F2  0E24               	movlw	low STR_13
  5165  0021F4  0101               	movlb	1	; () banked
  5166  0021F6  6F00               	movwf	printf@f& (0+255),b
  5167  0021F8  0E7F               	movlw	high STR_13
  5168  0021FA  0101               	movlb	1	; () banked
  5169  0021FC  6F01               	movwf	(printf@f+1)& (0+255),b
  5170  0021FE  C0D4  F102         	movff	_numCortes,?_printf+2
  5171  002202  C0D5  F103         	movff	_numCortes+1,?_printf+3
  5172  002206  EC5B  F000         	call	_printf	;wreg free
  5173                           
  5174                           ;DisplayProtocol.h: 181: break;
  5175  00220A  0012               	return	
  5176  00220C                     l6549:
  5177                           
  5178                           ;DisplayProtocol.h: 183: lcd_gotoxy(1,1);
  5179  00220C  0E01               	movlw	1
  5180  00220E  0100               	movlb	0	; () banked
  5181  002210  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  5182  002212  0E01               	movlw	1
  5183  002214  EC53  F01C         	call	_lcd_gotoxy
  5184                           
  5185                           ;DisplayProtocol.h: 184: printf("Diametro Tubo:  \n");
  5186  002218  0ECA               	movlw	low STR_14
  5187  00221A  0101               	movlb	1	; () banked
  5188  00221C  6F00               	movwf	printf@f& (0+255),b
  5189  00221E  0E7E               	movlw	high STR_14
  5190  002220  0101               	movlb	1	; () banked
  5191  002222  6F01               	movwf	(printf@f+1)& (0+255),b
  5192  002224  EC5B  F000         	call	_printf	;wreg free
  5193                           
  5194                           ;DisplayProtocol.h: 185: printf("      %f mm     ",diamTubo);
  5195  002228  0E69               	movlw	low STR_15
  5196  00222A  0101               	movlb	1	; () banked
  5197  00222C  6F00               	movwf	printf@f& (0+255),b
  5198  00222E  0E7F               	movlw	high STR_15
  5199  002230  0101               	movlb	1	; () banked
  5200  002232  6F01               	movwf	(printf@f+1)& (0+255),b
  5201  002234  C0C8  F102         	movff	_diamTubo,?_printf+2
  5202  002238  C0C9  F103         	movff	_diamTubo+1,?_printf+3
  5203  00223C  C0CA  F104         	movff	_diamTubo+2,?_printf+4
  5204  002240  C0CB  F105         	movff	_diamTubo+3,?_printf+5
  5205  002244  EC5B  F000         	call	_printf	;wreg free
  5206                           
  5207                           ;DisplayProtocol.h: 186: break;
  5208  002248  0012               	return	
  5209  00224A                     l6555:
  5210                           
  5211                           ;DisplayProtocol.h: 188: lcd_gotoxy(1,1);
  5212  00224A  0E01               	movlw	1
  5213  00224C  0100               	movlb	0	; () banked
  5214  00224E  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  5215  002250  0E01               	movlw	1
  5216  002252  EC53  F01C         	call	_lcd_gotoxy
  5217                           
  5218                           ;DisplayProtocol.h: 189: printf("Densidad Masa:  \n");
  5219  002256  0EB8               	movlw	low STR_16
  5220  002258  0101               	movlb	1	; () banked
  5221  00225A  6F00               	movwf	printf@f& (0+255),b
  5222  00225C  0E7E               	movlw	high STR_16
  5223  00225E  0101               	movlb	1	; () banked
  5224  002260  6F01               	movwf	(printf@f+1)& (0+255),b
  5225  002262  EC5B  F000         	call	_printf	;wreg free
  5226                           
  5227                           ;DisplayProtocol.h: 190: printf("     %f kg/m3   ", densidadMasa);
  5228  002266  0EBE               	movlw	low STR_17
  5229  002268  0101               	movlb	1	; () banked
  5230  00226A  6F00               	movwf	printf@f& (0+255),b
  5231  00226C  0E7F               	movlw	high STR_17
  5232  00226E  0101               	movlb	1	; () banked
  5233  002270  6F01               	movwf	(printf@f+1)& (0+255),b
  5234  002272  C0C4  F102         	movff	_densidadMasa,?_printf+2
  5235  002276  C0C5  F103         	movff	_densidadMasa+1,?_printf+3
  5236  00227A  C0C6  F104         	movff	_densidadMasa+2,?_printf+4
  5237  00227E  C0C7  F105         	movff	_densidadMasa+3,?_printf+5
  5238  002282  EC5B  F000         	call	_printf	;wreg free
  5239                           
  5240                           ;DisplayProtocol.h: 191: break;
  5241  002286  0012               	return	
  5242  002288                     l6561:
  5243                           
  5244                           ;DisplayProtocol.h: 193: lcd_gotoxy(1,1);
  5245  002288  0E01               	movlw	1
  5246  00228A  0100               	movlb	0	; () banked
  5247  00228C  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  5248  00228E  0E01               	movlw	1
  5249  002290  EC53  F01C         	call	_lcd_gotoxy
  5250                           
  5251                           ;DisplayProtocol.h: 194: printf("Velocidad Masa: \n");
  5252  002294  0EDC               	movlw	low STR_18
  5253  002296  0101               	movlb	1	; () banked
  5254  002298  6F00               	movwf	printf@f& (0+255),b
  5255  00229A  0E7E               	movlw	high STR_18
  5256  00229C  0101               	movlb	1	; () banked
  5257  00229E  6F01               	movwf	(printf@f+1)& (0+255),b
  5258  0022A0  EC5B  F000         	call	_printf	;wreg free
  5259                           
  5260                           ;DisplayProtocol.h: 195: printf("     %f m/s     ",velocidadMasa);
  5261  0022A4  0E7A               	movlw	low STR_19
  5262  0022A6  0101               	movlb	1	; () banked
  5263  0022A8  6F00               	movwf	printf@f& (0+255),b
  5264  0022AA  0E7F               	movlw	high STR_19
  5265  0022AC  0101               	movlb	1	; () banked
  5266  0022AE  6F01               	movwf	(printf@f+1)& (0+255),b
  5267  0022B0  C0D0  F102         	movff	_velocidadMasa,?_printf+2
  5268  0022B4  C0D1  F103         	movff	_velocidadMasa+1,?_printf+3
  5269  0022B8  C0D2  F104         	movff	_velocidadMasa+2,?_printf+4
  5270  0022BC  C0D3  F105         	movff	_velocidadMasa+3,?_printf+5
  5271  0022C0  EC5B  F000         	call	_printf	;wreg free
  5272                           
  5273                           ;DisplayProtocol.h: 197: }
  5274                           ;DisplayProtocol.h: 198: }
  5275                           
  5276                           ;DisplayProtocol.h: 196: break;
  5277  0022C4  0012               	return	
  5278  0022C6                     l6569:
  5279  0022C6  0100               	movlb	0	; () banked
  5280  0022C8  51EB               	movf	_menuSection& (0+255),w,b
  5281                           
  5282                           ; Switch size 1, requested type "space"
  5283                           ; Number of cases is 7, Range of values is 0 to 6
  5284                           ; switch strategies available:
  5285                           ; Name         Instructions Cycles
  5286                           ; simple_byte           22    12 (average)
  5287                           ;	Chosen strategy is simple_byte
  5288  0022CA  0A00               	xorlw	0	; case 0
  5289  0022CC  B4D8               	btfsc	status,2,c
  5290  0022CE  D6CD               	goto	l6505
  5291  0022D0  0A01               	xorlw	1	; case 1
  5292  0022D2  B4D8               	btfsc	status,2,c
  5293  0022D4  D6FC               	goto	l6515
  5294  0022D6  0A03               	xorlw	3	; case 2
  5295  0022D8  B4D8               	btfsc	status,2,c
  5296  0022DA  D72F               	goto	l6529
  5297  0022DC  0A01               	xorlw	1	; case 3
  5298  0022DE  B4D8               	btfsc	status,2,c
  5299  0022E0  D77A               	goto	l6543
  5300  0022E2  0A07               	xorlw	7	; case 4
  5301  0022E4  B4D8               	btfsc	status,2,c
  5302  0022E6  D792               	goto	l6549
  5303  0022E8  0A01               	xorlw	1	; case 5
  5304  0022EA  B4D8               	btfsc	status,2,c
  5305  0022EC  D7AE               	goto	l6555
  5306  0022EE  0A03               	xorlw	3	; case 6
  5307  0022F0  A4D8               	btfss	status,2,c
  5308  0022F2  0012               	return	
  5309  0022F4  D7C9               	goto	l6561
  5310  0022F6                     __end_of_drawMenu:
  5311                           	opt stack 0
  5312                           tblptru	equ	0xFF8
  5313                           tblptrh	equ	0xFF7
  5314                           tblptrl	equ	0xFF6
  5315                           tablat	equ	0xFF5
  5316                           prodh	equ	0xFF4
  5317                           prodl	equ	0xFF3
  5318                           intcon	equ	0xFF2
  5319                           postinc0	equ	0xFEE
  5320                           wreg	equ	0xFE8
  5321                           postdec1	equ	0xFE5
  5322                           fsr1l	equ	0xFE1
  5323                           indf2	equ	0xFDF
  5324                           fsr2h	equ	0xFDA
  5325                           fsr2l	equ	0xFD9
  5326                           status	equ	0xFD8
  5327                           
  5328 ;; *************** function _printf *****************
  5329 ;; Defined at:
  5330 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  5333 ;;		 -> STR_21(17), STR_20(13), STR_19(17), STR_18(18), 
  5334 ;;		 -> STR_17(17), STR_16(18), STR_15(17), STR_14(18), 
  5335 ;;		 -> STR_13(18), STR_12(18), STR_11(17), STR_10(17), 
  5336 ;;		 -> STR_9(17), STR_8(18), STR_7(17), STR_6(17), 
  5337 ;;		 -> STR_5(17), STR_4(18), STR_3(19), STR_2(17), 
  5338 ;;		 -> STR_1(18), 
  5339 ;; Auto vars:     Size  Location     Type
  5340 ;;  fval            4   30[BANK1 ] PTR const unsigned char 
  5341 ;;  tmpval          4   26[BANK1 ] struct .
  5342 ;;  val             4   20[BANK1 ] unsigned long 
  5343 ;;  cp              3    0        PTR const unsigned char 
  5344 ;;  exp             2   24[BANK1 ] int 
  5345 ;;  prec            2   18[BANK1 ] int 
  5346 ;;  flag            2   16[BANK1 ] unsigned short 
  5347 ;;  ap              2   14[BANK1 ] PTR void [1]
  5348 ;;		 -> ?_printf(2), 
  5349 ;;  len             2    0        unsigned int 
  5350 ;;  width           2    0        int 
  5351 ;;  c               1   34[BANK1 ] char 
  5352 ;;  d               1    0        unsigned char 
  5353 ;; Return value:  Size  Location     Type
  5354 ;;                  2    0[BANK1 ] int 
  5355 ;; Registers used:
  5356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5357 ;; Tracked objects:
  5358 ;;		On entry : 0/0
  5359 ;;		On exit  : 0/0
  5360 ;;		Unchanged: 0/0
  5361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5362 ;;      Params:         0       0      10       0       0       0       0
  5363 ;;      Locals:         0       0      25       0       0       0       0
  5364 ;;      Temps:          0       2       0       0       0       0       0
  5365 ;;      Totals:         0       2      35       0       0       0       0
  5366 ;;Total ram usage:       37 bytes
  5367 ;; Hardware stack levels used:    1
  5368 ;; Hardware stack levels required when called:   17
  5369 ;; This function calls:
  5370 ;;		___awdiv
  5371 ;;		___fladd
  5372 ;;		___flge
  5373 ;;		___flmul
  5374 ;;		___flneg
  5375 ;;		___flsub
  5376 ;;		___fltol
  5377 ;;		___lldiv
  5378 ;;		___llmod
  5379 ;;		___wmul
  5380 ;;		___xxtofl
  5381 ;;		__div_to_l_
  5382 ;;		__tdiv_to_l_
  5383 ;;		_fround
  5384 ;;		_putch
  5385 ;;		_scale
  5386 ;; This function is called by:
  5387 ;;		_drawMenu
  5388 ;;		_drawPassWord
  5389 ;; This function uses a non-reentrant model
  5390 ;;
  5391                           
  5392                           	psect	text25
  5393  0000B6                     __ptext25:
  5394                           	opt stack 0
  5395  0000B6                     _printf:
  5396                           	opt stack 11
  5397                           
  5398                           ;doprnt.c: 466: va_list ap;
  5399                           ;doprnt.c: 499: signed char c;
  5400                           ;doprnt.c: 501: int width;
  5401                           ;doprnt.c: 504: int prec;
  5402                           ;doprnt.c: 508: unsigned short flag;
  5403                           ;doprnt.c: 515: char d;
  5404                           ;doprnt.c: 516: double fval;
  5405                           ;doprnt.c: 517: int exp;
  5406                           ;doprnt.c: 523: union {
  5407                           ;doprnt.c: 524: unsigned long vd;
  5408                           ;doprnt.c: 525: double integ;
  5409                           ;doprnt.c: 526: } tmpval;
  5410                           ;doprnt.c: 528: unsigned long val;
  5411                           ;doprnt.c: 529: unsigned len;
  5412                           ;doprnt.c: 530: const char * cp;
  5413                           ;doprnt.c: 533: *ap = __va_start();
  5414                           
  5415                           ;incstack = 0
  5416  0000B6  0E02               	movlw	low (?_printf+2)
  5417  0000B8  0101               	movlb	1	; () banked
  5418  0000BA  6F0E               	movwf	printf@ap& (0+255),b
  5419  0000BC  0E01               	movlw	high (?_printf+2)
  5420  0000BE  0101               	movlb	1	; () banked
  5421  0000C0  6F0F               	movwf	(printf@ap+1)& (0+255),b
  5422                           
  5423                           ;doprnt.c: 536: while(c = *f++) {
  5424  0000C2  D3F9               	goto	l6469
  5425  0000C4                     l6293:
  5426                           
  5427                           ; BSR set to: 1
  5428                           ;doprnt.c: 538: if(c != '%')
  5429  0000C4  0E25               	movlw	37
  5430  0000C6  0101               	movlb	1	; () banked
  5431  0000C8  1922               	xorwf	printf@c& (0+255),w,b
  5432  0000CA  B4D8               	btfsc	status,2,c
  5433  0000CC  D005               	goto	l6297
  5434                           
  5435                           ; BSR set to: 1
  5436                           ;doprnt.c: 540: {
  5437                           ;doprnt.c: 541: (putch(c) );
  5438  0000CE  0101               	movlb	1	; () banked
  5439  0000D0  5122               	movf	printf@c& (0+255),w,b
  5440  0000D2  ECFF  F01C         	call	_putch
  5441                           
  5442                           ;doprnt.c: 542: continue;
  5443  0000D6  D3EF               	goto	l6469
  5444  0000D8                     l6297:
  5445                           
  5446                           ;doprnt.c: 543: }
  5447                           ;doprnt.c: 548: flag = 0;
  5448  0000D8  0E00               	movlw	0
  5449  0000DA  0101               	movlb	1	; () banked
  5450  0000DC  6F11               	movwf	(printf@flag+1)& (0+255),b
  5451  0000DE  0E00               	movlw	0
  5452  0000E0  6F10               	movwf	printf@flag& (0+255),b
  5453                           
  5454                           ;doprnt.c: 635: switch(c = *f++) {
  5455  0000E2  D007               	goto	l6305
  5456  0000E4                     l6299:
  5457                           
  5458                           ; BSR set to: 1
  5459                           ;doprnt.c: 663: flag |= 0x400;
  5460  0000E4  0101               	movlb	1	; () banked
  5461  0000E6  8511               	bsf	(printf@flag+1)& (0+255),2,b
  5462                           
  5463                           ;doprnt.c: 664: break;
  5464  0000E8  D01A               	goto	l6307
  5465  0000EA                     l6301:
  5466                           
  5467                           ; BSR set to: 1
  5468                           ;doprnt.c: 818: flag |= 0xC0;
  5469  0000EA  0EC0               	movlw	192
  5470  0000EC  0101               	movlb	1	; () banked
  5471  0000EE  1310               	iorwf	printf@flag& (0+255),f,b
  5472                           
  5473                           ; BSR set to: 1
  5474                           ;doprnt.c: 822: }
  5475                           
  5476                           ;doprnt.c: 819: break;
  5477  0000F0  D016               	goto	l6307
  5478  0000F2                     l6305:
  5479                           
  5480                           ; BSR set to: 1
  5481  0000F2  C100  FFF6         	movff	printf@f,tblptrl
  5482  0000F6  C101  FFF7         	movff	printf@f+1,tblptrh
  5483  0000FA  0101               	movlb	1	; () banked
  5484  0000FC  4B00               	infsnz	printf@f& (0+255),f,b
  5485  0000FE  2B01               	incf	(printf@f+1)& (0+255),f,b
  5486  000100                     	if	0	;tblptru may be non-zero
  5487  000100                     	endif
  5488  000100                     	if	0	;tblptru may be non-zero
  5489  000100                     	endif
  5490  000100  0008               	tblrd		*
  5491  000102  CFF5 F122          	movff	tablat,printf@c
  5492  000106  0101               	movlb	1	; () banked
  5493  000108  5122               	movf	printf@c& (0+255),w,b
  5494                           
  5495                           ; Switch size 1, requested type "space"
  5496                           ; Number of cases is 3, Range of values is 0 to 117
  5497                           ; switch strategies available:
  5498                           ; Name         Instructions Cycles
  5499                           ; simple_byte           10     6 (average)
  5500                           ;	Chosen strategy is simple_byte
  5501  00010A  0A00               	xorlw	0	; case 0
  5502  00010C  B4D8               	btfsc	status,2,c
  5503  00010E  0012               	return	
  5504  000110  0A66               	xorlw	102	; case 102
  5505  000112  B4D8               	btfsc	status,2,c
  5506  000114  D7E7               	goto	l6299
  5507  000116  0A13               	xorlw	19	; case 117
  5508  000118  B4D8               	btfsc	status,2,c
  5509  00011A  D7E7               	goto	l6301
  5510  00011C  D3CC               	goto	l6469
  5511  00011E                     l6307:
  5512                           
  5513                           ; BSR set to: 1
  5514                           ;doprnt.c: 825: if(flag & (0x700)) {
  5515  00011E  0E07               	movlw	7
  5516  000120  0101               	movlb	1	; () banked
  5517  000122  1511               	andwf	(printf@flag+1)& (0+255),w,b
  5518  000124  B4D8               	btfsc	status,2,c
  5519  000126  D322               	goto	l6439
  5520                           
  5521                           ; BSR set to: 1
  5522                           ;doprnt.c: 829: prec = 6;
  5523  000128  0E00               	movlw	0
  5524  00012A  0101               	movlb	1	; () banked
  5525  00012C  6F13               	movwf	(printf@prec+1)& (0+255),b
  5526  00012E  0E06               	movlw	6
  5527  000130  6F12               	movwf	printf@prec& (0+255),b
  5528                           
  5529                           ; BSR set to: 1
  5530                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5531  000132  C10E  FFD9         	movff	printf@ap,fsr2l
  5532  000136  C10F  FFDA         	movff	printf@ap+1,fsr2h
  5533  00013A  CFDE F11E          	movff	postinc2,printf@fval
  5534  00013E  CFDE F11F          	movff	postinc2,printf@fval+1
  5535  000142  CFDE F120          	movff	postinc2,printf@fval+2
  5536  000146  CFDE F121          	movff	postinc2,printf@fval+3
  5537                           
  5538                           ; BSR set to: 1
  5539  00014A  0E04               	movlw	4
  5540  00014C  0101               	movlb	1	; () banked
  5541  00014E  270E               	addwf	printf@ap& (0+255),f,b
  5542  000150  0E00               	movlw	0
  5543  000152  230F               	addwfc	(printf@ap+1)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 1
  5546                           ;doprnt.c: 831: if(fval < 0.0) {
  5547  000154  0101               	movlb	1	; () banked
  5548  000156  AF21               	btfss	(printf@fval+3)& (0+255),7,b
  5549  000158  D015               	goto	l6321
  5550                           
  5551                           ; BSR set to: 1
  5552                           ;doprnt.c: 832: fval = -fval;
  5553  00015A  C11E  F072         	movff	printf@fval,___flneg@f1
  5554  00015E  C11F  F073         	movff	printf@fval+1,___flneg@f1+1
  5555  000162  C120  F074         	movff	printf@fval+2,___flneg@f1+2
  5556  000166  C121  F075         	movff	printf@fval+3,___flneg@f1+3
  5557  00016A  ECCC  F01B         	call	___flneg	;wreg free
  5558  00016E  C072  F11E         	movff	?___flneg,printf@fval
  5559  000172  C073  F11F         	movff	?___flneg+1,printf@fval+1
  5560  000176  C074  F120         	movff	?___flneg+2,printf@fval+2
  5561  00017A  C075  F121         	movff	?___flneg+3,printf@fval+3
  5562                           
  5563                           ;doprnt.c: 833: flag |= 0x03;
  5564  00017E  0E03               	movlw	3
  5565  000180  0101               	movlb	1	; () banked
  5566  000182  1310               	iorwf	printf@flag& (0+255),f,b
  5567  000184                     l6321:
  5568                           
  5569                           ; BSR set to: 1
  5570                           ;doprnt.c: 834: }
  5571                           ;doprnt.c: 835: exp = 0;
  5572  000184  0E00               	movlw	0
  5573  000186  0101               	movlb	1	; () banked
  5574  000188  6F19               	movwf	(printf@exp+1)& (0+255),b
  5575  00018A  0E00               	movlw	0
  5576  00018C  6F18               	movwf	printf@exp& (0+255),b
  5577                           
  5578                           ; BSR set to: 1
  5579                           ;doprnt.c: 836: if( fval!=0) {
  5580  00018E  0101               	movlb	1	; () banked
  5581  000190  511E               	movf	printf@fval& (0+255),w,b
  5582  000192  0101               	movlb	1	; () banked
  5583  000194  111F               	iorwf	(printf@fval+1)& (0+255),w,b
  5584  000196  0101               	movlb	1	; () banked
  5585  000198  1120               	iorwf	(printf@fval+2)& (0+255),w,b
  5586  00019A  0101               	movlb	1	; () banked
  5587  00019C  1121               	iorwf	(printf@fval+3)& (0+255),w,b
  5588  00019E  B4D8               	btfsc	status,2,c
  5589  0001A0  D08E               	goto	l6349
  5590                           
  5591                           ; BSR set to: 1
  5592                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  5593  0001A2  0101               	movlb	1	; () banked
  5594  0001A4  3520               	rlcf	(printf@fval+2)& (0+255),w,b
  5595  0001A6  3521               	rlcf	(printf@fval+3)& (0+255),w,b
  5596  0001A8  0F82               	addlw	130
  5597  0001AA  0101               	movlb	1	; () banked
  5598  0001AC  6F18               	movwf	printf@exp& (0+255),b
  5599  0001AE  0101               	movlb	1	; () banked
  5600  0001B0  6B19               	clrf	(printf@exp+1)& (0+255),b
  5601  0001B2  0EFF               	movlw	255
  5602  0001B4  2319               	addwfc	(printf@exp+1)& (0+255),f,b
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;doprnt.c: 838: exp--;
  5606  0001B6  0101               	movlb	1	; () banked
  5607  0001B8  0718               	decf	printf@exp& (0+255),f,b
  5608  0001BA  A0D8               	btfss	status,0,c
  5609  0001BC  0719               	decf	(printf@exp+1)& (0+255),f,b
  5610                           
  5611                           ; BSR set to: 1
  5612                           ;doprnt.c: 839: exp *= 3;
  5613  0001BE  C118  F072         	movff	printf@exp,___wmul@multiplier
  5614  0001C2  C119  F073         	movff	printf@exp+1,___wmul@multiplier+1
  5615  0001C6  0E00               	movlw	0
  5616  0001C8  0100               	movlb	0	; () banked
  5617  0001CA  6F75               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5618  0001CC  0E03               	movlw	3
  5619  0001CE  6F74               	movwf	___wmul@multiplicand& (0+255),b
  5620  0001D0  EC04  F01C         	call	___wmul	;wreg free
  5621  0001D4  C072  F118         	movff	?___wmul,printf@exp
  5622  0001D8  C073  F119         	movff	?___wmul+1,printf@exp+1
  5623                           
  5624                           ;doprnt.c: 840: exp /= 10;
  5625  0001DC  C118  F078         	movff	printf@exp,___awdiv@dividend
  5626  0001E0  C119  F079         	movff	printf@exp+1,___awdiv@dividend+1
  5627  0001E4  0E00               	movlw	0
  5628  0001E6  0100               	movlb	0	; () banked
  5629  0001E8  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  5630  0001EA  0E0A               	movlw	10
  5631  0001EC  6F7A               	movwf	___awdiv@divisor& (0+255),b
  5632  0001EE  EC70  F016         	call	___awdiv	;wreg free
  5633  0001F2  C078  F118         	movff	?___awdiv,printf@exp
  5634  0001F6  C079  F119         	movff	?___awdiv+1,printf@exp+1
  5635                           
  5636                           ;doprnt.c: 841: if(exp < 0)
  5637  0001FA  0101               	movlb	1	; () banked
  5638  0001FC  AF19               	btfss	(printf@exp+1)& (0+255),7,b
  5639  0001FE  D004               	goto	l6337
  5640                           
  5641                           ; BSR set to: 1
  5642                           ;doprnt.c: 842: exp--;
  5643  000200  0101               	movlb	1	; () banked
  5644  000202  0718               	decf	printf@exp& (0+255),f,b
  5645  000204  A0D8               	btfss	status,0,c
  5646  000206  0719               	decf	(printf@exp+1)& (0+255),f,b
  5647  000208                     l6337:
  5648                           
  5649                           ; BSR set to: 1
  5650                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5651  000208  0101               	movlb	1	; () banked
  5652  00020A  5118               	movf	printf@exp& (0+255),w,b
  5653  00020C  0800               	sublw	0
  5654  00020E  EC6B  F004         	call	_scale
  5655  000212  C099  F11A         	movff	?_scale,printf@tmpval
  5656  000216  C09A  F11B         	movff	?_scale+1,printf@tmpval+1
  5657  00021A  C09B  F11C         	movff	?_scale+2,printf@tmpval+2
  5658  00021E  C09C  F11D         	movff	?_scale+3,printf@tmpval+3
  5659                           
  5660                           ;doprnt.c: 847: tmpval.integ *= fval;
  5661  000222  C11A  F080         	movff	printf@tmpval,___flmul@b
  5662  000226  C11B  F081         	movff	printf@tmpval+1,___flmul@b+1
  5663  00022A  C11C  F082         	movff	printf@tmpval+2,___flmul@b+2
  5664  00022E  C11D  F083         	movff	printf@tmpval+3,___flmul@b+3
  5665  000232  C11E  F084         	movff	printf@fval,___flmul@a
  5666  000236  C11F  F085         	movff	printf@fval+1,___flmul@a+1
  5667  00023A  C120  F086         	movff	printf@fval+2,___flmul@a+2
  5668  00023E  C121  F087         	movff	printf@fval+3,___flmul@a+3
  5669  000242  EC28  F009         	call	___flmul	;wreg free
  5670  000246  C080  F11A         	movff	?___flmul,printf@tmpval
  5671  00024A  C081  F11B         	movff	?___flmul+1,printf@tmpval+1
  5672  00024E  C082  F11C         	movff	?___flmul+2,printf@tmpval+2
  5673  000252  C083  F11D         	movff	?___flmul+3,printf@tmpval+3
  5674                           
  5675                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5676  000256  C11A  F072         	movff	printf@tmpval,___flge@ff1
  5677  00025A  C11B  F073         	movff	printf@tmpval+1,___flge@ff1+1
  5678  00025E  C11C  F074         	movff	printf@tmpval+2,___flge@ff1+2
  5679  000262  C11D  F075         	movff	printf@tmpval+3,___flge@ff1+3
  5680  000266  0E00               	movlw	0
  5681  000268  0100               	movlb	0	; () banked
  5682  00026A  6F76               	movwf	___flge@ff2& (0+255),b
  5683  00026C  0E00               	movlw	0
  5684  00026E  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  5685  000270  0E80               	movlw	128
  5686  000272  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  5687  000274  0E3F               	movlw	63
  5688  000276  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  5689  000278  EC31  F013         	call	___flge	;wreg free
  5690  00027C  0100               	movlb	0	; () banked
  5691  00027E  B0D8               	btfsc	status,0,c
  5692  000280  D005               	goto	l6345
  5693                           
  5694                           ; BSR set to: 0
  5695                           ;doprnt.c: 849: exp--;
  5696  000282  0101               	movlb	1	; () banked
  5697  000284  0718               	decf	printf@exp& (0+255),f,b
  5698  000286  A0D8               	btfss	status,0,c
  5699  000288  0719               	decf	(printf@exp+1)& (0+255),f,b
  5700  00028A  D019               	goto	l6349
  5701  00028C                     l6345:
  5702                           
  5703                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5704  00028C  C11A  F072         	movff	printf@tmpval,___flge@ff1
  5705  000290  C11B  F073         	movff	printf@tmpval+1,___flge@ff1+1
  5706  000294  C11C  F074         	movff	printf@tmpval+2,___flge@ff1+2
  5707  000298  C11D  F075         	movff	printf@tmpval+3,___flge@ff1+3
  5708  00029C  0E00               	movlw	0
  5709  00029E  0100               	movlb	0	; () banked
  5710  0002A0  6F76               	movwf	___flge@ff2& (0+255),b
  5711  0002A2  0E00               	movlw	0
  5712  0002A4  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  5713  0002A6  0E20               	movlw	32
  5714  0002A8  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  5715  0002AA  0E41               	movlw	65
  5716  0002AC  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  5717  0002AE  EC31  F013         	call	___flge	;wreg free
  5718  0002B2  0100               	movlb	0	; () banked
  5719  0002B4  A0D8               	btfss	status,0,c
  5720  0002B6  D003               	goto	l6349
  5721                           
  5722                           ; BSR set to: 0
  5723                           ;doprnt.c: 851: exp++;
  5724  0002B8  0101               	movlb	1	; () banked
  5725  0002BA  4B18               	infsnz	printf@exp& (0+255),f,b
  5726  0002BC  2B19               	incf	(printf@exp+1)& (0+255),f,b
  5727  0002BE                     l6349:
  5728                           
  5729                           ;doprnt.c: 852: }
  5730                           ;doprnt.c: 1112: if(prec <= 12)
  5731  0002BE  0101               	movlb	1	; () banked
  5732  0002C0  BF13               	btfsc	(printf@prec+1)& (0+255),7,b
  5733  0002C2  D008               	goto	l6351
  5734  0002C4  0101               	movlb	1	; () banked
  5735  0002C6  5113               	movf	(printf@prec+1)& (0+255),w,b
  5736  0002C8  E123               	bnz	l6353
  5737  0002CA  0E0D               	movlw	13
  5738  0002CC  0101               	movlb	1	; () banked
  5739  0002CE  5D12               	subwf	printf@prec& (0+255),w,b
  5740  0002D0  B0D8               	btfsc	status,0,c
  5741  0002D2  D01E               	goto	l6353
  5742  0002D4                     l6351:
  5743                           
  5744                           ; BSR set to: 1
  5745                           ;doprnt.c: 1113: fval += fround(prec);
  5746  0002D4  C11E  F0A6         	movff	printf@fval,___fladd@b
  5747  0002D8  C11F  F0A7         	movff	printf@fval+1,___fladd@b+1
  5748  0002DC  C120  F0A8         	movff	printf@fval+2,___fladd@b+2
  5749  0002E0  C121  F0A9         	movff	printf@fval+3,___fladd@b+3
  5750  0002E4  0101               	movlb	1	; () banked
  5751  0002E6  5112               	movf	printf@prec& (0+255),w,b
  5752  0002E8  ECCB  F00E         	call	_fround
  5753  0002EC  C099  F0AA         	movff	?_fround,___fladd@a
  5754  0002F0  C09A  F0AB         	movff	?_fround+1,___fladd@a+1
  5755  0002F4  C09B  F0AC         	movff	?_fround+2,___fladd@a+2
  5756  0002F8  C09C  F0AD         	movff	?_fround+3,___fladd@a+3
  5757  0002FC  ECD4  F006         	call	___fladd	;wreg free
  5758  000300  C0A6  F11E         	movff	?___fladd,printf@fval
  5759  000304  C0A7  F11F         	movff	?___fladd+1,printf@fval+1
  5760  000308  C0A8  F120         	movff	?___fladd+2,printf@fval+2
  5761  00030C  C0A9  F121         	movff	?___fladd+3,printf@fval+3
  5762  000310                     l6353:
  5763                           
  5764                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5765  000310  0101               	movlb	1	; () banked
  5766  000312  BF19               	btfsc	(printf@exp+1)& (0+255),7,b
  5767  000314  D008               	goto	l6355
  5768  000316  0101               	movlb	1	; () banked
  5769  000318  5119               	movf	(printf@exp+1)& (0+255),w,b
  5770  00031A  E12E               	bnz	l6361
  5771  00031C  0E0A               	movlw	10
  5772  00031E  0101               	movlb	1	; () banked
  5773  000320  5D18               	subwf	printf@exp& (0+255),w,b
  5774  000322  B0D8               	btfsc	status,0,c
  5775  000324  D029               	goto	l6361
  5776  000326                     l6355:
  5777                           
  5778                           ; BSR set to: 1
  5779  000326  0101               	movlb	1	; () banked
  5780  000328  511E               	movf	printf@fval& (0+255),w,b
  5781  00032A  0101               	movlb	1	; () banked
  5782  00032C  111F               	iorwf	(printf@fval+1)& (0+255),w,b
  5783  00032E  0101               	movlb	1	; () banked
  5784  000330  1120               	iorwf	(printf@fval+2)& (0+255),w,b
  5785  000332  0101               	movlb	1	; () banked
  5786  000334  1121               	iorwf	(printf@fval+3)& (0+255),w,b
  5787  000336  B4D8               	btfsc	status,2,c
  5788  000338  D06D               	goto	l6375
  5789                           
  5790                           ; BSR set to: 1
  5791  00033A  C11E  F0A2         	movff	printf@fval,___fltol@f1
  5792  00033E  C11F  F0A3         	movff	printf@fval+1,___fltol@f1+1
  5793  000342  C120  F0A4         	movff	printf@fval+2,___fltol@f1+2
  5794  000346  C121  F0A5         	movff	printf@fval+3,___fltol@f1+3
  5795  00034A  ECEA  F015         	call	___fltol	;wreg free
  5796  00034E  0100               	movlb	0	; () banked
  5797  000350  51A2               	movf	?___fltol& (0+255),w,b
  5798  000352  0100               	movlb	0	; () banked
  5799  000354  11A3               	iorwf	(?___fltol+1)& (0+255),w,b
  5800  000356  0100               	movlb	0	; () banked
  5801  000358  11A4               	iorwf	(?___fltol+2)& (0+255),w,b
  5802  00035A  0100               	movlb	0	; () banked
  5803  00035C  11A5               	iorwf	(?___fltol+3)& (0+255),w,b
  5804  00035E  A4D8               	btfss	status,2,c
  5805  000360  D059               	goto	l6375
  5806                           
  5807                           ; BSR set to: 0
  5808  000362  0101               	movlb	1	; () banked
  5809  000364  BF19               	btfsc	(printf@exp+1)& (0+255),7,b
  5810  000366  D056               	goto	l6375
  5811  000368  0101               	movlb	1	; () banked
  5812  00036A  5119               	movf	(printf@exp+1)& (0+255),w,b
  5813  00036C  E105               	bnz	l6361
  5814  00036E  0E02               	movlw	2
  5815  000370  0101               	movlb	1	; () banked
  5816  000372  5D18               	subwf	printf@exp& (0+255),w,b
  5817  000374  A0D8               	btfss	status,0,c
  5818  000376  D04E               	goto	l6375
  5819  000378                     l6361:
  5820                           
  5821                           ; BSR set to: 1
  5822                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5823  000378  C11A  F072         	movff	printf@tmpval,___flge@ff1
  5824  00037C  C11B  F073         	movff	printf@tmpval+1,___flge@ff1+1
  5825  000380  C11C  F074         	movff	printf@tmpval+2,___flge@ff1+2
  5826  000384  C11D  F075         	movff	printf@tmpval+3,___flge@ff1+3
  5827  000388  0E5F               	movlw	95
  5828  00038A  0100               	movlb	0	; () banked
  5829  00038C  6F76               	movwf	___flge@ff2& (0+255),b
  5830  00038E  0E70               	movlw	112
  5831  000390  6F77               	movwf	(___flge@ff2+1)& (0+255),b
  5832  000392  0E89               	movlw	137
  5833  000394  6F78               	movwf	(___flge@ff2+2)& (0+255),b
  5834  000396  0E40               	movlw	64
  5835  000398  6F79               	movwf	(___flge@ff2+3)& (0+255),b
  5836  00039A  EC31  F013         	call	___flge	;wreg free
  5837  00039E  0100               	movlb	0	; () banked
  5838  0003A0  B0D8               	btfsc	status,0,c
  5839  0003A2  D003               	goto	l6365
  5840                           
  5841                           ; BSR set to: 0
  5842                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5843  0003A4  0101               	movlb	1	; () banked
  5844  0003A6  0EF7               	movlw	247
  5845  0003A8  D002               	goto	L3
  5846  0003AA                     l6365:
  5847                           
  5848                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5849  0003AA  0101               	movlb	1	; () banked
  5850  0003AC  0EF8               	movlw	248
  5851  0003AE                     L3:
  5852  0003AE  2718               	addwf	printf@exp& (0+255),f,b
  5853  0003B0  0EFF               	movlw	255
  5854  0003B2  2319               	addwfc	(printf@exp+1)& (0+255),f,b
  5855                           
  5856                           ; BSR set to: 1
  5857                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5858                           
  5859                           ; BSR set to: 1
  5860  0003B4  0101               	movlb	1	; () banked
  5861  0003B6  5118               	movf	printf@exp& (0+255),w,b
  5862  0003B8  EC6B  F004         	call	_scale
  5863  0003BC  C099  F11A         	movff	?_scale,printf@tmpval
  5864  0003C0  C09A  F11B         	movff	?_scale+1,printf@tmpval+1
  5865  0003C4  C09B  F11C         	movff	?_scale+2,printf@tmpval+2
  5866  0003C8  C09C  F11D         	movff	?_scale+3,printf@tmpval+3
  5867  0003CC  C11E  F072         	movff	printf@fval,__div_to_l_@f1
  5868  0003D0  C11F  F073         	movff	printf@fval+1,__div_to_l_@f1+1
  5869  0003D4  C120  F074         	movff	printf@fval+2,__div_to_l_@f1+2
  5870  0003D8  C121  F075         	movff	printf@fval+3,__div_to_l_@f1+3
  5871  0003DC  C11A  F076         	movff	printf@tmpval,__div_to_l_@f2
  5872  0003E0  C11B  F077         	movff	printf@tmpval+1,__div_to_l_@f2+1
  5873  0003E4  C11C  F078         	movff	printf@tmpval+2,__div_to_l_@f2+2
  5874  0003E8  C11D  F079         	movff	printf@tmpval+3,__div_to_l_@f2+3
  5875  0003EC  ECF9  F013         	call	__div_to_l_	;wreg free
  5876  0003F0  C072  F114         	movff	?__div_to_l_,printf@val
  5877  0003F4  C073  F115         	movff	?__div_to_l_+1,printf@val+1
  5878  0003F8  C074  F116         	movff	?__div_to_l_+2,printf@val+2
  5879  0003FC  C075  F117         	movff	?__div_to_l_+3,printf@val+3
  5880                           
  5881                           ;doprnt.c: 1129: fval = 0.0;
  5882  000400  0E00               	movlw	0
  5883  000402  0101               	movlb	1	; () banked
  5884  000404  6F1E               	movwf	printf@fval& (0+255),b
  5885  000406  0E00               	movlw	0
  5886  000408  6F1F               	movwf	(printf@fval+1)& (0+255),b
  5887  00040A  0E00               	movlw	0
  5888  00040C  6F20               	movwf	(printf@fval+2)& (0+255),b
  5889  00040E  0E00               	movlw	0
  5890  000410  6F21               	movwf	(printf@fval+3)& (0+255),b
  5891                           
  5892                           ;doprnt.c: 1130: } else {
  5893  000412  D03C               	goto	l6379
  5894  000414                     l6375:
  5895                           
  5896                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5897  000414  C11E  F0A2         	movff	printf@fval,___fltol@f1
  5898  000418  C11F  F0A3         	movff	printf@fval+1,___fltol@f1+1
  5899  00041C  C120  F0A4         	movff	printf@fval+2,___fltol@f1+2
  5900  000420  C121  F0A5         	movff	printf@fval+3,___fltol@f1+3
  5901  000424  ECEA  F015         	call	___fltol	;wreg free
  5902  000428  C0A2  F114         	movff	?___fltol,printf@val
  5903  00042C  C0A3  F115         	movff	?___fltol+1,printf@val+1
  5904  000430  C0A4  F116         	movff	?___fltol+2,printf@val+2
  5905  000434  C0A5  F117         	movff	?___fltol+3,printf@val+3
  5906                           
  5907                           ;doprnt.c: 1132: fval -= (double)val;
  5908  000438  C11E  F0BA         	movff	printf@fval,___flsub@b
  5909  00043C  C11F  F0BB         	movff	printf@fval+1,___flsub@b+1
  5910  000440  C120  F0BC         	movff	printf@fval+2,___flsub@b+2
  5911  000444  C121  F0BD         	movff	printf@fval+3,___flsub@b+3
  5912  000448  C114  F072         	movff	printf@val,___xxtofl@val
  5913  00044C  C115  F073         	movff	printf@val+1,___xxtofl@val+1
  5914  000450  C116  F074         	movff	printf@val+2,___xxtofl@val+2
  5915  000454  C117  F075         	movff	printf@val+3,___xxtofl@val+3
  5916  000458  0E00               	movlw	0
  5917  00045A  EC7B  F011         	call	___xxtofl
  5918  00045E  C072  F0BE         	movff	?___xxtofl,___flsub@a
  5919  000462  C073  F0BF         	movff	?___xxtofl+1,___flsub@a+1
  5920  000466  C074  F0C0         	movff	?___xxtofl+2,___flsub@a+2
  5921  00046A  C075  F0C1         	movff	?___xxtofl+3,___flsub@a+3
  5922  00046E  EC05  F01B         	call	___flsub	;wreg free
  5923  000472  C0BA  F11E         	movff	?___flsub,printf@fval
  5924  000476  C0BB  F11F         	movff	?___flsub+1,printf@fval+1
  5925  00047A  C0BC  F120         	movff	?___flsub+2,printf@fval+2
  5926  00047E  C0BD  F121         	movff	?___flsub+3,printf@fval+3
  5927                           
  5928                           ;doprnt.c: 1133: exp = 0;
  5929  000482  0E00               	movlw	0
  5930  000484  0101               	movlb	1	; () banked
  5931  000486  6F19               	movwf	(printf@exp+1)& (0+255),b
  5932  000488  0E00               	movlw	0
  5933  00048A  6F18               	movwf	printf@exp& (0+255),b
  5934  00048C                     l6379:
  5935                           
  5936                           ; BSR set to: 1
  5937                           ;doprnt.c: 1134: }
  5938                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5939  00048C  0E01               	movlw	1
  5940  00048E  0101               	movlb	1	; () banked
  5941  000490  6F22               	movwf	printf@c& (0+255),b
  5942  000492                     l6381:
  5943                           
  5944                           ; BSR set to: 1
  5945  000492  0E0A               	movlw	10
  5946  000494  0101               	movlb	1	; () banked
  5947  000496  1922               	xorwf	printf@c& (0+255),w,b
  5948  000498  B4D8               	btfsc	status,2,c
  5949  00049A  D01E               	goto	l6393
  5950                           
  5951                           ; BSR set to: 1
  5952                           ;doprnt.c: 1137: if(val < dpowers[c])
  5953                           
  5954                           ; BSR set to: 1
  5955                           
  5956                           ; BSR set to: 1
  5957  00049C  0101               	movlb	1	; () banked
  5958  00049E  5122               	movf	printf@c& (0+255),w,b
  5959  0004A0  0D04               	mullw	4
  5960  0004A2  0E6B               	movlw	low _dpowers
  5961  0004A4  24F3               	addwf	prodl,w,c
  5962  0004A6  6EF6               	movwf	tblptrl,c
  5963  0004A8  0E7E               	movlw	high _dpowers
  5964  0004AA  20F4               	addwfc	prodh,w,c
  5965  0004AC  6EF7               	movwf	tblptrh,c
  5966  0004AE                     	if	0	;There are less than 3 active tblptr bytes
  5967  0004AE                     	endif
  5968  0004AE  0009               	tblrd		*+
  5969  0004B0  50F5               	movf	tablat,w,c
  5970  0004B2  0101               	movlb	1	; () banked
  5971  0004B4  5D14               	subwf	printf@val& (0+255),w,b
  5972  0004B6  0009               	tblrd		*+
  5973  0004B8  50F5               	movf	tablat,w,c
  5974  0004BA  0101               	movlb	1	; () banked
  5975  0004BC  5915               	subwfb	(printf@val+1)& (0+255),w,b
  5976  0004BE  0009               	tblrd		*+
  5977  0004C0  50F5               	movf	tablat,w,c
  5978  0004C2  0101               	movlb	1	; () banked
  5979  0004C4  5916               	subwfb	(printf@val+2)& (0+255),w,b
  5980  0004C6  0009               	tblrd		*+
  5981  0004C8  50F5               	movf	tablat,w,c
  5982  0004CA  0101               	movlb	1	; () banked
  5983  0004CC  5917               	subwfb	(printf@val+3)& (0+255),w,b
  5984  0004CE  A0D8               	btfss	status,0,c
  5985  0004D0  D003               	goto	l6393
  5986                           
  5987                           ; BSR set to: 1
  5988                           
  5989                           ; BSR set to: 1
  5990                           
  5991                           ; BSR set to: 1
  5992                           ;doprnt.c: 1138: break;
  5993  0004D2  0101               	movlb	1	; () banked
  5994  0004D4  2B22               	incf	printf@c& (0+255),f,b
  5995  0004D6  D7DD               	goto	l6381
  5996  0004D8                     l6393:
  5997                           
  5998                           ; BSR set to: 1
  5999                           ;doprnt.c: 1175: {
  6000                           ;doprnt.c: 1188: if(flag & 0x03)
  6001  0004D8  0E03               	movlw	3
  6002  0004DA  0101               	movlb	1	; () banked
  6003  0004DC  1510               	andwf	printf@flag& (0+255),w,b
  6004  0004DE  0100               	movlb	0	; () banked
  6005  0004E0  6FC2               	movwf	??_printf& (0+255),b
  6006  0004E2  0E00               	movlw	0
  6007  0004E4  0101               	movlb	1	; () banked
  6008  0004E6  1511               	andwf	(printf@flag+1)& (0+255),w,b
  6009  0004E8  0100               	movlb	0	; () banked
  6010  0004EA  6FC3               	movwf	(??_printf+1)& (0+255),b
  6011  0004EC  0100               	movlb	0	; () banked
  6012  0004EE  51C2               	movf	??_printf& (0+255),w,b
  6013  0004F0  0100               	movlb	0	; () banked
  6014  0004F2  11C3               	iorwf	(??_printf+1)& (0+255),w,b
  6015  0004F4  B4D8               	btfsc	status,2,c
  6016  0004F6  D04B               	goto	l6403
  6017                           
  6018                           ; BSR set to: 0
  6019                           ;doprnt.c: 1190: (putch('-') );
  6020  0004F8  0E2D               	movlw	45
  6021  0004FA  ECFF  F01C         	call	_putch
  6022                           
  6023                           ;doprnt.c: 1195: }
  6024                           ;doprnt.c: 1196: while(c--) {
  6025  0004FE  D047               	goto	l6403
  6026  000500                     l6397:
  6027                           
  6028                           ;doprnt.c: 1200: {
  6029                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  6030  000500  C114  F072         	movff	printf@val,___lldiv@dividend
  6031  000504  C115  F073         	movff	printf@val+1,___lldiv@dividend+1
  6032  000508  C116  F074         	movff	printf@val+2,___lldiv@dividend+2
  6033  00050C  C117  F075         	movff	printf@val+3,___lldiv@dividend+3
  6034  000510  0101               	movlb	1	; () banked
  6035  000512  5122               	movf	printf@c& (0+255),w,b
  6036  000514  0D04               	mullw	4
  6037  000516  0E6B               	movlw	low _dpowers
  6038  000518  24F3               	addwf	prodl,w,c
  6039  00051A  6EF6               	movwf	tblptrl,c
  6040  00051C  0E7E               	movlw	high _dpowers
  6041  00051E  20F4               	addwfc	prodh,w,c
  6042  000520  6EF7               	movwf	tblptrh,c
  6043  000522                     	if	0	;There are less than 3 active tblptr bytes
  6044  000522                     	endif
  6045  000522  0009               	tblrd		*+
  6046  000524  CFF5 F076          	movff	tablat,___lldiv@divisor
  6047  000528  0009               	tblrd		*+
  6048  00052A  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  6049  00052E  0009               	tblrd		*+
  6050  000530  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  6051  000534  000A               	tblrd		*-
  6052  000536  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  6053  00053A  ECCF  F016         	call	___lldiv	;wreg free
  6054  00053E  C072  F11A         	movff	?___lldiv,printf@tmpval
  6055  000542  C073  F11B         	movff	?___lldiv+1,printf@tmpval+1
  6056  000546  C074  F11C         	movff	?___lldiv+2,printf@tmpval+2
  6057  00054A  C075  F11D         	movff	?___lldiv+3,printf@tmpval+3
  6058                           
  6059                           ;doprnt.c: 1202: tmpval.vd %= 10;
  6060  00054E  C11A  F07F         	movff	printf@tmpval,___llmod@dividend
  6061  000552  C11B  F080         	movff	printf@tmpval+1,___llmod@dividend+1
  6062  000556  C11C  F081         	movff	printf@tmpval+2,___llmod@dividend+2
  6063  00055A  C11D  F082         	movff	printf@tmpval+3,___llmod@dividend+3
  6064  00055E  0E0A               	movlw	10
  6065  000560  0100               	movlb	0	; () banked
  6066  000562  6F83               	movwf	___llmod@divisor& (0+255),b
  6067  000564  0E00               	movlw	0
  6068  000566  6F84               	movwf	(___llmod@divisor+1)& (0+255),b
  6069  000568  0E00               	movlw	0
  6070  00056A  6F85               	movwf	(___llmod@divisor+2)& (0+255),b
  6071  00056C  0E00               	movlw	0
  6072  00056E  6F86               	movwf	(___llmod@divisor+3)& (0+255),b
  6073  000570  ECCF  F017         	call	___llmod	;wreg free
  6074  000574  C07F  F11A         	movff	?___llmod,printf@tmpval
  6075  000578  C080  F11B         	movff	?___llmod+1,printf@tmpval+1
  6076  00057C  C081  F11C         	movff	?___llmod+2,printf@tmpval+2
  6077  000580  C082  F11D         	movff	?___llmod+3,printf@tmpval+3
  6078                           
  6079                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6080  000584  0101               	movlb	1	; () banked
  6081  000586  511A               	movf	printf@tmpval& (0+255),w,b
  6082  000588  0F30               	addlw	48
  6083  00058A  ECFF  F01C         	call	_putch
  6084  00058E                     l6403:
  6085  00058E  0101               	movlb	1	; () banked
  6086  000590  0722               	decf	printf@c& (0+255),f,b
  6087  000592  0101               	movlb	1	; () banked
  6088  000594  2922               	incf	printf@c& (0+255),w,b
  6089  000596  B4D8               	btfsc	status,2,c
  6090  000598  D008               	goto	l6409
  6091  00059A  D7B2               	goto	l6397
  6092  00059C                     l6405:
  6093                           
  6094                           ; BSR set to: 1
  6095                           ;doprnt.c: 1208: (putch('0') );
  6096  00059C  0E30               	movlw	48
  6097  00059E  ECFF  F01C         	call	_putch
  6098                           
  6099                           ;doprnt.c: 1209: exp--;
  6100  0005A2  0101               	movlb	1	; () banked
  6101  0005A4  0718               	decf	printf@exp& (0+255),f,b
  6102  0005A6  A0D8               	btfss	status,0,c
  6103  0005A8  0719               	decf	(printf@exp+1)& (0+255),f,b
  6104  0005AA                     l6409:
  6105                           
  6106                           ; BSR set to: 1
  6107  0005AA  0101               	movlb	1	; () banked
  6108  0005AC  BF19               	btfsc	(printf@exp+1)& (0+255),7,b
  6109  0005AE  D007               	goto	l6411
  6110  0005B0  0101               	movlb	1	; () banked
  6111  0005B2  5119               	movf	(printf@exp+1)& (0+255),w,b
  6112  0005B4  E1F3               	bnz	l6405
  6113  0005B6  0101               	movlb	1	; () banked
  6114  0005B8  0518               	decf	printf@exp& (0+255),w,b
  6115  0005BA  B0D8               	btfsc	status,0,c
  6116  0005BC  D7EF               	goto	l6405
  6117  0005BE                     l6411:
  6118                           
  6119                           ; BSR set to: 1
  6120                           ;doprnt.c: 1210: }
  6121                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6122  0005BE  0101               	movlb	1	; () banked
  6123  0005C0  BF13               	btfsc	(printf@prec+1)& (0+255),7,b
  6124  0005C2  D00C               	goto	l592
  6125  0005C4  0101               	movlb	1	; () banked
  6126  0005C6  5113               	movf	(printf@prec+1)& (0+255),w,b
  6127  0005C8  E105               	bnz	u7600
  6128  0005CA  0E09               	movlw	9
  6129  0005CC  0101               	movlb	1	; () banked
  6130  0005CE  5D12               	subwf	printf@prec& (0+255),w,b
  6131  0005D0  A0D8               	btfss	status,0,c
  6132  0005D2  D004               	goto	l592
  6133  0005D4                     u7600:
  6134                           
  6135                           ; BSR set to: 1
  6136                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6137  0005D4  0E08               	movlw	8
  6138  0005D6  0101               	movlb	1	; () banked
  6139  0005D8  6F22               	movwf	printf@c& (0+255),b
  6140  0005DA  D002               	goto	l6415
  6141  0005DC                     l592:
  6142                           
  6143                           ; BSR set to: 1
  6144                           ;doprnt.c: 1213: else
  6145                           ;doprnt.c: 1214: c = prec;
  6146  0005DC  C112  F122         	movff	printf@prec,printf@c
  6147  0005E0                     l6415:
  6148                           
  6149                           ; BSR set to: 1
  6150                           ;doprnt.c: 1215: prec -= c;
  6151  0005E0  0101               	movlb	1	; () banked
  6152  0005E2  5122               	movf	printf@c& (0+255),w,b
  6153  0005E4  0101               	movlb	1	; () banked
  6154  0005E6  5F12               	subwf	printf@prec& (0+255),f,b
  6155  0005E8  0E00               	movlw	0
  6156  0005EA  0101               	movlb	1	; () banked
  6157  0005EC  BF22               	btfsc	printf@c& (0+255),7,b
  6158  0005EE  0EFF               	movlw	255
  6159  0005F0  0101               	movlb	1	; () banked
  6160  0005F2  5B13               	subwfb	(printf@prec+1)& (0+255),f,b
  6161                           
  6162                           ; BSR set to: 1
  6163                           ;doprnt.c: 1219: if(c)
  6164  0005F4  0101               	movlb	1	; () banked
  6165  0005F6  5122               	movf	printf@c& (0+255),w,b
  6166  0005F8  0101               	movlb	1	; () banked
  6167  0005FA  B4D8               	btfsc	status,2,c
  6168  0005FC  D003               	goto	l6421
  6169                           
  6170                           ; BSR set to: 1
  6171                           ;doprnt.c: 1221: (putch('.') );
  6172  0005FE  0E2E               	movlw	46
  6173  000600  ECFF  F01C         	call	_putch
  6174  000604                     l6421:
  6175                           
  6176                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6177  000604  0101               	movlb	1	; () banked
  6178  000606  5122               	movf	printf@c& (0+255),w,b
  6179  000608  EC6B  F004         	call	_scale
  6180  00060C  C099  F10A         	movff	?_scale,_printf$2763
  6181  000610  C09A  F10B         	movff	?_scale+1,_printf$2763+1
  6182  000614  C09B  F10C         	movff	?_scale+2,_printf$2763+2
  6183  000618  C09C  F10D         	movff	?_scale+3,_printf$2763+3
  6184                           
  6185                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6186  00061C  C11E  F084         	movff	printf@fval,___flmul@a
  6187  000620  C11F  F085         	movff	printf@fval+1,___flmul@a+1
  6188  000624  C120  F086         	movff	printf@fval+2,___flmul@a+2
  6189  000628  C121  F087         	movff	printf@fval+3,___flmul@a+3
  6190  00062C  C10A  F080         	movff	_printf$2763,___flmul@b
  6191  000630  C10B  F081         	movff	_printf$2763+1,___flmul@b+1
  6192  000634  C10C  F082         	movff	_printf$2763+2,___flmul@b+2
  6193  000638  C10D  F083         	movff	_printf$2763+3,___flmul@b+3
  6194  00063C  EC28  F009         	call	___flmul	;wreg free
  6195  000640  C080  F0A2         	movff	?___flmul,___fltol@f1
  6196  000644  C081  F0A3         	movff	?___flmul+1,___fltol@f1+1
  6197  000648  C082  F0A4         	movff	?___flmul+2,___fltol@f1+2
  6198  00064C  C083  F0A5         	movff	?___flmul+3,___fltol@f1+3
  6199  000650  ECEA  F015         	call	___fltol	;wreg free
  6200  000654  C0A2  F114         	movff	?___fltol,printf@val
  6201  000658  C0A3  F115         	movff	?___fltol+1,printf@val+1
  6202  00065C  C0A4  F116         	movff	?___fltol+2,printf@val+2
  6203  000660  C0A5  F117         	movff	?___fltol+3,printf@val+3
  6204                           
  6205                           ;doprnt.c: 1228: while(c--) {
  6206  000664  D06E               	goto	l6431
  6207  000666                     l6425:
  6208                           
  6209                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6210  000666  C114  F072         	movff	printf@val,___lldiv@dividend
  6211  00066A  C115  F073         	movff	printf@val+1,___lldiv@dividend+1
  6212  00066E  C116  F074         	movff	printf@val+2,___lldiv@dividend+2
  6213  000672  C117  F075         	movff	printf@val+3,___lldiv@dividend+3
  6214  000676  0101               	movlb	1	; () banked
  6215  000678  5122               	movf	printf@c& (0+255),w,b
  6216  00067A  0D04               	mullw	4
  6217  00067C  0E6B               	movlw	low _dpowers
  6218  00067E  24F3               	addwf	prodl,w,c
  6219  000680  6EF6               	movwf	tblptrl,c
  6220  000682  0E7E               	movlw	high _dpowers
  6221  000684  20F4               	addwfc	prodh,w,c
  6222  000686  6EF7               	movwf	tblptrh,c
  6223  000688                     	if	0	;There are less than 3 active tblptr bytes
  6224  000688                     	endif
  6225  000688  0009               	tblrd		*+
  6226  00068A  CFF5 F076          	movff	tablat,___lldiv@divisor
  6227  00068E  0009               	tblrd		*+
  6228  000690  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  6229  000694  0009               	tblrd		*+
  6230  000696  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  6231  00069A  000A               	tblrd		*-
  6232  00069C  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  6233  0006A0  ECCF  F016         	call	___lldiv	;wreg free
  6234  0006A4  C072  F11A         	movff	?___lldiv,printf@tmpval
  6235  0006A8  C073  F11B         	movff	?___lldiv+1,printf@tmpval+1
  6236  0006AC  C074  F11C         	movff	?___lldiv+2,printf@tmpval+2
  6237  0006B0  C075  F11D         	movff	?___lldiv+3,printf@tmpval+3
  6238                           
  6239                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6240  0006B4  C11A  F07F         	movff	printf@tmpval,___llmod@dividend
  6241  0006B8  C11B  F080         	movff	printf@tmpval+1,___llmod@dividend+1
  6242  0006BC  C11C  F081         	movff	printf@tmpval+2,___llmod@dividend+2
  6243  0006C0  C11D  F082         	movff	printf@tmpval+3,___llmod@dividend+3
  6244  0006C4  0E0A               	movlw	10
  6245  0006C6  0100               	movlb	0	; () banked
  6246  0006C8  6F83               	movwf	___llmod@divisor& (0+255),b
  6247  0006CA  0E00               	movlw	0
  6248  0006CC  6F84               	movwf	(___llmod@divisor+1)& (0+255),b
  6249  0006CE  0E00               	movlw	0
  6250  0006D0  6F85               	movwf	(___llmod@divisor+2)& (0+255),b
  6251  0006D2  0E00               	movlw	0
  6252  0006D4  6F86               	movwf	(___llmod@divisor+3)& (0+255),b
  6253  0006D6  ECCF  F017         	call	___llmod	;wreg free
  6254  0006DA  C07F  F11A         	movff	?___llmod,printf@tmpval
  6255  0006DE  C080  F11B         	movff	?___llmod+1,printf@tmpval+1
  6256  0006E2  C081  F11C         	movff	?___llmod+2,printf@tmpval+2
  6257  0006E6  C082  F11D         	movff	?___llmod+3,printf@tmpval+3
  6258                           
  6259                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6260  0006EA  0101               	movlb	1	; () banked
  6261  0006EC  511A               	movf	printf@tmpval& (0+255),w,b
  6262  0006EE  0F30               	addlw	48
  6263  0006F0  ECFF  F01C         	call	_putch
  6264                           
  6265                           ;doprnt.c: 1232: val %= dpowers[c];
  6266  0006F4  C114  F07F         	movff	printf@val,___llmod@dividend
  6267  0006F8  C115  F080         	movff	printf@val+1,___llmod@dividend+1
  6268  0006FC  C116  F081         	movff	printf@val+2,___llmod@dividend+2
  6269  000700  C117  F082         	movff	printf@val+3,___llmod@dividend+3
  6270  000704  0101               	movlb	1	; () banked
  6271  000706  5122               	movf	printf@c& (0+255),w,b
  6272  000708  0D04               	mullw	4
  6273  00070A  0E6B               	movlw	low _dpowers
  6274  00070C  24F3               	addwf	prodl,w,c
  6275  00070E  6EF6               	movwf	tblptrl,c
  6276  000710  0E7E               	movlw	high _dpowers
  6277  000712  20F4               	addwfc	prodh,w,c
  6278  000714  6EF7               	movwf	tblptrh,c
  6279  000716                     	if	0	;There are less than 3 active tblptr bytes
  6280  000716                     	endif
  6281  000716  0009               	tblrd		*+
  6282  000718  CFF5 F083          	movff	tablat,___llmod@divisor
  6283  00071C  0009               	tblrd		*+
  6284  00071E  CFF5 F084          	movff	tablat,___llmod@divisor+1
  6285  000722  0009               	tblrd		*+
  6286  000724  CFF5 F085          	movff	tablat,___llmod@divisor+2
  6287  000728  000A               	tblrd		*-
  6288  00072A  CFF5 F086          	movff	tablat,___llmod@divisor+3
  6289  00072E  ECCF  F017         	call	___llmod	;wreg free
  6290  000732  C07F  F114         	movff	?___llmod,printf@val
  6291  000736  C080  F115         	movff	?___llmod+1,printf@val+1
  6292  00073A  C081  F116         	movff	?___llmod+2,printf@val+2
  6293  00073E  C082  F117         	movff	?___llmod+3,printf@val+3
  6294  000742                     l6431:
  6295  000742  0101               	movlb	1	; () banked
  6296  000744  0722               	decf	printf@c& (0+255),f,b
  6297  000746  0101               	movlb	1	; () banked
  6298  000748  2922               	incf	printf@c& (0+255),w,b
  6299  00074A  B4D8               	btfsc	status,2,c
  6300  00074C  D008               	goto	l6437
  6301  00074E  D78B               	goto	l6425
  6302  000750                     l6433:
  6303                           
  6304                           ; BSR set to: 1
  6305                           ;doprnt.c: 1236: (putch('0') );
  6306  000750  0E30               	movlw	48
  6307  000752  ECFF  F01C         	call	_putch
  6308                           
  6309                           ;doprnt.c: 1237: prec--;
  6310  000756  0101               	movlb	1	; () banked
  6311  000758  0712               	decf	printf@prec& (0+255),f,b
  6312  00075A  A0D8               	btfss	status,0,c
  6313  00075C  0713               	decf	(printf@prec+1)& (0+255),f,b
  6314  00075E                     l6437:
  6315                           
  6316                           ; BSR set to: 1
  6317  00075E  0101               	movlb	1	; () banked
  6318  000760  5112               	movf	printf@prec& (0+255),w,b
  6319  000762  0101               	movlb	1	; () banked
  6320  000764  1113               	iorwf	(printf@prec+1)& (0+255),w,b
  6321  000766  B4D8               	btfsc	status,2,c
  6322  000768  D0A6               	goto	l6469
  6323  00076A  D7F2               	goto	l6433
  6324  00076C                     l6439:
  6325                           
  6326                           ; BSR set to: 1
  6327                           ;doprnt.c: 1246: }
  6328                           ;doprnt.c: 1273: {
  6329                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6330  00076C  C10E  FFD9         	movff	printf@ap,fsr2l
  6331  000770  C10F  FFDA         	movff	printf@ap+1,fsr2h
  6332  000774  CFDE F0C2          	movff	postinc2,??_printf
  6333  000778  CFDD F0C3          	movff	postdec2,??_printf+1
  6334  00077C  C0C2  F114         	movff	??_printf,printf@val
  6335  000780  C0C3  F115         	movff	??_printf+1,printf@val+1
  6336  000784  0101               	movlb	1	; () banked
  6337  000786  6B16               	clrf	(printf@val+2)& (0+255),b
  6338  000788  6B17               	clrf	(printf@val+3)& (0+255),b
  6339                           
  6340                           ; BSR set to: 1
  6341  00078A  0E02               	movlw	2
  6342  00078C  0101               	movlb	1	; () banked
  6343  00078E  270E               	addwf	printf@ap& (0+255),f,b
  6344  000790  0E00               	movlw	0
  6345  000792  230F               	addwfc	(printf@ap+1)& (0+255),f,b
  6346                           
  6347                           ; BSR set to: 1
  6348                           ;doprnt.c: 1287: }
  6349                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6350  000794  0E01               	movlw	1
  6351  000796  0101               	movlb	1	; () banked
  6352  000798  6F22               	movwf	printf@c& (0+255),b
  6353  00079A                     l6445:
  6354                           
  6355                           ; BSR set to: 1
  6356  00079A  0E0A               	movlw	10
  6357  00079C  0101               	movlb	1	; () banked
  6358  00079E  1922               	xorwf	printf@c& (0+255),w,b
  6359  0007A0  B4D8               	btfsc	status,2,c
  6360  0007A2  D01E               	goto	l6457
  6361                           
  6362                           ; BSR set to: 1
  6363                           ;doprnt.c: 1306: if(val < dpowers[c])
  6364                           
  6365                           ; BSR set to: 1
  6366                           
  6367                           ; BSR set to: 1
  6368  0007A4  0101               	movlb	1	; () banked
  6369  0007A6  5122               	movf	printf@c& (0+255),w,b
  6370  0007A8  0D04               	mullw	4
  6371  0007AA  0E6B               	movlw	low _dpowers
  6372  0007AC  24F3               	addwf	prodl,w,c
  6373  0007AE  6EF6               	movwf	tblptrl,c
  6374  0007B0  0E7E               	movlw	high _dpowers
  6375  0007B2  20F4               	addwfc	prodh,w,c
  6376  0007B4  6EF7               	movwf	tblptrh,c
  6377  0007B6                     	if	0	;There are less than 3 active tblptr bytes
  6378  0007B6                     	endif
  6379  0007B6  0009               	tblrd		*+
  6380  0007B8  50F5               	movf	tablat,w,c
  6381  0007BA  0101               	movlb	1	; () banked
  6382  0007BC  5D14               	subwf	printf@val& (0+255),w,b
  6383  0007BE  0009               	tblrd		*+
  6384  0007C0  50F5               	movf	tablat,w,c
  6385  0007C2  0101               	movlb	1	; () banked
  6386  0007C4  5915               	subwfb	(printf@val+1)& (0+255),w,b
  6387  0007C6  0009               	tblrd		*+
  6388  0007C8  50F5               	movf	tablat,w,c
  6389  0007CA  0101               	movlb	1	; () banked
  6390  0007CC  5916               	subwfb	(printf@val+2)& (0+255),w,b
  6391  0007CE  0009               	tblrd		*+
  6392  0007D0  50F5               	movf	tablat,w,c
  6393  0007D2  0101               	movlb	1	; () banked
  6394  0007D4  5917               	subwfb	(printf@val+3)& (0+255),w,b
  6395  0007D6  A0D8               	btfss	status,0,c
  6396  0007D8  D003               	goto	l6457
  6397                           
  6398                           ; BSR set to: 1
  6399                           
  6400                           ; BSR set to: 1
  6401                           
  6402                           ; BSR set to: 1
  6403                           ;doprnt.c: 1307: break;
  6404  0007DA  0101               	movlb	1	; () banked
  6405  0007DC  2B22               	incf	printf@c& (0+255),f,b
  6406  0007DE  D7DD               	goto	l6445
  6407  0007E0                     l6457:
  6408                           
  6409                           ; BSR set to: 1
  6410                           ;doprnt.c: 1422: {
  6411                           ;doprnt.c: 1438: if(flag & 0x03)
  6412  0007E0  0E03               	movlw	3
  6413  0007E2  0101               	movlb	1	; () banked
  6414  0007E4  1510               	andwf	printf@flag& (0+255),w,b
  6415  0007E6  0100               	movlb	0	; () banked
  6416  0007E8  6FC2               	movwf	??_printf& (0+255),b
  6417  0007EA  0E00               	movlw	0
  6418  0007EC  0101               	movlb	1	; () banked
  6419  0007EE  1511               	andwf	(printf@flag+1)& (0+255),w,b
  6420  0007F0  0100               	movlb	0	; () banked
  6421  0007F2  6FC3               	movwf	(??_printf+1)& (0+255),b
  6422  0007F4  0100               	movlb	0	; () banked
  6423  0007F6  51C2               	movf	??_printf& (0+255),w,b
  6424  0007F8  0100               	movlb	0	; () banked
  6425  0007FA  11C3               	iorwf	(??_printf+1)& (0+255),w,b
  6426  0007FC  B4D8               	btfsc	status,2,c
  6427  0007FE  D003               	goto	l6461
  6428                           
  6429                           ; BSR set to: 0
  6430                           ;doprnt.c: 1439: (putch('-') );
  6431  000800  0E2D               	movlw	45
  6432  000802  ECFF  F01C         	call	_putch
  6433  000806                     l6461:
  6434                           
  6435                           ;doprnt.c: 1469: }
  6436                           ;doprnt.c: 1472: prec = c;
  6437  000806  0101               	movlb	1	; () banked
  6438  000808  5122               	movf	printf@c& (0+255),w,b
  6439  00080A  0101               	movlb	1	; () banked
  6440  00080C  6F12               	movwf	printf@prec& (0+255),b
  6441  00080E  6B13               	clrf	(printf@prec+1)& (0+255),b
  6442  000810  BF12               	btfsc	printf@prec& (0+255),7,b
  6443  000812  0713               	decf	(printf@prec+1)& (0+255),f,b
  6444                           
  6445                           ;doprnt.c: 1474: while(prec--) {
  6446  000814  D045               	goto	l6467
  6447  000816                     l6463:
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;doprnt.c: 1478: {
  6451                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6452  000816  C112  F0C2         	movff	printf@prec,??_printf
  6453  00081A  C113  F0C3         	movff	printf@prec+1,??_printf+1
  6454  00081E  0100               	movlb	0	; () banked
  6455  000820  90D8               	bcf	status,0,c
  6456  000822  37C2               	rlcf	??_printf& (0+255),f,b
  6457  000824  37C3               	rlcf	(??_printf+1)& (0+255),f,b
  6458  000826  0100               	movlb	0	; () banked
  6459  000828  90D8               	bcf	status,0,c
  6460  00082A  37C2               	rlcf	??_printf& (0+255),f,b
  6461  00082C  37C3               	rlcf	(??_printf+1)& (0+255),f,b
  6462  00082E  0E6B               	movlw	low _dpowers
  6463  000830  0100               	movlb	0	; () banked
  6464  000832  25C2               	addwf	??_printf& (0+255),w,b
  6465  000834  6EF6               	movwf	tblptrl,c
  6466  000836  0E7E               	movlw	high _dpowers
  6467  000838  21C3               	addwfc	(??_printf+1)& (0+255),w,b
  6468  00083A  6EF7               	movwf	tblptrh,c
  6469  00083C                     	if	0	;There are less than 3 active tblptr bytes
  6470  00083C                     	endif
  6471  00083C  0009               	tblrd		*+
  6472  00083E  CFF5 F076          	movff	tablat,___lldiv@divisor
  6473  000842  0009               	tblrd		*+
  6474  000844  CFF5 F077          	movff	tablat,___lldiv@divisor+1
  6475  000848  0009               	tblrd		*+
  6476  00084A  CFF5 F078          	movff	tablat,___lldiv@divisor+2
  6477  00084E  000A               	tblrd		*-
  6478  000850  CFF5 F079          	movff	tablat,___lldiv@divisor+3
  6479  000854  C114  F072         	movff	printf@val,___lldiv@dividend
  6480  000858  C115  F073         	movff	printf@val+1,___lldiv@dividend+1
  6481  00085C  C116  F074         	movff	printf@val+2,___lldiv@dividend+2
  6482  000860  C117  F075         	movff	printf@val+3,___lldiv@dividend+3
  6483  000864  ECCF  F016         	call	___lldiv	;wreg free
  6484  000868  C072  F07F         	movff	?___lldiv,___llmod@dividend
  6485  00086C  C073  F080         	movff	?___lldiv+1,___llmod@dividend+1
  6486  000870  C074  F081         	movff	?___lldiv+2,___llmod@dividend+2
  6487  000874  C075  F082         	movff	?___lldiv+3,___llmod@dividend+3
  6488  000878  0E0A               	movlw	10
  6489  00087A  0100               	movlb	0	; () banked
  6490  00087C  6F83               	movwf	___llmod@divisor& (0+255),b
  6491  00087E  0E00               	movlw	0
  6492  000880  6F84               	movwf	(___llmod@divisor+1)& (0+255),b
  6493  000882  0E00               	movlw	0
  6494  000884  6F85               	movwf	(___llmod@divisor+2)& (0+255),b
  6495  000886  0E00               	movlw	0
  6496  000888  6F86               	movwf	(___llmod@divisor+3)& (0+255),b
  6497  00088A  ECCF  F017         	call	___llmod	;wreg free
  6498  00088E  0100               	movlb	0	; () banked
  6499  000890  517F               	movf	?___llmod& (0+255),w,b
  6500  000892  0F30               	addlw	48
  6501  000894  0101               	movlb	1	; () banked
  6502  000896  6F22               	movwf	printf@c& (0+255),b
  6503                           
  6504                           ; BSR set to: 1
  6505                           ;doprnt.c: 1523: }
  6506                           ;doprnt.c: 1524: (putch(c) );
  6507  000898  0101               	movlb	1	; () banked
  6508  00089A  5122               	movf	printf@c& (0+255),w,b
  6509  00089C  ECFF  F01C         	call	_putch
  6510  0008A0                     l6467:
  6511  0008A0  0101               	movlb	1	; () banked
  6512  0008A2  0712               	decf	printf@prec& (0+255),f,b
  6513  0008A4  A0D8               	btfss	status,0,c
  6514  0008A6  0713               	decf	(printf@prec+1)& (0+255),f,b
  6515  0008A8  0101               	movlb	1	; () banked
  6516  0008AA  2912               	incf	printf@prec& (0+255),w,b
  6517  0008AC  E1B4               	bnz	l6463
  6518  0008AE  0101               	movlb	1	; () banked
  6519  0008B0  2913               	incf	(printf@prec+1)& (0+255),w,b
  6520  0008B2  A4D8               	btfss	status,2,c
  6521  0008B4  D7B0               	goto	l6463
  6522  0008B6                     l6469:
  6523  0008B6  C100  FFF6         	movff	printf@f,tblptrl
  6524  0008BA  C101  FFF7         	movff	printf@f+1,tblptrh
  6525  0008BE  0101               	movlb	1	; () banked
  6526  0008C0  4B00               	infsnz	printf@f& (0+255),f,b
  6527  0008C2  2B01               	incf	(printf@f+1)& (0+255),f,b
  6528  0008C4                     	if	0	;tblptru may be non-zero
  6529  0008C4                     	endif
  6530  0008C4                     	if	0	;tblptru may be non-zero
  6531  0008C4                     	endif
  6532  0008C4  0008               	tblrd		*
  6533  0008C6  CFF5 F122          	movff	tablat,printf@c
  6534  0008CA  0101               	movlb	1	; () banked
  6535  0008CC  5122               	movf	printf@c& (0+255),w,b
  6536  0008CE  B4D8               	btfsc	status,2,c
  6537  0008D0  0012               	return	
  6538  0008D2  EF62  F000         	goto	l6293
  6539  0008D6                     __end_of_printf:
  6540                           	opt stack 0
  6541                           tblptru	equ	0xFF8
  6542                           tblptrh	equ	0xFF7
  6543                           tblptrl	equ	0xFF6
  6544                           tablat	equ	0xFF5
  6545                           prodh	equ	0xFF4
  6546                           prodl	equ	0xFF3
  6547                           intcon	equ	0xFF2
  6548                           postinc0	equ	0xFEE
  6549                           wreg	equ	0xFE8
  6550                           postdec1	equ	0xFE5
  6551                           fsr1l	equ	0xFE1
  6552                           indf2	equ	0xFDF
  6553                           postinc2	equ	0xFDE
  6554                           postdec2	equ	0xFDD
  6555                           fsr2h	equ	0xFDA
  6556                           fsr2l	equ	0xFD9
  6557                           status	equ	0xFD8
  6558                           
  6559 ;; *************** function _scale *****************
  6560 ;; Defined at:
  6561 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6562 ;; Parameters:    Size  Location     Type
  6563 ;;  scl             1    wreg     char 
  6564 ;; Auto vars:     Size  Location     Type
  6565 ;;  scl             1   65[BANK0 ] char 
  6566 ;; Return value:  Size  Location     Type
  6567 ;;                  4   57[BANK0 ] char 
  6568 ;; Registers used:
  6569 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6570 ;; Tracked objects:
  6571 ;;		On entry : 0/0
  6572 ;;		On exit  : 0/0
  6573 ;;		Unchanged: 0/0
  6574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6575 ;;      Params:         0       4       0       0       0       0       0
  6576 ;;      Locals:         0       5       0       0       0       0       0
  6577 ;;      Temps:          0       0       0       0       0       0       0
  6578 ;;      Totals:         0       9       0       0       0       0       0
  6579 ;;Total ram usage:        9 bytes
  6580 ;; Hardware stack levels used:    1
  6581 ;; Hardware stack levels required when called:   12
  6582 ;; This function calls:
  6583 ;;		___awdiv
  6584 ;;		___awmod
  6585 ;;		___flmul
  6586 ;; This function is called by:
  6587 ;;		_printf
  6588 ;; This function uses a non-reentrant model
  6589 ;;
  6590                           
  6591                           	psect	text26
  6592  0008D6                     __ptext26:
  6593                           	opt stack 0
  6594  0008D6                     _scale:
  6595                           	opt stack 15
  6596                           
  6597                           ; BSR set to: 1
  6598                           ;incstack = 0
  6599                           ;scale@scl stored from wreg
  6600  0008D6  0100               	movlb	0	; () banked
  6601  0008D8  6FA1               	movwf	scale@scl& (0+255),b
  6602                           
  6603                           ;doprnt.c: 428: if(scl < 0) {
  6604  0008DA  0100               	movlb	0	; () banked
  6605  0008DC  AFA1               	btfss	scale@scl& (0+255),7,b
  6606  0008DE  D133               	goto	l5981
  6607                           
  6608                           ; BSR set to: 0
  6609                           ;doprnt.c: 429: scl = -scl;
  6610  0008E0  0100               	movlb	0	; () banked
  6611  0008E2  6DA1               	negf	scale@scl& (0+255),b
  6612                           
  6613                           ;doprnt.c: 430: if(scl>=110)
  6614  0008E4  0100               	movlb	0	; () banked
  6615  0008E6  51A1               	movf	scale@scl& (0+255),w,b
  6616  0008E8  0A80               	xorlw	128
  6617  0008EA  0F12               	addlw	-238
  6618  0008EC  A0D8               	btfss	status,0,c
  6619  0008EE  D0B2               	goto	l5971
  6620                           
  6621                           ; BSR set to: 0
  6622                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6623  0008F0  0E00               	movlw	0
  6624  0008F2  0100               	movlb	0	; () banked
  6625  0008F4  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6626  0008F6  0E0A               	movlw	10
  6627  0008F8  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6628  0008FA  0E00               	movlw	0
  6629  0008FC  0100               	movlb	0	; () banked
  6630  0008FE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  6631  000900  0E64               	movlw	100
  6632  000902  6F74               	movwf	___awmod@divisor& (0+255),b
  6633  000904  0100               	movlb	0	; () banked
  6634  000906  51A1               	movf	scale@scl& (0+255),w,b
  6635  000908  0100               	movlb	0	; () banked
  6636  00090A  6F72               	movwf	___awmod@dividend& (0+255),b
  6637  00090C  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  6638  00090E  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  6639  000910  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  6640  000912  EC7E  F017         	call	___awmod	;wreg free
  6641  000916  C072  F078         	movff	?___awmod,___awdiv@dividend
  6642  00091A  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  6643  00091E  EC70  F016         	call	___awdiv	;wreg free
  6644  000922  0100               	movlb	0	; () banked
  6645  000924  90D8               	bcf	status,0,c
  6646  000926  3778               	rlcf	?___awdiv& (0+255),f,b
  6647  000928  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6648  00092A  0100               	movlb	0	; () banked
  6649  00092C  90D8               	bcf	status,0,c
  6650  00092E  3778               	rlcf	?___awdiv& (0+255),f,b
  6651  000930  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6652  000932  0E24               	movlw	36
  6653  000934  0100               	movlb	0	; () banked
  6654  000936  2778               	addwf	?___awdiv& (0+255),f,b
  6655  000938  0E00               	movlw	0
  6656  00093A  0100               	movlb	0	; () banked
  6657  00093C  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  6658  00093E  0E03               	movlw	low __npowers_
  6659  000940  0100               	movlb	0	; () banked
  6660  000942  2578               	addwf	?___awdiv& (0+255),w,b
  6661  000944  6EF6               	movwf	tblptrl,c
  6662  000946  0E7E               	movlw	high __npowers_
  6663  000948  0100               	movlb	0	; () banked
  6664  00094A  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  6665  00094C  6EF7               	movwf	tblptrh,c
  6666  00094E                     	if	0	;There are less than 3 active tblptr bytes
  6667  00094E                     	endif
  6668  00094E  0009               	tblrd		*+
  6669  000950  CFF5 F084          	movff	tablat,___flmul@a
  6670  000954  0009               	tblrd		*+
  6671  000956  CFF5 F085          	movff	tablat,___flmul@a+1
  6672  00095A  0009               	tblrd		*+
  6673  00095C  CFF5 F086          	movff	tablat,___flmul@a+2
  6674  000960  000A               	tblrd		*-
  6675  000962  CFF5 F087          	movff	tablat,___flmul@a+3
  6676  000966  0E00               	movlw	0
  6677  000968  0100               	movlb	0	; () banked
  6678  00096A  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6679  00096C  0E64               	movlw	100
  6680  00096E  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6681  000970  0100               	movlb	0	; () banked
  6682  000972  51A1               	movf	scale@scl& (0+255),w,b
  6683  000974  0100               	movlb	0	; () banked
  6684  000976  6F78               	movwf	___awdiv@dividend& (0+255),b
  6685  000978  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  6686  00097A  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  6687  00097C  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6688  00097E  EC70  F016         	call	___awdiv	;wreg free
  6689  000982  0100               	movlb	0	; () banked
  6690  000984  90D8               	bcf	status,0,c
  6691  000986  3778               	rlcf	?___awdiv& (0+255),f,b
  6692  000988  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6693  00098A  0100               	movlb	0	; () banked
  6694  00098C  90D8               	bcf	status,0,c
  6695  00098E  3778               	rlcf	?___awdiv& (0+255),f,b
  6696  000990  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6697  000992  0E48               	movlw	72
  6698  000994  0100               	movlb	0	; () banked
  6699  000996  2778               	addwf	?___awdiv& (0+255),f,b
  6700  000998  0E00               	movlw	0
  6701  00099A  0100               	movlb	0	; () banked
  6702  00099C  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  6703  00099E  0E03               	movlw	low __npowers_
  6704  0009A0  0100               	movlb	0	; () banked
  6705  0009A2  2578               	addwf	?___awdiv& (0+255),w,b
  6706  0009A4  6EF6               	movwf	tblptrl,c
  6707  0009A6  0E7E               	movlw	high __npowers_
  6708  0009A8  0100               	movlb	0	; () banked
  6709  0009AA  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  6710  0009AC  6EF7               	movwf	tblptrh,c
  6711  0009AE                     	if	0	;There are less than 3 active tblptr bytes
  6712  0009AE                     	endif
  6713  0009AE  0009               	tblrd		*+
  6714  0009B0  CFF5 F080          	movff	tablat,___flmul@b
  6715  0009B4  0009               	tblrd		*+
  6716  0009B6  CFF5 F081          	movff	tablat,___flmul@b+1
  6717  0009BA  0009               	tblrd		*+
  6718  0009BC  CFF5 F082          	movff	tablat,___flmul@b+2
  6719  0009C0  000A               	tblrd		*-
  6720  0009C2  CFF5 F083          	movff	tablat,___flmul@b+3
  6721  0009C6  EC28  F009         	call	___flmul	;wreg free
  6722  0009CA  C080  F09D         	movff	?___flmul,_scale$2762
  6723  0009CE  C081  F09E         	movff	?___flmul+1,_scale$2762+1
  6724  0009D2  C082  F09F         	movff	?___flmul+2,_scale$2762+2
  6725  0009D6  C083  F0A0         	movff	?___flmul+3,_scale$2762+3
  6726                           
  6727                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6728  0009DA  C09D  F080         	movff	_scale$2762,___flmul@b
  6729  0009DE  C09E  F081         	movff	_scale$2762+1,___flmul@b+1
  6730  0009E2  C09F  F082         	movff	_scale$2762+2,___flmul@b+2
  6731  0009E6  C0A0  F083         	movff	_scale$2762+3,___flmul@b+3
  6732  0009EA  0E00               	movlw	0
  6733  0009EC  0100               	movlb	0	; () banked
  6734  0009EE  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  6735  0009F0  0E0A               	movlw	10
  6736  0009F2  6F74               	movwf	___awmod@divisor& (0+255),b
  6737  0009F4  0100               	movlb	0	; () banked
  6738  0009F6  51A1               	movf	scale@scl& (0+255),w,b
  6739  0009F8  0100               	movlb	0	; () banked
  6740  0009FA  6F72               	movwf	___awmod@dividend& (0+255),b
  6741  0009FC  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  6742  0009FE  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  6743  000A00  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  6744  000A02  EC7E  F017         	call	___awmod	;wreg free
  6745  000A06  0100               	movlb	0	; () banked
  6746  000A08  90D8               	bcf	status,0,c
  6747  000A0A  3772               	rlcf	?___awmod& (0+255),f,b
  6748  000A0C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  6749  000A0E  0100               	movlb	0	; () banked
  6750  000A10  90D8               	bcf	status,0,c
  6751  000A12  3772               	rlcf	?___awmod& (0+255),f,b
  6752  000A14  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  6753  000A16  0E03               	movlw	low __npowers_
  6754  000A18  0100               	movlb	0	; () banked
  6755  000A1A  2572               	addwf	?___awmod& (0+255),w,b
  6756  000A1C  6EF6               	movwf	tblptrl,c
  6757  000A1E  0E7E               	movlw	high __npowers_
  6758  000A20  0100               	movlb	0	; () banked
  6759  000A22  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  6760  000A24  6EF7               	movwf	tblptrh,c
  6761  000A26                     	if	0	;There are less than 3 active tblptr bytes
  6762  000A26                     	endif
  6763  000A26  0009               	tblrd		*+
  6764  000A28  CFF5 F084          	movff	tablat,___flmul@a
  6765  000A2C  0009               	tblrd		*+
  6766  000A2E  CFF5 F085          	movff	tablat,___flmul@a+1
  6767  000A32  0009               	tblrd		*+
  6768  000A34  CFF5 F086          	movff	tablat,___flmul@a+2
  6769  000A38  000A               	tblrd		*-
  6770  000A3A  CFF5 F087          	movff	tablat,___flmul@a+3
  6771  000A3E  EC28  F009         	call	___flmul	;wreg free
  6772  000A42  C080  F099         	movff	?___flmul,?_scale
  6773  000A46  C081  F09A         	movff	?___flmul+1,?_scale+1
  6774  000A4A  C082  F09B         	movff	?___flmul+2,?_scale+2
  6775  000A4E  C083  F09C         	movff	?___flmul+3,?_scale+3
  6776  000A52  0012               	return	
  6777  000A54                     l5971:
  6778                           
  6779                           ;doprnt.c: 432: else if(scl > 10)
  6780  000A54  0100               	movlb	0	; () banked
  6781  000A56  51A1               	movf	scale@scl& (0+255),w,b
  6782  000A58  0A80               	xorlw	128
  6783  000A5A  0F75               	addlw	-139
  6784  000A5C  A0D8               	btfss	status,0,c
  6785  000A5E  D05D               	goto	l5977
  6786                           
  6787                           ; BSR set to: 0
  6788                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6789  000A60  0E00               	movlw	0
  6790  000A62  0100               	movlb	0	; () banked
  6791  000A64  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6792  000A66  0E0A               	movlw	10
  6793  000A68  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6794  000A6A  0100               	movlb	0	; () banked
  6795  000A6C  51A1               	movf	scale@scl& (0+255),w,b
  6796  000A6E  0100               	movlb	0	; () banked
  6797  000A70  6F78               	movwf	___awdiv@dividend& (0+255),b
  6798  000A72  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  6799  000A74  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  6800  000A76  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6801  000A78  EC70  F016         	call	___awdiv	;wreg free
  6802  000A7C  0100               	movlb	0	; () banked
  6803  000A7E  90D8               	bcf	status,0,c
  6804  000A80  3778               	rlcf	?___awdiv& (0+255),f,b
  6805  000A82  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6806  000A84  0100               	movlb	0	; () banked
  6807  000A86  90D8               	bcf	status,0,c
  6808  000A88  3778               	rlcf	?___awdiv& (0+255),f,b
  6809  000A8A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6810  000A8C  0E24               	movlw	36
  6811  000A8E  0100               	movlb	0	; () banked
  6812  000A90  2778               	addwf	?___awdiv& (0+255),f,b
  6813  000A92  0E00               	movlw	0
  6814  000A94  0100               	movlb	0	; () banked
  6815  000A96  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  6816  000A98  0E03               	movlw	low __npowers_
  6817  000A9A  0100               	movlb	0	; () banked
  6818  000A9C  2578               	addwf	?___awdiv& (0+255),w,b
  6819  000A9E  6EF6               	movwf	tblptrl,c
  6820  000AA0  0E7E               	movlw	high __npowers_
  6821  000AA2  0100               	movlb	0	; () banked
  6822  000AA4  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  6823  000AA6  6EF7               	movwf	tblptrh,c
  6824  000AA8                     	if	0	;There are less than 3 active tblptr bytes
  6825  000AA8                     	endif
  6826  000AA8  0009               	tblrd		*+
  6827  000AAA  CFF5 F080          	movff	tablat,___flmul@b
  6828  000AAE  0009               	tblrd		*+
  6829  000AB0  CFF5 F081          	movff	tablat,___flmul@b+1
  6830  000AB4  0009               	tblrd		*+
  6831  000AB6  CFF5 F082          	movff	tablat,___flmul@b+2
  6832  000ABA  000A               	tblrd		*-
  6833  000ABC  CFF5 F083          	movff	tablat,___flmul@b+3
  6834  000AC0  0E00               	movlw	0
  6835  000AC2  0100               	movlb	0	; () banked
  6836  000AC4  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  6837  000AC6  0E0A               	movlw	10
  6838  000AC8  6F74               	movwf	___awmod@divisor& (0+255),b
  6839  000ACA  0100               	movlb	0	; () banked
  6840  000ACC  51A1               	movf	scale@scl& (0+255),w,b
  6841  000ACE  0100               	movlb	0	; () banked
  6842  000AD0  6F72               	movwf	___awmod@dividend& (0+255),b
  6843  000AD2  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  6844  000AD4  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  6845  000AD6  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  6846  000AD8  EC7E  F017         	call	___awmod	;wreg free
  6847  000ADC  0100               	movlb	0	; () banked
  6848  000ADE  90D8               	bcf	status,0,c
  6849  000AE0  3772               	rlcf	?___awmod& (0+255),f,b
  6850  000AE2  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  6851  000AE4  0100               	movlb	0	; () banked
  6852  000AE6  90D8               	bcf	status,0,c
  6853  000AE8  3772               	rlcf	?___awmod& (0+255),f,b
  6854  000AEA  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  6855  000AEC  0E03               	movlw	low __npowers_
  6856  000AEE  0100               	movlb	0	; () banked
  6857  000AF0  2572               	addwf	?___awmod& (0+255),w,b
  6858  000AF2  6EF6               	movwf	tblptrl,c
  6859  000AF4  0E7E               	movlw	high __npowers_
  6860  000AF6  0100               	movlb	0	; () banked
  6861  000AF8  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  6862  000AFA  6EF7               	movwf	tblptrh,c
  6863  000AFC                     	if	0	;There are less than 3 active tblptr bytes
  6864  000AFC                     	endif
  6865  000AFC  0009               	tblrd		*+
  6866  000AFE  CFF5 F084          	movff	tablat,___flmul@a
  6867  000B02  0009               	tblrd		*+
  6868  000B04  CFF5 F085          	movff	tablat,___flmul@a+1
  6869  000B08  0009               	tblrd		*+
  6870  000B0A  CFF5 F086          	movff	tablat,___flmul@a+2
  6871  000B0E  000A               	tblrd		*-
  6872  000B10  CFF5 F087          	movff	tablat,___flmul@a+3
  6873  000B14  EC28  F009         	call	___flmul	;wreg free
  6874  000B18  D794               	goto	L4
  6875  000B1A                     l5977:
  6876                           
  6877                           ;doprnt.c: 434: return _npowers_[scl];
  6878  000B1A  0100               	movlb	0	; () banked
  6879  000B1C  51A1               	movf	scale@scl& (0+255),w,b
  6880  000B1E  0D04               	mullw	4
  6881  000B20  0E03               	movlw	low __npowers_
  6882  000B22  24F3               	addwf	prodl,w,c
  6883  000B24  6EF6               	movwf	tblptrl,c
  6884  000B26  0E7E               	movlw	high __npowers_
  6885  000B28  20F4               	addwfc	prodh,w,c
  6886  000B2A  6EF7               	movwf	tblptrh,c
  6887  000B2C                     	if	0	;There are less than 3 active tblptr bytes
  6888  000B2C                     	endif
  6889  000B2C  0009               	tblrd		*+
  6890  000B2E  CFF5 F099          	movff	tablat,?_scale
  6891  000B32  0009               	tblrd		*+
  6892  000B34  CFF5 F09A          	movff	tablat,?_scale+1
  6893  000B38  0009               	tblrd		*+
  6894  000B3A  CFF5 F09B          	movff	tablat,?_scale+2
  6895  000B3E  000A               	tblrd		*-
  6896  000B40  CFF5 F09C          	movff	tablat,?_scale+3
  6897                           
  6898                           ; BSR set to: 0
  6899  000B44  0012               	return	
  6900  000B46                     l5981:
  6901                           
  6902                           ; BSR set to: 0
  6903                           ;doprnt.c: 435: }
  6904                           ;doprnt.c: 436: if(scl>=110)
  6905  000B46  0100               	movlb	0	; () banked
  6906  000B48  51A1               	movf	scale@scl& (0+255),w,b
  6907  000B4A  0A80               	xorlw	128
  6908  000B4C  0F12               	addlw	-238
  6909  000B4E  A0D8               	btfss	status,0,c
  6910  000B50  D0B2               	goto	l5989
  6911                           
  6912                           ; BSR set to: 0
  6913                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6914  000B52  0E00               	movlw	0
  6915  000B54  0100               	movlb	0	; () banked
  6916  000B56  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6917  000B58  0E0A               	movlw	10
  6918  000B5A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6919  000B5C  0E00               	movlw	0
  6920  000B5E  0100               	movlb	0	; () banked
  6921  000B60  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  6922  000B62  0E64               	movlw	100
  6923  000B64  6F74               	movwf	___awmod@divisor& (0+255),b
  6924  000B66  0100               	movlb	0	; () banked
  6925  000B68  51A1               	movf	scale@scl& (0+255),w,b
  6926  000B6A  0100               	movlb	0	; () banked
  6927  000B6C  6F72               	movwf	___awmod@dividend& (0+255),b
  6928  000B6E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  6929  000B70  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  6930  000B72  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  6931  000B74  EC7E  F017         	call	___awmod	;wreg free
  6932  000B78  C072  F078         	movff	?___awmod,___awdiv@dividend
  6933  000B7C  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  6934  000B80  EC70  F016         	call	___awdiv	;wreg free
  6935  000B84  0100               	movlb	0	; () banked
  6936  000B86  90D8               	bcf	status,0,c
  6937  000B88  3778               	rlcf	?___awdiv& (0+255),f,b
  6938  000B8A  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6939  000B8C  0100               	movlb	0	; () banked
  6940  000B8E  90D8               	bcf	status,0,c
  6941  000B90  3778               	rlcf	?___awdiv& (0+255),f,b
  6942  000B92  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6943  000B94  0E24               	movlw	36
  6944  000B96  0100               	movlb	0	; () banked
  6945  000B98  2778               	addwf	?___awdiv& (0+255),f,b
  6946  000B9A  0E00               	movlw	0
  6947  000B9C  0100               	movlb	0	; () banked
  6948  000B9E  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  6949  000BA0  0E37               	movlw	low __powers_
  6950  000BA2  0100               	movlb	0	; () banked
  6951  000BA4  2578               	addwf	?___awdiv& (0+255),w,b
  6952  000BA6  6EF6               	movwf	tblptrl,c
  6953  000BA8  0E7E               	movlw	high __powers_
  6954  000BAA  0100               	movlb	0	; () banked
  6955  000BAC  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  6956  000BAE  6EF7               	movwf	tblptrh,c
  6957  000BB0                     	if	0	;There are less than 3 active tblptr bytes
  6958  000BB0                     	endif
  6959  000BB0  0009               	tblrd		*+
  6960  000BB2  CFF5 F084          	movff	tablat,___flmul@a
  6961  000BB6  0009               	tblrd		*+
  6962  000BB8  CFF5 F085          	movff	tablat,___flmul@a+1
  6963  000BBC  0009               	tblrd		*+
  6964  000BBE  CFF5 F086          	movff	tablat,___flmul@a+2
  6965  000BC2  000A               	tblrd		*-
  6966  000BC4  CFF5 F087          	movff	tablat,___flmul@a+3
  6967  000BC8  0E00               	movlw	0
  6968  000BCA  0100               	movlb	0	; () banked
  6969  000BCC  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  6970  000BCE  0E64               	movlw	100
  6971  000BD0  6F7A               	movwf	___awdiv@divisor& (0+255),b
  6972  000BD2  0100               	movlb	0	; () banked
  6973  000BD4  51A1               	movf	scale@scl& (0+255),w,b
  6974  000BD6  0100               	movlb	0	; () banked
  6975  000BD8  6F78               	movwf	___awdiv@dividend& (0+255),b
  6976  000BDA  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  6977  000BDC  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  6978  000BDE  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6979  000BE0  EC70  F016         	call	___awdiv	;wreg free
  6980  000BE4  0100               	movlb	0	; () banked
  6981  000BE6  90D8               	bcf	status,0,c
  6982  000BE8  3778               	rlcf	?___awdiv& (0+255),f,b
  6983  000BEA  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6984  000BEC  0100               	movlb	0	; () banked
  6985  000BEE  90D8               	bcf	status,0,c
  6986  000BF0  3778               	rlcf	?___awdiv& (0+255),f,b
  6987  000BF2  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  6988  000BF4  0E48               	movlw	72
  6989  000BF6  0100               	movlb	0	; () banked
  6990  000BF8  2778               	addwf	?___awdiv& (0+255),f,b
  6991  000BFA  0E00               	movlw	0
  6992  000BFC  0100               	movlb	0	; () banked
  6993  000BFE  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  6994  000C00  0E37               	movlw	low __powers_
  6995  000C02  0100               	movlb	0	; () banked
  6996  000C04  2578               	addwf	?___awdiv& (0+255),w,b
  6997  000C06  6EF6               	movwf	tblptrl,c
  6998  000C08  0E7E               	movlw	high __powers_
  6999  000C0A  0100               	movlb	0	; () banked
  7000  000C0C  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7001  000C0E  6EF7               	movwf	tblptrh,c
  7002  000C10                     	if	0	;There are less than 3 active tblptr bytes
  7003  000C10                     	endif
  7004  000C10  0009               	tblrd		*+
  7005  000C12  CFF5 F080          	movff	tablat,___flmul@b
  7006  000C16  0009               	tblrd		*+
  7007  000C18  CFF5 F081          	movff	tablat,___flmul@b+1
  7008  000C1C  0009               	tblrd		*+
  7009  000C1E  CFF5 F082          	movff	tablat,___flmul@b+2
  7010  000C22  000A               	tblrd		*-
  7011  000C24  CFF5 F083          	movff	tablat,___flmul@b+3
  7012  000C28  EC28  F009         	call	___flmul	;wreg free
  7013  000C2C  C080  F09D         	movff	?___flmul,_scale$2762
  7014  000C30  C081  F09E         	movff	?___flmul+1,_scale$2762+1
  7015  000C34  C082  F09F         	movff	?___flmul+2,_scale$2762+2
  7016  000C38  C083  F0A0         	movff	?___flmul+3,_scale$2762+3
  7017                           
  7018                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7019  000C3C  C09D  F080         	movff	_scale$2762,___flmul@b
  7020  000C40  C09E  F081         	movff	_scale$2762+1,___flmul@b+1
  7021  000C44  C09F  F082         	movff	_scale$2762+2,___flmul@b+2
  7022  000C48  C0A0  F083         	movff	_scale$2762+3,___flmul@b+3
  7023  000C4C  0E00               	movlw	0
  7024  000C4E  0100               	movlb	0	; () banked
  7025  000C50  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7026  000C52  0E0A               	movlw	10
  7027  000C54  6F74               	movwf	___awmod@divisor& (0+255),b
  7028  000C56  0100               	movlb	0	; () banked
  7029  000C58  51A1               	movf	scale@scl& (0+255),w,b
  7030  000C5A  0100               	movlb	0	; () banked
  7031  000C5C  6F72               	movwf	___awmod@dividend& (0+255),b
  7032  000C5E  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7033  000C60  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7034  000C62  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7035  000C64  EC7E  F017         	call	___awmod	;wreg free
  7036  000C68  0100               	movlb	0	; () banked
  7037  000C6A  90D8               	bcf	status,0,c
  7038  000C6C  3772               	rlcf	?___awmod& (0+255),f,b
  7039  000C6E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7040  000C70  0100               	movlb	0	; () banked
  7041  000C72  90D8               	bcf	status,0,c
  7042  000C74  3772               	rlcf	?___awmod& (0+255),f,b
  7043  000C76  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7044  000C78  0E37               	movlw	low __powers_
  7045  000C7A  0100               	movlb	0	; () banked
  7046  000C7C  2572               	addwf	?___awmod& (0+255),w,b
  7047  000C7E  6EF6               	movwf	tblptrl,c
  7048  000C80  0E7E               	movlw	high __powers_
  7049  000C82  0100               	movlb	0	; () banked
  7050  000C84  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7051  000C86  6EF7               	movwf	tblptrh,c
  7052  000C88                     	if	0	;There are less than 3 active tblptr bytes
  7053  000C88                     	endif
  7054  000C88  0009               	tblrd		*+
  7055  000C8A  CFF5 F084          	movff	tablat,___flmul@a
  7056  000C8E  0009               	tblrd		*+
  7057  000C90  CFF5 F085          	movff	tablat,___flmul@a+1
  7058  000C94  0009               	tblrd		*+
  7059  000C96  CFF5 F086          	movff	tablat,___flmul@a+2
  7060  000C9A  000A               	tblrd		*-
  7061  000C9C  CFF5 F087          	movff	tablat,___flmul@a+3
  7062  000CA0  EC28  F009         	call	___flmul	;wreg free
  7063  000CA4  C080  F099         	movff	?___flmul,?_scale
  7064  000CA8  C081  F09A         	movff	?___flmul+1,?_scale+1
  7065  000CAC  C082  F09B         	movff	?___flmul+2,?_scale+2
  7066  000CB0  C083  F09C         	movff	?___flmul+3,?_scale+3
  7067  000CB4  0012               	return	
  7068  000CB6                     l5989:
  7069                           
  7070                           ;doprnt.c: 438: else if(scl > 10)
  7071  000CB6  0100               	movlb	0	; () banked
  7072  000CB8  51A1               	movf	scale@scl& (0+255),w,b
  7073  000CBA  0A80               	xorlw	128
  7074  000CBC  0F75               	addlw	-139
  7075  000CBE  A0D8               	btfss	status,0,c
  7076  000CC0  D05D               	goto	l5995
  7077                           
  7078                           ; BSR set to: 0
  7079                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7080  000CC2  0E00               	movlw	0
  7081  000CC4  0100               	movlb	0	; () banked
  7082  000CC6  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  7083  000CC8  0E0A               	movlw	10
  7084  000CCA  6F7A               	movwf	___awdiv@divisor& (0+255),b
  7085  000CCC  0100               	movlb	0	; () banked
  7086  000CCE  51A1               	movf	scale@scl& (0+255),w,b
  7087  000CD0  0100               	movlb	0	; () banked
  7088  000CD2  6F78               	movwf	___awdiv@dividend& (0+255),b
  7089  000CD4  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  7090  000CD6  BF78               	btfsc	___awdiv@dividend& (0+255),7,b
  7091  000CD8  0779               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7092  000CDA  EC70  F016         	call	___awdiv	;wreg free
  7093  000CDE  0100               	movlb	0	; () banked
  7094  000CE0  90D8               	bcf	status,0,c
  7095  000CE2  3778               	rlcf	?___awdiv& (0+255),f,b
  7096  000CE4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7097  000CE6  0100               	movlb	0	; () banked
  7098  000CE8  90D8               	bcf	status,0,c
  7099  000CEA  3778               	rlcf	?___awdiv& (0+255),f,b
  7100  000CEC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  7101  000CEE  0E24               	movlw	36
  7102  000CF0  0100               	movlb	0	; () banked
  7103  000CF2  2778               	addwf	?___awdiv& (0+255),f,b
  7104  000CF4  0E00               	movlw	0
  7105  000CF6  0100               	movlb	0	; () banked
  7106  000CF8  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  7107  000CFA  0E37               	movlw	low __powers_
  7108  000CFC  0100               	movlb	0	; () banked
  7109  000CFE  2578               	addwf	?___awdiv& (0+255),w,b
  7110  000D00  6EF6               	movwf	tblptrl,c
  7111  000D02  0E7E               	movlw	high __powers_
  7112  000D04  0100               	movlb	0	; () banked
  7113  000D06  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  7114  000D08  6EF7               	movwf	tblptrh,c
  7115  000D0A                     	if	0	;There are less than 3 active tblptr bytes
  7116  000D0A                     	endif
  7117  000D0A  0009               	tblrd		*+
  7118  000D0C  CFF5 F080          	movff	tablat,___flmul@b
  7119  000D10  0009               	tblrd		*+
  7120  000D12  CFF5 F081          	movff	tablat,___flmul@b+1
  7121  000D16  0009               	tblrd		*+
  7122  000D18  CFF5 F082          	movff	tablat,___flmul@b+2
  7123  000D1C  000A               	tblrd		*-
  7124  000D1E  CFF5 F083          	movff	tablat,___flmul@b+3
  7125  000D22  0E00               	movlw	0
  7126  000D24  0100               	movlb	0	; () banked
  7127  000D26  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  7128  000D28  0E0A               	movlw	10
  7129  000D2A  6F74               	movwf	___awmod@divisor& (0+255),b
  7130  000D2C  0100               	movlb	0	; () banked
  7131  000D2E  51A1               	movf	scale@scl& (0+255),w,b
  7132  000D30  0100               	movlb	0	; () banked
  7133  000D32  6F72               	movwf	___awmod@dividend& (0+255),b
  7134  000D34  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  7135  000D36  BF72               	btfsc	___awmod@dividend& (0+255),7,b
  7136  000D38  0773               	decf	(___awmod@dividend+1)& (0+255),f,b
  7137  000D3A  EC7E  F017         	call	___awmod	;wreg free
  7138  000D3E  0100               	movlb	0	; () banked
  7139  000D40  90D8               	bcf	status,0,c
  7140  000D42  3772               	rlcf	?___awmod& (0+255),f,b
  7141  000D44  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7142  000D46  0100               	movlb	0	; () banked
  7143  000D48  90D8               	bcf	status,0,c
  7144  000D4A  3772               	rlcf	?___awmod& (0+255),f,b
  7145  000D4C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  7146  000D4E  0E37               	movlw	low __powers_
  7147  000D50  0100               	movlb	0	; () banked
  7148  000D52  2572               	addwf	?___awmod& (0+255),w,b
  7149  000D54  6EF6               	movwf	tblptrl,c
  7150  000D56  0E7E               	movlw	high __powers_
  7151  000D58  0100               	movlb	0	; () banked
  7152  000D5A  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  7153  000D5C  6EF7               	movwf	tblptrh,c
  7154  000D5E                     	if	0	;There are less than 3 active tblptr bytes
  7155  000D5E                     	endif
  7156  000D5E  0009               	tblrd		*+
  7157  000D60  CFF5 F084          	movff	tablat,___flmul@a
  7158  000D64  0009               	tblrd		*+
  7159  000D66  CFF5 F085          	movff	tablat,___flmul@a+1
  7160  000D6A  0009               	tblrd		*+
  7161  000D6C  CFF5 F086          	movff	tablat,___flmul@a+2
  7162  000D70  000A               	tblrd		*-
  7163  000D72  CFF5 F087          	movff	tablat,___flmul@a+3
  7164  000D76  EC28  F009         	call	___flmul	;wreg free
  7165  000D7A  D794               	goto	L5
  7166  000D7C                     l5995:
  7167                           
  7168                           ;doprnt.c: 440: return _powers_[scl];
  7169  000D7C  0100               	movlb	0	; () banked
  7170  000D7E  51A1               	movf	scale@scl& (0+255),w,b
  7171  000D80  0D04               	mullw	4
  7172  000D82  0E37               	movlw	low __powers_
  7173  000D84  24F3               	addwf	prodl,w,c
  7174  000D86  6EF6               	movwf	tblptrl,c
  7175  000D88  0E7E               	movlw	high __powers_
  7176  000D8A  20F4               	addwfc	prodh,w,c
  7177  000D8C  6EF7               	movwf	tblptrh,c
  7178  000D8E                     	if	0	;There are less than 3 active tblptr bytes
  7179  000D8E                     	endif
  7180  000D8E  0009               	tblrd		*+
  7181  000D90  CFF5 F099          	movff	tablat,?_scale
  7182  000D94  0009               	tblrd		*+
  7183  000D96  CFF5 F09A          	movff	tablat,?_scale+1
  7184  000D9A  0009               	tblrd		*+
  7185  000D9C  CFF5 F09B          	movff	tablat,?_scale+2
  7186  000DA0  000A               	tblrd		*-
  7187  000DA2  CFF5 F09C          	movff	tablat,?_scale+3
  7188  000DA6  0012               	return	
  7189  000DA8                     __end_of_scale:
  7190                           	opt stack 0
  7191                           tblptru	equ	0xFF8
  7192                           tblptrh	equ	0xFF7
  7193                           tblptrl	equ	0xFF6
  7194                           tablat	equ	0xFF5
  7195                           prodh	equ	0xFF4
  7196                           prodl	equ	0xFF3
  7197                           intcon	equ	0xFF2
  7198                           postinc0	equ	0xFEE
  7199                           wreg	equ	0xFE8
  7200                           postdec1	equ	0xFE5
  7201                           fsr1l	equ	0xFE1
  7202                           indf2	equ	0xFDF
  7203                           postinc2	equ	0xFDE
  7204                           postdec2	equ	0xFDD
  7205                           fsr2h	equ	0xFDA
  7206                           fsr2l	equ	0xFD9
  7207                           status	equ	0xFD8
  7208                           
  7209 ;; *************** function _putch *****************
  7210 ;; Defined at:
  7211 ;;		line 59 in file "source/IOConfig.h"
  7212 ;; Parameters:    Size  Location     Type
  7213 ;;  val             1    wreg     unsigned char 
  7214 ;; Auto vars:     Size  Location     Type
  7215 ;;  val             1   31[BANK0 ] unsigned char 
  7216 ;; Return value:  Size  Location     Type
  7217 ;;                  1    wreg      void 
  7218 ;; Registers used:
  7219 ;;		wreg, status,2, status,0, cstack
  7220 ;; Tracked objects:
  7221 ;;		On entry : 0/0
  7222 ;;		On exit  : 0/0
  7223 ;;		Unchanged: 0/0
  7224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7225 ;;      Params:         0       0       0       0       0       0       0
  7226 ;;      Locals:         0       1       0       0       0       0       0
  7227 ;;      Temps:          0       0       0       0       0       0       0
  7228 ;;      Totals:         0       1       0       0       0       0       0
  7229 ;;Total ram usage:        1 bytes
  7230 ;; Hardware stack levels used:    1
  7231 ;; Hardware stack levels required when called:   16
  7232 ;; This function calls:
  7233 ;;		_lcd_putc
  7234 ;; This function is called by:
  7235 ;;		_printf
  7236 ;;		_send_float
  7237 ;;		_send_int32
  7238 ;;		_send_int16
  7239 ;;		_send_float_vt
  7240 ;;		_send_int32_vt
  7241 ;;		_send_int16_vt
  7242 ;; This function uses a non-reentrant model
  7243 ;;
  7244                           
  7245                           	psect	text27
  7246  0039FE                     __ptext27:
  7247                           	opt stack 0
  7248  0039FE                     _putch:
  7249                           	opt stack 11
  7250                           
  7251                           ;incstack = 0
  7252                           ;putch@val stored from wreg
  7253  0039FE  0100               	movlb	0	; () banked
  7254  003A00  6F7F               	movwf	putch@val& (0+255),b
  7255                           
  7256                           ;IOConfig.h: 60: lcd_putc(val);
  7257  003A02  0100               	movlb	0	; () banked
  7258  003A04  517F               	movf	putch@val& (0+255),w,b
  7259  003A06  ECF3  F018         	call	_lcd_putc
  7260  003A0A  0012               	return		;funcret
  7261  003A0C                     __end_of_putch:
  7262                           	opt stack 0
  7263                           tblptru	equ	0xFF8
  7264                           tblptrh	equ	0xFF7
  7265                           tblptrl	equ	0xFF6
  7266                           tablat	equ	0xFF5
  7267                           prodh	equ	0xFF4
  7268                           prodl	equ	0xFF3
  7269                           intcon	equ	0xFF2
  7270                           postinc0	equ	0xFEE
  7271                           wreg	equ	0xFE8
  7272                           postdec1	equ	0xFE5
  7273                           fsr1l	equ	0xFE1
  7274                           indf2	equ	0xFDF
  7275                           postinc2	equ	0xFDE
  7276                           postdec2	equ	0xFDD
  7277                           fsr2h	equ	0xFDA
  7278                           fsr2l	equ	0xFD9
  7279                           status	equ	0xFD8
  7280                           
  7281 ;; *************** function _lcd_putc *****************
  7282 ;; Defined at:
  7283 ;;		line 212 in file "source/../../vclib_lcd.h"
  7284 ;; Parameters:    Size  Location     Type
  7285 ;;  cha             1    wreg     unsigned char 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  cha             1   30[BANK0 ] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, status,2, status,0, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7297 ;;      Params:         0       0       0       0       0       0       0
  7298 ;;      Locals:         0       1       0       0       0       0       0
  7299 ;;      Temps:          0       1       0       0       0       0       0
  7300 ;;      Totals:         0       2       0       0       0       0       0
  7301 ;;Total ram usage:        2 bytes
  7302 ;; Hardware stack levels used:    1
  7303 ;; Hardware stack levels required when called:   15
  7304 ;; This function calls:
  7305 ;;		_lcd_gotoxy
  7306 ;;		_lcd_send_byte
  7307 ;; This function is called by:
  7308 ;;		_putch
  7309 ;; This function uses a non-reentrant model
  7310 ;;
  7311                           
  7312                           	psect	text28
  7313  0031E6                     __ptext28:
  7314                           	opt stack 0
  7315  0031E6                     _lcd_putc:
  7316                           	opt stack 11
  7317                           
  7318                           ;incstack = 0
  7319                           ;lcd_putc@cha stored from wreg
  7320  0031E6  0100               	movlb	0	; () banked
  7321  0031E8  6F7E               	movwf	lcd_putc@cha& (0+255),b
  7322                           
  7323                           ;vclib_lcd.h: 213: switch (cha) {
  7324  0031EA  D02B               	goto	l5517
  7325  0031EC                     l5503:
  7326  0031EC  0E01               	movlw	1
  7327  0031EE  0100               	movlb	0	; () banked
  7328  0031F0  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  7329  0031F2  0E01               	movlw	1
  7330  0031F4  EC53  F01C         	call	_lcd_gotoxy
  7331                           
  7332                           ;vclib_lcd.h: 215: break;
  7333  0031F8  0012               	return	
  7334  0031FA                     l5505:
  7335  0031FA  0E01               	movlw	1
  7336  0031FC  0100               	movlb	0	; () banked
  7337  0031FE  6F77               	movwf	lcd_send_byte@n& (0+255),b
  7338  003200  0E00               	movlw	0
  7339  003202  EC6F  F01B         	call	_lcd_send_byte
  7340                           
  7341                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
  7342  003206  0E0B               	movlw	11
  7343  003208  0100               	movlb	0	; () banked
  7344  00320A  6F7D               	movwf	??_lcd_putc& (0+255),b
  7345  00320C  0E62               	movlw	98
  7346  00320E                     u8307:
  7347  00320E  2EE8               	decfsz	wreg,f,c
  7348  003210  D7FE               	goto	u8307
  7349  003212  2F7D               	decfsz	??_lcd_putc& (0+255),f,b
  7350  003214  D7FC               	goto	u8307
  7351  003216  D000               	nop2	
  7352                           
  7353                           ;vclib_lcd.h: 223: break;
  7354  003218  0012               	return	
  7355  00321A                     l5509:
  7356  00321A  0E02               	movlw	2
  7357  00321C  0100               	movlb	0	; () banked
  7358  00321E  6F7A               	movwf	lcd_gotoxy@fila& (0+255),b
  7359  003220  0E01               	movlw	1
  7360  003222  EC53  F01C         	call	_lcd_gotoxy
  7361                           
  7362                           ;vclib_lcd.h: 236: break;
  7363  003226  0012               	return	
  7364  003228                     l5511:
  7365  003228  0E10               	movlw	16
  7366  00322A  0100               	movlb	0	; () banked
  7367  00322C  6F77               	movwf	lcd_send_byte@n& (0+255),b
  7368  00322E  0E00               	movlw	0
  7369  003230  EC6F  F01B         	call	_lcd_send_byte
  7370                           
  7371                           ;vclib_lcd.h: 240: break;
  7372  003234  0012               	return	
  7373  003236                     l5513:
  7374  003236  C07E  F077         	movff	lcd_putc@cha,lcd_send_byte@n
  7375  00323A  0E01               	movlw	1
  7376  00323C  EC6F  F01B         	call	_lcd_send_byte
  7377                           
  7378                           ;vclib_lcd.h: 253: }
  7379                           
  7380                           ;vclib_lcd.h: 251: break;
  7381  003240  0012               	return	
  7382  003242                     l5517:
  7383  003242  0100               	movlb	0	; () banked
  7384  003244  517E               	movf	lcd_putc@cha& (0+255),w,b
  7385                           
  7386                           ; Switch size 1, requested type "space"
  7387                           ; Number of cases is 4, Range of values is 7 to 12
  7388                           ; switch strategies available:
  7389                           ; Name         Instructions Cycles
  7390                           ; simple_byte           13     7 (average)
  7391                           ;	Chosen strategy is simple_byte
  7392  003246  0A07               	xorlw	7	; case 7
  7393  003248  B4D8               	btfsc	status,2,c
  7394  00324A  D7D0               	goto	l5503
  7395  00324C  0A0F               	xorlw	15	; case 8
  7396  00324E  B4D8               	btfsc	status,2,c
  7397  003250  D7EB               	goto	l5511
  7398  003252  0A02               	xorlw	2	; case 10
  7399  003254  B4D8               	btfsc	status,2,c
  7400  003256  D7E1               	goto	l5509
  7401  003258  0A06               	xorlw	6	; case 12
  7402  00325A  B4D8               	btfsc	status,2,c
  7403  00325C  D7CE               	goto	l5505
  7404  00325E  D7EB               	goto	l5513
  7405  003260                     __end_of_lcd_putc:
  7406                           	opt stack 0
  7407                           tblptru	equ	0xFF8
  7408                           tblptrh	equ	0xFF7
  7409                           tblptrl	equ	0xFF6
  7410                           tablat	equ	0xFF5
  7411                           prodh	equ	0xFF4
  7412                           prodl	equ	0xFF3
  7413                           intcon	equ	0xFF2
  7414                           postinc0	equ	0xFEE
  7415                           wreg	equ	0xFE8
  7416                           postdec1	equ	0xFE5
  7417                           fsr1l	equ	0xFE1
  7418                           indf2	equ	0xFDF
  7419                           postinc2	equ	0xFDE
  7420                           postdec2	equ	0xFDD
  7421                           fsr2h	equ	0xFDA
  7422                           fsr2l	equ	0xFD9
  7423                           status	equ	0xFD8
  7424                           
  7425 ;; *************** function _lcd_gotoxy *****************
  7426 ;; Defined at:
  7427 ;;		line 198 in file "source/../../vclib_lcd.h"
  7428 ;; Parameters:    Size  Location     Type
  7429 ;;  pos             1    wreg     unsigned char 
  7430 ;;  fila            1   26[BANK0 ] unsigned char 
  7431 ;; Auto vars:     Size  Location     Type
  7432 ;;  pos             1   27[BANK0 ] unsigned char 
  7433 ;;  address         1   28[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7443 ;;      Params:         0       1       0       0       0       0       0
  7444 ;;      Locals:         0       2       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0
  7446 ;;      Totals:         0       3       0       0       0       0       0
  7447 ;;Total ram usage:        3 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:   14
  7450 ;; This function calls:
  7451 ;;		_lcd_send_byte
  7452 ;; This function is called by:
  7453 ;;		_lcd_putc
  7454 ;;		_drawMenu
  7455 ;;		_drawPassWord
  7456 ;;		_lcd_getc
  7457 ;; This function uses a non-reentrant model
  7458 ;;
  7459                           
  7460                           	psect	text29
  7461  0038A6                     __ptext29:
  7462                           	opt stack 0
  7463  0038A6                     _lcd_gotoxy:
  7464                           	opt stack 11
  7465                           
  7466                           ;incstack = 0
  7467                           ;lcd_gotoxy@pos stored from wreg
  7468  0038A6  0100               	movlb	0	; () banked
  7469  0038A8  6F7B               	movwf	lcd_gotoxy@pos& (0+255),b
  7470                           
  7471                           ;vclib_lcd.h: 199: unsigned char address;
  7472                           ;vclib_lcd.h: 200: if (fila != 1)
  7473  0038AA  0100               	movlb	0	; () banked
  7474  0038AC  057A               	decf	lcd_gotoxy@fila& (0+255),w,b
  7475  0038AE  B4D8               	btfsc	status,2,c
  7476  0038B0  D002               	goto	l5435
  7477                           
  7478                           ; BSR set to: 0
  7479                           ;vclib_lcd.h: 201: address = 0x40;
  7480  0038B2  0E40               	movlw	64
  7481  0038B4  D001               	goto	L6
  7482  0038B6                     l5435:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;vclib_lcd.h: 202: else
  7486                           ;vclib_lcd.h: 203: address = 0;
  7487  0038B6  0E00               	movlw	0
  7488  0038B8                     L6:
  7489  0038B8  0100               	movlb	0	; () banked
  7490  0038BA  6F7C               	movwf	lcd_gotoxy@address& (0+255),b
  7491                           
  7492                           ; BSR set to: 0
  7493                           ;vclib_lcd.h: 204: address += pos - 1;
  7494                           
  7495                           ; BSR set to: 0
  7496  0038BC  0100               	movlb	0	; () banked
  7497  0038BE  057B               	decf	lcd_gotoxy@pos& (0+255),w,b
  7498  0038C0  0100               	movlb	0	; () banked
  7499  0038C2  277C               	addwf	lcd_gotoxy@address& (0+255),f,b
  7500                           
  7501                           ; BSR set to: 0
  7502                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
  7503  0038C4  0100               	movlb	0	; () banked
  7504  0038C6  517C               	movf	lcd_gotoxy@address& (0+255),w,b
  7505  0038C8  0980               	iorlw	128
  7506  0038CA  0100               	movlb	0	; () banked
  7507  0038CC  6F77               	movwf	lcd_send_byte@n& (0+255),b
  7508  0038CE  0E00               	movlw	0
  7509  0038D0  EC6F  F01B         	call	_lcd_send_byte
  7510  0038D4  0012               	return		;funcret
  7511  0038D6                     __end_of_lcd_gotoxy:
  7512                           	opt stack 0
  7513                           tblptru	equ	0xFF8
  7514                           tblptrh	equ	0xFF7
  7515                           tblptrl	equ	0xFF6
  7516                           tablat	equ	0xFF5
  7517                           prodh	equ	0xFF4
  7518                           prodl	equ	0xFF3
  7519                           intcon	equ	0xFF2
  7520                           postinc0	equ	0xFEE
  7521                           wreg	equ	0xFE8
  7522                           postdec1	equ	0xFE5
  7523                           fsr1l	equ	0xFE1
  7524                           indf2	equ	0xFDF
  7525                           postinc2	equ	0xFDE
  7526                           postdec2	equ	0xFDD
  7527                           fsr2h	equ	0xFDA
  7528                           fsr2l	equ	0xFD9
  7529                           status	equ	0xFD8
  7530                           
  7531 ;; *************** function _lcd_send_byte *****************
  7532 ;; Defined at:
  7533 ;;		line 163 in file "source/../../vclib_lcd.h"
  7534 ;; Parameters:    Size  Location     Type
  7535 ;;  address         1    wreg     unsigned char 
  7536 ;;  n               1   23[BANK0 ] unsigned char 
  7537 ;; Auto vars:     Size  Location     Type
  7538 ;;  address         1   25[BANK0 ] unsigned char 
  7539 ;; Return value:  Size  Location     Type
  7540 ;;                  1    wreg      void 
  7541 ;; Registers used:
  7542 ;;		wreg, status,2, status,0, cstack
  7543 ;; Tracked objects:
  7544 ;;		On entry : 0/0
  7545 ;;		On exit  : 0/0
  7546 ;;		Unchanged: 0/0
  7547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7548 ;;      Params:         0       1       0       0       0       0       0
  7549 ;;      Locals:         0       1       0       0       0       0       0
  7550 ;;      Temps:          0       1       0       0       0       0       0
  7551 ;;      Totals:         0       3       0       0       0       0       0
  7552 ;;Total ram usage:        3 bytes
  7553 ;; Hardware stack levels used:    1
  7554 ;; Hardware stack levels required when called:   13
  7555 ;; This function calls:
  7556 ;;		_lcd_read_byte
  7557 ;;		_lcd_send_4bits
  7558 ;; This function is called by:
  7559 ;;		_lcd_init
  7560 ;;		_lcd_gotoxy
  7561 ;;		_lcd_putc
  7562 ;;		_lcd_set_cgram_char
  7563 ;;		_lcd_cursor_en
  7564 ;;		_lcd_clear
  7565 ;;		_lcd_shift_right
  7566 ;;		_lcd_shift_left
  7567 ;; This function uses a non-reentrant model
  7568 ;;
  7569                           
  7570                           	psect	text30
  7571  0036DE                     __ptext30:
  7572                           	opt stack 0
  7573  0036DE                     _lcd_send_byte:
  7574                           	opt stack 16
  7575                           
  7576                           ;incstack = 0
  7577                           ;lcd_send_byte@address stored from wreg
  7578  0036DE  0100               	movlb	0	; () banked
  7579  0036E0  6F79               	movwf	lcd_send_byte@address& (0+255),b
  7580                           
  7581                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
  7582  0036E2  9281               	bcf	3969,1,c	;volatile
  7583  0036E4                     l5415:
  7584  0036E4  EC29  F01B         	call	_lcd_read_byte	;wreg free
  7585  0036E8  0100               	movlb	0	; () banked
  7586  0036EA  6F78               	movwf	??_lcd_send_byte& (0+255),b
  7587  0036EC  0100               	movlb	0	; () banked
  7588  0036EE  BF78               	btfsc	??_lcd_send_byte& (0+255),7,b
  7589  0036F0  D7F9               	goto	l5415
  7590                           
  7591                           ; BSR set to: 0
  7592                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
  7593  0036F2  0100               	movlb	0	; () banked
  7594  0036F4  B179               	btfsc	lcd_send_byte@address& (0+255),0,b
  7595  0036F6  D002               	bra	u6025
  7596  0036F8  9281               	bcf	3969,1,c	;volatile
  7597  0036FA  D001               	bra	u6026
  7598  0036FC                     u6025:
  7599  0036FC  8281               	bsf	3969,1,c	;volatile
  7600  0036FE                     u6026:
  7601                           
  7602                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7603  0036FE  D000               	nop2		;2 cycle nop
  7604  003700  D000               	nop2		;2 cycle nop
  7605                           
  7606                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
  7607  003702  9481               	bcf	3969,2,c	;volatile
  7608                           
  7609                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7610  003704  D000               	nop2		;2 cycle nop
  7611  003706  D000               	nop2		;2 cycle nop
  7612                           
  7613                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
  7614  003708  9681               	bcf	3969,3,c	;volatile
  7615                           
  7616                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
  7617  00370A  0100               	movlb	0	; () banked
  7618  00370C  3977               	swapf	lcd_send_byte@n& (0+255),w,b
  7619  00370E  0B0F               	andlw	15
  7620  003710  EC66  F018         	call	_lcd_send_4bits
  7621                           
  7622                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
  7623  003714  0100               	movlb	0	; () banked
  7624  003716  5177               	movf	lcd_send_byte@n& (0+255),w,b
  7625  003718  0B0F               	andlw	15
  7626  00371A  EC66  F018         	call	_lcd_send_4bits
  7627  00371E  0012               	return		;funcret
  7628  003720                     __end_of_lcd_send_byte:
  7629                           	opt stack 0
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           prodh	equ	0xFF4
  7635                           prodl	equ	0xFF3
  7636                           intcon	equ	0xFF2
  7637                           postinc0	equ	0xFEE
  7638                           wreg	equ	0xFE8
  7639                           postdec1	equ	0xFE5
  7640                           fsr1l	equ	0xFE1
  7641                           indf2	equ	0xFDF
  7642                           postinc2	equ	0xFDE
  7643                           postdec2	equ	0xFDD
  7644                           fsr2h	equ	0xFDA
  7645                           fsr2l	equ	0xFD9
  7646                           status	equ	0xFD8
  7647                           
  7648 ;; *************** function _lcd_send_4bits *****************
  7649 ;; Defined at:
  7650 ;;		line 151 in file "source/../../vclib_lcd.h"
  7651 ;; Parameters:    Size  Location     Type
  7652 ;;  n               1    wreg     unsigned char 
  7653 ;; Auto vars:     Size  Location     Type
  7654 ;;  n               1   22[BANK0 ] unsigned char 
  7655 ;; Return value:  Size  Location     Type
  7656 ;;                  1    wreg      void 
  7657 ;; Registers used:
  7658 ;;		wreg, status,2, cstack
  7659 ;; Tracked objects:
  7660 ;;		On entry : 0/0
  7661 ;;		On exit  : 0/0
  7662 ;;		Unchanged: 0/0
  7663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7664 ;;      Params:         0       0       0       0       0       0       0
  7665 ;;      Locals:         0       5       0       0       0       0       0
  7666 ;;      Temps:          0       0       0       0       0       0       0
  7667 ;;      Totals:         0       5       0       0       0       0       0
  7668 ;;Total ram usage:        5 bytes
  7669 ;; Hardware stack levels used:    1
  7670 ;; Hardware stack levels required when called:   11
  7671 ;; This function calls:
  7672 ;;		Nothing
  7673 ;; This function is called by:
  7674 ;;		_lcd_send_byte
  7675 ;;		_lcd_init
  7676 ;; This function uses a non-reentrant model
  7677 ;;
  7678                           
  7679                           	psect	text31
  7680  0030CC                     __ptext31:
  7681                           	opt stack 0
  7682  0030CC                     _lcd_send_4bits:
  7683                           	opt stack 17
  7684                           
  7685                           ;incstack = 0
  7686                           ;lcd_send_4bits@n stored from wreg
  7687  0030CC  0100               	movlb	0	; () banked
  7688  0030CE  6F76               	movwf	lcd_send_4bits@n& (0+255),b
  7689                           
  7690                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
  7691  0030D0  0E01               	movlw	1
  7692  0030D2  0100               	movlb	0	; () banked
  7693  0030D4  6F72               	movwf	_lcd_send_4bits$1593& (0+255),b
  7694                           
  7695                           ; BSR set to: 0
  7696  0030D6  0100               	movlb	0	; () banked
  7697  0030D8  B176               	btfsc	lcd_send_4bits@n& (0+255),0,b
  7698  0030DA  D003               	goto	l5385
  7699                           
  7700                           ; BSR set to: 0
  7701  0030DC  0E00               	movlw	0
  7702  0030DE  0100               	movlb	0	; () banked
  7703  0030E0  6F72               	movwf	_lcd_send_4bits$1593& (0+255),b
  7704  0030E2                     l5385:
  7705                           
  7706                           ; BSR set to: 0
  7707  0030E2  0100               	movlb	0	; () banked
  7708  0030E4  B172               	btfsc	_lcd_send_4bits$1593& (0+255),0,b
  7709  0030E6  D002               	bra	u5945
  7710  0030E8  9881               	bcf	3969,4,c	;volatile
  7711  0030EA  D001               	bra	u5946
  7712  0030EC                     u5945:
  7713  0030EC  8881               	bsf	3969,4,c	;volatile
  7714  0030EE                     u5946:
  7715                           
  7716                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
  7717  0030EE  0E01               	movlw	1
  7718  0030F0  0100               	movlb	0	; () banked
  7719  0030F2  6F73               	movwf	_lcd_send_4bits$1594& (0+255),b
  7720                           
  7721                           ; BSR set to: 0
  7722  0030F4  0100               	movlb	0	; () banked
  7723  0030F6  B376               	btfsc	lcd_send_4bits@n& (0+255),1,b
  7724  0030F8  D003               	goto	l5391
  7725                           
  7726                           ; BSR set to: 0
  7727  0030FA  0E00               	movlw	0
  7728  0030FC  0100               	movlb	0	; () banked
  7729  0030FE  6F73               	movwf	_lcd_send_4bits$1594& (0+255),b
  7730  003100                     l5391:
  7731                           
  7732                           ; BSR set to: 0
  7733  003100  0100               	movlb	0	; () banked
  7734  003102  B173               	btfsc	_lcd_send_4bits$1594& (0+255),0,b
  7735  003104  D002               	bra	u5965
  7736  003106  9A81               	bcf	3969,5,c	;volatile
  7737  003108  D001               	bra	u5966
  7738  00310A                     u5965:
  7739  00310A  8A81               	bsf	3969,5,c	;volatile
  7740  00310C                     u5966:
  7741                           
  7742                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
  7743  00310C  0E01               	movlw	1
  7744  00310E  0100               	movlb	0	; () banked
  7745  003110  6F74               	movwf	_lcd_send_4bits$1595& (0+255),b
  7746                           
  7747                           ; BSR set to: 0
  7748  003112  0100               	movlb	0	; () banked
  7749  003114  B576               	btfsc	lcd_send_4bits@n& (0+255),2,b
  7750  003116  D003               	goto	l5397
  7751                           
  7752                           ; BSR set to: 0
  7753  003118  0E00               	movlw	0
  7754  00311A  0100               	movlb	0	; () banked
  7755  00311C  6F74               	movwf	_lcd_send_4bits$1595& (0+255),b
  7756  00311E                     l5397:
  7757                           
  7758                           ; BSR set to: 0
  7759  00311E  0100               	movlb	0	; () banked
  7760  003120  B174               	btfsc	_lcd_send_4bits$1595& (0+255),0,b
  7761  003122  D002               	bra	u5985
  7762  003124  9C81               	bcf	3969,6,c	;volatile
  7763  003126  D001               	bra	u5986
  7764  003128                     u5985:
  7765  003128  8C81               	bsf	3969,6,c	;volatile
  7766  00312A                     u5986:
  7767                           
  7768                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
  7769  00312A  0E01               	movlw	1
  7770  00312C  0100               	movlb	0	; () banked
  7771  00312E  6F75               	movwf	_lcd_send_4bits$1596& (0+255),b
  7772                           
  7773                           ; BSR set to: 0
  7774  003130  0100               	movlb	0	; () banked
  7775  003132  B776               	btfsc	lcd_send_4bits@n& (0+255),3,b
  7776  003134  D003               	goto	l5403
  7777                           
  7778                           ; BSR set to: 0
  7779  003136  0E00               	movlw	0
  7780  003138  0100               	movlb	0	; () banked
  7781  00313A  6F75               	movwf	_lcd_send_4bits$1596& (0+255),b
  7782  00313C                     l5403:
  7783                           
  7784                           ; BSR set to: 0
  7785  00313C  0100               	movlb	0	; () banked
  7786  00313E  B175               	btfsc	_lcd_send_4bits$1596& (0+255),0,b
  7787  003140  D002               	bra	u6005
  7788  003142  9E81               	bcf	3969,7,c	;volatile
  7789  003144  D001               	bra	u6006
  7790  003146                     u6005:
  7791  003146  8E81               	bsf	3969,7,c	;volatile
  7792  003148                     u6006:
  7793                           
  7794                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7795  003148  D000               	nop2		;2 cycle nop
  7796  00314A  D000               	nop2		;2 cycle nop
  7797                           
  7798                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
  7799  00314C  8681               	bsf	3969,3,c	;volatile
  7800                           
  7801                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
  7802  00314E  0E02               	movlw	2
  7803  003150                     u8317:
  7804  003150  2EE8               	decfsz	wreg,f,c
  7805  003152  D7FE               	goto	u8317
  7806  003154  D000               	nop2		;nop
  7807                           
  7808                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
  7809  003156  9681               	bcf	3969,3,c	;volatile
  7810  003158  0012               	return		;funcret
  7811  00315A                     __end_of_lcd_send_4bits:
  7812                           	opt stack 0
  7813                           tblptru	equ	0xFF8
  7814                           tblptrh	equ	0xFF7
  7815                           tblptrl	equ	0xFF6
  7816                           tablat	equ	0xFF5
  7817                           prodh	equ	0xFF4
  7818                           prodl	equ	0xFF3
  7819                           intcon	equ	0xFF2
  7820                           postinc0	equ	0xFEE
  7821                           wreg	equ	0xFE8
  7822                           postdec1	equ	0xFE5
  7823                           fsr1l	equ	0xFE1
  7824                           indf2	equ	0xFDF
  7825                           postinc2	equ	0xFDE
  7826                           postdec2	equ	0xFDD
  7827                           fsr2h	equ	0xFDA
  7828                           fsr2l	equ	0xFD9
  7829                           status	equ	0xFD8
  7830                           
  7831 ;; *************** function _lcd_read_byte *****************
  7832 ;; Defined at:
  7833 ;;		line 127 in file "source/../../vclib_lcd.h"
  7834 ;; Parameters:    Size  Location     Type
  7835 ;;		None
  7836 ;; Auto vars:     Size  Location     Type
  7837 ;;  high            1   21[BANK0 ] unsigned char 
  7838 ;;  low             1   20[BANK0 ] unsigned char 
  7839 ;; Return value:  Size  Location     Type
  7840 ;;                  1    wreg      unsigned char 
  7841 ;; Registers used:
  7842 ;;		wreg, status,2, status,0, cstack
  7843 ;; Tracked objects:
  7844 ;;		On entry : 0/0
  7845 ;;		On exit  : 0/0
  7846 ;;		Unchanged: 0/0
  7847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7848 ;;      Params:         0       0       0       0       0       0       0
  7849 ;;      Locals:         0       2       0       0       0       0       0
  7850 ;;      Temps:          0       0       0       0       0       0       0
  7851 ;;      Totals:         0       2       0       0       0       0       0
  7852 ;;Total ram usage:        2 bytes
  7853 ;; Hardware stack levels used:    1
  7854 ;; Hardware stack levels required when called:   12
  7855 ;; This function calls:
  7856 ;;		_lcd_read_4bits
  7857 ;; This function is called by:
  7858 ;;		_lcd_send_byte
  7859 ;;		_lcd_getc
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863                           	psect	text32
  7864  003652                     __ptext32:
  7865                           	opt stack 0
  7866  003652                     _lcd_read_byte:
  7867                           	opt stack 16
  7868                           
  7869                           ;vclib_lcd.h: 128: unsigned char low, high;
  7870                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
  7871                           
  7872                           ;incstack = 0
  7873  003652  8893               	bsf	3987,4,c	;volatile
  7874                           
  7875                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
  7876  003654  8A93               	bsf	3987,5,c	;volatile
  7877                           
  7878                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
  7879  003656  8C93               	bsf	3987,6,c	;volatile
  7880                           
  7881                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
  7882  003658  8E93               	bsf	3987,7,c	;volatile
  7883                           
  7884                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
  7885  00365A  8481               	bsf	3969,2,c	;volatile
  7886                           
  7887                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7888  00365C  D000               	nop2		;2 cycle nop
  7889  00365E  D000               	nop2		;2 cycle nop
  7890                           
  7891                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
  7892  003660  8681               	bsf	3969,3,c	;volatile
  7893                           
  7894                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7895  003662  D000               	nop2		;2 cycle nop
  7896  003664  D000               	nop2		;2 cycle nop
  7897                           
  7898                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
  7899  003666  EC30  F019         	call	_lcd_read_4bits	;wreg free
  7900  00366A  0100               	movlb	0	; () banked
  7901  00366C  6F75               	movwf	lcd_read_byte@high& (0+255),b
  7902                           
  7903                           ; BSR set to: 0
  7904                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
  7905  00366E  9681               	bcf	3969,3,c	;volatile
  7906                           
  7907                           ; BSR set to: 0
  7908                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7909  003670  D000               	nop2		;2 cycle nop
  7910  003672  D000               	nop2		;2 cycle nop
  7911                           
  7912                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
  7913  003674  8681               	bsf	3969,3,c	;volatile
  7914                           
  7915                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7916  003676  D000               	nop2		;2 cycle nop
  7917  003678  D000               	nop2		;2 cycle nop
  7918                           
  7919                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
  7920  00367A  EC30  F019         	call	_lcd_read_4bits	;wreg free
  7921  00367E  0100               	movlb	0	; () banked
  7922  003680  6F74               	movwf	lcd_read_byte@low& (0+255),b
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
  7926  003682  9681               	bcf	3969,3,c	;volatile
  7927                           
  7928                           ; BSR set to: 0
  7929                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
  7930  003684  9893               	bcf	3987,4,c	;volatile
  7931                           
  7932                           ; BSR set to: 0
  7933                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
  7934  003686  9A93               	bcf	3987,5,c	;volatile
  7935                           
  7936                           ; BSR set to: 0
  7937                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
  7938  003688  9C93               	bcf	3987,6,c	;volatile
  7939                           
  7940                           ; BSR set to: 0
  7941                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
  7942  00368A  9E93               	bcf	3987,7,c	;volatile
  7943                           
  7944                           ; BSR set to: 0
  7945                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
  7946  00368C  0100               	movlb	0	; () banked
  7947  00368E  3975               	swapf	lcd_read_byte@high& (0+255),w,b
  7948  003690  0BF0               	andlw	240
  7949  003692  0100               	movlb	0	; () banked
  7950  003694  1174               	iorwf	lcd_read_byte@low& (0+255),w,b
  7951  003696  0012               	return	
  7952  003698                     __end_of_lcd_read_byte:
  7953                           	opt stack 0
  7954                           tblptru	equ	0xFF8
  7955                           tblptrh	equ	0xFF7
  7956                           tblptrl	equ	0xFF6
  7957                           tablat	equ	0xFF5
  7958                           prodh	equ	0xFF4
  7959                           prodl	equ	0xFF3
  7960                           intcon	equ	0xFF2
  7961                           postinc0	equ	0xFEE
  7962                           wreg	equ	0xFE8
  7963                           postdec1	equ	0xFE5
  7964                           fsr1l	equ	0xFE1
  7965                           indf2	equ	0xFDF
  7966                           postinc2	equ	0xFDE
  7967                           postdec2	equ	0xFDD
  7968                           fsr2h	equ	0xFDA
  7969                           fsr2l	equ	0xFD9
  7970                           status	equ	0xFD8
  7971                           
  7972 ;; *************** function _lcd_read_4bits *****************
  7973 ;; Defined at:
  7974 ;;		line 117 in file "source/../../vclib_lcd.h"
  7975 ;; Parameters:    Size  Location     Type
  7976 ;;		None
  7977 ;; Auto vars:     Size  Location     Type
  7978 ;;  n               1   19[BANK0 ] unsigned char 
  7979 ;; Return value:  Size  Location     Type
  7980 ;;                  1    wreg      unsigned char 
  7981 ;; Registers used:
  7982 ;;		wreg, status,2, status,0
  7983 ;; Tracked objects:
  7984 ;;		On entry : 0/0
  7985 ;;		On exit  : 0/0
  7986 ;;		Unchanged: 0/0
  7987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7988 ;;      Params:         0       0       0       0       0       0       0
  7989 ;;      Locals:         0       1       0       0       0       0       0
  7990 ;;      Temps:          0       1       0       0       0       0       0
  7991 ;;      Totals:         0       2       0       0       0       0       0
  7992 ;;Total ram usage:        2 bytes
  7993 ;; Hardware stack levels used:    1
  7994 ;; Hardware stack levels required when called:   11
  7995 ;; This function calls:
  7996 ;;		Nothing
  7997 ;; This function is called by:
  7998 ;;		_lcd_read_byte
  7999 ;; This function uses a non-reentrant model
  8000 ;;
  8001                           
  8002                           	psect	text33
  8003  003260                     __ptext33:
  8004                           	opt stack 0
  8005  003260                     _lcd_read_4bits:
  8006                           	opt stack 16
  8007                           
  8008                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
  8009                           
  8010                           ; BSR set to: 0
  8011                           ;incstack = 0
  8012  003260  0E00               	movlw	0
  8013  003262  0100               	movlb	0	; () banked
  8014  003264  6F73               	movwf	lcd_read_4bits@n& (0+255),b
  8015                           
  8016                           ; BSR set to: 0
  8017                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
  8018  003266  A881               	btfss	3969,4,c	;volatile
  8019  003268  D002               	goto	u5890
  8020  00326A  0E01               	movlw	1
  8021  00326C  D001               	goto	u5896
  8022  00326E                     u5890:
  8023  00326E  0E00               	movlw	0
  8024  003270                     u5896:
  8025  003270  0100               	movlb	0	; () banked
  8026  003272  1373               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8027                           
  8028                           ; BSR set to: 0
  8029                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
  8030  003274  AA81               	btfss	3969,5,c	;volatile
  8031  003276  D004               	goto	u5900
  8032  003278  0100               	movlb	0	; () banked
  8033  00327A  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8034  00327C  2B72               	incf	??_lcd_read_4bits& (0+255),f,b
  8035  00327E  D002               	goto	u5908
  8036  003280                     u5900:
  8037  003280  0100               	movlb	0	; () banked
  8038  003282  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8039  003284                     u5908:
  8040  003284  0100               	movlb	0	; () banked
  8041  003286  90D8               	bcf	status,0,c
  8042  003288  3572               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8043  00328A  0100               	movlb	0	; () banked
  8044  00328C  1373               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8045                           
  8046                           ; BSR set to: 0
  8047                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
  8048  00328E  AC81               	btfss	3969,6,c	;volatile
  8049  003290  D004               	goto	u5910
  8050  003292  0100               	movlb	0	; () banked
  8051  003294  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8052  003296  2B72               	incf	??_lcd_read_4bits& (0+255),f,b
  8053  003298  D002               	goto	u5918
  8054  00329A                     u5910:
  8055  00329A  0100               	movlb	0	; () banked
  8056  00329C  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8057  00329E                     u5918:
  8058  00329E  0100               	movlb	0	; () banked
  8059  0032A0  90D8               	bcf	status,0,c
  8060  0032A2  3772               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8061  0032A4  0100               	movlb	0	; () banked
  8062  0032A6  90D8               	bcf	status,0,c
  8063  0032A8  3572               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8064  0032AA  0100               	movlb	0	; () banked
  8065  0032AC  1373               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
  8069  0032AE  AE81               	btfss	3969,7,c	;volatile
  8070  0032B0  D004               	goto	u5920
  8071  0032B2  0100               	movlb	0	; () banked
  8072  0032B4  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8073  0032B6  2B72               	incf	??_lcd_read_4bits& (0+255),f,b
  8074  0032B8  D002               	goto	u5928
  8075  0032BA                     u5920:
  8076  0032BA  0100               	movlb	0	; () banked
  8077  0032BC  6B72               	clrf	??_lcd_read_4bits& (0+255),b
  8078  0032BE                     u5928:
  8079  0032BE  0100               	movlb	0	; () banked
  8080  0032C0  90D8               	bcf	status,0,c
  8081  0032C2  3772               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8082  0032C4  0100               	movlb	0	; () banked
  8083  0032C6  90D8               	bcf	status,0,c
  8084  0032C8  3772               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8085  0032CA  0100               	movlb	0	; () banked
  8086  0032CC  90D8               	bcf	status,0,c
  8087  0032CE  3572               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8088  0032D0  0100               	movlb	0	; () banked
  8089  0032D2  1373               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8090                           
  8091                           ;vclib_lcd.h: 124: return (n);
  8092  0032D4  0100               	movlb	0	; () banked
  8093  0032D6  5173               	movf	lcd_read_4bits@n& (0+255),w,b
  8094  0032D8  0012               	return	
  8095  0032DA                     __end_of_lcd_read_4bits:
  8096                           	opt stack 0
  8097                           tblptru	equ	0xFF8
  8098                           tblptrh	equ	0xFF7
  8099                           tblptrl	equ	0xFF6
  8100                           tablat	equ	0xFF5
  8101                           prodh	equ	0xFF4
  8102                           prodl	equ	0xFF3
  8103                           intcon	equ	0xFF2
  8104                           postinc0	equ	0xFEE
  8105                           wreg	equ	0xFE8
  8106                           postdec1	equ	0xFE5
  8107                           fsr1l	equ	0xFE1
  8108                           indf2	equ	0xFDF
  8109                           postinc2	equ	0xFDE
  8110                           postdec2	equ	0xFDD
  8111                           fsr2h	equ	0xFDA
  8112                           fsr2l	equ	0xFD9
  8113                           status	equ	0xFD8
  8114                           
  8115 ;; *************** function _fround *****************
  8116 ;; Defined at:
  8117 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  8118 ;; Parameters:    Size  Location     Type
  8119 ;;  prec            1    wreg     unsigned char 
  8120 ;; Auto vars:     Size  Location     Type
  8121 ;;  prec            1   69[BANK0 ] unsigned char 
  8122 ;; Return value:  Size  Location     Type
  8123 ;;                  4   57[BANK0 ] unsigned char 
  8124 ;; Registers used:
  8125 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8126 ;; Tracked objects:
  8127 ;;		On entry : 0/0
  8128 ;;		On exit  : 0/0
  8129 ;;		Unchanged: 0/0
  8130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8131 ;;      Params:         0       4       0       0       0       0       0
  8132 ;;      Locals:         0       9       0       0       0       0       0
  8133 ;;      Temps:          0       0       0       0       0       0       0
  8134 ;;      Totals:         0      13       0       0       0       0       0
  8135 ;;Total ram usage:       13 bytes
  8136 ;; Hardware stack levels used:    1
  8137 ;; Hardware stack levels required when called:   12
  8138 ;; This function calls:
  8139 ;;		___awdiv
  8140 ;;		___awmod
  8141 ;;		___flmul
  8142 ;; This function is called by:
  8143 ;;		_printf
  8144 ;; This function uses a non-reentrant model
  8145 ;;
  8146                           
  8147                           	psect	text34
  8148  001D96                     __ptext34:
  8149                           	opt stack 0
  8150  001D96                     _fround:
  8151                           	opt stack 15
  8152                           
  8153                           ; BSR set to: 0
  8154                           ;incstack = 0
  8155                           ;fround@prec stored from wreg
  8156  001D96  0100               	movlb	0	; () banked
  8157  001D98  6FA5               	movwf	fround@prec& (0+255),b
  8158                           
  8159                           ;doprnt.c: 413: if(prec>=110)
  8160  001D9A  0E6D               	movlw	109
  8161  001D9C  0100               	movlb	0	; () banked
  8162  001D9E  65A5               	cpfsgt	fround@prec& (0+255),b
  8163  001DA0  D0C4               	goto	l5949
  8164                           
  8165                           ; BSR set to: 0
  8166                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8167  001DA2  0E00               	movlw	0
  8168  001DA4  0100               	movlb	0	; () banked
  8169  001DA6  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8170  001DA8  0E0A               	movlw	10
  8171  001DAA  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8172  001DAC  0E00               	movlw	0
  8173  001DAE  0100               	movlb	0	; () banked
  8174  001DB0  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8175  001DB2  0E64               	movlw	100
  8176  001DB4  6F74               	movwf	___awmod@divisor& (0+255),b
  8177  001DB6  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8178  001DBA  0100               	movlb	0	; () banked
  8179  001DBC  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8180  001DBE  EC7E  F017         	call	___awmod	;wreg free
  8181  001DC2  C072  F078         	movff	?___awmod,___awdiv@dividend
  8182  001DC6  C073  F079         	movff	?___awmod+1,___awdiv@dividend+1
  8183  001DCA  EC70  F016         	call	___awdiv	;wreg free
  8184  001DCE  0100               	movlb	0	; () banked
  8185  001DD0  90D8               	bcf	status,0,c
  8186  001DD2  3778               	rlcf	?___awdiv& (0+255),f,b
  8187  001DD4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8188  001DD6  0100               	movlb	0	; () banked
  8189  001DD8  90D8               	bcf	status,0,c
  8190  001DDA  3778               	rlcf	?___awdiv& (0+255),f,b
  8191  001DDC  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8192  001DDE  0E24               	movlw	36
  8193  001DE0  0100               	movlb	0	; () banked
  8194  001DE2  2778               	addwf	?___awdiv& (0+255),f,b
  8195  001DE4  0E00               	movlw	0
  8196  001DE6  0100               	movlb	0	; () banked
  8197  001DE8  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8198  001DEA  0E03               	movlw	low __npowers_
  8199  001DEC  0100               	movlb	0	; () banked
  8200  001DEE  2578               	addwf	?___awdiv& (0+255),w,b
  8201  001DF0  6EF6               	movwf	tblptrl,c
  8202  001DF2  0E7E               	movlw	high __npowers_
  8203  001DF4  0100               	movlb	0	; () banked
  8204  001DF6  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8205  001DF8  6EF7               	movwf	tblptrh,c
  8206  001DFA                     	if	0	;There are less than 3 active tblptr bytes
  8207  001DFA                     	endif
  8208  001DFA  0009               	tblrd		*+
  8209  001DFC  CFF5 F084          	movff	tablat,___flmul@a
  8210  001E00  0009               	tblrd		*+
  8211  001E02  CFF5 F085          	movff	tablat,___flmul@a+1
  8212  001E06  0009               	tblrd		*+
  8213  001E08  CFF5 F086          	movff	tablat,___flmul@a+2
  8214  001E0C  000A               	tblrd		*-
  8215  001E0E  CFF5 F087          	movff	tablat,___flmul@a+3
  8216  001E12  0E00               	movlw	0
  8217  001E14  0100               	movlb	0	; () banked
  8218  001E16  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8219  001E18  0E64               	movlw	100
  8220  001E1A  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8221  001E1C  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8222  001E20  0100               	movlb	0	; () banked
  8223  001E22  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8224  001E24  EC70  F016         	call	___awdiv	;wreg free
  8225  001E28  0100               	movlb	0	; () banked
  8226  001E2A  90D8               	bcf	status,0,c
  8227  001E2C  3778               	rlcf	?___awdiv& (0+255),f,b
  8228  001E2E  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8229  001E30  0100               	movlb	0	; () banked
  8230  001E32  90D8               	bcf	status,0,c
  8231  001E34  3778               	rlcf	?___awdiv& (0+255),f,b
  8232  001E36  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8233  001E38  0E48               	movlw	72
  8234  001E3A  0100               	movlb	0	; () banked
  8235  001E3C  2778               	addwf	?___awdiv& (0+255),f,b
  8236  001E3E  0E00               	movlw	0
  8237  001E40  0100               	movlb	0	; () banked
  8238  001E42  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8239  001E44  0E03               	movlw	low __npowers_
  8240  001E46  0100               	movlb	0	; () banked
  8241  001E48  2578               	addwf	?___awdiv& (0+255),w,b
  8242  001E4A  6EF6               	movwf	tblptrl,c
  8243  001E4C  0E7E               	movlw	high __npowers_
  8244  001E4E  0100               	movlb	0	; () banked
  8245  001E50  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8246  001E52  6EF7               	movwf	tblptrh,c
  8247  001E54                     	if	0	;There are less than 3 active tblptr bytes
  8248  001E54                     	endif
  8249  001E54  0009               	tblrd		*+
  8250  001E56  CFF5 F080          	movff	tablat,___flmul@b
  8251  001E5A  0009               	tblrd		*+
  8252  001E5C  CFF5 F081          	movff	tablat,___flmul@b+1
  8253  001E60  0009               	tblrd		*+
  8254  001E62  CFF5 F082          	movff	tablat,___flmul@b+2
  8255  001E66  000A               	tblrd		*-
  8256  001E68  CFF5 F083          	movff	tablat,___flmul@b+3
  8257  001E6C  EC28  F009         	call	___flmul	;wreg free
  8258  001E70  C080  F0A1         	movff	?___flmul,_fround$2760
  8259  001E74  C081  F0A2         	movff	?___flmul+1,_fround$2760+1
  8260  001E78  C082  F0A3         	movff	?___flmul+2,_fround$2760+2
  8261  001E7C  C083  F0A4         	movff	?___flmul+3,_fround$2760+3
  8262                           
  8263                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8264  001E80  0E00               	movlw	0
  8265  001E82  0100               	movlb	0	; () banked
  8266  001E84  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8267  001E86  0E0A               	movlw	10
  8268  001E88  6F74               	movwf	___awmod@divisor& (0+255),b
  8269  001E8A  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8270  001E8E  0100               	movlb	0	; () banked
  8271  001E90  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8272  001E92  EC7E  F017         	call	___awmod	;wreg free
  8273  001E96  0100               	movlb	0	; () banked
  8274  001E98  90D8               	bcf	status,0,c
  8275  001E9A  3772               	rlcf	?___awmod& (0+255),f,b
  8276  001E9C  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8277  001E9E  0100               	movlb	0	; () banked
  8278  001EA0  90D8               	bcf	status,0,c
  8279  001EA2  3772               	rlcf	?___awmod& (0+255),f,b
  8280  001EA4  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8281  001EA6  0E03               	movlw	low __npowers_
  8282  001EA8  0100               	movlb	0	; () banked
  8283  001EAA  2572               	addwf	?___awmod& (0+255),w,b
  8284  001EAC  6EF6               	movwf	tblptrl,c
  8285  001EAE  0E7E               	movlw	high __npowers_
  8286  001EB0  0100               	movlb	0	; () banked
  8287  001EB2  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8288  001EB4  6EF7               	movwf	tblptrh,c
  8289  001EB6                     	if	0	;There are less than 3 active tblptr bytes
  8290  001EB6                     	endif
  8291  001EB6  0009               	tblrd		*+
  8292  001EB8  CFF5 F084          	movff	tablat,___flmul@a
  8293  001EBC  0009               	tblrd		*+
  8294  001EBE  CFF5 F085          	movff	tablat,___flmul@a+1
  8295  001EC2  0009               	tblrd		*+
  8296  001EC4  CFF5 F086          	movff	tablat,___flmul@a+2
  8297  001EC8  000A               	tblrd		*-
  8298  001ECA  CFF5 F087          	movff	tablat,___flmul@a+3
  8299  001ECE  C0A1  F080         	movff	_fround$2760,___flmul@b
  8300  001ED2  C0A2  F081         	movff	_fround$2760+1,___flmul@b+1
  8301  001ED6  C0A3  F082         	movff	_fround$2760+2,___flmul@b+2
  8302  001EDA  C0A4  F083         	movff	_fround$2760+3,___flmul@b+3
  8303  001EDE  EC28  F009         	call	___flmul	;wreg free
  8304  001EE2  C080  F09D         	movff	?___flmul,_fround$2761
  8305  001EE6  C081  F09E         	movff	?___flmul+1,_fround$2761+1
  8306  001EEA  C082  F09F         	movff	?___flmul+2,_fround$2761+2
  8307  001EEE  C083  F0A0         	movff	?___flmul+3,_fround$2761+3
  8308                           
  8309                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8310  001EF2  C09D  F080         	movff	_fround$2761,___flmul@b
  8311  001EF6  C09E  F081         	movff	_fround$2761+1,___flmul@b+1
  8312  001EFA  C09F  F082         	movff	_fround$2761+2,___flmul@b+2
  8313  001EFE  C0A0  F083         	movff	_fround$2761+3,___flmul@b+3
  8314  001F02  0E00               	movlw	0
  8315  001F04  0100               	movlb	0	; () banked
  8316  001F06  6F84               	movwf	___flmul@a& (0+255),b
  8317  001F08  0E00               	movlw	0
  8318  001F0A  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8319  001F0C  0E00               	movlw	0
  8320  001F0E  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8321  001F10  0E3F               	movlw	63
  8322  001F12  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8323  001F14  EC28  F009         	call	___flmul	;wreg free
  8324  001F18  C080  F099         	movff	?___flmul,?_fround
  8325  001F1C  C081  F09A         	movff	?___flmul+1,?_fround+1
  8326  001F20  C082  F09B         	movff	?___flmul+2,?_fround+2
  8327  001F24  C083  F09C         	movff	?___flmul+3,?_fround+3
  8328  001F28  0012               	return	
  8329  001F2A                     l5949:
  8330                           
  8331                           ;doprnt.c: 415: else if(prec > 10)
  8332  001F2A  0E0A               	movlw	10
  8333  001F2C  0100               	movlb	0	; () banked
  8334  001F2E  65A5               	cpfsgt	fround@prec& (0+255),b
  8335  001F30  D072               	goto	l5957
  8336                           
  8337                           ; BSR set to: 0
  8338                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8339  001F32  0E00               	movlw	0
  8340  001F34  0100               	movlb	0	; () banked
  8341  001F36  6F75               	movwf	(___awmod@divisor+1)& (0+255),b
  8342  001F38  0E0A               	movlw	10
  8343  001F3A  6F74               	movwf	___awmod@divisor& (0+255),b
  8344  001F3C  C0A5  F072         	movff	fround@prec,___awmod@dividend
  8345  001F40  0100               	movlb	0	; () banked
  8346  001F42  6B73               	clrf	(___awmod@dividend+1)& (0+255),b
  8347  001F44  EC7E  F017         	call	___awmod	;wreg free
  8348  001F48  0100               	movlb	0	; () banked
  8349  001F4A  90D8               	bcf	status,0,c
  8350  001F4C  3772               	rlcf	?___awmod& (0+255),f,b
  8351  001F4E  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8352  001F50  0100               	movlb	0	; () banked
  8353  001F52  90D8               	bcf	status,0,c
  8354  001F54  3772               	rlcf	?___awmod& (0+255),f,b
  8355  001F56  3773               	rlcf	(?___awmod+1)& (0+255),f,b
  8356  001F58  0E03               	movlw	low __npowers_
  8357  001F5A  0100               	movlb	0	; () banked
  8358  001F5C  2572               	addwf	?___awmod& (0+255),w,b
  8359  001F5E  6EF6               	movwf	tblptrl,c
  8360  001F60  0E7E               	movlw	high __npowers_
  8361  001F62  0100               	movlb	0	; () banked
  8362  001F64  2173               	addwfc	(?___awmod+1)& (0+255),w,b
  8363  001F66  6EF7               	movwf	tblptrh,c
  8364  001F68                     	if	0	;There are less than 3 active tblptr bytes
  8365  001F68                     	endif
  8366  001F68  0009               	tblrd		*+
  8367  001F6A  CFF5 F084          	movff	tablat,___flmul@a
  8368  001F6E  0009               	tblrd		*+
  8369  001F70  CFF5 F085          	movff	tablat,___flmul@a+1
  8370  001F74  0009               	tblrd		*+
  8371  001F76  CFF5 F086          	movff	tablat,___flmul@a+2
  8372  001F7A  000A               	tblrd		*-
  8373  001F7C  CFF5 F087          	movff	tablat,___flmul@a+3
  8374  001F80  0E00               	movlw	0
  8375  001F82  0100               	movlb	0	; () banked
  8376  001F84  6F7B               	movwf	(___awdiv@divisor+1)& (0+255),b
  8377  001F86  0E0A               	movlw	10
  8378  001F88  6F7A               	movwf	___awdiv@divisor& (0+255),b
  8379  001F8A  C0A5  F078         	movff	fround@prec,___awdiv@dividend
  8380  001F8E  0100               	movlb	0	; () banked
  8381  001F90  6B79               	clrf	(___awdiv@dividend+1)& (0+255),b
  8382  001F92  EC70  F016         	call	___awdiv	;wreg free
  8383  001F96  0100               	movlb	0	; () banked
  8384  001F98  90D8               	bcf	status,0,c
  8385  001F9A  3778               	rlcf	?___awdiv& (0+255),f,b
  8386  001F9C  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8387  001F9E  0100               	movlb	0	; () banked
  8388  001FA0  90D8               	bcf	status,0,c
  8389  001FA2  3778               	rlcf	?___awdiv& (0+255),f,b
  8390  001FA4  3779               	rlcf	(?___awdiv+1)& (0+255),f,b
  8391  001FA6  0E24               	movlw	36
  8392  001FA8  0100               	movlb	0	; () banked
  8393  001FAA  2778               	addwf	?___awdiv& (0+255),f,b
  8394  001FAC  0E00               	movlw	0
  8395  001FAE  0100               	movlb	0	; () banked
  8396  001FB0  2379               	addwfc	(?___awdiv+1)& (0+255),f,b
  8397  001FB2  0E03               	movlw	low __npowers_
  8398  001FB4  0100               	movlb	0	; () banked
  8399  001FB6  2578               	addwf	?___awdiv& (0+255),w,b
  8400  001FB8  6EF6               	movwf	tblptrl,c
  8401  001FBA  0E7E               	movlw	high __npowers_
  8402  001FBC  0100               	movlb	0	; () banked
  8403  001FBE  2179               	addwfc	(?___awdiv+1)& (0+255),w,b
  8404  001FC0  6EF7               	movwf	tblptrh,c
  8405  001FC2                     	if	0	;There are less than 3 active tblptr bytes
  8406  001FC2                     	endif
  8407  001FC2  0009               	tblrd		*+
  8408  001FC4  CFF5 F080          	movff	tablat,___flmul@b
  8409  001FC8  0009               	tblrd		*+
  8410  001FCA  CFF5 F081          	movff	tablat,___flmul@b+1
  8411  001FCE  0009               	tblrd		*+
  8412  001FD0  CFF5 F082          	movff	tablat,___flmul@b+2
  8413  001FD4  000A               	tblrd		*-
  8414  001FD6  CFF5 F083          	movff	tablat,___flmul@b+3
  8415  001FDA  EC28  F009         	call	___flmul	;wreg free
  8416  001FDE  C080  F0A1         	movff	?___flmul,_fround$2760
  8417  001FE2  C081  F0A2         	movff	?___flmul+1,_fround$2760+1
  8418  001FE6  C082  F0A3         	movff	?___flmul+2,_fround$2760+2
  8419  001FEA  C083  F0A4         	movff	?___flmul+3,_fround$2760+3
  8420                           
  8421                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8422  001FEE  C0A1  F080         	movff	_fround$2760,___flmul@b
  8423  001FF2  C0A2  F081         	movff	_fround$2760+1,___flmul@b+1
  8424  001FF6  C0A3  F082         	movff	_fround$2760+2,___flmul@b+2
  8425  001FFA  C0A4  F083         	movff	_fround$2760+3,___flmul@b+3
  8426  001FFE  0E00               	movlw	0
  8427  002000  0100               	movlb	0	; () banked
  8428  002002  6F84               	movwf	___flmul@a& (0+255),b
  8429  002004  0E00               	movlw	0
  8430  002006  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8431  002008  0E00               	movlw	0
  8432  00200A  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8433  00200C  0E3F               	movlw	63
  8434  00200E  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8435  002010  EC28  F009         	call	___flmul	;wreg free
  8436  002014  D781               	goto	L7
  8437  002016                     l5957:
  8438                           
  8439                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8440  002016  0100               	movlb	0	; () banked
  8441  002018  51A5               	movf	fround@prec& (0+255),w,b
  8442  00201A  0D04               	mullw	4
  8443  00201C  0E03               	movlw	low __npowers_
  8444  00201E  24F3               	addwf	prodl,w,c
  8445  002020  6EF6               	movwf	tblptrl,c
  8446  002022  0E7E               	movlw	high __npowers_
  8447  002024  20F4               	addwfc	prodh,w,c
  8448  002026  6EF7               	movwf	tblptrh,c
  8449  002028                     	if	0	;There are less than 3 active tblptr bytes
  8450  002028                     	endif
  8451  002028  0009               	tblrd		*+
  8452  00202A  CFF5 F080          	movff	tablat,___flmul@b
  8453  00202E  0009               	tblrd		*+
  8454  002030  CFF5 F081          	movff	tablat,___flmul@b+1
  8455  002034  0009               	tblrd		*+
  8456  002036  CFF5 F082          	movff	tablat,___flmul@b+2
  8457  00203A  000A               	tblrd		*-
  8458  00203C  CFF5 F083          	movff	tablat,___flmul@b+3
  8459  002040  0E00               	movlw	0
  8460  002042  0100               	movlb	0	; () banked
  8461  002044  6F84               	movwf	___flmul@a& (0+255),b
  8462  002046  0E00               	movlw	0
  8463  002048  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8464  00204A  0E00               	movlw	0
  8465  00204C  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8466  00204E  0E3F               	movlw	63
  8467  002050  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8468  002052  EC28  F009         	call	___flmul	;wreg free
  8469  002056  C080  F099         	movff	?___flmul,?_fround
  8470  00205A  C081  F09A         	movff	?___flmul+1,?_fround+1
  8471  00205E  C082  F09B         	movff	?___flmul+2,?_fround+2
  8472  002062  C083  F09C         	movff	?___flmul+3,?_fround+3
  8473  002066  0012               	return	
  8474  002068                     __end_of_fround:
  8475                           	opt stack 0
  8476                           tblptru	equ	0xFF8
  8477                           tblptrh	equ	0xFF7
  8478                           tblptrl	equ	0xFF6
  8479                           tablat	equ	0xFF5
  8480                           prodh	equ	0xFF4
  8481                           prodl	equ	0xFF3
  8482                           intcon	equ	0xFF2
  8483                           postinc0	equ	0xFEE
  8484                           wreg	equ	0xFE8
  8485                           postdec1	equ	0xFE5
  8486                           fsr1l	equ	0xFE1
  8487                           indf2	equ	0xFDF
  8488                           postinc2	equ	0xFDE
  8489                           postdec2	equ	0xFDD
  8490                           fsr2h	equ	0xFDA
  8491                           fsr2l	equ	0xFD9
  8492                           status	equ	0xFD8
  8493                           
  8494 ;; *************** function ___flmul *****************
  8495 ;; Defined at:
  8496 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
  8497 ;; Parameters:    Size  Location     Type
  8498 ;;  b               4   32[BANK0 ] unsigned char 
  8499 ;;  a               4   36[BANK0 ] unsigned char 
  8500 ;; Auto vars:     Size  Location     Type
  8501 ;;  prod            4   51[BANK0 ] struct .
  8502 ;;  grs             4   46[BANK0 ] unsigned long 
  8503 ;;  temp            2   55[BANK0 ] struct .
  8504 ;;  bexp            1   50[BANK0 ] unsigned char 
  8505 ;;  aexp            1   45[BANK0 ] unsigned char 
  8506 ;;  sign            1   44[BANK0 ] unsigned char 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  4   32[BANK0 ] unsigned char 
  8509 ;; Registers used:
  8510 ;;		wreg, status,2, status,0, prodl, prodh
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8516 ;;      Params:         0       8       0       0       0       0       0
  8517 ;;      Locals:         0      13       0       0       0       0       0
  8518 ;;      Temps:          0       4       0       0       0       0       0
  8519 ;;      Totals:         0      25       0       0       0       0       0
  8520 ;;Total ram usage:       25 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:   11
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_calcSysVars
  8527 ;;		_fround
  8528 ;;		_scale
  8529 ;;		_printf
  8530 ;;		_preAutoCal
  8531 ;;		_autoCal
  8532 ;; This function uses a non-reentrant model
  8533 ;;
  8534                           
  8535                           	psect	text35
  8536  001250                     __ptext35:
  8537                           	opt stack 0
  8538  001250                     ___flmul:
  8539                           	opt stack 17
  8540                           
  8541                           ;incstack = 0
  8542  001250  0100               	movlb	0	; () banked
  8543  001252  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8544  001254  0B80               	andlw	128
  8545  001256  0100               	movlb	0	; () banked
  8546  001258  6F8C               	movwf	___flmul@sign& (0+255),b
  8547  00125A  0100               	movlb	0	; () banked
  8548  00125C  5183               	movf	(___flmul@b+3)& (0+255),w,b
  8549  00125E  2583               	addwf	(___flmul@b+3)& (0+255),w,b
  8550  001260  0100               	movlb	0	; () banked
  8551  001262  6F92               	movwf	___flmul@bexp& (0+255),b
  8552                           
  8553                           ; BSR set to: 0
  8554  001264  0100               	movlb	0	; () banked
  8555  001266  AF82               	btfss	(___flmul@b+2)& (0+255),7,b
  8556  001268  D002               	goto	l5727
  8557                           
  8558                           ; BSR set to: 0
  8559  00126A  0100               	movlb	0	; () banked
  8560  00126C  8192               	bsf	___flmul@bexp& (0+255),0,b
  8561  00126E                     l5727:
  8562                           
  8563                           ; BSR set to: 0
  8564  00126E  0100               	movlb	0	; () banked
  8565  001270  5192               	movf	___flmul@bexp& (0+255),w,b
  8566  001272  0100               	movlb	0	; () banked
  8567  001274  B4D8               	btfsc	status,2,c
  8568  001276  D010               	goto	l5735
  8569                           
  8570                           ; BSR set to: 0
  8571  001278  0100               	movlb	0	; () banked
  8572  00127A  2992               	incf	___flmul@bexp& (0+255),w,b
  8573  00127C  A4D8               	btfss	status,2,c
  8574  00127E  D009               	goto	l5733
  8575                           
  8576                           ; BSR set to: 0
  8577  001280  0E00               	movlw	0
  8578  001282  0100               	movlb	0	; () banked
  8579  001284  6F80               	movwf	___flmul@b& (0+255),b
  8580  001286  0E00               	movlw	0
  8581  001288  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8582  00128A  0E00               	movlw	0
  8583  00128C  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8584  00128E  0E00               	movlw	0
  8585  001290  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8586  001292                     l5733:
  8587                           
  8588                           ; BSR set to: 0
  8589  001292  0100               	movlb	0	; () banked
  8590  001294  8F82               	bsf	(___flmul@b+2)& (0+255),7,b
  8591  001296  D009               	goto	l5737
  8592  001298                     l5735:
  8593                           
  8594                           ; BSR set to: 0
  8595  001298  0E00               	movlw	0
  8596  00129A  0100               	movlb	0	; () banked
  8597  00129C  6F80               	movwf	___flmul@b& (0+255),b
  8598  00129E  0E00               	movlw	0
  8599  0012A0  6F81               	movwf	(___flmul@b+1)& (0+255),b
  8600  0012A2  0E00               	movlw	0
  8601  0012A4  6F82               	movwf	(___flmul@b+2)& (0+255),b
  8602  0012A6  0E00               	movlw	0
  8603  0012A8  6F83               	movwf	(___flmul@b+3)& (0+255),b
  8604  0012AA                     l5737:
  8605                           
  8606                           ; BSR set to: 0
  8607  0012AA  0100               	movlb	0	; () banked
  8608  0012AC  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8609  0012AE  0B80               	andlw	128
  8610  0012B0  0100               	movlb	0	; () banked
  8611  0012B2  1B8C               	xorwf	___flmul@sign& (0+255),f,b
  8612                           
  8613                           ; BSR set to: 0
  8614  0012B4  0100               	movlb	0	; () banked
  8615  0012B6  5187               	movf	(___flmul@a+3)& (0+255),w,b
  8616  0012B8  2587               	addwf	(___flmul@a+3)& (0+255),w,b
  8617  0012BA  0100               	movlb	0	; () banked
  8618  0012BC  6F8D               	movwf	___flmul@aexp& (0+255),b
  8619                           
  8620                           ; BSR set to: 0
  8621  0012BE  0100               	movlb	0	; () banked
  8622  0012C0  AF86               	btfss	(___flmul@a+2)& (0+255),7,b
  8623  0012C2  D002               	goto	l5745
  8624                           
  8625                           ; BSR set to: 0
  8626  0012C4  0100               	movlb	0	; () banked
  8627  0012C6  818D               	bsf	___flmul@aexp& (0+255),0,b
  8628  0012C8                     l5745:
  8629                           
  8630                           ; BSR set to: 0
  8631  0012C8  0100               	movlb	0	; () banked
  8632  0012CA  518D               	movf	___flmul@aexp& (0+255),w,b
  8633  0012CC  0100               	movlb	0	; () banked
  8634  0012CE  B4D8               	btfsc	status,2,c
  8635  0012D0  D010               	goto	l5753
  8636                           
  8637                           ; BSR set to: 0
  8638  0012D2  0100               	movlb	0	; () banked
  8639  0012D4  298D               	incf	___flmul@aexp& (0+255),w,b
  8640  0012D6  A4D8               	btfss	status,2,c
  8641  0012D8  D009               	goto	l5751
  8642                           
  8643                           ; BSR set to: 0
  8644  0012DA  0E00               	movlw	0
  8645  0012DC  0100               	movlb	0	; () banked
  8646  0012DE  6F84               	movwf	___flmul@a& (0+255),b
  8647  0012E0  0E00               	movlw	0
  8648  0012E2  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8649  0012E4  0E00               	movlw	0
  8650  0012E6  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8651  0012E8  0E00               	movlw	0
  8652  0012EA  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8653  0012EC                     l5751:
  8654                           
  8655                           ; BSR set to: 0
  8656  0012EC  0100               	movlb	0	; () banked
  8657  0012EE  8F86               	bsf	(___flmul@a+2)& (0+255),7,b
  8658  0012F0  D009               	goto	l1173
  8659  0012F2                     l5753:
  8660                           
  8661                           ; BSR set to: 0
  8662  0012F2  0E00               	movlw	0
  8663  0012F4  0100               	movlb	0	; () banked
  8664  0012F6  6F84               	movwf	___flmul@a& (0+255),b
  8665  0012F8  0E00               	movlw	0
  8666  0012FA  6F85               	movwf	(___flmul@a+1)& (0+255),b
  8667  0012FC  0E00               	movlw	0
  8668  0012FE  6F86               	movwf	(___flmul@a+2)& (0+255),b
  8669  001300  0E00               	movlw	0
  8670  001302  6F87               	movwf	(___flmul@a+3)& (0+255),b
  8671  001304                     l1173:
  8672                           
  8673                           ; BSR set to: 0
  8674  001304  0100               	movlb	0	; () banked
  8675  001306  518D               	movf	___flmul@aexp& (0+255),w,b
  8676  001308  0100               	movlb	0	; () banked
  8677  00130A  B4D8               	btfsc	status,2,c
  8678  00130C  D005               	goto	l5757
  8679                           
  8680                           ; BSR set to: 0
  8681  00130E  0100               	movlb	0	; () banked
  8682  001310  5192               	movf	___flmul@bexp& (0+255),w,b
  8683  001312  0100               	movlb	0	; () banked
  8684  001314  A4D8               	btfss	status,2,c
  8685  001316  D00A               	goto	l5761
  8686  001318                     l5757:
  8687                           
  8688                           ; BSR set to: 0
  8689  001318  0E00               	movlw	0
  8690  00131A  0100               	movlb	0	; () banked
  8691  00131C  6F80               	movwf	?___flmul& (0+255),b
  8692  00131E  0E00               	movlw	0
  8693  001320  6F81               	movwf	(?___flmul+1)& (0+255),b
  8694  001322  0E00               	movlw	0
  8695  001324  6F82               	movwf	(?___flmul+2)& (0+255),b
  8696  001326  0E00               	movlw	0
  8697  001328  6F83               	movwf	(?___flmul+3)& (0+255),b
  8698                           
  8699                           ; BSR set to: 0
  8700  00132A  0012               	return	
  8701  00132C                     l5761:
  8702                           
  8703                           ; BSR set to: 0
  8704  00132C  0100               	movlb	0	; () banked
  8705  00132E  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8706  001330  0100               	movlb	0	; () banked
  8707  001332  0380               	mulwf	___flmul@b& (0+255),b
  8708  001334  CFF3 F097          	movff	prodl,___flmul@temp
  8709  001338  CFF4 F098          	movff	prodh,___flmul@temp+1
  8710                           
  8711                           ; BSR set to: 0
  8712  00133C  0100               	movlb	0	; () banked
  8713  00133E  5197               	movf	___flmul@temp& (0+255),w,b
  8714  001340  0100               	movlb	0	; () banked
  8715  001342  6F8E               	movwf	___flmul@grs& (0+255),b
  8716  001344  6B8F               	clrf	(___flmul@grs+1)& (0+255),b
  8717  001346  6B90               	clrf	(___flmul@grs+2)& (0+255),b
  8718  001348  6B91               	clrf	(___flmul@grs+3)& (0+255),b
  8719                           
  8720                           ; BSR set to: 0
  8721  00134A  0100               	movlb	0	; () banked
  8722  00134C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8723  00134E  0100               	movlb	0	; () banked
  8724  001350  6F93               	movwf	___flmul@prod& (0+255),b
  8725  001352  6B94               	clrf	(___flmul@prod+1)& (0+255),b
  8726  001354  6B95               	clrf	(___flmul@prod+2)& (0+255),b
  8727  001356  6B96               	clrf	(___flmul@prod+3)& (0+255),b
  8728  001358  0100               	movlb	0	; () banked
  8729  00135A  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8730  00135C  0100               	movlb	0	; () banked
  8731  00135E  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8732  001360  CFF3 F097          	movff	prodl,___flmul@temp
  8733  001364  CFF4 F098          	movff	prodh,___flmul@temp+1
  8734                           
  8735                           ; BSR set to: 0
  8736  001368  0100               	movlb	0	; () banked
  8737  00136A  5197               	movf	___flmul@temp& (0+255),w,b
  8738  00136C  0100               	movlb	0	; () banked
  8739  00136E  278E               	addwf	___flmul@grs& (0+255),f,b
  8740  001370  0E00               	movlw	0
  8741  001372  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8742  001374  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8743  001376  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8744                           
  8745                           ; BSR set to: 0
  8746  001378  0100               	movlb	0	; () banked
  8747  00137A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8748  00137C  0100               	movlb	0	; () banked
  8749  00137E  2793               	addwf	___flmul@prod& (0+255),f,b
  8750  001380  0E00               	movlw	0
  8751  001382  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8752  001384  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8753  001386  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8754  001388  0100               	movlb	0	; () banked
  8755  00138A  5184               	movf	___flmul@a& (0+255),w,b
  8756  00138C  0100               	movlb	0	; () banked
  8757  00138E  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8758  001390  CFF3 F097          	movff	prodl,___flmul@temp
  8759  001394  CFF4 F098          	movff	prodh,___flmul@temp+1
  8760                           
  8761                           ; BSR set to: 0
  8762  001398  0100               	movlb	0	; () banked
  8763  00139A  5197               	movf	___flmul@temp& (0+255),w,b
  8764  00139C  0100               	movlb	0	; () banked
  8765  00139E  278E               	addwf	___flmul@grs& (0+255),f,b
  8766  0013A0  0E00               	movlw	0
  8767  0013A2  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8768  0013A4  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8769  0013A6  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8770                           
  8771                           ; BSR set to: 0
  8772  0013A8  0100               	movlb	0	; () banked
  8773  0013AA  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8774  0013AC  0100               	movlb	0	; () banked
  8775  0013AE  2793               	addwf	___flmul@prod& (0+255),f,b
  8776  0013B0  0E00               	movlw	0
  8777  0013B2  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8778  0013B4  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8779  0013B6  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8780                           
  8781                           ; BSR set to: 0
  8782  0013B8  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8783  0013BC  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8784  0013C0  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8785  0013C4  0100               	movlb	0	; () banked
  8786  0013C6  6B8E               	clrf	___flmul@grs& (0+255),b
  8787                           
  8788                           ; BSR set to: 0
  8789  0013C8  0100               	movlb	0	; () banked
  8790  0013CA  5184               	movf	___flmul@a& (0+255),w,b
  8791  0013CC  0100               	movlb	0	; () banked
  8792  0013CE  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8793  0013D0  CFF3 F097          	movff	prodl,___flmul@temp
  8794  0013D4  CFF4 F098          	movff	prodh,___flmul@temp+1
  8795                           
  8796                           ; BSR set to: 0
  8797  0013D8  0100               	movlb	0	; () banked
  8798  0013DA  5197               	movf	___flmul@temp& (0+255),w,b
  8799  0013DC  0100               	movlb	0	; () banked
  8800  0013DE  278E               	addwf	___flmul@grs& (0+255),f,b
  8801  0013E0  0100               	movlb	0	; () banked
  8802  0013E2  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8803  0013E4  0100               	movlb	0	; () banked
  8804  0013E6  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8805  0013E8  0E00               	movlw	0
  8806  0013EA  0100               	movlb	0	; () banked
  8807  0013EC  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8808  0013EE  0E00               	movlw	0
  8809  0013F0  0100               	movlb	0	; () banked
  8810  0013F2  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8811                           
  8812                           ; BSR set to: 0
  8813  0013F4  0100               	movlb	0	; () banked
  8814  0013F6  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8815  0013F8  0100               	movlb	0	; () banked
  8816  0013FA  0380               	mulwf	___flmul@b& (0+255),b
  8817  0013FC  CFF3 F097          	movff	prodl,___flmul@temp
  8818  001400  CFF4 F098          	movff	prodh,___flmul@temp+1
  8819                           
  8820                           ; BSR set to: 0
  8821  001404  0100               	movlb	0	; () banked
  8822  001406  5197               	movf	___flmul@temp& (0+255),w,b
  8823  001408  0100               	movlb	0	; () banked
  8824  00140A  278E               	addwf	___flmul@grs& (0+255),f,b
  8825  00140C  0100               	movlb	0	; () banked
  8826  00140E  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8827  001410  0100               	movlb	0	; () banked
  8828  001412  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8829  001414  0E00               	movlw	0
  8830  001416  0100               	movlb	0	; () banked
  8831  001418  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8832  00141A  0E00               	movlw	0
  8833  00141C  0100               	movlb	0	; () banked
  8834  00141E  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8835                           
  8836                           ; BSR set to: 0
  8837  001420  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8838  001424  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8839  001428  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8840  00142C  0100               	movlb	0	; () banked
  8841  00142E  6B8E               	clrf	___flmul@grs& (0+255),b
  8842  001430  0100               	movlb	0	; () banked
  8843  001432  5184               	movf	___flmul@a& (0+255),w,b
  8844  001434  0100               	movlb	0	; () banked
  8845  001436  0380               	mulwf	___flmul@b& (0+255),b
  8846  001438  CFF3 F097          	movff	prodl,___flmul@temp
  8847  00143C  CFF4 F098          	movff	prodh,___flmul@temp+1
  8848                           
  8849                           ; BSR set to: 0
  8850  001440  0100               	movlb	0	; () banked
  8851  001442  5197               	movf	___flmul@temp& (0+255),w,b
  8852  001444  0100               	movlb	0	; () banked
  8853  001446  278E               	addwf	___flmul@grs& (0+255),f,b
  8854  001448  0100               	movlb	0	; () banked
  8855  00144A  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8856  00144C  0100               	movlb	0	; () banked
  8857  00144E  238F               	addwfc	(___flmul@grs+1)& (0+255),f,b
  8858  001450  0E00               	movlw	0
  8859  001452  0100               	movlb	0	; () banked
  8860  001454  2390               	addwfc	(___flmul@grs+2)& (0+255),f,b
  8861  001456  0E00               	movlw	0
  8862  001458  0100               	movlb	0	; () banked
  8863  00145A  2391               	addwfc	(___flmul@grs+3)& (0+255),f,b
  8864                           
  8865                           ; BSR set to: 0
  8866  00145C  0100               	movlb	0	; () banked
  8867  00145E  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8868  001460  0100               	movlb	0	; () banked
  8869  001462  0381               	mulwf	(___flmul@b+1)& (0+255),b
  8870  001464  CFF3 F097          	movff	prodl,___flmul@temp
  8871  001468  CFF4 F098          	movff	prodh,___flmul@temp+1
  8872  00146C  0100               	movlb	0	; () banked
  8873  00146E  5197               	movf	___flmul@temp& (0+255),w,b
  8874  001470  0100               	movlb	0	; () banked
  8875  001472  2793               	addwf	___flmul@prod& (0+255),f,b
  8876  001474  0100               	movlb	0	; () banked
  8877  001476  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8878  001478  0100               	movlb	0	; () banked
  8879  00147A  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8880  00147C  0E00               	movlw	0
  8881  00147E  0100               	movlb	0	; () banked
  8882  001480  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8883  001482  0E00               	movlw	0
  8884  001484  0100               	movlb	0	; () banked
  8885  001486  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8886                           
  8887                           ; BSR set to: 0
  8888  001488  0100               	movlb	0	; () banked
  8889  00148A  5185               	movf	(___flmul@a+1)& (0+255),w,b
  8890  00148C  0100               	movlb	0	; () banked
  8891  00148E  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8892  001490  CFF3 F097          	movff	prodl,___flmul@temp
  8893  001494  CFF4 F098          	movff	prodh,___flmul@temp+1
  8894                           
  8895                           ; BSR set to: 0
  8896  001498  0100               	movlb	0	; () banked
  8897  00149A  5197               	movf	___flmul@temp& (0+255),w,b
  8898  00149C  0100               	movlb	0	; () banked
  8899  00149E  2793               	addwf	___flmul@prod& (0+255),f,b
  8900  0014A0  0100               	movlb	0	; () banked
  8901  0014A2  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8902  0014A4  0100               	movlb	0	; () banked
  8903  0014A6  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8904  0014A8  0E00               	movlw	0
  8905  0014AA  0100               	movlb	0	; () banked
  8906  0014AC  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8907  0014AE  0E00               	movlw	0
  8908  0014B0  0100               	movlb	0	; () banked
  8909  0014B2  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8910  0014B4  0100               	movlb	0	; () banked
  8911  0014B6  5186               	movf	(___flmul@a+2)& (0+255),w,b
  8912  0014B8  0100               	movlb	0	; () banked
  8913  0014BA  0382               	mulwf	(___flmul@b+2)& (0+255),b
  8914  0014BC  CFF3 F097          	movff	prodl,___flmul@temp
  8915  0014C0  CFF4 F098          	movff	prodh,___flmul@temp+1
  8916                           
  8917                           ; BSR set to: 0
  8918  0014C4  0100               	movlb	0	; () banked
  8919  0014C6  5197               	movf	___flmul@temp& (0+255),w,b
  8920  0014C8  0100               	movlb	0	; () banked
  8921  0014CA  6F88               	movwf	??___flmul& (0+255),b
  8922  0014CC  0100               	movlb	0	; () banked
  8923  0014CE  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  8924  0014D0  0100               	movlb	0	; () banked
  8925  0014D2  6F89               	movwf	(??___flmul+1)& (0+255),b
  8926  0014D4  0100               	movlb	0	; () banked
  8927  0014D6  6B8A               	clrf	(??___flmul+2)& (0+255),b
  8928  0014D8  0100               	movlb	0	; () banked
  8929  0014DA  6B8B               	clrf	(??___flmul+3)& (0+255),b
  8930  0014DC  C08A  F08B         	movff	??___flmul+2,??___flmul+3
  8931  0014E0  C089  F08A         	movff	??___flmul+1,??___flmul+2
  8932  0014E4  C088  F089         	movff	??___flmul,??___flmul+1
  8933  0014E8  0100               	movlb	0	; () banked
  8934  0014EA  6B88               	clrf	??___flmul& (0+255),b
  8935  0014EC  0100               	movlb	0	; () banked
  8936  0014EE  5188               	movf	??___flmul& (0+255),w,b
  8937  0014F0  0100               	movlb	0	; () banked
  8938  0014F2  2793               	addwf	___flmul@prod& (0+255),f,b
  8939  0014F4  0100               	movlb	0	; () banked
  8940  0014F6  5189               	movf	(??___flmul+1)& (0+255),w,b
  8941  0014F8  0100               	movlb	0	; () banked
  8942  0014FA  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8943  0014FC  0100               	movlb	0	; () banked
  8944  0014FE  518A               	movf	(??___flmul+2)& (0+255),w,b
  8945  001500  0100               	movlb	0	; () banked
  8946  001502  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8947  001504  0100               	movlb	0	; () banked
  8948  001506  518B               	movf	(??___flmul+3)& (0+255),w,b
  8949  001508  0100               	movlb	0	; () banked
  8950  00150A  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8951                           
  8952                           ; BSR set to: 0
  8953  00150C  C08E  F088         	movff	___flmul@grs,??___flmul
  8954  001510  C08F  F089         	movff	___flmul@grs+1,??___flmul+1
  8955  001514  C090  F08A         	movff	___flmul@grs+2,??___flmul+2
  8956  001518  C091  F08B         	movff	___flmul@grs+3,??___flmul+3
  8957  00151C  0E19               	movlw	25
  8958  00151E  D006               	goto	u6630
  8959  001520                     u6635:
  8960  001520  0100               	movlb	0	; () banked
  8961  001522  90D8               	bcf	status,0,c
  8962  001524  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  8963  001526  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  8964  001528  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  8965  00152A  3388               	rrcf	??___flmul& (0+255),f,b
  8966  00152C                     u6630:
  8967  00152C  2EE8               	decfsz	wreg,f,c
  8968  00152E  D7F8               	goto	u6635
  8969  001530  0100               	movlb	0	; () banked
  8970  001532  5188               	movf	??___flmul& (0+255),w,b
  8971  001534  0100               	movlb	0	; () banked
  8972  001536  2793               	addwf	___flmul@prod& (0+255),f,b
  8973  001538  0100               	movlb	0	; () banked
  8974  00153A  5189               	movf	(??___flmul+1)& (0+255),w,b
  8975  00153C  0100               	movlb	0	; () banked
  8976  00153E  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  8977  001540  0100               	movlb	0	; () banked
  8978  001542  518A               	movf	(??___flmul+2)& (0+255),w,b
  8979  001544  0100               	movlb	0	; () banked
  8980  001546  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  8981  001548  0100               	movlb	0	; () banked
  8982  00154A  518B               	movf	(??___flmul+3)& (0+255),w,b
  8983  00154C  0100               	movlb	0	; () banked
  8984  00154E  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  8985                           
  8986                           ; BSR set to: 0
  8987  001550  C090  F091         	movff	___flmul@grs+2,___flmul@grs+3
  8988  001554  C08F  F090         	movff	___flmul@grs+1,___flmul@grs+2
  8989  001558  C08E  F08F         	movff	___flmul@grs,___flmul@grs+1
  8990  00155C  0100               	movlb	0	; () banked
  8991  00155E  6B8E               	clrf	___flmul@grs& (0+255),b
  8992                           
  8993                           ; BSR set to: 0
  8994  001560  0100               	movlb	0	; () banked
  8995  001562  518D               	movf	___flmul@aexp& (0+255),w,b
  8996  001564  C092  F088         	movff	___flmul@bexp,??___flmul
  8997  001568  0100               	movlb	0	; () banked
  8998  00156A  6B89               	clrf	(??___flmul+1)& (0+255),b
  8999  00156C  0100               	movlb	0	; () banked
  9000  00156E  2788               	addwf	??___flmul& (0+255),f,b
  9001  001570  0E00               	movlw	0
  9002  001572  2389               	addwfc	(??___flmul+1)& (0+255),f,b
  9003  001574  0E82               	movlw	130
  9004  001576  0100               	movlb	0	; () banked
  9005  001578  2588               	addwf	??___flmul& (0+255),w,b
  9006  00157A  0100               	movlb	0	; () banked
  9007  00157C  6F97               	movwf	___flmul@temp& (0+255),b
  9008  00157E  0EFF               	movlw	255
  9009  001580  0100               	movlb	0	; () banked
  9010  001582  2189               	addwfc	(??___flmul+1)& (0+255),w,b
  9011  001584  0100               	movlb	0	; () banked
  9012  001586  6F98               	movwf	(___flmul@temp+1)& (0+255),b
  9013  001588  D015               	goto	l5809
  9014  00158A                     l5803:
  9015                           
  9016                           ; BSR set to: 0
  9017  00158A  0100               	movlb	0	; () banked
  9018  00158C  90D8               	bcf	status,0,c
  9019  00158E  3793               	rlcf	___flmul@prod& (0+255),f,b
  9020  001590  3794               	rlcf	(___flmul@prod+1)& (0+255),f,b
  9021  001592  3795               	rlcf	(___flmul@prod+2)& (0+255),f,b
  9022  001594  3796               	rlcf	(___flmul@prod+3)& (0+255),f,b
  9023                           
  9024                           ; BSR set to: 0
  9025  001596  0100               	movlb	0	; () banked
  9026  001598  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9027  00159A  D002               	goto	l1180
  9028                           
  9029                           ; BSR set to: 0
  9030  00159C  0100               	movlb	0	; () banked
  9031  00159E  8193               	bsf	___flmul@prod& (0+255),0,b
  9032  0015A0                     l1180:
  9033                           
  9034                           ; BSR set to: 0
  9035  0015A0  0100               	movlb	0	; () banked
  9036  0015A2  90D8               	bcf	status,0,c
  9037  0015A4  378E               	rlcf	___flmul@grs& (0+255),f,b
  9038  0015A6  378F               	rlcf	(___flmul@grs+1)& (0+255),f,b
  9039  0015A8  3790               	rlcf	(___flmul@grs+2)& (0+255),f,b
  9040  0015AA  3791               	rlcf	(___flmul@grs+3)& (0+255),f,b
  9041  0015AC  0100               	movlb	0	; () banked
  9042  0015AE  0797               	decf	___flmul@temp& (0+255),f,b
  9043  0015B0  A0D8               	btfss	status,0,c
  9044  0015B2  0798               	decf	(___flmul@temp+1)& (0+255),f,b
  9045  0015B4                     l5809:
  9046                           
  9047                           ; BSR set to: 0
  9048  0015B4  0100               	movlb	0	; () banked
  9049  0015B6  AF95               	btfss	(___flmul@prod+2)& (0+255),7,b
  9050  0015B8  D7E8               	goto	l5803
  9051                           
  9052                           ; BSR set to: 0
  9053                           
  9054                           ; BSR set to: 0
  9055  0015BA  0E00               	movlw	0
  9056  0015BC  0100               	movlb	0	; () banked
  9057  0015BE  6F8D               	movwf	___flmul@aexp& (0+255),b
  9058                           
  9059                           ; BSR set to: 0
  9060  0015C0  0100               	movlb	0	; () banked
  9061  0015C2  AF91               	btfss	(___flmul@grs+3)& (0+255),7,b
  9062  0015C4  D024               	goto	l1182
  9063                           
  9064                           ; BSR set to: 0
  9065  0015C6  0EFF               	movlw	255
  9066  0015C8  0100               	movlb	0	; () banked
  9067  0015CA  158E               	andwf	___flmul@grs& (0+255),w,b
  9068  0015CC  0100               	movlb	0	; () banked
  9069  0015CE  6F88               	movwf	??___flmul& (0+255),b
  9070  0015D0  0EFF               	movlw	255
  9071  0015D2  0100               	movlb	0	; () banked
  9072  0015D4  158F               	andwf	(___flmul@grs+1)& (0+255),w,b
  9073  0015D6  0100               	movlb	0	; () banked
  9074  0015D8  6F89               	movwf	(??___flmul+1)& (0+255),b
  9075  0015DA  0EFF               	movlw	255
  9076  0015DC  0100               	movlb	0	; () banked
  9077  0015DE  1590               	andwf	(___flmul@grs+2)& (0+255),w,b
  9078  0015E0  0100               	movlb	0	; () banked
  9079  0015E2  6F8A               	movwf	(??___flmul+2)& (0+255),b
  9080  0015E4  0E7F               	movlw	127
  9081  0015E6  0100               	movlb	0	; () banked
  9082  0015E8  1591               	andwf	(___flmul@grs+3)& (0+255),w,b
  9083  0015EA  0100               	movlb	0	; () banked
  9084  0015EC  6F8B               	movwf	(??___flmul+3)& (0+255),b
  9085  0015EE  0100               	movlb	0	; () banked
  9086  0015F0  5188               	movf	??___flmul& (0+255),w,b
  9087  0015F2  0100               	movlb	0	; () banked
  9088  0015F4  1189               	iorwf	(??___flmul+1)& (0+255),w,b
  9089  0015F6  0100               	movlb	0	; () banked
  9090  0015F8  118A               	iorwf	(??___flmul+2)& (0+255),w,b
  9091  0015FA  0100               	movlb	0	; () banked
  9092  0015FC  118B               	iorwf	(??___flmul+3)& (0+255),w,b
  9093  0015FE  A4D8               	btfss	status,2,c
  9094  001600  D003               	goto	l5819
  9095                           
  9096                           ; BSR set to: 0
  9097                           
  9098                           ; BSR set to: 0
  9099  001602  0100               	movlb	0	; () banked
  9100  001604  A193               	btfss	___flmul@prod& (0+255),0,b
  9101  001606  D003               	goto	l1182
  9102  001608                     l5819:
  9103                           
  9104                           ; BSR set to: 0
  9105  001608  0E01               	movlw	1
  9106  00160A  0100               	movlb	0	; () banked
  9107  00160C  6F8D               	movwf	___flmul@aexp& (0+255),b
  9108  00160E                     l1182:
  9109                           
  9110                           ; BSR set to: 0
  9111  00160E  0100               	movlb	0	; () banked
  9112  001610  518D               	movf	___flmul@aexp& (0+255),w,b
  9113  001612  0100               	movlb	0	; () banked
  9114  001614  B4D8               	btfsc	status,2,c
  9115  001616  D023               	goto	l5829
  9116                           
  9117                           ; BSR set to: 0
  9118  001618  0E01               	movlw	1
  9119  00161A  0100               	movlb	0	; () banked
  9120  00161C  2793               	addwf	___flmul@prod& (0+255),f,b
  9121  00161E  0E00               	movlw	0
  9122  001620  2394               	addwfc	(___flmul@prod+1)& (0+255),f,b
  9123  001622  2395               	addwfc	(___flmul@prod+2)& (0+255),f,b
  9124  001624  2396               	addwfc	(___flmul@prod+3)& (0+255),f,b
  9125                           
  9126                           ; BSR set to: 0
  9127  001626  0100               	movlb	0	; () banked
  9128  001628  A196               	btfss	(___flmul@prod+3)& (0+255),0,b
  9129  00162A  D019               	goto	l5829
  9130                           
  9131                           ; BSR set to: 0
  9132  00162C  C093  F088         	movff	___flmul@prod,??___flmul
  9133  001630  C094  F089         	movff	___flmul@prod+1,??___flmul+1
  9134  001634  C095  F08A         	movff	___flmul@prod+2,??___flmul+2
  9135  001638  C096  F08B         	movff	___flmul@prod+3,??___flmul+3
  9136  00163C  0100               	movlb	0	; () banked
  9137  00163E  358B               	rlcf	(??___flmul+3)& (0+255),w,b
  9138  001640  338B               	rrcf	(??___flmul+3)& (0+255),f,b
  9139  001642  338A               	rrcf	(??___flmul+2)& (0+255),f,b
  9140  001644  3389               	rrcf	(??___flmul+1)& (0+255),f,b
  9141  001646  3388               	rrcf	??___flmul& (0+255),f,b
  9142  001648  C088  F093         	movff	??___flmul,___flmul@prod
  9143  00164C  C089  F094         	movff	??___flmul+1,___flmul@prod+1
  9144  001650  C08A  F095         	movff	??___flmul+2,___flmul@prod+2
  9145  001654  C08B  F096         	movff	??___flmul+3,___flmul@prod+3
  9146                           
  9147                           ; BSR set to: 0
  9148  001658  0100               	movlb	0	; () banked
  9149  00165A  4B97               	infsnz	___flmul@temp& (0+255),f,b
  9150  00165C  2B98               	incf	(___flmul@temp+1)& (0+255),f,b
  9151  00165E                     l5829:
  9152                           
  9153                           ; BSR set to: 0
  9154  00165E  0100               	movlb	0	; () banked
  9155  001660  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9156  001662  D010               	goto	l5833
  9157  001664  0100               	movlb	0	; () banked
  9158  001666  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9159  001668  E104               	bnz	u6710
  9160  00166A  0100               	movlb	0	; () banked
  9161  00166C  2997               	incf	___flmul@temp& (0+255),w,b
  9162  00166E  A0D8               	btfss	status,0,c
  9163  001670  D009               	goto	l5833
  9164  001672                     u6710:
  9165                           
  9166                           ; BSR set to: 0
  9167  001672  0E00               	movlw	0
  9168  001674  0100               	movlb	0	; () banked
  9169  001676  6F93               	movwf	___flmul@prod& (0+255),b
  9170  001678  0E00               	movlw	0
  9171  00167A  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9172  00167C  0E80               	movlw	128
  9173  00167E  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9174  001680  0E7F               	movlw	127
  9175  001682  D02B               	goto	L8
  9176  001684                     l5833:
  9177                           
  9178                           ; BSR set to: 0
  9179  001684  0100               	movlb	0	; () banked
  9180  001686  BF98               	btfsc	(___flmul@temp+1)& (0+255),7,b
  9181  001688  D007               	goto	l5835
  9182  00168A  0100               	movlb	0	; () banked
  9183  00168C  5198               	movf	(___flmul@temp+1)& (0+255),w,b
  9184  00168E  E111               	bnz	l1190
  9185  001690  0100               	movlb	0	; () banked
  9186  001692  0597               	decf	___flmul@temp& (0+255),w,b
  9187  001694  B0D8               	btfsc	status,0,c
  9188  001696  D00D               	goto	l1190
  9189  001698                     l5835:
  9190                           
  9191                           ; BSR set to: 0
  9192  001698  0E00               	movlw	0
  9193  00169A  0100               	movlb	0	; () banked
  9194  00169C  6F93               	movwf	___flmul@prod& (0+255),b
  9195  00169E  0E00               	movlw	0
  9196  0016A0  6F94               	movwf	(___flmul@prod+1)& (0+255),b
  9197  0016A2  0E00               	movlw	0
  9198  0016A4  6F95               	movwf	(___flmul@prod+2)& (0+255),b
  9199  0016A6  0E00               	movlw	0
  9200  0016A8  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9201  0016AA  0E00               	movlw	0
  9202  0016AC  0100               	movlb	0	; () banked
  9203  0016AE  6F8C               	movwf	___flmul@sign& (0+255),b
  9204  0016B0  D015               	goto	l5845
  9205  0016B2                     l1190:
  9206                           
  9207                           ; BSR set to: 0
  9208  0016B2  C097  F092         	movff	___flmul@temp,___flmul@bexp
  9209                           
  9210                           ; BSR set to: 0
  9211  0016B6  0EFF               	movlw	255
  9212  0016B8  0100               	movlb	0	; () banked
  9213  0016BA  1793               	andwf	___flmul@prod& (0+255),f,b
  9214  0016BC  0EFF               	movlw	255
  9215  0016BE  1794               	andwf	(___flmul@prod+1)& (0+255),f,b
  9216  0016C0  0E7F               	movlw	127
  9217  0016C2  1795               	andwf	(___flmul@prod+2)& (0+255),f,b
  9218  0016C4  0E00               	movlw	0
  9219  0016C6  1796               	andwf	(___flmul@prod+3)& (0+255),f,b
  9220                           
  9221                           ; BSR set to: 0
  9222  0016C8  0100               	movlb	0	; () banked
  9223  0016CA  A192               	btfss	___flmul@bexp& (0+255),0,b
  9224  0016CC  D002               	goto	l5843
  9225                           
  9226                           ; BSR set to: 0
  9227  0016CE  0100               	movlb	0	; () banked
  9228  0016D0  8F95               	bsf	(___flmul@prod+2)& (0+255),7,b
  9229  0016D2                     l5843:
  9230                           
  9231                           ; BSR set to: 0
  9232  0016D2  0100               	movlb	0	; () banked
  9233  0016D4  90D8               	bcf	status,0,c
  9234  0016D6  3192               	rrcf	___flmul@bexp& (0+255),w,b
  9235  0016D8  0100               	movlb	0	; () banked
  9236  0016DA                     L8:
  9237  0016DA  6F96               	movwf	(___flmul@prod+3)& (0+255),b
  9238  0016DC                     l5845:
  9239                           
  9240                           ; BSR set to: 0
  9241  0016DC  0100               	movlb	0	; () banked
  9242  0016DE  518C               	movf	___flmul@sign& (0+255),w,b
  9243  0016E0  0100               	movlb	0	; () banked
  9244  0016E2  1396               	iorwf	(___flmul@prod+3)& (0+255),f,b
  9245                           
  9246                           ; BSR set to: 0
  9247  0016E4  C093  F080         	movff	___flmul@prod,?___flmul
  9248  0016E8  C094  F081         	movff	___flmul@prod+1,?___flmul+1
  9249  0016EC  C095  F082         	movff	___flmul@prod+2,?___flmul+2
  9250  0016F0  C096  F083         	movff	___flmul@prod+3,?___flmul+3
  9251  0016F4  0012               	return	
  9252  0016F6                     __end_of___flmul:
  9253                           	opt stack 0
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           postinc0	equ	0xFEE
  9262                           wreg	equ	0xFE8
  9263                           postdec1	equ	0xFE5
  9264                           fsr1l	equ	0xFE1
  9265                           indf2	equ	0xFDF
  9266                           postinc2	equ	0xFDE
  9267                           postdec2	equ	0xFDD
  9268                           fsr2h	equ	0xFDA
  9269                           fsr2l	equ	0xFD9
  9270                           status	equ	0xFD8
  9271                           
  9272 ;; *************** function ___awmod *****************
  9273 ;; Defined at:
  9274 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  9275 ;; Parameters:    Size  Location     Type
  9276 ;;  dividend        2   18[BANK0 ] int 
  9277 ;;  divisor         2   20[BANK0 ] int 
  9278 ;; Auto vars:     Size  Location     Type
  9279 ;;  sign            1   23[BANK0 ] unsigned char 
  9280 ;;  counter         1   22[BANK0 ] unsigned char 
  9281 ;; Return value:  Size  Location     Type
  9282 ;;                  2   18[BANK0 ] int 
  9283 ;; Registers used:
  9284 ;;		wreg, status,2, status,0
  9285 ;; Tracked objects:
  9286 ;;		On entry : 0/0
  9287 ;;		On exit  : 0/0
  9288 ;;		Unchanged: 0/0
  9289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9290 ;;      Params:         0       4       0       0       0       0       0
  9291 ;;      Locals:         0       2       0       0       0       0       0
  9292 ;;      Temps:          0       0       0       0       0       0       0
  9293 ;;      Totals:         0       6       0       0       0       0       0
  9294 ;;Total ram usage:        6 bytes
  9295 ;; Hardware stack levels used:    1
  9296 ;; Hardware stack levels required when called:   11
  9297 ;; This function calls:
  9298 ;;		Nothing
  9299 ;; This function is called by:
  9300 ;;		_fround
  9301 ;;		_scale
  9302 ;; This function uses a non-reentrant model
  9303 ;;
  9304                           
  9305                           	psect	text36
  9306  002EFC                     __ptext36:
  9307                           	opt stack 0
  9308  002EFC                     ___awmod:
  9309                           	opt stack 15
  9310                           
  9311                           ; BSR set to: 0
  9312                           ;incstack = 0
  9313  002EFC  0E00               	movlw	0
  9314  002EFE  0100               	movlb	0	; () banked
  9315  002F00  6F77               	movwf	___awmod@sign& (0+255),b
  9316                           
  9317                           ; BSR set to: 0
  9318  002F02  0100               	movlb	0	; () banked
  9319  002F04  AF73               	btfss	(___awmod@dividend+1)& (0+255),7,b
  9320  002F06  D008               	goto	l5903
  9321                           
  9322                           ; BSR set to: 0
  9323  002F08  0100               	movlb	0	; () banked
  9324  002F0A  6D72               	negf	___awmod@dividend& (0+255),b
  9325  002F0C  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9326  002F0E  B0D8               	btfsc	status,0,c
  9327  002F10  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9328                           
  9329                           ; BSR set to: 0
  9330  002F12  0E01               	movlw	1
  9331  002F14  0100               	movlb	0	; () banked
  9332  002F16  6F77               	movwf	___awmod@sign& (0+255),b
  9333  002F18                     l5903:
  9334                           
  9335                           ; BSR set to: 0
  9336  002F18  0100               	movlb	0	; () banked
  9337  002F1A  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9338  002F1C  D005               	goto	l5907
  9339                           
  9340                           ; BSR set to: 0
  9341  002F1E  0100               	movlb	0	; () banked
  9342  002F20  6D74               	negf	___awmod@divisor& (0+255),b
  9343  002F22  1F75               	comf	(___awmod@divisor+1)& (0+255),f,b
  9344  002F24  B0D8               	btfsc	status,0,c
  9345  002F26  2B75               	incf	(___awmod@divisor+1)& (0+255),f,b
  9346  002F28                     l5907:
  9347                           
  9348                           ; BSR set to: 0
  9349  002F28  0100               	movlb	0	; () banked
  9350  002F2A  5174               	movf	___awmod@divisor& (0+255),w,b
  9351  002F2C  0100               	movlb	0	; () banked
  9352  002F2E  1175               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  9353  002F30  B4D8               	btfsc	status,2,c
  9354  002F32  D026               	goto	l5923
  9355                           
  9356                           ; BSR set to: 0
  9357  002F34  0E01               	movlw	1
  9358  002F36  0100               	movlb	0	; () banked
  9359  002F38  6F76               	movwf	___awmod@counter& (0+255),b
  9360  002F3A  D006               	goto	l5913
  9361  002F3C                     l5911:
  9362                           
  9363                           ; BSR set to: 0
  9364  002F3C  0100               	movlb	0	; () banked
  9365  002F3E  90D8               	bcf	status,0,c
  9366  002F40  3774               	rlcf	___awmod@divisor& (0+255),f,b
  9367  002F42  3775               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  9368  002F44  0100               	movlb	0	; () banked
  9369  002F46  2B76               	incf	___awmod@counter& (0+255),f,b
  9370  002F48                     l5913:
  9371                           
  9372                           ; BSR set to: 0
  9373  002F48  0100               	movlb	0	; () banked
  9374  002F4A  AF75               	btfss	(___awmod@divisor+1)& (0+255),7,b
  9375  002F4C  D7F7               	goto	l5911
  9376  002F4E                     l5915:
  9377                           
  9378                           ; BSR set to: 0
  9379  002F4E  0100               	movlb	0	; () banked
  9380  002F50  5174               	movf	___awmod@divisor& (0+255),w,b
  9381  002F52  0100               	movlb	0	; () banked
  9382  002F54  5D72               	subwf	___awmod@dividend& (0+255),w,b
  9383  002F56  0100               	movlb	0	; () banked
  9384  002F58  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9385  002F5A  0100               	movlb	0	; () banked
  9386  002F5C  5973               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  9387  002F5E  A0D8               	btfss	status,0,c
  9388  002F60  D008               	goto	l5919
  9389                           
  9390                           ; BSR set to: 0
  9391  002F62  0100               	movlb	0	; () banked
  9392  002F64  5174               	movf	___awmod@divisor& (0+255),w,b
  9393  002F66  0100               	movlb	0	; () banked
  9394  002F68  5F72               	subwf	___awmod@dividend& (0+255),f,b
  9395  002F6A  0100               	movlb	0	; () banked
  9396  002F6C  5175               	movf	(___awmod@divisor+1)& (0+255),w,b
  9397  002F6E  0100               	movlb	0	; () banked
  9398  002F70  5B73               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  9399  002F72                     l5919:
  9400                           
  9401                           ; BSR set to: 0
  9402  002F72  0100               	movlb	0	; () banked
  9403  002F74  90D8               	bcf	status,0,c
  9404  002F76  3375               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  9405  002F78  3374               	rrcf	___awmod@divisor& (0+255),f,b
  9406                           
  9407                           ; BSR set to: 0
  9408  002F7A  0100               	movlb	0	; () banked
  9409  002F7C  2F76               	decfsz	___awmod@counter& (0+255),f,b
  9410  002F7E  D7E7               	goto	l5915
  9411  002F80                     l5923:
  9412                           
  9413                           ; BSR set to: 0
  9414  002F80  0100               	movlb	0	; () banked
  9415  002F82  5177               	movf	___awmod@sign& (0+255),w,b
  9416  002F84  0100               	movlb	0	; () banked
  9417  002F86  B4D8               	btfsc	status,2,c
  9418  002F88  D005               	goto	l5927
  9419                           
  9420                           ; BSR set to: 0
  9421  002F8A  0100               	movlb	0	; () banked
  9422  002F8C  6D72               	negf	___awmod@dividend& (0+255),b
  9423  002F8E  1F73               	comf	(___awmod@dividend+1)& (0+255),f,b
  9424  002F90  B0D8               	btfsc	status,0,c
  9425  002F92  2B73               	incf	(___awmod@dividend+1)& (0+255),f,b
  9426  002F94                     l5927:
  9427                           
  9428                           ; BSR set to: 0
  9429  002F94  C072  F072         	movff	___awmod@dividend,?___awmod
  9430  002F98  C073  F073         	movff	___awmod@dividend+1,?___awmod+1
  9431  002F9C  0012               	return	
  9432  002F9E                     __end_of___awmod:
  9433                           	opt stack 0
  9434                           tblptru	equ	0xFF8
  9435                           tblptrh	equ	0xFF7
  9436                           tblptrl	equ	0xFF6
  9437                           tablat	equ	0xFF5
  9438                           prodh	equ	0xFF4
  9439                           prodl	equ	0xFF3
  9440                           intcon	equ	0xFF2
  9441                           postinc0	equ	0xFEE
  9442                           wreg	equ	0xFE8
  9443                           postdec1	equ	0xFE5
  9444                           fsr1l	equ	0xFE1
  9445                           indf2	equ	0xFDF
  9446                           postinc2	equ	0xFDE
  9447                           postdec2	equ	0xFDD
  9448                           fsr2h	equ	0xFDA
  9449                           fsr2l	equ	0xFD9
  9450                           status	equ	0xFD8
  9451                           
  9452 ;; *************** function ___awdiv *****************
  9453 ;; Defined at:
  9454 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  9455 ;; Parameters:    Size  Location     Type
  9456 ;;  dividend        2   24[BANK0 ] int 
  9457 ;;  divisor         2   26[BANK0 ] int 
  9458 ;; Auto vars:     Size  Location     Type
  9459 ;;  quotient        2   30[BANK0 ] int 
  9460 ;;  sign            1   29[BANK0 ] unsigned char 
  9461 ;;  counter         1   28[BANK0 ] unsigned char 
  9462 ;; Return value:  Size  Location     Type
  9463 ;;                  2   24[BANK0 ] int 
  9464 ;; Registers used:
  9465 ;;		wreg, status,2, status,0
  9466 ;; Tracked objects:
  9467 ;;		On entry : 0/0
  9468 ;;		On exit  : 0/0
  9469 ;;		Unchanged: 0/0
  9470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9471 ;;      Params:         0       4       0       0       0       0       0
  9472 ;;      Locals:         0       4       0       0       0       0       0
  9473 ;;      Temps:          0       0       0       0       0       0       0
  9474 ;;      Totals:         0       8       0       0       0       0       0
  9475 ;;Total ram usage:        8 bytes
  9476 ;; Hardware stack levels used:    1
  9477 ;; Hardware stack levels required when called:   11
  9478 ;; This function calls:
  9479 ;;		Nothing
  9480 ;; This function is called by:
  9481 ;;		_fround
  9482 ;;		_scale
  9483 ;;		_printf
  9484 ;; This function uses a non-reentrant model
  9485 ;;
  9486                           
  9487                           	psect	text37
  9488  002CE0                     __ptext37:
  9489                           	opt stack 0
  9490  002CE0                     ___awdiv:
  9491                           	opt stack 15
  9492                           
  9493                           ; BSR set to: 0
  9494                           ;incstack = 0
  9495  002CE0  0E00               	movlw	0
  9496  002CE2  0100               	movlb	0	; () banked
  9497  002CE4  6F7D               	movwf	___awdiv@sign& (0+255),b
  9498                           
  9499                           ; BSR set to: 0
  9500  002CE6  0100               	movlb	0	; () banked
  9501  002CE8  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9502  002CEA  D008               	goto	l5859
  9503                           
  9504                           ; BSR set to: 0
  9505  002CEC  0100               	movlb	0	; () banked
  9506  002CEE  6D7A               	negf	___awdiv@divisor& (0+255),b
  9507  002CF0  1F7B               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9508  002CF2  B0D8               	btfsc	status,0,c
  9509  002CF4  2B7B               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9510                           
  9511                           ; BSR set to: 0
  9512  002CF6  0E01               	movlw	1
  9513  002CF8  0100               	movlb	0	; () banked
  9514  002CFA  6F7D               	movwf	___awdiv@sign& (0+255),b
  9515  002CFC                     l5859:
  9516                           
  9517                           ; BSR set to: 0
  9518  002CFC  0100               	movlb	0	; () banked
  9519  002CFE  AF79               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9520  002D00  D008               	goto	l5865
  9521                           
  9522                           ; BSR set to: 0
  9523  002D02  0100               	movlb	0	; () banked
  9524  002D04  6D78               	negf	___awdiv@dividend& (0+255),b
  9525  002D06  1F79               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9526  002D08  B0D8               	btfsc	status,0,c
  9527  002D0A  2B79               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9528                           
  9529                           ; BSR set to: 0
  9530  002D0C  0E01               	movlw	1
  9531  002D0E  0100               	movlb	0	; () banked
  9532  002D10  1B7D               	xorwf	___awdiv@sign& (0+255),f,b
  9533  002D12                     l5865:
  9534                           
  9535                           ; BSR set to: 0
  9536  002D12  0E00               	movlw	0
  9537  002D14  0100               	movlb	0	; () banked
  9538  002D16  6F7F               	movwf	(___awdiv@quotient+1)& (0+255),b
  9539  002D18  0E00               	movlw	0
  9540  002D1A  6F7E               	movwf	___awdiv@quotient& (0+255),b
  9541                           
  9542                           ; BSR set to: 0
  9543  002D1C  0100               	movlb	0	; () banked
  9544  002D1E  517A               	movf	___awdiv@divisor& (0+255),w,b
  9545  002D20  0100               	movlb	0	; () banked
  9546  002D22  117B               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9547  002D24  B4D8               	btfsc	status,2,c
  9548  002D26  D02C               	goto	l5887
  9549                           
  9550                           ; BSR set to: 0
  9551  002D28  0E01               	movlw	1
  9552  002D2A  0100               	movlb	0	; () banked
  9553  002D2C  6F7C               	movwf	___awdiv@counter& (0+255),b
  9554  002D2E  D006               	goto	l5873
  9555  002D30                     l5871:
  9556                           
  9557                           ; BSR set to: 0
  9558  002D30  0100               	movlb	0	; () banked
  9559  002D32  90D8               	bcf	status,0,c
  9560  002D34  377A               	rlcf	___awdiv@divisor& (0+255),f,b
  9561  002D36  377B               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9562  002D38  0100               	movlb	0	; () banked
  9563  002D3A  2B7C               	incf	___awdiv@counter& (0+255),f,b
  9564  002D3C                     l5873:
  9565                           
  9566                           ; BSR set to: 0
  9567  002D3C  0100               	movlb	0	; () banked
  9568  002D3E  AF7B               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9569  002D40  D7F7               	goto	l5871
  9570  002D42                     l5875:
  9571                           
  9572                           ; BSR set to: 0
  9573  002D42  0100               	movlb	0	; () banked
  9574  002D44  90D8               	bcf	status,0,c
  9575  002D46  377E               	rlcf	___awdiv@quotient& (0+255),f,b
  9576  002D48  377F               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9577                           
  9578                           ; BSR set to: 0
  9579  002D4A  0100               	movlb	0	; () banked
  9580  002D4C  517A               	movf	___awdiv@divisor& (0+255),w,b
  9581  002D4E  0100               	movlb	0	; () banked
  9582  002D50  5D78               	subwf	___awdiv@dividend& (0+255),w,b
  9583  002D52  0100               	movlb	0	; () banked
  9584  002D54  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9585  002D56  0100               	movlb	0	; () banked
  9586  002D58  5979               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9587  002D5A  A0D8               	btfss	status,0,c
  9588  002D5C  D00A               	goto	l5883
  9589                           
  9590                           ; BSR set to: 0
  9591  002D5E  0100               	movlb	0	; () banked
  9592  002D60  517A               	movf	___awdiv@divisor& (0+255),w,b
  9593  002D62  0100               	movlb	0	; () banked
  9594  002D64  5F78               	subwf	___awdiv@dividend& (0+255),f,b
  9595  002D66  0100               	movlb	0	; () banked
  9596  002D68  517B               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9597  002D6A  0100               	movlb	0	; () banked
  9598  002D6C  5B79               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9599                           
  9600                           ; BSR set to: 0
  9601  002D6E  0100               	movlb	0	; () banked
  9602  002D70  817E               	bsf	___awdiv@quotient& (0+255),0,b
  9603  002D72                     l5883:
  9604                           
  9605                           ; BSR set to: 0
  9606  002D72  0100               	movlb	0	; () banked
  9607  002D74  90D8               	bcf	status,0,c
  9608  002D76  337B               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9609  002D78  337A               	rrcf	___awdiv@divisor& (0+255),f,b
  9610                           
  9611                           ; BSR set to: 0
  9612  002D7A  0100               	movlb	0	; () banked
  9613  002D7C  2F7C               	decfsz	___awdiv@counter& (0+255),f,b
  9614  002D7E  D7E1               	goto	l5875
  9615  002D80                     l5887:
  9616                           
  9617                           ; BSR set to: 0
  9618  002D80  0100               	movlb	0	; () banked
  9619  002D82  517D               	movf	___awdiv@sign& (0+255),w,b
  9620  002D84  0100               	movlb	0	; () banked
  9621  002D86  B4D8               	btfsc	status,2,c
  9622  002D88  D005               	goto	l5891
  9623                           
  9624                           ; BSR set to: 0
  9625  002D8A  0100               	movlb	0	; () banked
  9626  002D8C  6D7E               	negf	___awdiv@quotient& (0+255),b
  9627  002D8E  1F7F               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9628  002D90  B0D8               	btfsc	status,0,c
  9629  002D92  2B7F               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9630  002D94                     l5891:
  9631                           
  9632                           ; BSR set to: 0
  9633  002D94  C07E  F078         	movff	___awdiv@quotient,?___awdiv
  9634  002D98  C07F  F079         	movff	___awdiv@quotient+1,?___awdiv+1
  9635  002D9C  0012               	return	
  9636  002D9E                     __end_of___awdiv:
  9637                           	opt stack 0
  9638                           tblptru	equ	0xFF8
  9639                           tblptrh	equ	0xFF7
  9640                           tblptrl	equ	0xFF6
  9641                           tablat	equ	0xFF5
  9642                           prodh	equ	0xFF4
  9643                           prodl	equ	0xFF3
  9644                           intcon	equ	0xFF2
  9645                           postinc0	equ	0xFEE
  9646                           wreg	equ	0xFE8
  9647                           postdec1	equ	0xFE5
  9648                           fsr1l	equ	0xFE1
  9649                           indf2	equ	0xFDF
  9650                           postinc2	equ	0xFDE
  9651                           postdec2	equ	0xFDD
  9652                           fsr2h	equ	0xFDA
  9653                           fsr2l	equ	0xFD9
  9654                           status	equ	0xFD8
  9655                           
  9656 ;; *************** function __tdiv_to_l_ *****************
  9657 ;; Defined at:
  9658 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  9659 ;; Parameters:    Size  Location     Type
  9660 ;;  f1              4   18[BANK0 ] float 
  9661 ;;  f2              4   22[BANK0 ] float 
  9662 ;; Auto vars:     Size  Location     Type
  9663 ;;  quot            4   29[BANK0 ] unsigned long 
  9664 ;;  exp1            1   34[BANK0 ] unsigned char 
  9665 ;;  cntr            1   33[BANK0 ] unsigned char 
  9666 ;; Return value:  Size  Location     Type
  9667 ;;                  4   18[BANK0 ] unsigned long 
  9668 ;; Registers used:
  9669 ;;		wreg, status,2, status,0
  9670 ;; Tracked objects:
  9671 ;;		On entry : 0/0
  9672 ;;		On exit  : 0/0
  9673 ;;		Unchanged: 0/0
  9674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9675 ;;      Params:         0       8       0       0       0       0       0
  9676 ;;      Locals:         0       6       0       0       0       0       0
  9677 ;;      Temps:          0       3       0       0       0       0       0
  9678 ;;      Totals:         0      17       0       0       0       0       0
  9679 ;;Total ram usage:       17 bytes
  9680 ;; Hardware stack levels used:    1
  9681 ;; Hardware stack levels required when called:   11
  9682 ;; This function calls:
  9683 ;;		Nothing
  9684 ;; This function is called by:
  9685 ;;		_printf
  9686 ;; This function uses a non-reentrant model
  9687 ;;
  9688                           
  9689                           	psect	text38
  9690  0024C4                     __ptext38:
  9691                           	opt stack 0
  9692  0024C4                     __tdiv_to_l_:
  9693                           	opt stack 16
  9694                           
  9695                           ; BSR set to: 0
  9696                           ;incstack = 0
  9697  0024C4  C074  F07A         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9698  0024C8  0100               	movlb	0	; () banked
  9699  0024CA  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9700  0024CC  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9701  0024CE  0100               	movlb	0	; () banked
  9702  0024D0  3573               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9703  0024D2  0100               	movlb	0	; () banked
  9704  0024D4  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9705  0024D6  E301               	bnc	u6951
  9706  0024D8  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9707  0024DA                     u6951:
  9708  0024DA  0100               	movlb	0	; () banked
  9709  0024DC  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9710  0024DE  0100               	movlb	0	; () banked
  9711  0024E0  6F82               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9712  0024E2  0100               	movlb	0	; () banked
  9713  0024E4  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9714  0024E6  A4D8               	btfss	status,2,c
  9715  0024E8  D00A               	goto	l6005
  9716                           
  9717                           ; BSR set to: 0
  9718  0024EA  0E00               	movlw	0
  9719  0024EC  0100               	movlb	0	; () banked
  9720  0024EE  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9721  0024F0  0E00               	movlw	0
  9722  0024F2  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9723  0024F4  0E00               	movlw	0
  9724  0024F6  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9725  0024F8  0E00               	movlw	0
  9726  0024FA  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9727                           
  9728                           ; BSR set to: 0
  9729  0024FC  0012               	return	
  9730  0024FE                     l6005:
  9731                           
  9732                           ; BSR set to: 0
  9733  0024FE  C078  F07A         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9734  002502  0100               	movlb	0	; () banked
  9735  002504  6B7B               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9736  002506  6B7C               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9737  002508  0100               	movlb	0	; () banked
  9738  00250A  3577               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9739  00250C  0100               	movlb	0	; () banked
  9740  00250E  377A               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9741  002510  E301               	bnc	u6971
  9742  002512  817B               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9743  002514                     u6971:
  9744  002514  0100               	movlb	0	; () banked
  9745  002516  517A               	movf	??__tdiv_to_l_& (0+255),w,b
  9746  002518  0100               	movlb	0	; () banked
  9747  00251A  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9748  00251C  0100               	movlb	0	; () banked
  9749  00251E  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9750  002520  A4D8               	btfss	status,2,c
  9751  002522  D00A               	goto	l6011
  9752                           
  9753                           ; BSR set to: 0
  9754  002524  0E00               	movlw	0
  9755  002526  0100               	movlb	0	; () banked
  9756  002528  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9757  00252A  0E00               	movlw	0
  9758  00252C  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9759  00252E  0E00               	movlw	0
  9760  002530  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9761  002532  0E00               	movlw	0
  9762  002534  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9763                           
  9764                           ; BSR set to: 0
  9765  002536  0012               	return	
  9766  002538                     l6011:
  9767                           
  9768                           ; BSR set to: 0
  9769  002538  0100               	movlb	0	; () banked
  9770  00253A  8F73               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9771                           
  9772                           ; BSR set to: 0
  9773  00253C  0EFF               	movlw	255
  9774  00253E  0100               	movlb	0	; () banked
  9775  002540  1772               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9776  002542  0EFF               	movlw	255
  9777  002544  0100               	movlb	0	; () banked
  9778  002546  1773               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9779  002548  0E00               	movlw	0
  9780  00254A  0100               	movlb	0	; () banked
  9781  00254C  1774               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9782  00254E  0100               	movlb	0	; () banked
  9783  002550  8F77               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9784                           
  9785                           ; BSR set to: 0
  9786  002552  0EFF               	movlw	255
  9787  002554  0100               	movlb	0	; () banked
  9788  002556  1776               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9789  002558  0EFF               	movlw	255
  9790  00255A  0100               	movlb	0	; () banked
  9791  00255C  1777               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9792  00255E  0E00               	movlw	0
  9793  002560  0100               	movlb	0	; () banked
  9794  002562  1778               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9795                           
  9796                           ; BSR set to: 0
  9797  002564  0E00               	movlw	0
  9798  002566  0100               	movlb	0	; () banked
  9799  002568  6F7D               	movwf	__tdiv_to_l_@quot& (0+255),b
  9800  00256A  0E00               	movlw	0
  9801  00256C  6F7E               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9802  00256E  0E00               	movlw	0
  9803  002570  6F7F               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9804  002572  0E00               	movlw	0
  9805  002574  6F80               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9806                           
  9807                           ; BSR set to: 0
  9808  002576  0E7F               	movlw	127
  9809  002578  0100               	movlb	0	; () banked
  9810  00257A  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9811                           
  9812                           ; BSR set to: 0
  9813  00257C  0100               	movlb	0	; () banked
  9814  00257E  5181               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9815  002580  0F98               	addlw	152
  9816  002582  0100               	movlb	0	; () banked
  9817  002584  5F82               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9818                           
  9819                           ; BSR set to: 0
  9820  002586  0E18               	movlw	24
  9821  002588  0100               	movlb	0	; () banked
  9822  00258A  6F81               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9823  00258C                     l916:
  9824                           
  9825                           ; BSR set to: 0
  9826  00258C  0100               	movlb	0	; () banked
  9827  00258E  90D8               	bcf	status,0,c
  9828  002590  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9829  002592  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9830  002594  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9831  002596  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9832                           
  9833                           ; BSR set to: 0
  9834  002598  0100               	movlb	0	; () banked
  9835  00259A  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9836  00259C  0100               	movlb	0	; () banked
  9837  00259E  5D72               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9838  0025A0  0100               	movlb	0	; () banked
  9839  0025A2  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9840  0025A4  0100               	movlb	0	; () banked
  9841  0025A6  5973               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9842  0025A8  0100               	movlb	0	; () banked
  9843  0025AA  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9844  0025AC  0100               	movlb	0	; () banked
  9845  0025AE  5974               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9846  0025B0  A0D8               	btfss	status,0,c
  9847  0025B2  D00E               	goto	l917
  9848                           
  9849                           ; BSR set to: 0
  9850  0025B4  0100               	movlb	0	; () banked
  9851  0025B6  5176               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9852  0025B8  0100               	movlb	0	; () banked
  9853  0025BA  5F72               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9854  0025BC  0100               	movlb	0	; () banked
  9855  0025BE  5177               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9856  0025C0  0100               	movlb	0	; () banked
  9857  0025C2  5B73               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9858  0025C4  0100               	movlb	0	; () banked
  9859  0025C6  5178               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9860  0025C8  0100               	movlb	0	; () banked
  9861  0025CA  5B74               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9862                           
  9863                           ; BSR set to: 0
  9864  0025CC  0100               	movlb	0	; () banked
  9865  0025CE  817D               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9866  0025D0                     l917:
  9867                           
  9868                           ; BSR set to: 0
  9869  0025D0  0100               	movlb	0	; () banked
  9870  0025D2  90D8               	bcf	status,0,c
  9871  0025D4  3772               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9872  0025D6  3773               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9873  0025D8  3774               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9874                           
  9875                           ; BSR set to: 0
  9876  0025DA  0100               	movlb	0	; () banked
  9877  0025DC  2F81               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9878  0025DE  D7D6               	goto	l916
  9879                           
  9880                           ; BSR set to: 0
  9881                           
  9882                           ; BSR set to: 0
  9883  0025E0  0100               	movlb	0	; () banked
  9884  0025E2  AF82               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9885  0025E4  D01A               	goto	l6045
  9886                           
  9887                           ; BSR set to: 0
  9888  0025E6  0100               	movlb	0	; () banked
  9889  0025E8  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9890  0025EA  0A80               	xorlw	128
  9891  0025EC  0F97               	addlw	151
  9892  0025EE  B0D8               	btfsc	status,0,c
  9893  0025F0  D00A               	goto	l6041
  9894                           
  9895                           ; BSR set to: 0
  9896  0025F2  0E00               	movlw	0
  9897  0025F4  0100               	movlb	0	; () banked
  9898  0025F6  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9899  0025F8  0E00               	movlw	0
  9900  0025FA  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9901  0025FC  0E00               	movlw	0
  9902  0025FE  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9903  002600  0E00               	movlw	0
  9904  002602  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9905                           
  9906                           ; BSR set to: 0
  9907  002604  0012               	return	
  9908  002606                     l6041:
  9909                           
  9910                           ; BSR set to: 0
  9911  002606  0100               	movlb	0	; () banked
  9912  002608  90D8               	bcf	status,0,c
  9913  00260A  3380               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9914  00260C  337F               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9915  00260E  337E               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9916  002610  337D               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9917                           
  9918                           ; BSR set to: 0
  9919  002612  0100               	movlb	0	; () banked
  9920  002614  3F82               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9921  002616  D7F7               	goto	l6041
  9922                           
  9923                           ; BSR set to: 0
  9924  002618  D01B               	goto	l923
  9925  00261A                     l6045:
  9926                           
  9927                           ; BSR set to: 0
  9928  00261A  0E17               	movlw	23
  9929  00261C  0100               	movlb	0	; () banked
  9930  00261E  6582               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9931  002620  D012               	goto	l6053
  9932                           
  9933                           ; BSR set to: 0
  9934  002622  0E00               	movlw	0
  9935  002624  0100               	movlb	0	; () banked
  9936  002626  6F72               	movwf	?__tdiv_to_l_& (0+255),b
  9937  002628  0E00               	movlw	0
  9938  00262A  6F73               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9939  00262C  0E00               	movlw	0
  9940  00262E  6F74               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9941  002630  0E00               	movlw	0
  9942  002632  6F75               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9943                           
  9944                           ; BSR set to: 0
  9945  002634  0012               	return	
  9946  002636                     l6051:
  9947                           
  9948                           ; BSR set to: 0
  9949  002636  0100               	movlb	0	; () banked
  9950  002638  90D8               	bcf	status,0,c
  9951  00263A  377D               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9952  00263C  377E               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9953  00263E  377F               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9954  002640  3780               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9955  002642  0100               	movlb	0	; () banked
  9956  002644  0782               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9957  002646                     l6053:
  9958                           
  9959                           ; BSR set to: 0
  9960  002646  0100               	movlb	0	; () banked
  9961  002648  5182               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9962  00264A  0100               	movlb	0	; () banked
  9963  00264C  A4D8               	btfss	status,2,c
  9964  00264E  D7F3               	goto	l6051
  9965  002650                     l923:
  9966                           
  9967                           ; BSR set to: 0
  9968  002650  C07D  F072         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9969  002654  C07E  F073         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9970  002658  C07F  F074         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9971  00265C  C080  F075         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9972                           
  9973                           ; BSR set to: 0
  9974  002660  0012               	return		;funcret
  9975  002662                     __end_of__tdiv_to_l_:
  9976                           	opt stack 0
  9977                           tblptru	equ	0xFF8
  9978                           tblptrh	equ	0xFF7
  9979                           tblptrl	equ	0xFF6
  9980                           tablat	equ	0xFF5
  9981                           prodh	equ	0xFF4
  9982                           prodl	equ	0xFF3
  9983                           intcon	equ	0xFF2
  9984                           postinc0	equ	0xFEE
  9985                           wreg	equ	0xFE8
  9986                           postdec1	equ	0xFE5
  9987                           fsr1l	equ	0xFE1
  9988                           indf2	equ	0xFDF
  9989                           postinc2	equ	0xFDE
  9990                           postdec2	equ	0xFDD
  9991                           fsr2h	equ	0xFDA
  9992                           fsr2l	equ	0xFD9
  9993                           status	equ	0xFD8
  9994                           
  9995 ;; *************** function __div_to_l_ *****************
  9996 ;; Defined at:
  9997 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  9998 ;; Parameters:    Size  Location     Type
  9999 ;;  f1              4   18[BANK0 ] unsigned long 
 10000 ;;  f2              4   22[BANK0 ] unsigned long 
 10001 ;; Auto vars:     Size  Location     Type
 10002 ;;  quot            4   26[BANK0 ] unsigned long 
 10003 ;;  exp1            1   31[BANK0 ] unsigned char 
 10004 ;;  cntr            1   30[BANK0 ] unsigned char 
 10005 ;; Return value:  Size  Location     Type
 10006 ;;                  4   18[BANK0 ] unsigned long 
 10007 ;; Registers used:
 10008 ;;		wreg, status,2, status,0
 10009 ;; Tracked objects:
 10010 ;;		On entry : 0/0
 10011 ;;		On exit  : 0/0
 10012 ;;		Unchanged: 0/0
 10013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10014 ;;      Params:         0       8       0       0       0       0       0
 10015 ;;      Locals:         0       6       0       0       0       0       0
 10016 ;;      Temps:          0       0       0       0       0       0       0
 10017 ;;      Totals:         0      14       0       0       0       0       0
 10018 ;;Total ram usage:       14 bytes
 10019 ;; Hardware stack levels used:    1
 10020 ;; Hardware stack levels required when called:   11
 10021 ;; This function calls:
 10022 ;;		Nothing
 10023 ;; This function is called by:
 10024 ;;		_printf
 10025 ;; This function uses a non-reentrant model
 10026 ;;
 10027                           
 10028                           	psect	text39
 10029  0027F2                     __ptext39:
 10030                           	opt stack 0
 10031  0027F2                     __div_to_l_:
 10032                           	opt stack 16
 10033                           
 10034                           ; BSR set to: 0
 10035                           ;incstack = 0
 10036  0027F2  0100               	movlb	0	; () banked
 10037  0027F4  3574               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
 10038  0027F6  3575               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
 10039  0027F8  0100               	movlb	0	; () banked
 10040  0027FA  6F7F               	movwf	__div_to_l_@exp1& (0+255),b
 10041  0027FC  0100               	movlb	0	; () banked
 10042  0027FE  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10043  002800  A4D8               	btfss	status,2,c
 10044  002802  D00A               	goto	l6061
 10045                           
 10046                           ; BSR set to: 0
 10047  002804  0E00               	movlw	0
 10048  002806  0100               	movlb	0	; () banked
 10049  002808  6F72               	movwf	?__div_to_l_& (0+255),b
 10050  00280A  0E00               	movlw	0
 10051  00280C  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10052  00280E  0E00               	movlw	0
 10053  002810  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10054  002812  0E00               	movlw	0
 10055  002814  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10056                           
 10057                           ; BSR set to: 0
 10058  002816  0012               	return	
 10059  002818                     l6061:
 10060                           
 10061                           ; BSR set to: 0
 10062  002818  0100               	movlb	0	; () banked
 10063  00281A  3578               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
 10064  00281C  3579               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
 10065  00281E  0100               	movlb	0	; () banked
 10066  002820  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10067  002822  0100               	movlb	0	; () banked
 10068  002824  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10069  002826  A4D8               	btfss	status,2,c
 10070  002828  D00A               	goto	l6067
 10071                           
 10072                           ; BSR set to: 0
 10073  00282A  0E00               	movlw	0
 10074  00282C  0100               	movlb	0	; () banked
 10075  00282E  6F72               	movwf	?__div_to_l_& (0+255),b
 10076  002830  0E00               	movlw	0
 10077  002832  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10078  002834  0E00               	movlw	0
 10079  002836  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10080  002838  0E00               	movlw	0
 10081  00283A  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10082                           
 10083                           ; BSR set to: 0
 10084  00283C  0012               	return	
 10085  00283E                     l6067:
 10086                           
 10087                           ; BSR set to: 0
 10088  00283E  0100               	movlb	0	; () banked
 10089  002840  8F74               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
 10090                           
 10091                           ; BSR set to: 0
 10092  002842  0EFF               	movlw	255
 10093  002844  0100               	movlb	0	; () banked
 10094  002846  1772               	andwf	__div_to_l_@f1& (0+255),f,b
 10095  002848  0EFF               	movlw	255
 10096  00284A  1773               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
 10097  00284C  0EFF               	movlw	255
 10098  00284E  1774               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
 10099  002850  0E00               	movlw	0
 10100  002852  1775               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
 10101                           
 10102                           ; BSR set to: 0
 10103  002854  0100               	movlb	0	; () banked
 10104  002856  8F78               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
 10105  002858  0EFF               	movlw	255
 10106  00285A  0100               	movlb	0	; () banked
 10107  00285C  1776               	andwf	__div_to_l_@f2& (0+255),f,b
 10108  00285E  0EFF               	movlw	255
 10109  002860  1777               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
 10110  002862  0EFF               	movlw	255
 10111  002864  1778               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
 10112  002866  0E00               	movlw	0
 10113  002868  1779               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
 10114                           
 10115                           ; BSR set to: 0
 10116  00286A  0E00               	movlw	0
 10117  00286C  0100               	movlb	0	; () banked
 10118  00286E  6F7A               	movwf	__div_to_l_@quot& (0+255),b
 10119  002870  0E00               	movlw	0
 10120  002872  6F7B               	movwf	(__div_to_l_@quot+1)& (0+255),b
 10121  002874  0E00               	movlw	0
 10122  002876  6F7C               	movwf	(__div_to_l_@quot+2)& (0+255),b
 10123  002878  0E00               	movlw	0
 10124  00287A  6F7D               	movwf	(__div_to_l_@quot+3)& (0+255),b
 10125                           
 10126                           ; BSR set to: 0
 10127  00287C  0E7F               	movlw	127
 10128  00287E  0100               	movlb	0	; () banked
 10129  002880  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10130                           
 10131                           ; BSR set to: 0
 10132  002882  0100               	movlb	0	; () banked
 10133  002884  517E               	movf	__div_to_l_@cntr& (0+255),w,b
 10134  002886  0FA0               	addlw	160
 10135  002888  0100               	movlb	0	; () banked
 10136  00288A  5F7F               	subwf	__div_to_l_@exp1& (0+255),f,b
 10137                           
 10138                           ; BSR set to: 0
 10139  00288C  0E20               	movlw	32
 10140  00288E  0100               	movlb	0	; () banked
 10141  002890  6F7E               	movwf	__div_to_l_@cntr& (0+255),b
 10142  002892                     l6081:
 10143                           
 10144                           ; BSR set to: 0
 10145  002892  0100               	movlb	0	; () banked
 10146  002894  90D8               	bcf	status,0,c
 10147  002896  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10148  002898  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10149  00289A  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10150  00289C  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10151                           
 10152                           ; BSR set to: 0
 10153  00289E  0100               	movlb	0	; () banked
 10154  0028A0  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10155  0028A2  0100               	movlb	0	; () banked
 10156  0028A4  5D72               	subwf	__div_to_l_@f1& (0+255),w,b
 10157  0028A6  0100               	movlb	0	; () banked
 10158  0028A8  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10159  0028AA  0100               	movlb	0	; () banked
 10160  0028AC  5973               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
 10161  0028AE  0100               	movlb	0	; () banked
 10162  0028B0  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10163  0028B2  0100               	movlb	0	; () banked
 10164  0028B4  5974               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
 10165  0028B6  0100               	movlb	0	; () banked
 10166  0028B8  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10167  0028BA  0100               	movlb	0	; () banked
 10168  0028BC  5975               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
 10169  0028BE  A0D8               	btfss	status,0,c
 10170  0028C0  D012               	goto	l6089
 10171                           
 10172                           ; BSR set to: 0
 10173  0028C2  0100               	movlb	0	; () banked
 10174  0028C4  5176               	movf	__div_to_l_@f2& (0+255),w,b
 10175  0028C6  0100               	movlb	0	; () banked
 10176  0028C8  5F72               	subwf	__div_to_l_@f1& (0+255),f,b
 10177  0028CA  0100               	movlb	0	; () banked
 10178  0028CC  5177               	movf	(__div_to_l_@f2+1)& (0+255),w,b
 10179  0028CE  0100               	movlb	0	; () banked
 10180  0028D0  5B73               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
 10181  0028D2  0100               	movlb	0	; () banked
 10182  0028D4  5178               	movf	(__div_to_l_@f2+2)& (0+255),w,b
 10183  0028D6  0100               	movlb	0	; () banked
 10184  0028D8  5B74               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
 10185  0028DA  0100               	movlb	0	; () banked
 10186  0028DC  5179               	movf	(__div_to_l_@f2+3)& (0+255),w,b
 10187  0028DE  0100               	movlb	0	; () banked
 10188  0028E0  5B75               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
 10189                           
 10190                           ; BSR set to: 0
 10191  0028E2  0100               	movlb	0	; () banked
 10192  0028E4  817A               	bsf	__div_to_l_@quot& (0+255),0,b
 10193  0028E6                     l6089:
 10194                           
 10195                           ; BSR set to: 0
 10196  0028E6  0100               	movlb	0	; () banked
 10197  0028E8  90D8               	bcf	status,0,c
 10198  0028EA  3772               	rlcf	__div_to_l_@f1& (0+255),f,b
 10199  0028EC  3773               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
 10200  0028EE  3774               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
 10201  0028F0  3775               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
 10202                           
 10203                           ; BSR set to: 0
 10204  0028F2  0100               	movlb	0	; () banked
 10205  0028F4  2F7E               	decfsz	__div_to_l_@cntr& (0+255),f,b
 10206  0028F6  D7CD               	goto	l6081
 10207                           
 10208                           ; BSR set to: 0
 10209                           
 10210                           ; BSR set to: 0
 10211  0028F8  0100               	movlb	0	; () banked
 10212  0028FA  AF7F               	btfss	__div_to_l_@exp1& (0+255),7,b
 10213  0028FC  D01A               	goto	l6105
 10214                           
 10215                           ; BSR set to: 0
 10216  0028FE  0100               	movlb	0	; () banked
 10217  002900  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10218  002902  0A80               	xorlw	128
 10219  002904  0F9F               	addlw	159
 10220  002906  B0D8               	btfsc	status,0,c
 10221  002908  D00A               	goto	l6101
 10222                           
 10223                           ; BSR set to: 0
 10224  00290A  0E00               	movlw	0
 10225  00290C  0100               	movlb	0	; () banked
 10226  00290E  6F72               	movwf	?__div_to_l_& (0+255),b
 10227  002910  0E00               	movlw	0
 10228  002912  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10229  002914  0E00               	movlw	0
 10230  002916  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10231  002918  0E00               	movlw	0
 10232  00291A  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10233                           
 10234                           ; BSR set to: 0
 10235  00291C  0012               	return	
 10236  00291E                     l6101:
 10237                           
 10238                           ; BSR set to: 0
 10239  00291E  0100               	movlb	0	; () banked
 10240  002920  90D8               	bcf	status,0,c
 10241  002922  337D               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
 10242  002924  337C               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
 10243  002926  337B               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
 10244  002928  337A               	rrcf	__div_to_l_@quot& (0+255),f,b
 10245                           
 10246                           ; BSR set to: 0
 10247  00292A  0100               	movlb	0	; () banked
 10248  00292C  3F7F               	incfsz	__div_to_l_@exp1& (0+255),f,b
 10249  00292E  D7F7               	goto	l6101
 10250                           
 10251                           ; BSR set to: 0
 10252  002930  D01B               	goto	l819
 10253  002932                     l6105:
 10254                           
 10255                           ; BSR set to: 0
 10256  002932  0E1F               	movlw	31
 10257  002934  0100               	movlb	0	; () banked
 10258  002936  657F               	cpfsgt	__div_to_l_@exp1& (0+255),b
 10259  002938  D012               	goto	l6113
 10260                           
 10261                           ; BSR set to: 0
 10262  00293A  0E00               	movlw	0
 10263  00293C  0100               	movlb	0	; () banked
 10264  00293E  6F72               	movwf	?__div_to_l_& (0+255),b
 10265  002940  0E00               	movlw	0
 10266  002942  6F73               	movwf	(?__div_to_l_+1)& (0+255),b
 10267  002944  0E00               	movlw	0
 10268  002946  6F74               	movwf	(?__div_to_l_+2)& (0+255),b
 10269  002948  0E00               	movlw	0
 10270  00294A  6F75               	movwf	(?__div_to_l_+3)& (0+255),b
 10271                           
 10272                           ; BSR set to: 0
 10273  00294C  0012               	return	
 10274  00294E                     l6111:
 10275                           
 10276                           ; BSR set to: 0
 10277  00294E  0100               	movlb	0	; () banked
 10278  002950  90D8               	bcf	status,0,c
 10279  002952  377A               	rlcf	__div_to_l_@quot& (0+255),f,b
 10280  002954  377B               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
 10281  002956  377C               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
 10282  002958  377D               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
 10283  00295A  0100               	movlb	0	; () banked
 10284  00295C  077F               	decf	__div_to_l_@exp1& (0+255),f,b
 10285  00295E                     l6113:
 10286                           
 10287                           ; BSR set to: 0
 10288  00295E  0100               	movlb	0	; () banked
 10289  002960  517F               	movf	__div_to_l_@exp1& (0+255),w,b
 10290  002962  0100               	movlb	0	; () banked
 10291  002964  A4D8               	btfss	status,2,c
 10292  002966  D7F3               	goto	l6111
 10293  002968                     l819:
 10294                           
 10295                           ; BSR set to: 0
 10296  002968  C07A  F072         	movff	__div_to_l_@quot,?__div_to_l_
 10297  00296C  C07B  F073         	movff	__div_to_l_@quot+1,?__div_to_l_+1
 10298  002970  C07C  F074         	movff	__div_to_l_@quot+2,?__div_to_l_+2
 10299  002974  C07D  F075         	movff	__div_to_l_@quot+3,?__div_to_l_+3
 10300                           
 10301                           ; BSR set to: 0
 10302  002978  0012               	return		;funcret
 10303  00297A                     __end_of__div_to_l_:
 10304                           	opt stack 0
 10305                           tblptru	equ	0xFF8
 10306                           tblptrh	equ	0xFF7
 10307                           tblptrl	equ	0xFF6
 10308                           tablat	equ	0xFF5
 10309                           prodh	equ	0xFF4
 10310                           prodl	equ	0xFF3
 10311                           intcon	equ	0xFF2
 10312                           postinc0	equ	0xFEE
 10313                           wreg	equ	0xFE8
 10314                           postdec1	equ	0xFE5
 10315                           fsr1l	equ	0xFE1
 10316                           indf2	equ	0xFDF
 10317                           postinc2	equ	0xFDE
 10318                           postdec2	equ	0xFDD
 10319                           fsr2h	equ	0xFDA
 10320                           fsr2l	equ	0xFD9
 10321                           status	equ	0xFD8
 10322                           
 10323 ;; *************** function ___xxtofl *****************
 10324 ;; Defined at:
 10325 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  sign            1    wreg     unsigned char 
 10328 ;;  val             4   18[BANK0 ] long 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  sign            1   26[BANK0 ] unsigned char 
 10331 ;;  arg             4   28[BANK0 ] unsigned long 
 10332 ;;  exp             1   27[BANK0 ] unsigned char 
 10333 ;; Return value:  Size  Location     Type
 10334 ;;                  4   18[BANK0 ] unsigned char 
 10335 ;; Registers used:
 10336 ;;		wreg, status,2, status,0
 10337 ;; Tracked objects:
 10338 ;;		On entry : 0/0
 10339 ;;		On exit  : 0/0
 10340 ;;		Unchanged: 0/0
 10341 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10342 ;;      Params:         0       4       0       0       0       0       0
 10343 ;;      Locals:         0       6       0       0       0       0       0
 10344 ;;      Temps:          0       4       0       0       0       0       0
 10345 ;;      Totals:         0      14       0       0       0       0       0
 10346 ;;Total ram usage:       14 bytes
 10347 ;; Hardware stack levels used:    1
 10348 ;; Hardware stack levels required when called:   11
 10349 ;; This function calls:
 10350 ;;		Nothing
 10351 ;; This function is called by:
 10352 ;;		_printf
 10353 ;;		_preAutoCal
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text40
 10358  0022F6                     __ptext40:
 10359                           	opt stack 0
 10360  0022F6                     ___xxtofl:
 10361                           	opt stack 16
 10362                           
 10363                           ; BSR set to: 0
 10364                           ;incstack = 0
 10365                           ;___xxtofl@sign stored from wreg
 10366  0022F6  0100               	movlb	0	; () banked
 10367  0022F8  6F7A               	movwf	___xxtofl@sign& (0+255),b
 10368  0022FA  0100               	movlb	0	; () banked
 10369  0022FC  517A               	movf	___xxtofl@sign& (0+255),w,b
 10370  0022FE  0100               	movlb	0	; () banked
 10371  002300  B4D8               	btfsc	status,2,c
 10372  002302  D01E               	goto	l1195
 10373                           
 10374                           ; BSR set to: 0
 10375  002304  0100               	movlb	0	; () banked
 10376  002306  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10377  002308  D01B               	goto	l1195
 10378                           
 10379                           ; BSR set to: 0
 10380  00230A  C072  F076         	movff	___xxtofl@val,??___xxtofl
 10381  00230E  C073  F077         	movff	___xxtofl@val+1,??___xxtofl+1
 10382  002312  C074  F078         	movff	___xxtofl@val+2,??___xxtofl+2
 10383  002316  C075  F079         	movff	___xxtofl@val+3,??___xxtofl+3
 10384  00231A  0100               	movlb	0	; () banked
 10385  00231C  1F76               	comf	??___xxtofl& (0+255),f,b
 10386  00231E  1F77               	comf	(??___xxtofl+1)& (0+255),f,b
 10387  002320  1F78               	comf	(??___xxtofl+2)& (0+255),f,b
 10388  002322  1F79               	comf	(??___xxtofl+3)& (0+255),f,b
 10389  002324  2B76               	incf	??___xxtofl& (0+255),f,b
 10390  002326  0E00               	movlw	0
 10391  002328  2377               	addwfc	(??___xxtofl+1)& (0+255),f,b
 10392  00232A  2378               	addwfc	(??___xxtofl+2)& (0+255),f,b
 10393  00232C  2379               	addwfc	(??___xxtofl+3)& (0+255),f,b
 10394  00232E  C076  F07C         	movff	??___xxtofl,___xxtofl@arg
 10395  002332  C077  F07D         	movff	??___xxtofl+1,___xxtofl@arg+1
 10396  002336  C078  F07E         	movff	??___xxtofl+2,___xxtofl@arg+2
 10397  00233A  C079  F07F         	movff	??___xxtofl+3,___xxtofl@arg+3
 10398  00233E  D008               	goto	l6245
 10399  002340                     l1195:
 10400                           
 10401                           ; BSR set to: 0
 10402  002340  C072  F07C         	movff	___xxtofl@val,___xxtofl@arg
 10403  002344  C073  F07D         	movff	___xxtofl@val+1,___xxtofl@arg+1
 10404  002348  C074  F07E         	movff	___xxtofl@val+2,___xxtofl@arg+2
 10405  00234C  C075  F07F         	movff	___xxtofl@val+3,___xxtofl@arg+3
 10406  002350                     l6245:
 10407                           
 10408                           ; BSR set to: 0
 10409  002350  0100               	movlb	0	; () banked
 10410  002352  5172               	movf	___xxtofl@val& (0+255),w,b
 10411  002354  0100               	movlb	0	; () banked
 10412  002356  1173               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 10413  002358  0100               	movlb	0	; () banked
 10414  00235A  1174               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 10415  00235C  0100               	movlb	0	; () banked
 10416  00235E  1175               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 10417  002360  A4D8               	btfss	status,2,c
 10418  002362  D00A               	goto	l6251
 10419                           
 10420                           ; BSR set to: 0
 10421  002364  0E00               	movlw	0
 10422  002366  0100               	movlb	0	; () banked
 10423  002368  6F72               	movwf	?___xxtofl& (0+255),b
 10424  00236A  0E00               	movlw	0
 10425  00236C  6F73               	movwf	(?___xxtofl+1)& (0+255),b
 10426  00236E  0E00               	movlw	0
 10427  002370  6F74               	movwf	(?___xxtofl+2)& (0+255),b
 10428  002372  0E00               	movlw	0
 10429  002374  6F75               	movwf	(?___xxtofl+3)& (0+255),b
 10430                           
 10431                           ; BSR set to: 0
 10432  002376  0012               	return	
 10433  002378                     l6251:
 10434                           
 10435                           ; BSR set to: 0
 10436  002378  0E96               	movlw	150
 10437  00237A  0100               	movlb	0	; () banked
 10438  00237C  6F7B               	movwf	___xxtofl@exp& (0+255),b
 10439  00237E  D008               	goto	l6255
 10440  002380                     l6253:
 10441                           
 10442                           ; BSR set to: 0
 10443  002380  0100               	movlb	0	; () banked
 10444  002382  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10445  002384  0100               	movlb	0	; () banked
 10446  002386  90D8               	bcf	status,0,c
 10447  002388  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10448  00238A  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10449  00238C  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10450  00238E  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10451  002390                     l6255:
 10452                           
 10453                           ; BSR set to: 0
 10454  002390  0E00               	movlw	0
 10455  002392  0100               	movlb	0	; () banked
 10456  002394  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10457  002396  0100               	movlb	0	; () banked
 10458  002398  6F76               	movwf	??___xxtofl& (0+255),b
 10459  00239A  0E00               	movlw	0
 10460  00239C  0100               	movlb	0	; () banked
 10461  00239E  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10462  0023A0  0100               	movlb	0	; () banked
 10463  0023A2  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10464  0023A4  0E00               	movlw	0
 10465  0023A6  0100               	movlb	0	; () banked
 10466  0023A8  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10467  0023AA  0100               	movlb	0	; () banked
 10468  0023AC  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10469  0023AE  0EFE               	movlw	254
 10470  0023B0  0100               	movlb	0	; () banked
 10471  0023B2  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10472  0023B4  0100               	movlb	0	; () banked
 10473  0023B6  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10474  0023B8  0100               	movlb	0	; () banked
 10475  0023BA  5176               	movf	??___xxtofl& (0+255),w,b
 10476  0023BC  0100               	movlb	0	; () banked
 10477  0023BE  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10478  0023C0  0100               	movlb	0	; () banked
 10479  0023C2  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10480  0023C4  0100               	movlb	0	; () banked
 10481  0023C6  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10482  0023C8  B4D8               	btfsc	status,2,c
 10483  0023CA  D010               	goto	l1202
 10484  0023CC  D7D9               	goto	l6253
 10485  0023CE                     l6257:
 10486                           
 10487                           ; BSR set to: 0
 10488  0023CE  0100               	movlb	0	; () banked
 10489  0023D0  2B7B               	incf	___xxtofl@exp& (0+255),f,b
 10490                           
 10491                           ; BSR set to: 0
 10492  0023D2  0E01               	movlw	1
 10493  0023D4  0100               	movlb	0	; () banked
 10494  0023D6  277C               	addwf	___xxtofl@arg& (0+255),f,b
 10495  0023D8  0E00               	movlw	0
 10496  0023DA  237D               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 10497  0023DC  237E               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 10498  0023DE  237F               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 10499                           
 10500                           ; BSR set to: 0
 10501  0023E0  0100               	movlb	0	; () banked
 10502  0023E2  90D8               	bcf	status,0,c
 10503  0023E4  337F               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 10504  0023E6  337E               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 10505  0023E8  337D               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 10506  0023EA  337C               	rrcf	___xxtofl@arg& (0+255),f,b
 10507  0023EC                     l1202:
 10508                           
 10509                           ; BSR set to: 0
 10510  0023EC  0E00               	movlw	0
 10511  0023EE  0100               	movlb	0	; () banked
 10512  0023F0  157C               	andwf	___xxtofl@arg& (0+255),w,b
 10513  0023F2  0100               	movlb	0	; () banked
 10514  0023F4  6F76               	movwf	??___xxtofl& (0+255),b
 10515  0023F6  0E00               	movlw	0
 10516  0023F8  0100               	movlb	0	; () banked
 10517  0023FA  157D               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 10518  0023FC  0100               	movlb	0	; () banked
 10519  0023FE  6F77               	movwf	(??___xxtofl+1)& (0+255),b
 10520  002400  0E00               	movlw	0
 10521  002402  0100               	movlb	0	; () banked
 10522  002404  157E               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 10523  002406  0100               	movlb	0	; () banked
 10524  002408  6F78               	movwf	(??___xxtofl+2)& (0+255),b
 10525  00240A  0EFF               	movlw	255
 10526  00240C  0100               	movlb	0	; () banked
 10527  00240E  157F               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 10528  002410  0100               	movlb	0	; () banked
 10529  002412  6F79               	movwf	(??___xxtofl+3)& (0+255),b
 10530  002414  0100               	movlb	0	; () banked
 10531  002416  5176               	movf	??___xxtofl& (0+255),w,b
 10532  002418  0100               	movlb	0	; () banked
 10533  00241A  1177               	iorwf	(??___xxtofl+1)& (0+255),w,b
 10534  00241C  0100               	movlb	0	; () banked
 10535  00241E  1178               	iorwf	(??___xxtofl+2)& (0+255),w,b
 10536  002420  0100               	movlb	0	; () banked
 10537  002422  1179               	iorwf	(??___xxtofl+3)& (0+255),w,b
 10538  002424  B4D8               	btfsc	status,2,c
 10539  002426  D009               	goto	l6265
 10540  002428  D7D2               	goto	l6257
 10541  00242A                     l6263:
 10542                           
 10543                           ; BSR set to: 0
 10544  00242A  0100               	movlb	0	; () banked
 10545  00242C  077B               	decf	___xxtofl@exp& (0+255),f,b
 10546  00242E  0100               	movlb	0	; () banked
 10547  002430  90D8               	bcf	status,0,c
 10548  002432  377C               	rlcf	___xxtofl@arg& (0+255),f,b
 10549  002434  377D               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 10550  002436  377E               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 10551  002438  377F               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 10552  00243A                     l6265:
 10553                           
 10554                           ; BSR set to: 0
 10555  00243A  0100               	movlb	0	; () banked
 10556  00243C  BF7E               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 10557  00243E  D004               	goto	l1209
 10558                           
 10559                           ; BSR set to: 0
 10560  002440  0E02               	movlw	2
 10561  002442  0100               	movlb	0	; () banked
 10562  002444  617B               	cpfslt	___xxtofl@exp& (0+255),b
 10563  002446  D7F1               	goto	l6263
 10564  002448                     l1209:
 10565                           
 10566                           ; BSR set to: 0
 10567  002448  0100               	movlb	0	; () banked
 10568  00244A  B17B               	btfsc	___xxtofl@exp& (0+255),0,b
 10569  00244C  D009               	goto	l1210
 10570                           
 10571                           ; BSR set to: 0
 10572  00244E  0EFF               	movlw	255
 10573  002450  0100               	movlb	0	; () banked
 10574  002452  177C               	andwf	___xxtofl@arg& (0+255),f,b
 10575  002454  0EFF               	movlw	255
 10576  002456  177D               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 10577  002458  0E7F               	movlw	127
 10578  00245A  177E               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 10579  00245C  0EFF               	movlw	255
 10580  00245E  177F               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 10581  002460                     l1210:
 10582                           
 10583                           ; BSR set to: 0
 10584  002460  0100               	movlb	0	; () banked
 10585  002462  90D8               	bcf	status,0,c
 10586  002464  337B               	rrcf	___xxtofl@exp& (0+255),f,b
 10587  002466  C07B  F076         	movff	___xxtofl@exp,??___xxtofl
 10588  00246A  0100               	movlb	0	; () banked
 10589  00246C  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10590  00246E  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10591  002470  6B79               	clrf	(??___xxtofl+3)& (0+255),b
 10592  002472  C076  F079         	movff	??___xxtofl,??___xxtofl+3
 10593  002476  0100               	movlb	0	; () banked
 10594  002478  6B78               	clrf	(??___xxtofl+2)& (0+255),b
 10595  00247A  6B77               	clrf	(??___xxtofl+1)& (0+255),b
 10596  00247C  6B76               	clrf	??___xxtofl& (0+255),b
 10597  00247E  0100               	movlb	0	; () banked
 10598  002480  5176               	movf	??___xxtofl& (0+255),w,b
 10599  002482  0100               	movlb	0	; () banked
 10600  002484  137C               	iorwf	___xxtofl@arg& (0+255),f,b
 10601  002486  0100               	movlb	0	; () banked
 10602  002488  5177               	movf	(??___xxtofl+1)& (0+255),w,b
 10603  00248A  0100               	movlb	0	; () banked
 10604  00248C  137D               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 10605  00248E  0100               	movlb	0	; () banked
 10606  002490  5178               	movf	(??___xxtofl+2)& (0+255),w,b
 10607  002492  0100               	movlb	0	; () banked
 10608  002494  137E               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 10609  002496  0100               	movlb	0	; () banked
 10610  002498  5179               	movf	(??___xxtofl+3)& (0+255),w,b
 10611  00249A  0100               	movlb	0	; () banked
 10612  00249C  137F               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 10613                           
 10614                           ; BSR set to: 0
 10615  00249E  0100               	movlb	0	; () banked
 10616  0024A0  517A               	movf	___xxtofl@sign& (0+255),w,b
 10617  0024A2  0100               	movlb	0	; () banked
 10618  0024A4  B4D8               	btfsc	status,2,c
 10619  0024A6  D005               	goto	l6277
 10620                           
 10621                           ; BSR set to: 0
 10622  0024A8  0100               	movlb	0	; () banked
 10623  0024AA  AF75               	btfss	(___xxtofl@val+3)& (0+255),7,b
 10624  0024AC  D002               	goto	l6277
 10625                           
 10626                           ; BSR set to: 0
 10627  0024AE  0100               	movlb	0	; () banked
 10628  0024B0  8F7F               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 10629  0024B2                     l6277:
 10630                           
 10631                           ; BSR set to: 0
 10632  0024B2  C07C  F072         	movff	___xxtofl@arg,?___xxtofl
 10633  0024B6  C07D  F073         	movff	___xxtofl@arg+1,?___xxtofl+1
 10634  0024BA  C07E  F074         	movff	___xxtofl@arg+2,?___xxtofl+2
 10635  0024BE  C07F  F075         	movff	___xxtofl@arg+3,?___xxtofl+3
 10636  0024C2  0012               	return	
 10637  0024C4                     __end_of___xxtofl:
 10638                           	opt stack 0
 10639                           tblptru	equ	0xFF8
 10640                           tblptrh	equ	0xFF7
 10641                           tblptrl	equ	0xFF6
 10642                           tablat	equ	0xFF5
 10643                           prodh	equ	0xFF4
 10644                           prodl	equ	0xFF3
 10645                           intcon	equ	0xFF2
 10646                           postinc0	equ	0xFEE
 10647                           wreg	equ	0xFE8
 10648                           postdec1	equ	0xFE5
 10649                           fsr1l	equ	0xFE1
 10650                           indf2	equ	0xFDF
 10651                           postinc2	equ	0xFDE
 10652                           postdec2	equ	0xFDD
 10653                           fsr2h	equ	0xFDA
 10654                           fsr2l	equ	0xFD9
 10655                           status	equ	0xFD8
 10656                           
 10657 ;; *************** function ___wmul *****************
 10658 ;; Defined at:
 10659 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
 10660 ;; Parameters:    Size  Location     Type
 10661 ;;  multiplier      2   18[BANK0 ] unsigned int 
 10662 ;;  multiplicand    2   20[BANK0 ] unsigned int 
 10663 ;; Auto vars:     Size  Location     Type
 10664 ;;  product         2   22[BANK0 ] unsigned int 
 10665 ;; Return value:  Size  Location     Type
 10666 ;;                  2   18[BANK0 ] unsigned int 
 10667 ;; Registers used:
 10668 ;;		wreg, status,2, status,0, prodl, prodh
 10669 ;; Tracked objects:
 10670 ;;		On entry : 0/0
 10671 ;;		On exit  : 0/0
 10672 ;;		Unchanged: 0/0
 10673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10674 ;;      Params:         0       4       0       0       0       0       0
 10675 ;;      Locals:         0       2       0       0       0       0       0
 10676 ;;      Temps:          0       0       0       0       0       0       0
 10677 ;;      Totals:         0       6       0       0       0       0       0
 10678 ;;Total ram usage:        6 bytes
 10679 ;; Hardware stack levels used:    1
 10680 ;; Hardware stack levels required when called:   11
 10681 ;; This function calls:
 10682 ;;		Nothing
 10683 ;; This function is called by:
 10684 ;;		_printf
 10685 ;; This function uses a non-reentrant model
 10686 ;;
 10687                           
 10688                           	psect	text41
 10689  003808                     __ptext41:
 10690                           	opt stack 0
 10691  003808                     ___wmul:
 10692                           	opt stack 16
 10693                           
 10694                           ; BSR set to: 0
 10695                           ;incstack = 0
 10696  003808  0100               	movlb	0	; () banked
 10697  00380A  5172               	movf	___wmul@multiplier& (0+255),w,b
 10698  00380C  0100               	movlb	0	; () banked
 10699  00380E  0374               	mulwf	___wmul@multiplicand& (0+255),b
 10700  003810  CFF3 F076          	movff	prodl,___wmul@product
 10701  003814  CFF4 F077          	movff	prodh,___wmul@product+1
 10702  003818  0100               	movlb	0	; () banked
 10703  00381A  5172               	movf	___wmul@multiplier& (0+255),w,b
 10704  00381C  0100               	movlb	0	; () banked
 10705  00381E  0375               	mulwf	(___wmul@multiplicand+1)& (0+255),b
 10706  003820  50F3               	movf	prodl,w,c
 10707  003822  0100               	movlb	0	; () banked
 10708  003824  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 10709  003826  0100               	movlb	0	; () banked
 10710  003828  5173               	movf	(___wmul@multiplier+1)& (0+255),w,b
 10711  00382A  0100               	movlb	0	; () banked
 10712  00382C  0374               	mulwf	___wmul@multiplicand& (0+255),b
 10713  00382E  50F3               	movf	prodl,w,c
 10714  003830  0100               	movlb	0	; () banked
 10715  003832  2777               	addwf	(___wmul@product+1)& (0+255),f,b
 10716                           
 10717                           ; BSR set to: 0
 10718  003834  C076  F072         	movff	___wmul@product,?___wmul
 10719  003838  C077  F073         	movff	___wmul@product+1,?___wmul+1
 10720  00383C  0012               	return	
 10721  00383E                     __end_of___wmul:
 10722                           	opt stack 0
 10723                           tblptru	equ	0xFF8
 10724                           tblptrh	equ	0xFF7
 10725                           tblptrl	equ	0xFF6
 10726                           tablat	equ	0xFF5
 10727                           prodh	equ	0xFF4
 10728                           prodl	equ	0xFF3
 10729                           intcon	equ	0xFF2
 10730                           postinc0	equ	0xFEE
 10731                           wreg	equ	0xFE8
 10732                           postdec1	equ	0xFE5
 10733                           fsr1l	equ	0xFE1
 10734                           indf2	equ	0xFDF
 10735                           postinc2	equ	0xFDE
 10736                           postdec2	equ	0xFDD
 10737                           fsr2h	equ	0xFDA
 10738                           fsr2l	equ	0xFD9
 10739                           status	equ	0xFD8
 10740                           
 10741 ;; *************** function ___llmod *****************
 10742 ;; Defined at:
 10743 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
 10744 ;; Parameters:    Size  Location     Type
 10745 ;;  dividend        4   31[BANK0 ] unsigned long 
 10746 ;;  divisor         4   35[BANK0 ] unsigned long 
 10747 ;; Auto vars:     Size  Location     Type
 10748 ;;  counter         1   39[BANK0 ] unsigned char 
 10749 ;; Return value:  Size  Location     Type
 10750 ;;                  4   31[BANK0 ] unsigned long 
 10751 ;; Registers used:
 10752 ;;		wreg, status,2, status,0
 10753 ;; Tracked objects:
 10754 ;;		On entry : 0/0
 10755 ;;		On exit  : 0/0
 10756 ;;		Unchanged: 0/0
 10757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10758 ;;      Params:         0       8       0       0       0       0       0
 10759 ;;      Locals:         0       1       0       0       0       0       0
 10760 ;;      Temps:          0       0       0       0       0       0       0
 10761 ;;      Totals:         0       9       0       0       0       0       0
 10762 ;;Total ram usage:        9 bytes
 10763 ;; Hardware stack levels used:    1
 10764 ;; Hardware stack levels required when called:   11
 10765 ;; This function calls:
 10766 ;;		Nothing
 10767 ;; This function is called by:
 10768 ;;		_printf
 10769 ;; This function uses a non-reentrant model
 10770 ;;
 10771                           
 10772                           	psect	text42
 10773  002F9E                     __ptext42:
 10774                           	opt stack 0
 10775  002F9E                     ___llmod:
 10776                           	opt stack 16
 10777                           
 10778                           ; BSR set to: 0
 10779                           ;incstack = 0
 10780  002F9E  0100               	movlb	0	; () banked
 10781  002FA0  5183               	movf	___llmod@divisor& (0+255),w,b
 10782  002FA2  0100               	movlb	0	; () banked
 10783  002FA4  1184               	iorwf	(___llmod@divisor+1)& (0+255),w,b
 10784  002FA6  0100               	movlb	0	; () banked
 10785  002FA8  1185               	iorwf	(___llmod@divisor+2)& (0+255),w,b
 10786  002FAA  0100               	movlb	0	; () banked
 10787  002FAC  1186               	iorwf	(___llmod@divisor+3)& (0+255),w,b
 10788  002FAE  B4D8               	btfsc	status,2,c
 10789  002FB0  D03A               	goto	l1003
 10790                           
 10791                           ; BSR set to: 0
 10792  002FB2  0E01               	movlw	1
 10793  002FB4  0100               	movlb	0	; () banked
 10794  002FB6  6F87               	movwf	___llmod@counter& (0+255),b
 10795  002FB8  D008               	goto	l6229
 10796  002FBA                     l6227:
 10797                           
 10798                           ; BSR set to: 0
 10799  002FBA  0100               	movlb	0	; () banked
 10800  002FBC  90D8               	bcf	status,0,c
 10801  002FBE  3783               	rlcf	___llmod@divisor& (0+255),f,b
 10802  002FC0  3784               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10803  002FC2  3785               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10804  002FC4  3786               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10805  002FC6  0100               	movlb	0	; () banked
 10806  002FC8  2B87               	incf	___llmod@counter& (0+255),f,b
 10807  002FCA                     l6229:
 10808                           
 10809                           ; BSR set to: 0
 10810  002FCA  0100               	movlb	0	; () banked
 10811  002FCC  AF86               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10812  002FCE  D7F5               	goto	l6227
 10813  002FD0                     l6231:
 10814                           
 10815                           ; BSR set to: 0
 10816  002FD0  0100               	movlb	0	; () banked
 10817  002FD2  5183               	movf	___llmod@divisor& (0+255),w,b
 10818  002FD4  0100               	movlb	0	; () banked
 10819  002FD6  5D7F               	subwf	___llmod@dividend& (0+255),w,b
 10820  002FD8  0100               	movlb	0	; () banked
 10821  002FDA  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 10822  002FDC  0100               	movlb	0	; () banked
 10823  002FDE  5980               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10824  002FE0  0100               	movlb	0	; () banked
 10825  002FE2  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 10826  002FE4  0100               	movlb	0	; () banked
 10827  002FE6  5981               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10828  002FE8  0100               	movlb	0	; () banked
 10829  002FEA  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 10830  002FEC  0100               	movlb	0	; () banked
 10831  002FEE  5982               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10832  002FF0  A0D8               	btfss	status,0,c
 10833  002FF2  D010               	goto	l6235
 10834                           
 10835                           ; BSR set to: 0
 10836  002FF4  0100               	movlb	0	; () banked
 10837  002FF6  5183               	movf	___llmod@divisor& (0+255),w,b
 10838  002FF8  0100               	movlb	0	; () banked
 10839  002FFA  5F7F               	subwf	___llmod@dividend& (0+255),f,b
 10840  002FFC  0100               	movlb	0	; () banked
 10841  002FFE  5184               	movf	(___llmod@divisor+1)& (0+255),w,b
 10842  003000  0100               	movlb	0	; () banked
 10843  003002  5B80               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10844  003004  0100               	movlb	0	; () banked
 10845  003006  5185               	movf	(___llmod@divisor+2)& (0+255),w,b
 10846  003008  0100               	movlb	0	; () banked
 10847  00300A  5B81               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10848  00300C  0100               	movlb	0	; () banked
 10849  00300E  5186               	movf	(___llmod@divisor+3)& (0+255),w,b
 10850  003010  0100               	movlb	0	; () banked
 10851  003012  5B82               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10852  003014                     l6235:
 10853                           
 10854                           ; BSR set to: 0
 10855  003014  0100               	movlb	0	; () banked
 10856  003016  90D8               	bcf	status,0,c
 10857  003018  3386               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10858  00301A  3385               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10859  00301C  3384               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10860  00301E  3383               	rrcf	___llmod@divisor& (0+255),f,b
 10861                           
 10862                           ; BSR set to: 0
 10863  003020  0100               	movlb	0	; () banked
 10864  003022  2F87               	decfsz	___llmod@counter& (0+255),f,b
 10865  003024  D7D5               	goto	l6231
 10866  003026                     l1003:
 10867                           
 10868                           ; BSR set to: 0
 10869  003026  C07F  F07F         	movff	___llmod@dividend,?___llmod
 10870  00302A  C080  F080         	movff	___llmod@dividend+1,?___llmod+1
 10871  00302E  C081  F081         	movff	___llmod@dividend+2,?___llmod+2
 10872  003032  C082  F082         	movff	___llmod@dividend+3,?___llmod+3
 10873                           
 10874                           ; BSR set to: 0
 10875  003036  0012               	return		;funcret
 10876  003038                     __end_of___llmod:
 10877                           	opt stack 0
 10878                           tblptru	equ	0xFF8
 10879                           tblptrh	equ	0xFF7
 10880                           tblptrl	equ	0xFF6
 10881                           tablat	equ	0xFF5
 10882                           prodh	equ	0xFF4
 10883                           prodl	equ	0xFF3
 10884                           intcon	equ	0xFF2
 10885                           postinc0	equ	0xFEE
 10886                           wreg	equ	0xFE8
 10887                           postdec1	equ	0xFE5
 10888                           fsr1l	equ	0xFE1
 10889                           indf2	equ	0xFDF
 10890                           postinc2	equ	0xFDE
 10891                           postdec2	equ	0xFDD
 10892                           fsr2h	equ	0xFDA
 10893                           fsr2l	equ	0xFD9
 10894                           status	equ	0xFD8
 10895                           
 10896 ;; *************** function ___lldiv *****************
 10897 ;; Defined at:
 10898 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 10899 ;; Parameters:    Size  Location     Type
 10900 ;;  dividend        4   18[BANK0 ] unsigned long 
 10901 ;;  divisor         4   22[BANK0 ] unsigned long 
 10902 ;; Auto vars:     Size  Location     Type
 10903 ;;  quotient        4   26[BANK0 ] unsigned long 
 10904 ;;  counter         1   30[BANK0 ] unsigned char 
 10905 ;; Return value:  Size  Location     Type
 10906 ;;                  4   18[BANK0 ] unsigned long 
 10907 ;; Registers used:
 10908 ;;		wreg, status,2, status,0
 10909 ;; Tracked objects:
 10910 ;;		On entry : 0/0
 10911 ;;		On exit  : 0/0
 10912 ;;		Unchanged: 0/0
 10913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10914 ;;      Params:         0       8       0       0       0       0       0
 10915 ;;      Locals:         0       5       0       0       0       0       0
 10916 ;;      Temps:          0       0       0       0       0       0       0
 10917 ;;      Totals:         0      13       0       0       0       0       0
 10918 ;;Total ram usage:       13 bytes
 10919 ;; Hardware stack levels used:    1
 10920 ;; Hardware stack levels required when called:   11
 10921 ;; This function calls:
 10922 ;;		Nothing
 10923 ;; This function is called by:
 10924 ;;		_printf
 10925 ;; This function uses a non-reentrant model
 10926 ;;
 10927                           
 10928                           	psect	text43
 10929  002D9E                     __ptext43:
 10930                           	opt stack 0
 10931  002D9E                     ___lldiv:
 10932                           	opt stack 16
 10933                           
 10934                           ; BSR set to: 0
 10935                           ;incstack = 0
 10936  002D9E  0E00               	movlw	0
 10937  002DA0  0100               	movlb	0	; () banked
 10938  002DA2  6F7A               	movwf	___lldiv@quotient& (0+255),b
 10939  002DA4  0E00               	movlw	0
 10940  002DA6  6F7B               	movwf	(___lldiv@quotient+1)& (0+255),b
 10941  002DA8  0E00               	movlw	0
 10942  002DAA  6F7C               	movwf	(___lldiv@quotient+2)& (0+255),b
 10943  002DAC  0E00               	movlw	0
 10944  002DAE  6F7D               	movwf	(___lldiv@quotient+3)& (0+255),b
 10945                           
 10946                           ; BSR set to: 0
 10947  002DB0  0100               	movlb	0	; () banked
 10948  002DB2  5176               	movf	___lldiv@divisor& (0+255),w,b
 10949  002DB4  0100               	movlb	0	; () banked
 10950  002DB6  1177               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10951  002DB8  0100               	movlb	0	; () banked
 10952  002DBA  1178               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10953  002DBC  0100               	movlb	0	; () banked
 10954  002DBE  1179               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10955  002DC0  B4D8               	btfsc	status,2,c
 10956  002DC2  D042               	goto	l993
 10957                           
 10958                           ; BSR set to: 0
 10959  002DC4  0E01               	movlw	1
 10960  002DC6  0100               	movlb	0	; () banked
 10961  002DC8  6F7E               	movwf	___lldiv@counter& (0+255),b
 10962  002DCA  D008               	goto	l6209
 10963  002DCC                     l6207:
 10964                           
 10965                           ; BSR set to: 0
 10966  002DCC  0100               	movlb	0	; () banked
 10967  002DCE  90D8               	bcf	status,0,c
 10968  002DD0  3776               	rlcf	___lldiv@divisor& (0+255),f,b
 10969  002DD2  3777               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10970  002DD4  3778               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10971  002DD6  3779               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10972  002DD8  0100               	movlb	0	; () banked
 10973  002DDA  2B7E               	incf	___lldiv@counter& (0+255),f,b
 10974  002DDC                     l6209:
 10975                           
 10976                           ; BSR set to: 0
 10977  002DDC  0100               	movlb	0	; () banked
 10978  002DDE  AF79               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10979  002DE0  D7F5               	goto	l6207
 10980  002DE2                     l6211:
 10981                           
 10982                           ; BSR set to: 0
 10983  002DE2  0100               	movlb	0	; () banked
 10984  002DE4  90D8               	bcf	status,0,c
 10985  002DE6  377A               	rlcf	___lldiv@quotient& (0+255),f,b
 10986  002DE8  377B               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10987  002DEA  377C               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10988  002DEC  377D               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10989                           
 10990                           ; BSR set to: 0
 10991  002DEE  0100               	movlb	0	; () banked
 10992  002DF0  5176               	movf	___lldiv@divisor& (0+255),w,b
 10993  002DF2  0100               	movlb	0	; () banked
 10994  002DF4  5D72               	subwf	___lldiv@dividend& (0+255),w,b
 10995  002DF6  0100               	movlb	0	; () banked
 10996  002DF8  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10997  002DFA  0100               	movlb	0	; () banked
 10998  002DFC  5973               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10999  002DFE  0100               	movlb	0	; () banked
 11000  002E00  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11001  002E02  0100               	movlb	0	; () banked
 11002  002E04  5974               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 11003  002E06  0100               	movlb	0	; () banked
 11004  002E08  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11005  002E0A  0100               	movlb	0	; () banked
 11006  002E0C  5975               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 11007  002E0E  A0D8               	btfss	status,0,c
 11008  002E10  D012               	goto	l6219
 11009                           
 11010                           ; BSR set to: 0
 11011  002E12  0100               	movlb	0	; () banked
 11012  002E14  5176               	movf	___lldiv@divisor& (0+255),w,b
 11013  002E16  0100               	movlb	0	; () banked
 11014  002E18  5F72               	subwf	___lldiv@dividend& (0+255),f,b
 11015  002E1A  0100               	movlb	0	; () banked
 11016  002E1C  5177               	movf	(___lldiv@divisor+1)& (0+255),w,b
 11017  002E1E  0100               	movlb	0	; () banked
 11018  002E20  5B73               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 11019  002E22  0100               	movlb	0	; () banked
 11020  002E24  5178               	movf	(___lldiv@divisor+2)& (0+255),w,b
 11021  002E26  0100               	movlb	0	; () banked
 11022  002E28  5B74               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 11023  002E2A  0100               	movlb	0	; () banked
 11024  002E2C  5179               	movf	(___lldiv@divisor+3)& (0+255),w,b
 11025  002E2E  0100               	movlb	0	; () banked
 11026  002E30  5B75               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 11027                           
 11028                           ; BSR set to: 0
 11029  002E32  0100               	movlb	0	; () banked
 11030  002E34  817A               	bsf	___lldiv@quotient& (0+255),0,b
 11031  002E36                     l6219:
 11032                           
 11033                           ; BSR set to: 0
 11034  002E36  0100               	movlb	0	; () banked
 11035  002E38  90D8               	bcf	status,0,c
 11036  002E3A  3379               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 11037  002E3C  3378               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 11038  002E3E  3377               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 11039  002E40  3376               	rrcf	___lldiv@divisor& (0+255),f,b
 11040                           
 11041                           ; BSR set to: 0
 11042  002E42  0100               	movlb	0	; () banked
 11043  002E44  2F7E               	decfsz	___lldiv@counter& (0+255),f,b
 11044  002E46  D7CD               	goto	l6211
 11045  002E48                     l993:
 11046                           
 11047                           ; BSR set to: 0
 11048  002E48  C07A  F072         	movff	___lldiv@quotient,?___lldiv
 11049  002E4C  C07B  F073         	movff	___lldiv@quotient+1,?___lldiv+1
 11050  002E50  C07C  F074         	movff	___lldiv@quotient+2,?___lldiv+2
 11051  002E54  C07D  F075         	movff	___lldiv@quotient+3,?___lldiv+3
 11052                           
 11053                           ; BSR set to: 0
 11054  002E58  0012               	return		;funcret
 11055  002E5A                     __end_of___lldiv:
 11056                           	opt stack 0
 11057                           tblptru	equ	0xFF8
 11058                           tblptrh	equ	0xFF7
 11059                           tblptrl	equ	0xFF6
 11060                           tablat	equ	0xFF5
 11061                           prodh	equ	0xFF4
 11062                           prodl	equ	0xFF3
 11063                           intcon	equ	0xFF2
 11064                           postinc0	equ	0xFEE
 11065                           wreg	equ	0xFE8
 11066                           postdec1	equ	0xFE5
 11067                           fsr1l	equ	0xFE1
 11068                           indf2	equ	0xFDF
 11069                           postinc2	equ	0xFDE
 11070                           postdec2	equ	0xFDD
 11071                           fsr2h	equ	0xFDA
 11072                           fsr2l	equ	0xFD9
 11073                           status	equ	0xFD8
 11074                           
 11075 ;; *************** function ___fltol *****************
 11076 ;; Defined at:
 11077 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fltol.c"
 11078 ;; Parameters:    Size  Location     Type
 11079 ;;  f1              4   66[BANK0 ] unsigned long 
 11080 ;; Auto vars:     Size  Location     Type
 11081 ;;  exp1            1   75[BANK0 ] unsigned char 
 11082 ;;  sign1           1   74[BANK0 ] unsigned char 
 11083 ;; Return value:  Size  Location     Type
 11084 ;;                  4   66[BANK0 ] long 
 11085 ;; Registers used:
 11086 ;;		wreg, status,2, status,0
 11087 ;; Tracked objects:
 11088 ;;		On entry : 0/0
 11089 ;;		On exit  : 0/0
 11090 ;;		Unchanged: 0/0
 11091 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11092 ;;      Params:         0       4       0       0       0       0       0
 11093 ;;      Locals:         0       2       0       0       0       0       0
 11094 ;;      Temps:          0       4       0       0       0       0       0
 11095 ;;      Totals:         0      10       0       0       0       0       0
 11096 ;;Total ram usage:       10 bytes
 11097 ;; Hardware stack levels used:    1
 11098 ;; Hardware stack levels required when called:   11
 11099 ;; This function calls:
 11100 ;;		Nothing
 11101 ;; This function is called by:
 11102 ;;		_printf
 11103 ;; This function uses a non-reentrant model
 11104 ;;
 11105                           
 11106                           	psect	text44
 11107  002BD4                     __ptext44:
 11108                           	opt stack 0
 11109  002BD4                     ___fltol:
 11110                           	opt stack 16
 11111                           
 11112                           ; BSR set to: 0
 11113                           ;incstack = 0
 11114  002BD4  0100               	movlb	0	; () banked
 11115  002BD6  35A4               	rlcf	(___fltol@f1+2)& (0+255),w,b
 11116  002BD8  35A5               	rlcf	(___fltol@f1+3)& (0+255),w,b
 11117  002BDA  0100               	movlb	0	; () banked
 11118  002BDC  6FAB               	movwf	___fltol@exp1& (0+255),b
 11119  002BDE  0100               	movlb	0	; () banked
 11120  002BE0  51AB               	movf	___fltol@exp1& (0+255),w,b
 11121  002BE2  A4D8               	btfss	status,2,c
 11122  002BE4  D00A               	goto	l6163
 11123                           
 11124                           ; BSR set to: 0
 11125  002BE6  0E00               	movlw	0
 11126  002BE8  0100               	movlb	0	; () banked
 11127  002BEA  6FA2               	movwf	?___fltol& (0+255),b
 11128  002BEC  0E00               	movlw	0
 11129  002BEE  6FA3               	movwf	(?___fltol+1)& (0+255),b
 11130  002BF0  0E00               	movlw	0
 11131  002BF2  6FA4               	movwf	(?___fltol+2)& (0+255),b
 11132  002BF4  0E00               	movlw	0
 11133  002BF6  6FA5               	movwf	(?___fltol+3)& (0+255),b
 11134                           
 11135                           ; BSR set to: 0
 11136  002BF8  0012               	return	
 11137  002BFA                     l6163:
 11138                           
 11139                           ; BSR set to: 0
 11140  002BFA  C0A2  F0A6         	movff	___fltol@f1,??___fltol
 11141  002BFE  C0A3  F0A7         	movff	___fltol@f1+1,??___fltol+1
 11142  002C02  C0A4  F0A8         	movff	___fltol@f1+2,??___fltol+2
 11143  002C06  C0A5  F0A9         	movff	___fltol@f1+3,??___fltol+3
 11144  002C0A  0E20               	movlw	32
 11145  002C0C  D006               	goto	u7180
 11146  002C0E                     u7185:
 11147  002C0E  0100               	movlb	0	; () banked
 11148  002C10  90D8               	bcf	status,0,c
 11149  002C12  33A9               	rrcf	(??___fltol+3)& (0+255),f,b
 11150  002C14  33A8               	rrcf	(??___fltol+2)& (0+255),f,b
 11151  002C16  33A7               	rrcf	(??___fltol+1)& (0+255),f,b
 11152  002C18  33A6               	rrcf	??___fltol& (0+255),f,b
 11153  002C1A                     u7180:
 11154  002C1A  2EE8               	decfsz	wreg,f,c
 11155  002C1C  D7F8               	goto	u7185
 11156  002C1E  0100               	movlb	0	; () banked
 11157  002C20  51A6               	movf	??___fltol& (0+255),w,b
 11158  002C22  0100               	movlb	0	; () banked
 11159  002C24  6FAA               	movwf	___fltol@sign1& (0+255),b
 11160                           
 11161                           ; BSR set to: 0
 11162  002C26  0100               	movlb	0	; () banked
 11163  002C28  8FA4               	bsf	(___fltol@f1+2)& (0+255),7,b
 11164                           
 11165                           ; BSR set to: 0
 11166  002C2A  0EFF               	movlw	255
 11167  002C2C  0100               	movlb	0	; () banked
 11168  002C2E  17A2               	andwf	___fltol@f1& (0+255),f,b
 11169  002C30  0EFF               	movlw	255
 11170  002C32  17A3               	andwf	(___fltol@f1+1)& (0+255),f,b
 11171  002C34  0EFF               	movlw	255
 11172  002C36  17A4               	andwf	(___fltol@f1+2)& (0+255),f,b
 11173  002C38  0E00               	movlw	0
 11174  002C3A  17A5               	andwf	(___fltol@f1+3)& (0+255),f,b
 11175                           
 11176                           ; BSR set to: 0
 11177  002C3C  0E96               	movlw	150
 11178  002C3E  0100               	movlb	0	; () banked
 11179  002C40  5FAB               	subwf	___fltol@exp1& (0+255),f,b
 11180                           
 11181                           ; BSR set to: 0
 11182  002C42  0100               	movlb	0	; () banked
 11183  002C44  AFAB               	btfss	___fltol@exp1& (0+255),7,b
 11184  002C46  D01A               	goto	l6183
 11185                           
 11186                           ; BSR set to: 0
 11187  002C48  0100               	movlb	0	; () banked
 11188  002C4A  51AB               	movf	___fltol@exp1& (0+255),w,b
 11189  002C4C  0A80               	xorlw	128
 11190  002C4E  0F97               	addlw	151
 11191  002C50  B0D8               	btfsc	status,0,c
 11192  002C52  D00A               	goto	l6179
 11193                           
 11194                           ; BSR set to: 0
 11195  002C54  0E00               	movlw	0
 11196  002C56  0100               	movlb	0	; () banked
 11197  002C58  6FA2               	movwf	?___fltol& (0+255),b
 11198  002C5A  0E00               	movlw	0
 11199  002C5C  6FA3               	movwf	(?___fltol+1)& (0+255),b
 11200  002C5E  0E00               	movlw	0
 11201  002C60  6FA4               	movwf	(?___fltol+2)& (0+255),b
 11202  002C62  0E00               	movlw	0
 11203  002C64  6FA5               	movwf	(?___fltol+3)& (0+255),b
 11204                           
 11205                           ; BSR set to: 0
 11206  002C66  0012               	return	
 11207  002C68                     l6179:
 11208                           
 11209                           ; BSR set to: 0
 11210  002C68  0100               	movlb	0	; () banked
 11211  002C6A  90D8               	bcf	status,0,c
 11212  002C6C  33A5               	rrcf	(___fltol@f1+3)& (0+255),f,b
 11213  002C6E  33A4               	rrcf	(___fltol@f1+2)& (0+255),f,b
 11214  002C70  33A3               	rrcf	(___fltol@f1+1)& (0+255),f,b
 11215  002C72  33A2               	rrcf	___fltol@f1& (0+255),f,b
 11216                           
 11217                           ; BSR set to: 0
 11218  002C74  0100               	movlb	0	; () banked
 11219  002C76  3FAB               	incfsz	___fltol@exp1& (0+255),f,b
 11220  002C78  D7F7               	goto	l6179
 11221                           
 11222                           ; BSR set to: 0
 11223  002C7A  D01B               	goto	l6193
 11224  002C7C                     l6183:
 11225                           
 11226                           ; BSR set to: 0
 11227  002C7C  0E1F               	movlw	31
 11228  002C7E  0100               	movlb	0	; () banked
 11229  002C80  65AB               	cpfsgt	___fltol@exp1& (0+255),b
 11230  002C82  D012               	goto	l6191
 11231                           
 11232                           ; BSR set to: 0
 11233  002C84  0E00               	movlw	0
 11234  002C86  0100               	movlb	0	; () banked
 11235  002C88  6FA2               	movwf	?___fltol& (0+255),b
 11236  002C8A  0E00               	movlw	0
 11237  002C8C  6FA3               	movwf	(?___fltol+1)& (0+255),b
 11238  002C8E  0E00               	movlw	0
 11239  002C90  6FA4               	movwf	(?___fltol+2)& (0+255),b
 11240  002C92  0E00               	movlw	0
 11241  002C94  6FA5               	movwf	(?___fltol+3)& (0+255),b
 11242                           
 11243                           ; BSR set to: 0
 11244  002C96  0012               	return	
 11245  002C98                     l6189:
 11246                           
 11247                           ; BSR set to: 0
 11248  002C98  0100               	movlb	0	; () banked
 11249  002C9A  90D8               	bcf	status,0,c
 11250  002C9C  37A2               	rlcf	___fltol@f1& (0+255),f,b
 11251  002C9E  37A3               	rlcf	(___fltol@f1+1)& (0+255),f,b
 11252  002CA0  37A4               	rlcf	(___fltol@f1+2)& (0+255),f,b
 11253  002CA2  37A5               	rlcf	(___fltol@f1+3)& (0+255),f,b
 11254  002CA4  0100               	movlb	0	; () banked
 11255  002CA6  07AB               	decf	___fltol@exp1& (0+255),f,b
 11256  002CA8                     l6191:
 11257                           
 11258                           ; BSR set to: 0
 11259  002CA8  0100               	movlb	0	; () banked
 11260  002CAA  51AB               	movf	___fltol@exp1& (0+255),w,b
 11261  002CAC  0100               	movlb	0	; () banked
 11262  002CAE  A4D8               	btfss	status,2,c
 11263  002CB0  D7F3               	goto	l6189
 11264  002CB2                     l6193:
 11265                           
 11266                           ; BSR set to: 0
 11267  002CB2  0100               	movlb	0	; () banked
 11268  002CB4  51AA               	movf	___fltol@sign1& (0+255),w,b
 11269  002CB6  0100               	movlb	0	; () banked
 11270  002CB8  B4D8               	btfsc	status,2,c
 11271  002CBA  D009               	goto	l6197
 11272                           
 11273                           ; BSR set to: 0
 11274  002CBC  0100               	movlb	0	; () banked
 11275  002CBE  1FA5               	comf	(___fltol@f1+3)& (0+255),f,b
 11276  002CC0  1FA4               	comf	(___fltol@f1+2)& (0+255),f,b
 11277  002CC2  1FA3               	comf	(___fltol@f1+1)& (0+255),f,b
 11278  002CC4  6DA2               	negf	___fltol@f1& (0+255),b
 11279  002CC6  0E00               	movlw	0
 11280  002CC8  23A3               	addwfc	(___fltol@f1+1)& (0+255),f,b
 11281  002CCA  23A4               	addwfc	(___fltol@f1+2)& (0+255),f,b
 11282  002CCC  23A5               	addwfc	(___fltol@f1+3)& (0+255),f,b
 11283  002CCE                     l6197:
 11284                           
 11285                           ; BSR set to: 0
 11286  002CCE  C0A2  F0A2         	movff	___fltol@f1,?___fltol
 11287  002CD2  C0A3  F0A3         	movff	___fltol@f1+1,?___fltol+1
 11288  002CD6  C0A4  F0A4         	movff	___fltol@f1+2,?___fltol+2
 11289  002CDA  C0A5  F0A5         	movff	___fltol@f1+3,?___fltol+3
 11290  002CDE  0012               	return	
 11291  002CE0                     __end_of___fltol:
 11292                           	opt stack 0
 11293                           tblptru	equ	0xFF8
 11294                           tblptrh	equ	0xFF7
 11295                           tblptrl	equ	0xFF6
 11296                           tablat	equ	0xFF5
 11297                           prodh	equ	0xFF4
 11298                           prodl	equ	0xFF3
 11299                           intcon	equ	0xFF2
 11300                           postinc0	equ	0xFEE
 11301                           wreg	equ	0xFE8
 11302                           postdec1	equ	0xFE5
 11303                           fsr1l	equ	0xFE1
 11304                           indf2	equ	0xFDF
 11305                           postinc2	equ	0xFDE
 11306                           postdec2	equ	0xFDD
 11307                           fsr2h	equ	0xFDA
 11308                           fsr2l	equ	0xFD9
 11309                           status	equ	0xFD8
 11310                           
 11311 ;; *************** function ___flsub *****************
 11312 ;; Defined at:
 11313 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 11314 ;; Parameters:    Size  Location     Type
 11315 ;;  b               4   90[BANK0 ] long 
 11316 ;;  a               4   94[BANK0 ] long 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  4   90[BANK0 ] long 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0, cstack
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11328 ;;      Params:         0       8       0       0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0
 11331 ;;      Totals:         0       8       0       0       0       0       0
 11332 ;;Total ram usage:        8 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:   12
 11335 ;; This function calls:
 11336 ;;		___fladd
 11337 ;; This function is called by:
 11338 ;;		_printf
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text45
 11343  00360A                     __ptext45:
 11344                           	opt stack 0
 11345  00360A                     ___flsub:
 11346                           	opt stack 15
 11347                           
 11348                           ; BSR set to: 0
 11349                           ;incstack = 0
 11350  00360A  0E00               	movlw	0
 11351  00360C  0100               	movlb	0	; () banked
 11352  00360E  1BBE               	xorwf	___flsub@a& (0+255),f,b
 11353  003610  0E00               	movlw	0
 11354  003612  1BBF               	xorwf	(___flsub@a+1)& (0+255),f,b
 11355  003614  0E00               	movlw	0
 11356  003616  1BC0               	xorwf	(___flsub@a+2)& (0+255),f,b
 11357  003618  0E80               	movlw	128
 11358  00361A  1BC1               	xorwf	(___flsub@a+3)& (0+255),f,b
 11359                           
 11360                           ; BSR set to: 0
 11361  00361C  C0BA  F0A6         	movff	___flsub@b,___fladd@b
 11362  003620  C0BB  F0A7         	movff	___flsub@b+1,___fladd@b+1
 11363  003624  C0BC  F0A8         	movff	___flsub@b+2,___fladd@b+2
 11364  003628  C0BD  F0A9         	movff	___flsub@b+3,___fladd@b+3
 11365  00362C  C0BE  F0AA         	movff	___flsub@a,___fladd@a
 11366  003630  C0BF  F0AB         	movff	___flsub@a+1,___fladd@a+1
 11367  003634  C0C0  F0AC         	movff	___flsub@a+2,___fladd@a+2
 11368  003638  C0C1  F0AD         	movff	___flsub@a+3,___fladd@a+3
 11369  00363C  ECD4  F006         	call	___fladd	;wreg free
 11370  003640  C0A6  F0BA         	movff	?___fladd,?___flsub
 11371  003644  C0A7  F0BB         	movff	?___fladd+1,?___flsub+1
 11372  003648  C0A8  F0BC         	movff	?___fladd+2,?___flsub+2
 11373  00364C  C0A9  F0BD         	movff	?___fladd+3,?___flsub+3
 11374  003650  0012               	return	
 11375  003652                     __end_of___flsub:
 11376                           	opt stack 0
 11377                           tblptru	equ	0xFF8
 11378                           tblptrh	equ	0xFF7
 11379                           tblptrl	equ	0xFF6
 11380                           tablat	equ	0xFF5
 11381                           prodh	equ	0xFF4
 11382                           prodl	equ	0xFF3
 11383                           intcon	equ	0xFF2
 11384                           postinc0	equ	0xFEE
 11385                           wreg	equ	0xFE8
 11386                           postdec1	equ	0xFE5
 11387                           fsr1l	equ	0xFE1
 11388                           indf2	equ	0xFDF
 11389                           postinc2	equ	0xFDE
 11390                           postdec2	equ	0xFDD
 11391                           fsr2h	equ	0xFDA
 11392                           fsr2l	equ	0xFD9
 11393                           status	equ	0xFD8
 11394                           
 11395 ;; *************** function ___fladd *****************
 11396 ;; Defined at:
 11397 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 11398 ;; Parameters:    Size  Location     Type
 11399 ;;  b               4   70[BANK0 ] long 
 11400 ;;  a               4   74[BANK0 ] long 
 11401 ;; Auto vars:     Size  Location     Type
 11402 ;;  grs             1   89[BANK0 ] unsigned char 
 11403 ;;  bexp            1   88[BANK0 ] unsigned char 
 11404 ;;  aexp            1   87[BANK0 ] unsigned char 
 11405 ;;  signs           1   86[BANK0 ] unsigned char 
 11406 ;; Return value:  Size  Location     Type
 11407 ;;                  4   70[BANK0 ] unsigned char 
 11408 ;; Registers used:
 11409 ;;		wreg, status,2, status,0
 11410 ;; Tracked objects:
 11411 ;;		On entry : 0/0
 11412 ;;		On exit  : 0/0
 11413 ;;		Unchanged: 0/0
 11414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11415 ;;      Params:         0       8       0       0       0       0       0
 11416 ;;      Locals:         0       4       0       0       0       0       0
 11417 ;;      Temps:          0       8       0       0       0       0       0
 11418 ;;      Totals:         0      20       0       0       0       0       0
 11419 ;;Total ram usage:       20 bytes
 11420 ;; Hardware stack levels used:    1
 11421 ;; Hardware stack levels required when called:   11
 11422 ;; This function calls:
 11423 ;;		Nothing
 11424 ;; This function is called by:
 11425 ;;		_printf
 11426 ;;		___flsub
 11427 ;; This function uses a non-reentrant model
 11428 ;;
 11429                           
 11430                           	psect	text46
 11431  000DA8                     __ptext46:
 11432                           	opt stack 0
 11433  000DA8                     ___fladd:
 11434                           	opt stack 15
 11435                           
 11436                           ;incstack = 0
 11437  000DA8  0100               	movlb	0	; () banked
 11438  000DAA  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11439  000DAC  0B80               	andlw	128
 11440  000DAE  0100               	movlb	0	; () banked
 11441  000DB0  6FB6               	movwf	___fladd@signs& (0+255),b
 11442  000DB2  0100               	movlb	0	; () banked
 11443  000DB4  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11444  000DB6  25A9               	addwf	(___fladd@b+3)& (0+255),w,b
 11445  000DB8  0100               	movlb	0	; () banked
 11446  000DBA  6FB8               	movwf	___fladd@bexp& (0+255),b
 11447                           
 11448                           ; BSR set to: 0
 11449  000DBC  0100               	movlb	0	; () banked
 11450  000DBE  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 11451  000DC0  D002               	goto	l5525
 11452                           
 11453                           ; BSR set to: 0
 11454  000DC2  0100               	movlb	0	; () banked
 11455  000DC4  81B8               	bsf	___fladd@bexp& (0+255),0,b
 11456  000DC6                     l5525:
 11457                           
 11458                           ; BSR set to: 0
 11459  000DC6  0100               	movlb	0	; () banked
 11460  000DC8  51B8               	movf	___fladd@bexp& (0+255),w,b
 11461  000DCA  0100               	movlb	0	; () banked
 11462  000DCC  B4D8               	btfsc	status,2,c
 11463  000DCE  D012               	goto	l5535
 11464                           
 11465                           ; BSR set to: 0
 11466  000DD0  0100               	movlb	0	; () banked
 11467  000DD2  29B8               	incf	___fladd@bexp& (0+255),w,b
 11468  000DD4  A4D8               	btfss	status,2,c
 11469  000DD6  D009               	goto	l5531
 11470                           
 11471                           ; BSR set to: 0
 11472  000DD8  0E00               	movlw	0
 11473  000DDA  0100               	movlb	0	; () banked
 11474  000DDC  6FA6               	movwf	___fladd@b& (0+255),b
 11475  000DDE  0E00               	movlw	0
 11476  000DE0  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11477  000DE2  0E00               	movlw	0
 11478  000DE4  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11479  000DE6  0E00               	movlw	0
 11480  000DE8  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11481  000DEA                     l5531:
 11482                           
 11483                           ; BSR set to: 0
 11484  000DEA  0100               	movlb	0	; () banked
 11485  000DEC  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 11486                           
 11487                           ; BSR set to: 0
 11488  000DEE  0E00               	movlw	0
 11489  000DF0  0100               	movlb	0	; () banked
 11490  000DF2  D008               	goto	L9
 11491  000DF4                     l5535:
 11492                           
 11493                           ; BSR set to: 0
 11494  000DF4  0E00               	movlw	0
 11495  000DF6  0100               	movlb	0	; () banked
 11496  000DF8  6FA6               	movwf	___fladd@b& (0+255),b
 11497  000DFA  0E00               	movlw	0
 11498  000DFC  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11499  000DFE  0E00               	movlw	0
 11500  000E00  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11501  000E02  0E00               	movlw	0
 11502  000E04                     L9:
 11503  000E04  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11504                           
 11505                           ; BSR set to: 0
 11506                           
 11507                           ; BSR set to: 0
 11508  000E06  0100               	movlb	0	; () banked
 11509  000E08  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11510  000E0A  0B80               	andlw	128
 11511  000E0C  0100               	movlb	0	; () banked
 11512  000E0E  6FB7               	movwf	___fladd@aexp& (0+255),b
 11513                           
 11514                           ; BSR set to: 0
 11515  000E10  0100               	movlb	0	; () banked
 11516  000E12  51B6               	movf	___fladd@signs& (0+255),w,b
 11517  000E14  0100               	movlb	0	; () banked
 11518  000E16  19B7               	xorwf	___fladd@aexp& (0+255),w,b
 11519  000E18  B4D8               	btfsc	status,2,c
 11520  000E1A  D002               	goto	l5543
 11521                           
 11522                           ; BSR set to: 0
 11523  000E1C  0100               	movlb	0	; () banked
 11524  000E1E  8DB6               	bsf	___fladd@signs& (0+255),6,b
 11525  000E20                     l5543:
 11526                           
 11527                           ; BSR set to: 0
 11528  000E20  0100               	movlb	0	; () banked
 11529  000E22  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11530  000E24  25AD               	addwf	(___fladd@a+3)& (0+255),w,b
 11531  000E26  0100               	movlb	0	; () banked
 11532  000E28  6FB7               	movwf	___fladd@aexp& (0+255),b
 11533                           
 11534                           ; BSR set to: 0
 11535  000E2A  0100               	movlb	0	; () banked
 11536  000E2C  AFAC               	btfss	(___fladd@a+2)& (0+255),7,b
 11537  000E2E  D002               	goto	l5549
 11538                           
 11539                           ; BSR set to: 0
 11540  000E30  0100               	movlb	0	; () banked
 11541  000E32  81B7               	bsf	___fladd@aexp& (0+255),0,b
 11542  000E34                     l5549:
 11543                           
 11544                           ; BSR set to: 0
 11545  000E34  0100               	movlb	0	; () banked
 11546  000E36  51B7               	movf	___fladd@aexp& (0+255),w,b
 11547  000E38  0100               	movlb	0	; () banked
 11548  000E3A  B4D8               	btfsc	status,2,c
 11549  000E3C  D012               	goto	l5559
 11550                           
 11551                           ; BSR set to: 0
 11552  000E3E  0100               	movlb	0	; () banked
 11553  000E40  29B7               	incf	___fladd@aexp& (0+255),w,b
 11554  000E42  A4D8               	btfss	status,2,c
 11555  000E44  D009               	goto	l5555
 11556                           
 11557                           ; BSR set to: 0
 11558  000E46  0E00               	movlw	0
 11559  000E48  0100               	movlb	0	; () banked
 11560  000E4A  6FAA               	movwf	___fladd@a& (0+255),b
 11561  000E4C  0E00               	movlw	0
 11562  000E4E  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11563  000E50  0E00               	movlw	0
 11564  000E52  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11565  000E54  0E00               	movlw	0
 11566  000E56  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11567  000E58                     l5555:
 11568                           
 11569                           ; BSR set to: 0
 11570  000E58  0100               	movlb	0	; () banked
 11571  000E5A  8FAC               	bsf	(___fladd@a+2)& (0+255),7,b
 11572                           
 11573                           ; BSR set to: 0
 11574  000E5C  0E00               	movlw	0
 11575  000E5E  0100               	movlb	0	; () banked
 11576  000E60  D008               	goto	L10
 11577  000E62                     l5559:
 11578                           
 11579                           ; BSR set to: 0
 11580  000E62  0E00               	movlw	0
 11581  000E64  0100               	movlb	0	; () banked
 11582  000E66  6FAA               	movwf	___fladd@a& (0+255),b
 11583  000E68  0E00               	movlw	0
 11584  000E6A  6FAB               	movwf	(___fladd@a+1)& (0+255),b
 11585  000E6C  0E00               	movlw	0
 11586  000E6E  6FAC               	movwf	(___fladd@a+2)& (0+255),b
 11587  000E70  0E00               	movlw	0
 11588  000E72                     L10:
 11589  000E72  6FAD               	movwf	(___fladd@a+3)& (0+255),b
 11590                           
 11591                           ; BSR set to: 0
 11592                           
 11593                           ; BSR set to: 0
 11594  000E74  0100               	movlb	0	; () banked
 11595  000E76  51B8               	movf	___fladd@bexp& (0+255),w,b
 11596  000E78  0100               	movlb	0	; () banked
 11597  000E7A  5DB7               	subwf	___fladd@aexp& (0+255),w,b
 11598  000E7C  B0D8               	btfsc	status,0,c
 11599  000E7E  D024               	goto	l5597
 11600                           
 11601                           ; BSR set to: 0
 11602  000E80  0100               	movlb	0	; () banked
 11603  000E82  ADB6               	btfss	___fladd@signs& (0+255),6,b
 11604  000E84  D003               	goto	l5567
 11605                           
 11606                           ; BSR set to: 0
 11607  000E86  0E80               	movlw	128
 11608  000E88  0100               	movlb	0	; () banked
 11609  000E8A  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11610  000E8C                     l5567:
 11611                           
 11612                           ; BSR set to: 0
 11613  000E8C  C0B8  F0B9         	movff	___fladd@bexp,___fladd@grs
 11614                           
 11615                           ; BSR set to: 0
 11616  000E90  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11617                           
 11618                           ; BSR set to: 0
 11619  000E94  C0B9  F0B7         	movff	___fladd@grs,___fladd@aexp
 11620                           
 11621                           ; BSR set to: 0
 11622  000E98  C0A6  F0B9         	movff	___fladd@b,___fladd@grs
 11623                           
 11624                           ; BSR set to: 0
 11625  000E9C  C0AA  F0A6         	movff	___fladd@a,___fladd@b
 11626                           
 11627                           ; BSR set to: 0
 11628  000EA0  C0B9  F0AA         	movff	___fladd@grs,___fladd@a
 11629                           
 11630                           ; BSR set to: 0
 11631  000EA4  C0A7  F0B9         	movff	___fladd@b+1,___fladd@grs
 11632                           
 11633                           ; BSR set to: 0
 11634  000EA8  C0AB  F0A7         	movff	___fladd@a+1,___fladd@b+1
 11635                           
 11636                           ; BSR set to: 0
 11637  000EAC  C0B9  F0AB         	movff	___fladd@grs,___fladd@a+1
 11638                           
 11639                           ; BSR set to: 0
 11640  000EB0  C0A8  F0B9         	movff	___fladd@b+2,___fladd@grs
 11641                           
 11642                           ; BSR set to: 0
 11643  000EB4  C0AC  F0A8         	movff	___fladd@a+2,___fladd@b+2
 11644                           
 11645                           ; BSR set to: 0
 11646  000EB8  C0B9  F0AC         	movff	___fladd@grs,___fladd@a+2
 11647                           
 11648                           ; BSR set to: 0
 11649  000EBC  C0A9  F0B9         	movff	___fladd@b+3,___fladd@grs
 11650                           
 11651                           ; BSR set to: 0
 11652  000EC0  C0AD  F0A9         	movff	___fladd@a+3,___fladd@b+3
 11653                           
 11654                           ; BSR set to: 0
 11655  000EC4  C0B9  F0AD         	movff	___fladd@grs,___fladd@a+3
 11656  000EC8                     l5597:
 11657                           
 11658                           ; BSR set to: 0
 11659  000EC8  0E00               	movlw	0
 11660  000ECA  0100               	movlb	0	; () banked
 11661  000ECC  6FB9               	movwf	___fladd@grs& (0+255),b
 11662                           
 11663                           ; BSR set to: 0
 11664  000ECE  0100               	movlb	0	; () banked
 11665  000ED0  51B8               	movf	___fladd@bexp& (0+255),w,b
 11666  000ED2  0100               	movlb	0	; () banked
 11667  000ED4  6FAE               	movwf	??___fladd& (0+255),b
 11668  000ED6  6BAF               	clrf	(??___fladd+1)& (0+255),b
 11669  000ED8  0100               	movlb	0	; () banked
 11670  000EDA  1FAE               	comf	??___fladd& (0+255),f,b
 11671  000EDC  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11672  000EDE  4BAE               	infsnz	??___fladd& (0+255),f,b
 11673  000EE0  2BAF               	incf	(??___fladd+1)& (0+255),f,b
 11674  000EE2  0100               	movlb	0	; () banked
 11675  000EE4  51B7               	movf	___fladd@aexp& (0+255),w,b
 11676  000EE6  0100               	movlb	0	; () banked
 11677  000EE8  6FB0               	movwf	(??___fladd+2)& (0+255),b
 11678  000EEA  6BB1               	clrf	(??___fladd+3)& (0+255),b
 11679  000EEC  0100               	movlb	0	; () banked
 11680  000EEE  51AE               	movf	??___fladd& (0+255),w,b
 11681  000EF0  0100               	movlb	0	; () banked
 11682  000EF2  27B0               	addwf	(??___fladd+2)& (0+255),f,b
 11683  000EF4  0100               	movlb	0	; () banked
 11684  000EF6  51AF               	movf	(??___fladd+1)& (0+255),w,b
 11685  000EF8  0100               	movlb	0	; () banked
 11686  000EFA  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11687  000EFC  0100               	movlb	0	; () banked
 11688  000EFE  BFB1               	btfsc	(??___fladd+3)& (0+255),7,b
 11689  000F00  D03D               	goto	l1088
 11690  000F02  0100               	movlb	0	; () banked
 11691  000F04  51B1               	movf	(??___fladd+3)& (0+255),w,b
 11692  000F06  E105               	bnz	u6250
 11693  000F08  0E1A               	movlw	26
 11694  000F0A  0100               	movlb	0	; () banked
 11695  000F0C  5DB0               	subwf	(??___fladd+2)& (0+255),w,b
 11696  000F0E  A0D8               	btfss	status,0,c
 11697  000F10  D035               	goto	l1088
 11698  000F12                     u6250:
 11699                           
 11700                           ; BSR set to: 0
 11701  000F12  0100               	movlb	0	; () banked
 11702  000F14  51A6               	movf	___fladd@b& (0+255),w,b
 11703  000F16  0100               	movlb	0	; () banked
 11704  000F18  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 11705  000F1A  0100               	movlb	0	; () banked
 11706  000F1C  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 11707  000F1E  0100               	movlb	0	; () banked
 11708  000F20  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 11709  000F22  B4D8               	btfsc	status,2,c
 11710  000F24  D002               	goto	u6260
 11711  000F26  0E01               	movlw	1
 11712  000F28  D001               	goto	u6270
 11713  000F2A                     u6260:
 11714  000F2A  0E00               	movlw	0
 11715  000F2C                     u6270:
 11716  000F2C  0100               	movlb	0	; () banked
 11717  000F2E  6FB9               	movwf	___fladd@grs& (0+255),b
 11718                           
 11719                           ; BSR set to: 0
 11720  000F30  0E00               	movlw	0
 11721  000F32  0100               	movlb	0	; () banked
 11722  000F34  6FA6               	movwf	___fladd@b& (0+255),b
 11723  000F36  0E00               	movlw	0
 11724  000F38  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11725  000F3A  0E00               	movlw	0
 11726  000F3C  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11727  000F3E  0E00               	movlw	0
 11728  000F40  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11729                           
 11730                           ; BSR set to: 0
 11731  000F42  C0B7  F0B8         	movff	___fladd@aexp,___fladd@bexp
 11732  000F46  D020               	goto	l1087
 11733  000F48                     l1089:
 11734                           
 11735                           ; BSR set to: 0
 11736  000F48  0100               	movlb	0	; () banked
 11737  000F4A  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11738  000F4C  D007               	goto	l5609
 11739                           
 11740                           ; BSR set to: 0
 11741  000F4E  0100               	movlb	0	; () banked
 11742  000F50  90D8               	bcf	status,0,c
 11743  000F52  31B9               	rrcf	___fladd@grs& (0+255),w,b
 11744  000F54  0901               	iorlw	1
 11745  000F56  0100               	movlb	0	; () banked
 11746  000F58  6FB9               	movwf	___fladd@grs& (0+255),b
 11747  000F5A  D003               	goto	l5611
 11748  000F5C                     l5609:
 11749                           
 11750                           ; BSR set to: 0
 11751  000F5C  0100               	movlb	0	; () banked
 11752  000F5E  90D8               	bcf	status,0,c
 11753  000F60  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11754  000F62                     l5611:
 11755                           
 11756                           ; BSR set to: 0
 11757  000F62  0100               	movlb	0	; () banked
 11758  000F64  A1A6               	btfss	___fladd@b& (0+255),0,b
 11759  000F66  D002               	goto	l5615
 11760                           
 11761                           ; BSR set to: 0
 11762  000F68  0100               	movlb	0	; () banked
 11763  000F6A  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11764  000F6C                     l5615:
 11765                           
 11766                           ; BSR set to: 0
 11767  000F6C  0100               	movlb	0	; () banked
 11768  000F6E  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11769  000F70  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11770  000F72  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11771  000F74  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11772  000F76  33A6               	rrcf	___fladd@b& (0+255),f,b
 11773                           
 11774                           ; BSR set to: 0
 11775  000F78  0100               	movlb	0	; () banked
 11776  000F7A  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11777  000F7C                     l1088:
 11778                           
 11779                           ; BSR set to: 0
 11780  000F7C  0100               	movlb	0	; () banked
 11781  000F7E  51B7               	movf	___fladd@aexp& (0+255),w,b
 11782  000F80  0100               	movlb	0	; () banked
 11783  000F82  5DB8               	subwf	___fladd@bexp& (0+255),w,b
 11784  000F84  A0D8               	btfss	status,0,c
 11785  000F86  D7E0               	goto	l1089
 11786  000F88                     l1087:
 11787                           
 11788                           ; BSR set to: 0
 11789  000F88  0100               	movlb	0	; () banked
 11790  000F8A  BDB6               	btfsc	___fladd@signs& (0+255),6,b
 11791  000F8C  D03F               	goto	l5643
 11792                           
 11793                           ; BSR set to: 0
 11794  000F8E  0100               	movlb	0	; () banked
 11795  000F90  51B8               	movf	___fladd@bexp& (0+255),w,b
 11796  000F92  0100               	movlb	0	; () banked
 11797  000F94  A4D8               	btfss	status,2,c
 11798  000F96  D00A               	goto	l5625
 11799                           
 11800                           ; BSR set to: 0
 11801  000F98  0E00               	movlw	0
 11802  000F9A  0100               	movlb	0	; () banked
 11803  000F9C  6FA6               	movwf	?___fladd& (0+255),b
 11804  000F9E  0E00               	movlw	0
 11805  000FA0  6FA7               	movwf	(?___fladd+1)& (0+255),b
 11806  000FA2  0E00               	movlw	0
 11807  000FA4  6FA8               	movwf	(?___fladd+2)& (0+255),b
 11808  000FA6  0E00               	movlw	0
 11809  000FA8  6FA9               	movwf	(?___fladd+3)& (0+255),b
 11810                           
 11811                           ; BSR set to: 0
 11812  000FAA  0012               	return	
 11813  000FAC                     l5625:
 11814                           
 11815                           ; BSR set to: 0
 11816  000FAC  0100               	movlb	0	; () banked
 11817  000FAE  51AA               	movf	___fladd@a& (0+255),w,b
 11818  000FB0  0100               	movlb	0	; () banked
 11819  000FB2  27A6               	addwf	___fladd@b& (0+255),f,b
 11820  000FB4  0100               	movlb	0	; () banked
 11821  000FB6  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11822  000FB8  0100               	movlb	0	; () banked
 11823  000FBA  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11824  000FBC  0100               	movlb	0	; () banked
 11825  000FBE  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11826  000FC0  0100               	movlb	0	; () banked
 11827  000FC2  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11828  000FC4  0100               	movlb	0	; () banked
 11829  000FC6  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11830  000FC8  0100               	movlb	0	; () banked
 11831  000FCA  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11832                           
 11833                           ; BSR set to: 0
 11834  000FCC  0100               	movlb	0	; () banked
 11835  000FCE  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 11836  000FD0  D0CC               	goto	l5679
 11837                           
 11838                           ; BSR set to: 0
 11839  000FD2  0100               	movlb	0	; () banked
 11840  000FD4  A1B9               	btfss	___fladd@grs& (0+255),0,b
 11841  000FD6  D009               	goto	l5633
 11842                           
 11843                           ; BSR set to: 0
 11844  000FD8  0100               	movlb	0	; () banked
 11845  000FDA  90D8               	bcf	status,0,c
 11846  000FDC  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11847  000FDE  0100               	movlb	0	; () banked
 11848  000FE0  51B9               	movf	___fladd@grs& (0+255),w,b
 11849  000FE2  0901               	iorlw	1
 11850  000FE4  0100               	movlb	0	; () banked
 11851  000FE6  6FB9               	movwf	___fladd@grs& (0+255),b
 11852  000FE8  D003               	goto	l5635
 11853  000FEA                     l5633:
 11854                           
 11855                           ; BSR set to: 0
 11856  000FEA  0100               	movlb	0	; () banked
 11857  000FEC  90D8               	bcf	status,0,c
 11858  000FEE  33B9               	rrcf	___fladd@grs& (0+255),f,b
 11859  000FF0                     l5635:
 11860                           
 11861                           ; BSR set to: 0
 11862  000FF0  0100               	movlb	0	; () banked
 11863  000FF2  A1A6               	btfss	___fladd@b& (0+255),0,b
 11864  000FF4  D002               	goto	l5639
 11865                           
 11866                           ; BSR set to: 0
 11867  000FF6  0100               	movlb	0	; () banked
 11868  000FF8  8FB9               	bsf	___fladd@grs& (0+255),7,b
 11869  000FFA                     l5639:
 11870                           
 11871                           ; BSR set to: 0
 11872  000FFA  0100               	movlb	0	; () banked
 11873  000FFC  35A9               	rlcf	(___fladd@b+3)& (0+255),w,b
 11874  000FFE  33A9               	rrcf	(___fladd@b+3)& (0+255),f,b
 11875  001000  33A8               	rrcf	(___fladd@b+2)& (0+255),f,b
 11876  001002  33A7               	rrcf	(___fladd@b+1)& (0+255),f,b
 11877  001004  33A6               	rrcf	___fladd@b& (0+255),f,b
 11878                           
 11879                           ; BSR set to: 0
 11880  001006  0100               	movlb	0	; () banked
 11881  001008  2BB8               	incf	___fladd@bexp& (0+255),f,b
 11882                           
 11883                           ; BSR set to: 0
 11884  00100A  D0AF               	goto	l5679
 11885  00100C                     l5643:
 11886                           
 11887                           ; BSR set to: 0
 11888  00100C  0100               	movlb	0	; () banked
 11889  00100E  51AA               	movf	___fladd@a& (0+255),w,b
 11890  001010  0100               	movlb	0	; () banked
 11891  001012  5DA6               	subwf	___fladd@b& (0+255),w,b
 11892  001014  0100               	movlb	0	; () banked
 11893  001016  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11894  001018  0100               	movlb	0	; () banked
 11895  00101A  59A7               	subwfb	(___fladd@b+1)& (0+255),w,b
 11896  00101C  0100               	movlb	0	; () banked
 11897  00101E  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11898  001020  0100               	movlb	0	; () banked
 11899  001022  59A8               	subwfb	(___fladd@b+2)& (0+255),w,b
 11900  001024  0100               	movlb	0	; () banked
 11901  001026  51A9               	movf	(___fladd@b+3)& (0+255),w,b
 11902  001028  0A80               	xorlw	128
 11903  00102A  0100               	movlb	0	; () banked
 11904  00102C  6FAE               	movwf	??___fladd& (0+255),b
 11905  00102E  0100               	movlb	0	; () banked
 11906  001030  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11907  001032  0A80               	xorlw	128
 11908  001034  0100               	movlb	0	; () banked
 11909  001036  59AE               	subwfb	??___fladd& (0+255),w,b
 11910  001038  B0D8               	btfsc	status,0,c
 11911  00103A  D050               	goto	l5653
 11912                           
 11913                           ; BSR set to: 0
 11914  00103C  C0A6  F0AE         	movff	___fladd@b,??___fladd
 11915  001040  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 11916  001044  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 11917  001048  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 11918  00104C  0100               	movlb	0	; () banked
 11919  00104E  1FAE               	comf	??___fladd& (0+255),f,b
 11920  001050  1FAF               	comf	(??___fladd+1)& (0+255),f,b
 11921  001052  1FB0               	comf	(??___fladd+2)& (0+255),f,b
 11922  001054  1FB1               	comf	(??___fladd+3)& (0+255),f,b
 11923  001056  2BAE               	incf	??___fladd& (0+255),f,b
 11924  001058  0E00               	movlw	0
 11925  00105A  23AF               	addwfc	(??___fladd+1)& (0+255),f,b
 11926  00105C  23B0               	addwfc	(??___fladd+2)& (0+255),f,b
 11927  00105E  23B1               	addwfc	(??___fladd+3)& (0+255),f,b
 11928  001060  0100               	movlb	0	; () banked
 11929  001062  51AA               	movf	___fladd@a& (0+255),w,b
 11930  001064  0100               	movlb	0	; () banked
 11931  001066  25AE               	addwf	??___fladd& (0+255),w,b
 11932  001068  0100               	movlb	0	; () banked
 11933  00106A  6FB2               	movwf	(??___fladd+4)& (0+255),b
 11934  00106C  0100               	movlb	0	; () banked
 11935  00106E  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 11936  001070  0100               	movlb	0	; () banked
 11937  001072  21AF               	addwfc	(??___fladd+1)& (0+255),w,b
 11938  001074  0100               	movlb	0	; () banked
 11939  001076  6FB3               	movwf	(??___fladd+5)& (0+255),b
 11940  001078  0100               	movlb	0	; () banked
 11941  00107A  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 11942  00107C  0100               	movlb	0	; () banked
 11943  00107E  21B0               	addwfc	(??___fladd+2)& (0+255),w,b
 11944  001080  0100               	movlb	0	; () banked
 11945  001082  6FB4               	movwf	(??___fladd+6)& (0+255),b
 11946  001084  0100               	movlb	0	; () banked
 11947  001086  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 11948  001088  0100               	movlb	0	; () banked
 11949  00108A  21B1               	addwfc	(??___fladd+3)& (0+255),w,b
 11950  00108C  0100               	movlb	0	; () banked
 11951  00108E  6FB5               	movwf	(??___fladd+7)& (0+255),b
 11952  001090  0EFF               	movlw	255
 11953  001092  0100               	movlb	0	; () banked
 11954  001094  25B2               	addwf	(??___fladd+4)& (0+255),w,b
 11955  001096  0100               	movlb	0	; () banked
 11956  001098  6FA6               	movwf	___fladd@b& (0+255),b
 11957  00109A  0EFF               	movlw	255
 11958  00109C  0100               	movlb	0	; () banked
 11959  00109E  21B3               	addwfc	(??___fladd+5)& (0+255),w,b
 11960  0010A0  0100               	movlb	0	; () banked
 11961  0010A2  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 11962  0010A4  0EFF               	movlw	255
 11963  0010A6  0100               	movlb	0	; () banked
 11964  0010A8  21B4               	addwfc	(??___fladd+6)& (0+255),w,b
 11965  0010AA  0100               	movlb	0	; () banked
 11966  0010AC  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 11967  0010AE  0EFF               	movlw	255
 11968  0010B0  0100               	movlb	0	; () banked
 11969  0010B2  21B5               	addwfc	(??___fladd+7)& (0+255),w,b
 11970  0010B4  0100               	movlb	0	; () banked
 11971  0010B6  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 11972  0010B8  0E80               	movlw	128
 11973  0010BA  0100               	movlb	0	; () banked
 11974  0010BC  1BB6               	xorwf	___fladd@signs& (0+255),f,b
 11975                           
 11976                           ; BSR set to: 0
 11977  0010BE  0100               	movlb	0	; () banked
 11978  0010C0  6DB9               	negf	___fladd@grs& (0+255),b
 11979                           
 11980                           ; BSR set to: 0
 11981  0010C2  0100               	movlb	0	; () banked
 11982  0010C4  51B9               	movf	___fladd@grs& (0+255),w,b
 11983  0010C6  0100               	movlb	0	; () banked
 11984  0010C8  A4D8               	btfss	status,2,c
 11985  0010CA  D018               	goto	l1104
 11986                           
 11987                           ; BSR set to: 0
 11988  0010CC  0E01               	movlw	1
 11989  0010CE  0100               	movlb	0	; () banked
 11990  0010D0  27A6               	addwf	___fladd@b& (0+255),f,b
 11991  0010D2  0E00               	movlw	0
 11992  0010D4  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 11993  0010D6  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 11994  0010D8  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 11995                           
 11996                           ; BSR set to: 0
 11997  0010DA  D010               	goto	l1104
 11998  0010DC                     l5653:
 11999                           
 12000                           ; BSR set to: 0
 12001  0010DC  0100               	movlb	0	; () banked
 12002  0010DE  51AA               	movf	___fladd@a& (0+255),w,b
 12003  0010E0  0100               	movlb	0	; () banked
 12004  0010E2  5FA6               	subwf	___fladd@b& (0+255),f,b
 12005  0010E4  0100               	movlb	0	; () banked
 12006  0010E6  51AB               	movf	(___fladd@a+1)& (0+255),w,b
 12007  0010E8  0100               	movlb	0	; () banked
 12008  0010EA  5BA7               	subwfb	(___fladd@b+1)& (0+255),f,b
 12009  0010EC  0100               	movlb	0	; () banked
 12010  0010EE  51AC               	movf	(___fladd@a+2)& (0+255),w,b
 12011  0010F0  0100               	movlb	0	; () banked
 12012  0010F2  5BA8               	subwfb	(___fladd@b+2)& (0+255),f,b
 12013  0010F4  0100               	movlb	0	; () banked
 12014  0010F6  51AD               	movf	(___fladd@a+3)& (0+255),w,b
 12015  0010F8  0100               	movlb	0	; () banked
 12016  0010FA  5BA9               	subwfb	(___fladd@b+3)& (0+255),f,b
 12017  0010FC                     l1104:
 12018                           
 12019                           ; BSR set to: 0
 12020  0010FC  0100               	movlb	0	; () banked
 12021  0010FE  51A6               	movf	___fladd@b& (0+255),w,b
 12022  001100  0100               	movlb	0	; () banked
 12023  001102  11A7               	iorwf	(___fladd@b+1)& (0+255),w,b
 12024  001104  0100               	movlb	0	; () banked
 12025  001106  11A8               	iorwf	(___fladd@b+2)& (0+255),w,b
 12026  001108  0100               	movlb	0	; () banked
 12027  00110A  11A9               	iorwf	(___fladd@b+3)& (0+255),w,b
 12028  00110C  A4D8               	btfss	status,2,c
 12029  00110E  D02A               	goto	l5677
 12030                           
 12031                           ; BSR set to: 0
 12032  001110  0100               	movlb	0	; () banked
 12033  001112  51B9               	movf	___fladd@grs& (0+255),w,b
 12034  001114  0100               	movlb	0	; () banked
 12035  001116  A4D8               	btfss	status,2,c
 12036  001118  D025               	goto	l5677
 12037                           
 12038                           ; BSR set to: 0
 12039  00111A  0E00               	movlw	0
 12040  00111C  0100               	movlb	0	; () banked
 12041  00111E  6FA6               	movwf	?___fladd& (0+255),b
 12042  001120  0E00               	movlw	0
 12043  001122  6FA7               	movwf	(?___fladd+1)& (0+255),b
 12044  001124  0E00               	movlw	0
 12045  001126  6FA8               	movwf	(?___fladd+2)& (0+255),b
 12046  001128  0E00               	movlw	0
 12047  00112A  6FA9               	movwf	(?___fladd+3)& (0+255),b
 12048                           
 12049                           ; BSR set to: 0
 12050  00112C  0012               	return	
 12051  00112E                     l5661:
 12052                           
 12053                           ; BSR set to: 0
 12054  00112E  0100               	movlb	0	; () banked
 12055  001130  90D8               	bcf	status,0,c
 12056  001132  37A6               	rlcf	___fladd@b& (0+255),f,b
 12057  001134  37A7               	rlcf	(___fladd@b+1)& (0+255),f,b
 12058  001136  37A8               	rlcf	(___fladd@b+2)& (0+255),f,b
 12059  001138  37A9               	rlcf	(___fladd@b+3)& (0+255),f,b
 12060                           
 12061                           ; BSR set to: 0
 12062  00113A  0100               	movlb	0	; () banked
 12063  00113C  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12064  00113E  D002               	goto	l5667
 12065                           
 12066                           ; BSR set to: 0
 12067  001140  0100               	movlb	0	; () banked
 12068  001142  81A6               	bsf	___fladd@b& (0+255),0,b
 12069  001144                     l5667:
 12070                           
 12071                           ; BSR set to: 0
 12072  001144  0100               	movlb	0	; () banked
 12073  001146  A1B9               	btfss	___fladd@grs& (0+255),0,b
 12074  001148  D003               	goto	l5671
 12075                           
 12076                           ; BSR set to: 0
 12077  00114A  80D8               	bsf	status,0,c
 12078  00114C  0100               	movlb	0	; () banked
 12079  00114E  D002               	goto	L11
 12080  001150                     l5671:
 12081                           
 12082                           ; BSR set to: 0
 12083  001150  0100               	movlb	0	; () banked
 12084  001152  90D8               	bcf	status,0,c
 12085  001154                     L11:
 12086  001154  37B9               	rlcf	___fladd@grs& (0+255),f,b
 12087                           
 12088                           ; BSR set to: 0
 12089                           
 12090                           ; BSR set to: 0
 12091  001156  0100               	movlb	0	; () banked
 12092  001158  51B8               	movf	___fladd@bexp& (0+255),w,b
 12093  00115A  0100               	movlb	0	; () banked
 12094  00115C  B4D8               	btfsc	status,2,c
 12095  00115E  D002               	goto	l5677
 12096                           
 12097                           ; BSR set to: 0
 12098  001160  0100               	movlb	0	; () banked
 12099  001162  07B8               	decf	___fladd@bexp& (0+255),f,b
 12100  001164                     l5677:
 12101                           
 12102                           ; BSR set to: 0
 12103  001164  0100               	movlb	0	; () banked
 12104  001166  AFA8               	btfss	(___fladd@b+2)& (0+255),7,b
 12105  001168  D7E2               	goto	l5661
 12106  00116A                     l5679:
 12107                           
 12108                           ; BSR set to: 0
 12109  00116A  0E00               	movlw	0
 12110  00116C  0100               	movlb	0	; () banked
 12111  00116E  6FB7               	movwf	___fladd@aexp& (0+255),b
 12112                           
 12113                           ; BSR set to: 0
 12114  001170  0100               	movlb	0	; () banked
 12115  001172  AFB9               	btfss	___fladd@grs& (0+255),7,b
 12116  001174  D00D               	goto	l1113
 12117                           
 12118                           ; BSR set to: 0
 12119  001176  C0B9  F0AE         	movff	___fladd@grs,??___fladd
 12120  00117A  0E7F               	movlw	127
 12121  00117C  0100               	movlb	0	; () banked
 12122  00117E  17AE               	andwf	??___fladd& (0+255),f,b
 12123  001180  A4D8               	btfss	status,2,c
 12124  001182  D003               	goto	l5687
 12125                           
 12126                           ; BSR set to: 0
 12127                           
 12128                           ; BSR set to: 0
 12129  001184  0100               	movlb	0	; () banked
 12130  001186  A1A6               	btfss	___fladd@b& (0+255),0,b
 12131  001188  D003               	goto	l1113
 12132  00118A                     l5687:
 12133                           
 12134                           ; BSR set to: 0
 12135  00118A  0E01               	movlw	1
 12136  00118C  0100               	movlb	0	; () banked
 12137  00118E  6FB7               	movwf	___fladd@aexp& (0+255),b
 12138  001190                     l1113:
 12139                           
 12140                           ; BSR set to: 0
 12141  001190  0100               	movlb	0	; () banked
 12142  001192  51B7               	movf	___fladd@aexp& (0+255),w,b
 12143  001194  0100               	movlb	0	; () banked
 12144  001196  B4D8               	btfsc	status,2,c
 12145  001198  D026               	goto	l5697
 12146                           
 12147                           ; BSR set to: 0
 12148  00119A  0E01               	movlw	1
 12149  00119C  0100               	movlb	0	; () banked
 12150  00119E  27A6               	addwf	___fladd@b& (0+255),f,b
 12151  0011A0  0E00               	movlw	0
 12152  0011A2  23A7               	addwfc	(___fladd@b+1)& (0+255),f,b
 12153  0011A4  23A8               	addwfc	(___fladd@b+2)& (0+255),f,b
 12154  0011A6  23A9               	addwfc	(___fladd@b+3)& (0+255),f,b
 12155                           
 12156                           ; BSR set to: 0
 12157  0011A8  0100               	movlb	0	; () banked
 12158  0011AA  A1A9               	btfss	(___fladd@b+3)& (0+255),0,b
 12159  0011AC  D01C               	goto	l5697
 12160                           
 12161                           ; BSR set to: 0
 12162  0011AE  C0A6  F0AE         	movff	___fladd@b,??___fladd
 12163  0011B2  C0A7  F0AF         	movff	___fladd@b+1,??___fladd+1
 12164  0011B6  C0A8  F0B0         	movff	___fladd@b+2,??___fladd+2
 12165  0011BA  C0A9  F0B1         	movff	___fladd@b+3,??___fladd+3
 12166  0011BE  0100               	movlb	0	; () banked
 12167  0011C0  35B1               	rlcf	(??___fladd+3)& (0+255),w,b
 12168  0011C2  33B1               	rrcf	(??___fladd+3)& (0+255),f,b
 12169  0011C4  33B0               	rrcf	(??___fladd+2)& (0+255),f,b
 12170  0011C6  33AF               	rrcf	(??___fladd+1)& (0+255),f,b
 12171  0011C8  33AE               	rrcf	??___fladd& (0+255),f,b
 12172  0011CA  C0AE  F0A6         	movff	??___fladd,___fladd@b
 12173  0011CE  C0AF  F0A7         	movff	??___fladd+1,___fladd@b+1
 12174  0011D2  C0B0  F0A8         	movff	??___fladd+2,___fladd@b+2
 12175  0011D6  C0B1  F0A9         	movff	??___fladd+3,___fladd@b+3
 12176  0011DA  0100               	movlb	0	; () banked
 12177  0011DC  29B8               	incf	___fladd@bexp& (0+255),w,b
 12178  0011DE  B4D8               	btfsc	status,2,c
 12179  0011E0  D002               	goto	l5697
 12180                           
 12181                           ; BSR set to: 0
 12182  0011E2  0100               	movlb	0	; () banked
 12183  0011E4  2BB8               	incf	___fladd@bexp& (0+255),f,b
 12184  0011E6                     l5697:
 12185                           
 12186                           ; BSR set to: 0
 12187  0011E6  0100               	movlb	0	; () banked
 12188  0011E8  29B8               	incf	___fladd@bexp& (0+255),w,b
 12189  0011EA  B4D8               	btfsc	status,2,c
 12190  0011EC  D005               	goto	l5701
 12191                           
 12192                           ; BSR set to: 0
 12193  0011EE  0100               	movlb	0	; () banked
 12194  0011F0  51B8               	movf	___fladd@bexp& (0+255),w,b
 12195  0011F2  0100               	movlb	0	; () banked
 12196  0011F4  A4D8               	btfss	status,2,c
 12197  0011F6  D011               	goto	l5705
 12198  0011F8                     l5701:
 12199                           
 12200                           ; BSR set to: 0
 12201  0011F8  0E00               	movlw	0
 12202  0011FA  0100               	movlb	0	; () banked
 12203  0011FC  6FA6               	movwf	___fladd@b& (0+255),b
 12204  0011FE  0E00               	movlw	0
 12205  001200  6FA7               	movwf	(___fladd@b+1)& (0+255),b
 12206  001202  0E00               	movlw	0
 12207  001204  6FA8               	movwf	(___fladd@b+2)& (0+255),b
 12208  001206  0E00               	movlw	0
 12209  001208  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12210  00120A  0100               	movlb	0	; () banked
 12211  00120C  51B8               	movf	___fladd@bexp& (0+255),w,b
 12212  00120E  0100               	movlb	0	; () banked
 12213  001210  A4D8               	btfss	status,2,c
 12214  001212  D003               	goto	l5705
 12215                           
 12216                           ; BSR set to: 0
 12217  001214  0E00               	movlw	0
 12218  001216  0100               	movlb	0	; () banked
 12219  001218  6FB6               	movwf	___fladd@signs& (0+255),b
 12220  00121A                     l5705:
 12221                           
 12222                           ; BSR set to: 0
 12223  00121A  0100               	movlb	0	; () banked
 12224  00121C  A1B8               	btfss	___fladd@bexp& (0+255),0,b
 12225  00121E  D003               	goto	l5709
 12226                           
 12227                           ; BSR set to: 0
 12228  001220  0100               	movlb	0	; () banked
 12229  001222  8FA8               	bsf	(___fladd@b+2)& (0+255),7,b
 12230  001224  D002               	goto	l5711
 12231  001226                     l5709:
 12232                           
 12233                           ; BSR set to: 0
 12234  001226  0100               	movlb	0	; () banked
 12235  001228  9FA8               	bcf	(___fladd@b+2)& (0+255),7,b
 12236  00122A                     l5711:
 12237                           
 12238                           ; BSR set to: 0
 12239  00122A  0100               	movlb	0	; () banked
 12240  00122C  90D8               	bcf	status,0,c
 12241  00122E  31B8               	rrcf	___fladd@bexp& (0+255),w,b
 12242  001230  0100               	movlb	0	; () banked
 12243  001232  6FA9               	movwf	(___fladd@b+3)& (0+255),b
 12244                           
 12245                           ; BSR set to: 0
 12246  001234  0100               	movlb	0	; () banked
 12247  001236  AFB6               	btfss	___fladd@signs& (0+255),7,b
 12248  001238  D002               	goto	l5717
 12249                           
 12250                           ; BSR set to: 0
 12251  00123A  0100               	movlb	0	; () banked
 12252  00123C  8FA9               	bsf	(___fladd@b+3)& (0+255),7,b
 12253  00123E                     l5717:
 12254                           
 12255                           ; BSR set to: 0
 12256  00123E  C0A6  F0A6         	movff	___fladd@b,?___fladd
 12257  001242  C0A7  F0A7         	movff	___fladd@b+1,?___fladd+1
 12258  001246  C0A8  F0A8         	movff	___fladd@b+2,?___fladd+2
 12259  00124A  C0A9  F0A9         	movff	___fladd@b+3,?___fladd+3
 12260  00124E  0012               	return	
 12261  001250                     __end_of___fladd:
 12262                           	opt stack 0
 12263                           tblptru	equ	0xFF8
 12264                           tblptrh	equ	0xFF7
 12265                           tblptrl	equ	0xFF6
 12266                           tablat	equ	0xFF5
 12267                           prodh	equ	0xFF4
 12268                           prodl	equ	0xFF3
 12269                           intcon	equ	0xFF2
 12270                           postinc0	equ	0xFEE
 12271                           wreg	equ	0xFE8
 12272                           postdec1	equ	0xFE5
 12273                           fsr1l	equ	0xFE1
 12274                           indf2	equ	0xFDF
 12275                           postinc2	equ	0xFDE
 12276                           postdec2	equ	0xFDD
 12277                           fsr2h	equ	0xFDA
 12278                           fsr2l	equ	0xFD9
 12279                           status	equ	0xFD8
 12280                           
 12281 ;; *************** function ___flneg *****************
 12282 ;; Defined at:
 12283 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flneg.c"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;  f1              4   18[BANK0 ] unsigned char 
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  4   18[BANK0 ] unsigned char 
 12290 ;; Registers used:
 12291 ;;		wreg, status,2, status,0
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12297 ;;      Params:         0       4       0       0       0       0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0
 12299 ;;      Temps:          0       0       0       0       0       0       0
 12300 ;;      Totals:         0       4       0       0       0       0       0
 12301 ;;Total ram usage:        4 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:   11
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_printf
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           	psect	text47
 12312  003798                     __ptext47:
 12313                           	opt stack 0
 12314  003798                     ___flneg:
 12315                           	opt stack 16
 12316                           
 12317                           ; BSR set to: 0
 12318                           ;incstack = 0
 12319  003798  0100               	movlb	0	; () banked
 12320  00379A  5172               	movf	___flneg@f1& (0+255),w,b
 12321  00379C  0100               	movlb	0	; () banked
 12322  00379E  1173               	iorwf	(___flneg@f1+1)& (0+255),w,b
 12323  0037A0  0100               	movlb	0	; () banked
 12324  0037A2  1174               	iorwf	(___flneg@f1+2)& (0+255),w,b
 12325  0037A4  0100               	movlb	0	; () banked
 12326  0037A6  1175               	iorwf	(___flneg@f1+3)& (0+255),w,b
 12327  0037A8  B4D8               	btfsc	status,2,c
 12328  0037AA  D009               	goto	l6153
 12329                           
 12330                           ; BSR set to: 0
 12331  0037AC  0E00               	movlw	0
 12332  0037AE  0100               	movlb	0	; () banked
 12333  0037B0  1B72               	xorwf	___flneg@f1& (0+255),f,b
 12334  0037B2  0E00               	movlw	0
 12335  0037B4  1B73               	xorwf	(___flneg@f1+1)& (0+255),f,b
 12336  0037B6  0E00               	movlw	0
 12337  0037B8  1B74               	xorwf	(___flneg@f1+2)& (0+255),f,b
 12338  0037BA  0E80               	movlw	128
 12339  0037BC  1B75               	xorwf	(___flneg@f1+3)& (0+255),f,b
 12340  0037BE                     l6153:
 12341                           
 12342                           ; BSR set to: 0
 12343  0037BE  C072  F072         	movff	___flneg@f1,?___flneg
 12344  0037C2  C073  F073         	movff	___flneg@f1+1,?___flneg+1
 12345  0037C6  C074  F074         	movff	___flneg@f1+2,?___flneg+2
 12346  0037CA  C075  F075         	movff	___flneg@f1+3,?___flneg+3
 12347  0037CE  0012               	return	
 12348  0037D0                     __end_of___flneg:
 12349                           	opt stack 0
 12350                           tblptru	equ	0xFF8
 12351                           tblptrh	equ	0xFF7
 12352                           tblptrl	equ	0xFF6
 12353                           tablat	equ	0xFF5
 12354                           prodh	equ	0xFF4
 12355                           prodl	equ	0xFF3
 12356                           intcon	equ	0xFF2
 12357                           postinc0	equ	0xFEE
 12358                           wreg	equ	0xFE8
 12359                           postdec1	equ	0xFE5
 12360                           fsr1l	equ	0xFE1
 12361                           indf2	equ	0xFDF
 12362                           postinc2	equ	0xFDE
 12363                           postdec2	equ	0xFDD
 12364                           fsr2h	equ	0xFDA
 12365                           fsr2l	equ	0xFD9
 12366                           status	equ	0xFD8
 12367                           
 12368 ;; *************** function ___flge *****************
 12369 ;; Defined at:
 12370 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 12371 ;; Parameters:    Size  Location     Type
 12372 ;;  ff1             4   18[BANK0 ] unsigned char 
 12373 ;;  ff2             4   22[BANK0 ] unsigned char 
 12374 ;; Auto vars:     Size  Location     Type
 12375 ;;		None
 12376 ;; Return value:  Size  Location     Type
 12377 ;;		None               void
 12378 ;; Registers used:
 12379 ;;		wreg, status,2, status,0
 12380 ;; Tracked objects:
 12381 ;;		On entry : 0/0
 12382 ;;		On exit  : 0/0
 12383 ;;		Unchanged: 0/0
 12384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12385 ;;      Params:         0       8       0       0       0       0       0
 12386 ;;      Locals:         0       0       0       0       0       0       0
 12387 ;;      Temps:          0       4       0       0       0       0       0
 12388 ;;      Totals:         0      12       0       0       0       0       0
 12389 ;;Total ram usage:       12 bytes
 12390 ;; Hardware stack levels used:    1
 12391 ;; Hardware stack levels required when called:   11
 12392 ;; This function calls:
 12393 ;;		Nothing
 12394 ;; This function is called by:
 12395 ;;		_printf
 12396 ;; This function uses a non-reentrant model
 12397 ;;
 12398                           
 12399                           	psect	text48
 12400  002662                     __ptext48:
 12401                           	opt stack 0
 12402  002662                     ___flge:
 12403                           	opt stack 16
 12404                           
 12405                           ; BSR set to: 0
 12406                           ;incstack = 0
 12407  002662  0E00               	movlw	0
 12408  002664  0100               	movlb	0	; () banked
 12409  002666  1572               	andwf	___flge@ff1& (0+255),w,b
 12410  002668  0100               	movlb	0	; () banked
 12411  00266A  6F7A               	movwf	??___flge& (0+255),b
 12412  00266C  0E00               	movlw	0
 12413  00266E  0100               	movlb	0	; () banked
 12414  002670  1573               	andwf	(___flge@ff1+1)& (0+255),w,b
 12415  002672  0100               	movlb	0	; () banked
 12416  002674  6F7B               	movwf	(??___flge+1)& (0+255),b
 12417  002676  0E80               	movlw	128
 12418  002678  0100               	movlb	0	; () banked
 12419  00267A  1574               	andwf	(___flge@ff1+2)& (0+255),w,b
 12420  00267C  0100               	movlb	0	; () banked
 12421  00267E  6F7C               	movwf	(??___flge+2)& (0+255),b
 12422  002680  0E7F               	movlw	127
 12423  002682  0100               	movlb	0	; () banked
 12424  002684  1575               	andwf	(___flge@ff1+3)& (0+255),w,b
 12425  002686  0100               	movlb	0	; () banked
 12426  002688  6F7D               	movwf	(??___flge+3)& (0+255),b
 12427  00268A  0100               	movlb	0	; () banked
 12428  00268C  517A               	movf	??___flge& (0+255),w,b
 12429  00268E  0100               	movlb	0	; () banked
 12430  002690  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12431  002692  0100               	movlb	0	; () banked
 12432  002694  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12433  002696  0100               	movlb	0	; () banked
 12434  002698  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12435  00269A  A4D8               	btfss	status,2,c
 12436  00269C  D009               	goto	l6131
 12437                           
 12438                           ; BSR set to: 0
 12439  00269E  0E00               	movlw	0
 12440  0026A0  0100               	movlb	0	; () banked
 12441  0026A2  6F72               	movwf	___flge@ff1& (0+255),b
 12442  0026A4  0E00               	movlw	0
 12443  0026A6  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12444  0026A8  0E00               	movlw	0
 12445  0026AA  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12446  0026AC  0E00               	movlw	0
 12447  0026AE  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12448  0026B0                     l6131:
 12449                           
 12450                           ; BSR set to: 0
 12451  0026B0  0E00               	movlw	0
 12452  0026B2  0100               	movlb	0	; () banked
 12453  0026B4  1576               	andwf	___flge@ff2& (0+255),w,b
 12454  0026B6  0100               	movlb	0	; () banked
 12455  0026B8  6F7A               	movwf	??___flge& (0+255),b
 12456  0026BA  0E00               	movlw	0
 12457  0026BC  0100               	movlb	0	; () banked
 12458  0026BE  1577               	andwf	(___flge@ff2+1)& (0+255),w,b
 12459  0026C0  0100               	movlb	0	; () banked
 12460  0026C2  6F7B               	movwf	(??___flge+1)& (0+255),b
 12461  0026C4  0E80               	movlw	128
 12462  0026C6  0100               	movlb	0	; () banked
 12463  0026C8  1578               	andwf	(___flge@ff2+2)& (0+255),w,b
 12464  0026CA  0100               	movlb	0	; () banked
 12465  0026CC  6F7C               	movwf	(??___flge+2)& (0+255),b
 12466  0026CE  0E7F               	movlw	127
 12467  0026D0  0100               	movlb	0	; () banked
 12468  0026D2  1579               	andwf	(___flge@ff2+3)& (0+255),w,b
 12469  0026D4  0100               	movlb	0	; () banked
 12470  0026D6  6F7D               	movwf	(??___flge+3)& (0+255),b
 12471  0026D8  0100               	movlb	0	; () banked
 12472  0026DA  517A               	movf	??___flge& (0+255),w,b
 12473  0026DC  0100               	movlb	0	; () banked
 12474  0026DE  117B               	iorwf	(??___flge+1)& (0+255),w,b
 12475  0026E0  0100               	movlb	0	; () banked
 12476  0026E2  117C               	iorwf	(??___flge+2)& (0+255),w,b
 12477  0026E4  0100               	movlb	0	; () banked
 12478  0026E6  117D               	iorwf	(??___flge+3)& (0+255),w,b
 12479  0026E8  A4D8               	btfss	status,2,c
 12480  0026EA  D009               	goto	l6135
 12481                           
 12482                           ; BSR set to: 0
 12483  0026EC  0E00               	movlw	0
 12484  0026EE  0100               	movlb	0	; () banked
 12485  0026F0  6F76               	movwf	___flge@ff2& (0+255),b
 12486  0026F2  0E00               	movlw	0
 12487  0026F4  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12488  0026F6  0E00               	movlw	0
 12489  0026F8  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12490  0026FA  0E00               	movlw	0
 12491  0026FC  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12492  0026FE                     l6135:
 12493                           
 12494                           ; BSR set to: 0
 12495  0026FE  0100               	movlb	0	; () banked
 12496  002700  AF75               	btfss	(___flge@ff1+3)& (0+255),7,b
 12497  002702  D026               	goto	l6139
 12498                           
 12499                           ; BSR set to: 0
 12500  002704  C072  F07A         	movff	___flge@ff1,??___flge
 12501  002708  C073  F07B         	movff	___flge@ff1+1,??___flge+1
 12502  00270C  C074  F07C         	movff	___flge@ff1+2,??___flge+2
 12503  002710  C075  F07D         	movff	___flge@ff1+3,??___flge+3
 12504  002714  0100               	movlb	0	; () banked
 12505  002716  1F7A               	comf	??___flge& (0+255),f,b
 12506  002718  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12507  00271A  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12508  00271C  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12509  00271E  2B7A               	incf	??___flge& (0+255),f,b
 12510  002720  0E00               	movlw	0
 12511  002722  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12512  002724  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12513  002726  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12514  002728  0E00               	movlw	0
 12515  00272A  0100               	movlb	0	; () banked
 12516  00272C  257A               	addwf	??___flge& (0+255),w,b
 12517  00272E  0100               	movlb	0	; () banked
 12518  002730  6F72               	movwf	___flge@ff1& (0+255),b
 12519  002732  0E00               	movlw	0
 12520  002734  0100               	movlb	0	; () banked
 12521  002736  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12522  002738  0100               	movlb	0	; () banked
 12523  00273A  6F73               	movwf	(___flge@ff1+1)& (0+255),b
 12524  00273C  0E00               	movlw	0
 12525  00273E  0100               	movlb	0	; () banked
 12526  002740  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12527  002742  0100               	movlb	0	; () banked
 12528  002744  6F74               	movwf	(___flge@ff1+2)& (0+255),b
 12529  002746  0E80               	movlw	128
 12530  002748  0100               	movlb	0	; () banked
 12531  00274A  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12532  00274C  0100               	movlb	0	; () banked
 12533  00274E  6F75               	movwf	(___flge@ff1+3)& (0+255),b
 12534  002750                     l6139:
 12535                           
 12536                           ; BSR set to: 0
 12537  002750  0100               	movlb	0	; () banked
 12538  002752  AF79               	btfss	(___flge@ff2+3)& (0+255),7,b
 12539  002754  D026               	goto	l829
 12540                           
 12541                           ; BSR set to: 0
 12542  002756  C076  F07A         	movff	___flge@ff2,??___flge
 12543  00275A  C077  F07B         	movff	___flge@ff2+1,??___flge+1
 12544  00275E  C078  F07C         	movff	___flge@ff2+2,??___flge+2
 12545  002762  C079  F07D         	movff	___flge@ff2+3,??___flge+3
 12546  002766  0100               	movlb	0	; () banked
 12547  002768  1F7A               	comf	??___flge& (0+255),f,b
 12548  00276A  1F7B               	comf	(??___flge+1)& (0+255),f,b
 12549  00276C  1F7C               	comf	(??___flge+2)& (0+255),f,b
 12550  00276E  1F7D               	comf	(??___flge+3)& (0+255),f,b
 12551  002770  2B7A               	incf	??___flge& (0+255),f,b
 12552  002772  0E00               	movlw	0
 12553  002774  237B               	addwfc	(??___flge+1)& (0+255),f,b
 12554  002776  237C               	addwfc	(??___flge+2)& (0+255),f,b
 12555  002778  237D               	addwfc	(??___flge+3)& (0+255),f,b
 12556  00277A  0E00               	movlw	0
 12557  00277C  0100               	movlb	0	; () banked
 12558  00277E  257A               	addwf	??___flge& (0+255),w,b
 12559  002780  0100               	movlb	0	; () banked
 12560  002782  6F76               	movwf	___flge@ff2& (0+255),b
 12561  002784  0E00               	movlw	0
 12562  002786  0100               	movlb	0	; () banked
 12563  002788  217B               	addwfc	(??___flge+1)& (0+255),w,b
 12564  00278A  0100               	movlb	0	; () banked
 12565  00278C  6F77               	movwf	(___flge@ff2+1)& (0+255),b
 12566  00278E  0E00               	movlw	0
 12567  002790  0100               	movlb	0	; () banked
 12568  002792  217C               	addwfc	(??___flge+2)& (0+255),w,b
 12569  002794  0100               	movlb	0	; () banked
 12570  002796  6F78               	movwf	(___flge@ff2+2)& (0+255),b
 12571  002798  0E80               	movlw	128
 12572  00279A  0100               	movlb	0	; () banked
 12573  00279C  217D               	addwfc	(??___flge+3)& (0+255),w,b
 12574  00279E  0100               	movlb	0	; () banked
 12575  0027A0  6F79               	movwf	(___flge@ff2+3)& (0+255),b
 12576  0027A2                     l829:
 12577                           
 12578                           ; BSR set to: 0
 12579  0027A2  0E00               	movlw	0
 12580  0027A4  0100               	movlb	0	; () banked
 12581  0027A6  1B72               	xorwf	___flge@ff1& (0+255),f,b
 12582  0027A8  0E00               	movlw	0
 12583  0027AA  1B73               	xorwf	(___flge@ff1+1)& (0+255),f,b
 12584  0027AC  0E00               	movlw	0
 12585  0027AE  1B74               	xorwf	(___flge@ff1+2)& (0+255),f,b
 12586  0027B0  0E80               	movlw	128
 12587  0027B2  1B75               	xorwf	(___flge@ff1+3)& (0+255),f,b
 12588  0027B4  0E00               	movlw	0
 12589  0027B6  0100               	movlb	0	; () banked
 12590  0027B8  1B76               	xorwf	___flge@ff2& (0+255),f,b
 12591  0027BA  0E00               	movlw	0
 12592  0027BC  1B77               	xorwf	(___flge@ff2+1)& (0+255),f,b
 12593  0027BE  0E00               	movlw	0
 12594  0027C0  1B78               	xorwf	(___flge@ff2+2)& (0+255),f,b
 12595  0027C2  0E80               	movlw	128
 12596  0027C4  1B79               	xorwf	(___flge@ff2+3)& (0+255),f,b
 12597  0027C6  0100               	movlb	0	; () banked
 12598  0027C8  5176               	movf	___flge@ff2& (0+255),w,b
 12599  0027CA  0100               	movlb	0	; () banked
 12600  0027CC  5D72               	subwf	___flge@ff1& (0+255),w,b
 12601  0027CE  0100               	movlb	0	; () banked
 12602  0027D0  5177               	movf	(___flge@ff2+1)& (0+255),w,b
 12603  0027D2  0100               	movlb	0	; () banked
 12604  0027D4  5973               	subwfb	(___flge@ff1+1)& (0+255),w,b
 12605  0027D6  0100               	movlb	0	; () banked
 12606  0027D8  5178               	movf	(___flge@ff2+2)& (0+255),w,b
 12607  0027DA  0100               	movlb	0	; () banked
 12608  0027DC  5974               	subwfb	(___flge@ff1+2)& (0+255),w,b
 12609  0027DE  0100               	movlb	0	; () banked
 12610  0027E0  5179               	movf	(___flge@ff2+3)& (0+255),w,b
 12611  0027E2  0100               	movlb	0	; () banked
 12612  0027E4  5975               	subwfb	(___flge@ff1+3)& (0+255),w,b
 12613  0027E6  B0D8               	btfsc	status,0,c
 12614  0027E8  D002               	goto	l6145
 12615                           
 12616                           ; BSR set to: 0
 12617  0027EA  90D8               	bcf	status,0,c
 12618  0027EC  0012               	return	
 12619  0027EE                     l6145:
 12620                           
 12621                           ; BSR set to: 0
 12622  0027EE  80D8               	bsf	status,0,c
 12623                           
 12624                           ; BSR set to: 0
 12625  0027F0  0012               	return	
 12626  0027F2                     __end_of___flge:
 12627                           	opt stack 0
 12628                           tblptru	equ	0xFF8
 12629                           tblptrh	equ	0xFF7
 12630                           tblptrl	equ	0xFF6
 12631                           tablat	equ	0xFF5
 12632                           prodh	equ	0xFF4
 12633                           prodl	equ	0xFF3
 12634                           intcon	equ	0xFF2
 12635                           postinc0	equ	0xFEE
 12636                           wreg	equ	0xFE8
 12637                           postdec1	equ	0xFE5
 12638                           fsr1l	equ	0xFE1
 12639                           indf2	equ	0xFDF
 12640                           postinc2	equ	0xFDE
 12641                           postdec2	equ	0xFDD
 12642                           fsr2h	equ	0xFDA
 12643                           fsr2l	equ	0xFD9
 12644                           status	equ	0xFD8
 12645                           
 12646 ;; *************** function _delay_ms *****************
 12647 ;; Defined at:
 12648 ;;		line 6 in file "source/../../delay.h"
 12649 ;; Parameters:    Size  Location     Type
 12650 ;;  del             2   18[BANK0 ] int 
 12651 ;; Auto vars:     Size  Location     Type
 12652 ;;  i               2   21[BANK0 ] int 
 12653 ;; Return value:  Size  Location     Type
 12654 ;;                  1    wreg      void 
 12655 ;; Registers used:
 12656 ;;		wreg, status,2, status,0
 12657 ;; Tracked objects:
 12658 ;;		On entry : 0/0
 12659 ;;		On exit  : 0/0
 12660 ;;		Unchanged: 0/0
 12661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12662 ;;      Params:         0       2       0       0       0       0       0
 12663 ;;      Locals:         0       2       0       0       0       0       0
 12664 ;;      Temps:          0       1       0       0       0       0       0
 12665 ;;      Totals:         0       5       0       0       0       0       0
 12666 ;;Total ram usage:        5 bytes
 12667 ;; Hardware stack levels used:    1
 12668 ;; Hardware stack levels required when called:   11
 12669 ;; This function calls:
 12670 ;;		Nothing
 12671 ;; This function is called by:
 12672 ;;		_main
 12673 ;; This function uses a non-reentrant model
 12674 ;;
 12675                           
 12676                           	psect	text49
 12677  003698                     __ptext49:
 12678                           	opt stack 0
 12679  003698                     _delay_ms:
 12680                           	opt stack 19
 12681                           
 12682                           ;delay.h: 7: for(int i = 1;i <= del;i++)
 12683                           
 12684                           ; BSR set to: 0
 12685                           ;incstack = 0
 12686  003698  0E00               	movlw	0
 12687  00369A  0100               	movlb	0	; () banked
 12688  00369C  6F76               	movwf	(delay_ms@i+1)& (0+255),b
 12689  00369E  0E01               	movlw	1
 12690  0036A0  6F75               	movwf	delay_ms@i& (0+255),b
 12691  0036A2  D00C               	goto	l242
 12692  0036A4                     l4907:
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;delay.h: 8: _delay((unsigned long)((1)*(16000000/4000.0)));
 12696  0036A4  0E06               	movlw	6
 12697  0036A6  0100               	movlb	0	; () banked
 12698  0036A8  6F74               	movwf	??_delay_ms& (0+255),b
 12699  0036AA  0E30               	movlw	48
 12700  0036AC                     u8327:
 12701  0036AC  2EE8               	decfsz	wreg,f,c
 12702  0036AE  D7FE               	goto	u8327
 12703  0036B0  2F74               	decfsz	??_delay_ms& (0+255),f,b
 12704  0036B2  D7FC               	goto	u8327
 12705  0036B4  D000               	nop2	
 12706  0036B6  0100               	movlb	0	; () banked
 12707  0036B8  4B75               	infsnz	delay_ms@i& (0+255),f,b
 12708  0036BA  2B76               	incf	(delay_ms@i+1)& (0+255),f,b
 12709  0036BC                     l242:
 12710                           
 12711                           ; BSR set to: 0
 12712  0036BC  0100               	movlb	0	; () banked
 12713  0036BE  5175               	movf	delay_ms@i& (0+255),w,b
 12714  0036C0  0100               	movlb	0	; () banked
 12715  0036C2  5D72               	subwf	delay_ms@del& (0+255),w,b
 12716  0036C4  0100               	movlb	0	; () banked
 12717  0036C6  5173               	movf	(delay_ms@del+1)& (0+255),w,b
 12718  0036C8  0A80               	xorlw	128
 12719  0036CA  0100               	movlb	0	; () banked
 12720  0036CC  6F74               	movwf	??_delay_ms& (0+255),b
 12721  0036CE  0100               	movlb	0	; () banked
 12722  0036D0  5176               	movf	(delay_ms@i+1)& (0+255),w,b
 12723  0036D2  0A80               	xorlw	128
 12724  0036D4  0100               	movlb	0	; () banked
 12725  0036D6  5974               	subwfb	??_delay_ms& (0+255),w,b
 12726  0036D8  A0D8               	btfss	status,0,c
 12727  0036DA  0012               	return	
 12728  0036DC  D7E3               	goto	l4907
 12729  0036DE                     __end_of_delay_ms:
 12730                           	opt stack 0
 12731                           tblptru	equ	0xFF8
 12732                           tblptrh	equ	0xFF7
 12733                           tblptrl	equ	0xFF6
 12734                           tablat	equ	0xFF5
 12735                           prodh	equ	0xFF4
 12736                           prodl	equ	0xFF3
 12737                           intcon	equ	0xFF2
 12738                           postinc0	equ	0xFEE
 12739                           wreg	equ	0xFE8
 12740                           postdec1	equ	0xFE5
 12741                           fsr1l	equ	0xFE1
 12742                           indf2	equ	0xFDF
 12743                           postinc2	equ	0xFDE
 12744                           postdec2	equ	0xFDD
 12745                           fsr2h	equ	0xFDA
 12746                           fsr2l	equ	0xFD9
 12747                           status	equ	0xFD8
 12748                           
 12749 ;; *************** function _clockConfig *****************
 12750 ;; Defined at:
 12751 ;;		line 76 in file "source/SYSConfig.h"
 12752 ;; Parameters:    Size  Location     Type
 12753 ;;		None
 12754 ;; Auto vars:     Size  Location     Type
 12755 ;;		None
 12756 ;; Return value:  Size  Location     Type
 12757 ;;                  1    wreg      void 
 12758 ;; Registers used:
 12759 ;;		wreg, status,2
 12760 ;; Tracked objects:
 12761 ;;		On entry : 0/0
 12762 ;;		On exit  : 0/0
 12763 ;;		Unchanged: 0/0
 12764 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12765 ;;      Params:         0       0       0       0       0       0       0
 12766 ;;      Locals:         0       0       0       0       0       0       0
 12767 ;;      Temps:          0       0       0       0       0       0       0
 12768 ;;      Totals:         0       0       0       0       0       0       0
 12769 ;;Total ram usage:        0 bytes
 12770 ;; Hardware stack levels used:    1
 12771 ;; Hardware stack levels required when called:   11
 12772 ;; This function calls:
 12773 ;;		Nothing
 12774 ;; This function is called by:
 12775 ;;		_main
 12776 ;; This function uses a non-reentrant model
 12777 ;;
 12778                           
 12779                           	psect	text50
 12780  003900                     __ptext50:
 12781                           	opt stack 0
 12782  003900                     _clockConfig:
 12783                           	opt stack 19
 12784                           
 12785                           ;SYSConfig.h: 77: OSCCONbits.IDLEN = 1;
 12786                           
 12787                           ; BSR set to: 0
 12788                           ;incstack = 0
 12789  003900  8ED3               	bsf	4051,7,c	;volatile
 12790                           
 12791                           ;SYSConfig.h: 78: OSCCONbits.IRCF = 0b111;
 12792  003902  88D3               	bsf	4051,4,c	;volatile
 12793  003904  8AD3               	bsf	4051,5,c	;volatile
 12794  003906  8CD3               	bsf	4051,6,c	;volatile
 12795  003908                     l81:
 12796  003908  A4D3               	btfss	4051,2,c	;volatile
 12797  00390A  D7FE               	goto	l81
 12798                           
 12799                           ;SYSConfig.h: 80: OSCCONbits.SCS = 0b11;
 12800  00390C  0E03               	movlw	3
 12801  00390E  12D3               	iorwf	4051,f,c	;volatile
 12802                           
 12803                           ;SYSConfig.h: 81: OSCCON2bits.MFIOSEL = 0;
 12804  003910  98D2               	bcf	4050,4,c	;volatile
 12805                           
 12806                           ;SYSConfig.h: 82: OSCCON2bits.SOSCGO = 0;
 12807  003912  96D2               	bcf	4050,3,c	;volatile
 12808                           
 12809                           ;SYSConfig.h: 83: OSCTUNEbits.INTSRC = 0;
 12810  003914  9E9B               	bcf	3995,7,c	;volatile
 12811                           
 12812                           ;SYSConfig.h: 84: OSCTUNEbits.TUN = 0b011111;
 12813  003916  809B               	bsf	3995,0,c	;volatile
 12814  003918  829B               	bsf	3995,1,c	;volatile
 12815  00391A  849B               	bsf	3995,2,c	;volatile
 12816  00391C  869B               	bsf	3995,3,c	;volatile
 12817  00391E  889B               	bsf	3995,4,c	;volatile
 12818  003920  9A9B               	bcf	3995,5,c	;volatile
 12819                           
 12820                           ;SYSConfig.h: 85: OSCTUNEbits.PLLEN = 1;
 12821  003922  8C9B               	bsf	3995,6,c	;volatile
 12822                           
 12823                           ;SYSConfig.h: 87: WDTCONbits.SWDTEN = 1;
 12824  003924  80D1               	bsf	4049,0,c	;volatile
 12825  003926  0012               	return		;funcret
 12826  003928                     __end_of_clockConfig:
 12827                           	opt stack 0
 12828                           tblptru	equ	0xFF8
 12829                           tblptrh	equ	0xFF7
 12830                           tblptrl	equ	0xFF6
 12831                           tablat	equ	0xFF5
 12832                           prodh	equ	0xFF4
 12833                           prodl	equ	0xFF3
 12834                           intcon	equ	0xFF2
 12835                           postinc0	equ	0xFEE
 12836                           wreg	equ	0xFE8
 12837                           postdec1	equ	0xFE5
 12838                           fsr1l	equ	0xFE1
 12839                           indf2	equ	0xFDF
 12840                           postinc2	equ	0xFDE
 12841                           postdec2	equ	0xFDD
 12842                           fsr2h	equ	0xFDA
 12843                           fsr2l	equ	0xFD9
 12844                           status	equ	0xFD8
 12845                           
 12846 ;; *************** function _UARTConfig *****************
 12847 ;; Defined at:
 12848 ;;		line 18 in file "source/UARTConfig.h"
 12849 ;; Parameters:    Size  Location     Type
 12850 ;;		None
 12851 ;; Auto vars:     Size  Location     Type
 12852 ;;		None
 12853 ;; Return value:  Size  Location     Type
 12854 ;;                  1    wreg      void 
 12855 ;; Registers used:
 12856 ;;		wreg, status,2
 12857 ;; Tracked objects:
 12858 ;;		On entry : 0/0
 12859 ;;		On exit  : 0/0
 12860 ;;		Unchanged: 0/0
 12861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12862 ;;      Params:         0       0       0       0       0       0       0
 12863 ;;      Locals:         0       0       0       0       0       0       0
 12864 ;;      Temps:          0       0       0       0       0       0       0
 12865 ;;      Totals:         0       0       0       0       0       0       0
 12866 ;;Total ram usage:        0 bytes
 12867 ;; Hardware stack levels used:    1
 12868 ;; Hardware stack levels required when called:   11
 12869 ;; This function calls:
 12870 ;;		Nothing
 12871 ;; This function is called by:
 12872 ;;		_main
 12873 ;; This function uses a non-reentrant model
 12874 ;;
 12875                           
 12876                           	psect	text51
 12877  0037D0                     __ptext51:
 12878                           	opt stack 0
 12879  0037D0                     _UARTConfig:
 12880                           	opt stack 19
 12881                           
 12882                           ;UARTConfig.h: 19: RCSTA1bits.SPEN = 0;
 12883                           
 12884                           ;incstack = 0
 12885  0037D0  9EAB               	bcf	4011,7,c	;volatile
 12886                           
 12887                           ;UARTConfig.h: 20: SPBRGH1 = 0;
 12888  0037D2  0E00               	movlw	0
 12889  0037D4  6EB0               	movwf	4016,c	;volatile
 12890                           
 12891                           ;UARTConfig.h: 21: SPBRG1 = 34;
 12892  0037D6  0E22               	movlw	34
 12893  0037D8  6EAF               	movwf	4015,c	;volatile
 12894                           
 12895                           ;UARTConfig.h: 22: ANSELCbits.ANSC6 = 0;
 12896  0037DA  010F               	movlb	15	; () banked
 12897  0037DC  9D3A               	bcf	58,6,b	;volatile
 12898                           
 12899                           ; BSR set to: 15
 12900                           ;UARTConfig.h: 23: ANSELCbits.ANSC7 = 0;
 12901  0037DE  010F               	movlb	15	; () banked
 12902  0037E0  9F3A               	bcf	58,7,b	;volatile
 12903                           
 12904                           ; BSR set to: 15
 12905                           ;UARTConfig.h: 24: TRISCbits.TRISC6 = 1;
 12906  0037E2  8C94               	bsf	3988,6,c	;volatile
 12907                           
 12908                           ; BSR set to: 15
 12909                           ;UARTConfig.h: 25: TRISCbits.TRISC7 = 1;
 12910  0037E4  8E94               	bsf	3988,7,c	;volatile
 12911                           
 12912                           ; BSR set to: 15
 12913                           ;UARTConfig.h: 26: TXSTA1bits.TX9 = 0;
 12914  0037E6  9CAC               	bcf	4012,6,c	;volatile
 12915                           
 12916                           ; BSR set to: 15
 12917                           ;UARTConfig.h: 27: TXSTA1bits.SYNC = 0;
 12918  0037E8  98AC               	bcf	4012,4,c	;volatile
 12919                           
 12920                           ; BSR set to: 15
 12921                           ;UARTConfig.h: 28: TXSTA1bits.SENDB = 0;
 12922  0037EA  96AC               	bcf	4012,3,c	;volatile
 12923                           
 12924                           ; BSR set to: 15
 12925                           ;UARTConfig.h: 29: TXSTA1bits.BRGH = 1;
 12926  0037EC  84AC               	bsf	4012,2,c	;volatile
 12927                           
 12928                           ; BSR set to: 15
 12929                           ;UARTConfig.h: 30: RCSTA1bits.RX9 = 0;
 12930  0037EE  9CAB               	bcf	4011,6,c	;volatile
 12931                           
 12932                           ; BSR set to: 15
 12933                           ;UARTConfig.h: 31: BAUDCON1bits.DTRXP = 0;
 12934  0037F0  9AB8               	bcf	4024,5,c	;volatile
 12935                           
 12936                           ; BSR set to: 15
 12937                           ;UARTConfig.h: 32: BAUDCON1bits.CKTXP = 0;
 12938  0037F2  98B8               	bcf	4024,4,c	;volatile
 12939                           
 12940                           ; BSR set to: 15
 12941                           ;UARTConfig.h: 33: BAUDCON1bits.BRG16 = 1;
 12942  0037F4  86B8               	bsf	4024,3,c	;volatile
 12943                           
 12944                           ; BSR set to: 15
 12945                           ;UARTConfig.h: 34: BAUDCON1bits.WUE = 0;
 12946  0037F6  92B8               	bcf	4024,1,c	;volatile
 12947                           
 12948                           ; BSR set to: 15
 12949                           ;UARTConfig.h: 35: BAUDCON1bits.ABDEN = 0;
 12950  0037F8  90B8               	bcf	4024,0,c	;volatile
 12951                           
 12952                           ; BSR set to: 15
 12953                           ;UARTConfig.h: 36: RCSTA1bits.CREN = 1;
 12954  0037FA  88AB               	bsf	4011,4,c	;volatile
 12955                           
 12956                           ; BSR set to: 15
 12957                           ;UARTConfig.h: 37: TXSTA1bits.TXEN = 1;
 12958  0037FC  8AAC               	bsf	4012,5,c	;volatile
 12959                           
 12960                           ; BSR set to: 15
 12961                           ;UARTConfig.h: 38: IPR1bits.RC1IP = 0;
 12962  0037FE  9A9F               	bcf	3999,5,c	;volatile
 12963                           
 12964                           ; BSR set to: 15
 12965                           ;UARTConfig.h: 39: PIR1bits.RC1IF = 0;
 12966  003800  9A9E               	bcf	3998,5,c	;volatile
 12967                           
 12968                           ; BSR set to: 15
 12969                           ;UARTConfig.h: 40: PIE1bits.RC1IE = 1;
 12970  003802  8A9D               	bsf	3997,5,c	;volatile
 12971                           
 12972                           ; BSR set to: 15
 12973                           ;UARTConfig.h: 41: RCSTA1bits.SPEN = 1;
 12974  003804  8EAB               	bsf	4011,7,c	;volatile
 12975                           
 12976                           ; BSR set to: 15
 12977  003806  0012               	return		;funcret
 12978  003808                     __end_of_UARTConfig:
 12979                           	opt stack 0
 12980                           tblptru	equ	0xFF8
 12981                           tblptrh	equ	0xFF7
 12982                           tblptrl	equ	0xFF6
 12983                           tablat	equ	0xFF5
 12984                           prodh	equ	0xFF4
 12985                           prodl	equ	0xFF3
 12986                           intcon	equ	0xFF2
 12987                           postinc0	equ	0xFEE
 12988                           wreg	equ	0xFE8
 12989                           postdec1	equ	0xFE5
 12990                           fsr1l	equ	0xFE1
 12991                           indf2	equ	0xFDF
 12992                           postinc2	equ	0xFDE
 12993                           postdec2	equ	0xFDD
 12994                           fsr2h	equ	0xFDA
 12995                           fsr2l	equ	0xFD9
 12996                           status	equ	0xFD8
 12997                           
 12998 ;; *************** function _PWM2Config *****************
 12999 ;; Defined at:
 13000 ;;		line 37 in file "source/PWMConfig.h"
 13001 ;; Parameters:    Size  Location     Type
 13002 ;;		None
 13003 ;; Auto vars:     Size  Location     Type
 13004 ;;		None
 13005 ;; Return value:  Size  Location     Type
 13006 ;;                  1    wreg      void 
 13007 ;; Registers used:
 13008 ;;		wreg, status,2, status,0, cstack
 13009 ;; Tracked objects:
 13010 ;;		On entry : 0/0
 13011 ;;		On exit  : 0/0
 13012 ;;		Unchanged: 0/0
 13013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13014 ;;      Params:         0       0       0       0       0       0       0
 13015 ;;      Locals:         0       0       0       0       0       0       0
 13016 ;;      Temps:          0       0       0       0       0       0       0
 13017 ;;      Totals:         0       0       0       0       0       0       0
 13018 ;;Total ram usage:        0 bytes
 13019 ;; Hardware stack levels used:    1
 13020 ;; Hardware stack levels required when called:   12
 13021 ;; This function calls:
 13022 ;;		_setPWM2duty
 13023 ;;		_t2config
 13024 ;; This function is called by:
 13025 ;;		_main
 13026 ;; This function uses a non-reentrant model
 13027 ;;
 13028                           
 13029                           	psect	text52
 13030  003500                     __ptext52:
 13031                           	opt stack 0
 13032  003500                     _PWM2Config:
 13033                           	opt stack 18
 13034                           
 13035                           ;PWMConfig.h: 38: TRISCbits.TRISC0 = 1;
 13036                           
 13037                           ; BSR set to: 15
 13038                           ;incstack = 0
 13039  003500  8094               	bsf	3988,0,c	;volatile
 13040                           
 13041                           ;PWMConfig.h: 39: TRISCbits.TRISC1 = 1;
 13042  003502  8294               	bsf	3988,1,c	;volatile
 13043                           
 13044                           ;PWMConfig.h: 40: PSTR2CONbits.STR2A = 1;
 13045  003504  8063               	bsf	3939,0,c	;volatile
 13046                           
 13047                           ;PWMConfig.h: 41: PSTR2CONbits.STR2B = 1;
 13048  003506  8263               	bsf	3939,1,c	;volatile
 13049                           
 13050                           ;PWMConfig.h: 42: PSTR2CONbits.STR2C = 0;
 13051  003508  9463               	bcf	3939,2,c	;volatile
 13052                           
 13053                           ;PWMConfig.h: 43: PSTR2CONbits.STR2D = 0;
 13054  00350A  9663               	bcf	3939,3,c	;volatile
 13055                           
 13056                           ;PWMConfig.h: 44: CCPTMRS0bits.C2TSEL = 0b00;
 13057  00350C  0EE7               	movlw	-25
 13058  00350E  010F               	movlb	15	; () banked
 13059  003510  1749               	andwf	73,f,b	;volatile
 13060                           
 13061                           ;PWMConfig.h: 45: PR2 = 199;
 13062  003512  0EC7               	movlw	199
 13063  003514  6EBB               	movwf	4027,c	;volatile
 13064                           
 13065                           ; BSR set to: 15
 13066                           ;PWMConfig.h: 46: ECCP2ASbits.CCP2AS = 0b000;
 13067  003516  9864               	bcf	3940,4,c	;volatile
 13068  003518  9A64               	bcf	3940,5,c	;volatile
 13069  00351A  9C64               	bcf	3940,6,c	;volatile
 13070                           
 13071                           ;PWMConfig.h: 47: ECCP2ASbits.PSS2AC = 0b00;
 13072  00351C  0EF3               	movlw	-13
 13073  00351E  1664               	andwf	3940,f,c	;volatile
 13074                           
 13075                           ;PWMConfig.h: 48: ECCP2ASbits.PSS2BD = 0b00;
 13076  003520  0EFC               	movlw	-4
 13077  003522  1664               	andwf	3940,f,c	;volatile
 13078                           
 13079                           ; BSR set to: 15
 13080                           ;PWMConfig.h: 49: PWM2CONbits.P2RSEN = 0;
 13081  003524  9E65               	bcf	3941,7,c	;volatile
 13082                           
 13083                           ;PWMConfig.h: 50: ECCP2ASbits.CCP2AS = 1;
 13084  003526  5064               	movf	3940,w,c	;volatile
 13085  003528  0B8F               	andlw	-113
 13086  00352A  0910               	iorlw	16
 13087  00352C  6E64               	movwf	3940,c	;volatile
 13088                           
 13089                           ;PWMConfig.h: 51: CCP2CONbits.P2M = 0b10;
 13090  00352E  5066               	movf	3942,w,c	;volatile
 13091  003530  0B3F               	andlw	-193
 13092  003532  0980               	iorlw	128
 13093  003534  6E66               	movwf	3942,c	;volatile
 13094                           
 13095                           ;PWMConfig.h: 52: CCP2CONbits.CCP2M = 0b1100;
 13096  003536  5066               	movf	3942,w,c	;volatile
 13097  003538  0BF0               	andlw	-16
 13098  00353A  090C               	iorlw	12
 13099  00353C  6E66               	movwf	3942,c	;volatile
 13100                           
 13101                           ; BSR set to: 15
 13102                           ;PWMConfig.h: 53: setPWM2duty(0);
 13103  00353E  0E00               	movlw	0
 13104  003540  0100               	movlb	0	; () banked
 13105  003542  6F73               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 13106  003544  0E00               	movlw	0
 13107  003546  6F72               	movwf	setPWM2duty@actuator& (0+255),b
 13108  003548  EC1C  F018         	call	_setPWM2duty	;wreg free
 13109                           
 13110                           ;PWMConfig.h: 54: PWM2CONbits.P2DC = 16;
 13111  00354C  9065               	bcf	3941,0,c	;volatile
 13112  00354E  9265               	bcf	3941,1,c	;volatile
 13113  003550  9465               	bcf	3941,2,c	;volatile
 13114  003552  9665               	bcf	3941,3,c	;volatile
 13115  003554  8865               	bsf	3941,4,c	;volatile
 13116  003556  9A65               	bcf	3941,5,c	;volatile
 13117  003558  9C65               	bcf	3941,6,c	;volatile
 13118                           
 13119                           ;PWMConfig.h: 55: t2config();
 13120  00355A  ECD4  F01C         	call	_t2config	;wreg free
 13121                           
 13122                           ;PWMConfig.h: 56: TRISCbits.TRISC0 = 0;
 13123  00355E  9094               	bcf	3988,0,c	;volatile
 13124                           
 13125                           ;PWMConfig.h: 57: TRISCbits.TRISC1 = 0;
 13126  003560  9294               	bcf	3988,1,c	;volatile
 13127                           
 13128                           ;PWMConfig.h: 58: ECCP2ASbits.CCP2ASE = 0;
 13129  003562  9E64               	bcf	3940,7,c	;volatile
 13130  003564  0012               	return		;funcret
 13131  003566                     __end_of_PWM2Config:
 13132                           	opt stack 0
 13133                           tblptru	equ	0xFF8
 13134                           tblptrh	equ	0xFF7
 13135                           tblptrl	equ	0xFF6
 13136                           tablat	equ	0xFF5
 13137                           prodh	equ	0xFF4
 13138                           prodl	equ	0xFF3
 13139                           intcon	equ	0xFF2
 13140                           postinc0	equ	0xFEE
 13141                           wreg	equ	0xFE8
 13142                           postdec1	equ	0xFE5
 13143                           fsr1l	equ	0xFE1
 13144                           indf2	equ	0xFDF
 13145                           postinc2	equ	0xFDE
 13146                           postdec2	equ	0xFDD
 13147                           fsr2h	equ	0xFDA
 13148                           fsr2l	equ	0xFD9
 13149                           status	equ	0xFD8
 13150                           
 13151 ;; *************** function _t2config *****************
 13152 ;; Defined at:
 13153 ;;		line 9 in file "source/PWMConfig.h"
 13154 ;; Parameters:    Size  Location     Type
 13155 ;;		None
 13156 ;; Auto vars:     Size  Location     Type
 13157 ;;		None
 13158 ;; Return value:  Size  Location     Type
 13159 ;;                  1    wreg      void 
 13160 ;; Registers used:
 13161 ;;		wreg, status,2
 13162 ;; Tracked objects:
 13163 ;;		On entry : 0/0
 13164 ;;		On exit  : 0/0
 13165 ;;		Unchanged: 0/0
 13166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13167 ;;      Params:         0       0       0       0       0       0       0
 13168 ;;      Locals:         0       0       0       0       0       0       0
 13169 ;;      Temps:          0       0       0       0       0       0       0
 13170 ;;      Totals:         0       0       0       0       0       0       0
 13171 ;;Total ram usage:        0 bytes
 13172 ;; Hardware stack levels used:    1
 13173 ;; Hardware stack levels required when called:   11
 13174 ;; This function calls:
 13175 ;;		Nothing
 13176 ;; This function is called by:
 13177 ;;		_PWM2Config
 13178 ;; This function uses a non-reentrant model
 13179 ;;
 13180                           
 13181                           	psect	text53
 13182  0039A8                     __ptext53:
 13183                           	opt stack 0
 13184  0039A8                     _t2config:
 13185                           	opt stack 18
 13186                           
 13187                           ;PWMConfig.h: 10: T2CONbits.TMR2ON = 0;
 13188                           
 13189                           ;incstack = 0
 13190  0039A8  94BA               	bcf	4026,2,c	;volatile
 13191                           
 13192                           ;PWMConfig.h: 11: T2CONbits.T2CKPS = 0b00;
 13193  0039AA  0EFC               	movlw	-4
 13194  0039AC  16BA               	andwf	4026,f,c	;volatile
 13195                           
 13196                           ;PWMConfig.h: 12: T2CONbits.T2OUTPS = 0b1111;
 13197  0039AE  86BA               	bsf	4026,3,c	;volatile
 13198  0039B0  88BA               	bsf	4026,4,c	;volatile
 13199  0039B2  8ABA               	bsf	4026,5,c	;volatile
 13200  0039B4  8CBA               	bsf	4026,6,c	;volatile
 13201                           
 13202                           ;PWMConfig.h: 14: PIR1bits.TMR2IF = 0;
 13203  0039B6  929E               	bcf	3998,1,c	;volatile
 13204                           
 13205                           ;PWMConfig.h: 15: IPR1bits.TMR2IP = 1;
 13206  0039B8  829F               	bsf	3999,1,c	;volatile
 13207                           
 13208                           ;PWMConfig.h: 16: PIE1bits.TMR2IE = 1;
 13209  0039BA  829D               	bsf	3997,1,c	;volatile
 13210                           
 13211                           ;PWMConfig.h: 17: T2CONbits.TMR2ON = 1;
 13212  0039BC  84BA               	bsf	4026,2,c	;volatile
 13213  0039BE  0012               	return		;funcret
 13214  0039C0                     __end_of_t2config:
 13215                           	opt stack 0
 13216                           tblptru	equ	0xFF8
 13217                           tblptrh	equ	0xFF7
 13218                           tblptrl	equ	0xFF6
 13219                           tablat	equ	0xFF5
 13220                           prodh	equ	0xFF4
 13221                           prodl	equ	0xFF3
 13222                           intcon	equ	0xFF2
 13223                           postinc0	equ	0xFEE
 13224                           wreg	equ	0xFE8
 13225                           postdec1	equ	0xFE5
 13226                           fsr1l	equ	0xFE1
 13227                           indf2	equ	0xFDF
 13228                           postinc2	equ	0xFDE
 13229                           postdec2	equ	0xFDD
 13230                           fsr2h	equ	0xFDA
 13231                           fsr2l	equ	0xFD9
 13232                           status	equ	0xFD8
 13233                           
 13234 ;; *************** function _setPWM2duty *****************
 13235 ;; Defined at:
 13236 ;;		line 20 in file "source/PWMConfig.h"
 13237 ;; Parameters:    Size  Location     Type
 13238 ;;  actuator        2   18[BANK0 ] short 
 13239 ;; Auto vars:     Size  Location     Type
 13240 ;;  act             2   22[BANK0 ] short 
 13241 ;; Return value:  Size  Location     Type
 13242 ;;                  1    wreg      void 
 13243 ;; Registers used:
 13244 ;;		wreg, status,2, status,0
 13245 ;; Tracked objects:
 13246 ;;		On entry : 0/0
 13247 ;;		On exit  : 0/0
 13248 ;;		Unchanged: 0/0
 13249 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13250 ;;      Params:         0       2       0       0       0       0       0
 13251 ;;      Locals:         0       2       0       0       0       0       0
 13252 ;;      Temps:          0       2       0       0       0       0       0
 13253 ;;      Totals:         0       6       0       0       0       0       0
 13254 ;;Total ram usage:        6 bytes
 13255 ;; Hardware stack levels used:    1
 13256 ;; Hardware stack levels required when called:   11
 13257 ;; This function calls:
 13258 ;;		Nothing
 13259 ;; This function is called by:
 13260 ;;		_PWM2Config
 13261 ;; This function uses a non-reentrant model
 13262 ;;
 13263                           
 13264                           	psect	text54
 13265  003038                     __ptext54:
 13266                           	opt stack 0
 13267  003038                     _setPWM2duty:
 13268                           	opt stack 18
 13269                           
 13270                           ;PWMConfig.h: 21: short act = 400;
 13271                           
 13272                           ;incstack = 0
 13273  003038  0E01               	movlw	1
 13274  00303A  0100               	movlb	0	; () banked
 13275  00303C  6F77               	movwf	(setPWM2duty@act+1)& (0+255),b
 13276  00303E  0E90               	movlw	144
 13277  003040  6F76               	movwf	setPWM2duty@act& (0+255),b
 13278                           
 13279                           ; BSR set to: 0
 13280                           ;PWMConfig.h: 22: if(actuator > 400)
 13281  003042  0100               	movlb	0	; () banked
 13282  003044  BF73               	btfsc	(setPWM2duty@actuator+1)& (0+255),7,b
 13283  003046  D00D               	goto	l4633
 13284  003048  0E91               	movlw	145
 13285  00304A  0100               	movlb	0	; () banked
 13286  00304C  5D72               	subwf	setPWM2duty@actuator& (0+255),w,b
 13287  00304E  0E01               	movlw	1
 13288  003050  0100               	movlb	0	; () banked
 13289  003052  5973               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 13290  003054  A0D8               	btfss	status,0,c
 13291  003056  D005               	goto	l4633
 13292                           
 13293                           ; BSR set to: 0
 13294                           ;PWMConfig.h: 23: act = 800;
 13295  003058  0E03               	movlw	3
 13296  00305A  0100               	movlb	0	; () banked
 13297  00305C  6F77               	movwf	(setPWM2duty@act+1)& (0+255),b
 13298  00305E  0E20               	movlw	32
 13299  003060  D00F               	goto	L12
 13300  003062                     l4633:
 13301                           
 13302                           ; BSR set to: 0
 13303                           ;PWMConfig.h: 24: else if(actuator < -400)
 13304  003062  0100               	movlb	0	; () banked
 13305  003064  AF73               	btfss	(setPWM2duty@actuator+1)& (0+255),7,b
 13306  003066  D00E               	goto	l4637
 13307  003068  0E70               	movlw	112
 13308  00306A  0100               	movlb	0	; () banked
 13309  00306C  5D72               	subwf	setPWM2duty@actuator& (0+255),w,b
 13310  00306E  0EFE               	movlw	254
 13311  003070  0100               	movlb	0	; () banked
 13312  003072  5973               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 13313  003074  B0D8               	btfsc	status,0,c
 13314  003076  D006               	goto	l4637
 13315                           
 13316                           ; BSR set to: 0
 13317                           ;PWMConfig.h: 25: act = 0;
 13318  003078  0E00               	movlw	0
 13319  00307A  0100               	movlb	0	; () banked
 13320  00307C  6F77               	movwf	(setPWM2duty@act+1)& (0+255),b
 13321  00307E  0E00               	movlw	0
 13322  003080                     L12:
 13323  003080  6F76               	movwf	setPWM2duty@act& (0+255),b
 13324  003082  D00A               	goto	l264
 13325  003084                     l4637:
 13326                           
 13327                           ; BSR set to: 0
 13328                           ;PWMConfig.h: 26: else
 13329                           ;PWMConfig.h: 27: act = actuator + 400;
 13330  003084  0E90               	movlw	144
 13331  003086  0100               	movlb	0	; () banked
 13332  003088  2572               	addwf	setPWM2duty@actuator& (0+255),w,b
 13333  00308A  0100               	movlb	0	; () banked
 13334  00308C  6F76               	movwf	setPWM2duty@act& (0+255),b
 13335  00308E  0E01               	movlw	1
 13336  003090  0100               	movlb	0	; () banked
 13337  003092  2173               	addwfc	(setPWM2duty@actuator+1)& (0+255),w,b
 13338  003094  0100               	movlb	0	; () banked
 13339  003096  6F77               	movwf	(setPWM2duty@act+1)& (0+255),b
 13340  003098                     l264:
 13341                           
 13342                           ; BSR set to: 0
 13343                           ;PWMConfig.h: 28: CCP2CONbits.DC2B = act;
 13344  003098  C076  F074         	movff	setPWM2duty@act,??_setPWM2duty
 13345  00309C  0100               	movlb	0	; () banked
 13346  00309E  3B74               	swapf	??_setPWM2duty& (0+255),f,b
 13347  0030A0  5066               	movf	3942,w,c	;volatile
 13348  0030A2  0100               	movlb	0	; () banked
 13349  0030A4  1974               	xorwf	??_setPWM2duty& (0+255),w,b
 13350  0030A6  0BCF               	andlw	-49
 13351  0030A8  1974               	xorwf	??_setPWM2duty& (0+255),w,b
 13352  0030AA  6E66               	movwf	3942,c	;volatile
 13353                           
 13354                           ;PWMConfig.h: 29: CCPR2L = act>>2;
 13355  0030AC  C076  F074         	movff	setPWM2duty@act,??_setPWM2duty
 13356  0030B0  C077  F075         	movff	setPWM2duty@act+1,??_setPWM2duty+1
 13357  0030B4  0100               	movlb	0	; () banked
 13358  0030B6  3575               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 13359  0030B8  3375               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 13360  0030BA  3374               	rrcf	??_setPWM2duty& (0+255),f,b
 13361  0030BC  0100               	movlb	0	; () banked
 13362  0030BE  3575               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 13363  0030C0  3375               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 13364  0030C2  3374               	rrcf	??_setPWM2duty& (0+255),f,b
 13365  0030C4  0100               	movlb	0	; () banked
 13366  0030C6  5174               	movf	??_setPWM2duty& (0+255),w,b
 13367  0030C8  6E67               	movwf	3943,c	;volatile
 13368                           
 13369                           ; BSR set to: 0
 13370  0030CA  0012               	return		;funcret
 13371  0030CC                     __end_of_setPWM2duty:
 13372                           	opt stack 0
 13373                           tblptru	equ	0xFF8
 13374                           tblptrh	equ	0xFF7
 13375                           tblptrl	equ	0xFF6
 13376                           tablat	equ	0xFF5
 13377                           prodh	equ	0xFF4
 13378                           prodl	equ	0xFF3
 13379                           intcon	equ	0xFF2
 13380                           postinc0	equ	0xFEE
 13381                           wreg	equ	0xFE8
 13382                           postdec1	equ	0xFE5
 13383                           fsr1l	equ	0xFE1
 13384                           indf2	equ	0xFDF
 13385                           postinc2	equ	0xFDE
 13386                           postdec2	equ	0xFDD
 13387                           fsr2h	equ	0xFDA
 13388                           fsr2l	equ	0xFD9
 13389                           status	equ	0xFD8
 13390                           
 13391 ;; *************** function _EEPROMConfig *****************
 13392 ;; Defined at:
 13393 ;;		line 53 in file "source/sysParams.h"
 13394 ;; Parameters:    Size  Location     Type
 13395 ;;		None
 13396 ;; Auto vars:     Size  Location     Type
 13397 ;;		None
 13398 ;; Return value:  Size  Location     Type
 13399 ;;                  1    wreg      void 
 13400 ;; Registers used:
 13401 ;;		None
 13402 ;; Tracked objects:
 13403 ;;		On entry : 0/0
 13404 ;;		On exit  : 0/0
 13405 ;;		Unchanged: 0/0
 13406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13407 ;;      Params:         0       0       0       0       0       0       0
 13408 ;;      Locals:         0       0       0       0       0       0       0
 13409 ;;      Temps:          0       0       0       0       0       0       0
 13410 ;;      Totals:         0       0       0       0       0       0       0
 13411 ;;Total ram usage:        0 bytes
 13412 ;; Hardware stack levels used:    1
 13413 ;; Hardware stack levels required when called:   11
 13414 ;; This function calls:
 13415 ;;		Nothing
 13416 ;; This function is called by:
 13417 ;;		_main
 13418 ;; This function uses a non-reentrant model
 13419 ;;
 13420                           
 13421                           	psect	text55
 13422  003A6E                     __ptext55:
 13423                           	opt stack 0
 13424  003A6E                     _EEPROMConfig:
 13425                           	opt stack 19
 13426                           
 13427                           ;sysParams.h: 54: EECON1bits.EEPGD = 0;
 13428                           
 13429                           ; BSR set to: 0
 13430                           ;incstack = 0
 13431  003A6E  9EA6               	bcf	4006,7,c	;volatile
 13432                           
 13433                           ;sysParams.h: 55: EECON1bits.WREN = 0;
 13434  003A70  94A6               	bcf	4006,2,c	;volatile
 13435  003A72  0012               	return		;funcret
 13436  003A74                     __end_of_EEPROMConfig:
 13437                           	opt stack 0
 13438                           tblptru	equ	0xFF8
 13439                           tblptrh	equ	0xFF7
 13440                           tblptrl	equ	0xFF6
 13441                           tablat	equ	0xFF5
 13442                           prodh	equ	0xFF4
 13443                           prodl	equ	0xFF3
 13444                           intcon	equ	0xFF2
 13445                           postinc0	equ	0xFEE
 13446                           wreg	equ	0xFE8
 13447                           postdec1	equ	0xFE5
 13448                           fsr1l	equ	0xFE1
 13449                           indf2	equ	0xFDF
 13450                           postinc2	equ	0xFDE
 13451                           postdec2	equ	0xFDD
 13452                           fsr2h	equ	0xFDA
 13453                           fsr2l	equ	0xFD9
 13454                           status	equ	0xFD8
 13455                           
 13456 ;; *************** function _isr *****************
 13457 ;; Defined at:
 13458 ;;		line 18 in file "source/main.c"
 13459 ;; Parameters:    Size  Location     Type
 13460 ;;		None
 13461 ;; Auto vars:     Size  Location     Type
 13462 ;;		None
 13463 ;; Return value:  Size  Location     Type
 13464 ;;                  1    wreg      void 
 13465 ;; Registers used:
 13466 ;;		wreg, status,2, status,0, cstack
 13467 ;; Tracked objects:
 13468 ;;		On entry : 0/0
 13469 ;;		On exit  : 0/0
 13470 ;;		Unchanged: 0/0
 13471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13472 ;;      Params:         0       0       0       0       0       0       0
 13473 ;;      Locals:         0       0       0       0       0       0       0
 13474 ;;      Temps:          0      17       0       0       0       0       0
 13475 ;;      Totals:         0      17       0       0       0       0       0
 13476 ;;Total ram usage:       17 bytes
 13477 ;; Hardware stack levels used:    1
 13478 ;; Hardware stack levels required when called:   10
 13479 ;; This function calls:
 13480 ;;		_UARTint
 13481 ;; This function is called by:
 13482 ;;		Interrupt level 1
 13483 ;; This function uses a non-reentrant model
 13484 ;;
 13485                           
 13486                           	psect	intcodelo
 13487  000018                     __pintcodelo:
 13488                           	opt stack 0
 13489  000018                     _isr:
 13490                           	opt stack 11
 13491                           
 13492                           ;incstack = 0
 13493  000018  804B               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 13494  00001A  CFD8 F061          	movff	status,??_isr
 13495  00001E  CFE8 F062          	movff	wreg,??_isr+1
 13496  000022  CFE0 F063          	movff	bsr,??_isr+2
 13497  000026  CFFA F064          	movff	pclath,??_isr+3
 13498  00002A  CFFB F065          	movff	pclatu,??_isr+4
 13499  00002E  CFE9 F066          	movff	fsr0l,??_isr+5
 13500  000032  CFEA F067          	movff	fsr0h,??_isr+6
 13501  000036  CFE1 F068          	movff	fsr1l,??_isr+7
 13502  00003A  CFE2 F069          	movff	fsr1h,??_isr+8
 13503  00003E  CFD9 F06A          	movff	fsr2l,??_isr+9
 13504  000042  CFDA F06B          	movff	fsr2h,??_isr+10
 13505  000046  CFF3 F06C          	movff	prodl,??_isr+11
 13506  00004A  CFF4 F06D          	movff	prodh,??_isr+12
 13507  00004E  CFF6 F06E          	movff	tblptrl,??_isr+13
 13508  000052  CFF7 F06F          	movff	tblptrh,??_isr+14
 13509  000056  CFF8 F070          	movff	tblptru,??_isr+15
 13510  00005A  CFF5 F071          	movff	tablat,??_isr+16
 13511                           
 13512                           ;main.c: 19: if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
 13513  00005E  BA9D               	btfsc	3997,5,c	;volatile
 13514  000060  AA9E               	btfss	3998,5,c	;volatile
 13515  000062  D003               	goto	i1l465
 13516                           
 13517                           ;main.c: 20: UARTint();
 13518  000064  EC33  F01D         	call	_UARTint	;wreg free
 13519                           
 13520                           ;main.c: 21: PIR1bits.RC1IF = 0;
 13521  000068  9A9E               	bcf	3998,5,c	;volatile
 13522  00006A                     i1l465:
 13523  00006A  C071  FFF5         	movff	??_isr+16,tablat
 13524  00006E  C070  FFF8         	movff	??_isr+15,tblptru
 13525  000072  C06F  FFF7         	movff	??_isr+14,tblptrh
 13526  000076  C06E  FFF6         	movff	??_isr+13,tblptrl
 13527  00007A  C06D  FFF4         	movff	??_isr+12,prodh
 13528  00007E  C06C  FFF3         	movff	??_isr+11,prodl
 13529  000082  C06B  FFDA         	movff	??_isr+10,fsr2h
 13530  000086  C06A  FFD9         	movff	??_isr+9,fsr2l
 13531  00008A  C069  FFE2         	movff	??_isr+8,fsr1h
 13532  00008E  C068  FFE1         	movff	??_isr+7,fsr1l
 13533  000092  C067  FFEA         	movff	??_isr+6,fsr0h
 13534  000096  C066  FFE9         	movff	??_isr+5,fsr0l
 13535  00009A  C065  FFFB         	movff	??_isr+4,pclatu
 13536  00009E  C064  FFFA         	movff	??_isr+3,pclath
 13537  0000A2  C063  FFE0         	movff	??_isr+2,bsr
 13538  0000A6  C062  FFE8         	movff	??_isr+1,wreg
 13539  0000AA  C061  FFD8         	movff	??_isr,status
 13540  0000AE  904B               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 13541  0000B0  0010               	retfie	
 13542  0000B2                     __end_of_isr:
 13543                           	opt stack 0
 13544                           pclatu	equ	0xFFB
 13545                           pclath	equ	0xFFA
 13546                           tblptru	equ	0xFF8
 13547                           tblptrh	equ	0xFF7
 13548                           tblptrl	equ	0xFF6
 13549                           tablat	equ	0xFF5
 13550                           prodh	equ	0xFF4
 13551                           prodl	equ	0xFF3
 13552                           intcon	equ	0xFF2
 13553                           postinc0	equ	0xFEE
 13554                           fsr0h	equ	0xFEA
 13555                           fsr0l	equ	0xFE9
 13556                           wreg	equ	0xFE8
 13557                           postdec1	equ	0xFE5
 13558                           fsr1h	equ	0xFE2
 13559                           fsr1l	equ	0xFE1
 13560                           bsr	equ	0xFE0
 13561                           indf2	equ	0xFDF
 13562                           postinc2	equ	0xFDE
 13563                           postdec2	equ	0xFDD
 13564                           fsr2h	equ	0xFDA
 13565                           fsr2l	equ	0xFD9
 13566                           status	equ	0xFD8
 13567                           
 13568 ;; *************** function _UARTint *****************
 13569 ;; Defined at:
 13570 ;;		line 14 in file "source/UARTConfig.h"
 13571 ;; Parameters:    Size  Location     Type
 13572 ;;		None
 13573 ;; Auto vars:     Size  Location     Type
 13574 ;;		None
 13575 ;; Return value:  Size  Location     Type
 13576 ;;                  1    wreg      void 
 13577 ;; Registers used:
 13578 ;;		wreg, status,2, status,0, cstack
 13579 ;; Tracked objects:
 13580 ;;		On entry : 0/0
 13581 ;;		On exit  : 0/0
 13582 ;;		Unchanged: 0/0
 13583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13584 ;;      Params:         0       0       0       0       0       0       0
 13585 ;;      Locals:         0       0       0       0       0       0       0
 13586 ;;      Temps:          0       0       0       0       0       0       0
 13587 ;;      Totals:         0       0       0       0       0       0       0
 13588 ;;Total ram usage:        0 bytes
 13589 ;; Hardware stack levels used:    1
 13590 ;; Hardware stack levels required when called:    9
 13591 ;; This function calls:
 13592 ;;		i1_putch
 13593 ;; This function is called by:
 13594 ;;		_isr
 13595 ;; This function uses a non-reentrant model
 13596 ;;
 13597                           
 13598                           	psect	text57
 13599  003A66                     __ptext57:
 13600                           	opt stack 0
 13601  003A66                     _UARTint:
 13602                           	opt stack 11
 13603                           
 13604                           ;UARTConfig.h: 15: putch(RCREG1);
 13605                           
 13606                           ;incstack = 0
 13607  003A66  50AE               	movf	4014,w,c	;volatile
 13608  003A68  EC06  F01D         	call	i1_putch
 13609  003A6C  0012               	return		;funcret
 13610  003A6E                     __end_of_UARTint:
 13611                           	opt stack 0
 13612                           pclatu	equ	0xFFB
 13613                           pclath	equ	0xFFA
 13614                           tblptru	equ	0xFF8
 13615                           tblptrh	equ	0xFF7
 13616                           tblptrl	equ	0xFF6
 13617                           tablat	equ	0xFF5
 13618                           prodh	equ	0xFF4
 13619                           prodl	equ	0xFF3
 13620                           intcon	equ	0xFF2
 13621                           postinc0	equ	0xFEE
 13622                           fsr0h	equ	0xFEA
 13623                           fsr0l	equ	0xFE9
 13624                           wreg	equ	0xFE8
 13625                           postdec1	equ	0xFE5
 13626                           fsr1h	equ	0xFE2
 13627                           fsr1l	equ	0xFE1
 13628                           bsr	equ	0xFE0
 13629                           indf2	equ	0xFDF
 13630                           postinc2	equ	0xFDE
 13631                           postdec2	equ	0xFDD
 13632                           fsr2h	equ	0xFDA
 13633                           fsr2l	equ	0xFD9
 13634                           status	equ	0xFD8
 13635                           
 13636 ;; *************** function i1_putch *****************
 13637 ;; Defined at:
 13638 ;;		line 59 in file "source/IOConfig.h"
 13639 ;; Parameters:    Size  Location     Type
 13640 ;;  val             1    wreg     unsigned char 
 13641 ;; Auto vars:     Size  Location     Type
 13642 ;;  val             1    0[BANK0 ] unsigned char 
 13643 ;; Return value:  Size  Location     Type
 13644 ;;                  1    wreg      void 
 13645 ;; Registers used:
 13646 ;;		wreg, status,2, status,0, cstack
 13647 ;; Tracked objects:
 13648 ;;		On entry : 0/0
 13649 ;;		On exit  : 0/0
 13650 ;;		Unchanged: 0/0
 13651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13652 ;;      Params:         0       0       0       0       0       0       0
 13653 ;;      Locals:         0       1       0       0       0       0       0
 13654 ;;      Temps:          0       0       0       0       0       0       0
 13655 ;;      Totals:         0       1       0       0       0       0       0
 13656 ;;Total ram usage:        1 bytes
 13657 ;; Hardware stack levels used:    1
 13658 ;; Hardware stack levels required when called:    8
 13659 ;; This function calls:
 13660 ;;		i1_lcd_putc
 13661 ;; This function is called by:
 13662 ;;		_UARTint
 13663 ;; This function uses a non-reentrant model
 13664 ;;
 13665                           
 13666                           	psect	text58
 13667  003A0C                     __ptext58:
 13668                           	opt stack 0
 13669  003A0C                     i1_putch:
 13670                           	opt stack 11
 13671                           
 13672                           ;incstack = 0
 13673                           ;i1putch@val stored from wreg
 13674  003A0C  0100               	movlb	0	; () banked
 13675  003A0E  6F60               	movwf	i1putch@val& (0+255),b
 13676                           
 13677                           ;IOConfig.h: 60: lcd_putc(val);
 13678  003A10  0100               	movlb	0	; () banked
 13679  003A12  5160               	movf	i1putch@val& (0+255),w,b
 13680  003A14  ECE1  F019         	call	i1_lcd_putc
 13681  003A18  0012               	return		;funcret
 13682  003A1A                     __end_ofi1_putch:
 13683                           	opt stack 0
 13684                           pclatu	equ	0xFFB
 13685                           pclath	equ	0xFFA
 13686                           tblptru	equ	0xFF8
 13687                           tblptrh	equ	0xFF7
 13688                           tblptrl	equ	0xFF6
 13689                           tablat	equ	0xFF5
 13690                           prodh	equ	0xFF4
 13691                           prodl	equ	0xFF3
 13692                           intcon	equ	0xFF2
 13693                           postinc0	equ	0xFEE
 13694                           fsr0h	equ	0xFEA
 13695                           fsr0l	equ	0xFE9
 13696                           wreg	equ	0xFE8
 13697                           postdec1	equ	0xFE5
 13698                           fsr1h	equ	0xFE2
 13699                           fsr1l	equ	0xFE1
 13700                           bsr	equ	0xFE0
 13701                           indf2	equ	0xFDF
 13702                           postinc2	equ	0xFDE
 13703                           postdec2	equ	0xFDD
 13704                           fsr2h	equ	0xFDA
 13705                           fsr2l	equ	0xFD9
 13706                           status	equ	0xFD8
 13707                           
 13708 ;; *************** function i1_lcd_putc *****************
 13709 ;; Defined at:
 13710 ;;		line 212 in file "source/../../vclib_lcd.h"
 13711 ;; Parameters:    Size  Location     Type
 13712 ;;  cha             1    wreg     unsigned char 
 13713 ;; Auto vars:     Size  Location     Type
 13714 ;;  cha             1   32[COMRAM] unsigned char 
 13715 ;; Return value:  Size  Location     Type
 13716 ;;                  1    wreg      void 
 13717 ;; Registers used:
 13718 ;;		wreg, status,2, status,0, cstack
 13719 ;; Tracked objects:
 13720 ;;		On entry : 0/0
 13721 ;;		On exit  : 0/0
 13722 ;;		Unchanged: 0/0
 13723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13724 ;;      Params:         0       0       0       0       0       0       0
 13725 ;;      Locals:         1       0       0       0       0       0       0
 13726 ;;      Temps:          1       0       0       0       0       0       0
 13727 ;;      Totals:         2       0       0       0       0       0       0
 13728 ;;Total ram usage:        2 bytes
 13729 ;; Hardware stack levels used:    1
 13730 ;; Hardware stack levels required when called:    7
 13731 ;; This function calls:
 13732 ;;		i1_lcd_gotoxy
 13733 ;;		i1_lcd_send_byte
 13734 ;; This function is called by:
 13735 ;;		i1_putch
 13736 ;; This function uses a non-reentrant model
 13737 ;;
 13738                           
 13739                           	psect	text59
 13740  0033C2                     __ptext59:
 13741                           	opt stack 0
 13742  0033C2                     i1_lcd_putc:
 13743                           	opt stack 11
 13744                           
 13745                           ;incstack = 0
 13746                           ;i1lcd_putc@cha stored from wreg
 13747  0033C2  6E21               	movwf	i1lcd_putc@cha,c
 13748                           
 13749                           ;vclib_lcd.h: 213: switch (cha) {
 13750  0033C4  D026               	goto	i1l6487
 13751  0033C6                     i1l6473:
 13752  0033C6  0E01               	movlw	1
 13753  0033C8  6E1D               	movwf	i1lcd_gotoxy@fila,c
 13754  0033CA  0E01               	movlw	1
 13755  0033CC  ECA6  F01C         	call	i1_lcd_gotoxy
 13756                           
 13757                           ;vclib_lcd.h: 215: break;
 13758  0033D0  0012               	return	
 13759  0033D2                     i1l6475:
 13760  0033D2  0E01               	movlw	1
 13761  0033D4  6E1A               	movwf	i1lcd_send_byte@n,c
 13762  0033D6  0E00               	movlw	0
 13763  0033D8  EC1F  F01C         	call	i1_lcd_send_byte
 13764                           
 13765                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
 13766  0033DC  0E0B               	movlw	11
 13767  0033DE  6E20               	movwf	??i1_lcd_putc& (0+255),c
 13768  0033E0  0E62               	movlw	98
 13769  0033E2                     i1u833_27:
 13770  0033E2  2EE8               	decfsz	wreg,f,c
 13771  0033E4  D7FE               	goto	i1u833_27
 13772  0033E6  2E20               	decfsz	??i1_lcd_putc& (0+255),f,c
 13773  0033E8  D7FC               	goto	i1u833_27
 13774  0033EA  D000               	nop2	
 13775                           
 13776                           ;vclib_lcd.h: 223: break;
 13777  0033EC  0012               	return	
 13778  0033EE                     i1l6479:
 13779  0033EE  0E02               	movlw	2
 13780  0033F0  6E1D               	movwf	i1lcd_gotoxy@fila,c
 13781  0033F2  0E01               	movlw	1
 13782  0033F4  ECA6  F01C         	call	i1_lcd_gotoxy
 13783                           
 13784                           ;vclib_lcd.h: 236: break;
 13785  0033F8  0012               	return	
 13786  0033FA                     i1l6481:
 13787  0033FA  0E10               	movlw	16
 13788  0033FC  6E1A               	movwf	i1lcd_send_byte@n,c
 13789  0033FE  0E00               	movlw	0
 13790  003400  EC1F  F01C         	call	i1_lcd_send_byte
 13791                           
 13792                           ;vclib_lcd.h: 240: break;
 13793  003404  0012               	return	
 13794  003406                     i1l6483:
 13795  003406  C021  F01A         	movff	i1lcd_putc@cha,i1lcd_send_byte@n
 13796  00340A  0E01               	movlw	1
 13797  00340C  EC1F  F01C         	call	i1_lcd_send_byte
 13798                           
 13799                           ;vclib_lcd.h: 253: }
 13800                           
 13801                           ;vclib_lcd.h: 251: break;
 13802  003410  0012               	return	
 13803  003412                     i1l6487:
 13804  003412  5021               	movf	i1lcd_putc@cha,w,c
 13805                           
 13806                           ; Switch size 1, requested type "space"
 13807                           ; Number of cases is 4, Range of values is 7 to 12
 13808                           ; switch strategies available:
 13809                           ; Name         Instructions Cycles
 13810                           ; simple_byte           13     7 (average)
 13811                           ;	Chosen strategy is simple_byte
 13812  003414  0A07               	xorlw	7	; case 7
 13813  003416  B4D8               	btfsc	status,2,c
 13814  003418  D7D6               	goto	i1l6473
 13815  00341A  0A0F               	xorlw	15	; case 8
 13816  00341C  B4D8               	btfsc	status,2,c
 13817  00341E  D7ED               	goto	i1l6481
 13818  003420  0A02               	xorlw	2	; case 10
 13819  003422  B4D8               	btfsc	status,2,c
 13820  003424  D7E4               	goto	i1l6479
 13821  003426  0A06               	xorlw	6	; case 12
 13822  003428  B4D8               	btfsc	status,2,c
 13823  00342A  D7D3               	goto	i1l6475
 13824  00342C  D7EC               	goto	i1l6483
 13825  00342E                     __end_ofi1_lcd_putc:
 13826                           	opt stack 0
 13827                           pclatu	equ	0xFFB
 13828                           pclath	equ	0xFFA
 13829                           tblptru	equ	0xFF8
 13830                           tblptrh	equ	0xFF7
 13831                           tblptrl	equ	0xFF6
 13832                           tablat	equ	0xFF5
 13833                           prodh	equ	0xFF4
 13834                           prodl	equ	0xFF3
 13835                           intcon	equ	0xFF2
 13836                           postinc0	equ	0xFEE
 13837                           fsr0h	equ	0xFEA
 13838                           fsr0l	equ	0xFE9
 13839                           wreg	equ	0xFE8
 13840                           postdec1	equ	0xFE5
 13841                           fsr1h	equ	0xFE2
 13842                           fsr1l	equ	0xFE1
 13843                           bsr	equ	0xFE0
 13844                           indf2	equ	0xFDF
 13845                           postinc2	equ	0xFDE
 13846                           postdec2	equ	0xFDD
 13847                           fsr2h	equ	0xFDA
 13848                           fsr2l	equ	0xFD9
 13849                           status	equ	0xFD8
 13850                           
 13851 ;; *************** function i1_lcd_gotoxy *****************
 13852 ;; Defined at:
 13853 ;;		line 198 in file "source/../../vclib_lcd.h"
 13854 ;; Parameters:    Size  Location     Type
 13855 ;;  pos             1    wreg     unsigned char 
 13856 ;;  fila            1   28[COMRAM] unsigned char 
 13857 ;; Auto vars:     Size  Location     Type
 13858 ;;  pos             1   29[COMRAM] unsigned char 
 13859 ;;  lcd_gotoxy      1   30[COMRAM] unsigned char 
 13860 ;; Return value:  Size  Location     Type
 13861 ;;                  1    wreg      void 
 13862 ;; Registers used:
 13863 ;;		wreg, status,2, status,0, cstack
 13864 ;; Tracked objects:
 13865 ;;		On entry : 0/0
 13866 ;;		On exit  : 0/0
 13867 ;;		Unchanged: 0/0
 13868 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13869 ;;      Params:         1       0       0       0       0       0       0
 13870 ;;      Locals:         2       0       0       0       0       0       0
 13871 ;;      Temps:          0       0       0       0       0       0       0
 13872 ;;      Totals:         3       0       0       0       0       0       0
 13873 ;;Total ram usage:        3 bytes
 13874 ;; Hardware stack levels used:    1
 13875 ;; Hardware stack levels required when called:    6
 13876 ;; This function calls:
 13877 ;;		i1_lcd_send_byte
 13878 ;; This function is called by:
 13879 ;;		i1_lcd_putc
 13880 ;; This function uses a non-reentrant model
 13881 ;;
 13882                           
 13883                           	psect	text60
 13884  00394C                     __ptext60:
 13885                           	opt stack 0
 13886  00394C                     i1_lcd_gotoxy:
 13887                           	opt stack 11
 13888                           
 13889                           ;incstack = 0
 13890                           ;i1lcd_gotoxy@pos stored from wreg
 13891  00394C  6E1E               	movwf	i1lcd_gotoxy@pos,c
 13892                           
 13893                           ;vclib_lcd.h: 199: unsigned char address;
 13894                           ;vclib_lcd.h: 200: if (fila != 1)
 13895  00394E  041D               	decf	i1lcd_gotoxy@fila,w,c
 13896  003950  B4D8               	btfsc	status,2,c
 13897  003952  D002               	goto	i1l6285
 13898                           
 13899                           ;vclib_lcd.h: 201: address = 0x40;
 13900  003954  0E40               	movlw	64
 13901  003956  D001               	goto	L13
 13902  003958                     i1l6285:
 13903                           
 13904                           ;vclib_lcd.h: 202: else
 13905                           ;vclib_lcd.h: 203: address = 0;
 13906  003958  0E00               	movlw	0
 13907  00395A                     L13:
 13908  00395A  6E1F               	movwf	i1lcd_gotoxy@address,c
 13909                           
 13910                           ;vclib_lcd.h: 204: address += pos - 1;
 13911  00395C  041E               	decf	i1lcd_gotoxy@pos,w,c
 13912  00395E  261F               	addwf	i1lcd_gotoxy@address,f,c
 13913                           
 13914                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
 13915  003960  501F               	movf	i1lcd_gotoxy@address,w,c
 13916  003962  0980               	iorlw	128
 13917  003964  6E1A               	movwf	i1lcd_send_byte@n,c
 13918  003966  0E00               	movlw	0
 13919  003968  EC1F  F01C         	call	i1_lcd_send_byte
 13920  00396C  0012               	return		;funcret
 13921  00396E                     __end_ofi1_lcd_gotoxy:
 13922                           	opt stack 0
 13923                           pclatu	equ	0xFFB
 13924                           pclath	equ	0xFFA
 13925                           tblptru	equ	0xFF8
 13926                           tblptrh	equ	0xFF7
 13927                           tblptrl	equ	0xFF6
 13928                           tablat	equ	0xFF5
 13929                           prodh	equ	0xFF4
 13930                           prodl	equ	0xFF3
 13931                           intcon	equ	0xFF2
 13932                           postinc0	equ	0xFEE
 13933                           fsr0h	equ	0xFEA
 13934                           fsr0l	equ	0xFE9
 13935                           wreg	equ	0xFE8
 13936                           postdec1	equ	0xFE5
 13937                           fsr1h	equ	0xFE2
 13938                           fsr1l	equ	0xFE1
 13939                           bsr	equ	0xFE0
 13940                           indf2	equ	0xFDF
 13941                           postinc2	equ	0xFDE
 13942                           postdec2	equ	0xFDD
 13943                           fsr2h	equ	0xFDA
 13944                           fsr2l	equ	0xFD9
 13945                           status	equ	0xFD8
 13946                           
 13947 ;; *************** function i1_lcd_send_byte *****************
 13948 ;; Defined at:
 13949 ;;		line 163 in file "source/../../vclib_lcd.h"
 13950 ;; Parameters:    Size  Location     Type
 13951 ;;  address         1    wreg     unsigned char 
 13952 ;;  n               1   25[COMRAM] unsigned char 
 13953 ;; Auto vars:     Size  Location     Type
 13954 ;;  address         1   27[COMRAM] unsigned char 
 13955 ;; Return value:  Size  Location     Type
 13956 ;;                  1    wreg      void 
 13957 ;; Registers used:
 13958 ;;		wreg, status,2, status,0, cstack
 13959 ;; Tracked objects:
 13960 ;;		On entry : 0/0
 13961 ;;		On exit  : 0/0
 13962 ;;		Unchanged: 0/0
 13963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13964 ;;      Params:         1       0       0       0       0       0       0
 13965 ;;      Locals:         1       0       0       0       0       0       0
 13966 ;;      Temps:          1       0       0       0       0       0       0
 13967 ;;      Totals:         3       0       0       0       0       0       0
 13968 ;;Total ram usage:        3 bytes
 13969 ;; Hardware stack levels used:    1
 13970 ;; Hardware stack levels required when called:    5
 13971 ;; This function calls:
 13972 ;;		i1_lcd_read_byte
 13973 ;;		i1_lcd_send_4bits
 13974 ;; This function is called by:
 13975 ;;		i1_lcd_gotoxy
 13976 ;;		i1_lcd_putc
 13977 ;; This function uses a non-reentrant model
 13978 ;;
 13979                           
 13980                           	psect	text61
 13981  00383E                     __ptext61:
 13982                           	opt stack 0
 13983  00383E                     i1_lcd_send_byte:
 13984                           	opt stack 12
 13985                           
 13986                           ;incstack = 0
 13987                           ;i1lcd_send_byte@address stored from wreg
 13988  00383E  6E1C               	movwf	i1lcd_send_byte@address,c
 13989                           
 13990                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
 13991  003840  9281               	bcf	3969,1,c	;volatile
 13992  003842                     i1l5933:
 13993  003842  EC90  F01B         	call	i1_lcd_read_byte	;wreg free
 13994  003846  6E1B               	movwf	??i1_lcd_send_byte& (0+255),c
 13995  003848  BE1B               	btfsc	??i1_lcd_send_byte,7,c
 13996  00384A  D7FB               	goto	i1l5933
 13997                           
 13998                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
 13999  00384C  B01C               	btfsc	i1lcd_send_byte@address,0,c
 14000  00384E  D002               	bra	i1u687_25
 14001  003850  9281               	bcf	3969,1,c	;volatile
 14002  003852  D001               	bra	i1u687_26
 14003  003854                     i1u687_25:
 14004  003854  8281               	bsf	3969,1,c	;volatile
 14005  003856                     i1u687_26:
 14006                           
 14007                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14008  003856  D000               	nop2		;2 cycle nop
 14009  003858  D000               	nop2		;2 cycle nop
 14010                           
 14011                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
 14012  00385A  9481               	bcf	3969,2,c	;volatile
 14013                           
 14014                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14015  00385C  D000               	nop2		;2 cycle nop
 14016  00385E  D000               	nop2		;2 cycle nop
 14017                           
 14018                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
 14019  003860  9681               	bcf	3969,3,c	;volatile
 14020                           
 14021                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
 14022  003862  381A               	swapf	i1lcd_send_byte@n,w,c
 14023  003864  0B0F               	andlw	15
 14024  003866  EC17  F01A         	call	i1_lcd_send_4bits
 14025                           
 14026                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
 14027  00386A  501A               	movf	i1lcd_send_byte@n,w,c
 14028  00386C  0B0F               	andlw	15
 14029  00386E  EC17  F01A         	call	i1_lcd_send_4bits
 14030  003872  0012               	return		;funcret
 14031  003874                     __end_ofi1_lcd_send_byte:
 14032                           	opt stack 0
 14033                           pclatu	equ	0xFFB
 14034                           pclath	equ	0xFFA
 14035                           tblptru	equ	0xFF8
 14036                           tblptrh	equ	0xFF7
 14037                           tblptrl	equ	0xFF6
 14038                           tablat	equ	0xFF5
 14039                           prodh	equ	0xFF4
 14040                           prodl	equ	0xFF3
 14041                           intcon	equ	0xFF2
 14042                           postinc0	equ	0xFEE
 14043                           fsr0h	equ	0xFEA
 14044                           fsr0l	equ	0xFE9
 14045                           wreg	equ	0xFE8
 14046                           postdec1	equ	0xFE5
 14047                           fsr1h	equ	0xFE2
 14048                           fsr1l	equ	0xFE1
 14049                           bsr	equ	0xFE0
 14050                           indf2	equ	0xFDF
 14051                           postinc2	equ	0xFDE
 14052                           postdec2	equ	0xFDD
 14053                           fsr2h	equ	0xFDA
 14054                           fsr2l	equ	0xFD9
 14055                           status	equ	0xFD8
 14056                           
 14057 ;; *************** function i1_lcd_send_4bits *****************
 14058 ;; Defined at:
 14059 ;;		line 151 in file "source/../../vclib_lcd.h"
 14060 ;; Parameters:    Size  Location     Type
 14061 ;;  n               1    wreg     unsigned char 
 14062 ;; Auto vars:     Size  Location     Type
 14063 ;;  n               1   24[COMRAM] unsigned char 
 14064 ;; Return value:  Size  Location     Type
 14065 ;;                  1    wreg      void 
 14066 ;; Registers used:
 14067 ;;		wreg, status,2, cstack
 14068 ;; Tracked objects:
 14069 ;;		On entry : 0/0
 14070 ;;		On exit  : 0/0
 14071 ;;		Unchanged: 0/0
 14072 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14073 ;;      Params:         0       0       0       0       0       0       0
 14074 ;;      Locals:         5       0       0       0       0       0       0
 14075 ;;      Temps:          0       0       0       0       0       0       0
 14076 ;;      Totals:         5       0       0       0       0       0       0
 14077 ;;Total ram usage:        5 bytes
 14078 ;; Hardware stack levels used:    1
 14079 ;; Hardware stack levels required when called:    3
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		i1_lcd_send_byte
 14084 ;; This function uses a non-reentrant model
 14085 ;;
 14086                           
 14087                           	psect	text62
 14088  00342E                     __ptext62:
 14089                           	opt stack 0
 14090  00342E                     i1_lcd_send_4bits:
 14091                           	opt stack 13
 14092                           
 14093                           ;incstack = 0
 14094                           ;i1lcd_send_4bits@n stored from wreg
 14095  00342E  6E19               	movwf	i1lcd_send_4bits@n,c
 14096                           
 14097                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
 14098  003430  0E01               	movlw	1
 14099  003432  6E15               	movwf	i1_lcd_send_4bits$1593,c
 14100  003434  B019               	btfsc	i1lcd_send_4bits@n,0,c
 14101  003436  D002               	goto	i1l5473
 14102  003438  0E00               	movlw	0
 14103  00343A  6E15               	movwf	i1_lcd_send_4bits$1593,c
 14104  00343C                     i1l5473:
 14105  00343C  B015               	btfsc	i1_lcd_send_4bits$1593,0,c
 14106  00343E  D002               	bra	i1u609_25
 14107  003440  9881               	bcf	3969,4,c	;volatile
 14108  003442  D001               	bra	i1u609_26
 14109  003444                     i1u609_25:
 14110  003444  8881               	bsf	3969,4,c	;volatile
 14111  003446                     i1u609_26:
 14112                           
 14113                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
 14114  003446  0E01               	movlw	1
 14115  003448  6E16               	movwf	i1_lcd_send_4bits$1594,c
 14116  00344A  B219               	btfsc	i1lcd_send_4bits@n,1,c
 14117  00344C  D002               	goto	i1l5479
 14118  00344E  0E00               	movlw	0
 14119  003450  6E16               	movwf	i1_lcd_send_4bits$1594,c
 14120  003452                     i1l5479:
 14121  003452  B016               	btfsc	i1_lcd_send_4bits$1594,0,c
 14122  003454  D002               	bra	i1u611_25
 14123  003456  9A81               	bcf	3969,5,c	;volatile
 14124  003458  D001               	bra	i1u611_26
 14125  00345A                     i1u611_25:
 14126  00345A  8A81               	bsf	3969,5,c	;volatile
 14127  00345C                     i1u611_26:
 14128                           
 14129                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
 14130  00345C  0E01               	movlw	1
 14131  00345E  6E17               	movwf	i1_lcd_send_4bits$1595,c
 14132  003460  B419               	btfsc	i1lcd_send_4bits@n,2,c
 14133  003462  D002               	goto	i1l5485
 14134  003464  0E00               	movlw	0
 14135  003466  6E17               	movwf	i1_lcd_send_4bits$1595,c
 14136  003468                     i1l5485:
 14137  003468  B017               	btfsc	i1_lcd_send_4bits$1595,0,c
 14138  00346A  D002               	bra	i1u613_25
 14139  00346C  9C81               	bcf	3969,6,c	;volatile
 14140  00346E  D001               	bra	i1u613_26
 14141  003470                     i1u613_25:
 14142  003470  8C81               	bsf	3969,6,c	;volatile
 14143  003472                     i1u613_26:
 14144                           
 14145                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
 14146  003472  0E01               	movlw	1
 14147  003474  6E18               	movwf	i1_lcd_send_4bits$1596,c
 14148  003476  B619               	btfsc	i1lcd_send_4bits@n,3,c
 14149  003478  D002               	goto	i1l5491
 14150  00347A  0E00               	movlw	0
 14151  00347C  6E18               	movwf	i1_lcd_send_4bits$1596,c
 14152  00347E                     i1l5491:
 14153  00347E  B018               	btfsc	i1_lcd_send_4bits$1596,0,c
 14154  003480  D002               	bra	i1u615_25
 14155  003482  9E81               	bcf	3969,7,c	;volatile
 14156  003484  D001               	bra	i1u615_26
 14157  003486                     i1u615_25:
 14158  003486  8E81               	bsf	3969,7,c	;volatile
 14159  003488                     i1u615_26:
 14160                           
 14161                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14162  003488  D000               	nop2		;2 cycle nop
 14163  00348A  D000               	nop2		;2 cycle nop
 14164                           
 14165                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
 14166  00348C  8681               	bsf	3969,3,c	;volatile
 14167                           
 14168                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
 14169  00348E  0E02               	movlw	2
 14170  003490                     i1u834_27:
 14171  003490  2EE8               	decfsz	wreg,f,c
 14172  003492  D7FE               	goto	i1u834_27
 14173  003494  D000               	nop2		;nop
 14174                           
 14175                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
 14176  003496  9681               	bcf	3969,3,c	;volatile
 14177  003498  0012               	return		;funcret
 14178  00349A                     __end_ofi1_lcd_send_4bits:
 14179                           	opt stack 0
 14180                           pclatu	equ	0xFFB
 14181                           pclath	equ	0xFFA
 14182                           tblptru	equ	0xFF8
 14183                           tblptrh	equ	0xFF7
 14184                           tblptrl	equ	0xFF6
 14185                           tablat	equ	0xFF5
 14186                           prodh	equ	0xFF4
 14187                           prodl	equ	0xFF3
 14188                           intcon	equ	0xFF2
 14189                           postinc0	equ	0xFEE
 14190                           fsr0h	equ	0xFEA
 14191                           fsr0l	equ	0xFE9
 14192                           wreg	equ	0xFE8
 14193                           postdec1	equ	0xFE5
 14194                           fsr1h	equ	0xFE2
 14195                           fsr1l	equ	0xFE1
 14196                           bsr	equ	0xFE0
 14197                           indf2	equ	0xFDF
 14198                           postinc2	equ	0xFDE
 14199                           postdec2	equ	0xFDD
 14200                           fsr2h	equ	0xFDA
 14201                           fsr2l	equ	0xFD9
 14202                           status	equ	0xFD8
 14203                           
 14204 ;; *************** function i1_lcd_read_byte *****************
 14205 ;; Defined at:
 14206 ;;		line 127 in file "source/../../vclib_lcd.h"
 14207 ;; Parameters:    Size  Location     Type
 14208 ;;		None
 14209 ;; Auto vars:     Size  Location     Type
 14210 ;;  lcd_read_byt    1   23[COMRAM] unsigned char 
 14211 ;;  lcd_read_byt    1   22[COMRAM] unsigned char 
 14212 ;; Return value:  Size  Location     Type
 14213 ;;                  1    wreg      unsigned char 
 14214 ;; Registers used:
 14215 ;;		wreg, status,2, status,0, cstack
 14216 ;; Tracked objects:
 14217 ;;		On entry : 0/0
 14218 ;;		On exit  : 0/0
 14219 ;;		Unchanged: 0/0
 14220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14221 ;;      Params:         0       0       0       0       0       0       0
 14222 ;;      Locals:         2       0       0       0       0       0       0
 14223 ;;      Temps:          0       0       0       0       0       0       0
 14224 ;;      Totals:         2       0       0       0       0       0       0
 14225 ;;Total ram usage:        2 bytes
 14226 ;; Hardware stack levels used:    1
 14227 ;; Hardware stack levels required when called:    4
 14228 ;; This function calls:
 14229 ;;		i1_lcd_read_4bits
 14230 ;; This function is called by:
 14231 ;;		i1_lcd_send_byte
 14232 ;; This function uses a non-reentrant model
 14233 ;;
 14234                           
 14235                           	psect	text63
 14236  003720                     __ptext63:
 14237                           	opt stack 0
 14238  003720                     i1_lcd_read_byte:
 14239                           	opt stack 12
 14240                           
 14241                           ;vclib_lcd.h: 128: unsigned char low, high;
 14242                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
 14243                           
 14244                           ;incstack = 0
 14245  003720  8893               	bsf	3987,4,c	;volatile
 14246                           
 14247                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
 14248  003722  8A93               	bsf	3987,5,c	;volatile
 14249                           
 14250                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
 14251  003724  8C93               	bsf	3987,6,c	;volatile
 14252                           
 14253                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
 14254  003726  8E93               	bsf	3987,7,c	;volatile
 14255                           
 14256                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
 14257  003728  8481               	bsf	3969,2,c	;volatile
 14258                           
 14259                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14260  00372A  D000               	nop2		;2 cycle nop
 14261  00372C  D000               	nop2		;2 cycle nop
 14262                           
 14263                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
 14264  00372E  8681               	bsf	3969,3,c	;volatile
 14265                           
 14266                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14267  003730  D000               	nop2		;2 cycle nop
 14268  003732  D000               	nop2		;2 cycle nop
 14269                           
 14270                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
 14271  003734  ECB3  F01A         	call	i1_lcd_read_4bits	;wreg free
 14272  003738  6E18               	movwf	i1lcd_read_byte@high,c
 14273                           
 14274                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
 14275  00373A  9681               	bcf	3969,3,c	;volatile
 14276                           
 14277                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14278  00373C  D000               	nop2		;2 cycle nop
 14279  00373E  D000               	nop2		;2 cycle nop
 14280                           
 14281                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
 14282  003740  8681               	bsf	3969,3,c	;volatile
 14283                           
 14284                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
 14285  003742  D000               	nop2		;2 cycle nop
 14286  003744  D000               	nop2		;2 cycle nop
 14287                           
 14288                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
 14289  003746  ECB3  F01A         	call	i1_lcd_read_4bits	;wreg free
 14290  00374A  6E17               	movwf	i1lcd_read_byte@low,c
 14291                           
 14292                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
 14293  00374C  9681               	bcf	3969,3,c	;volatile
 14294                           
 14295                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
 14296  00374E  9893               	bcf	3987,4,c	;volatile
 14297                           
 14298                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
 14299  003750  9A93               	bcf	3987,5,c	;volatile
 14300                           
 14301                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
 14302  003752  9C93               	bcf	3987,6,c	;volatile
 14303                           
 14304                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
 14305  003754  9E93               	bcf	3987,7,c	;volatile
 14306                           
 14307                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
 14308  003756  3818               	swapf	i1lcd_read_byte@high,w,c
 14309  003758  0BF0               	andlw	240
 14310  00375A  1017               	iorwf	i1lcd_read_byte@low,w,c
 14311  00375C  0012               	return	
 14312  00375E                     __end_ofi1_lcd_read_byte:
 14313                           	opt stack 0
 14314                           pclatu	equ	0xFFB
 14315                           pclath	equ	0xFFA
 14316                           tblptru	equ	0xFF8
 14317                           tblptrh	equ	0xFF7
 14318                           tblptrl	equ	0xFF6
 14319                           tablat	equ	0xFF5
 14320                           prodh	equ	0xFF4
 14321                           prodl	equ	0xFF3
 14322                           intcon	equ	0xFF2
 14323                           postinc0	equ	0xFEE
 14324                           fsr0h	equ	0xFEA
 14325                           fsr0l	equ	0xFE9
 14326                           wreg	equ	0xFE8
 14327                           postdec1	equ	0xFE5
 14328                           fsr1h	equ	0xFE2
 14329                           fsr1l	equ	0xFE1
 14330                           bsr	equ	0xFE0
 14331                           indf2	equ	0xFDF
 14332                           postinc2	equ	0xFDE
 14333                           postdec2	equ	0xFDD
 14334                           fsr2h	equ	0xFDA
 14335                           fsr2l	equ	0xFD9
 14336                           status	equ	0xFD8
 14337                           
 14338 ;; *************** function i1_lcd_read_4bits *****************
 14339 ;; Defined at:
 14340 ;;		line 117 in file "source/../../vclib_lcd.h"
 14341 ;; Parameters:    Size  Location     Type
 14342 ;;		None
 14343 ;; Auto vars:     Size  Location     Type
 14344 ;;  lcd_read_4bi    1   21[COMRAM] unsigned char 
 14345 ;; Return value:  Size  Location     Type
 14346 ;;                  1    wreg      unsigned char 
 14347 ;; Registers used:
 14348 ;;		wreg, status,2, status,0
 14349 ;; Tracked objects:
 14350 ;;		On entry : 0/0
 14351 ;;		On exit  : 0/0
 14352 ;;		Unchanged: 0/0
 14353 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14354 ;;      Params:         0       0       0       0       0       0       0
 14355 ;;      Locals:         1       0       0       0       0       0       0
 14356 ;;      Temps:          1       0       0       0       0       0       0
 14357 ;;      Totals:         2       0       0       0       0       0       0
 14358 ;;Total ram usage:        2 bytes
 14359 ;; Hardware stack levels used:    1
 14360 ;; Hardware stack levels required when called:    3
 14361 ;; This function calls:
 14362 ;;		Nothing
 14363 ;; This function is called by:
 14364 ;;		i1_lcd_read_byte
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text64
 14369  003566                     __ptext64:
 14370                           	opt stack 0
 14371  003566                     i1_lcd_read_4bits:
 14372                           	opt stack 12
 14373                           
 14374                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
 14375                           
 14376                           ;incstack = 0
 14377  003566  0E00               	movlw	0
 14378  003568  6E16               	movwf	i1lcd_read_4bits@n,c
 14379                           
 14380                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
 14381  00356A  A881               	btfss	3969,4,c	;volatile
 14382  00356C  D002               	goto	i1u603_20
 14383  00356E  0E01               	movlw	1
 14384  003570  D001               	goto	i1u603_26
 14385  003572                     i1u603_20:
 14386  003572  0E00               	movlw	0
 14387  003574                     i1u603_26:
 14388  003574  1216               	iorwf	i1lcd_read_4bits@n,f,c
 14389                           
 14390                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
 14391  003576  AA81               	btfss	3969,5,c	;volatile
 14392  003578  D003               	goto	i1u604_20
 14393  00357A  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14394  00357C  2A15               	incf	??i1_lcd_read_4bits& (0+255),f,c
 14395  00357E  D001               	goto	i1u604_28
 14396  003580                     i1u604_20:
 14397  003580  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14398  003582                     i1u604_28:
 14399  003582  90D8               	bcf	status,0,c
 14400  003584  3415               	rlcf	??i1_lcd_read_4bits,w,c
 14401  003586  1216               	iorwf	i1lcd_read_4bits@n,f,c
 14402                           
 14403                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
 14404  003588  AC81               	btfss	3969,6,c	;volatile
 14405  00358A  D003               	goto	i1u605_20
 14406  00358C  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14407  00358E  2A15               	incf	??i1_lcd_read_4bits& (0+255),f,c
 14408  003590  D001               	goto	i1u605_28
 14409  003592                     i1u605_20:
 14410  003592  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14411  003594                     i1u605_28:
 14412  003594  90D8               	bcf	status,0,c
 14413  003596  3615               	rlcf	??i1_lcd_read_4bits,f,c
 14414  003598  90D8               	bcf	status,0,c
 14415  00359A  3415               	rlcf	??i1_lcd_read_4bits,w,c
 14416  00359C  1216               	iorwf	i1lcd_read_4bits@n,f,c
 14417                           
 14418                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
 14419  00359E  AE81               	btfss	3969,7,c	;volatile
 14420  0035A0  D003               	goto	i1u606_20
 14421  0035A2  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14422  0035A4  2A15               	incf	??i1_lcd_read_4bits& (0+255),f,c
 14423  0035A6  D001               	goto	i1u606_28
 14424  0035A8                     i1u606_20:
 14425  0035A8  6A15               	clrf	??i1_lcd_read_4bits& (0+255),c
 14426  0035AA                     i1u606_28:
 14427  0035AA  90D8               	bcf	status,0,c
 14428  0035AC  3615               	rlcf	??i1_lcd_read_4bits,f,c
 14429  0035AE  90D8               	bcf	status,0,c
 14430  0035B0  3615               	rlcf	??i1_lcd_read_4bits,f,c
 14431  0035B2  90D8               	bcf	status,0,c
 14432  0035B4  3415               	rlcf	??i1_lcd_read_4bits,w,c
 14433  0035B6  1216               	iorwf	i1lcd_read_4bits@n,f,c
 14434                           
 14435                           ;vclib_lcd.h: 124: return (n);
 14436  0035B8  5016               	movf	i1lcd_read_4bits@n,w,c
 14437  0035BA  0012               	return	
 14438  0035BC                     __end_ofi1_lcd_read_4bits:
 14439                           	opt stack 0
 14440                           pclatu	equ	0xFFB
 14441                           pclath	equ	0xFFA
 14442                           tblptru	equ	0xFF8
 14443                           tblptrh	equ	0xFF7
 14444                           tblptrl	equ	0xFF6
 14445                           tablat	equ	0xFF5
 14446                           prodh	equ	0xFF4
 14447                           prodl	equ	0xFF3
 14448                           intcon	equ	0xFF2
 14449                           postinc0	equ	0xFEE
 14450                           fsr0h	equ	0xFEA
 14451                           fsr0l	equ	0xFE9
 14452                           wreg	equ	0xFE8
 14453                           postdec1	equ	0xFE5
 14454                           fsr1h	equ	0xFE2
 14455                           fsr1l	equ	0xFE1
 14456                           bsr	equ	0xFE0
 14457                           indf2	equ	0xFDF
 14458                           postinc2	equ	0xFDE
 14459                           postdec2	equ	0xFDD
 14460                           fsr2h	equ	0xFDA
 14461                           fsr2l	equ	0xFD9
 14462                           status	equ	0xFD8
 14463                           
 14464 ;; *************** function _hp_isr *****************
 14465 ;; Defined at:
 14466 ;;		line 11 in file "source/main.c"
 14467 ;; Parameters:    Size  Location     Type
 14468 ;;		None
 14469 ;; Auto vars:     Size  Location     Type
 14470 ;;		None
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  1    wreg      void 
 14473 ;; Registers used:
 14474 ;;		wreg, status,2, status,0, cstack
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 0/0
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14480 ;;      Params:         0       0       0       0       0       0       0
 14481 ;;      Locals:         0       0       0       0       0       0       0
 14482 ;;      Temps:         14       0       0       0       0       0       0
 14483 ;;      Totals:        14       0       0       0       0       0       0
 14484 ;;Total ram usage:       14 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; Hardware stack levels required when called:    2
 14487 ;; This function calls:
 14488 ;;		_T2int
 14489 ;; This function is called by:
 14490 ;;		Interrupt level 2
 14491 ;; This function uses a non-reentrant model
 14492 ;;
 14493                           
 14494                           	psect	intcode
 14495  000008                     __pintcode:
 14496                           	opt stack 0
 14497  000008                     _hp_isr:
 14498                           	opt stack 11
 14499                           
 14500                           ;incstack = 0
 14501  000008  824B               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 14502  00000A  CFFA F007          	movff	pclath,??_hp_isr
 14503  00000E  CFFB F008          	movff	pclatu,??_hp_isr+1
 14504  000012  EF6D  F019         	goto	int_func
 14505                           pclatu	equ	0xFFB
 14506                           pclath	equ	0xFFA
 14507                           tblptru	equ	0xFF8
 14508                           tblptrh	equ	0xFF7
 14509                           tblptrl	equ	0xFF6
 14510                           tablat	equ	0xFF5
 14511                           prodh	equ	0xFF4
 14512                           prodl	equ	0xFF3
 14513                           intcon	equ	0xFF2
 14514                           postinc0	equ	0xFEE
 14515                           fsr0h	equ	0xFEA
 14516                           fsr0l	equ	0xFE9
 14517                           wreg	equ	0xFE8
 14518                           postdec1	equ	0xFE5
 14519                           fsr1h	equ	0xFE2
 14520                           fsr1l	equ	0xFE1
 14521                           bsr	equ	0xFE0
 14522                           indf2	equ	0xFDF
 14523                           postinc2	equ	0xFDE
 14524                           postdec2	equ	0xFDD
 14525                           fsr2h	equ	0xFDA
 14526                           fsr2l	equ	0xFD9
 14527                           status	equ	0xFD8
 14528                           
 14529                           	psect	intcode_body
 14530  0032DA                     __pintcode_body:
 14531                           	opt stack 11
 14532  0032DA                     int_func:
 14533                           	opt stack 11
 14534  0032DA  CFE9 F009          	movff	fsr0l,??_hp_isr+2
 14535  0032DE  CFEA F00A          	movff	fsr0h,??_hp_isr+3
 14536  0032E2  CFE1 F00B          	movff	fsr1l,??_hp_isr+4
 14537  0032E6  CFE2 F00C          	movff	fsr1h,??_hp_isr+5
 14538  0032EA  CFD9 F00D          	movff	fsr2l,??_hp_isr+6
 14539  0032EE  CFDA F00E          	movff	fsr2h,??_hp_isr+7
 14540  0032F2  CFF3 F00F          	movff	prodl,??_hp_isr+8
 14541  0032F6  CFF4 F010          	movff	prodh,??_hp_isr+9
 14542  0032FA  CFF6 F011          	movff	tblptrl,??_hp_isr+10
 14543  0032FE  CFF7 F012          	movff	tblptrh,??_hp_isr+11
 14544  003302  CFF8 F013          	movff	tblptru,??_hp_isr+12
 14545  003306  CFF5 F014          	movff	tablat,??_hp_isr+13
 14546                           
 14547                           ;main.c: 12: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
 14548  00330A  B29D               	btfsc	3997,1,c	;volatile
 14549  00330C  A29E               	btfss	3998,1,c	;volatile
 14550  00330E  D003               	goto	i2l461
 14551                           
 14552                           ;main.c: 13: T2int();
 14553  003310  ECEB  F01C         	call	_T2int	;wreg free
 14554                           
 14555                           ;main.c: 14: PIR1bits.TMR2IF = 0;
 14556  003314  929E               	bcf	3998,1,c	;volatile
 14557  003316                     i2l461:
 14558  003316  C014  FFF5         	movff	??_hp_isr+13,tablat
 14559  00331A  C013  FFF8         	movff	??_hp_isr+12,tblptru
 14560  00331E  C012  FFF7         	movff	??_hp_isr+11,tblptrh
 14561  003322  C011  FFF6         	movff	??_hp_isr+10,tblptrl
 14562  003326  C010  FFF4         	movff	??_hp_isr+9,prodh
 14563  00332A  C00F  FFF3         	movff	??_hp_isr+8,prodl
 14564  00332E  C00E  FFDA         	movff	??_hp_isr+7,fsr2h
 14565  003332  C00D  FFD9         	movff	??_hp_isr+6,fsr2l
 14566  003336  C00C  FFE2         	movff	??_hp_isr+5,fsr1h
 14567  00333A  C00B  FFE1         	movff	??_hp_isr+4,fsr1l
 14568  00333E  C00A  FFEA         	movff	??_hp_isr+3,fsr0h
 14569  003342  C009  FFE9         	movff	??_hp_isr+2,fsr0l
 14570  003346  C008  FFFB         	movff	??_hp_isr+1,pclatu
 14571  00334A  C007  FFFA         	movff	??_hp_isr,pclath
 14572  00334E  924B               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 14573  003350  0011               	retfie		f
 14574  003352                     __end_of_hp_isr:
 14575                           	opt stack 0
 14576                           pclatu	equ	0xFFB
 14577                           pclath	equ	0xFFA
 14578                           tblptru	equ	0xFF8
 14579                           tblptrh	equ	0xFF7
 14580                           tblptrl	equ	0xFF6
 14581                           tablat	equ	0xFF5
 14582                           prodh	equ	0xFF4
 14583                           prodl	equ	0xFF3
 14584                           intcon	equ	0xFF2
 14585                           postinc0	equ	0xFEE
 14586                           fsr0h	equ	0xFEA
 14587                           fsr0l	equ	0xFE9
 14588                           wreg	equ	0xFE8
 14589                           postdec1	equ	0xFE5
 14590                           fsr1h	equ	0xFE2
 14591                           fsr1l	equ	0xFE1
 14592                           bsr	equ	0xFE0
 14593                           indf2	equ	0xFDF
 14594                           postinc2	equ	0xFDE
 14595                           postdec2	equ	0xFDD
 14596                           fsr2h	equ	0xFDA
 14597                           fsr2l	equ	0xFD9
 14598                           status	equ	0xFD8
 14599                           
 14600 ;; *************** function _T2int *****************
 14601 ;; Defined at:
 14602 ;;		line 32 in file "source/PWMConfig.h"
 14603 ;; Parameters:    Size  Location     Type
 14604 ;;		None
 14605 ;; Auto vars:     Size  Location     Type
 14606 ;;		None
 14607 ;; Return value:  Size  Location     Type
 14608 ;;                  1    wreg      void 
 14609 ;; Registers used:
 14610 ;;		wreg, status,2, status,0, cstack
 14611 ;; Tracked objects:
 14612 ;;		On entry : 0/0
 14613 ;;		On exit  : 0/0
 14614 ;;		Unchanged: 0/0
 14615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14616 ;;      Params:         0       0       0       0       0       0       0
 14617 ;;      Locals:         0       0       0       0       0       0       0
 14618 ;;      Temps:          0       0       0       0       0       0       0
 14619 ;;      Totals:         0       0       0       0       0       0       0
 14620 ;;Total ram usage:        0 bytes
 14621 ;; Hardware stack levels used:    1
 14622 ;; Hardware stack levels required when called:    1
 14623 ;; This function calls:
 14624 ;;		i2_setPWM2duty
 14625 ;; This function is called by:
 14626 ;;		_hp_isr
 14627 ;; This function uses a non-reentrant model
 14628 ;;
 14629                           
 14630                           	psect	text66
 14631  0039D6                     __ptext66:
 14632                           	opt stack 0
 14633  0039D6                     _T2int:
 14634                           	opt stack 11
 14635                           
 14636                           ;PWMConfig.h: 33: if(PORTAbits.RA7 || PORTAbits.RA6)
 14637                           
 14638                           ;incstack = 0
 14639  0039D6  AE80               	btfss	3968,7,c	;volatile
 14640  0039D8  BC80               	btfsc	3968,6,c	;volatile
 14641  0039DA  D001               	goto	i2l4915
 14642  0039DC  0012               	return	
 14643  0039DE                     i2l4915:
 14644                           
 14645                           ;PWMConfig.h: 34: setPWM2duty(0);
 14646  0039DE  0E00               	movlw	0
 14647  0039E0  6E02               	movwf	i2setPWM2duty@actuator+1,c
 14648  0039E2  0E00               	movlw	0
 14649  0039E4  6E01               	movwf	i2setPWM2duty@actuator,c
 14650  0039E6  ECA9  F019         	call	i2_setPWM2duty	;wreg free
 14651  0039EA  0012               	return	
 14652  0039EC                     __end_of_T2int:
 14653                           	opt stack 0
 14654                           pclatu	equ	0xFFB
 14655                           pclath	equ	0xFFA
 14656                           tblptru	equ	0xFF8
 14657                           tblptrh	equ	0xFF7
 14658                           tblptrl	equ	0xFF6
 14659                           tablat	equ	0xFF5
 14660                           prodh	equ	0xFF4
 14661                           prodl	equ	0xFF3
 14662                           intcon	equ	0xFF2
 14663                           postinc0	equ	0xFEE
 14664                           fsr0h	equ	0xFEA
 14665                           fsr0l	equ	0xFE9
 14666                           wreg	equ	0xFE8
 14667                           postdec1	equ	0xFE5
 14668                           fsr1h	equ	0xFE2
 14669                           fsr1l	equ	0xFE1
 14670                           bsr	equ	0xFE0
 14671                           indf2	equ	0xFDF
 14672                           postinc2	equ	0xFDE
 14673                           postdec2	equ	0xFDD
 14674                           fsr2h	equ	0xFDA
 14675                           fsr2l	equ	0xFD9
 14676                           status	equ	0xFD8
 14677                           
 14678 ;; *************** function i2_setPWM2duty *****************
 14679 ;; Defined at:
 14680 ;;		line 20 in file "source/PWMConfig.h"
 14681 ;; Parameters:    Size  Location     Type
 14682 ;;  actuator        2    0[COMRAM] short 
 14683 ;; Auto vars:     Size  Location     Type
 14684 ;;  setPWM2duty     2    4[COMRAM] short 
 14685 ;; Return value:  Size  Location     Type
 14686 ;;                  1    wreg      void 
 14687 ;; Registers used:
 14688 ;;		wreg, status,2, status,0
 14689 ;; Tracked objects:
 14690 ;;		On entry : 0/0
 14691 ;;		On exit  : 0/0
 14692 ;;		Unchanged: 0/0
 14693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14694 ;;      Params:         2       0       0       0       0       0       0
 14695 ;;      Locals:         2       0       0       0       0       0       0
 14696 ;;      Temps:          2       0       0       0       0       0       0
 14697 ;;      Totals:         6       0       0       0       0       0       0
 14698 ;;Total ram usage:        6 bytes
 14699 ;; Hardware stack levels used:    1
 14700 ;; This function calls:
 14701 ;;		Nothing
 14702 ;; This function is called by:
 14703 ;;		_T2int
 14704 ;; This function uses a non-reentrant model
 14705 ;;
 14706                           
 14707                           	psect	text67
 14708  003352                     __ptext67:
 14709                           	opt stack 0
 14710  003352                     i2_setPWM2duty:
 14711                           	opt stack 11
 14712                           
 14713                           ;PWMConfig.h: 21: short act = 400;
 14714                           
 14715                           ;incstack = 0
 14716  003352  0E01               	movlw	1
 14717  003354  6E06               	movwf	i2setPWM2duty@act+1,c
 14718  003356  0E90               	movlw	144
 14719  003358  6E05               	movwf	i2setPWM2duty@act,c
 14720                           
 14721                           ;PWMConfig.h: 22: if(actuator > 400)
 14722  00335A  BE02               	btfsc	i2setPWM2duty@actuator+1,7,c
 14723  00335C  D00A               	goto	i2l4753
 14724  00335E  0E91               	movlw	145
 14725  003360  5C01               	subwf	i2setPWM2duty@actuator,w,c
 14726  003362  0E01               	movlw	1
 14727  003364  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 14728  003366  A0D8               	btfss	status,0,c
 14729  003368  D004               	goto	i2l4753
 14730                           
 14731                           ;PWMConfig.h: 23: act = 800;
 14732  00336A  0E03               	movlw	3
 14733  00336C  6E06               	movwf	i2setPWM2duty@act+1,c
 14734  00336E  0E20               	movlw	32
 14735  003370  D00B               	goto	L14
 14736  003372                     i2l4753:
 14737                           
 14738                           ;PWMConfig.h: 24: else if(actuator < -400)
 14739  003372  AE02               	btfss	i2setPWM2duty@actuator+1,7,c
 14740  003374  D00B               	goto	i2l4757
 14741  003376  0E70               	movlw	112
 14742  003378  5C01               	subwf	i2setPWM2duty@actuator,w,c
 14743  00337A  0EFE               	movlw	254
 14744  00337C  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 14745  00337E  B0D8               	btfsc	status,0,c
 14746  003380  D005               	goto	i2l4757
 14747                           
 14748                           ;PWMConfig.h: 25: act = 0;
 14749  003382  0E00               	movlw	0
 14750  003384  6E06               	movwf	i2setPWM2duty@act+1,c
 14751  003386  0E00               	movlw	0
 14752  003388                     L14:
 14753  003388  6E05               	movwf	i2setPWM2duty@act,c
 14754  00338A  D006               	goto	i2l264
 14755  00338C                     i2l4757:
 14756                           
 14757                           ;PWMConfig.h: 26: else
 14758                           ;PWMConfig.h: 27: act = actuator + 400;
 14759  00338C  0E90               	movlw	144
 14760  00338E  2401               	addwf	i2setPWM2duty@actuator,w,c
 14761  003390  6E05               	movwf	i2setPWM2duty@act,c
 14762  003392  0E01               	movlw	1
 14763  003394  2002               	addwfc	i2setPWM2duty@actuator+1,w,c
 14764  003396  6E06               	movwf	i2setPWM2duty@act+1,c
 14765  003398                     i2l264:
 14766                           
 14767                           ;PWMConfig.h: 28: CCP2CONbits.DC2B = act;
 14768  003398  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 14769  00339C  3A03               	swapf	??i2_setPWM2duty,f,c
 14770  00339E  5066               	movf	3942,w,c	;volatile
 14771  0033A0  1803               	xorwf	??i2_setPWM2duty,w,c
 14772  0033A2  0BCF               	andlw	-49
 14773  0033A4  1803               	xorwf	??i2_setPWM2duty,w,c
 14774  0033A6  6E66               	movwf	3942,c	;volatile
 14775                           
 14776                           ;PWMConfig.h: 29: CCPR2L = act>>2;
 14777  0033A8  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 14778  0033AC  C006  F004         	movff	i2setPWM2duty@act+1,??i2_setPWM2duty+1
 14779  0033B0  3404               	rlcf	??i2_setPWM2duty+1,w,c
 14780  0033B2  3204               	rrcf	??i2_setPWM2duty+1,f,c
 14781  0033B4  3203               	rrcf	??i2_setPWM2duty,f,c
 14782  0033B6  3404               	rlcf	??i2_setPWM2duty+1,w,c
 14783  0033B8  3204               	rrcf	??i2_setPWM2duty+1,f,c
 14784  0033BA  3203               	rrcf	??i2_setPWM2duty,f,c
 14785  0033BC  5003               	movf	??i2_setPWM2duty,w,c
 14786  0033BE  6E67               	movwf	3943,c	;volatile
 14787  0033C0  0012               	return		;funcret
 14788  0033C2                     __end_ofi2_setPWM2duty:
 14789                           	opt stack 0
 14790                           pclatu	equ	0xFFB
 14791                           pclath	equ	0xFFA
 14792                           tblptru	equ	0xFF8
 14793                           tblptrh	equ	0xFF7
 14794                           tblptrl	equ	0xFF6
 14795                           tablat	equ	0xFF5
 14796                           prodh	equ	0xFF4
 14797                           prodl	equ	0xFF3
 14798                           intcon	equ	0xFF2
 14799                           postinc0	equ	0xFEE
 14800                           fsr0h	equ	0xFEA
 14801                           fsr0l	equ	0xFE9
 14802                           wreg	equ	0xFE8
 14803                           postdec1	equ	0xFE5
 14804                           fsr1h	equ	0xFE2
 14805                           fsr1l	equ	0xFE1
 14806                           bsr	equ	0xFE0
 14807                           indf2	equ	0xFDF
 14808                           postinc2	equ	0xFDE
 14809                           postdec2	equ	0xFDD
 14810                           fsr2h	equ	0xFDA
 14811                           fsr2l	equ	0xFD9
 14812                           status	equ	0xFD8
 14813                           pclatu	equ	0xFFB
 14814                           pclath	equ	0xFFA
 14815                           tblptru	equ	0xFF8
 14816                           tblptrh	equ	0xFF7
 14817                           tblptrl	equ	0xFF6
 14818                           tablat	equ	0xFF5
 14819                           prodh	equ	0xFF4
 14820                           prodl	equ	0xFF3
 14821                           intcon	equ	0xFF2
 14822                           postinc0	equ	0xFEE
 14823                           fsr0h	equ	0xFEA
 14824                           fsr0l	equ	0xFE9
 14825                           wreg	equ	0xFE8
 14826                           postdec1	equ	0xFE5
 14827                           fsr1h	equ	0xFE2
 14828                           fsr1l	equ	0xFE1
 14829                           bsr	equ	0xFE0
 14830                           indf2	equ	0xFDF
 14831                           postinc2	equ	0xFDE
 14832                           postdec2	equ	0xFDD
 14833                           fsr2h	equ	0xFDA
 14834                           fsr2l	equ	0xFD9
 14835                           status	equ	0xFD8
 14836                           
 14837                           	psect	rparam
 14838  0000                     pclatu	equ	0xFFB
 14839                           pclath	equ	0xFFA
 14840                           tblptru	equ	0xFF8
 14841                           tblptrh	equ	0xFF7
 14842                           tblptrl	equ	0xFF6
 14843                           tablat	equ	0xFF5
 14844                           prodh	equ	0xFF4
 14845                           prodl	equ	0xFF3
 14846                           intcon	equ	0xFF2
 14847                           postinc0	equ	0xFEE
 14848                           fsr0h	equ	0xFEA
 14849                           fsr0l	equ	0xFE9
 14850                           wreg	equ	0xFE8
 14851                           postdec1	equ	0xFE5
 14852                           fsr1h	equ	0xFE2
 14853                           fsr1l	equ	0xFE1
 14854                           bsr	equ	0xFE0
 14855                           indf2	equ	0xFDF
 14856                           postinc2	equ	0xFDE
 14857                           postdec2	equ	0xFDD
 14858                           fsr2h	equ	0xFDA
 14859                           fsr2l	equ	0xFD9
 14860                           status	equ	0xFD8
 14861                           
 14862                           	psect	temp
 14863  00004B                     btemp:
 14864                           	opt stack 0
 14865  00004B                     	ds	1
 14866  0000                     int$flags	set	btemp
 14867                           pclatu	equ	0xFFB
 14868                           pclath	equ	0xFFA
 14869                           tblptru	equ	0xFF8
 14870                           tblptrh	equ	0xFF7
 14871                           tblptrl	equ	0xFF6
 14872                           tablat	equ	0xFF5
 14873                           prodh	equ	0xFF4
 14874                           prodl	equ	0xFF3
 14875                           intcon	equ	0xFF2
 14876                           postinc0	equ	0xFEE
 14877                           fsr0h	equ	0xFEA
 14878                           fsr0l	equ	0xFE9
 14879                           wreg	equ	0xFE8
 14880                           postdec1	equ	0xFE5
 14881                           fsr1h	equ	0xFE2
 14882                           fsr1l	equ	0xFE1
 14883                           bsr	equ	0xFE0
 14884                           indf2	equ	0xFDF
 14885                           postinc2	equ	0xFDE
 14886                           postdec2	equ	0xFDD
 14887                           fsr2h	equ	0xFDA
 14888                           fsr2l	equ	0xFD9
 14889                           status	equ	0xFD8


Data Sizes:
    Strings     363
    Constant    144
    Data        48
    BSS         34
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     33      74
    BANK0           160    100     141
    BANK1           256     35      35
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(2) Largest target is 19
		 -> STR_21(CODE[17]), STR_20(CODE[13]), STR_19(CODE[17]), STR_18(CODE[18]), 
		 -> STR_17(CODE[17]), STR_16(CODE[18]), STR_15(CODE[17]), STR_14(CODE[18]), 
		 -> STR_13(CODE[18]), STR_12(CODE[18]), STR_11(CODE[17]), STR_10(CODE[17]), 
		 -> STR_9(CODE[17]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[17]), STR_4(CODE[18]), STR_3(CODE[19]), STR_2(CODE[17]), 
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    i1_putch->i1_lcd_putc
    i1_lcd_putc->i1_lcd_gotoxy
    i1_lcd_gotoxy->i1_lcd_send_byte
    i1_lcd_send_byte->i1_lcd_send_4bits
    i1_lcd_read_byte->i1_lcd_read_4bits

Critical Paths under _hp_isr in COMRAM

    _T2int->i2_setPWM2duty

Critical Paths under _main in BANK0

    _sysParamInit->_calcSysVars
    _calcSysVars->___flmul
    _lcd_init->_lcd_send_byte
    _drawPassWord->_printf
    _drawMenu->_printf
    _printf->___flsub
    _scale->___flmul
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_4bits
    _lcd_read_byte->_lcd_read_4bits
    _fround->___flmul
    ___flmul->___awdiv
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _PWM2Config->_setPWM2duty

Critical Paths under _isr in BANK0

    _UARTint->i1_putch

Critical Paths under _hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _drawPassWord->_printf
    _drawMenu->_printf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _hp_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _hp_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _hp_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _hp_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  119729
                       _EEPROMConfig
                         _PWM2Config
                         _UARTConfig
                        _clockConfig
                           _delay_ms
                         _drawScreen
                   _execCombinations
                    _interruptConfig
                           _ioConfig
                          _ioInitStt
                           _lcd_init
                      _longPressDOWN
                     _longPressENTER
                     _longPressRETRO
                        _longPressUP
                          _pressDOWN
                         _pressENTER
                         _pressRETRO
                            _pressUP
                        _releaseDOWN
                       _releaseENTER
                       _releaseRETRO
                          _releaseUP
                       _sysParamInit
 ---------------------------------------------------------------------------------
 (1) _sysParamInit                                         0     0      0    8936
                        _calcSysVars
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (2) _readEEPROM                                           1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _calcSysVars                                          4     4      0    8914
                                             57 BANK0      4     4      0
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    1817
                                             18 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (1) _releaseUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _releaseRETRO                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _releaseENTER                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _releaseDOWN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pressUP                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pressRETRO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pressENTER                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _pressDOWN                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _longPressUP                                          1     1      0       0
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _longPressRETRO                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _longPressENTER                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _longPressDOWN                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     6      0    1879
                                             26 BANK0      6     6      0
                     _lcd_send_4bits
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ioInitStt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ioConfig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _execCombinations                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawScreen                                           0     0      0  107884
                           _drawMenu
                       _drawPassWord
 ---------------------------------------------------------------------------------
 (2) _drawPassWord                                         0     0      0   53942
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawMenu                                             0     0      0   53942
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              45    35     10   51590
                                             98 BANK0      2     2      0
                                              0 BANK1     35    25     10
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4   11428
                                             57 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0    3848
                                             31 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             2     2      0    3817
                                             29 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    2352
                                             26 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1403
                                             23 BANK0      3     2      1
                      _lcd_read_byte
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       5     5      0     272
                                             18 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _lcd_read_byte                                        2     2      0     114
                                             20 BANK0      2     2      0
                     _lcd_read_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_read_4bits                                       2     2      0      46
                                             18 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4   11149
                                             57 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    6927
                                             32 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             24 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             18 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             18 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     630
                                             18 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     386
                                             18 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             31 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             18 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             66 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3697
                                             90 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3364
                                             70 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             18 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     728
                                             18 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _delay_ms                                             5     3      2     814
                                             18 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _clockConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _UARTConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2Config                                           0     0      0     216
                        _setPWM2duty
                           _t2config
 ---------------------------------------------------------------------------------
 (2) _t2config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPWM2duty                                          6     4      2     216
                                             18 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _EEPROMConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                17    17      0    1503
                                              1 BANK0     17    17      0
                            _UARTint
 ---------------------------------------------------------------------------------
 (11) _UARTint                                             0     0      0    1503
                            i1_putch
 ---------------------------------------------------------------------------------
 (12) i1_putch                                             1     1      0    1503
                                              0 BANK0      1     1      0
                         i1_lcd_putc
 ---------------------------------------------------------------------------------
 (13) i1_lcd_putc                                          2     2      0    1472
                                             31 COMRAM     2     2      0
                       i1_lcd_gotoxy
                    i1_lcd_send_byte
 ---------------------------------------------------------------------------------
 (14) i1_lcd_gotoxy                                        3     2      1     791
                                             28 COMRAM     3     2      1
                    i1_lcd_send_byte
 ---------------------------------------------------------------------------------
 (14) i1_lcd_send_byte                                     3     2      1     619
                                             25 COMRAM     3     2      1
                    i1_lcd_read_byte
                   i1_lcd_send_4bits
 ---------------------------------------------------------------------------------
 (15) i1_lcd_send_4bits                                    5     5      0     272
                                             20 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (15) i1_lcd_read_byte                                     2     2      0     114
                                             22 COMRAM     2     2      0
                   i1_lcd_read_4bits
 ---------------------------------------------------------------------------------
 (16) i1_lcd_read_4bits                                    2     2      0      46
                                             20 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 16
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (18) _hp_isr                                             14    14      0     140
                                              6 COMRAM    14    14      0
                              _T2int
 ---------------------------------------------------------------------------------
 (19) _T2int                                               0     0      0     140
                      i2_setPWM2duty
 ---------------------------------------------------------------------------------
 (20) i2_setPWM2duty                                       6     4      2     140
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 20
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMConfig
   _PWM2Config
     _setPWM2duty
     _t2config
   _UARTConfig
   _clockConfig
   _delay_ms
   _drawScreen
     _drawMenu
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawPassWord
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _execCombinations
   _interruptConfig
   _ioConfig
   _ioInitStt
   _lcd_init
     _lcd_send_4bits
     _lcd_send_byte
       _lcd_read_byte
         _lcd_read_4bits
       _lcd_send_4bits
   _longPressDOWN
   _longPressENTER
   _longPressRETRO
   _longPressUP
   _pressDOWN
   _pressENTER
   _pressRETRO
   _pressUP
   _releaseDOWN
   _releaseENTER
   _releaseRETRO
   _releaseUP
   _sysParamInit
     _calcSysVars
       ___fldiv
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _readEEPROM

 _isr (ROOT)
   _UARTint
     i1_putch
       i1_lcd_putc
         i1_lcd_gotoxy
           i1_lcd_send_byte
             i1_lcd_read_byte
               i1_lcd_read_4bits
             i1_lcd_send_4bits
         i1_lcd_send_byte
           i1_lcd_read_byte
             i1_lcd_read_4bits
           i1_lcd_send_4bits

 _hp_isr (ROOT)
   _T2int
     i2_setPWM2duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     23      23       6       13.7%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     64      8D       4       88.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     21      4A       1       78.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      FA       9        0.0%
DATA                 0      0      FA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 24 14:48:20 2016

             ___fldiv@aexp 008A               ___fldiv@bexp 0089               ___fldiv@sign 007E  
          ?_lcd_send_4bits 0001           i2setPWM2duty@act 0005                         l81 3908  
           ?_lcd_send_byte 0077               ___awdiv@sign 007D                         _ie 0049  
            _holdRETROcont 00E9                         _pi 002A                         bsr 000FE0  
      ___wmul@multiplicand 0074               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                        l242 36BC  
                      l322 39F6                        l264 3098                        l505 1D08  
                      l472 1B24                        l481 1BB0                        l484 1BD0  
                      l468 1ADA                        l493 1C5C                        l469 1B04  
                      l592 05DC                        l819 2968                        l923 2650  
                      l916 258C                        l829 27A2                        l917 25D0  
                      l993 2E48               __CFG_CPB$OFF 000000                        _PR2 000FBB  
             __CFG_CPD$OFF 000000                        _isr 0018    __end_of_interruptConfig 3A66  
             ___awmod@sign 0077                        prod 000FF3                        wreg 000FE8  
               _TXSTA1bits 000FAC               __CFG_IESO$ON 000000               ___flmul@aexp 008D  
             ___flmul@bexp 0092               ___flmul@sign 008C               ___flmul@temp 0097  
             ___flmul@prod 0093                 i1_lcd_putc 33C2               __CFG_LVP$OFF 000000  
             ___fltol@exp1 00AB                       l1003 3026                       l1104 10FC  
                     l1113 1190                       l1210 2460                       l1202 23EC  
                     l1143 1924                       l1152 195C                       l1209 2448  
                     l1154 19CA                       l1146 18CC                       l1180 15A0  
                     l1173 1304                       l1190 16B2                       l1182 160E  
                     l1087 0F88                       l1088 0F7C                       l1089 0F48  
                     l1195 2340                       l5003 393A                       l5031 3790  
                     l6011 2538                       l5027 377E                       l6101 291E  
                     l6005 24FE                       l6111 294E                       l6113 295E  
                     l6105 2932                       l6041 2606                       l6131 26B0  
                     l6211 2DE2                       l6051 2636                       l5403 313C  
                     l4515 1822                       l4507 17F4                       l6061 2818  
                     l6053 2646                       l6045 261A                       l6301 00EA  
                     l4533 18D8                       l4525 18A0                       l6135 26FE  
                     l6207 2DCC                       l6231 2FD0                       l5415 36E4  
                     l5511 3228                       l5503 31EC                       l4551 1970  
                     l4471 1738                       l4633 3062                       l6145 27EE  
                     l6153 37BE                       l6209 2DDC                       l6081 2892  
                     l5513 3236                       l5505 31FA                       l6321 0184  
                     l6305 00F2                       l4561 19C4                       l4545 1946  
                     l4465 1714                       l6139 2750                       l5611 0F62  
                     l5531 0DEA                       l6163 2BFA                       l6219 2E36  
                     l6235 3014                       l6227 2FBA                       l6251 2378  
                     l6067 283E                       l5435 38B6                       l6411 05BE  
                     l6403 058E                       l6307 011E                       l4571 1A1A  
                     l4539 1920                       l4491 1796                       l4475 1742  
                     l4637 3084                       l5701 11F8                       l5525 0DC6  
                     l6229 2FCA                       l6253 2380                       l6245 2350  
                     l5509 321A                       l5517 3242                       l6421 0604  
                     l6405 059C                       l4485 1772                       l5711 122A  
                     l5615 0F6C                       l5543 0E20                       l5535 0DF4  
                     l6191 2CA8                       l6183 2C7C                       l6263 242A  
                     l6255 2390                       l5391 3100                       l6431 0742  
                     l6415 05E0                       l6351 02D4                       l4575 1A48  
                     l4495 17A0                       l5705 121A                       l5633 0FEA  
                     l5625 0FAC                       l5609 0F5C                       l6193 2CB2  
                     l6265 243A                       l6257 23CE                       l6089 28E6  
                     l5385 30E2                       l6433 0750                       l6425 0666  
                     l6409 05AA                       l6361 0378                       l6353 0310  
                     l6345 028C                       l6337 0208                       l6521 20FE  
                     l6513 20BC                       l6505 206A                       l4585 1A8E  
                     l4577 1A5C                       l4907 36A4                       l5635 0FF0  
                     l5643 100C                       l5555 0E58                       l6179 2C68  
                     l5803 158A                       l6355 0326                       l6523 2110  
                     l6515 20CE                       l6603 2ECE                       l4587 1A92  
                     l4579 1A7E                       l5717 123E                       l5709 1226  
                     l5661 112E                       l5653 10DC                       l5549 0E34  
                     l6197 2CCE                       l6189 2C98                       l6277 24B2  
                     l5733 1292                       l5397 311E                       l6461 0806  
                     l6445 079A                       l6437 075E                       l6381 0492  
                     l6365 03AA                       l6349 02BE                       l6293 00C4  
                     l6533 2158                       l6541 21BE                       l5671 1150  
                     l5639 0FFA                       l5567 0E8C                       l5559 0E62  
                     l5911 2F3C                       l5903 2F18                       l5751 12EC  
                     l5735 1298                       l5727 126E                       l6463 0816  
                     l6375 0414                       l6439 076C                       l6543 21D6  
                     l6535 217A                       l6519 20EC                       l6527 2122  
                     l6607 2ED8                       l5913 2F48                       l5833 1684  
                     l5809 15B4                       l5761 132C                       l5753 12F2  
                     l5745 12C8                       l5737 12AA                       l6457 07E0  
                     l6393 04D8                       l6297 00D8                       l6561 2288  
                     l6537 219C                       l6529 213A                       l5667 1144  
                     l5915 2F4E                       l5923 2F80                       l5907 2F28  
                     l5843 16D2                       l5835 1698                       l5819 1608  
                     l6467 08A0                       l6379 048C                       l6299 00E4  
                     l6555 224A                       ?_isr 0001                       l5677 1164  
                     l5597 0EC8                       l5845 16DC                       l5829 165E  
                     l5757 1318                       l6397 0500                       l6469 08B6  
                     l6549 220C                       l6821 1B34                       l5687 118A  
                     l5679 116A                       l5871 2D30                       l5927 2F94  
                     l5919 2F72                       l4991 31A0                       l6911 1CBA  
                     l5697 11E6                       l5873 2D3C                       l5865 2D12  
                     l6569 22C6                       l6681 397C                       l6585 2E88  
                     l4985 3186                       l4969 38E8                       l6921 1CE4  
                     l6841 1B7E                       l6833 1B62                       l5891 2D94  
                     l5883 2D72                       l5875 2D42                       l5859 2CFC  
                     l5971 0A54                       l6675 3970                       l4979 316C  
                     l6907 1CAE                       l6843 1B8C                       l5957 2016  
                     l5949 1F2A                       l5981 0B46                       l6677 3976  
                     l6597 2EB0                       l6589 2E92                       l4989 3198  
                     l6917 1CD0                       l6829 1B56                       l5887 2D80  
                     l6951 1D66                       l6919 1CD6                       l6871 1C0E  
                     l6839 1B78                       l5977 0B1A                       l6937 1D28  
                     l6961 1D90                       l6881 1C38                       l5995 0D7C  
                     l6947 1D5A                       l6939 1D38                       l6867 1C02  
                     l6859 1BE0                       l5989 0CB6                       l6957 1D7C  
                     l6877 1C24                       l6959 1D82                       l6879 1C2A  
                     l6897 1C7C                       l6899 1C8C                       STR_1 7EEE  
                     STR_2 7FE0                       STR_3 7E93                       STR_4 7EA6  
                     STR_5 7F47                       STR_6 7F36                       STR_7 7F58  
                     STR_8 7F00                       STR_9 7F9C               printf@tmpval 011A  
                     u6005 3146                       u6006 3148                       u6025 36FC  
                     u6026 36FE                       u6250 0F12                       u6260 0F2A  
                     u8100 1C94                       u6270 0F2C                       u8210 1D40  
                     u8106 1C96                       u7180 2C1A                       u5900 3280  
                     u6710 1672                       u6630 152C                       u5910 329A  
                     u5920 32BA                       u7600 05D4                       u8216 1D42  
                     u7185 2C0E                       u6635 1520                       u8307 320E  
                     u5908 3284                       u7700 209A                       u4980 1A2E  
                     u8317 3150                       u5918 329E                       u8327 36AC  
                     u5928 32BE                       u5945 30EC                       u5890 326E  
                     u5946 30EE                       u5965 310A                       u8277 2E78  
                     u5966 310C                       u6951 24DA                       u8287 2EA0  
                     u5896 3270                       u5985 3128                       u8297 2EBE  
                     u5986 312A                       u6971 2514                       u7880 1B3C  
                     u7990 1BE8                       u7886 1B3E                       u7996 1BEA  
            __CFG_FCMEN$ON 000000                lcd_putc@cha 007E            __end_of_UARTint 3A6E  
                     _main 1AB6           lcd_read_byte@low 0074                       fsr0h 000FEA  
                     fsr1h 000FE2                       fsr0l 000FE9                       fsr2h 000FDA  
                     fsr1l 000FE1                       indf2 000FDF                       fsr2l 000FD9  
                     btemp 004B              __CFG_BORV$285 000000             ??_drawPassWord 00C4  
                     pclat 000FFA          i1lcd_read_4bits@n 0016                       prodh 000FF4  
                     prodl 000FF3                       start 00B2            ?_longPressENTER 0001  
          ___fldiv@new_exp 0083       __size_of_calcSysVars 014E            ?_longPressRETRO 0001  
          __end_ofi1_putch 3A1A      __size_of_sysParamInit 010C       __end_of_EEPROMConfig 3A74  
             ___param_bank 000010                      ??_isr 0061            i1_lcd_read_byte 3720  
             _BAUDCON1bits 000FB8              ___fltol@sign1 00AA            __end_of___fladd 1250  
                    ?_main 0001      __size_ofi1_lcd_gotoxy 0022            __end_of___fldiv 1AB6  
          __end_of___awdiv 2D9E            __end_of___flneg 37D0                      _EEADR 000FA9  
                    STR_10 7F8B                      STR_11 7FCF                      STR_20 7FF1  
                    STR_12 7F12                      STR_21 7FAD                      STR_13 7F24  
                    STR_14 7ECA                      STR_15 7F69                      STR_16 7EB8  
                    STR_17 7FBE                      STR_18 7EDC                      STR_19 7F7A  
          __end_of___awmod 2F9E            __end_of___flmul 16F6            __end_of___flsub 3652  
          __end_of___fltol 2CE0            __end_of___lldiv 2E5A            ___awdiv@divisor 007A  
            lcd_init@F7556 0036            __end_of___llmod 3038                      i1l465 006A  
                    i2l264 3398                      i2l461 3316                ?_UARTConfig 0001  
          ___awdiv@counter 007C                      _T2int 39D6                ?_PWM2Config 0001  
            __CFG_WRT0$OFF 000000            i1_lcd_send_byte 383E              __CFG_WRT1$OFF 000000  
            __CFG_WRT2$OFF 000000              __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000  
           __CFG_EBTR1$OFF 000000             __CFG_EBTR2$OFF 000000                      _fData 00DA  
           __CFG_EBTR3$OFF 000000              __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000  
            __CFG_WRTD$OFF 000000             __CFG_EBTRB$OFF 000000            __end_of_dpowers 7E93  
        lcd_read_byte@high 0075                      _scale 08D6         __CFG_MCLRE$EXTMCLR 000000  
                    _putch 39FE                      tablat 000FF5            __end_of_pressUP 3900  
             _sysParamInit 2AC8               ?_setPWM2duty 0072                      status 000FD8  
          ??_lcd_read_byte 0074             __CFG_HFOFST$ON 000000               ?_longPressUP 0001  
          __initialization 349A               i1_lcd_gotoxy 394C               __end_of_main 1D96  
          ??_lcd_send_byte 0078                 i1putch@val 0060           i1_lcd_read_4bits 3566  
            lcd_gotoxy@pos 007B               ?_releaseDOWN 0001                     ??_main 00C4  
            __activetblptr 000002             __CFG_PLLCFG$ON 000000                     ?_T2int 0001  
     __size_of__tdiv_to_l_ 019E           ?_interruptConfig 0001       __size_of_clockConfig 0028  
              ?i1_lcd_putc 0001           __end_of_t2config 39C0                  ??_UARTint 0022  
           setPWM2duty@act 0076           ___llmod@dividend 007F                     ?_scale 0099  
                   _EEDATA 000FA8                     _CCPR2L 000F67                     _EECON2 000FA7  
         ___awdiv@dividend 0078                     ?_putch 0001           i1_lcd_send_4bits 342E  
                   i1l5473 343C                     i1l5491 347E                     i1l5485 3468  
                   i1l6285 3958                     i1l5479 3452                     i1l6481 33FA  
                   i1l6473 33C6                     i1l6483 3406                     i1l6475 33D2  
                   i1l5933 3842                     i1l6479 33EE                     i1l6487 3412  
                   i2l4753 3372                     i2l4915 39DE                     i2l4757 338C  
                   _RCREG1 000FAE                  ??i1_putch 0022                     _SPBRG1 000FAF  
                   _TXREG1 000FAD           __end_of___xxtofl 24C4           __end_of_delay_ms 36DE  
                   _UPisLP 0047           __end_of_ioConfig 38A6        __size_of_UARTConfig 0038  
  __end_ofi1_lcd_read_byte 375E             __CFG_PWRTEN$ON 000000             __CFG_XINST$OFF 000000  
            _DOWNsecurLock 00E2        __size_of_PWM2Config 0066           __end_of__powers_ 7E6B  
             _CCPTMRS0bits 000F49           __end_of_drawMenu 22F6           __end_of_lcd_init 2EFC  
        i1lcd_send_4bits@n 0019                     ___flge 2662           __end_of_lcd_putc 3260  
                ??___fladd 00AE                     ___wmul 3808                  ??___fldiv 007A  
                ??___awdiv 007C                  ??___flneg 0076             __CFG_STVREN$ON 000000  
                ??___awmod 0076                  ??___flmul 0088                  ??___flsub 00C2  
                ??___fltol 00A6                  ??___lldiv 007A                  ??___llmod 0087  
                   _contra 0022                     _hp_isr 0008                     _fround 1D96  
  __end_ofi1_lcd_send_byte 3874                     clear_0 34E0                     clear_1 34EC  
         ___awdiv@quotient 007E            ___awmod@divisor 0074            ___awmod@counter 0076  
                   _printf 00B6        _lcd_send_4bits$1593 0072        _lcd_send_4bits$1594 0073  
      _lcd_send_4bits$1595 0074        _lcd_send_4bits$1596 0075           ??_lcd_read_4bits 0072  
     __end_of_drawPassWord 360A               __pdataCOMRAM 0022               __mediumconst 7E02  
                   tblptrh 000FF7                     tblptrl 000FF6                     tblptru 000FF8  
                ??_pressUP 0072         i1lcd_read_byte@low 0017  __size_of_execCombinations 0002  
               ___flge@ff1 0072                 ___flge@ff2 0076               ___xxtofl@arg 007C  
             ___xxtofl@exp 007B               ___xxtofl@val 0072                 __accesstop 0060  
  __end_of__initialization 34F2            __CFG_PBADEN$OFF 000000      __size_of_EEPROMConfig 0006  
               ___flneg@f1 0072                _UPsecurLock 00E5              ___rparam_used 000001  
               ___fltol@f1 00A2           ??_lcd_send_4bits 0072              __end_of_T2int 39EC  
           __pcstackCOMRAM 0001               __pidataBANK0 39C0        __size_ofi1_lcd_putc 006C  
            __end_of_scale 0DA8              __end_of_putch 3A0C               _actualScreen 00E6  
           lcd_gotoxy@fila 007A                 __div_to_l_ 27F2                    ??_T2int 0007  
          i1lcd_gotoxy@pos 001E         __size_of_ioInitStt 0008              ?_releaseENTER 0001  
            ?_releaseRETRO 0001               _EEPROMConfig 3A6E          lcd_gotoxy@address 007C  
          __div_to_l_@exp1 007F            __div_to_l_@cntr 007E                    ??_scale 009D  
          __div_to_l_@quot 007A                    ??_putch 007F           ??_longPressENTER 0072  
               __pbssBANK0 00DA           ??_longPressRETRO 0072              __div_to_l_@f1 0072  
            __div_to_l_@f2 0076       __size_of_setPWM2duty 0094             _RETROsecurLock 00E4  
         ?i1_lcd_read_byte 0001         __CFG_CCP2MX$PORTC1 000000             lcd_send_byte@n 0077  
                  ?___flge 0072                    ?___wmul 0072         __size_of_releaseUP 000C  
       __CFG_CCP3MX$PORTB5 000000       __size_of_longPressUP 008C                  ?_t2config 0001  
                  ?_hp_isr 0001                    ?_fround 0099           ?i1_lcd_send_byte 001A  
                  ?_printf 0100         __size_of_pressDOWN 0024      i2setPWM2duty@actuator 0001  
             ??_UARTConfig 0072       __size_of_releaseDOWN 000C             ??_releaseENTER 0072  
   __size_ofi2_setPWM2duty 0070             ??_releaseRETRO 0072               ??_PWM2Config 0078  
                ?___xxtofl 0072            __CFG_WDTEN$SWON 000000                  ?_delay_ms 0072  
               _drawScreen 396E                 _lcd_gotoxy 38A6                  ?_ioConfig 0001  
   __size_of_longPressDOWN 0002                    _SPBRGH1 000FB0                    _UARTint 3A66  
                ?_drawMenu 0001                  ?_lcd_init 0001               _densidadMasa 00C4  
                  _i16Data 00DE                  ?_lcd_putc 0001   __end_ofi1_lcd_read_4bits 35BC  
   i1lcd_send_byte@address 001C                    i1_putch 3A0C              ??_calcSysVars 0099  
               _holdUPcont 00EA                 _readEEPROM 39EC          __end_of_ioInitStt 3A5E  
        __end_of__npowers_ 7E37                    __Hparam 0000                 _scale$2762 009D  
                  __Lparam 0000         __end_of_UARTConfig 3808         __end_of_PWM2Config 3566  
          __size_of___flge 0190                    ___fladd 0DA8                    ___fldiv 16F6  
                  ___awdiv 2CE0                    ___flneg 3798                    ___awmod 2EFC  
                  ___flmul 1250                    ___flsub 360A                    ___fltol 2BD4  
                  ___lldiv 2D9E            __size_of___wmul 0036                    ___llmod 2F9E  
               ??_t2config 0072                    _advMode 0048      __size_of_drawPassWord 004E  
 __end_ofi1_lcd_send_4bits 349A            __size_of_hp_isr 334A                    __pcinit 349A  
          __size_of_fround 02D2                    __ramtop 0600                    __ptext0 1AB6  
                  __ptext1 2AC8                    __ptext2 39EC                    __ptext3 297A  
                  __ptext4 16F6                    __ptext5 3A1A                    __ptext6 3A26  
                  __ptext7 3A32                    __ptext8 3A3E                    __ptext9 38D6  
          __size_of_printf 0820                ?__div_to_l_ 0072                    _dpowers 7E6B  
                _T2CONbits 000FBA               __size_of_isr 009A                 ??___xxtofl 0076  
         ___awmod@dividend 0072                 ??_delay_ms 0074               ??i1_lcd_putc 0020  
               ??_ioConfig 0072                    _pressUP 38D6                  _ENTERisLP 0045  
                  _proceso 00E0                 ??_drawMenu 00C4                 ??_lcd_init 007A  
        __end_of_releaseUP 3A26             __pintcode_body 32DA                 ??_lcd_putc 007D  
     end_of_initialization 34F2           _execCombinations 3A7A       lcd_send_byte@address 0079  
            __Lmediumconst 7E02                    int_func 32DA              i2_setPWM2duty 3352  
        __end_of_pressDOWN 394C      __end_of_lcd_read_byte 3698            ___lldiv@divisor 0076  
             _drawPassWord 35BC            ___lldiv@counter 007E            lcd_read_4bits@n 0073  
            _longPressDOWN 3A78        __end_of_calcSysVars 2AC8              readEEPROM@adr 0072  
                  printf@c 0122                    printf@f 0100                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
      i1lcd_read_byte@high 0018                 _pressENTER 3A76         __end_ofi1_lcd_putc 342E  
               _pressRETRO 3A74                  _RETROisLP 0046             __tdiv_to_l_@f1 0072  
           __tdiv_to_l_@f2 0076      __end_of_lcd_send_byte 3720              ??__tdiv_to_l_ 007A  
                _PORTAbits 000F80                  _PORTBbits 000F81              ??_clockConfig 0072  
             _holdDOWNcont 00E7                ___fladd@grs 00B9              ___xxtofl@sign 007A  
                _TRISAbits 000F92                  _TRISBbits 000F93                  _TRISCbits 000F94  
              ?_drawScreen 0001                ?_lcd_gotoxy 007A                ___fldiv@grs 0085  
              ___fldiv@rem 007F   __size_of_interruptConfig 0008                ___flmul@grs 008E  
           ?i2_setPWM2duty 0001                ?_readEEPROM 0001                _CCP2CONbits 000F66  
     __end_of_releaseENTER 3A3E        __size_of__div_to_l_ 0188       __end_of_releaseRETRO 3A32  
           ?_longPressDOWN 0001                _ECCP2ASbits 000F64             __end_of___flge 27F2  
           __end_of___wmul 383E              __pidataCOMRAM 398E             __end_of_hp_isr 3352  
           __end_of_fround 2068        setPWM2duty@actuator 0072             __end_of_printf 08D6  
      start_initialization 349A        __end_of__tdiv_to_l_ 2662                __end_of_isr 00B2  
      __end_of_clockConfig 3928           i1lcd_gotoxy@fila 001D                _calcSysVars 297A  
            i1lcd_putc@cha 0021            ___llmod@divisor 0083            ___llmod@counter 0087  
             _lastSttENTER 00D7               _lastSttRETRO 00D8                   ??___flge 007A  
      __size_of_drawScreen 0020        __size_of_lcd_gotoxy 0030                   ??___wmul 0076  
              ?_pressENTER 0001                ?_pressRETRO 0001                __pdataBANK0 00C4  
          lcd_send_4bits@n 0076                   ??_hp_isr 0007                   ??_fround 009D  
                 ??_printf 00C2          __size_of_t2config 0018                  ___fladd@a 00AA  
                ___fladd@b 00A6                 fround@prec 00A5        __size_of_readEEPROM 0012  
                ___fldiv@a 0076                  ___fldiv@b 0072                  ___flmul@a 0084  
                ___flmul@b 0080                __pbssCOMRAM 003C                  ___flsub@a 00BE  
                ___flsub@b 00BA           i1lcd_send_byte@n 001A              __pcstackBANK0 0060  
            __pcstackBANK1 0100                  _calFactor 003C          __size_of___xxtofl 01CE  
                 ?_UARTint 0001          __size_of_delay_ms 0046          __size_of_ioConfig 0032  
          ??i2_setPWM2duty 0003          ?i1_lcd_read_4bits 0001              ?_sysParamInit 0001  
  __size_of_lcd_read_4bits 007A              ??_setPWM2duty 0074                   ?i1_putch 0001  
        __size_of_drawMenu 028E          __size_of_lcd_init 00A2          __size_of_lcd_putc 007A  
       ??i1_lcd_read_4bits 0015            ??_longPressDOWN 0072              ??_longPressUP 0072  
        ??_interruptConfig 0072              ?i1_lcd_gotoxy 001D        i1lcd_gotoxy@address 001F  
                __pintcode 0008              __pmediumconst 7E02                   ?___fladd 00A6  
                 ?___fldiv 0072                   ?___awdiv 0078                   ?___flneg 0072  
                 ?___awmod 0072                   ?___flmul 0080                   ?___flsub 00BA  
                 ?___fltol 00A2                  _ioInitStt 3A56                   ?___lldiv 0072  
                 ?___llmod 007F                  __npowers_ 7E03   __end_of_execCombinations 3A7C  
            ??_releaseDOWN 0072                __pintcodelo 0018          ?i1_lcd_send_4bits 0001  
 __size_ofi1_lcd_read_byte 003E           __CFG_PRICLKEN$ON 000000                __tdiv_to_l_ 24C4  
  __size_of_lcd_send_4bits 008E      i1_lcd_send_4bits$1593 0015      i1_lcd_send_4bits$1594 0016  
    i1_lcd_send_4bits$1595 0017      i1_lcd_send_4bits$1596 0018               ??__div_to_l_ 007A  
       ??i1_lcd_send_4bits 0015                _clockConfig 3900             __size_of_T2int 0016  
                _lastSttUP 00D9                   ?_pressUP 0001   __size_ofi1_lcd_send_byte 0036  
           __size_of_scale 04D2             ??_sysParamInit 009D             __size_of_putch 000E  
      __size_of_pressENTER 0002      __size_of_releaseENTER 000C        __size_of_pressRETRO 0002  
    __size_of_releaseRETRO 000C              _tempNumCortes 003A             ___wmul@product 0076  
                 _LATBbits 000F8A                   _LATCbits 000F8B                  _releaseUP 3A1A  
  lcd_init@LCD_INIT_STRING 007B                  delay_ms@i 0075                   _DOWNisLP 0044  
                 _IPR1bits 000F9F                   _PIE1bits 000F9D                  _numCortes 00D4  
                 i1u603_20 3572                   i1u611_25 345A                   i1u603_26 3574  
                 i1u611_26 345C                   i1u604_20 3580             ??i1_lcd_gotoxy 001E  
                 i1u605_20 3592                   i1u604_28 3582                   i1u613_25 3470  
                 i1u613_26 3472                   i1u606_20 35A8                   i1u605_28 3594  
                 i1u606_28 35AA                   i1u615_25 3486                   i1u615_26 3488  
                 i1u609_25 3444                   i1u609_26 3446                   i1u833_27 33E2  
                 _PIR1bits 000F9E         __end_of__div_to_l_ 297A                   i1u834_27 3490  
                 i1u687_25 3854                   i1u687_26 3856        __end_of_setPWM2duty 30CC  
                 _RCONbits 000FD0    __size_of_longPressENTER 003A           __CFG_WDTPS$32768 000000  
                _pressDOWN 3928    __size_of_longPressRETRO 000C                 ?_ioInitStt 0001  
      __end_of_longPressUP 31E6          ___wmul@multiplier 0072                  lcd_init@i 007F  
               printf@flag 0110                 printf@fval 011E                 printf@prec 0112  
              _tVarProceso 00EC               _releaseENTER 3A32        __end_of_releaseDOWN 3A4A  
             ??_drawScreen 00C4               _releaseRETRO 3A26               ??_lcd_gotoxy 007B  
                copy_data0 34AE                  copy_data1 34CE           __size_of_UARTint 0008  
             ??_readEEPROM 0072                 ?_releaseUP 0001           __size_ofi1_putch 000E  
                 _m3Xcorte 0026                 _EECON1bits 000FA6                   __Hrparam 0000  
              _lastSttDOWN 00D6                   __Lrparam 0000         __CFG_BOREN$SBORDIS 000000  
               ?_pressDOWN 0001          __CFG_P2BMX$PORTC0 000000         __end_of_drawScreen 398E  
       __end_of_lcd_gotoxy 38D6                   _t2config 39A8           __size_of___fladd 04A8  
         __size_of___fldiv 03C0           __size_of___awdiv 00BE           __size_of___flneg 0038  
         __size_of___awmod 00A2           __size_of___flmul 04A6           __size_of___flsub 0048  
         __size_of___fltol 010C           __size_of___lldiv 00BC           __size_of___llmod 009A  
              _fround$2760 00A1                _fround$2761 009D                 _ANSELAbits 000F38  
               _ANSELCbits 000F3A                _menuSection 00EB                   ___xxtofl 22F6  
       __end_of_readEEPROM 39FE                   _diamTubo 00C8     __size_of_lcd_read_byte 0046  
                 _delay_ms 3698              ?_EEPROMConfig 0001                   _ioConfig 3874  
        ??i1_lcd_read_byte 0017                   __ptext10 3A74                   __ptext11 3A76  
                 __ptext20 3A5E                   __ptext12 3928                   __ptext21 3A7A  
                 __ptext13 315A                   __ptext30 36DE                   __ptext22 396E  
                 __ptext14 3A4A                   __ptext31 30CC                   __ptext23 35BC  
                 __ptext15 375E                   __ptext40 22F6                   __ptext32 3652  
                 __ptext24 2068                   __ptext16 3A78                   __ptext41 3808  
                 __ptext33 3260                   __ptext25 00B6                   __ptext17 2E5A  
                 __ptext50 3900                   __ptext42 2F9E                   __ptext34 1D96  
                 __ptext26 08D6                   __ptext18 3A56                   __ptext51 37D0  
                 __ptext43 2D9E                   __ptext35 1250                   __ptext27 39FE  
                 __ptext19 3874                   __ptext60 394C                   __ptext52 3500  
                 __ptext44 2BD4                   __ptext36 2EFC                   __ptext28 31E6  
                 __ptext61 383E                   __ptext53 39A8                   __ptext45 360A  
                 __ptext37 2CE0                   __ptext29 38A6                   __ptext62 342E  
                 __ptext54 3038                   __ptext46 0DA8                   __ptext38 24C4  
                 __ptext63 3720                   __ptext55 3A6E                   __ptext47 3798  
                 __ptext39 27F2                   __ptext64 3566                   __ptext48 2662  
                 __ptext57 3A66                   __ptext49 3698                   __ptext66 39D6  
                 __ptext58 3A0C                   __ptext67 3352                   __ptext59 33C2  
                 _kgXcorte 00CC                   __powers_ 7E37           __size_of_pressUP 002A  
                 _drawMenu 2068                   _lcd_init 2E5A                   _lcd_putc 31E6  
              _OSCCON2bits 000FD2             _lcd_read_4bits 3260     __size_of_lcd_send_byte 0042  
              _setPWM2duty 3038               ?_calcSysVars 0001          ??i1_lcd_send_byte 001B  
            __size_of_main 02E0            calcSysVars@temp 0099                _passSection 004A  
                 _tiXcorte 0032                _longPressUP 315A               _PSTR2CONbits 000F63  
             ??_pressENTER 0072                   int$flags 004B                ??_ioInitStt 0072  
             ??_pressRETRO 0072                  printf@exp 0118                  printf@val 0114  
     __end_of_sysParamInit 2BD4                _releaseDOWN 3A3E             _lcd_send_4bits 30CC  
              _introducido 0040                delay_ms@del 0072              _velocidadMasa 00D0  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2             ??_EEPROMConfig 0072  
              _PWM2CONbits 000F65       __end_ofi1_lcd_gotoxy 396E               _tempkgXcorte 002E  
                 scale@scl 00A1     __end_of_lcd_read_4bits 32DA            _interruptConfig 3A5E  
                 intlevel1 0000                   intlevel2 0000           __tdiv_to_l_@exp1 0082  
         __tdiv_to_l_@cntr 0081         __end_of_pressENTER 3A78           __tdiv_to_l_@quot 007D  
       __end_of_pressRETRO 3A76           ___lldiv@dividend 0072                ??_releaseUP 0072  
               _RCSTA1bits 000FAB                 _OSCCONbits 000FD3              _lcd_read_byte 3652  
           _longPressENTER 375E             _longPressRETRO 3A4A                ??_pressDOWN 0072  
                 printf@ap 010E     __end_of_lcd_send_4bits 315A  __size_ofi1_lcd_read_4bits 0056  
                 putch@val 007F          ?_execCombinations 0001              _lcd_send_byte 36DE  
             ?__tdiv_to_l_ 0072                _printf$2763 010A         ??_execCombinations 0072  
             ?_clockConfig 0001                 _UARTConfig 37D0           ___lldiv@quotient 007A  
               _PWM2Config 3500          __CFG_T3CMX$PORTC0 000000                 _WDTCONbits 000FD1  
            _holdENTERcont 00E8            ?_lcd_read_4bits 0001              ___fladd@signs 00B6  
__size_ofi1_lcd_send_4bits 006C             _ENTERsecurLock 00E3               ___fladd@aexp 00B7  
             ___fladd@bexp 00B8      __end_ofi2_setPWM2duty 33C2          __CFG_FOSC$INTIO67 000000  
   __end_of_longPressENTER 3798              ?_drawPassWord 0001             ?_lcd_read_byte 0001  
   __end_of_longPressRETRO 3A56      __end_of_longPressDOWN 3A7A  
