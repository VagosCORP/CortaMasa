

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Sun Nov 06 12:58:40 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	text84,global,reloc=2,class=CODE,delta=1
   104                           	psect	text85,global,reloc=2,class=CODE,delta=1
   105                           	psect	text86,global,reloc=2,class=CODE,delta=1
   106                           	psect	text87,global,reloc=2,class=CODE,delta=1
   107                           	psect	text88,global,reloc=2,class=CODE,delta=1
   108                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   109                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   110                           	psect	text90,global,reloc=2,class=CODE,delta=1
   111                           	psect	text91,global,reloc=2,class=CODE,delta=1
   112                           	psect	text92,global,reloc=2,class=CODE,delta=1
   113                           	psect	text93,global,reloc=2,class=CODE,delta=1
   114                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   115                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   116                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   117  0000                     
   118                           	psect	idataCOMRAM
   119  00605A                     __pidataCOMRAM:
   120                           	opt stack 0
   121                           
   122                           ;initializer for _timeDOWN
   123  00605A  03E8               	dw	1000
   124  00605C  0000               	dw	0
   125                           
   126                           ;initializer for _timsXcorte
   127  00605E  4000               	dw	16384
   128  006060  461C               	dw	17948
   129                           
   130                           ;initializer for lcd_init@F7567
   131  006062  28                 	db	40
   132  006063  0C                 	db	12
   133  006064  01                 	db	1
   134  006065  06                 	db	6
   135                           
   136                           ;initializer for _tempNumCortes
   137  006066  0001               	dw	1
   138                           
   139                           	psect	idataBANK0
   140  006068                     __pidataBANK0:
   141                           	opt stack 0
   142                           
   143                           ;initializer for _tiXcorte
   144  006068  0000               	dw	0
   145  00606A  4120               	dw	16672
   146                           
   147                           ;initializer for _velocidadMasa
   148  00606C  CCCD               	dw	52429
   149  00606E  3E4C               	dw	15948
   150                           
   151                           ;initializer for _numCortes
   152  006070  0005               	dw	5
   153                           
   154                           ;initializer for _lastSttDOWN
   155  006072  01                 	db	1
   156                           
   157                           ;initializer for _lastSttENTER
   158  006073  01                 	db	1
   159                           
   160                           ;initializer for _lastSttRETRO
   161  006074  01                 	db	1
   162                           
   163                           ;initializer for _lastSttUP
   164  006075  01                 	db	1
   165                           
   166                           	psect	idataBANK1
   167  005F04                     __pidataBANK1:
   168                           	opt stack 0
   169                           
   170                           ;initializer for _exp10
   171  005F04  86A0               	dw	34464
   172  005F06  0001               	dw	1
   173  005F08  2710               	dw	10000
   174  005F0A  0000               	dw	0
   175  005F0C  03E8               	dw	1000
   176  005F0E  0000               	dw	0
   177  005F10  0064               	dw	100
   178  005F12  0000               	dw	0
   179  005F14  000A               	dw	10
   180  005F16  0000               	dw	0
   181  005F18  0001               	dw	1
   182  005F1A  0000               	dw	0
   183                           
   184                           ;initializer for _diamTubo
   185  005F1C  0000               	dw	0
   186  005F1E  41A0               	dw	16800
   187                           
   188                           ;initializer for _kgXcorte
   189  005F20  0000               	dw	0
   190  005F22  3F80               	dw	16256
   191                           
   192                           ;initializer for _pi
   193  005F24  0FDB               	dw	4059
   194  005F26  4049               	dw	16457
   195                           
   196                           ;initializer for _tempkgXcorte
   197  005F28  CCCD               	dw	52429
   198  005F2A  3DCC               	dw	15820
   199                           
   200                           ;initializer for _chanValSection
   201  005F2C  05                 	db	5
   202                           
   203                           ;initializer for _flech
   204  005F2D  7E                 	db	126
   205                           
   206                           	psect	mediumconst
   207  007D1A                     __pmediumconst:
   208                           	opt stack 0
   209  007D1A  00                 	db	0
   210  007D1B                     __npowers_:
   211                           	opt stack 0
   212  007D1B  0000               	dw	0
   213  007D1D  3F80               	dw	16256
   214  007D1F  CCCD               	dw	52429
   215  007D21  3DCC               	dw	15820
   216  007D23  D70A               	dw	55050
   217  007D25  3C23               	dw	15395
   218  007D27  126F               	dw	4719
   219  007D29  3A83               	dw	14979
   220  007D2B  B717               	dw	46871
   221  007D2D  38D1               	dw	14545
   222  007D2F  C5AC               	dw	50604
   223  007D31  3727               	dw	14119
   224  007D33  37BD               	dw	14269
   225  007D35  3586               	dw	13702
   226  007D37  BF95               	dw	49045
   227  007D39  33D6               	dw	13270
   228  007D3B  CC77               	dw	52343
   229  007D3D  322B               	dw	12843
   230  007D3F  705F               	dw	28767
   231  007D41  3089               	dw	12425
   232  007D43  E6FF               	dw	59135
   233  007D45  2EDB               	dw	11995
   234  007D47  E508               	dw	58632
   235  007D49  1E3C               	dw	7740
   236  007D4B  4260               	dw	16992
   237  007D4D  0DA2               	dw	3490
   238  007D4F                     __end_of__npowers_:
   239                           	opt stack 0
   240  007D4F                     __powers_:
   241                           	opt stack 0
   242  007D4F  0000               	dw	0
   243  007D51  3F80               	dw	16256
   244  007D53  0000               	dw	0
   245  007D55  4120               	dw	16672
   246  007D57  0000               	dw	0
   247  007D59  42C8               	dw	17096
   248  007D5B  0000               	dw	0
   249  007D5D  447A               	dw	17530
   250  007D5F  4000               	dw	16384
   251  007D61  461C               	dw	17948
   252  007D63  5000               	dw	20480
   253  007D65  47C3               	dw	18371
   254  007D67  2400               	dw	9216
   255  007D69  4974               	dw	18804
   256  007D6B  9680               	dw	38528
   257  007D6D  4B18               	dw	19224
   258  007D6F  BC20               	dw	48160
   259  007D71  4CBE               	dw	19646
   260  007D73  6B28               	dw	27432
   261  007D75  4E6E               	dw	20078
   262  007D77  02F9               	dw	761
   263  007D79  5015               	dw	20501
   264  007D7B  78EC               	dw	30956
   265  007D7D  60AD               	dw	24749
   266  007D7F  F2CA               	dw	62154
   267  007D81  7149               	dw	29001
   268  007D83                     __end_of__powers_:
   269                           	opt stack 0
   270  007D83                     _dpowers:
   271                           	opt stack 0
   272  007D83  0001               	dw	1
   273  007D85  0000               	dw	0
   274  007D87  000A               	dw	10
   275  007D89  0000               	dw	0
   276  007D8B  0064               	dw	100
   277  007D8D  0000               	dw	0
   278  007D8F  03E8               	dw	1000
   279  007D91  0000               	dw	0
   280  007D93  2710               	dw	10000
   281  007D95  0000               	dw	0
   282  007D97  86A0               	dw	34464
   283  007D99  0001               	dw	1
   284  007D9B  4240               	dw	16960
   285  007D9D  000F               	dw	15
   286  007D9F  9680               	dw	38528
   287  007DA1  0098               	dw	152
   288  007DA3  E100               	dw	57600
   289  007DA5  05F5               	dw	1525
   290  007DA7  CA00               	dw	51712
   291  007DA9  3B9A               	dw	15258
   292  007DAB                     __end_of_dpowers:
   293                           	opt stack 0
   294  0000                     _ANSELAbits	set	3896
   295  0000                     _ANSELCbits	set	3898
   296  0000                     _CCPTMRS0bits	set	3913
   297  0000                     _PR4	set	3922
   298  0000                     _T4CONbits	set	3921
   299  0000                     _BAUDCON1bits	set	4024
   300  0000                     _CCP2CONbits	set	3942
   301  0000                     _CCPR2L	set	3943
   302  0000                     _ECCP2ASbits	set	3940
   303  0000                     _EEADR	set	4009
   304  0000                     _EECON1bits	set	4006
   305  0000                     _EECON2	set	4007
   306  0000                     _EEDATA	set	4008
   307  0000                     _INTCONbits	set	4082
   308  0000                     _IPR1bits	set	3999
   309  0000                     _IPR5bits	set	3967
   310  0000                     _LATBbits	set	3978
   311  0000                     _LATCbits	set	3979
   312  0000                     _OSCCON2bits	set	4050
   313  0000                     _OSCCONbits	set	4051
   314  0000                     _OSCTUNEbits	set	3995
   315  0000                     _PIE1bits	set	3997
   316  0000                     _PIE5bits	set	3965
   317  0000                     _PIR1bits	set	3998
   318  0000                     _PIR5bits	set	3966
   319  0000                     _PORTAbits	set	3968
   320  0000                     _PORTBbits	set	3969
   321  0000                     _PR2	set	4027
   322  0000                     _PSTR2CONbits	set	3939
   323  0000                     _PWM2CONbits	set	3941
   324  0000                     _RCONbits	set	4048
   325  0000                     _RCREG1	set	4014
   326  0000                     _RCSTA1bits	set	4011
   327  0000                     _SPBRG1	set	4015
   328  0000                     _SPBRGH1	set	4016
   329  0000                     _T2CONbits	set	4026
   330  0000                     _TRISAbits	set	3986
   331  0000                     _TRISBbits	set	3987
   332  0000                     _TRISCbits	set	3988
   333  0000                     _TXREG1	set	4013
   334  0000                     _TXSTA1bits	set	4012
   335  0000                     _WDTCONbits	set	4049
   336  007DAB                     STR_26:
   337  007DAB  20                 	db	32
   338  007DAC  20                 	db	32
   339  007DAD  20                 	db	32
   340  007DAE  20                 	db	32
   341  007DAF  25                 	db	37
   342  007DB0  63                 	db	99	;'c'
   343  007DB1  25                 	db	37
   344  007DB2  75                 	db	117	;'u'
   345  007DB3  25                 	db	37
   346  007DB4  63                 	db	99	;'c'
   347  007DB5  25                 	db	37
   348  007DB6  75                 	db	117	;'u'
   349  007DB7  25                 	db	37
   350  007DB8  63                 	db	99	;'c'
   351  007DB9  25                 	db	37
   352  007DBA  75                 	db	117	;'u'
   353  007DBB  25                 	db	37
   354  007DBC  63                 	db	99	;'c'
   355  007DBD  25                 	db	37
   356  007DBE  75                 	db	117	;'u'
   357  007DBF  20                 	db	32
   358  007DC0  20                 	db	32
   359  007DC1  20                 	db	32
   360  007DC2  20                 	db	32
   361  007DC3  00                 	db	0
   362  007DC4                     STR_37:
   363  007DC4  20                 	db	32
   364  007DC5  20                 	db	32
   365  007DC6  20                 	db	32
   366  007DC7  25                 	db	37
   367  007DC8  63                 	db	99	;'c'
   368  007DC9  53                 	db	83	;'S'
   369  007DCA  49                 	db	73	;'I'
   370  007DCB  20                 	db	32
   371  007DCC  20                 	db	32
   372  007DCD  20                 	db	32
   373  007DCE  20                 	db	32
   374  007DCF  25                 	db	37
   375  007DD0  63                 	db	99	;'c'
   376  007DD1  4E                 	db	78	;'N'
   377  007DD2  4F                 	db	79	;'O'
   378  007DD3  20                 	db	32
   379  007DD4  20                 	db	32
   380  007DD5  20                 	db	32
   381  007DD6  00                 	db	0
   382  007DD7                     STR_27:
   383  007DD7  43                 	db	67	;'C'
   384  007DD8  6F                 	db	111	;'o'
   385  007DD9  6E                 	db	110	;'n'
   386  007DDA  74                 	db	116	;'t'
   387  007DDB  72                 	db	114	;'r'
   388  007DDC  61                 	db	97	;'a'
   389  007DDD  73                 	db	115	;'s'
   390  007DDE  65                 	db	101	;'e'
   391  007DDF  6E                 	db	110	;'n'
   392  007DE0  61                 	db	97	;'a'
   393  007DE1  20                 	db	32
   394  007DE2  20                 	db	32
   395  007DE3  20                 	db	32
   396  007DE4  20                 	db	32
   397  007DE5  20                 	db	32
   398  007DE6  20                 	db	32
   399  007DE7  0A                 	db	10
   400  007DE8  00                 	db	0
   401  007DE9                     STR_25:
   402  007DE9  43                 	db	67	;'C'
   403  007DEA  6F                 	db	111	;'o'
   404  007DEB  6E                 	db	110	;'n'
   405  007DEC  74                 	db	116	;'t'
   406  007DED  72                 	db	114	;'r'
   407  007DEE  61                 	db	97	;'a'
   408  007DEF  73                 	db	115	;'s'
   409  007DF0  65                 	db	101	;'e'
   410  007DF1  6E                 	db	110	;'n'
   411  007DF2  61                 	db	97	;'a'
   412  007DF3  3A                 	db	58	;':'
   413  007DF4  20                 	db	32
   414  007DF5  20                 	db	32
   415  007DF6  20                 	db	32
   416  007DF7  20                 	db	32
   417  007DF8  20                 	db	32
   418  007DF9  0A                 	db	10
   419  007DFA  00                 	db	0
   420  007DFB                     STR_15:
   421  007DFB  44                 	db	68	;'D'
   422  007DFC  69                 	db	105	;'i'
   423  007DFD  61                 	db	97	;'a'
   424  007DFE  6D                 	db	109	;'m'
   425  007DFF  65                 	db	101	;'e'
   426  007E00  74                 	db	116	;'t'
   427  007E01  72                 	db	114	;'r'
   428  007E02  6F                 	db	111	;'o'
   429  007E03  20                 	db	32
   430  007E04  54                 	db	84	;'T'
   431  007E05  75                 	db	117	;'u'
   432  007E06  62                 	db	98	;'b'
   433  007E07  6F                 	db	111	;'o'
   434  007E08  3A                 	db	58	;':'
   435  007E09  20                 	db	32
   436  007E0A  20                 	db	32
   437  007E0B  0A                 	db	10
   438  007E0C  00                 	db	0
   439  007E0D                     STR_17:
   440  007E0D  56                 	db	86	;'V'
   441  007E0E  65                 	db	101	;'e'
   442  007E0F  6C                 	db	108	;'l'
   443  007E10  6F                 	db	111	;'o'
   444  007E11  63                 	db	99	;'c'
   445  007E12  69                 	db	105	;'i'
   446  007E13  64                 	db	100	;'d'
   447  007E14  61                 	db	97	;'a'
   448  007E15  64                 	db	100	;'d'
   449  007E16  20                 	db	32
   450  007E17  4D                 	db	77	;'M'
   451  007E18  61                 	db	97	;'a'
   452  007E19  73                 	db	115	;'s'
   453  007E1A  61                 	db	97	;'a'
   454  007E1B  3A                 	db	58	;':'
   455  007E1C  20                 	db	32
   456  007E1D  0A                 	db	10
   457  007E1E  00                 	db	0
   458  007E1F                     STR_8:
   459  007E1F  45                 	db	69	;'E'
   460  007E20  73                 	db	115	;'s'
   461  007E21  74                 	db	116	;'t'
   462  007E22  61                 	db	97	;'a'
   463  007E23  64                 	db	100	;'d'
   464  007E24  6F                 	db	111	;'o'
   465  007E25  20                 	db	32
   466  007E26  70                 	db	112	;'p'
   467  007E27  72                 	db	114	;'r'
   468  007E28  6F                 	db	111	;'o'
   469  007E29  63                 	db	99	;'c'
   470  007E2A  65                 	db	101	;'e'
   471  007E2B  73                 	db	115	;'s'
   472  007E2C  6F                 	db	111	;'o'
   473  007E2D  3A                 	db	58	;':'
   474  007E2E  20                 	db	32
   475  007E2F  0A                 	db	10
   476  007E30  00                 	db	0
   477  007E31                     STR_36:
   478  007E31  49                 	db	73	;'I'
   479  007E32  6E                 	db	110	;'n'
   480  007E33  69                 	db	105	;'i'
   481  007E34  74                 	db	116	;'t'
   482  007E35  20                 	db	32
   483  007E36  61                 	db	97	;'a'
   484  007E37  75                 	db	117	;'u'
   485  007E38  74                 	db	116	;'t'
   486  007E39  6F                 	db	111	;'o'
   487  007E3A  43                 	db	67	;'C'
   488  007E3B  61                 	db	97	;'a'
   489  007E3C  6C                 	db	108	;'l'
   490  007E3D  69                 	db	105	;'i'
   491  007E3E  62                 	db	98	;'b'
   492  007E3F  3F                 	db	63	;'?'
   493  007E40  20                 	db	32
   494  007E41  0A                 	db	10
   495  007E42  00                 	db	0
   496  007E43                     STR_35:
   497  007E43  47                 	db	71	;'G'
   498  007E44  75                 	db	117	;'u'
   499  007E45  61                 	db	97	;'a'
   500  007E46  72                 	db	114	;'r'
   501  007E47  64                 	db	100	;'d'
   502  007E48  61                 	db	97	;'a'
   503  007E49  72                 	db	114	;'r'
   504  007E4A  20                 	db	32
   505  007E4B  43                 	db	67	;'C'
   506  007E4C  61                 	db	97	;'a'
   507  007E4D  6D                 	db	109	;'m'
   508  007E4E  62                 	db	98	;'b'
   509  007E4F  69                 	db	105	;'i'
   510  007E50  6F                 	db	111	;'o'
   511  007E51  3F                 	db	63	;'?'
   512  007E52  20                 	db	32
   513  007E53  0A                 	db	10
   514  007E54  00                 	db	0
   515  007E55                     STR_11:
   516  007E55  56                 	db	86	;'V'
   517  007E56  61                 	db	97	;'a'
   518  007E57  6C                 	db	108	;'l'
   519  007E58  6F                 	db	111	;'o'
   520  007E59  72                 	db	114	;'r'
   521  007E5A  20                 	db	32
   522  007E5B  70                 	db	112	;'p'
   523  007E5C  6F                 	db	111	;'o'
   524  007E5D  72                 	db	114	;'r'
   525  007E5E  20                 	db	32
   526  007E5F  43                 	db	67	;'C'
   527  007E60  6F                 	db	111	;'o'
   528  007E61  72                 	db	114	;'r'
   529  007E62  74                 	db	116	;'t'
   530  007E63  65                 	db	101	;'e'
   531  007E64  3A                 	db	58	;':'
   532  007E65  0A                 	db	10
   533  007E66  00                 	db	0
   534  007E67                     STR_29:
   535  007E67  4D                 	db	77	;'M'
   536  007E68  6F                 	db	111	;'o'
   537  007E69  64                 	db	100	;'d'
   538  007E6A  6F                 	db	111	;'o'
   539  007E6B  20                 	db	32
   540  007E6C  43                 	db	67	;'C'
   541  007E6D  6F                 	db	111	;'o'
   542  007E6E  6E                 	db	110	;'n'
   543  007E6F  66                 	db	102	;'f'
   544  007E70  69                 	db	105	;'i'
   545  007E71  67                 	db	103	;'g'
   546  007E72  75                 	db	117	;'u'
   547  007E73  72                 	db	114	;'r'
   548  007E74  61                 	db	97	;'a'
   549  007E75  72                 	db	114	;'r'
   550  007E76  3A                 	db	58	;':'
   551  007E77  0A                 	db	10
   552  007E78  00                 	db	0
   553  007E79                     STR_13:
   554  007E79  43                 	db	67	;'C'
   555  007E7A  61                 	db	97	;'a'
   556  007E7B  6E                 	db	110	;'n'
   557  007E7C  74                 	db	116	;'t'
   558  007E7D  69                 	db	105	;'i'
   559  007E7E  64                 	db	100	;'d'
   560  007E7F  61                 	db	97	;'a'
   561  007E80  64                 	db	100	;'d'
   562  007E81  20                 	db	32
   563  007E82  43                 	db	67	;'C'
   564  007E83  6F                 	db	111	;'o'
   565  007E84  72                 	db	114	;'r'
   566  007E85  74                 	db	116	;'t'
   567  007E86  65                 	db	101	;'e'
   568  007E87  73                 	db	115	;'s'
   569  007E88  3A                 	db	58	;':'
   570  007E89  0A                 	db	10
   571  007E8A  00                 	db	0
   572  007E8B                     STR_33:
   573  007E8B  49                 	db	73	;'I'
   574  007E8C  6E                 	db	110	;'n'
   575  007E8D  69                 	db	105	;'i'
   576  007E8E  63                 	db	99	;'c'
   577  007E8F  69                 	db	105	;'i'
   578  007E90  61                 	db	97	;'a'
   579  007E91  72                 	db	114	;'r'
   580  007E92  20                 	db	32
   581  007E93  50                 	db	80	;'P'
   582  007E94  72                 	db	114	;'r'
   583  007E95  6F                 	db	111	;'o'
   584  007E96  63                 	db	99	;'c'
   585  007E97  65                 	db	101	;'e'
   586  007E98  73                 	db	115	;'s'
   587  007E99  6F                 	db	111	;'o'
   588  007E9A  3F                 	db	63	;'?'
   589  007E9B  0A                 	db	10
   590  007E9C  00                 	db	0
   591  007E9D                     STR_34:
   592  007E9D  44                 	db	68	;'D'
   593  007E9E  65                 	db	101	;'e'
   594  007E9F  74                 	db	116	;'t'
   595  007EA0  65                 	db	101	;'e'
   596  007EA1  6E                 	db	110	;'n'
   597  007EA2  65                 	db	101	;'e'
   598  007EA3  72                 	db	114	;'r'
   599  007EA4  20                 	db	32
   600  007EA5  50                 	db	80	;'P'
   601  007EA6  72                 	db	114	;'r'
   602  007EA7  6F                 	db	111	;'o'
   603  007EA8  63                 	db	99	;'c'
   604  007EA9  65                 	db	101	;'e'
   605  007EAA  73                 	db	115	;'s'
   606  007EAB  6F                 	db	111	;'o'
   607  007EAC  3F                 	db	63	;'?'
   608  007EAD  0A                 	db	10
   609  007EAE  00                 	db	0
   610  007EAF  41                 	db	65	;'A'
   611  007EB0  75                 	db	117	;'u'
   612  007EB1  74                 	db	116	;'t'
   613  007EB2  6F                 	db	111	;'o'
   614  007EB3  63                 	db	99	;'c'
   615  007EB4  61                 	db	97	;'a'
   616  007EB5  6C                 	db	108	;'l'
   617  007EB6  69                 	db	105	;'i'
   618  007EB7  62                 	db	98	;'b'
   619  007EB8  20                 	db	32
   620  007EB9  75                 	db	117	;'u'
   621  007EBA  73                 	db	115	;'s'
   622  007EBB  61                 	db	97	;'a'
   623  007EBC  6E                 	db	110	;'n'
   624  007EBD  64                 	db	100	;'d'
   625  007EBE  6F                 	db	111	;'o'
   626  007EBF  0A                 	db	10
   627  007EC0  00                 	db	0
   628  007EC1                     STR_1:
   629  007EC1  20                 	db	32
   630  007EC2  25                 	db	37
   631  007EC3  75                 	db	117	;'u'
   632  007EC4  25                 	db	37
   633  007EC5  75                 	db	117	;'u'
   634  007EC6  25                 	db	37
   635  007EC7  75                 	db	117	;'u'
   636  007EC8  2E                 	db	46
   637  007EC9  25                 	db	37
   638  007ECA  75                 	db	117	;'u'
   639  007ECB  25                 	db	37
   640  007ECC  75                 	db	117	;'u'
   641  007ECD  25                 	db	37
   642  007ECE  63                 	db	99	;'c'
   643  007ECF  25                 	db	37
   644  007ED0  75                 	db	117	;'u'
   645  007ED1  20                 	db	32
   646  007ED2  00                 	db	0
   647  007ED3                     STR_2:
   648  007ED3  20                 	db	32
   649  007ED4  25                 	db	37
   650  007ED5  75                 	db	117	;'u'
   651  007ED6  25                 	db	37
   652  007ED7  75                 	db	117	;'u'
   653  007ED8  25                 	db	37
   654  007ED9  75                 	db	117	;'u'
   655  007EDA  2E                 	db	46
   656  007EDB  25                 	db	37
   657  007EDC  75                 	db	117	;'u'
   658  007EDD  25                 	db	37
   659  007EDE  63                 	db	99	;'c'
   660  007EDF  25                 	db	37
   661  007EE0  75                 	db	117	;'u'
   662  007EE1  25                 	db	37
   663  007EE2  75                 	db	117	;'u'
   664  007EE3  20                 	db	32
   665  007EE4  00                 	db	0
   666  007EE5                     STR_4:
   667  007EE5  20                 	db	32
   668  007EE6  25                 	db	37
   669  007EE7  75                 	db	117	;'u'
   670  007EE8  25                 	db	37
   671  007EE9  75                 	db	117	;'u'
   672  007EEA  25                 	db	37
   673  007EEB  63                 	db	99	;'c'
   674  007EEC  25                 	db	37
   675  007EED  75                 	db	117	;'u'
   676  007EEE  2E                 	db	46
   677  007EEF  25                 	db	37
   678  007EF0  75                 	db	117	;'u'
   679  007EF1  25                 	db	37
   680  007EF2  75                 	db	117	;'u'
   681  007EF3  25                 	db	37
   682  007EF4  75                 	db	117	;'u'
   683  007EF5  20                 	db	32
   684  007EF6  00                 	db	0
   685  007EF7                     STR_5:
   686  007EF7  20                 	db	32
   687  007EF8  25                 	db	37
   688  007EF9  75                 	db	117	;'u'
   689  007EFA  25                 	db	37
   690  007EFB  63                 	db	99	;'c'
   691  007EFC  25                 	db	37
   692  007EFD  75                 	db	117	;'u'
   693  007EFE  25                 	db	37
   694  007EFF  75                 	db	117	;'u'
   695  007F00  2E                 	db	46
   696  007F01  25                 	db	37
   697  007F02  75                 	db	117	;'u'
   698  007F03  25                 	db	37
   699  007F04  75                 	db	117	;'u'
   700  007F05  25                 	db	37
   701  007F06  75                 	db	117	;'u'
   702  007F07  20                 	db	32
   703  007F08  00                 	db	0
   704  007F09                     STR_6:
   705  007F09  20                 	db	32
   706  007F0A  25                 	db	37
   707  007F0B  63                 	db	99	;'c'
   708  007F0C  25                 	db	37
   709  007F0D  75                 	db	117	;'u'
   710  007F0E  25                 	db	37
   711  007F0F  75                 	db	117	;'u'
   712  007F10  25                 	db	37
   713  007F11  75                 	db	117	;'u'
   714  007F12  2E                 	db	46
   715  007F13  25                 	db	37
   716  007F14  75                 	db	117	;'u'
   717  007F15  25                 	db	37
   718  007F16  75                 	db	117	;'u'
   719  007F17  25                 	db	37
   720  007F18  75                 	db	117	;'u'
   721  007F19  20                 	db	32
   722  007F1A  00                 	db	0
   723  007F1B                     STR_3:
   724  007F1B  20                 	db	32
   725  007F1C  25                 	db	37
   726  007F1D  75                 	db	117	;'u'
   727  007F1E  25                 	db	37
   728  007F1F  75                 	db	117	;'u'
   729  007F20  25                 	db	37
   730  007F21  75                 	db	117	;'u'
   731  007F22  2E                 	db	46
   732  007F23  25                 	db	37
   733  007F24  63                 	db	99	;'c'
   734  007F25  25                 	db	37
   735  007F26  75                 	db	117	;'u'
   736  007F27  25                 	db	37
   737  007F28  75                 	db	117	;'u'
   738  007F29  25                 	db	37
   739  007F2A  75                 	db	117	;'u'
   740  007F2B  20                 	db	32
   741  007F2C  00                 	db	0
   742  007F2D                     STR_40:
   743  007F2D  50                 	db	80	;'P'
   744  007F2E  65                 	db	101	;'e'
   745  007F2F  73                 	db	115	;'s'
   746  007F30  6F                 	db	111	;'o'
   747  007F31  20                 	db	32
   748  007F32  52                 	db	82	;'R'
   749  007F33  65                 	db	101	;'e'
   750  007F34  61                 	db	97	;'a'
   751  007F35  6C                 	db	108	;'l'
   752  007F36  3A                 	db	58	;':'
   753  007F37  20                 	db	32
   754  007F38  20                 	db	32
   755  007F39  20                 	db	32
   756  007F3A  20                 	db	32
   757  007F3B  20                 	db	32
   758  007F3C  0A                 	db	10
   759  007F3D  00                 	db	0
   760  007F3E                     STR_28:
   761  007F3E  20                 	db	32
   762  007F3F  20                 	db	32
   763  007F40  20                 	db	32
   764  007F41  20                 	db	32
   765  007F42  20                 	db	32
   766  007F43  45                 	db	69	;'E'
   767  007F44  72                 	db	114	;'r'
   768  007F45  72                 	db	114	;'r'
   769  007F46  6F                 	db	111	;'o'
   770  007F47  6E                 	db	110	;'n'
   771  007F48  65                 	db	101	;'e'
   772  007F49  61                 	db	97	;'a'
   773  007F4A  20                 	db	32
   774  007F4B  20                 	db	32
   775  007F4C  20                 	db	32
   776  007F4D  20                 	db	32
   777  007F4E  00                 	db	0
   778  007F4F                     STR_30:
   779  007F4F  20                 	db	32
   780  007F50  20                 	db	32
   781  007F51  20                 	db	32
   782  007F52  20                 	db	32
   783  007F53  49                 	db	73	;'I'
   784  007F54  6E                 	db	110	;'n'
   785  007F55  69                 	db	105	;'i'
   786  007F56  63                 	db	99	;'c'
   787  007F57  69                 	db	105	;'i'
   788  007F58  61                 	db	97	;'a'
   789  007F59  64                 	db	100	;'d'
   790  007F5A  6F                 	db	111	;'o'
   791  007F5B  20                 	db	32
   792  007F5C  20                 	db	32
   793  007F5D  20                 	db	32
   794  007F5E  20                 	db	32
   795  007F5F  00                 	db	0
   796  007F60                     STR_10:
   797  007F60  20                 	db	32
   798  007F61  20                 	db	32
   799  007F62  20                 	db	32
   800  007F63  20                 	db	32
   801  007F64  44                 	db	68	;'D'
   802  007F65  65                 	db	101	;'e'
   803  007F66  74                 	db	116	;'t'
   804  007F67  65                 	db	101	;'e'
   805  007F68  6E                 	db	110	;'n'
   806  007F69  69                 	db	105	;'i'
   807  007F6A  64                 	db	100	;'d'
   808  007F6B  6F                 	db	111	;'o'
   809  007F6C  20                 	db	32
   810  007F6D  20                 	db	32
   811  007F6E  20                 	db	32
   812  007F6F  20                 	db	32
   813  007F70  00                 	db	0
   814  007F71                     STR_32:
   815  007F71  20                 	db	32
   816  007F72  20                 	db	32
   817  007F73  20                 	db	32
   818  007F74  46                 	db	70	;'F'
   819  007F75  69                 	db	105	;'i'
   820  007F76  6E                 	db	110	;'n'
   821  007F77  61                 	db	97	;'a'
   822  007F78  6C                 	db	108	;'l'
   823  007F79  69                 	db	105	;'i'
   824  007F7A  7A                 	db	122	;'z'
   825  007F7B  61                 	db	97	;'a'
   826  007F7C  64                 	db	100	;'d'
   827  007F7D  6F                 	db	111	;'o'
   828  007F7E  20                 	db	32
   829  007F7F  20                 	db	32
   830  007F80  20                 	db	32
   831  007F81  00                 	db	0
   832  007F82  20                 	db	32
   833  007F83  20                 	db	32
   834  007F84  25                 	db	37
   835  007F85  75                 	db	117	;'u'
   836  007F86  25                 	db	37
   837  007F87  75                 	db	117	;'u'
   838  007F88  25                 	db	37
   839  007F89  75                 	db	117	;'u'
   840  007F8A  2E                 	db	46
   841  007F8B  25                 	db	37
   842  007F8C  75                 	db	117	;'u'
   843  007F8D  25                 	db	37
   844  007F8E  75                 	db	117	;'u'
   845  007F8F  25                 	db	37
   846  007F90  75                 	db	117	;'u'
   847  007F91  20                 	db	32
   848  007F92  00                 	db	0
   849  007F93  31                 	db	49	;'1'
   850  007F94  20                 	db	32
   851  007F95  6B                 	db	107	;'k'
   852  007F96  67                 	db	103	;'g'
   853  007F97  20                 	db	32
   854  007F98  40                 	db	64	;'@'
   855  007F99  20                 	db	32
   856  007F9A  31                 	db	49	;'1'
   857  007F9B  30                 	db	48	;'0'
   858  007F9C  20                 	db	32
   859  007F9D  63                 	db	99	;'c'
   860  007F9E  6F                 	db	111	;'o'
   861  007F9F  72                 	db	114	;'r'
   862  007FA0  74                 	db	116	;'t'
   863  007FA1  65                 	db	101	;'e'
   864  007FA2  73                 	db	115	;'s'
   865  007FA3  00                 	db	0
   866  007FA4                     STR_14:
   867  007FA4  20                 	db	32
   868  007FA5  20                 	db	32
   869  007FA6  20                 	db	32
   870  007FA7  20                 	db	32
   871  007FA8  20                 	db	32
   872  007FA9  20                 	db	32
   873  007FAA  25                 	db	37
   874  007FAB  64                 	db	100	;'d'
   875  007FAC  20                 	db	32
   876  007FAD  20                 	db	32
   877  007FAE  20                 	db	32
   878  007FAF  20                 	db	32
   879  007FB0  20                 	db	32
   880  007FB1  20                 	db	32
   881  007FB2  20                 	db	32
   882  007FB3  00                 	db	0
   883  007FB4                     STR_9:
   884  007FB4  20                 	db	32
   885  007FB5  20                 	db	32
   886  007FB6  20                 	db	32
   887  007FB7  25                 	db	37
   888  007FB8  64                 	db	100	;'d'
   889  007FB9  20                 	db	32
   890  007FBA  2F                 	db	47
   891  007FBB  20                 	db	32
   892  007FBC  25                 	db	37
   893  007FBD  64                 	db	100	;'d'
   894  007FBE  20                 	db	32
   895  007FBF  20                 	db	32
   896  007FC0  20                 	db	32
   897  007FC1  20                 	db	32
   898  007FC2  00                 	db	0
   899  007FC3                     STR_12:
   900  007FC3  20                 	db	32
   901  007FC4  20                 	db	32
   902  007FC5  20                 	db	32
   903  007FC6  25                 	db	37
   904  007FC7  33                 	db	51	;'3'
   905  007FC8  2E                 	db	46
   906  007FC9  33                 	db	51	;'3'
   907  007FCA  66                 	db	102	;'f'
   908  007FCB  20                 	db	32
   909  007FCC  6B                 	db	107	;'k'
   910  007FCD  67                 	db	103	;'g'
   911  007FCE  20                 	db	32
   912  007FCF  20                 	db	32
   913  007FD0  20                 	db	32
   914  007FD1  00                 	db	0
   915  007FD2                     STR_16:
   916  007FD2  20                 	db	32
   917  007FD3  20                 	db	32
   918  007FD4  20                 	db	32
   919  007FD5  25                 	db	37
   920  007FD6  33                 	db	51	;'3'
   921  007FD7  2E                 	db	46
   922  007FD8  33                 	db	51	;'3'
   923  007FD9  66                 	db	102	;'f'
   924  007FDA  20                 	db	32
   925  007FDB  6D                 	db	109	;'m'
   926  007FDC  6D                 	db	109	;'m'
   927  007FDD  20                 	db	32
   928  007FDE  20                 	db	32
   929  007FDF  20                 	db	32
   930  007FE0  00                 	db	0
   931  007FE1                     STR_18:
   932  007FE1  20                 	db	32
   933  007FE2  20                 	db	32
   934  007FE3  25                 	db	37
   935  007FE4  33                 	db	51	;'3'
   936  007FE5  2E                 	db	46
   937  007FE6  33                 	db	51	;'3'
   938  007FE7  66                 	db	102	;'f'
   939  007FE8  20                 	db	32
   940  007FE9  6B                 	db	107	;'k'
   941  007FEA  67                 	db	103	;'g'
   942  007FEB  2F                 	db	47
   943  007FEC  73                 	db	115	;'s'
   944  007FED  20                 	db	32
   945  007FEE  20                 	db	32
   946  007FEF  00                 	db	0
   947  007FF0                     STR_20:
   948  007FF0  6B                 	db	107	;'k'
   949  007FF1  67                 	db	103	;'g'
   950  007FF2  20                 	db	32
   951  007FF3  20                 	db	32
   952  007FF4  20                 	db	32
   953  007FF5  20                 	db	32
   954  007FF6  00                 	db	0
   955  007FF7                     STR_24:
   956  007FF7  6D                 	db	109	;'m'
   957  007FF8  6D                 	db	109	;'m'
   958  007FF9  20                 	db	32
   959  007FFA  20                 	db	32
   960  007FFB  20                 	db	32
   961  007FFC  20                 	db	32
   962  007FFD  00                 	db	0
   963  0000                     
   964                           ; #config settings
   965  007FFE  00                 	db	0	; dummy byte at the end
   966  0000                     
   967                           	psect	cinit
   968  005406                     __pcinit:
   969                           	opt stack 0
   970  005406                     start_initialization:
   971                           	opt stack 0
   972  005406                     __initialization:
   973                           	opt stack 0
   974                           
   975                           ; Initialize objects allocated to BANK1 (42 bytes)
   976                           ; load TBLPTR registers with __pidataBANK1
   977  005406  0E04               	movlw	low __pidataBANK1
   978  005408  6EF6               	movwf	tblptrl,c
   979  00540A  0E5F               	movlw	high __pidataBANK1
   980  00540C  6EF7               	movwf	tblptrh,c
   981  00540E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   982  005410  6EF8               	movwf	tblptru,c
   983  005412  EE01  F06E         	lfsr	0,__pdataBANK1
   984  005416  EE10 F02A          	lfsr	1,42
   985  00541A                     copy_data0:
   986  00541A  0009               	tblrd		*+
   987  00541C  CFF5 FFEE          	movff	tablat,postinc0
   988  005420  50E5               	movf	postdec1,w,c
   989  005422  50E1               	movf	fsr1l,w,c
   990  005424  E1FA               	bnz	copy_data0
   991                           
   992                           ; Initialize objects allocated to BANK0 (14 bytes)
   993                           ; load TBLPTR registers with __pidataBANK0
   994  005426  0E68               	movlw	low __pidataBANK0
   995  005428  6EF6               	movwf	tblptrl,c
   996  00542A  0E60               	movlw	high __pidataBANK0
   997  00542C  6EF7               	movwf	tblptrh,c
   998  00542E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   999  005430  6EF8               	movwf	tblptru,c
  1000  005432  EE00  F0C3         	lfsr	0,__pdataBANK0
  1001  005436  EE10 F00E          	lfsr	1,14
  1002  00543A                     copy_data1:
  1003  00543A  0009               	tblrd		*+
  1004  00543C  CFF5 FFEE          	movff	tablat,postinc0
  1005  005440  50E5               	movf	postdec1,w,c
  1006  005442  50E1               	movf	fsr1l,w,c
  1007  005444  E1FA               	bnz	copy_data1
  1008                           
  1009                           ; Initialize objects allocated to COMRAM (14 bytes)
  1010                           ; load TBLPTR registers with __pidataCOMRAM
  1011  005446  0E5A               	movlw	low __pidataCOMRAM
  1012  005448  6EF6               	movwf	tblptrl,c
  1013  00544A  0E60               	movlw	high __pidataCOMRAM
  1014  00544C  6EF7               	movwf	tblptrh,c
  1015  00544E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1016  005450  6EF8               	movwf	tblptru,c
  1017  005452  EE00  F043         	lfsr	0,__pdataCOMRAM
  1018  005456  EE10 F00E          	lfsr	1,14
  1019  00545A                     copy_data2:
  1020  00545A  0009               	tblrd		*+
  1021  00545C  CFF5 FFEE          	movff	tablat,postinc0
  1022  005460  50E5               	movf	postdec1,w,c
  1023  005462  50E1               	movf	fsr1l,w,c
  1024  005464  E1FA               	bnz	copy_data2
  1025                           
  1026                           ; Clear objects allocated to BANK1 (31 bytes)
  1027  005466  EE01  F098         	lfsr	0,__pbssBANK1
  1028  00546A  0E1F               	movlw	31
  1029  00546C                     clear_0:
  1030  00546C  6AEE               	clrf	postinc0,c
  1031  00546E  06E8               	decf	wreg,f,c
  1032  005470  E1FD               	bnz	clear_0
  1033                           
  1034                           ; Clear objects allocated to BANK0 (24 bytes)
  1035  005472  EE00  F0AB         	lfsr	0,__pbssBANK0
  1036  005476  0E18               	movlw	24
  1037  005478                     clear_1:
  1038  005478  6AEE               	clrf	postinc0,c
  1039  00547A  06E8               	decf	wreg,f,c
  1040  00547C  E1FD               	bnz	clear_1
  1041                           
  1042                           ; Clear objects allocated to COMRAM (25 bytes)
  1043  00547E  EE00  F02A         	lfsr	0,__pbssCOMRAM
  1044  005482  0E19               	movlw	25
  1045  005484                     clear_2:
  1046  005484  6AEE               	clrf	postinc0,c
  1047  005486  06E8               	decf	wreg,f,c
  1048  005488  E1FD               	bnz	clear_2
  1049  00548A                     end_of_initialization:
  1050                           	opt stack 0
  1051  00548A                     __end_of__initialization:
  1052                           	opt stack 0
  1053  00548A  9051               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1054  00548C  9251               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1055  00548E  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1056  005490  6EF8               	movwf	tblptru,c
  1057  005492  0100               	movlb	0
  1058  005494  EF91  F02D         	goto	_main	;jump to C main() function
  1059                           tblptru	equ	0xFF8
  1060                           tblptrh	equ	0xFF7
  1061                           tblptrl	equ	0xFF6
  1062                           tablat	equ	0xFF5
  1063                           postinc0	equ	0xFEE
  1064                           wreg	equ	0xFE8
  1065                           postdec1	equ	0xFE5
  1066                           fsr1l	equ	0xFE1
  1067                           
  1068                           	psect	bssCOMRAM
  1069  00002A                     __pbssCOMRAM:
  1070                           	opt stack 0
  1071  00002A                     _chanValf:
  1072                           	opt stack 0
  1073  00002A                     	ds	4
  1074  00002E                     _processTimer:
  1075                           	opt stack 0
  1076  00002E                     	ds	4
  1077  000032                     _questKMT:
  1078                           	opt stack 0
  1079  000032                     	ds	3
  1080  000035                     _processState:
  1081                           	opt stack 0
  1082  000035                     	ds	2
  1083  000037                     _DOWNisLP:
  1084                           	opt stack 0
  1085  000037                     	ds	1
  1086  000038                     _FC1securLock:
  1087                           	opt stack 0
  1088  000038                     	ds	1
  1089  000039                     _FC2securLock:
  1090                           	opt stack 0
  1091  000039                     	ds	1
  1092  00003A                     _ProcessStarted:
  1093                           	opt stack 0
  1094  00003A                     	ds	1
  1095  00003B                     _RETROisLP:
  1096                           	opt stack 0
  1097  00003B                     	ds	1
  1098  00003C                     _UPisLP:
  1099                           	opt stack 0
  1100  00003C                     	ds	1
  1101  00003D                     _holdFC1cont:
  1102                           	opt stack 0
  1103  00003D                     	ds	1
  1104  00003E                     _holdFC2cont:
  1105                           	opt stack 0
  1106  00003E                     	ds	1
  1107  00003F                     _lastSttFC1:
  1108                           	opt stack 0
  1109  00003F                     	ds	1
  1110  000040                     _lastSttFC2:
  1111                           	opt stack 0
  1112  000040                     	ds	1
  1113  000041                     _screen_calibVelRes:
  1114                           	opt stack 0
  1115  000041                     	ds	1
  1116  000042                     _selKMT:
  1117                           	opt stack 0
  1118  000042                     	ds	1
  1119                           tblptru	equ	0xFF8
  1120                           tblptrh	equ	0xFF7
  1121                           tblptrl	equ	0xFF6
  1122                           tablat	equ	0xFF5
  1123                           postinc0	equ	0xFEE
  1124                           wreg	equ	0xFE8
  1125                           postdec1	equ	0xFE5
  1126                           fsr1l	equ	0xFE1
  1127                           
  1128                           	psect	dataCOMRAM
  1129  000043                     __pdataCOMRAM:
  1130                           	opt stack 0
  1131  000043                     _timeDOWN:
  1132                           	opt stack 0
  1133  000043                     	ds	4
  1134  000047                     _timsXcorte:
  1135                           	opt stack 0
  1136  000047                     	ds	4
  1137  00004B                     lcd_init@F7567:
  1138                           	opt stack 0
  1139  00004B                     	ds	4
  1140  00004F                     _tempNumCortes:
  1141                           	opt stack 0
  1142  00004F                     	ds	2
  1143                           tblptru	equ	0xFF8
  1144                           tblptrh	equ	0xFF7
  1145                           tblptrl	equ	0xFF6
  1146                           tablat	equ	0xFF5
  1147                           postinc0	equ	0xFEE
  1148                           wreg	equ	0xFE8
  1149                           postdec1	equ	0xFE5
  1150                           fsr1l	equ	0xFE1
  1151                           
  1152                           	psect	bssBANK0
  1153  0000AB                     __pbssBANK0:
  1154                           	opt stack 0
  1155  0000AB                     _fData:
  1156                           	opt stack 0
  1157  0000AB                     	ds	4
  1158  0000AF                     _i16Data:
  1159                           	opt stack 0
  1160  0000AF                     	ds	2
  1161  0000B1                     _questSN:
  1162                           	opt stack 0
  1163  0000B1                     	ds	2
  1164  0000B3                     _DOWNsecurLock:
  1165                           	opt stack 0
  1166  0000B3                     	ds	1
  1167  0000B4                     _ENTERisLP:
  1168                           	opt stack 0
  1169  0000B4                     	ds	1
  1170  0000B5                     _ENTERsecurLock:
  1171                           	opt stack 0
  1172  0000B5                     	ds	1
  1173  0000B6                     _RETROsecurLock:
  1174                           	opt stack 0
  1175  0000B6                     	ds	1
  1176  0000B7                     _UPsecurLock:
  1177                           	opt stack 0
  1178  0000B7                     	ds	1
  1179  0000B8                     _actualScreen:
  1180                           	opt stack 0
  1181  0000B8                     	ds	1
  1182  0000B9                     _bladeIsUP:
  1183                           	opt stack 0
  1184  0000B9                     	ds	1
  1185  0000BA                     _fd:
  1186                           	opt stack 0
  1187  0000BA                     	ds	1
  1188  0000BB                     _holdDOWNcont:
  1189                           	opt stack 0
  1190  0000BB                     	ds	1
  1191  0000BC                     _holdENTERcont:
  1192                           	opt stack 0
  1193  0000BC                     	ds	1
  1194  0000BD                     _holdRETROcont:
  1195                           	opt stack 0
  1196  0000BD                     	ds	1
  1197  0000BE                     _holdUPcont:
  1198                           	opt stack 0
  1199  0000BE                     	ds	1
  1200  0000BF                     _ie:
  1201                           	opt stack 0
  1202  0000BF                     	ds	1
  1203  0000C0                     _passSection:
  1204                           	opt stack 0
  1205  0000C0                     	ds	1
  1206  0000C1                     _selSN:
  1207                           	opt stack 0
  1208  0000C1                     	ds	1
  1209  0000C2                     _tempLastScreen:
  1210                           	opt stack 0
  1211  0000C2                     	ds	1
  1212                           tblptru	equ	0xFF8
  1213                           tblptrh	equ	0xFF7
  1214                           tblptrl	equ	0xFF6
  1215                           tablat	equ	0xFF5
  1216                           postinc0	equ	0xFEE
  1217                           wreg	equ	0xFE8
  1218                           postdec1	equ	0xFE5
  1219                           fsr1l	equ	0xFE1
  1220                           
  1221                           	psect	dataBANK0
  1222  0000C3                     __pdataBANK0:
  1223                           	opt stack 0
  1224  0000C3                     _tiXcorte:
  1225                           	opt stack 0
  1226  0000C3                     	ds	4
  1227  0000C7                     _velocidadMasa:
  1228                           	opt stack 0
  1229  0000C7                     	ds	4
  1230  0000CB                     _numCortes:
  1231                           	opt stack 0
  1232  0000CB                     	ds	2
  1233  0000CD                     _lastSttDOWN:
  1234                           	opt stack 0
  1235  0000CD                     	ds	1
  1236  0000CE                     _lastSttENTER:
  1237                           	opt stack 0
  1238  0000CE                     	ds	1
  1239  0000CF                     _lastSttRETRO:
  1240                           	opt stack 0
  1241  0000CF                     	ds	1
  1242  0000D0                     _lastSttUP:
  1243                           	opt stack 0
  1244  0000D0                     	ds	1
  1245                           tblptru	equ	0xFF8
  1246                           tblptrh	equ	0xFF7
  1247                           tblptrl	equ	0xFF6
  1248                           tablat	equ	0xFF5
  1249                           postinc0	equ	0xFEE
  1250                           wreg	equ	0xFE8
  1251                           postdec1	equ	0xFE5
  1252                           fsr1l	equ	0xFE1
  1253                           
  1254                           	psect	bssBANK1
  1255  000198                     __pbssBANK1:
  1256                           	opt stack 0
  1257  000198                     _chanValChar:
  1258                           	opt stack 0
  1259  000198                     	ds	6
  1260  00019E                     _chanValdig:
  1261                           	opt stack 0
  1262  00019E                     	ds	6
  1263  0001A4                     _calFactor:
  1264                           	opt stack 0
  1265  0001A4                     	ds	4
  1266  0001A8                     _contra:
  1267                           	opt stack 0
  1268  0001A8                     	ds	4
  1269  0001AC                     _introducido:
  1270                           	opt stack 0
  1271  0001AC                     	ds	4
  1272  0001B0                     _passChar:
  1273                           	opt stack 0
  1274  0001B0                     	ds	4
  1275  0001B4                     _chanVals:
  1276                           	opt stack 0
  1277  0001B4                     	ds	2
  1278  0001B6                     _menuSection:
  1279                           	opt stack 0
  1280  0001B6                     	ds	1
  1281                           tblptru	equ	0xFF8
  1282                           tblptrh	equ	0xFF7
  1283                           tblptrl	equ	0xFF6
  1284                           tablat	equ	0xFF5
  1285                           postinc0	equ	0xFEE
  1286                           wreg	equ	0xFE8
  1287                           postdec1	equ	0xFE5
  1288                           fsr1l	equ	0xFE1
  1289                           
  1290                           	psect	dataBANK1
  1291  00016E                     __pdataBANK1:
  1292                           	opt stack 0
  1293  00016E                     _exp10:
  1294                           	opt stack 0
  1295  00016E                     	ds	24
  1296  000186                     _diamTubo:
  1297                           	opt stack 0
  1298  000186                     	ds	4
  1299  00018A                     _kgXcorte:
  1300                           	opt stack 0
  1301  00018A                     	ds	4
  1302  00018E                     _pi:
  1303                           	opt stack 0
  1304  00018E                     	ds	4
  1305  000192                     _tempkgXcorte:
  1306                           	opt stack 0
  1307  000192                     	ds	4
  1308  000196                     _chanValSection:
  1309                           	opt stack 0
  1310  000196                     	ds	1
  1311  000197                     _flech:
  1312                           	opt stack 0
  1313  000197                     	ds	1
  1314                           tblptru	equ	0xFF8
  1315                           tblptrh	equ	0xFF7
  1316                           tblptrl	equ	0xFF6
  1317                           tablat	equ	0xFF5
  1318                           postinc0	equ	0xFEE
  1319                           wreg	equ	0xFE8
  1320                           postdec1	equ	0xFE5
  1321                           fsr1l	equ	0xFE1
  1322                           
  1323                           	psect	cstackBANK1
  1324  000100                     __pcstackBANK1:
  1325                           	opt stack 0
  1326  000100                     ___fldiv@sign:
  1327                           	opt stack 0
  1328  000100                     ___flmul@sign:
  1329                           	opt stack 0
  1330                           
  1331                           ; 1 bytes @ 0x0
  1332  000100                     	ds	1
  1333  000101                     ___flmul@aexp:
  1334                           	opt stack 0
  1335  000101                     ___fldiv@rem:
  1336                           	opt stack 0
  1337                           
  1338                           ; 4 bytes @ 0x1
  1339  000101                     	ds	1
  1340  000102                     ___flmul@grs:
  1341                           	opt stack 0
  1342                           
  1343                           ; 4 bytes @ 0x2
  1344  000102                     	ds	3
  1345  000105                     ___fldiv@new_exp:
  1346                           	opt stack 0
  1347                           
  1348                           ; 2 bytes @ 0x5
  1349  000105                     	ds	1
  1350  000106                     ___flmul@bexp:
  1351                           	opt stack 0
  1352                           
  1353                           ; 1 bytes @ 0x6
  1354  000106                     	ds	1
  1355  000107                     ___fldiv@grs:
  1356                           	opt stack 0
  1357  000107                     ___flmul@prod:
  1358                           	opt stack 0
  1359                           
  1360                           ; 4 bytes @ 0x7
  1361  000107                     	ds	4
  1362  00010B                     ___fldiv@bexp:
  1363                           	opt stack 0
  1364  00010B                     ___flmul@temp:
  1365                           	opt stack 0
  1366                           
  1367                           ; 2 bytes @ 0xB
  1368  00010B                     	ds	1
  1369  00010C                     ___fldiv@aexp:
  1370                           	opt stack 0
  1371                           
  1372                           ; 1 bytes @ 0xC
  1373  00010C                     	ds	1
  1374  00010D                     ?_fround:
  1375                           	opt stack 0
  1376  00010D                     ?_scale:
  1377                           	opt stack 0
  1378  00010D                     integrator@acum:
  1379                           	opt stack 0
  1380                           
  1381                           ; 4 bytes @ 0xD
  1382  00010D                     	ds	4
  1383  000111                     integrator@temp:
  1384                           	opt stack 0
  1385  000111                     _fround$2973:
  1386                           	opt stack 0
  1387  000111                     _scale$2974:
  1388                           	opt stack 0
  1389                           
  1390                           ; 4 bytes @ 0x11
  1391  000111                     	ds	4
  1392  000115                     scale@scl:
  1393                           	opt stack 0
  1394  000115                     integrator@i:
  1395                           	opt stack 0
  1396  000115                     _fround$2972:
  1397                           	opt stack 0
  1398                           
  1399                           ; 4 bytes @ 0x15
  1400  000115                     	ds	1
  1401  000116                     ?___fltol:
  1402                           	opt stack 0
  1403  000116                     ___fltol@f1:
  1404                           	opt stack 0
  1405                           
  1406                           ; 4 bytes @ 0x16
  1407  000116                     	ds	3
  1408  000119                     fround@prec:
  1409                           	opt stack 0
  1410                           
  1411                           ; 1 bytes @ 0x19
  1412  000119                     	ds	1
  1413  00011A                     ??___fltol:
  1414  00011A                     ?___fladd:
  1415                           	opt stack 0
  1416  00011A                     ___fladd@b:
  1417                           	opt stack 0
  1418                           
  1419                           ; 4 bytes @ 0x1A
  1420  00011A                     	ds	4
  1421  00011E                     ??_desintegrator:
  1422  00011E                     ___fladd@a:
  1423                           	opt stack 0
  1424                           
  1425                           ; 4 bytes @ 0x1E
  1426  00011E                     	ds	2
  1427  000120                     desintegrator@temp:
  1428                           	opt stack 0
  1429                           
  1430                           ; 4 bytes @ 0x20
  1431  000120                     	ds	2
  1432  000122                     ??___fladd:
  1433                           
  1434                           ; 1 bytes @ 0x22
  1435  000122                     	ds	2
  1436  000124                     desintegrator@tempL:
  1437                           	opt stack 0
  1438                           
  1439                           ; 4 bytes @ 0x24
  1440  000124                     	ds	4
  1441  000128                     desintegrator@temp3:
  1442                           	opt stack 0
  1443                           
  1444                           ; 4 bytes @ 0x28
  1445  000128                     	ds	2
  1446  00012A                     ___fladd@signs:
  1447                           	opt stack 0
  1448                           
  1449                           ; 1 bytes @ 0x2A
  1450  00012A                     	ds	1
  1451  00012B                     ___fladd@aexp:
  1452                           	opt stack 0
  1453                           
  1454                           ; 1 bytes @ 0x2B
  1455  00012B                     	ds	1
  1456  00012C                     ___fladd@bexp:
  1457                           	opt stack 0
  1458  00012C                     desintegrator@temp2:
  1459                           	opt stack 0
  1460                           
  1461                           ; 4 bytes @ 0x2C
  1462  00012C                     	ds	1
  1463  00012D                     ___fladd@grs:
  1464                           	opt stack 0
  1465                           
  1466                           ; 1 bytes @ 0x2D
  1467  00012D                     	ds	1
  1468  00012E                     ?___flsub:
  1469                           	opt stack 0
  1470  00012E                     ___flsub@b:
  1471                           	opt stack 0
  1472                           
  1473                           ; 4 bytes @ 0x2E
  1474  00012E                     	ds	2
  1475  000130                     desintegrator@i:
  1476                           	opt stack 0
  1477                           
  1478                           ; 2 bytes @ 0x30
  1479  000130                     	ds	2
  1480  000132                     ___flsub@a:
  1481                           	opt stack 0
  1482                           
  1483                           ; 4 bytes @ 0x32
  1484  000132                     	ds	4
  1485  000136                     ?_printf:
  1486                           	opt stack 0
  1487  000136                     printf@f:
  1488                           	opt stack 0
  1489                           
  1490                           ; 2 bytes @ 0x36
  1491  000136                     	ds	18
  1492  000148                     ??_printf:
  1493                           
  1494                           ; 1 bytes @ 0x48
  1495  000148                     	ds	4
  1496  00014C                     _printf$2975:
  1497                           	opt stack 0
  1498                           
  1499                           ; 4 bytes @ 0x4C
  1500  00014C                     	ds	4
  1501  000150                     printf@cp:
  1502                           	opt stack 0
  1503                           
  1504                           ; 2 bytes @ 0x50
  1505  000150                     	ds	2
  1506  000152                     printf@len:
  1507                           	opt stack 0
  1508                           
  1509                           ; 2 bytes @ 0x52
  1510  000152                     	ds	2
  1511  000154                     printf@ap:
  1512                           	opt stack 0
  1513                           
  1514                           ; 2 bytes @ 0x54
  1515  000154                     	ds	2
  1516  000156                     printf@flag:
  1517                           	opt stack 0
  1518                           
  1519                           ; 2 bytes @ 0x56
  1520  000156                     	ds	2
  1521  000158                     printf@tmpval:
  1522                           	opt stack 0
  1523                           
  1524                           ; 4 bytes @ 0x58
  1525  000158                     	ds	4
  1526  00015C                     printf@val:
  1527                           	opt stack 0
  1528                           
  1529                           ; 4 bytes @ 0x5C
  1530  00015C                     	ds	4
  1531  000160                     printf@exp:
  1532                           	opt stack 0
  1533                           
  1534                           ; 2 bytes @ 0x60
  1535  000160                     	ds	2
  1536  000162                     printf@width:
  1537                           	opt stack 0
  1538                           
  1539                           ; 2 bytes @ 0x62
  1540  000162                     	ds	2
  1541  000164                     printf@fval:
  1542                           	opt stack 0
  1543                           
  1544                           ; 4 bytes @ 0x64
  1545  000164                     	ds	4
  1546  000168                     printf@prec:
  1547                           	opt stack 0
  1548                           
  1549                           ; 2 bytes @ 0x68
  1550  000168                     	ds	2
  1551  00016A                     printf@c:
  1552                           	opt stack 0
  1553                           
  1554                           ; 1 bytes @ 0x6A
  1555  00016A                     	ds	1
  1556  00016B                     drawMenu@adv:
  1557                           	opt stack 0
  1558  00016B                     drawPassWord@i:
  1559                           	opt stack 0
  1560  00016B                     drawSNquest@i:
  1561                           	opt stack 0
  1562                           
  1563                           ; 2 bytes @ 0x6B
  1564  00016B                     	ds	2
  1565  00016D                     drawSNquest@tq:
  1566                           	opt stack 0
  1567                           
  1568                           ; 1 bytes @ 0x6D
  1569  00016D                     	ds	1
  1570                           tblptru	equ	0xFF8
  1571                           tblptrh	equ	0xFF7
  1572                           tblptrl	equ	0xFF6
  1573                           tablat	equ	0xFF5
  1574                           postinc0	equ	0xFEE
  1575                           wreg	equ	0xFE8
  1576                           postdec1	equ	0xFE5
  1577                           fsr1l	equ	0xFE1
  1578                           
  1579                           	psect	cstackBANK0
  1580  000060                     __pcstackBANK0:
  1581                           	opt stack 0
  1582  000060                     ?i1___fldiv:
  1583                           	opt stack 0
  1584  000060                     ?i1___flmul:
  1585                           	opt stack 0
  1586  000060                     putchUART@val:
  1587                           	opt stack 0
  1588  000060                     readEEPROM@adr:
  1589                           	opt stack 0
  1590  000060                     i1writeEEPROM@data:
  1591                           	opt stack 0
  1592  000060                     i1delay_ms@del:
  1593                           	opt stack 0
  1594  000060                     i1setPWM2duty@actuator:
  1595                           	opt stack 0
  1596  000060                     i1___fldiv@b:
  1597                           	opt stack 0
  1598  000060                     i1___flmul@b:
  1599                           	opt stack 0
  1600                           
  1601                           ; 4 bytes @ 0x0
  1602  000060                     	ds	1
  1603  000061                     i1writeEEPROM@adr:
  1604                           	opt stack 0
  1605                           
  1606                           ; 1 bytes @ 0x1
  1607  000061                     	ds	1
  1608  000062                     ??i1_delay_ms:
  1609  000062                     ??i1_setPWM2duty:
  1610                           
  1611                           ; 1 bytes @ 0x2
  1612  000062                     	ds	1
  1613  000063                     i1delay_ms@i:
  1614                           	opt stack 0
  1615                           
  1616                           ; 2 bytes @ 0x3
  1617  000063                     	ds	1
  1618  000064                     i1setPWM2duty@act:
  1619                           	opt stack 0
  1620  000064                     i1___fldiv@a:
  1621                           	opt stack 0
  1622  000064                     i1___flmul@a:
  1623                           	opt stack 0
  1624                           
  1625                           ; 4 bytes @ 0x4
  1626  000064                     	ds	2
  1627  000066                     ??_T2int:
  1628                           
  1629                           ; 1 bytes @ 0x6
  1630  000066                     	ds	2
  1631  000068                     ??i1___fldiv:
  1632  000068                     ??i1___flmul:
  1633                           
  1634                           ; 1 bytes @ 0x8
  1635  000068                     	ds	4
  1636  00006C                     i1___fldiv@sign:
  1637                           	opt stack 0
  1638  00006C                     i1___flmul@sign:
  1639                           	opt stack 0
  1640                           
  1641                           ; 1 bytes @ 0xC
  1642  00006C                     	ds	1
  1643  00006D                     i1___flmul@aexp:
  1644                           	opt stack 0
  1645  00006D                     i1___fldiv@rem:
  1646                           	opt stack 0
  1647                           
  1648                           ; 4 bytes @ 0xD
  1649  00006D                     	ds	1
  1650  00006E                     i1___flmul@grs:
  1651                           	opt stack 0
  1652                           
  1653                           ; 4 bytes @ 0xE
  1654  00006E                     	ds	3
  1655  000071                     i1___fldiv@new_exp:
  1656                           	opt stack 0
  1657                           
  1658                           ; 2 bytes @ 0x11
  1659  000071                     	ds	1
  1660  000072                     i1___flmul@bexp:
  1661                           	opt stack 0
  1662                           
  1663                           ; 1 bytes @ 0x12
  1664  000072                     	ds	1
  1665  000073                     i1___fldiv@grs:
  1666                           	opt stack 0
  1667  000073                     i1___flmul@prod:
  1668                           	opt stack 0
  1669                           
  1670                           ; 4 bytes @ 0x13
  1671  000073                     	ds	4
  1672  000077                     i1___fldiv@bexp:
  1673                           	opt stack 0
  1674  000077                     i1___flmul@temp:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x17
  1678  000077                     	ds	1
  1679  000078                     i1___fldiv@aexp:
  1680                           	opt stack 0
  1681                           
  1682                           ; 1 bytes @ 0x18
  1683  000078                     	ds	1
  1684  000079                     calcSysVars@temp:
  1685                           	opt stack 0
  1686                           
  1687                           ; 4 bytes @ 0x19
  1688  000079                     	ds	4
  1689  00007D                     UARTint@sas:
  1690                           	opt stack 0
  1691                           
  1692                           ; 1 bytes @ 0x1D
  1693  00007D                     	ds	1
  1694  00007E                     ??_isr:
  1695                           
  1696                           ; 1 bytes @ 0x1E
  1697  00007E                     	ds	17
  1698  00008F                     ??_isdigit:
  1699  00008F                     ??_lcd_read_4bits:
  1700  00008F                     ??_checkPass:
  1701  00008F                     ??_chanValDigUP:
  1702  00008F                     ??_chanValDigDOWN:
  1703  00008F                     ?___wmul:
  1704                           	opt stack 0
  1705  00008F                     ?___awmod:
  1706                           	opt stack 0
  1707  00008F                     ?__tdiv_to_l_:
  1708                           	opt stack 0
  1709  00008F                     ?__div_to_l_:
  1710                           	opt stack 0
  1711  00008F                     ?___lmul:
  1712                           	opt stack 0
  1713  00008F                     ?___aldiv:
  1714                           	opt stack 0
  1715  00008F                     ?___flneg:
  1716                           	opt stack 0
  1717  00008F                     ?___lldiv:
  1718                           	opt stack 0
  1719  00008F                     ?___xxtofl:
  1720                           	opt stack 0
  1721  00008F                     _lcd_send_4bits$1675:
  1722                           	opt stack 0
  1723  00008F                     writeEEPROM@data:
  1724                           	opt stack 0
  1725  00008F                     setPWM2on@on:
  1726                           	opt stack 0
  1727  00008F                     delay_ms@del:
  1728                           	opt stack 0
  1729  00008F                     setPWM2duty@actuator:
  1730                           	opt stack 0
  1731  00008F                     ___wmul@multiplier:
  1732                           	opt stack 0
  1733  00008F                     ___awmod@dividend:
  1734                           	opt stack 0
  1735  00008F                     ___lmul@multiplier:
  1736                           	opt stack 0
  1737  00008F                     ___aldiv@dividend:
  1738                           	opt stack 0
  1739  00008F                     __div_to_l_@f1:
  1740                           	opt stack 0
  1741  00008F                     ___flge@ff1:
  1742                           	opt stack 0
  1743  00008F                     ___flneg@f1:
  1744                           	opt stack 0
  1745  00008F                     __tdiv_to_l_@f1:
  1746                           	opt stack 0
  1747  00008F                     ___lldiv@dividend:
  1748                           	opt stack 0
  1749  00008F                     ___xxtofl@val:
  1750                           	opt stack 0
  1751                           
  1752                           ; 4 bytes @ 0x2F
  1753  00008F                     	ds	1
  1754  000090                     lcd_read_4bits@n:
  1755                           	opt stack 0
  1756  000090                     _lcd_send_4bits$1676:
  1757                           	opt stack 0
  1758  000090                     writeEEPROM@adr:
  1759                           	opt stack 0
  1760  000090                     _isdigit$2475:
  1761                           	opt stack 0
  1762                           
  1763                           ; 1 bytes @ 0x30
  1764  000090                     	ds	1
  1765  000091                     ??_delay_ms:
  1766  000091                     ??_setPWM2duty:
  1767  000091                     lcd_read_byte@low:
  1768                           	opt stack 0
  1769  000091                     _lcd_send_4bits$1677:
  1770                           	opt stack 0
  1771  000091                     isdigit@c:
  1772                           	opt stack 0
  1773  000091                     ___wmul@multiplicand:
  1774                           	opt stack 0
  1775  000091                     ___awmod@divisor:
  1776                           	opt stack 0
  1777                           
  1778                           ; 2 bytes @ 0x31
  1779  000091                     	ds	1
  1780  000092                     lcd_read_byte@high:
  1781                           	opt stack 0
  1782  000092                     _lcd_send_4bits$1678:
  1783                           	opt stack 0
  1784  000092                     delay_ms@i:
  1785                           	opt stack 0
  1786                           
  1787                           ; 2 bytes @ 0x32
  1788  000092                     	ds	1
  1789  000093                     ??___xxtofl:
  1790  000093                     lcd_send_4bits@n:
  1791                           	opt stack 0
  1792  000093                     checkPass@passOK:
  1793                           	opt stack 0
  1794  000093                     ___awmod@counter:
  1795                           	opt stack 0
  1796  000093                     setPWM2duty@act:
  1797                           	opt stack 0
  1798  000093                     ___wmul@product:
  1799                           	opt stack 0
  1800  000093                     ___lmul@multiplicand:
  1801                           	opt stack 0
  1802  000093                     ___aldiv@divisor:
  1803                           	opt stack 0
  1804  000093                     __div_to_l_@f2:
  1805                           	opt stack 0
  1806  000093                     ___flge@ff2:
  1807                           	opt stack 0
  1808  000093                     __tdiv_to_l_@f2:
  1809                           	opt stack 0
  1810  000093                     ___lldiv@divisor:
  1811                           	opt stack 0
  1812                           
  1813                           ; 4 bytes @ 0x33
  1814  000093                     	ds	1
  1815  000094                     lcd_send_byte@n:
  1816                           	opt stack 0
  1817  000094                     ___awmod@sign:
  1818                           	opt stack 0
  1819  000094                     checkPass@i:
  1820                           	opt stack 0
  1821                           
  1822                           ; 2 bytes @ 0x34
  1823  000094                     	ds	1
  1824  000095                     ??_lcd_send_byte:
  1825  000095                     ?___awdiv:
  1826                           	opt stack 0
  1827  000095                     ___awdiv@dividend:
  1828                           	opt stack 0
  1829                           
  1830                           ; 2 bytes @ 0x35
  1831  000095                     	ds	1
  1832  000096                     lcd_send_byte@address:
  1833                           	opt stack 0
  1834                           
  1835                           ; 1 bytes @ 0x36
  1836  000096                     	ds	1
  1837  000097                     ??__tdiv_to_l_:
  1838  000097                     ??_lcd_init:
  1839  000097                     ??___flge:
  1840  000097                     lcd_gotoxy@fila:
  1841                           	opt stack 0
  1842  000097                     ___aldiv@counter:
  1843                           	opt stack 0
  1844  000097                     ___xxtofl@sign:
  1845                           	opt stack 0
  1846  000097                     ___awdiv@divisor:
  1847                           	opt stack 0
  1848  000097                     ___lmul@product:
  1849                           	opt stack 0
  1850  000097                     __div_to_l_@quot:
  1851                           	opt stack 0
  1852  000097                     ___lldiv@quotient:
  1853                           	opt stack 0
  1854                           
  1855                           ; 4 bytes @ 0x37
  1856  000097                     	ds	1
  1857  000098                     lcd_gotoxy@pos:
  1858                           	opt stack 0
  1859  000098                     ___aldiv@sign:
  1860                           	opt stack 0
  1861  000098                     ___xxtofl@exp:
  1862                           	opt stack 0
  1863  000098                     lcd_init@LCD_INIT_STRING:
  1864                           	opt stack 0
  1865                           
  1866                           ; 4 bytes @ 0x38
  1867  000098                     	ds	1
  1868  000099                     lcd_gotoxy@address:
  1869                           	opt stack 0
  1870  000099                     ___awdiv@counter:
  1871                           	opt stack 0
  1872  000099                     ___aldiv@quotient:
  1873                           	opt stack 0
  1874  000099                     ___xxtofl@arg:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x39
  1878  000099                     	ds	1
  1879  00009A                     ??_lcd_putc:
  1880  00009A                     ___awdiv@sign:
  1881                           	opt stack 0
  1882  00009A                     __tdiv_to_l_@quot:
  1883                           	opt stack 0
  1884                           
  1885                           ; 4 bytes @ 0x3A
  1886  00009A                     	ds	1
  1887  00009B                     lcd_putc@cha:
  1888                           	opt stack 0
  1889  00009B                     __div_to_l_@cntr:
  1890                           	opt stack 0
  1891  00009B                     ___lldiv@counter:
  1892                           	opt stack 0
  1893  00009B                     ___awdiv@quotient:
  1894                           	opt stack 0
  1895                           
  1896                           ; 2 bytes @ 0x3B
  1897  00009B                     	ds	1
  1898  00009C                     ?___llmod:
  1899                           	opt stack 0
  1900  00009C                     lcd_init@i:
  1901                           	opt stack 0
  1902  00009C                     putch@val:
  1903                           	opt stack 0
  1904  00009C                     __div_to_l_@exp1:
  1905                           	opt stack 0
  1906  00009C                     ___llmod@dividend:
  1907                           	opt stack 0
  1908                           
  1909                           ; 4 bytes @ 0x3C
  1910  00009C                     	ds	1
  1911  00009D                     ?___fldiv:
  1912                           	opt stack 0
  1913  00009D                     ?___flmul:
  1914                           	opt stack 0
  1915  00009D                     ___fldiv@b:
  1916                           	opt stack 0
  1917  00009D                     ___flmul@b:
  1918                           	opt stack 0
  1919                           
  1920                           ; 4 bytes @ 0x3D
  1921  00009D                     	ds	1
  1922  00009E                     __tdiv_to_l_@cntr:
  1923                           	opt stack 0
  1924                           
  1925                           ; 1 bytes @ 0x3E
  1926  00009E                     	ds	1
  1927  00009F                     __tdiv_to_l_@exp1:
  1928                           	opt stack 0
  1929                           
  1930                           ; 1 bytes @ 0x3F
  1931  00009F                     	ds	1
  1932  0000A0                     ___llmod@divisor:
  1933                           	opt stack 0
  1934                           
  1935                           ; 4 bytes @ 0x40
  1936  0000A0                     	ds	1
  1937  0000A1                     ___fldiv@a:
  1938                           	opt stack 0
  1939  0000A1                     ___flmul@a:
  1940                           	opt stack 0
  1941                           
  1942                           ; 4 bytes @ 0x41
  1943  0000A1                     	ds	3
  1944  0000A4                     ___llmod@counter:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x44
  1948  0000A4                     	ds	1
  1949  0000A5                     ??___fldiv:
  1950  0000A5                     ??___flmul:
  1951                           
  1952                           ; 1 bytes @ 0x45
  1953  0000A5                     	ds	4
  1954  0000A9                     ??_integrator:
  1955  0000A9                     confirmEdition@yes:
  1956                           	opt stack 0
  1957  0000A9                     ___fltol@sign1:
  1958                           	opt stack 0
  1959                           
  1960                           ; 1 bytes @ 0x49
  1961  0000A9                     	ds	1
  1962  0000AA                     ___fltol@exp1:
  1963                           	opt stack 0
  1964                           
  1965                           ; 1 bytes @ 0x4A
  1966  0000AA                     	ds	1
  1967  0000AB                     tblptru	equ	0xFF8
  1968                           tblptrh	equ	0xFF7
  1969                           tblptrl	equ	0xFF6
  1970                           tablat	equ	0xFF5
  1971                           postinc0	equ	0xFEE
  1972                           wreg	equ	0xFE8
  1973                           postdec1	equ	0xFE5
  1974                           fsr1l	equ	0xFE1
  1975                           
  1976                           ; 1 bytes @ 0x4B
  1977                           
  1978                           	psect	cstackCOMRAM
  1979  000001                     __pcstackCOMRAM:
  1980                           	opt stack 0
  1981  000001                     ?i2___xxtofl:
  1982                           	opt stack 0
  1983  000001                     i2setPWM2duty@actuator:
  1984                           	opt stack 0
  1985  000001                     i2___xxtofl@val:
  1986                           	opt stack 0
  1987                           
  1988                           ; 4 bytes @ 0x0
  1989  000001                     	ds	2
  1990  000003                     ??i2_setPWM2duty:
  1991                           
  1992                           ; 1 bytes @ 0x2
  1993  000003                     	ds	2
  1994  000005                     ??i2___xxtofl:
  1995  000005                     i2setPWM2duty@act:
  1996                           	opt stack 0
  1997                           
  1998                           ; 2 bytes @ 0x4
  1999  000005                     	ds	4
  2000  000009                     i2___xxtofl@sign:
  2001                           	opt stack 0
  2002                           
  2003                           ; 1 bytes @ 0x8
  2004  000009                     	ds	1
  2005  00000A                     i2___xxtofl@exp:
  2006                           	opt stack 0
  2007                           
  2008                           ; 1 bytes @ 0x9
  2009  00000A                     	ds	1
  2010  00000B                     i2___xxtofl@arg:
  2011                           	opt stack 0
  2012                           
  2013                           ; 4 bytes @ 0xA
  2014  00000B                     	ds	4
  2015  00000F                     i2___flge@ff1:
  2016                           	opt stack 0
  2017                           
  2018                           ; 4 bytes @ 0xE
  2019  00000F                     	ds	4
  2020  000013                     i2___flge@ff2:
  2021                           	opt stack 0
  2022                           
  2023                           ; 4 bytes @ 0x12
  2024  000013                     	ds	4
  2025  000017                     ??i2___flge:
  2026                           
  2027                           ; 1 bytes @ 0x16
  2028  000017                     	ds	4
  2029  00001B                     ??_T4int:
  2030                           
  2031                           ; 1 bytes @ 0x1A
  2032  00001B                     	ds	1
  2033  00001C                     ??_hp_isr:
  2034                           
  2035                           ; 1 bytes @ 0x1B
  2036  00001C                     	ds	14
  2037                           tblptru	equ	0xFF8
  2038                           tblptrh	equ	0xFF7
  2039                           tblptrl	equ	0xFF6
  2040                           tablat	equ	0xFF5
  2041                           postinc0	equ	0xFEE
  2042                           wreg	equ	0xFE8
  2043                           postdec1	equ	0xFE5
  2044                           fsr1l	equ	0xFE1
  2045                           
  2046 ;;
  2047 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2048 ;;
  2049 ;; *************** function _main *****************
  2050 ;; Defined at:
  2051 ;;		line 32 in file "source/main.c"
  2052 ;; Parameters:    Size  Location     Type
  2053 ;;		None
  2054 ;; Auto vars:     Size  Location     Type
  2055 ;;		None
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2065 ;;      Params:         0       0       0       0       0       0       0
  2066 ;;      Locals:         0       0       0       0       0       0       0
  2067 ;;      Temps:          0       0       0       0       0       0       0
  2068 ;;      Totals:         0       0       0       0       0       0       0
  2069 ;;Total ram usage:        0 bytes
  2070 ;; Hardware stack levels required when called:   18
  2071 ;; This function calls:
  2072 ;;		_EEPROMConfig
  2073 ;;		_PWM2Config
  2074 ;;		_UARTConfig
  2075 ;;		_buttonChecking
  2076 ;;		_clockConfig
  2077 ;;		_drawScreen
  2078 ;;		_interruptConfig
  2079 ;;		_ioConfig
  2080 ;;		_ioInitStt
  2081 ;;		_lcd_init
  2082 ;;		_saveSysParams
  2083 ;;		_setPWM2duty
  2084 ;;		_setPWM2on
  2085 ;;		_t4config
  2086 ;; This function is called by:
  2087 ;;		Startup code after reset
  2088 ;; This function uses a non-reentrant model
  2089 ;;
  2090                           
  2091                           	psect	text0
  2092  005B22                     __ptext0:
  2093                           	opt stack 0
  2094  005B22                     _main:
  2095                           	opt stack 13
  2096                           
  2097                           ;main.c: 34: clockConfig();
  2098                           
  2099                           ;incstack = 0
  2100  005B22  ECD6  F02F         	call	_clockConfig	;wreg free
  2101                           
  2102                           ;main.c: 35: t4config();
  2103  005B26  EC97  F02F         	call	_t4config	;wreg free
  2104                           
  2105                           ;main.c: 36: ioInitStt();
  2106  005B2A  EC62  F030         	call	_ioInitStt	;wreg free
  2107                           
  2108                           ;main.c: 37: EEPROMConfig();
  2109  005B2E  EC6A  F030         	call	_EEPROMConfig	;wreg free
  2110                           
  2111                           ;main.c: 38: saveSysParams();
  2112  005B32  EC45  F024         	call	_saveSysParams	;wreg free
  2113                           
  2114                           ;main.c: 40: ioConfig();
  2115  005B36  ECDA  F02E         	call	_ioConfig	;wreg free
  2116                           
  2117                           ;main.c: 41: lcd_init();
  2118  005B3A  EC80  F028         	call	_lcd_init	;wreg free
  2119                           
  2120                           ;main.c: 42: PWM2Config();
  2121  005B3E  EC5E  F02D         	call	_PWM2Config	;wreg free
  2122                           
  2123                           ;main.c: 43: UARTConfig();
  2124  005B42  ECA3  F02E         	call	_UARTConfig	;wreg free
  2125                           
  2126                           ;main.c: 44: interruptConfig();
  2127  005B46  EC66  F030         	call	_interruptConfig	;wreg free
  2128  005B4A  0004               	clrwdt		;# 
  2129                           
  2130                           ;main.c: 46: WDTCONbits.SWDTEN = 1;
  2131  005B4C  80D1               	bsf	4049,0,c	;volatile
  2132                           
  2133                           ;main.c: 47: setPWM2duty(-400);
  2134  005B4E  0EFE               	movlw	254
  2135  005B50  0100               	movlb	0	; () banked
  2136  005B52  6F90               	movwf	(setPWM2duty@actuator+1)& (0+255),b
  2137  005B54  0E70               	movlw	112
  2138  005B56  6F8F               	movwf	setPWM2duty@actuator& (0+255),b
  2139  005B58  EC6F  F029         	call	_setPWM2duty	;wreg free
  2140                           
  2141                           ;main.c: 48: setPWM2on(1);
  2142  005B5C  0E01               	movlw	1
  2143  005B5E  EC09  F030         	call	_setPWM2on
  2144  005B62                     l10799:
  2145                           
  2146                           ;main.c: 51: drawScreen();
  2147  005B62  EC2B  F028         	call	_drawScreen	;wreg free
  2148                           
  2149                           ;main.c: 52: buttonChecking();
  2150  005B66  EC90  F016         	call	_buttonChecking	;wreg free
  2151  005B6A  D7FB               	goto	l10799
  2152  005B6C                     __end_of_main:
  2153                           	opt stack 0
  2154                           tblptru	equ	0xFF8
  2155                           tblptrh	equ	0xFF7
  2156                           tblptrl	equ	0xFF6
  2157                           tablat	equ	0xFF5
  2158                           postinc0	equ	0xFEE
  2159                           wreg	equ	0xFE8
  2160                           postdec1	equ	0xFE5
  2161                           fsr1l	equ	0xFE1
  2162                           
  2163 ;; *************** function _t4config *****************
  2164 ;; Defined at:
  2165 ;;		line 32 in file "source/T4Config.h"
  2166 ;; Parameters:    Size  Location     Type
  2167 ;;		None
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;		None
  2170 ;; Return value:  Size  Location     Type
  2171 ;;                  1    wreg      void 
  2172 ;; Registers used:
  2173 ;;		wreg, status,2
  2174 ;; Tracked objects:
  2175 ;;		On entry : 0/0
  2176 ;;		On exit  : 0/0
  2177 ;;		Unchanged: 0/0
  2178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2179 ;;      Params:         0       0       0       0       0       0       0
  2180 ;;      Locals:         0       0       0       0       0       0       0
  2181 ;;      Temps:          0       0       0       0       0       0       0
  2182 ;;      Totals:         0       0       0       0       0       0       0
  2183 ;;Total ram usage:        0 bytes
  2184 ;; Hardware stack levels used:    1
  2185 ;; Hardware stack levels required when called:    8
  2186 ;; This function calls:
  2187 ;;		Nothing
  2188 ;; This function is called by:
  2189 ;;		_main
  2190 ;; This function uses a non-reentrant model
  2191 ;;
  2192                           
  2193                           	psect	text1
  2194  005F2E                     __ptext1:
  2195                           	opt stack 0
  2196  005F2E                     _t4config:
  2197                           	opt stack 22
  2198                           
  2199                           ;T4Config.h: 33: T4CONbits.TMR4ON = 0;
  2200                           
  2201                           ;incstack = 0
  2202  005F2E  010F               	movlb	15	; () banked
  2203  005F30  9551               	bcf	81,2,b	;volatile
  2204                           
  2205                           ; BSR set to: 15
  2206                           ;T4Config.h: 34: T4CONbits.T4CKPS = 0b01;
  2207  005F32  010F               	movlb	15	; () banked
  2208  005F34  5151               	movf	81,w,b	;volatile
  2209  005F36  0BFC               	andlw	-4
  2210  005F38  0901               	iorlw	1
  2211  005F3A  6F51               	movwf	81,b	;volatile
  2212                           
  2213                           ;T4Config.h: 35: T4CONbits.T4OUTPS = 0b0100;
  2214  005F3C  010F               	movlb	15	; () banked
  2215  005F3E  5151               	movf	81,w,b	;volatile
  2216  005F40  0B87               	andlw	-121
  2217  005F42  0920               	iorlw	32
  2218  005F44  6F51               	movwf	81,b	;volatile
  2219                           
  2220                           ;T4Config.h: 36: PR4 = 199;
  2221  005F46  0EC7               	movlw	199
  2222  005F48  010F               	movlb	15	; () banked
  2223  005F4A  6F52               	movwf	82,b	;volatile
  2224                           
  2225                           ; BSR set to: 15
  2226                           ;T4Config.h: 37: PIR5bits.TMR4IF = 0;
  2227  005F4C  907E               	bcf	3966,0,c	;volatile
  2228                           
  2229                           ; BSR set to: 15
  2230                           ;T4Config.h: 38: IPR5bits.TMR4IP = 1;
  2231  005F4E  807F               	bsf	3967,0,c	;volatile
  2232                           
  2233                           ; BSR set to: 15
  2234                           ;T4Config.h: 39: PIE5bits.TMR4IE = 1;
  2235  005F50  807D               	bsf	3965,0,c	;volatile
  2236                           
  2237                           ; BSR set to: 15
  2238                           ;T4Config.h: 40: T4CONbits.TMR4ON = 1;
  2239  005F52  010F               	movlb	15	; () banked
  2240  005F54  8551               	bsf	81,2,b	;volatile
  2241                           
  2242                           ; BSR set to: 15
  2243  005F56  0012               	return		;funcret
  2244  005F58                     __end_of_t4config:
  2245                           	opt stack 0
  2246                           tblptru	equ	0xFF8
  2247                           tblptrh	equ	0xFF7
  2248                           tblptrl	equ	0xFF6
  2249                           tablat	equ	0xFF5
  2250                           postinc0	equ	0xFEE
  2251                           wreg	equ	0xFE8
  2252                           postdec1	equ	0xFE5
  2253                           fsr1l	equ	0xFE1
  2254                           
  2255 ;; *************** function _setPWM2on *****************
  2256 ;; Defined at:
  2257 ;;		line 150 in file "source/PWMConfig.h"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  on              1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  on              1   47[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg, status,2
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2271 ;;      Params:         0       0       0       0       0       0       0
  2272 ;;      Locals:         0       1       0       0       0       0       0
  2273 ;;      Temps:          0       0       0       0       0       0       0
  2274 ;;      Totals:         0       1       0       0       0       0       0
  2275 ;;Total ram usage:        1 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    8
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_main
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           	psect	text2
  2286  006012                     __ptext2:
  2287                           	opt stack 0
  2288  006012                     _setPWM2on:
  2289                           	opt stack 22
  2290                           
  2291                           ; BSR set to: 15
  2292                           ;incstack = 0
  2293                           ;setPWM2on@on stored from wreg
  2294  006012  0100               	movlb	0	; () banked
  2295  006014  6F8F               	movwf	setPWM2on@on& (0+255),b
  2296                           
  2297                           ;PWMConfig.h: 151: if(on) {
  2298  006016  0100               	movlb	0	; () banked
  2299  006018  518F               	movf	setPWM2on@on& (0+255),w,b
  2300  00601A  0100               	movlb	0	; () banked
  2301  00601C  B4D8               	btfsc	status,2,c
  2302  00601E  D003               	goto	l522
  2303                           
  2304                           ; BSR set to: 0
  2305                           ;PWMConfig.h: 152: TRISCbits.TRISC0 = 0;
  2306  006020  9094               	bcf	3988,0,c	;volatile
  2307                           
  2308                           ;PWMConfig.h: 153: TRISCbits.TRISC1 = 0;
  2309  006022  9294               	bcf	3988,1,c	;volatile
  2310                           
  2311                           ;PWMConfig.h: 154: }else {
  2312  006024  0012               	return	
  2313  006026                     l522:
  2314                           
  2315                           ; BSR set to: 0
  2316                           ;PWMConfig.h: 155: TRISCbits.TRISC0 = 1;
  2317  006026  8094               	bsf	3988,0,c	;volatile
  2318                           
  2319                           ;PWMConfig.h: 156: TRISCbits.TRISC1 = 1;
  2320  006028  8294               	bsf	3988,1,c	;volatile
  2321  00602A  0012               	return	
  2322  00602C                     __end_of_setPWM2on:
  2323                           	opt stack 0
  2324                           tblptru	equ	0xFF8
  2325                           tblptrh	equ	0xFF7
  2326                           tblptrl	equ	0xFF6
  2327                           tablat	equ	0xFF5
  2328                           postinc0	equ	0xFEE
  2329                           wreg	equ	0xFE8
  2330                           postdec1	equ	0xFE5
  2331                           fsr1l	equ	0xFE1
  2332                           status	equ	0xFD8
  2333                           
  2334 ;; *************** function _lcd_init *****************
  2335 ;; Defined at:
  2336 ;;		line 179 in file "source/../../vclib_lcd.h"
  2337 ;; Parameters:    Size  Location     Type
  2338 ;;		None
  2339 ;; Auto vars:     Size  Location     Type
  2340 ;;  LCD_INIT_STR    4   56[BANK0 ] unsigned char [4]
  2341 ;;  i               1   60[BANK0 ] unsigned char 
  2342 ;; Return value:  Size  Location     Type
  2343 ;;                  1    wreg      void 
  2344 ;; Registers used:
  2345 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2346 ;; Tracked objects:
  2347 ;;		On entry : 0/0
  2348 ;;		On exit  : 0/0
  2349 ;;		Unchanged: 0/0
  2350 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2351 ;;      Params:         0       0       0       0       0       0       0
  2352 ;;      Locals:         0       5       0       0       0       0       0
  2353 ;;      Temps:          0       1       0       0       0       0       0
  2354 ;;      Totals:         0       6       0       0       0       0       0
  2355 ;;Total ram usage:        6 bytes
  2356 ;; Hardware stack levels used:    1
  2357 ;; Hardware stack levels required when called:   11
  2358 ;; This function calls:
  2359 ;;		_lcd_send_4bits
  2360 ;;		_lcd_send_byte
  2361 ;; This function is called by:
  2362 ;;		_main
  2363 ;; This function uses a non-reentrant model
  2364 ;;
  2365                           
  2366                           	psect	text3
  2367  005100                     __ptext3:
  2368                           	opt stack 0
  2369  005100                     _lcd_init:
  2370                           	opt stack 19
  2371                           
  2372                           ;vclib_lcd.h: 180: unsigned char i;
  2373                           ;vclib_lcd.h: 181: unsigned char LCD_INIT_STRING[4] = {0x20 | (2 << 2), 0xc, 1, 6};
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;incstack = 0
  2377  005100  C04B  F098         	movff	lcd_init@F7567,lcd_init@LCD_INIT_STRING
  2378  005104  C04C  F099         	movff	lcd_init@F7567+1,lcd_init@LCD_INIT_STRING+1
  2379  005108  C04D  F09A         	movff	lcd_init@F7567+2,lcd_init@LCD_INIT_STRING+2
  2380  00510C  C04E  F09B         	movff	lcd_init@F7567+3,lcd_init@LCD_INIT_STRING+3
  2381                           
  2382                           ;vclib_lcd.h: 184: PORTBbits.RB3 = 0;
  2383  005110  9681               	bcf	3969,3,c	;volatile
  2384                           
  2385                           ;vclib_lcd.h: 185: PORTBbits.RB1 = 0;
  2386  005112  9281               	bcf	3969,1,c	;volatile
  2387                           
  2388                           ;vclib_lcd.h: 186: PORTBbits.RB2 = 0;
  2389  005114  9481               	bcf	3969,2,c	;volatile
  2390                           
  2391                           ;vclib_lcd.h: 187: _delay((unsigned long)((15)*(16000000/4000.0)));
  2392  005116  0E4E               	movlw	78
  2393  005118  0100               	movlb	0	; () banked
  2394  00511A  6F97               	movwf	??_lcd_init& (0+255),b
  2395  00511C  0EEB               	movlw	235
  2396  00511E                     u14587:
  2397  00511E  2EE8               	decfsz	wreg,f,c
  2398  005120  D7FE               	goto	u14587
  2399  005122  2F97               	decfsz	??_lcd_init& (0+255),f,b
  2400  005124  D7FC               	goto	u14587
  2401  005126  F000               	nop	
  2402                           
  2403                           ;vclib_lcd.h: 188: for (i = 1; i <= 3; ++i) {
  2404  005128  0E01               	movlw	1
  2405  00512A  0100               	movlb	0	; () banked
  2406  00512C  6F9C               	movwf	lcd_init@i& (0+255),b
  2407  00512E                     l10329:
  2408                           
  2409                           ; BSR set to: 0
  2410  00512E  0E03               	movlw	3
  2411  005130  0100               	movlb	0	; () banked
  2412  005132  659C               	cpfsgt	lcd_init@i& (0+255),b
  2413  005134  D001               	goto	l10333
  2414  005136  D00F               	goto	l10341
  2415  005138                     l10333:
  2416                           
  2417                           ; BSR set to: 0
  2418                           ;vclib_lcd.h: 189: lcd_send_4bits(3);
  2419  005138  0E03               	movlw	3
  2420  00513A  EC4C  F02A         	call	_lcd_send_4bits
  2421                           
  2422                           ;vclib_lcd.h: 190: _delay((unsigned long)((5)*(16000000/4000.0)));
  2423  00513E  0E1A               	movlw	26
  2424  005140  0100               	movlb	0	; () banked
  2425  005142  6F97               	movwf	??_lcd_init& (0+255),b
  2426  005144  0EF8               	movlw	248
  2427  005146                     u14597:
  2428  005146  2EE8               	decfsz	wreg,f,c
  2429  005148  D7FE               	goto	u14597
  2430  00514A  2F97               	decfsz	??_lcd_init& (0+255),f,b
  2431  00514C  D7FC               	goto	u14597
  2432  00514E  D000               	nop2	
  2433  005150  0100               	movlb	0	; () banked
  2434  005152  2B9C               	incf	lcd_init@i& (0+255),f,b
  2435  005154  D7EC               	goto	l10329
  2436  005156                     l10341:
  2437                           
  2438                           ; BSR set to: 0
  2439                           ;vclib_lcd.h: 191: }
  2440                           ;vclib_lcd.h: 192: lcd_send_4bits(2);
  2441  005156  0E02               	movlw	2
  2442  005158  EC4C  F02A         	call	_lcd_send_4bits
  2443                           
  2444                           ;vclib_lcd.h: 193: _delay((unsigned long)((5)*(16000000/4000.0)));
  2445  00515C  0E1A               	movlw	26
  2446  00515E  0100               	movlb	0	; () banked
  2447  005160  6F97               	movwf	??_lcd_init& (0+255),b
  2448  005162  0EF8               	movlw	248
  2449  005164                     u14607:
  2450  005164  2EE8               	decfsz	wreg,f,c
  2451  005166  D7FE               	goto	u14607
  2452  005168  2F97               	decfsz	??_lcd_init& (0+255),f,b
  2453  00516A  D7FC               	goto	u14607
  2454  00516C  D000               	nop2	
  2455                           
  2456                           ;vclib_lcd.h: 194: for (i = 0; i <= 3; ++i)
  2457  00516E  0E00               	movlw	0
  2458  005170  0100               	movlb	0	; () banked
  2459  005172  6F9C               	movwf	lcd_init@i& (0+255),b
  2460  005174                     l10347:
  2461                           
  2462                           ; BSR set to: 0
  2463  005174  0E03               	movlw	3
  2464  005176  0100               	movlb	0	; () banked
  2465  005178  659C               	cpfsgt	lcd_init@i& (0+255),b
  2466  00517A  D001               	goto	l10351
  2467  00517C  0012               	return	
  2468  00517E                     l10351:
  2469                           
  2470                           ; BSR set to: 0
  2471                           ;vclib_lcd.h: 195: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2472  00517E  0100               	movlb	0	; () banked
  2473  005180  519C               	movf	lcd_init@i& (0+255),w,b
  2474  005182  0D01               	mullw	1
  2475  005184  0E98               	movlw	low lcd_init@LCD_INIT_STRING
  2476  005186  24F3               	addwf	prodl,w,c
  2477  005188  6ED9               	movwf	fsr2l,c
  2478  00518A  0E00               	movlw	high lcd_init@LCD_INIT_STRING
  2479  00518C  20F4               	addwfc	prodh,w,c
  2480  00518E  6EDA               	movwf	fsr2h,c
  2481  005190  50DF               	movf	indf2,w,c
  2482  005192  0100               	movlb	0	; () banked
  2483  005194  6F94               	movwf	lcd_send_byte@n& (0+255),b
  2484  005196  0E00               	movlw	0
  2485  005198  EC66  F02E         	call	_lcd_send_byte
  2486  00519C  0100               	movlb	0	; () banked
  2487  00519E  2B9C               	incf	lcd_init@i& (0+255),f,b
  2488  0051A0  D7E9               	goto	l10347
  2489  0051A2                     __end_of_lcd_init:
  2490                           	opt stack 0
  2491                           tblptru	equ	0xFF8
  2492                           tblptrh	equ	0xFF7
  2493                           tblptrl	equ	0xFF6
  2494                           tablat	equ	0xFF5
  2495                           prodh	equ	0xFF4
  2496                           prodl	equ	0xFF3
  2497                           postinc0	equ	0xFEE
  2498                           wreg	equ	0xFE8
  2499                           postdec1	equ	0xFE5
  2500                           fsr1l	equ	0xFE1
  2501                           indf2	equ	0xFDF
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _ioInitStt *****************
  2507 ;; Defined at:
  2508 ;;		line 85 in file "source/IOConfig.h"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;		None
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		None
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         0       0       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0       0       0       0       0       0       0
  2526 ;;Total ram usage:        0 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    8
  2529 ;; This function calls:
  2530 ;;		Nothing
  2531 ;; This function is called by:
  2532 ;;		_main
  2533 ;; This function uses a non-reentrant model
  2534 ;;
  2535                           
  2536                           	psect	text4
  2537  0060C4                     __ptext4:
  2538                           	opt stack 0
  2539  0060C4                     _ioInitStt:
  2540                           	opt stack 22
  2541                           
  2542                           ;IOConfig.h: 86: LATCbits.LATC4 = 0;
  2543                           
  2544                           ; BSR set to: 0
  2545                           ;incstack = 0
  2546  0060C4  988B               	bcf	3979,4,c	;volatile
  2547                           
  2548                           ;IOConfig.h: 87: LATBbits.LATB0 = 0;
  2549  0060C6  908A               	bcf	3978,0,c	;volatile
  2550                           
  2551                           ;IOConfig.h: 88: LATCbits.LATC5 = 0;
  2552  0060C8  9A8B               	bcf	3979,5,c	;volatile
  2553  0060CA  0012               	return		;funcret
  2554  0060CC                     __end_of_ioInitStt:
  2555                           	opt stack 0
  2556                           tblptru	equ	0xFF8
  2557                           tblptrh	equ	0xFF7
  2558                           tblptrl	equ	0xFF6
  2559                           tablat	equ	0xFF5
  2560                           prodh	equ	0xFF4
  2561                           prodl	equ	0xFF3
  2562                           postinc0	equ	0xFEE
  2563                           wreg	equ	0xFE8
  2564                           postdec1	equ	0xFE5
  2565                           fsr1l	equ	0xFE1
  2566                           indf2	equ	0xFDF
  2567                           fsr2h	equ	0xFDA
  2568                           fsr2l	equ	0xFD9
  2569                           status	equ	0xFD8
  2570                           
  2571 ;; *************** function _ioConfig *****************
  2572 ;; Defined at:
  2573 ;;		line 68 in file "source/IOConfig.h"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;		None
  2576 ;; Auto vars:     Size  Location     Type
  2577 ;;		None
  2578 ;; Return value:  Size  Location     Type
  2579 ;;                  1    wreg      void 
  2580 ;; Registers used:
  2581 ;;		None
  2582 ;; Tracked objects:
  2583 ;;		On entry : 0/0
  2584 ;;		On exit  : 0/0
  2585 ;;		Unchanged: 0/0
  2586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2587 ;;      Params:         0       0       0       0       0       0       0
  2588 ;;      Locals:         0       0       0       0       0       0       0
  2589 ;;      Temps:          0       0       0       0       0       0       0
  2590 ;;      Totals:         0       0       0       0       0       0       0
  2591 ;;Total ram usage:        0 bytes
  2592 ;; Hardware stack levels used:    1
  2593 ;; Hardware stack levels required when called:    8
  2594 ;; This function calls:
  2595 ;;		Nothing
  2596 ;; This function is called by:
  2597 ;;		_main
  2598 ;; This function uses a non-reentrant model
  2599 ;;
  2600                           
  2601                           	psect	text5
  2602  005DB4                     __ptext5:
  2603                           	opt stack 0
  2604  005DB4                     _ioConfig:
  2605                           	opt stack 22
  2606                           
  2607                           ;IOConfig.h: 69: TRISBbits.TRISB1 = 0;
  2608                           
  2609                           ;incstack = 0
  2610  005DB4  9293               	bcf	3987,1,c	;volatile
  2611                           
  2612                           ;IOConfig.h: 70: TRISBbits.TRISB2 = 0;
  2613  005DB6  9493               	bcf	3987,2,c	;volatile
  2614                           
  2615                           ;IOConfig.h: 71: TRISBbits.TRISB3 = 0;
  2616  005DB8  9693               	bcf	3987,3,c	;volatile
  2617                           
  2618                           ;IOConfig.h: 72: TRISBbits.TRISB0 = 0;
  2619  005DBA  9093               	bcf	3987,0,c	;volatile
  2620                           
  2621                           ;IOConfig.h: 73: TRISCbits.TRISC5 = 0;
  2622  005DBC  9A94               	bcf	3988,5,c	;volatile
  2623                           
  2624                           ;IOConfig.h: 74: TRISAbits.TRISA7 = 1;
  2625  005DBE  8E92               	bsf	3986,7,c	;volatile
  2626                           
  2627                           ;IOConfig.h: 75: TRISAbits.TRISA6 = 1;
  2628  005DC0  8C92               	bsf	3986,6,c	;volatile
  2629                           
  2630                           ;IOConfig.h: 76: TRISCbits.TRISC2 = 1; ANSELCbits.ANSC2 = 0;
  2631  005DC2  8494               	bsf	3988,2,c	;volatile
  2632  005DC4  010F               	movlb	15	; () banked
  2633  005DC6  953A               	bcf	58,2,b	;volatile
  2634                           
  2635                           ;IOConfig.h: 77: TRISCbits.TRISC3 = 1; ANSELCbits.ANSC3 = 0;
  2636  005DC8  8694               	bsf	3988,3,c	;volatile
  2637  005DCA  010F               	movlb	15	; () banked
  2638  005DCC  973A               	bcf	58,3,b	;volatile
  2639                           
  2640                           ;IOConfig.h: 78: TRISAbits.TRISA2 = 1; ANSELAbits.ANSA2 = 0;
  2641  005DCE  8492               	bsf	3986,2,c	;volatile
  2642  005DD0  010F               	movlb	15	; () banked
  2643  005DD2  9538               	bcf	56,2,b	;volatile
  2644                           
  2645                           ;IOConfig.h: 79: TRISAbits.TRISA3 = 1; ANSELAbits.ANSA3 = 0;
  2646  005DD4  8692               	bsf	3986,3,c	;volatile
  2647  005DD6  010F               	movlb	15	; () banked
  2648  005DD8  9738               	bcf	56,3,b	;volatile
  2649                           
  2650                           ;IOConfig.h: 80: TRISAbits.TRISA4 = 1;
  2651  005DDA  8892               	bsf	3986,4,c	;volatile
  2652                           
  2653                           ;IOConfig.h: 81: TRISAbits.TRISA5 = 1; ANSELAbits.ANSA5 = 0;
  2654  005DDC  8A92               	bsf	3986,5,c	;volatile
  2655  005DDE  010F               	movlb	15	; () banked
  2656  005DE0  9B38               	bcf	56,5,b	;volatile
  2657                           
  2658                           ;IOConfig.h: 82: TRISCbits.TRISC4 = 0;
  2659  005DE2  9894               	bcf	3988,4,c	;volatile
  2660                           
  2661                           ; BSR set to: 15
  2662  005DE4  0012               	return		;funcret
  2663  005DE6                     __end_of_ioConfig:
  2664                           	opt stack 0
  2665                           tblptru	equ	0xFF8
  2666                           tblptrh	equ	0xFF7
  2667                           tblptrl	equ	0xFF6
  2668                           tablat	equ	0xFF5
  2669                           prodh	equ	0xFF4
  2670                           prodl	equ	0xFF3
  2671                           postinc0	equ	0xFEE
  2672                           wreg	equ	0xFE8
  2673                           postdec1	equ	0xFE5
  2674                           fsr1l	equ	0xFE1
  2675                           indf2	equ	0xFDF
  2676                           fsr2h	equ	0xFDA
  2677                           fsr2l	equ	0xFD9
  2678                           status	equ	0xFD8
  2679                           
  2680 ;; *************** function _interruptConfig *****************
  2681 ;; Defined at:
  2682 ;;		line 89 in file "source/SYSConfig.h"
  2683 ;; Parameters:    Size  Location     Type
  2684 ;;		None
  2685 ;; Auto vars:     Size  Location     Type
  2686 ;;		None
  2687 ;; Return value:  Size  Location     Type
  2688 ;;                  1    wreg      void 
  2689 ;; Registers used:
  2690 ;;		None
  2691 ;; Tracked objects:
  2692 ;;		On entry : 0/0
  2693 ;;		On exit  : 0/0
  2694 ;;		Unchanged: 0/0
  2695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2696 ;;      Params:         0       0       0       0       0       0       0
  2697 ;;      Locals:         0       0       0       0       0       0       0
  2698 ;;      Temps:          0       0       0       0       0       0       0
  2699 ;;      Totals:         0       0       0       0       0       0       0
  2700 ;;Total ram usage:        0 bytes
  2701 ;; Hardware stack levels used:    1
  2702 ;; Hardware stack levels required when called:    8
  2703 ;; This function calls:
  2704 ;;		Nothing
  2705 ;; This function is called by:
  2706 ;;		_main
  2707 ;; This function uses a non-reentrant model
  2708 ;;
  2709                           
  2710                           	psect	text6
  2711  0060CC                     __ptext6:
  2712                           	opt stack 0
  2713  0060CC                     _interruptConfig:
  2714                           	opt stack 22
  2715                           
  2716                           ;SYSConfig.h: 90: RCONbits.IPEN = 1;
  2717                           
  2718                           ; BSR set to: 15
  2719                           ;incstack = 0
  2720  0060CC  8ED0               	bsf	4048,7,c	;volatile
  2721                           
  2722                           ;SYSConfig.h: 91: INTCONbits.PEIE = 1;
  2723  0060CE  8CF2               	bsf	intcon,6,c	;volatile
  2724                           
  2725                           ;SYSConfig.h: 92: INTCONbits.GIE = 1;
  2726  0060D0  8EF2               	bsf	intcon,7,c	;volatile
  2727  0060D2  0012               	return		;funcret
  2728  0060D4                     __end_of_interruptConfig:
  2729                           	opt stack 0
  2730                           tblptru	equ	0xFF8
  2731                           tblptrh	equ	0xFF7
  2732                           tblptrl	equ	0xFF6
  2733                           tablat	equ	0xFF5
  2734                           prodh	equ	0xFF4
  2735                           prodl	equ	0xFF3
  2736                           intcon	equ	0xFF2
  2737                           postinc0	equ	0xFEE
  2738                           wreg	equ	0xFE8
  2739                           postdec1	equ	0xFE5
  2740                           fsr1l	equ	0xFE1
  2741                           indf2	equ	0xFDF
  2742                           fsr2h	equ	0xFDA
  2743                           fsr2l	equ	0xFD9
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _drawScreen *****************
  2747 ;; Defined at:
  2748 ;;		line 244 in file "source/screenDrawers.h"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;		None
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;		None
  2753 ;; Return value:  Size  Location     Type
  2754 ;;                  1    wreg      void 
  2755 ;; Registers used:
  2756 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2757 ;; Tracked objects:
  2758 ;;		On entry : 0/0
  2759 ;;		On exit  : 0/0
  2760 ;;		Unchanged: 0/0
  2761 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2762 ;;      Params:         0       0       0       0       0       0       0
  2763 ;;      Locals:         0       0       0       0       0       0       0
  2764 ;;      Temps:          0       0       0       0       0       0       0
  2765 ;;      Totals:         0       0       0       0       0       0       0
  2766 ;;Total ram usage:        0 bytes
  2767 ;; Hardware stack levels used:    1
  2768 ;; Hardware stack levels required when called:   17
  2769 ;; This function calls:
  2770 ;;		_drawAdvOFF
  2771 ;;		_drawAdvON
  2772 ;;		_drawAutoCalibRM
  2773 ;;		_drawBadPass
  2774 ;;		_drawChanVal
  2775 ;;		_drawMenu
  2776 ;;		_drawPassWord
  2777 ;;		_drawSNquest
  2778 ;; This function is called by:
  2779 ;;		_main
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text7
  2784  005056                     __ptext7:
  2785                           	opt stack 0
  2786  005056                     _drawScreen:
  2787                           	opt stack 13
  2788                           
  2789                           ;screenDrawers.h: 245: switch (actualScreen) {
  2790                           
  2791                           ;incstack = 0
  2792  005056  D02A               	goto	l10429
  2793  005058                     l10403:
  2794                           
  2795                           ;screenDrawers.h: 247: drawMenu(0);
  2796  005058  0E00               	movlw	0
  2797  00505A  ECE9  F017         	call	_drawMenu
  2798                           
  2799                           ;screenDrawers.h: 248: break;
  2800  00505E  0012               	return	
  2801  005060                     l10405:
  2802                           
  2803                           ;screenDrawers.h: 250: drawPassWord();
  2804  005060  ECC9  F021         	call	_drawPassWord	;wreg free
  2805                           
  2806                           ;screenDrawers.h: 251: break;
  2807  005064  0012               	return	
  2808  005066                     l10407:
  2809                           
  2810                           ;screenDrawers.h: 253: drawBadPass();
  2811  005066  EC3D  F02F         	call	_drawBadPass	;wreg free
  2812                           
  2813                           ;screenDrawers.h: 254: break;
  2814  00506A  0012               	return	
  2815  00506C                     l10409:
  2816                           
  2817                           ;screenDrawers.h: 256: drawMenu(1);
  2818  00506C  0E01               	movlw	1
  2819  00506E  ECE9  F017         	call	_drawMenu
  2820                           
  2821                           ;screenDrawers.h: 257: break;
  2822  005072  0012               	return	
  2823  005074                     l10411:
  2824                           
  2825                           ;screenDrawers.h: 259: drawAdvON();
  2826  005074  EC54  F02F         	call	_drawAdvON	;wreg free
  2827                           
  2828                           ;screenDrawers.h: 260: break;
  2829  005078  0012               	return	
  2830  00507A                     l10413:
  2831                           
  2832                           ;screenDrawers.h: 262: drawAdvOFF();
  2833  00507A  EC6B  F02F         	call	_drawAdvOFF	;wreg free
  2834                           
  2835                           ;screenDrawers.h: 263: break;
  2836  00507E  0012               	return	
  2837  005080                     l10415:
  2838                           
  2839                           ;screenDrawers.h: 265: drawChanVal();
  2840  005080  ECBD  F026         	call	_drawChanVal	;wreg free
  2841                           
  2842                           ;screenDrawers.h: 266: break;
  2843  005084  0012               	return	
  2844  005086                     l10417:
  2845                           
  2846                           ;screenDrawers.h: 268: drawSNquest(0);
  2847  005086  0E00               	movlw	0
  2848  005088  ECCD  F023         	call	_drawSNquest
  2849                           
  2850                           ;screenDrawers.h: 269: break;
  2851  00508C  0012               	return	
  2852  00508E                     l10419:
  2853                           
  2854                           ;screenDrawers.h: 271: drawSNquest(1);
  2855  00508E  0E01               	movlw	1
  2856  005090  ECCD  F023         	call	_drawSNquest
  2857                           
  2858                           ;screenDrawers.h: 272: break;
  2859  005094  0012               	return	
  2860  005096                     l10421:
  2861                           
  2862                           ;screenDrawers.h: 274: drawSNquest(2);
  2863  005096  0E02               	movlw	2
  2864  005098  ECCD  F023         	call	_drawSNquest
  2865                           
  2866                           ;screenDrawers.h: 275: break;
  2867  00509C  0012               	return	
  2868  00509E                     l10423:
  2869                           
  2870                           ;screenDrawers.h: 277: drawSNquest(3);
  2871  00509E  0E03               	movlw	3
  2872  0050A0  ECCD  F023         	call	_drawSNquest
  2873                           
  2874                           ;screenDrawers.h: 281: break;
  2875                           
  2876                           ;screenDrawers.h: 279: }case (6): {
  2877                           
  2878                           ;screenDrawers.h: 278: break;
  2879  0050A4  0012               	return	
  2880  0050A6                     l10425:
  2881                           
  2882                           ;screenDrawers.h: 283: drawAutoCalibRM();
  2883  0050A6  ECF3  F02E         	call	_drawAutoCalibRM	;wreg free
  2884                           
  2885                           ;screenDrawers.h: 285: }
  2886                           ;screenDrawers.h: 286: }
  2887                           
  2888                           ;screenDrawers.h: 284: break;
  2889  0050AA  0012               	return	
  2890  0050AC                     l10429:
  2891  0050AC  0100               	movlb	0	; () banked
  2892  0050AE  51B8               	movf	_actualScreen& (0+255),w,b
  2893                           
  2894                           ; Switch size 1, requested type "space"
  2895                           ; Number of cases is 13, Range of values is 0 to 12
  2896                           ; switch strategies available:
  2897                           ; Name         Instructions Cycles
  2898                           ; simple_byte           40    21 (average)
  2899                           ;	Chosen strategy is simple_byte
  2900  0050B0  0A00               	xorlw	0	; case 0
  2901  0050B2  B4D8               	btfsc	status,2,c
  2902  0050B4  D7D1               	goto	l10403
  2903  0050B6  0A01               	xorlw	1	; case 1
  2904  0050B8  B4D8               	btfsc	status,2,c
  2905  0050BA  D7D2               	goto	l10405
  2906  0050BC  0A03               	xorlw	3	; case 2
  2907  0050BE  B4D8               	btfsc	status,2,c
  2908  0050C0  D7E2               	goto	l10417
  2909  0050C2  0A01               	xorlw	1	; case 3
  2910  0050C4  B4D8               	btfsc	status,2,c
  2911  0050C6  D7E3               	goto	l10419
  2912  0050C8  0A07               	xorlw	7	; case 4
  2913  0050CA  B4D8               	btfsc	status,2,c
  2914  0050CC  D7CF               	goto	l10409
  2915  0050CE  0A01               	xorlw	1	; case 5
  2916  0050D0  B4D8               	btfsc	status,2,c
  2917  0050D2  D7D6               	goto	l10415
  2918  0050D4  0A03               	xorlw	3	; case 6
  2919  0050D6  B4D8               	btfsc	status,2,c
  2920  0050D8  0012               	return	
  2921  0050DA  0A01               	xorlw	1	; case 7
  2922  0050DC  B4D8               	btfsc	status,2,c
  2923  0050DE  D7C3               	goto	l10407
  2924  0050E0  0A0F               	xorlw	15	; case 8
  2925  0050E2  B4D8               	btfsc	status,2,c
  2926  0050E4  D7C7               	goto	l10411
  2927  0050E6  0A01               	xorlw	1	; case 9
  2928  0050E8  B4D8               	btfsc	status,2,c
  2929  0050EA  D7C7               	goto	l10413
  2930  0050EC  0A03               	xorlw	3	; case 10
  2931  0050EE  B4D8               	btfsc	status,2,c
  2932  0050F0  D7D2               	goto	l10421
  2933  0050F2  0A01               	xorlw	1	; case 11
  2934  0050F4  B4D8               	btfsc	status,2,c
  2935  0050F6  D7D3               	goto	l10423
  2936  0050F8  0A07               	xorlw	7	; case 12
  2937  0050FA  A4D8               	btfss	status,2,c
  2938  0050FC  0012               	return	
  2939  0050FE  D7D3               	goto	l10425
  2940  005100                     __end_of_drawScreen:
  2941                           	opt stack 0
  2942                           tblptru	equ	0xFF8
  2943                           tblptrh	equ	0xFF7
  2944                           tblptrl	equ	0xFF6
  2945                           tablat	equ	0xFF5
  2946                           prodh	equ	0xFF4
  2947                           prodl	equ	0xFF3
  2948                           intcon	equ	0xFF2
  2949                           postinc0	equ	0xFEE
  2950                           wreg	equ	0xFE8
  2951                           postdec1	equ	0xFE5
  2952                           fsr1l	equ	0xFE1
  2953                           indf2	equ	0xFDF
  2954                           fsr2h	equ	0xFDA
  2955                           fsr2l	equ	0xFD9
  2956                           status	equ	0xFD8
  2957                           
  2958 ;; *************** function _drawSNquest *****************
  2959 ;; Defined at:
  2960 ;;		line 214 in file "source/screenDrawers.h"
  2961 ;; Parameters:    Size  Location     Type
  2962 ;;  tq              1    wreg     unsigned char 
  2963 ;; Auto vars:     Size  Location     Type
  2964 ;;  tq              1  109[BANK1 ] unsigned char 
  2965 ;;  i               2  107[BANK1 ] int 
  2966 ;; Return value:  Size  Location     Type
  2967 ;;                  1    wreg      void 
  2968 ;; Registers used:
  2969 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2970 ;; Tracked objects:
  2971 ;;		On entry : 0/0
  2972 ;;		On exit  : 0/0
  2973 ;;		Unchanged: 0/0
  2974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2975 ;;      Params:         0       0       0       0       0       0       0
  2976 ;;      Locals:         0       0       3       0       0       0       0
  2977 ;;      Temps:          0       0       0       0       0       0       0
  2978 ;;      Totals:         0       0       3       0       0       0       0
  2979 ;;Total ram usage:        3 bytes
  2980 ;; Hardware stack levels used:    1
  2981 ;; Hardware stack levels required when called:   15
  2982 ;; This function calls:
  2983 ;;		_lcd_gotoxy
  2984 ;;		_printf
  2985 ;; This function is called by:
  2986 ;;		_drawScreen
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           	psect	text8
  2991  00479A                     __ptext8:
  2992                           	opt stack 0
  2993  00479A                     _drawSNquest:
  2994                           	opt stack 14
  2995                           
  2996                           ;incstack = 0
  2997                           ;drawSNquest@tq stored from wreg
  2998  00479A  0101               	movlb	1	; () banked
  2999  00479C  6F6D               	movwf	drawSNquest@tq& (0+255),b
  3000                           
  3001                           ;screenDrawers.h: 215: int i;
  3002                           ;screenDrawers.h: 216: for (i = 0; i < 2; i++)
  3003  00479E  0E00               	movlw	0
  3004  0047A0  0101               	movlb	1	; () banked
  3005  0047A2  6F6C               	movwf	(drawSNquest@i+1)& (0+255),b
  3006  0047A4  0E00               	movlw	0
  3007  0047A6  6F6B               	movwf	drawSNquest@i& (0+255),b
  3008  0047A8                     l10077:
  3009                           
  3010                           ; BSR set to: 1
  3011  0047A8  0101               	movlb	1	; () banked
  3012  0047AA  BF6C               	btfsc	(drawSNquest@i+1)& (0+255),7,b
  3013  0047AC  D008               	goto	l10081
  3014  0047AE  0101               	movlb	1	; () banked
  3015  0047B0  516C               	movf	(drawSNquest@i+1)& (0+255),w,b
  3016  0047B2  E113               	bnz	l10087
  3017  0047B4  0E02               	movlw	2
  3018  0047B6  0101               	movlb	1	; () banked
  3019  0047B8  5D6B               	subwf	drawSNquest@i& (0+255),w,b
  3020  0047BA  B0D8               	btfsc	status,0,c
  3021  0047BC  D00E               	goto	l10087
  3022  0047BE                     l10081:
  3023                           
  3024                           ; BSR set to: 1
  3025                           ;screenDrawers.h: 217: questSN[i] = ' ';
  3026  0047BE  0EB1               	movlw	low _questSN
  3027  0047C0  0101               	movlb	1	; () banked
  3028  0047C2  256B               	addwf	drawSNquest@i& (0+255),w,b
  3029  0047C4  6ED9               	movwf	fsr2l,c
  3030  0047C6  0E00               	movlw	high _questSN
  3031  0047C8  0101               	movlb	1	; () banked
  3032  0047CA  216C               	addwfc	(drawSNquest@i+1)& (0+255),w,b
  3033  0047CC  6EDA               	movwf	fsr2h,c
  3034  0047CE  0E20               	movlw	32
  3035  0047D0  6EDF               	movwf	indf2,c
  3036                           
  3037                           ; BSR set to: 1
  3038  0047D2  0101               	movlb	1	; () banked
  3039  0047D4  4B6B               	infsnz	drawSNquest@i& (0+255),f,b
  3040  0047D6  2B6C               	incf	(drawSNquest@i+1)& (0+255),f,b
  3041  0047D8  D7E7               	goto	l10077
  3042  0047DA                     l10087:
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;screenDrawers.h: 218: questSN[selSN] = 0b01111110;
  3046  0047DA  0100               	movlb	0	; () banked
  3047  0047DC  51C1               	movf	_selSN& (0+255),w,b
  3048  0047DE  0D01               	mullw	1
  3049  0047E0  0EB1               	movlw	low _questSN
  3050  0047E2  24F3               	addwf	prodl,w,c
  3051  0047E4  6ED9               	movwf	fsr2l,c
  3052  0047E6  0E00               	movlw	high _questSN
  3053  0047E8  20F4               	addwfc	prodh,w,c
  3054  0047EA  6EDA               	movwf	fsr2h,c
  3055  0047EC  0E7E               	movlw	126
  3056  0047EE  6EDF               	movwf	indf2,c
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;screenDrawers.h: 219: lcd_gotoxy(1, 1);
  3060  0047F0  0E01               	movlw	1
  3061  0047F2  0100               	movlb	0	; () banked
  3062  0047F4  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3063  0047F6  0E01               	movlw	1
  3064  0047F8  EC25  F02F         	call	_lcd_gotoxy
  3065                           
  3066                           ;screenDrawers.h: 220: if (tq == 0)
  3067  0047FC  0101               	movlb	1	; () banked
  3068  0047FE  516D               	movf	drawSNquest@tq& (0+255),w,b
  3069  004800  0101               	movlb	1	; () banked
  3070  004802  A4D8               	btfss	status,2,c
  3071  004804  D009               	goto	l10095
  3072                           
  3073                           ; BSR set to: 1
  3074                           ;screenDrawers.h: 221: printf("Iniciar Proceso?\n");
  3075  004806  0E8B               	movlw	low STR_33
  3076  004808  0101               	movlb	1	; () banked
  3077  00480A  6F36               	movwf	printf@f& (0+255),b
  3078  00480C  0E7E               	movlw	high STR_33
  3079  00480E  0101               	movlb	1	; () banked
  3080  004810  6F37               	movwf	(printf@f+1)& (0+255),b
  3081  004812  EC61  F000         	call	_printf	;wreg free
  3082  004816  D028               	goto	l431
  3083  004818                     l10095:
  3084                           
  3085                           ;screenDrawers.h: 222: else if(tq == 1)
  3086  004818  0101               	movlb	1	; () banked
  3087  00481A  056D               	decf	drawSNquest@tq& (0+255),w,b
  3088  00481C  A4D8               	btfss	status,2,c
  3089  00481E  D009               	goto	l10099
  3090                           
  3091                           ; BSR set to: 1
  3092                           ;screenDrawers.h: 223: printf("Detener Proceso?\n");
  3093  004820  0E9D               	movlw	low STR_34
  3094  004822  0101               	movlb	1	; () banked
  3095  004824  6F36               	movwf	printf@f& (0+255),b
  3096  004826  0E7E               	movlw	high STR_34
  3097  004828  0101               	movlb	1	; () banked
  3098  00482A  6F37               	movwf	(printf@f+1)& (0+255),b
  3099  00482C  EC61  F000         	call	_printf	;wreg free
  3100  004830  D01B               	goto	l431
  3101  004832                     l10099:
  3102                           
  3103                           ;screenDrawers.h: 224: else if(tq == 2)
  3104  004832  0E02               	movlw	2
  3105  004834  0101               	movlb	1	; () banked
  3106  004836  196D               	xorwf	drawSNquest@tq& (0+255),w,b
  3107  004838  A4D8               	btfss	status,2,c
  3108  00483A  D009               	goto	l10103
  3109                           
  3110                           ; BSR set to: 1
  3111                           ;screenDrawers.h: 225: printf("Guardar Cambio? \n");
  3112  00483C  0E43               	movlw	low STR_35
  3113  00483E  0101               	movlb	1	; () banked
  3114  004840  6F36               	movwf	printf@f& (0+255),b
  3115  004842  0E7E               	movlw	high STR_35
  3116  004844  0101               	movlb	1	; () banked
  3117  004846  6F37               	movwf	(printf@f+1)& (0+255),b
  3118  004848  EC61  F000         	call	_printf	;wreg free
  3119  00484C  D00D               	goto	l431
  3120  00484E                     l10103:
  3121                           
  3122                           ;screenDrawers.h: 226: else if(tq == 3)
  3123  00484E  0E03               	movlw	3
  3124  004850  0101               	movlb	1	; () banked
  3125  004852  196D               	xorwf	drawSNquest@tq& (0+255),w,b
  3126  004854  A4D8               	btfss	status,2,c
  3127  004856  D008               	goto	l431
  3128                           
  3129                           ; BSR set to: 1
  3130                           ;screenDrawers.h: 227: printf("Init autoCalib? \n");
  3131  004858  0E31               	movlw	low STR_36
  3132  00485A  0101               	movlb	1	; () banked
  3133  00485C  6F36               	movwf	printf@f& (0+255),b
  3134  00485E  0E7E               	movlw	high STR_36
  3135  004860  0101               	movlb	1	; () banked
  3136  004862  6F37               	movwf	(printf@f+1)& (0+255),b
  3137  004864  EC61  F000         	call	_printf	;wreg free
  3138  004868                     l431:
  3139                           
  3140                           ;screenDrawers.h: 228: printf("   %cSI    %cNO   ", questSN[0], questSN[1]);
  3141  004868  0EC4               	movlw	low STR_37
  3142  00486A  0101               	movlb	1	; () banked
  3143  00486C  6F36               	movwf	printf@f& (0+255),b
  3144  00486E  0E7D               	movlw	high STR_37
  3145  004870  0101               	movlb	1	; () banked
  3146  004872  6F37               	movwf	(printf@f+1)& (0+255),b
  3147  004874  C0B1  F138         	movff	_questSN,?_printf+2
  3148  004878  0101               	movlb	1	; () banked
  3149  00487A  6B39               	clrf	(?_printf+3)& (0+255),b
  3150  00487C  C0B2  F13A         	movff	_questSN+1,?_printf+4
  3151  004880  0101               	movlb	1	; () banked
  3152  004882  6B3B               	clrf	(?_printf+5)& (0+255),b
  3153  004884  EC61  F000         	call	_printf	;wreg free
  3154  004888  0012               	return		;funcret
  3155  00488A                     __end_of_drawSNquest:
  3156                           	opt stack 0
  3157                           tblptru	equ	0xFF8
  3158                           tblptrh	equ	0xFF7
  3159                           tblptrl	equ	0xFF6
  3160                           tablat	equ	0xFF5
  3161                           prodh	equ	0xFF4
  3162                           prodl	equ	0xFF3
  3163                           intcon	equ	0xFF2
  3164                           postinc0	equ	0xFEE
  3165                           wreg	equ	0xFE8
  3166                           postdec1	equ	0xFE5
  3167                           fsr1l	equ	0xFE1
  3168                           indf2	equ	0xFDF
  3169                           fsr2h	equ	0xFDA
  3170                           fsr2l	equ	0xFD9
  3171                           status	equ	0xFD8
  3172                           
  3173 ;; *************** function _drawPassWord *****************
  3174 ;; Defined at:
  3175 ;;		line 177 in file "source/screenDrawers.h"
  3176 ;; Parameters:    Size  Location     Type
  3177 ;;		None
  3178 ;; Auto vars:     Size  Location     Type
  3179 ;;  i               2  107[BANK1 ] int 
  3180 ;; Return value:  Size  Location     Type
  3181 ;;                  1    wreg      void 
  3182 ;; Registers used:
  3183 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3184 ;; Tracked objects:
  3185 ;;		On entry : 0/0
  3186 ;;		On exit  : 0/0
  3187 ;;		Unchanged: 0/0
  3188 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3189 ;;      Params:         0       0       0       0       0       0       0
  3190 ;;      Locals:         0       0       2       0       0       0       0
  3191 ;;      Temps:          0       0       0       0       0       0       0
  3192 ;;      Totals:         0       0       2       0       0       0       0
  3193 ;;Total ram usage:        2 bytes
  3194 ;; Hardware stack levels used:    1
  3195 ;; Hardware stack levels required when called:   15
  3196 ;; This function calls:
  3197 ;;		_lcd_gotoxy
  3198 ;;		_printf
  3199 ;; This function is called by:
  3200 ;;		_drawScreen
  3201 ;; This function uses a non-reentrant model
  3202 ;;
  3203                           
  3204                           	psect	text9
  3205  004392                     __ptext9:
  3206                           	opt stack 0
  3207  004392                     _drawPassWord:
  3208                           	opt stack 14
  3209                           
  3210                           ;screenDrawers.h: 178: if (!fd) {
  3211                           
  3212                           ;incstack = 0
  3213  004392  0100               	movlb	0	; () banked
  3214  004394  51BA               	movf	_fd& (0+255),w,b
  3215  004396  0100               	movlb	0	; () banked
  3216  004398  A4D8               	btfss	status,2,c
  3217  00439A  D012               	goto	l413
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;screenDrawers.h: 179: passSection = 0;
  3221  00439C  0E00               	movlw	0
  3222  00439E  0100               	movlb	0	; () banked
  3223  0043A0  6FC0               	movwf	_passSection& (0+255),b
  3224                           
  3225                           ;screenDrawers.h: 180: introducido[0] = 0;
  3226  0043A2  0E00               	movlw	0
  3227  0043A4  0101               	movlb	1	; () banked
  3228  0043A6  6FAC               	movwf	_introducido& (0+255),b
  3229                           
  3230                           ;screenDrawers.h: 181: introducido[1] = 0;
  3231  0043A8  0E00               	movlw	0
  3232  0043AA  0101               	movlb	1	; () banked
  3233  0043AC  6FAD               	movwf	(_introducido+1)& (0+255),b
  3234                           
  3235                           ;screenDrawers.h: 182: introducido[2] = 0;
  3236  0043AE  0E00               	movlw	0
  3237  0043B0  0101               	movlb	1	; () banked
  3238  0043B2  6FAE               	movwf	(_introducido+2)& (0+255),b
  3239                           
  3240                           ;screenDrawers.h: 183: introducido[3] = 0;
  3241  0043B4  0E00               	movlw	0
  3242  0043B6  0101               	movlb	1	; () banked
  3243  0043B8  6FAF               	movwf	(_introducido+3)& (0+255),b
  3244                           
  3245                           ;screenDrawers.h: 184: fd = 1;
  3246  0043BA  0E01               	movlw	1
  3247  0043BC  0100               	movlb	0	; () banked
  3248  0043BE  6FBA               	movwf	_fd& (0+255),b
  3249  0043C0                     l413:
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;screenDrawers.h: 185: }
  3253                           ;screenDrawers.h: 186: int i;
  3254                           ;screenDrawers.h: 187: for (i = 0; i < 4; i++)
  3255  0043C0  0E00               	movlw	0
  3256  0043C2  0101               	movlb	1	; () banked
  3257  0043C4  6F6C               	movwf	(drawPassWord@i+1)& (0+255),b
  3258  0043C6  0E00               	movlw	0
  3259  0043C8  6F6B               	movwf	drawPassWord@i& (0+255),b
  3260  0043CA                     l10039:
  3261                           
  3262                           ; BSR set to: 1
  3263  0043CA  0101               	movlb	1	; () banked
  3264  0043CC  BF6C               	btfsc	(drawPassWord@i+1)& (0+255),7,b
  3265  0043CE  D008               	goto	l10043
  3266  0043D0  0101               	movlb	1	; () banked
  3267  0043D2  516C               	movf	(drawPassWord@i+1)& (0+255),w,b
  3268  0043D4  E113               	bnz	l10049
  3269  0043D6  0E04               	movlw	4
  3270  0043D8  0101               	movlb	1	; () banked
  3271  0043DA  5D6B               	subwf	drawPassWord@i& (0+255),w,b
  3272  0043DC  B0D8               	btfsc	status,0,c
  3273  0043DE  D00E               	goto	l10049
  3274  0043E0                     l10043:
  3275                           
  3276                           ; BSR set to: 1
  3277                           ;screenDrawers.h: 188: passChar[i] = ' ';
  3278  0043E0  0EB0               	movlw	low _passChar
  3279  0043E2  0101               	movlb	1	; () banked
  3280  0043E4  256B               	addwf	drawPassWord@i& (0+255),w,b
  3281  0043E6  6ED9               	movwf	fsr2l,c
  3282  0043E8  0E01               	movlw	high _passChar
  3283  0043EA  0101               	movlb	1	; () banked
  3284  0043EC  216C               	addwfc	(drawPassWord@i+1)& (0+255),w,b
  3285  0043EE  6EDA               	movwf	fsr2h,c
  3286  0043F0  0E20               	movlw	32
  3287  0043F2  6EDF               	movwf	indf2,c
  3288                           
  3289                           ; BSR set to: 1
  3290  0043F4  0101               	movlb	1	; () banked
  3291  0043F6  4B6B               	infsnz	drawPassWord@i& (0+255),f,b
  3292  0043F8  2B6C               	incf	(drawPassWord@i+1)& (0+255),f,b
  3293  0043FA  D7E7               	goto	l10039
  3294  0043FC                     l10049:
  3295                           
  3296                           ; BSR set to: 1
  3297                           ;screenDrawers.h: 189: passChar[passSection] = flech;
  3298  0043FC  0100               	movlb	0	; () banked
  3299  0043FE  51C0               	movf	_passSection& (0+255),w,b
  3300  004400  0D01               	mullw	1
  3301  004402  0EB0               	movlw	low _passChar
  3302  004404  24F3               	addwf	prodl,w,c
  3303  004406  6ED9               	movwf	fsr2l,c
  3304  004408  0E01               	movlw	high _passChar
  3305  00440A  20F4               	addwfc	prodh,w,c
  3306  00440C  6EDA               	movwf	fsr2h,c
  3307  00440E  C197  FFDF         	movff	_flech,indf2
  3308                           
  3309                           ; BSR set to: 0
  3310                           ;screenDrawers.h: 190: lcd_gotoxy(1, 1);
  3311  004412  0E01               	movlw	1
  3312  004414  0100               	movlb	0	; () banked
  3313  004416  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3314  004418  0E01               	movlw	1
  3315  00441A  EC25  F02F         	call	_lcd_gotoxy
  3316                           
  3317                           ;screenDrawers.h: 191: printf("Contrasena:     \n");
  3318  00441E  0EE9               	movlw	low STR_25
  3319  004420  0101               	movlb	1	; () banked
  3320  004422  6F36               	movwf	printf@f& (0+255),b
  3321  004424  0E7D               	movlw	high STR_25
  3322  004426  0101               	movlb	1	; () banked
  3323  004428  6F37               	movwf	(printf@f+1)& (0+255),b
  3324  00442A  EC61  F000         	call	_printf	;wreg free
  3325                           
  3326                           ;screenDrawers.h: 192: printf("    %c%u%c%u%c%u%c%u    ", passChar[0], introducido[0], p
      +                          assChar[1], introducido[1],
  3327                           ;screenDrawers.h: 193: passChar[2], introducido[2], passChar[3], introducido[3]);
  3328  00442E  0EAB               	movlw	low STR_26
  3329  004430  0101               	movlb	1	; () banked
  3330  004432  6F36               	movwf	printf@f& (0+255),b
  3331  004434  0E7D               	movlw	high STR_26
  3332  004436  0101               	movlb	1	; () banked
  3333  004438  6F37               	movwf	(printf@f+1)& (0+255),b
  3334  00443A  C1B0  F138         	movff	_passChar,?_printf+2
  3335  00443E  0101               	movlb	1	; () banked
  3336  004440  6B39               	clrf	(?_printf+3)& (0+255),b
  3337  004442  0101               	movlb	1	; () banked
  3338  004444  51AC               	movf	_introducido& (0+255),w,b
  3339  004446  0101               	movlb	1	; () banked
  3340  004448  6F3A               	movwf	(?_printf+4)& (0+255),b
  3341  00444A  6B3B               	clrf	(?_printf+5)& (0+255),b
  3342  00444C  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  3343  00444E  073B               	decf	(?_printf+5)& (0+255),f,b
  3344  004450  C1B1  F13C         	movff	_passChar+1,?_printf+6
  3345  004454  0101               	movlb	1	; () banked
  3346  004456  6B3D               	clrf	(?_printf+7)& (0+255),b
  3347  004458  0101               	movlb	1	; () banked
  3348  00445A  51AD               	movf	(_introducido+1)& (0+255),w,b
  3349  00445C  0101               	movlb	1	; () banked
  3350  00445E  6F3E               	movwf	(?_printf+8)& (0+255),b
  3351  004460  6B3F               	clrf	(?_printf+9)& (0+255),b
  3352  004462  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  3353  004464  073F               	decf	(?_printf+9)& (0+255),f,b
  3354  004466  C1B2  F140         	movff	_passChar+2,?_printf+10
  3355  00446A  0101               	movlb	1	; () banked
  3356  00446C  6B41               	clrf	(?_printf+11)& (0+255),b
  3357  00446E  0101               	movlb	1	; () banked
  3358  004470  51AE               	movf	(_introducido+2)& (0+255),w,b
  3359  004472  0101               	movlb	1	; () banked
  3360  004474  6F42               	movwf	(?_printf+12)& (0+255),b
  3361  004476  6B43               	clrf	(?_printf+13)& (0+255),b
  3362  004478  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  3363  00447A  0743               	decf	(?_printf+13)& (0+255),f,b
  3364  00447C  C1B3  F144         	movff	_passChar+3,?_printf+14
  3365  004480  0101               	movlb	1	; () banked
  3366  004482  6B45               	clrf	(?_printf+15)& (0+255),b
  3367  004484  0101               	movlb	1	; () banked
  3368  004486  51AF               	movf	(_introducido+3)& (0+255),w,b
  3369  004488  0101               	movlb	1	; () banked
  3370  00448A  6F46               	movwf	(?_printf+16)& (0+255),b
  3371  00448C  6B47               	clrf	(?_printf+17)& (0+255),b
  3372  00448E  BF46               	btfsc	(?_printf+16)& (0+255),7,b
  3373  004490  0747               	decf	(?_printf+17)& (0+255),f,b
  3374  004492  EC61  F000         	call	_printf	;wreg free
  3375  004496  0012               	return		;funcret
  3376  004498                     __end_of_drawPassWord:
  3377                           	opt stack 0
  3378                           tblptru	equ	0xFF8
  3379                           tblptrh	equ	0xFF7
  3380                           tblptrl	equ	0xFF6
  3381                           tablat	equ	0xFF5
  3382                           prodh	equ	0xFF4
  3383                           prodl	equ	0xFF3
  3384                           intcon	equ	0xFF2
  3385                           postinc0	equ	0xFEE
  3386                           wreg	equ	0xFE8
  3387                           postdec1	equ	0xFE5
  3388                           fsr1l	equ	0xFE1
  3389                           indf2	equ	0xFDF
  3390                           fsr2h	equ	0xFDA
  3391                           fsr2l	equ	0xFD9
  3392                           status	equ	0xFD8
  3393                           
  3394 ;; *************** function _drawMenu *****************
  3395 ;; Defined at:
  3396 ;;		line 87 in file "source/screenDrawers.h"
  3397 ;; Parameters:    Size  Location     Type
  3398 ;;  adv             1    wreg     unsigned char 
  3399 ;; Auto vars:     Size  Location     Type
  3400 ;;  adv             1  107[BANK1 ] unsigned char 
  3401 ;; Return value:  Size  Location     Type
  3402 ;;                  1    wreg      void 
  3403 ;; Registers used:
  3404 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3405 ;; Tracked objects:
  3406 ;;		On entry : 0/0
  3407 ;;		On exit  : 0/0
  3408 ;;		Unchanged: 0/0
  3409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3410 ;;      Params:         0       0       0       0       0       0       0
  3411 ;;      Locals:         0       0       1       0       0       0       0
  3412 ;;      Temps:          0       0       0       0       0       0       0
  3413 ;;      Totals:         0       0       1       0       0       0       0
  3414 ;;Total ram usage:        1 bytes
  3415 ;; Hardware stack levels used:    1
  3416 ;; Hardware stack levels required when called:   15
  3417 ;; This function calls:
  3418 ;;		_lcd_gotoxy
  3419 ;;		_lcd_putc
  3420 ;;		_printf
  3421 ;; This function is called by:
  3422 ;;		_drawScreen
  3423 ;; This function uses a non-reentrant model
  3424 ;;
  3425                           
  3426                           	psect	text10
  3427  002FD2                     __ptext10:
  3428                           	opt stack 0
  3429  002FD2                     _drawMenu:
  3430                           	opt stack 14
  3431                           
  3432                           ;incstack = 0
  3433                           ;drawMenu@adv stored from wreg
  3434  002FD2  0101               	movlb	1	; () banked
  3435  002FD4  6F6B               	movwf	drawMenu@adv& (0+255),b
  3436                           
  3437                           ;screenDrawers.h: 88: switch (menuSection) {
  3438  002FD6  D0FD               	goto	l10005
  3439  002FD8                     l9939:
  3440                           
  3441                           ;screenDrawers.h: 90: lcd_gotoxy(1, 1);
  3442  002FD8  0E01               	movlw	1
  3443  002FDA  0100               	movlb	0	; () banked
  3444  002FDC  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3445  002FDE  0E01               	movlw	1
  3446  002FE0  EC25  F02F         	call	_lcd_gotoxy
  3447                           
  3448                           ;screenDrawers.h: 91: printf("Estado proceso: \n");
  3449  002FE4  0E1F               	movlw	low STR_8
  3450  002FE6  0101               	movlb	1	; () banked
  3451  002FE8  6F36               	movwf	printf@f& (0+255),b
  3452  002FEA  0E7E               	movlw	high STR_8
  3453  002FEC  0101               	movlb	1	; () banked
  3454  002FEE  6F37               	movwf	(printf@f+1)& (0+255),b
  3455  002FF0  EC61  F000         	call	_printf	;wreg free
  3456                           
  3457                           ;screenDrawers.h: 92: if (adv)
  3458  002FF4  0101               	movlb	1	; () banked
  3459  002FF6  516B               	movf	drawMenu@adv& (0+255),w,b
  3460  002FF8  0101               	movlb	1	; () banked
  3461  002FFA  B4D8               	btfsc	status,2,c
  3462  002FFC  D004               	goto	l9947
  3463                           
  3464                           ; BSR set to: 1
  3465                           ;screenDrawers.h: 93: lcd_putc('A');
  3466  002FFE  0E41               	movlw	65
  3467  003000  EC5B  F02B         	call	_lcd_putc
  3468  003004  D003               	goto	l384
  3469  003006                     l9947:
  3470                           
  3471                           ;screenDrawers.h: 94: else
  3472                           ;screenDrawers.h: 95: lcd_putc(' ');
  3473  003006  0E20               	movlw	32
  3474  003008  EC5B  F02B         	call	_lcd_putc
  3475  00300C                     l384:
  3476                           
  3477                           ;screenDrawers.h: 96: lcd_gotoxy(2, 2);
  3478  00300C  0E02               	movlw	2
  3479  00300E  0100               	movlb	0	; () banked
  3480  003010  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3481  003012  0E02               	movlw	2
  3482  003014  EC25  F02F         	call	_lcd_gotoxy
  3483                           
  3484                           ;screenDrawers.h: 97: if (ProcessStarted)
  3485  003018  503A               	movf	_ProcessStarted,w,c
  3486  00301A  B4D8               	btfsc	status,2,c
  3487  00301C  D011               	goto	l9953
  3488                           
  3489                           ;screenDrawers.h: 98: printf("   %d / %d    ", processState, numCortes);
  3490  00301E  0EB4               	movlw	low STR_9
  3491  003020  0101               	movlb	1	; () banked
  3492  003022  6F36               	movwf	printf@f& (0+255),b
  3493  003024  0E7F               	movlw	high STR_9
  3494  003026  0101               	movlb	1	; () banked
  3495  003028  6F37               	movwf	(printf@f+1)& (0+255),b
  3496  00302A  C035  F138         	movff	_processState,?_printf+2
  3497  00302E  C036  F139         	movff	_processState+1,?_printf+3
  3498  003032  C0CB  F13A         	movff	_numCortes,?_printf+4
  3499  003036  C0CC  F13B         	movff	_numCortes+1,?_printf+5
  3500  00303A  EC61  F000         	call	_printf	;wreg free
  3501  00303E  0012               	return	
  3502  003040                     l9953:
  3503                           
  3504                           ;screenDrawers.h: 99: else
  3505                           ;screenDrawers.h: 100: printf("    Detenido    ");
  3506  003040  0E60               	movlw	low STR_10
  3507  003042  0101               	movlb	1	; () banked
  3508  003044  6F36               	movwf	printf@f& (0+255),b
  3509  003046  0E7F               	movlw	high STR_10
  3510  003048  0101               	movlb	1	; () banked
  3511  00304A  6F37               	movwf	(printf@f+1)& (0+255),b
  3512  00304C  EC61  F000         	call	_printf	;wreg free
  3513                           
  3514                           ;screenDrawers.h: 101: break;
  3515  003050  0012               	return	
  3516  003052                     l9955:
  3517                           
  3518                           ;screenDrawers.h: 103: lcd_gotoxy(1, 1);
  3519  003052  0E01               	movlw	1
  3520  003054  0100               	movlb	0	; () banked
  3521  003056  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3522  003058  0E01               	movlw	1
  3523  00305A  EC25  F02F         	call	_lcd_gotoxy
  3524                           
  3525                           ;screenDrawers.h: 104: printf("Valor por Corte:\n");
  3526  00305E  0E55               	movlw	low STR_11
  3527  003060  0101               	movlb	1	; () banked
  3528  003062  6F36               	movwf	printf@f& (0+255),b
  3529  003064  0E7E               	movlw	high STR_11
  3530  003066  0101               	movlb	1	; () banked
  3531  003068  6F37               	movwf	(printf@f+1)& (0+255),b
  3532  00306A  EC61  F000         	call	_printf	;wreg free
  3533                           
  3534                           ;screenDrawers.h: 105: if (adv)
  3535  00306E  0101               	movlb	1	; () banked
  3536  003070  516B               	movf	drawMenu@adv& (0+255),w,b
  3537  003072  0101               	movlb	1	; () banked
  3538  003074  B4D8               	btfsc	status,2,c
  3539  003076  D004               	goto	l9963
  3540                           
  3541                           ; BSR set to: 1
  3542                           ;screenDrawers.h: 106: lcd_putc('A');
  3543  003078  0E41               	movlw	65
  3544  00307A  EC5B  F02B         	call	_lcd_putc
  3545  00307E  D003               	goto	l390
  3546  003080                     l9963:
  3547                           
  3548                           ;screenDrawers.h: 107: else
  3549                           ;screenDrawers.h: 108: lcd_putc(' ');
  3550  003080  0E20               	movlw	32
  3551  003082  EC5B  F02B         	call	_lcd_putc
  3552  003086                     l390:
  3553                           
  3554                           ;screenDrawers.h: 109: lcd_gotoxy(2, 2);
  3555  003086  0E02               	movlw	2
  3556  003088  0100               	movlb	0	; () banked
  3557  00308A  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3558  00308C  0E02               	movlw	2
  3559  00308E  EC25  F02F         	call	_lcd_gotoxy
  3560                           
  3561                           ;screenDrawers.h: 110: printf("   %3.3f kg   ", kgXcorte);
  3562  003092  0EC3               	movlw	low STR_12
  3563  003094  0101               	movlb	1	; () banked
  3564  003096  6F36               	movwf	printf@f& (0+255),b
  3565  003098  0E7F               	movlw	high STR_12
  3566  00309A  0101               	movlb	1	; () banked
  3567  00309C  6F37               	movwf	(printf@f+1)& (0+255),b
  3568  00309E  C18A  F138         	movff	_kgXcorte,?_printf+2
  3569  0030A2  C18B  F139         	movff	_kgXcorte+1,?_printf+3
  3570  0030A6  C18C  F13A         	movff	_kgXcorte+2,?_printf+4
  3571  0030AA  C18D  F13B         	movff	_kgXcorte+3,?_printf+5
  3572  0030AE  EC61  F000         	call	_printf	;wreg free
  3573                           
  3574                           ;screenDrawers.h: 111: break;
  3575  0030B2  0012               	return	
  3576  0030B4                     l9967:
  3577                           
  3578                           ;screenDrawers.h: 113: lcd_gotoxy(1, 1);
  3579  0030B4  0E01               	movlw	1
  3580  0030B6  0100               	movlb	0	; () banked
  3581  0030B8  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3582  0030BA  0E01               	movlw	1
  3583  0030BC  EC25  F02F         	call	_lcd_gotoxy
  3584                           
  3585                           ;screenDrawers.h: 114: printf("Cantidad Cortes:\n");
  3586  0030C0  0E79               	movlw	low STR_13
  3587  0030C2  0101               	movlb	1	; () banked
  3588  0030C4  6F36               	movwf	printf@f& (0+255),b
  3589  0030C6  0E7E               	movlw	high STR_13
  3590  0030C8  0101               	movlb	1	; () banked
  3591  0030CA  6F37               	movwf	(printf@f+1)& (0+255),b
  3592  0030CC  EC61  F000         	call	_printf	;wreg free
  3593                           
  3594                           ;screenDrawers.h: 115: if (adv)
  3595  0030D0  0101               	movlb	1	; () banked
  3596  0030D2  516B               	movf	drawMenu@adv& (0+255),w,b
  3597  0030D4  0101               	movlb	1	; () banked
  3598  0030D6  B4D8               	btfsc	status,2,c
  3599  0030D8  D004               	goto	l9975
  3600                           
  3601                           ; BSR set to: 1
  3602                           ;screenDrawers.h: 116: lcd_putc('A');
  3603  0030DA  0E41               	movlw	65
  3604  0030DC  EC5B  F02B         	call	_lcd_putc
  3605  0030E0  D003               	goto	l393
  3606  0030E2                     l9975:
  3607                           
  3608                           ;screenDrawers.h: 117: else
  3609                           ;screenDrawers.h: 118: lcd_putc(' ');
  3610  0030E2  0E20               	movlw	32
  3611  0030E4  EC5B  F02B         	call	_lcd_putc
  3612  0030E8                     l393:
  3613                           
  3614                           ;screenDrawers.h: 119: lcd_gotoxy(2, 2);
  3615  0030E8  0E02               	movlw	2
  3616  0030EA  0100               	movlb	0	; () banked
  3617  0030EC  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3618  0030EE  0E02               	movlw	2
  3619  0030F0  EC25  F02F         	call	_lcd_gotoxy
  3620                           
  3621                           ;screenDrawers.h: 120: printf("      %d       ", numCortes);
  3622  0030F4  0EA4               	movlw	low STR_14
  3623  0030F6  0101               	movlb	1	; () banked
  3624  0030F8  6F36               	movwf	printf@f& (0+255),b
  3625  0030FA  0E7F               	movlw	high STR_14
  3626  0030FC  0101               	movlb	1	; () banked
  3627  0030FE  6F37               	movwf	(printf@f+1)& (0+255),b
  3628  003100  C0CB  F138         	movff	_numCortes,?_printf+2
  3629  003104  C0CC  F139         	movff	_numCortes+1,?_printf+3
  3630  003108  EC61  F000         	call	_printf	;wreg free
  3631                           
  3632                           ;screenDrawers.h: 121: break;
  3633  00310C  0012               	return	
  3634  00310E                     l9979:
  3635                           
  3636                           ;screenDrawers.h: 123: lcd_gotoxy(1, 1);
  3637  00310E  0E01               	movlw	1
  3638  003110  0100               	movlb	0	; () banked
  3639  003112  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3640  003114  0E01               	movlw	1
  3641  003116  EC25  F02F         	call	_lcd_gotoxy
  3642                           
  3643                           ;screenDrawers.h: 124: printf("Diametro Tubo:  \n");
  3644  00311A  0EFB               	movlw	low STR_15
  3645  00311C  0101               	movlb	1	; () banked
  3646  00311E  6F36               	movwf	printf@f& (0+255),b
  3647  003120  0E7D               	movlw	high STR_15
  3648  003122  0101               	movlb	1	; () banked
  3649  003124  6F37               	movwf	(printf@f+1)& (0+255),b
  3650  003126  EC61  F000         	call	_printf	;wreg free
  3651                           
  3652                           ;screenDrawers.h: 125: if (adv)
  3653  00312A  0101               	movlb	1	; () banked
  3654  00312C  516B               	movf	drawMenu@adv& (0+255),w,b
  3655  00312E  0101               	movlb	1	; () banked
  3656  003130  B4D8               	btfsc	status,2,c
  3657  003132  D004               	goto	l9987
  3658                           
  3659                           ; BSR set to: 1
  3660                           ;screenDrawers.h: 126: lcd_putc('A');
  3661  003134  0E41               	movlw	65
  3662  003136  EC5B  F02B         	call	_lcd_putc
  3663  00313A  D003               	goto	l396
  3664  00313C                     l9987:
  3665                           
  3666                           ;screenDrawers.h: 127: else
  3667                           ;screenDrawers.h: 128: lcd_putc(' ');
  3668  00313C  0E20               	movlw	32
  3669  00313E  EC5B  F02B         	call	_lcd_putc
  3670  003142                     l396:
  3671                           
  3672                           ;screenDrawers.h: 129: lcd_gotoxy(2, 2);
  3673  003142  0E02               	movlw	2
  3674  003144  0100               	movlb	0	; () banked
  3675  003146  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3676  003148  0E02               	movlw	2
  3677  00314A  EC25  F02F         	call	_lcd_gotoxy
  3678                           
  3679                           ;screenDrawers.h: 130: printf("   %3.3f mm   ", diamTubo);
  3680  00314E  0ED2               	movlw	low STR_16
  3681  003150  0101               	movlb	1	; () banked
  3682  003152  6F36               	movwf	printf@f& (0+255),b
  3683  003154  0E7F               	movlw	high STR_16
  3684  003156  0101               	movlb	1	; () banked
  3685  003158  6F37               	movwf	(printf@f+1)& (0+255),b
  3686  00315A  C186  F138         	movff	_diamTubo,?_printf+2
  3687  00315E  C187  F139         	movff	_diamTubo+1,?_printf+3
  3688  003162  C188  F13A         	movff	_diamTubo+2,?_printf+4
  3689  003166  C189  F13B         	movff	_diamTubo+3,?_printf+5
  3690  00316A  EC61  F000         	call	_printf	;wreg free
  3691                           
  3692                           ;screenDrawers.h: 131: break;
  3693  00316E  0012               	return	
  3694  003170                     l9991:
  3695                           
  3696                           ;screenDrawers.h: 133: lcd_gotoxy(1, 1);
  3697  003170  0E01               	movlw	1
  3698  003172  0100               	movlb	0	; () banked
  3699  003174  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3700  003176  0E01               	movlw	1
  3701  003178  EC25  F02F         	call	_lcd_gotoxy
  3702                           
  3703                           ;screenDrawers.h: 134: printf("Velocidad Masa: \n");
  3704  00317C  0E0D               	movlw	low STR_17
  3705  00317E  0101               	movlb	1	; () banked
  3706  003180  6F36               	movwf	printf@f& (0+255),b
  3707  003182  0E7E               	movlw	high STR_17
  3708  003184  0101               	movlb	1	; () banked
  3709  003186  6F37               	movwf	(printf@f+1)& (0+255),b
  3710  003188  EC61  F000         	call	_printf	;wreg free
  3711                           
  3712                           ;screenDrawers.h: 135: if (adv)
  3713  00318C  0101               	movlb	1	; () banked
  3714  00318E  516B               	movf	drawMenu@adv& (0+255),w,b
  3715  003190  0101               	movlb	1	; () banked
  3716  003192  B4D8               	btfsc	status,2,c
  3717  003194  D004               	goto	l9999
  3718                           
  3719                           ; BSR set to: 1
  3720                           ;screenDrawers.h: 136: lcd_putc('A');
  3721  003196  0E41               	movlw	65
  3722  003198  EC5B  F02B         	call	_lcd_putc
  3723  00319C  D003               	goto	l399
  3724  00319E                     l9999:
  3725                           
  3726                           ;screenDrawers.h: 137: else
  3727                           ;screenDrawers.h: 138: lcd_putc(' ');
  3728  00319E  0E20               	movlw	32
  3729  0031A0  EC5B  F02B         	call	_lcd_putc
  3730  0031A4                     l399:
  3731                           
  3732                           ;screenDrawers.h: 139: lcd_gotoxy(2, 2);
  3733  0031A4  0E02               	movlw	2
  3734  0031A6  0100               	movlb	0	; () banked
  3735  0031A8  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3736  0031AA  0E02               	movlw	2
  3737  0031AC  EC25  F02F         	call	_lcd_gotoxy
  3738                           
  3739                           ;screenDrawers.h: 140: printf("  %3.3f kg/s  ", velocidadMasa);
  3740  0031B0  0EE1               	movlw	low STR_18
  3741  0031B2  0101               	movlb	1	; () banked
  3742  0031B4  6F36               	movwf	printf@f& (0+255),b
  3743  0031B6  0E7F               	movlw	high STR_18
  3744  0031B8  0101               	movlb	1	; () banked
  3745  0031BA  6F37               	movwf	(printf@f+1)& (0+255),b
  3746  0031BC  C0C7  F138         	movff	_velocidadMasa,?_printf+2
  3747  0031C0  C0C8  F139         	movff	_velocidadMasa+1,?_printf+3
  3748  0031C4  C0C9  F13A         	movff	_velocidadMasa+2,?_printf+4
  3749  0031C8  C0CA  F13B         	movff	_velocidadMasa+3,?_printf+5
  3750  0031CC  EC61  F000         	call	_printf	;wreg free
  3751                           
  3752                           ;screenDrawers.h: 142: }
  3753                           ;screenDrawers.h: 143: }
  3754                           
  3755                           ;screenDrawers.h: 141: break;
  3756  0031D0  0012               	return	
  3757  0031D2                     l10005:
  3758  0031D2  0101               	movlb	1	; () banked
  3759  0031D4  51B6               	movf	_menuSection& (0+255),w,b
  3760                           
  3761                           ; Switch size 1, requested type "space"
  3762                           ; Number of cases is 5, Range of values is 0 to 4
  3763                           ; switch strategies available:
  3764                           ; Name         Instructions Cycles
  3765                           ; simple_byte           16     9 (average)
  3766                           ;	Chosen strategy is simple_byte
  3767  0031D6  0A00               	xorlw	0	; case 0
  3768  0031D8  B4D8               	btfsc	status,2,c
  3769  0031DA  D6FE               	goto	l9939
  3770  0031DC  0A01               	xorlw	1	; case 1
  3771  0031DE  B4D8               	btfsc	status,2,c
  3772  0031E0  D738               	goto	l9955
  3773  0031E2  0A03               	xorlw	3	; case 2
  3774  0031E4  B4D8               	btfsc	status,2,c
  3775  0031E6  D766               	goto	l9967
  3776  0031E8  0A01               	xorlw	1	; case 3
  3777  0031EA  B4D8               	btfsc	status,2,c
  3778  0031EC  D790               	goto	l9979
  3779  0031EE  0A07               	xorlw	7	; case 4
  3780  0031F0  A4D8               	btfss	status,2,c
  3781  0031F2  0012               	return	
  3782  0031F4  D7BD               	goto	l9991
  3783  0031F6                     __end_of_drawMenu:
  3784                           	opt stack 0
  3785                           tblptru	equ	0xFF8
  3786                           tblptrh	equ	0xFF7
  3787                           tblptrl	equ	0xFF6
  3788                           tablat	equ	0xFF5
  3789                           prodh	equ	0xFF4
  3790                           prodl	equ	0xFF3
  3791                           intcon	equ	0xFF2
  3792                           postinc0	equ	0xFEE
  3793                           wreg	equ	0xFE8
  3794                           postdec1	equ	0xFE5
  3795                           fsr1l	equ	0xFE1
  3796                           indf2	equ	0xFDF
  3797                           fsr2h	equ	0xFDA
  3798                           fsr2l	equ	0xFD9
  3799                           status	equ	0xFD8
  3800                           
  3801 ;; *************** function _drawChanVal *****************
  3802 ;; Defined at:
  3803 ;;		line 146 in file "source/screenDrawers.h"
  3804 ;; Parameters:    Size  Location     Type
  3805 ;;		None
  3806 ;; Auto vars:     Size  Location     Type
  3807 ;;		None
  3808 ;; Return value:  Size  Location     Type
  3809 ;;                  1    wreg      void 
  3810 ;; Registers used:
  3811 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3812 ;; Tracked objects:
  3813 ;;		On entry : 0/0
  3814 ;;		On exit  : 0/0
  3815 ;;		Unchanged: 0/0
  3816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3817 ;;      Params:         0       0       0       0       0       0       0
  3818 ;;      Locals:         0       0       0       0       0       0       0
  3819 ;;      Temps:          0       0       0       0       0       0       0
  3820 ;;      Totals:         0       0       0       0       0       0       0
  3821 ;;Total ram usage:        0 bytes
  3822 ;; Hardware stack levels used:    1
  3823 ;; Hardware stack levels required when called:   16
  3824 ;; This function calls:
  3825 ;;		_drawValEditor
  3826 ;;		_lcd_gotoxy
  3827 ;;		_printf
  3828 ;; This function is called by:
  3829 ;;		_drawScreen
  3830 ;; This function uses a non-reentrant model
  3831 ;;
  3832                           
  3833                           	psect	text11
  3834  004D7A                     __ptext11:
  3835                           	opt stack 0
  3836  004D7A                     _drawChanVal:
  3837                           	opt stack 13
  3838                           
  3839                           ;screenDrawers.h: 147: switch (menuSection) {
  3840                           
  3841                           ;incstack = 0
  3842  004D7A  D04D               	goto	l10033
  3843  004D7C                     l10009:
  3844                           
  3845                           ;screenDrawers.h: 151: lcd_gotoxy(1, 1);
  3846  004D7C  0E01               	movlw	1
  3847  004D7E  0100               	movlb	0	; () banked
  3848  004D80  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3849  004D82  0E01               	movlw	1
  3850  004D84  EC25  F02F         	call	_lcd_gotoxy
  3851                           
  3852                           ;screenDrawers.h: 152: printf("Valor por Corte:\n");
  3853  004D88  0E55               	movlw	low STR_11
  3854  004D8A  0101               	movlb	1	; () banked
  3855  004D8C  6F36               	movwf	printf@f& (0+255),b
  3856  004D8E  0E7E               	movlw	high STR_11
  3857  004D90  0101               	movlb	1	; () banked
  3858  004D92  6F37               	movwf	(printf@f+1)& (0+255),b
  3859  004D94  EC61  F000         	call	_printf	;wreg free
  3860                           
  3861                           ;screenDrawers.h: 153: drawValEditor();
  3862  004D98  ECBB  F013         	call	_drawValEditor	;wreg free
  3863                           
  3864                           ;screenDrawers.h: 154: printf("kg    ");
  3865  004D9C  0EF0               	movlw	low STR_20
  3866  004D9E  0101               	movlb	1	; () banked
  3867  004DA0  6F36               	movwf	printf@f& (0+255),b
  3868  004DA2  0E7F               	movlw	high STR_20
  3869  004DA4  0101               	movlb	1	; () banked
  3870  004DA6  6F37               	movwf	(printf@f+1)& (0+255),b
  3871  004DA8  EC61  F000         	call	_printf	;wreg free
  3872                           
  3873                           ;screenDrawers.h: 155: break;
  3874  004DAC  0012               	return	
  3875  004DAE                     l10017:
  3876                           
  3877                           ;screenDrawers.h: 157: lcd_gotoxy(1, 1);
  3878  004DAE  0E01               	movlw	1
  3879  004DB0  0100               	movlb	0	; () banked
  3880  004DB2  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3881  004DB4  0E01               	movlw	1
  3882  004DB6  EC25  F02F         	call	_lcd_gotoxy
  3883                           
  3884                           ;screenDrawers.h: 158: printf("Cantidad Cortes:\n");
  3885  004DBA  0E79               	movlw	low STR_13
  3886  004DBC  0101               	movlb	1	; () banked
  3887  004DBE  6F36               	movwf	printf@f& (0+255),b
  3888  004DC0  0E7E               	movlw	high STR_13
  3889  004DC2  0101               	movlb	1	; () banked
  3890  004DC4  6F37               	movwf	(printf@f+1)& (0+255),b
  3891  004DC6  EC61  F000         	call	_printf	;wreg free
  3892                           
  3893                           ;screenDrawers.h: 159: printf("      %d       ", chanVals);
  3894  004DCA  0EA4               	movlw	low STR_14
  3895  004DCC  0101               	movlb	1	; () banked
  3896  004DCE  6F36               	movwf	printf@f& (0+255),b
  3897  004DD0  0E7F               	movlw	high STR_14
  3898  004DD2  0101               	movlb	1	; () banked
  3899  004DD4  6F37               	movwf	(printf@f+1)& (0+255),b
  3900  004DD6  C1B4  F138         	movff	_chanVals,?_printf+2
  3901  004DDA  C1B5  F139         	movff	_chanVals+1,?_printf+3
  3902  004DDE  EC61  F000         	call	_printf	;wreg free
  3903                           
  3904                           ;screenDrawers.h: 160: break;
  3905  004DE2  0012               	return	
  3906  004DE4                     l10023:
  3907                           
  3908                           ;screenDrawers.h: 162: lcd_gotoxy(1, 1);
  3909  004DE4  0E01               	movlw	1
  3910  004DE6  0100               	movlb	0	; () banked
  3911  004DE8  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  3912  004DEA  0E01               	movlw	1
  3913  004DEC  EC25  F02F         	call	_lcd_gotoxy
  3914                           
  3915                           ;screenDrawers.h: 163: printf("Diametro Tubo:  \n");
  3916  004DF0  0EFB               	movlw	low STR_15
  3917  004DF2  0101               	movlb	1	; () banked
  3918  004DF4  6F36               	movwf	printf@f& (0+255),b
  3919  004DF6  0E7D               	movlw	high STR_15
  3920  004DF8  0101               	movlb	1	; () banked
  3921  004DFA  6F37               	movwf	(printf@f+1)& (0+255),b
  3922  004DFC  EC61  F000         	call	_printf	;wreg free
  3923                           
  3924                           ;screenDrawers.h: 164: drawValEditor();
  3925  004E00  ECBB  F013         	call	_drawValEditor	;wreg free
  3926                           
  3927                           ;screenDrawers.h: 165: printf("mm    ");
  3928  004E04  0EF7               	movlw	low STR_24
  3929  004E06  0101               	movlb	1	; () banked
  3930  004E08  6F36               	movwf	printf@f& (0+255),b
  3931  004E0A  0E7F               	movlw	high STR_24
  3932  004E0C  0101               	movlb	1	; () banked
  3933  004E0E  6F37               	movwf	(printf@f+1)& (0+255),b
  3934  004E10  EC61  F000         	call	_printf	;wreg free
  3935                           
  3936                           ;screenDrawers.h: 173: }
  3937                           ;screenDrawers.h: 174: }
  3938                           
  3939                           ;screenDrawers.h: 172: break;
  3940                           
  3941                           ;screenDrawers.h: 167: }case (4): {
  3942                           
  3943                           ;screenDrawers.h: 166: break;
  3944  004E14  0012               	return	
  3945  004E16                     l10033:
  3946  004E16  0101               	movlb	1	; () banked
  3947  004E18  51B6               	movf	_menuSection& (0+255),w,b
  3948                           
  3949                           ; Switch size 1, requested type "space"
  3950                           ; Number of cases is 5, Range of values is 0 to 4
  3951                           ; switch strategies available:
  3952                           ; Name         Instructions Cycles
  3953                           ; simple_byte           16     9 (average)
  3954                           ;	Chosen strategy is simple_byte
  3955  004E1A  0A00               	xorlw	0	; case 0
  3956  004E1C  B4D8               	btfsc	status,2,c
  3957  004E1E  0012               	return	
  3958  004E20  0A01               	xorlw	1	; case 1
  3959  004E22  B4D8               	btfsc	status,2,c
  3960  004E24  D7AB               	goto	l10009
  3961  004E26  0A03               	xorlw	3	; case 2
  3962  004E28  B4D8               	btfsc	status,2,c
  3963  004E2A  D7C1               	goto	l10017
  3964  004E2C  0A01               	xorlw	1	; case 3
  3965  004E2E  B4D8               	btfsc	status,2,c
  3966  004E30  D7D9               	goto	l10023
  3967  004E32  0A07               	xorlw	7	; case 4
  3968  004E34  0012               	return	
  3969  004E36                     __end_of_drawChanVal:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           prodh	equ	0xFF4
  3976                           prodl	equ	0xFF3
  3977                           intcon	equ	0xFF2
  3978                           postinc0	equ	0xFEE
  3979                           wreg	equ	0xFE8
  3980                           postdec1	equ	0xFE5
  3981                           fsr1l	equ	0xFE1
  3982                           indf2	equ	0xFDF
  3983                           fsr2h	equ	0xFDA
  3984                           fsr2l	equ	0xFD9
  3985                           status	equ	0xFD8
  3986                           
  3987 ;; *************** function _drawBadPass *****************
  3988 ;; Defined at:
  3989 ;;		line 196 in file "source/screenDrawers.h"
  3990 ;; Parameters:    Size  Location     Type
  3991 ;;		None
  3992 ;; Auto vars:     Size  Location     Type
  3993 ;;		None
  3994 ;; Return value:  Size  Location     Type
  3995 ;;                  1    wreg      void 
  3996 ;; Registers used:
  3997 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3998 ;; Tracked objects:
  3999 ;;		On entry : 0/0
  4000 ;;		On exit  : 0/0
  4001 ;;		Unchanged: 0/0
  4002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4003 ;;      Params:         0       0       0       0       0       0       0
  4004 ;;      Locals:         0       0       0       0       0       0       0
  4005 ;;      Temps:          0       0       0       0       0       0       0
  4006 ;;      Totals:         0       0       0       0       0       0       0
  4007 ;;Total ram usage:        0 bytes
  4008 ;; Hardware stack levels used:    1
  4009 ;; Hardware stack levels required when called:   15
  4010 ;; This function calls:
  4011 ;;		_lcd_gotoxy
  4012 ;;		_printf
  4013 ;; This function is called by:
  4014 ;;		_drawScreen
  4015 ;; This function uses a non-reentrant model
  4016 ;;
  4017                           
  4018                           	psect	text12
  4019  005E7A                     __ptext12:
  4020                           	opt stack 0
  4021  005E7A                     _drawBadPass:
  4022                           	opt stack 14
  4023                           
  4024                           ;screenDrawers.h: 197: lcd_gotoxy(1, 1);
  4025                           
  4026                           ;incstack = 0
  4027  005E7A  0E01               	movlw	1
  4028  005E7C  0100               	movlb	0	; () banked
  4029  005E7E  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  4030  005E80  0E01               	movlw	1
  4031  005E82  EC25  F02F         	call	_lcd_gotoxy
  4032                           
  4033                           ;screenDrawers.h: 198: printf("Contrasena      \n");
  4034  005E86  0ED7               	movlw	low STR_27
  4035  005E88  0101               	movlb	1	; () banked
  4036  005E8A  6F36               	movwf	printf@f& (0+255),b
  4037  005E8C  0E7D               	movlw	high STR_27
  4038  005E8E  0101               	movlb	1	; () banked
  4039  005E90  6F37               	movwf	(printf@f+1)& (0+255),b
  4040  005E92  EC61  F000         	call	_printf	;wreg free
  4041                           
  4042                           ;screenDrawers.h: 199: printf("     Erronea    ");
  4043  005E96  0E3E               	movlw	low STR_28
  4044  005E98  0101               	movlb	1	; () banked
  4045  005E9A  6F36               	movwf	printf@f& (0+255),b
  4046  005E9C  0E7F               	movlw	high STR_28
  4047  005E9E  0101               	movlb	1	; () banked
  4048  005EA0  6F37               	movwf	(printf@f+1)& (0+255),b
  4049  005EA2  EC61  F000         	call	_printf	;wreg free
  4050  005EA6  0012               	return		;funcret
  4051  005EA8                     __end_of_drawBadPass:
  4052                           	opt stack 0
  4053                           tblptru	equ	0xFF8
  4054                           tblptrh	equ	0xFF7
  4055                           tblptrl	equ	0xFF6
  4056                           tablat	equ	0xFF5
  4057                           prodh	equ	0xFF4
  4058                           prodl	equ	0xFF3
  4059                           intcon	equ	0xFF2
  4060                           postinc0	equ	0xFEE
  4061                           wreg	equ	0xFE8
  4062                           postdec1	equ	0xFE5
  4063                           fsr1l	equ	0xFE1
  4064                           indf2	equ	0xFDF
  4065                           fsr2h	equ	0xFDA
  4066                           fsr2l	equ	0xFD9
  4067                           status	equ	0xFD8
  4068                           
  4069 ;; *************** function _drawAutoCalibRM *****************
  4070 ;; Defined at:
  4071 ;;		line 237 in file "source/screenDrawers.h"
  4072 ;; Parameters:    Size  Location     Type
  4073 ;;		None
  4074 ;; Auto vars:     Size  Location     Type
  4075 ;;		None
  4076 ;; Return value:  Size  Location     Type
  4077 ;;                  1    wreg      void 
  4078 ;; Registers used:
  4079 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4080 ;; Tracked objects:
  4081 ;;		On entry : 0/0
  4082 ;;		On exit  : 0/0
  4083 ;;		Unchanged: 0/0
  4084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4085 ;;      Params:         0       0       0       0       0       0       0
  4086 ;;      Locals:         0       0       0       0       0       0       0
  4087 ;;      Temps:          0       0       0       0       0       0       0
  4088 ;;      Totals:         0       0       0       0       0       0       0
  4089 ;;Total ram usage:        0 bytes
  4090 ;; Hardware stack levels used:    1
  4091 ;; Hardware stack levels required when called:   16
  4092 ;; This function calls:
  4093 ;;		_drawValEditor
  4094 ;;		_lcd_gotoxy
  4095 ;;		_printf
  4096 ;; This function is called by:
  4097 ;;		_drawScreen
  4098 ;; This function uses a non-reentrant model
  4099 ;;
  4100                           
  4101                           	psect	text13
  4102  005DE6                     __ptext13:
  4103                           	opt stack 0
  4104  005DE6                     _drawAutoCalibRM:
  4105                           	opt stack 13
  4106                           
  4107                           ;screenDrawers.h: 238: lcd_gotoxy(1, 1);
  4108                           
  4109                           ;incstack = 0
  4110  005DE6  0E01               	movlw	1
  4111  005DE8  0100               	movlb	0	; () banked
  4112  005DEA  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  4113  005DEC  0E01               	movlw	1
  4114  005DEE  EC25  F02F         	call	_lcd_gotoxy
  4115                           
  4116                           ;screenDrawers.h: 239: printf("Peso Real:     \n");
  4117  005DF2  0E2D               	movlw	low STR_40
  4118  005DF4  0101               	movlb	1	; () banked
  4119  005DF6  6F36               	movwf	printf@f& (0+255),b
  4120  005DF8  0E7F               	movlw	high STR_40
  4121  005DFA  0101               	movlb	1	; () banked
  4122  005DFC  6F37               	movwf	(printf@f+1)& (0+255),b
  4123  005DFE  EC61  F000         	call	_printf	;wreg free
  4124                           
  4125                           ;screenDrawers.h: 240: drawValEditor();
  4126  005E02  ECBB  F013         	call	_drawValEditor	;wreg free
  4127                           
  4128                           ;screenDrawers.h: 241: printf("kg    ");
  4129  005E06  0EF0               	movlw	low STR_20
  4130  005E08  0101               	movlb	1	; () banked
  4131  005E0A  6F36               	movwf	printf@f& (0+255),b
  4132  005E0C  0E7F               	movlw	high STR_20
  4133  005E0E  0101               	movlb	1	; () banked
  4134  005E10  6F37               	movwf	(printf@f+1)& (0+255),b
  4135  005E12  EC61  F000         	call	_printf	;wreg free
  4136  005E16  0012               	return		;funcret
  4137  005E18                     __end_of_drawAutoCalibRM:
  4138                           	opt stack 0
  4139                           tblptru	equ	0xFF8
  4140                           tblptrh	equ	0xFF7
  4141                           tblptrl	equ	0xFF6
  4142                           tablat	equ	0xFF5
  4143                           prodh	equ	0xFF4
  4144                           prodl	equ	0xFF3
  4145                           intcon	equ	0xFF2
  4146                           postinc0	equ	0xFEE
  4147                           wreg	equ	0xFE8
  4148                           postdec1	equ	0xFE5
  4149                           fsr1l	equ	0xFE1
  4150                           indf2	equ	0xFDF
  4151                           fsr2h	equ	0xFDA
  4152                           fsr2l	equ	0xFD9
  4153                           status	equ	0xFD8
  4154                           
  4155 ;; *************** function _drawValEditor *****************
  4156 ;; Defined at:
  4157 ;;		line 58 in file "source/screenDrawers.h"
  4158 ;; Parameters:    Size  Location     Type
  4159 ;;		None
  4160 ;; Auto vars:     Size  Location     Type
  4161 ;;		None
  4162 ;; Return value:  Size  Location     Type
  4163 ;;                  1    wreg      void 
  4164 ;; Registers used:
  4165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4166 ;; Tracked objects:
  4167 ;;		On entry : 0/0
  4168 ;;		On exit  : 0/0
  4169 ;;		Unchanged: 0/0
  4170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4171 ;;      Params:         0       0       0       0       0       0       0
  4172 ;;      Locals:         0       0       0       0       0       0       0
  4173 ;;      Temps:          0       0       0       0       0       0       0
  4174 ;;      Totals:         0       0       0       0       0       0       0
  4175 ;;Total ram usage:        0 bytes
  4176 ;; Hardware stack levels used:    1
  4177 ;; Hardware stack levels required when called:   15
  4178 ;; This function calls:
  4179 ;;		_lcd_gotoxy
  4180 ;;		_printf
  4181 ;; This function is called by:
  4182 ;;		_drawChanVal
  4183 ;;		_drawAutoCalibRM
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text14
  4188  002776                     __ptext14:
  4189                           	opt stack 0
  4190  002776                     _drawValEditor:
  4191                           	opt stack 13
  4192                           
  4193                           ;screenDrawers.h: 59: if(chanValSection == 5) {
  4194                           
  4195                           ;incstack = 0
  4196  002776  0E05               	movlw	5
  4197  002778  0101               	movlb	1	; () banked
  4198  00277A  1996               	xorwf	_chanValSection& (0+255),w,b
  4199  00277C  A4D8               	btfss	status,2,c
  4200  00277E  D037               	goto	l9779
  4201                           
  4202                           ; BSR set to: 1
  4203                           ;screenDrawers.h: 60: printf(" %u%u%u.%u%u%c%u ", chanValdig[0], chanValdig[1],
  4204                           ;screenDrawers.h: 61: chanValdig[2], chanValdig[3], chanValdig[4], flech, chanValdig[5])
      +                          ;
  4205  002780  0EC1               	movlw	low STR_1
  4206  002782  0101               	movlb	1	; () banked
  4207  002784  6F36               	movwf	printf@f& (0+255),b
  4208  002786  0E7E               	movlw	high STR_1
  4209  002788  0101               	movlb	1	; () banked
  4210  00278A  6F37               	movwf	(printf@f+1)& (0+255),b
  4211  00278C  0101               	movlb	1	; () banked
  4212  00278E  519E               	movf	_chanValdig& (0+255),w,b
  4213  002790  0101               	movlb	1	; () banked
  4214  002792  6F38               	movwf	(?_printf+2)& (0+255),b
  4215  002794  6B39               	clrf	(?_printf+3)& (0+255),b
  4216  002796  BF38               	btfsc	(?_printf+2)& (0+255),7,b
  4217  002798  0739               	decf	(?_printf+3)& (0+255),f,b
  4218  00279A  0101               	movlb	1	; () banked
  4219  00279C  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4220  00279E  0101               	movlb	1	; () banked
  4221  0027A0  6F3A               	movwf	(?_printf+4)& (0+255),b
  4222  0027A2  6B3B               	clrf	(?_printf+5)& (0+255),b
  4223  0027A4  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  4224  0027A6  073B               	decf	(?_printf+5)& (0+255),f,b
  4225  0027A8  0101               	movlb	1	; () banked
  4226  0027AA  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4227  0027AC  0101               	movlb	1	; () banked
  4228  0027AE  6F3C               	movwf	(?_printf+6)& (0+255),b
  4229  0027B0  6B3D               	clrf	(?_printf+7)& (0+255),b
  4230  0027B2  BF3C               	btfsc	(?_printf+6)& (0+255),7,b
  4231  0027B4  073D               	decf	(?_printf+7)& (0+255),f,b
  4232  0027B6  0101               	movlb	1	; () banked
  4233  0027B8  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4234  0027BA  0101               	movlb	1	; () banked
  4235  0027BC  6F3E               	movwf	(?_printf+8)& (0+255),b
  4236  0027BE  6B3F               	clrf	(?_printf+9)& (0+255),b
  4237  0027C0  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  4238  0027C2  073F               	decf	(?_printf+9)& (0+255),f,b
  4239  0027C4  0101               	movlb	1	; () banked
  4240  0027C6  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4241  0027C8  0101               	movlb	1	; () banked
  4242  0027CA  6F40               	movwf	(?_printf+10)& (0+255),b
  4243  0027CC  6B41               	clrf	(?_printf+11)& (0+255),b
  4244  0027CE  BF40               	btfsc	(?_printf+10)& (0+255),7,b
  4245  0027D0  0741               	decf	(?_printf+11)& (0+255),f,b
  4246  0027D2  C197  F142         	movff	_flech,?_printf+12
  4247  0027D6  0101               	movlb	1	; () banked
  4248  0027D8  6B43               	clrf	(?_printf+13)& (0+255),b
  4249  0027DA  0101               	movlb	1	; () banked
  4250  0027DC  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4251  0027DE  0101               	movlb	1	; () banked
  4252  0027E0  6F44               	movwf	(?_printf+14)& (0+255),b
  4253  0027E2  6B45               	clrf	(?_printf+15)& (0+255),b
  4254  0027E4  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4255  0027E6  0745               	decf	(?_printf+15)& (0+255),f,b
  4256  0027E8  EC61  F000         	call	_printf	;wreg free
  4257                           
  4258                           ;screenDrawers.h: 62: }else if(chanValSection == 4) {
  4259  0027EC  D129               	goto	l9799
  4260  0027EE                     l9779:
  4261  0027EE  0E04               	movlw	4
  4262  0027F0  0101               	movlb	1	; () banked
  4263  0027F2  1996               	xorwf	_chanValSection& (0+255),w,b
  4264  0027F4  A4D8               	btfss	status,2,c
  4265  0027F6  D037               	goto	l9783
  4266                           
  4267                           ; BSR set to: 1
  4268                           ;screenDrawers.h: 63: printf(" %u%u%u.%u%c%u%u ", chanValdig[0], chanValdig[1],
  4269                           ;screenDrawers.h: 64: chanValdig[2], chanValdig[3], flech, chanValdig[4], chanValdig[5])
      +                          ;
  4270  0027F8  0ED3               	movlw	low STR_2
  4271  0027FA  0101               	movlb	1	; () banked
  4272  0027FC  6F36               	movwf	printf@f& (0+255),b
  4273  0027FE  0E7E               	movlw	high STR_2
  4274  002800  0101               	movlb	1	; () banked
  4275  002802  6F37               	movwf	(printf@f+1)& (0+255),b
  4276  002804  0101               	movlb	1	; () banked
  4277  002806  519E               	movf	_chanValdig& (0+255),w,b
  4278  002808  0101               	movlb	1	; () banked
  4279  00280A  6F38               	movwf	(?_printf+2)& (0+255),b
  4280  00280C  6B39               	clrf	(?_printf+3)& (0+255),b
  4281  00280E  BF38               	btfsc	(?_printf+2)& (0+255),7,b
  4282  002810  0739               	decf	(?_printf+3)& (0+255),f,b
  4283  002812  0101               	movlb	1	; () banked
  4284  002814  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4285  002816  0101               	movlb	1	; () banked
  4286  002818  6F3A               	movwf	(?_printf+4)& (0+255),b
  4287  00281A  6B3B               	clrf	(?_printf+5)& (0+255),b
  4288  00281C  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  4289  00281E  073B               	decf	(?_printf+5)& (0+255),f,b
  4290  002820  0101               	movlb	1	; () banked
  4291  002822  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4292  002824  0101               	movlb	1	; () banked
  4293  002826  6F3C               	movwf	(?_printf+6)& (0+255),b
  4294  002828  6B3D               	clrf	(?_printf+7)& (0+255),b
  4295  00282A  BF3C               	btfsc	(?_printf+6)& (0+255),7,b
  4296  00282C  073D               	decf	(?_printf+7)& (0+255),f,b
  4297  00282E  0101               	movlb	1	; () banked
  4298  002830  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4299  002832  0101               	movlb	1	; () banked
  4300  002834  6F3E               	movwf	(?_printf+8)& (0+255),b
  4301  002836  6B3F               	clrf	(?_printf+9)& (0+255),b
  4302  002838  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  4303  00283A  073F               	decf	(?_printf+9)& (0+255),f,b
  4304  00283C  C197  F140         	movff	_flech,?_printf+10
  4305  002840  0101               	movlb	1	; () banked
  4306  002842  6B41               	clrf	(?_printf+11)& (0+255),b
  4307  002844  0101               	movlb	1	; () banked
  4308  002846  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4309  002848  0101               	movlb	1	; () banked
  4310  00284A  6F42               	movwf	(?_printf+12)& (0+255),b
  4311  00284C  6B43               	clrf	(?_printf+13)& (0+255),b
  4312  00284E  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  4313  002850  0743               	decf	(?_printf+13)& (0+255),f,b
  4314  002852  0101               	movlb	1	; () banked
  4315  002854  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4316  002856  0101               	movlb	1	; () banked
  4317  002858  6F44               	movwf	(?_printf+14)& (0+255),b
  4318  00285A  6B45               	clrf	(?_printf+15)& (0+255),b
  4319  00285C  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4320  00285E  0745               	decf	(?_printf+15)& (0+255),f,b
  4321  002860  EC61  F000         	call	_printf	;wreg free
  4322                           
  4323                           ;screenDrawers.h: 65: }else if(chanValSection == 3) {
  4324  002864  D0ED               	goto	l9799
  4325  002866                     l9783:
  4326  002866  0E03               	movlw	3
  4327  002868  0101               	movlb	1	; () banked
  4328  00286A  1996               	xorwf	_chanValSection& (0+255),w,b
  4329  00286C  A4D8               	btfss	status,2,c
  4330  00286E  D037               	goto	l9787
  4331                           
  4332                           ; BSR set to: 1
  4333                           ;screenDrawers.h: 66: printf(" %u%u%u.%c%u%u%u ", chanValdig[0], chanValdig[1],
  4334                           ;screenDrawers.h: 67: chanValdig[2], flech, chanValdig[3], chanValdig[4], chanValdig[5])
      +                          ;
  4335  002870  0E1B               	movlw	low STR_3
  4336  002872  0101               	movlb	1	; () banked
  4337  002874  6F36               	movwf	printf@f& (0+255),b
  4338  002876  0E7F               	movlw	high STR_3
  4339  002878  0101               	movlb	1	; () banked
  4340  00287A  6F37               	movwf	(printf@f+1)& (0+255),b
  4341  00287C  0101               	movlb	1	; () banked
  4342  00287E  519E               	movf	_chanValdig& (0+255),w,b
  4343  002880  0101               	movlb	1	; () banked
  4344  002882  6F38               	movwf	(?_printf+2)& (0+255),b
  4345  002884  6B39               	clrf	(?_printf+3)& (0+255),b
  4346  002886  BF38               	btfsc	(?_printf+2)& (0+255),7,b
  4347  002888  0739               	decf	(?_printf+3)& (0+255),f,b
  4348  00288A  0101               	movlb	1	; () banked
  4349  00288C  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4350  00288E  0101               	movlb	1	; () banked
  4351  002890  6F3A               	movwf	(?_printf+4)& (0+255),b
  4352  002892  6B3B               	clrf	(?_printf+5)& (0+255),b
  4353  002894  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  4354  002896  073B               	decf	(?_printf+5)& (0+255),f,b
  4355  002898  0101               	movlb	1	; () banked
  4356  00289A  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4357  00289C  0101               	movlb	1	; () banked
  4358  00289E  6F3C               	movwf	(?_printf+6)& (0+255),b
  4359  0028A0  6B3D               	clrf	(?_printf+7)& (0+255),b
  4360  0028A2  BF3C               	btfsc	(?_printf+6)& (0+255),7,b
  4361  0028A4  073D               	decf	(?_printf+7)& (0+255),f,b
  4362  0028A6  C197  F13E         	movff	_flech,?_printf+8
  4363  0028AA  0101               	movlb	1	; () banked
  4364  0028AC  6B3F               	clrf	(?_printf+9)& (0+255),b
  4365  0028AE  0101               	movlb	1	; () banked
  4366  0028B0  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4367  0028B2  0101               	movlb	1	; () banked
  4368  0028B4  6F40               	movwf	(?_printf+10)& (0+255),b
  4369  0028B6  6B41               	clrf	(?_printf+11)& (0+255),b
  4370  0028B8  BF40               	btfsc	(?_printf+10)& (0+255),7,b
  4371  0028BA  0741               	decf	(?_printf+11)& (0+255),f,b
  4372  0028BC  0101               	movlb	1	; () banked
  4373  0028BE  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4374  0028C0  0101               	movlb	1	; () banked
  4375  0028C2  6F42               	movwf	(?_printf+12)& (0+255),b
  4376  0028C4  6B43               	clrf	(?_printf+13)& (0+255),b
  4377  0028C6  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  4378  0028C8  0743               	decf	(?_printf+13)& (0+255),f,b
  4379  0028CA  0101               	movlb	1	; () banked
  4380  0028CC  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4381  0028CE  0101               	movlb	1	; () banked
  4382  0028D0  6F44               	movwf	(?_printf+14)& (0+255),b
  4383  0028D2  6B45               	clrf	(?_printf+15)& (0+255),b
  4384  0028D4  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4385  0028D6  0745               	decf	(?_printf+15)& (0+255),f,b
  4386  0028D8  EC61  F000         	call	_printf	;wreg free
  4387                           
  4388                           ;screenDrawers.h: 68: }else if(chanValSection == 2) {
  4389  0028DC  D0B1               	goto	l9799
  4390  0028DE                     l9787:
  4391  0028DE  0E02               	movlw	2
  4392  0028E0  0101               	movlb	1	; () banked
  4393  0028E2  1996               	xorwf	_chanValSection& (0+255),w,b
  4394  0028E4  A4D8               	btfss	status,2,c
  4395  0028E6  D037               	goto	l9791
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;screenDrawers.h: 69: printf(" %u%u%c%u.%u%u%u ", chanValdig[0], chanValdig[1], flech,
  4399                           ;screenDrawers.h: 70: chanValdig[2], chanValdig[3], chanValdig[4], chanValdig[5]);
  4400  0028E8  0EE5               	movlw	low STR_4
  4401  0028EA  0101               	movlb	1	; () banked
  4402  0028EC  6F36               	movwf	printf@f& (0+255),b
  4403  0028EE  0E7E               	movlw	high STR_4
  4404  0028F0  0101               	movlb	1	; () banked
  4405  0028F2  6F37               	movwf	(printf@f+1)& (0+255),b
  4406  0028F4  0101               	movlb	1	; () banked
  4407  0028F6  519E               	movf	_chanValdig& (0+255),w,b
  4408  0028F8  0101               	movlb	1	; () banked
  4409  0028FA  6F38               	movwf	(?_printf+2)& (0+255),b
  4410  0028FC  6B39               	clrf	(?_printf+3)& (0+255),b
  4411  0028FE  BF38               	btfsc	(?_printf+2)& (0+255),7,b
  4412  002900  0739               	decf	(?_printf+3)& (0+255),f,b
  4413  002902  0101               	movlb	1	; () banked
  4414  002904  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4415  002906  0101               	movlb	1	; () banked
  4416  002908  6F3A               	movwf	(?_printf+4)& (0+255),b
  4417  00290A  6B3B               	clrf	(?_printf+5)& (0+255),b
  4418  00290C  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  4419  00290E  073B               	decf	(?_printf+5)& (0+255),f,b
  4420  002910  C197  F13C         	movff	_flech,?_printf+6
  4421  002914  0101               	movlb	1	; () banked
  4422  002916  6B3D               	clrf	(?_printf+7)& (0+255),b
  4423  002918  0101               	movlb	1	; () banked
  4424  00291A  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4425  00291C  0101               	movlb	1	; () banked
  4426  00291E  6F3E               	movwf	(?_printf+8)& (0+255),b
  4427  002920  6B3F               	clrf	(?_printf+9)& (0+255),b
  4428  002922  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  4429  002924  073F               	decf	(?_printf+9)& (0+255),f,b
  4430  002926  0101               	movlb	1	; () banked
  4431  002928  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4432  00292A  0101               	movlb	1	; () banked
  4433  00292C  6F40               	movwf	(?_printf+10)& (0+255),b
  4434  00292E  6B41               	clrf	(?_printf+11)& (0+255),b
  4435  002930  BF40               	btfsc	(?_printf+10)& (0+255),7,b
  4436  002932  0741               	decf	(?_printf+11)& (0+255),f,b
  4437  002934  0101               	movlb	1	; () banked
  4438  002936  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4439  002938  0101               	movlb	1	; () banked
  4440  00293A  6F42               	movwf	(?_printf+12)& (0+255),b
  4441  00293C  6B43               	clrf	(?_printf+13)& (0+255),b
  4442  00293E  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  4443  002940  0743               	decf	(?_printf+13)& (0+255),f,b
  4444  002942  0101               	movlb	1	; () banked
  4445  002944  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4446  002946  0101               	movlb	1	; () banked
  4447  002948  6F44               	movwf	(?_printf+14)& (0+255),b
  4448  00294A  6B45               	clrf	(?_printf+15)& (0+255),b
  4449  00294C  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4450  00294E  0745               	decf	(?_printf+15)& (0+255),f,b
  4451  002950  EC61  F000         	call	_printf	;wreg free
  4452                           
  4453                           ;screenDrawers.h: 71: }else if(chanValSection == 1) {
  4454  002954  D075               	goto	l9799
  4455  002956                     l9791:
  4456  002956  0101               	movlb	1	; () banked
  4457  002958  0596               	decf	_chanValSection& (0+255),w,b
  4458  00295A  A4D8               	btfss	status,2,c
  4459  00295C  D037               	goto	l9795
  4460                           
  4461                           ; BSR set to: 1
  4462                           ;screenDrawers.h: 72: printf(" %u%c%u%u.%u%u%u ", chanValdig[0], flech, chanValdig[1],
  4463                           ;screenDrawers.h: 73: chanValdig[2], chanValdig[3], chanValdig[4], chanValdig[5]);
  4464  00295E  0EF7               	movlw	low STR_5
  4465  002960  0101               	movlb	1	; () banked
  4466  002962  6F36               	movwf	printf@f& (0+255),b
  4467  002964  0E7E               	movlw	high STR_5
  4468  002966  0101               	movlb	1	; () banked
  4469  002968  6F37               	movwf	(printf@f+1)& (0+255),b
  4470  00296A  0101               	movlb	1	; () banked
  4471  00296C  519E               	movf	_chanValdig& (0+255),w,b
  4472  00296E  0101               	movlb	1	; () banked
  4473  002970  6F38               	movwf	(?_printf+2)& (0+255),b
  4474  002972  6B39               	clrf	(?_printf+3)& (0+255),b
  4475  002974  BF38               	btfsc	(?_printf+2)& (0+255),7,b
  4476  002976  0739               	decf	(?_printf+3)& (0+255),f,b
  4477  002978  C197  F13A         	movff	_flech,?_printf+4
  4478  00297C  0101               	movlb	1	; () banked
  4479  00297E  6B3B               	clrf	(?_printf+5)& (0+255),b
  4480  002980  0101               	movlb	1	; () banked
  4481  002982  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4482  002984  0101               	movlb	1	; () banked
  4483  002986  6F3C               	movwf	(?_printf+6)& (0+255),b
  4484  002988  6B3D               	clrf	(?_printf+7)& (0+255),b
  4485  00298A  BF3C               	btfsc	(?_printf+6)& (0+255),7,b
  4486  00298C  073D               	decf	(?_printf+7)& (0+255),f,b
  4487  00298E  0101               	movlb	1	; () banked
  4488  002990  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4489  002992  0101               	movlb	1	; () banked
  4490  002994  6F3E               	movwf	(?_printf+8)& (0+255),b
  4491  002996  6B3F               	clrf	(?_printf+9)& (0+255),b
  4492  002998  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  4493  00299A  073F               	decf	(?_printf+9)& (0+255),f,b
  4494  00299C  0101               	movlb	1	; () banked
  4495  00299E  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4496  0029A0  0101               	movlb	1	; () banked
  4497  0029A2  6F40               	movwf	(?_printf+10)& (0+255),b
  4498  0029A4  6B41               	clrf	(?_printf+11)& (0+255),b
  4499  0029A6  BF40               	btfsc	(?_printf+10)& (0+255),7,b
  4500  0029A8  0741               	decf	(?_printf+11)& (0+255),f,b
  4501  0029AA  0101               	movlb	1	; () banked
  4502  0029AC  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4503  0029AE  0101               	movlb	1	; () banked
  4504  0029B0  6F42               	movwf	(?_printf+12)& (0+255),b
  4505  0029B2  6B43               	clrf	(?_printf+13)& (0+255),b
  4506  0029B4  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  4507  0029B6  0743               	decf	(?_printf+13)& (0+255),f,b
  4508  0029B8  0101               	movlb	1	; () banked
  4509  0029BA  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4510  0029BC  0101               	movlb	1	; () banked
  4511  0029BE  6F44               	movwf	(?_printf+14)& (0+255),b
  4512  0029C0  6B45               	clrf	(?_printf+15)& (0+255),b
  4513  0029C2  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4514  0029C4  0745               	decf	(?_printf+15)& (0+255),f,b
  4515  0029C6  EC61  F000         	call	_printf	;wreg free
  4516                           
  4517                           ;screenDrawers.h: 74: }else if(chanValSection == 0) {
  4518  0029CA  D03A               	goto	l9799
  4519  0029CC                     l9795:
  4520  0029CC  0101               	movlb	1	; () banked
  4521  0029CE  5196               	movf	_chanValSection& (0+255),w,b
  4522  0029D0  A4D8               	btfss	status,2,c
  4523  0029D2  D036               	goto	l9799
  4524                           
  4525                           ; BSR set to: 1
  4526                           ;screenDrawers.h: 75: printf(" %c%u%u%u.%u%u%u ", flech, chanValdig[0], chanValdig[1],
  4527                           ;screenDrawers.h: 76: chanValdig[2], chanValdig[3], chanValdig[4], chanValdig[5]);
  4528  0029D4  0E09               	movlw	low STR_6
  4529  0029D6  0101               	movlb	1	; () banked
  4530  0029D8  6F36               	movwf	printf@f& (0+255),b
  4531  0029DA  0E7F               	movlw	high STR_6
  4532  0029DC  0101               	movlb	1	; () banked
  4533  0029DE  6F37               	movwf	(printf@f+1)& (0+255),b
  4534  0029E0  C197  F138         	movff	_flech,?_printf+2
  4535  0029E4  0101               	movlb	1	; () banked
  4536  0029E6  6B39               	clrf	(?_printf+3)& (0+255),b
  4537  0029E8  0101               	movlb	1	; () banked
  4538  0029EA  519E               	movf	_chanValdig& (0+255),w,b
  4539  0029EC  0101               	movlb	1	; () banked
  4540  0029EE  6F3A               	movwf	(?_printf+4)& (0+255),b
  4541  0029F0  6B3B               	clrf	(?_printf+5)& (0+255),b
  4542  0029F2  BF3A               	btfsc	(?_printf+4)& (0+255),7,b
  4543  0029F4  073B               	decf	(?_printf+5)& (0+255),f,b
  4544  0029F6  0101               	movlb	1	; () banked
  4545  0029F8  519F               	movf	(_chanValdig+1)& (0+255),w,b
  4546  0029FA  0101               	movlb	1	; () banked
  4547  0029FC  6F3C               	movwf	(?_printf+6)& (0+255),b
  4548  0029FE  6B3D               	clrf	(?_printf+7)& (0+255),b
  4549  002A00  BF3C               	btfsc	(?_printf+6)& (0+255),7,b
  4550  002A02  073D               	decf	(?_printf+7)& (0+255),f,b
  4551  002A04  0101               	movlb	1	; () banked
  4552  002A06  51A0               	movf	(_chanValdig+2)& (0+255),w,b
  4553  002A08  0101               	movlb	1	; () banked
  4554  002A0A  6F3E               	movwf	(?_printf+8)& (0+255),b
  4555  002A0C  6B3F               	clrf	(?_printf+9)& (0+255),b
  4556  002A0E  BF3E               	btfsc	(?_printf+8)& (0+255),7,b
  4557  002A10  073F               	decf	(?_printf+9)& (0+255),f,b
  4558  002A12  0101               	movlb	1	; () banked
  4559  002A14  51A1               	movf	(_chanValdig+3)& (0+255),w,b
  4560  002A16  0101               	movlb	1	; () banked
  4561  002A18  6F40               	movwf	(?_printf+10)& (0+255),b
  4562  002A1A  6B41               	clrf	(?_printf+11)& (0+255),b
  4563  002A1C  BF40               	btfsc	(?_printf+10)& (0+255),7,b
  4564  002A1E  0741               	decf	(?_printf+11)& (0+255),f,b
  4565  002A20  0101               	movlb	1	; () banked
  4566  002A22  51A2               	movf	(_chanValdig+4)& (0+255),w,b
  4567  002A24  0101               	movlb	1	; () banked
  4568  002A26  6F42               	movwf	(?_printf+12)& (0+255),b
  4569  002A28  6B43               	clrf	(?_printf+13)& (0+255),b
  4570  002A2A  BF42               	btfsc	(?_printf+12)& (0+255),7,b
  4571  002A2C  0743               	decf	(?_printf+13)& (0+255),f,b
  4572  002A2E  0101               	movlb	1	; () banked
  4573  002A30  51A3               	movf	(_chanValdig+5)& (0+255),w,b
  4574  002A32  0101               	movlb	1	; () banked
  4575  002A34  6F44               	movwf	(?_printf+14)& (0+255),b
  4576  002A36  6B45               	clrf	(?_printf+15)& (0+255),b
  4577  002A38  BF44               	btfsc	(?_printf+14)& (0+255),7,b
  4578  002A3A  0745               	decf	(?_printf+15)& (0+255),f,b
  4579  002A3C  EC61  F000         	call	_printf	;wreg free
  4580  002A40                     l9799:
  4581                           
  4582                           ;screenDrawers.h: 77: }
  4583                           ;screenDrawers.h: 78: lcd_gotoxy(11, 2);
  4584  002A40  0E02               	movlw	2
  4585  002A42  0100               	movlb	0	; () banked
  4586  002A44  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  4587  002A46  0E0B               	movlw	11
  4588  002A48  EC25  F02F         	call	_lcd_gotoxy
  4589  002A4C  0012               	return		;funcret
  4590  002A4E                     __end_of_drawValEditor:
  4591                           	opt stack 0
  4592                           tblptru	equ	0xFF8
  4593                           tblptrh	equ	0xFF7
  4594                           tblptrl	equ	0xFF6
  4595                           tablat	equ	0xFF5
  4596                           prodh	equ	0xFF4
  4597                           prodl	equ	0xFF3
  4598                           intcon	equ	0xFF2
  4599                           postinc0	equ	0xFEE
  4600                           wreg	equ	0xFE8
  4601                           postdec1	equ	0xFE5
  4602                           fsr1l	equ	0xFE1
  4603                           indf2	equ	0xFDF
  4604                           fsr2h	equ	0xFDA
  4605                           fsr2l	equ	0xFD9
  4606                           status	equ	0xFD8
  4607                           
  4608 ;; *************** function _drawAdvON *****************
  4609 ;; Defined at:
  4610 ;;		line 202 in file "source/screenDrawers.h"
  4611 ;; Parameters:    Size  Location     Type
  4612 ;;		None
  4613 ;; Auto vars:     Size  Location     Type
  4614 ;;		None
  4615 ;; Return value:  Size  Location     Type
  4616 ;;                  1    wreg      void 
  4617 ;; Registers used:
  4618 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4619 ;; Tracked objects:
  4620 ;;		On entry : 0/0
  4621 ;;		On exit  : 0/0
  4622 ;;		Unchanged: 0/0
  4623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4624 ;;      Params:         0       0       0       0       0       0       0
  4625 ;;      Locals:         0       0       0       0       0       0       0
  4626 ;;      Temps:          0       0       0       0       0       0       0
  4627 ;;      Totals:         0       0       0       0       0       0       0
  4628 ;;Total ram usage:        0 bytes
  4629 ;; Hardware stack levels used:    1
  4630 ;; Hardware stack levels required when called:   15
  4631 ;; This function calls:
  4632 ;;		_lcd_gotoxy
  4633 ;;		_printf
  4634 ;; This function is called by:
  4635 ;;		_drawScreen
  4636 ;; This function uses a non-reentrant model
  4637 ;;
  4638                           
  4639                           	psect	text15
  4640  005EA8                     __ptext15:
  4641                           	opt stack 0
  4642  005EA8                     _drawAdvON:
  4643                           	opt stack 14
  4644                           
  4645                           ;screenDrawers.h: 203: lcd_gotoxy(1, 1);
  4646                           
  4647                           ;incstack = 0
  4648  005EA8  0E01               	movlw	1
  4649  005EAA  0100               	movlb	0	; () banked
  4650  005EAC  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  4651  005EAE  0E01               	movlw	1
  4652  005EB0  EC25  F02F         	call	_lcd_gotoxy
  4653                           
  4654                           ;screenDrawers.h: 204: printf("Modo Configurar:\n");
  4655  005EB4  0E67               	movlw	low STR_29
  4656  005EB6  0101               	movlb	1	; () banked
  4657  005EB8  6F36               	movwf	printf@f& (0+255),b
  4658  005EBA  0E7E               	movlw	high STR_29
  4659  005EBC  0101               	movlb	1	; () banked
  4660  005EBE  6F37               	movwf	(printf@f+1)& (0+255),b
  4661  005EC0  EC61  F000         	call	_printf	;wreg free
  4662                           
  4663                           ;screenDrawers.h: 205: printf("    Iniciado    ");
  4664  005EC4  0E4F               	movlw	low STR_30
  4665  005EC6  0101               	movlb	1	; () banked
  4666  005EC8  6F36               	movwf	printf@f& (0+255),b
  4667  005ECA  0E7F               	movlw	high STR_30
  4668  005ECC  0101               	movlb	1	; () banked
  4669  005ECE  6F37               	movwf	(printf@f+1)& (0+255),b
  4670  005ED0  EC61  F000         	call	_printf	;wreg free
  4671  005ED4  0012               	return		;funcret
  4672  005ED6                     __end_of_drawAdvON:
  4673                           	opt stack 0
  4674                           tblptru	equ	0xFF8
  4675                           tblptrh	equ	0xFF7
  4676                           tblptrl	equ	0xFF6
  4677                           tablat	equ	0xFF5
  4678                           prodh	equ	0xFF4
  4679                           prodl	equ	0xFF3
  4680                           intcon	equ	0xFF2
  4681                           postinc0	equ	0xFEE
  4682                           wreg	equ	0xFE8
  4683                           postdec1	equ	0xFE5
  4684                           fsr1l	equ	0xFE1
  4685                           indf2	equ	0xFDF
  4686                           fsr2h	equ	0xFDA
  4687                           fsr2l	equ	0xFD9
  4688                           status	equ	0xFD8
  4689                           
  4690 ;; *************** function _drawAdvOFF *****************
  4691 ;; Defined at:
  4692 ;;		line 208 in file "source/screenDrawers.h"
  4693 ;; Parameters:    Size  Location     Type
  4694 ;;		None
  4695 ;; Auto vars:     Size  Location     Type
  4696 ;;		None
  4697 ;; Return value:  Size  Location     Type
  4698 ;;                  1    wreg      void 
  4699 ;; Registers used:
  4700 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4701 ;; Tracked objects:
  4702 ;;		On entry : 0/0
  4703 ;;		On exit  : 0/0
  4704 ;;		Unchanged: 0/0
  4705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4706 ;;      Params:         0       0       0       0       0       0       0
  4707 ;;      Locals:         0       0       0       0       0       0       0
  4708 ;;      Temps:          0       0       0       0       0       0       0
  4709 ;;      Totals:         0       0       0       0       0       0       0
  4710 ;;Total ram usage:        0 bytes
  4711 ;; Hardware stack levels used:    1
  4712 ;; Hardware stack levels required when called:   15
  4713 ;; This function calls:
  4714 ;;		_lcd_gotoxy
  4715 ;;		_printf
  4716 ;; This function is called by:
  4717 ;;		_drawScreen
  4718 ;; This function uses a non-reentrant model
  4719 ;;
  4720                           
  4721                           	psect	text16
  4722  005ED6                     __ptext16:
  4723                           	opt stack 0
  4724  005ED6                     _drawAdvOFF:
  4725                           	opt stack 14
  4726                           
  4727                           ;screenDrawers.h: 209: lcd_gotoxy(1, 1);
  4728                           
  4729                           ;incstack = 0
  4730  005ED6  0E01               	movlw	1
  4731  005ED8  0100               	movlb	0	; () banked
  4732  005EDA  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  4733  005EDC  0E01               	movlw	1
  4734  005EDE  EC25  F02F         	call	_lcd_gotoxy
  4735                           
  4736                           ;screenDrawers.h: 210: printf("Modo Configurar:\n");
  4737  005EE2  0E67               	movlw	low STR_29
  4738  005EE4  0101               	movlb	1	; () banked
  4739  005EE6  6F36               	movwf	printf@f& (0+255),b
  4740  005EE8  0E7E               	movlw	high STR_29
  4741  005EEA  0101               	movlb	1	; () banked
  4742  005EEC  6F37               	movwf	(printf@f+1)& (0+255),b
  4743  005EEE  EC61  F000         	call	_printf	;wreg free
  4744                           
  4745                           ;screenDrawers.h: 211: printf("   Finalizado   ");
  4746  005EF2  0E71               	movlw	low STR_32
  4747  005EF4  0101               	movlb	1	; () banked
  4748  005EF6  6F36               	movwf	printf@f& (0+255),b
  4749  005EF8  0E7F               	movlw	high STR_32
  4750  005EFA  0101               	movlb	1	; () banked
  4751  005EFC  6F37               	movwf	(printf@f+1)& (0+255),b
  4752  005EFE  EC61  F000         	call	_printf	;wreg free
  4753  005F02  0012               	return		;funcret
  4754  005F04                     __end_of_drawAdvOFF:
  4755                           	opt stack 0
  4756                           tblptru	equ	0xFF8
  4757                           tblptrh	equ	0xFF7
  4758                           tblptrl	equ	0xFF6
  4759                           tablat	equ	0xFF5
  4760                           prodh	equ	0xFF4
  4761                           prodl	equ	0xFF3
  4762                           intcon	equ	0xFF2
  4763                           postinc0	equ	0xFEE
  4764                           wreg	equ	0xFE8
  4765                           postdec1	equ	0xFE5
  4766                           fsr1l	equ	0xFE1
  4767                           indf2	equ	0xFDF
  4768                           fsr2h	equ	0xFDA
  4769                           fsr2l	equ	0xFD9
  4770                           status	equ	0xFD8
  4771                           
  4772 ;; *************** function _printf *****************
  4773 ;; Defined at:
  4774 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4775 ;; Parameters:    Size  Location     Type
  4776 ;;  f               2   54[BANK1 ] PTR const unsigned char 
  4777 ;;		 -> STR_41(7), STR_40(17), STR_39(17), STR_38(18), 
  4778 ;;		 -> STR_37(19), STR_36(18), STR_35(18), STR_34(18), 
  4779 ;;		 -> STR_33(18), STR_32(17), STR_31(18), STR_30(17), 
  4780 ;;		 -> STR_29(18), STR_28(17), STR_27(18), STR_26(25), 
  4781 ;;		 -> STR_25(18), STR_24(7), STR_23(18), STR_22(16), 
  4782 ;;		 -> STR_21(18), STR_20(7), STR_19(18), STR_18(15), 
  4783 ;;		 -> STR_17(18), STR_16(15), STR_15(18), STR_14(16), 
  4784 ;;		 -> STR_13(18), STR_12(15), STR_11(18), STR_10(17), 
  4785 ;;		 -> STR_9(15), STR_8(18), STR_7(17), STR_6(18), 
  4786 ;;		 -> STR_5(18), STR_4(18), STR_3(18), STR_2(18), 
  4787 ;;		 -> STR_1(18), 
  4788 ;; Auto vars:     Size  Location     Type
  4789 ;;  fval            4  100[BANK1 ] PTR const unsigned char 
  4790 ;;  val             4   92[BANK1 ] unsigned long 
  4791 ;;  tmpval          4   88[BANK1 ] struct .
  4792 ;;  prec            2  104[BANK1 ] int 
  4793 ;;  width           2   98[BANK1 ] int 
  4794 ;;  exp             2   96[BANK1 ] int 
  4795 ;;  flag            2   86[BANK1 ] unsigned short 
  4796 ;;  ap              2   84[BANK1 ] PTR void [1]
  4797 ;;		 -> ?_printf(2), 
  4798 ;;  len             2   82[BANK1 ] unsigned int 
  4799 ;;  cp              2   80[BANK1 ] PTR const unsigned char 
  4800 ;;		 -> printf@c(1), 
  4801 ;;  c               1  106[BANK1 ] char 
  4802 ;;  d               1    0        unsigned char 
  4803 ;; Return value:  Size  Location     Type
  4804 ;;                  2   54[BANK1 ] int 
  4805 ;; Registers used:
  4806 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4807 ;; Tracked objects:
  4808 ;;		On entry : 0/0
  4809 ;;		On exit  : 0/0
  4810 ;;		Unchanged: 0/0
  4811 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4812 ;;      Params:         0       0      18       0       0       0       0
  4813 ;;      Locals:         0       0      31       0       0       0       0
  4814 ;;      Temps:          0       0       4       0       0       0       0
  4815 ;;      Totals:         0       0      53       0       0       0       0
  4816 ;;Total ram usage:       53 bytes
  4817 ;; Hardware stack levels used:    1
  4818 ;; Hardware stack levels required when called:   14
  4819 ;; This function calls:
  4820 ;;		___awdiv
  4821 ;;		___fladd
  4822 ;;		___flge
  4823 ;;		___flmul
  4824 ;;		___flneg
  4825 ;;		___flsub
  4826 ;;		___fltol
  4827 ;;		___lldiv
  4828 ;;		___llmod
  4829 ;;		___wmul
  4830 ;;		___xxtofl
  4831 ;;		__div_to_l_
  4832 ;;		__tdiv_to_l_
  4833 ;;		_fround
  4834 ;;		_isdigit
  4835 ;;		_putch
  4836 ;;		_scale
  4837 ;; This function is called by:
  4838 ;;		_drawValEditor
  4839 ;;		_drawMenu
  4840 ;;		_drawChanVal
  4841 ;;		_drawPassWord
  4842 ;;		_drawBadPass
  4843 ;;		_drawAdvON
  4844 ;;		_drawAdvOFF
  4845 ;;		_drawSNquest
  4846 ;;		_drawAutoCalibRM
  4847 ;;		_drawValEditors
  4848 ;;		_drawAutoCalibRes
  4849 ;; This function uses a non-reentrant model
  4850 ;;
  4851                           
  4852                           	psect	text17
  4853  0000C2                     __ptext17:
  4854                           	opt stack 0
  4855  0000C2                     _printf:
  4856                           	opt stack 14
  4857                           
  4858                           ;doprnt.c: 466: va_list ap;
  4859                           ;doprnt.c: 499: signed char c;
  4860                           ;doprnt.c: 501: int width;
  4861                           ;doprnt.c: 504: int prec;
  4862                           ;doprnt.c: 508: unsigned short flag;
  4863                           ;doprnt.c: 515: char d;
  4864                           ;doprnt.c: 516: double fval;
  4865                           ;doprnt.c: 517: int exp;
  4866                           ;doprnt.c: 523: union {
  4867                           ;doprnt.c: 524: unsigned long vd;
  4868                           ;doprnt.c: 525: double integ;
  4869                           ;doprnt.c: 526: } tmpval;
  4870                           ;doprnt.c: 528: unsigned long val;
  4871                           ;doprnt.c: 529: unsigned len;
  4872                           ;doprnt.c: 530: const char * cp;
  4873                           ;doprnt.c: 533: *ap = __va_start();
  4874                           
  4875                           ;incstack = 0
  4876  0000C2  0E38               	movlw	low (?_printf+2)
  4877  0000C4  0101               	movlb	1	; () banked
  4878  0000C6  6F54               	movwf	printf@ap& (0+255),b
  4879  0000C8  0E01               	movlw	high (?_printf+2)
  4880  0000CA  0101               	movlb	1	; () banked
  4881  0000CC  6F55               	movwf	(printf@ap+1)& (0+255),b
  4882                           
  4883                           ;doprnt.c: 536: while(c = *f++) {
  4884  0000CE  EF88  F006         	goto	l9439
  4885  0000D2                     l9141:
  4886                           
  4887                           ; BSR set to: 1
  4888                           ;doprnt.c: 538: if(c != '%')
  4889  0000D2  0E25               	movlw	37
  4890  0000D4  0101               	movlb	1	; () banked
  4891  0000D6  196A               	xorwf	printf@c& (0+255),w,b
  4892  0000D8  B4D8               	btfsc	status,2,c
  4893  0000DA  D006               	goto	l9145
  4894                           
  4895                           ; BSR set to: 1
  4896                           ;doprnt.c: 540: {
  4897                           ;doprnt.c: 541: (putch(c) );
  4898  0000DC  0101               	movlb	1	; () banked
  4899  0000DE  516A               	movf	printf@c& (0+255),w,b
  4900  0000E0  EC3B  F030         	call	_putch
  4901                           
  4902                           ;doprnt.c: 542: continue;
  4903  0000E4  EF88  F006         	goto	l9439
  4904  0000E8                     l9145:
  4905                           
  4906                           ;doprnt.c: 543: }
  4907                           ;doprnt.c: 546: width = 0;
  4908  0000E8  0E00               	movlw	0
  4909  0000EA  0101               	movlb	1	; () banked
  4910  0000EC  6F63               	movwf	(printf@width+1)& (0+255),b
  4911  0000EE  0E00               	movlw	0
  4912  0000F0  6F62               	movwf	printf@width& (0+255),b
  4913                           
  4914                           ;doprnt.c: 548: flag = 0;
  4915  0000F2  0E00               	movlw	0
  4916  0000F4  0101               	movlb	1	; () banked
  4917  0000F6  6F57               	movwf	(printf@flag+1)& (0+255),b
  4918  0000F8  0E00               	movlw	0
  4919  0000FA  6F56               	movwf	printf@flag& (0+255),b
  4920                           
  4921                           ; BSR set to: 1
  4922                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4923  0000FC  C136  FFF6         	movff	printf@f,tblptrl
  4924  000100  C137  FFF7         	movff	printf@f+1,tblptrh
  4925  000104                     	if	0	;tblptru may be non-zero
  4926  000104                     	endif
  4927  000104                     	if	0	;tblptru may be non-zero
  4928  000104                     	endif
  4929  000104  0008               	tblrd		*
  4930  000106  50F5               	movf	tablat,w,c
  4931  000108  ECAC  F02F         	call	_isdigit
  4932  00010C  A0D8               	btfss	status,0,c
  4933  00010E  D040               	goto	l9159
  4934                           
  4935                           ;doprnt.c: 598: width = 0;
  4936  000110  0E00               	movlw	0
  4937  000112  0101               	movlb	1	; () banked
  4938  000114  6F63               	movwf	(printf@width+1)& (0+255),b
  4939  000116  0E00               	movlw	0
  4940  000118  6F62               	movwf	printf@width& (0+255),b
  4941  00011A                     l9151:
  4942                           
  4943                           ;doprnt.c: 600: width *= 10;
  4944  00011A  C162  F08F         	movff	printf@width,___wmul@multiplier
  4945  00011E  C163  F090         	movff	printf@width+1,___wmul@multiplier+1
  4946  000122  0E00               	movlw	0
  4947  000124  0100               	movlb	0	; () banked
  4948  000126  6F92               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4949  000128  0E0A               	movlw	10
  4950  00012A  6F91               	movwf	___wmul@multiplicand& (0+255),b
  4951  00012C  ECBF  F02E         	call	___wmul	;wreg free
  4952  000130  C08F  F162         	movff	?___wmul,printf@width
  4953  000134  C090  F163         	movff	?___wmul+1,printf@width+1
  4954                           
  4955                           ;doprnt.c: 601: width += *f++ - '0';
  4956  000138  0ED0               	movlw	208
  4957  00013A  0101               	movlb	1	; () banked
  4958  00013C  6F48               	movwf	??_printf& (0+255),b
  4959  00013E  0EFF               	movlw	255
  4960  000140  0101               	movlb	1	; () banked
  4961  000142  6F49               	movwf	(??_printf+1)& (0+255),b
  4962  000144  C136  FFF6         	movff	printf@f,tblptrl
  4963  000148  C137  FFF7         	movff	printf@f+1,tblptrh
  4964  00014C                     	if	0	;tblptru may be non-zero
  4965  00014C                     	endif
  4966  00014C                     	if	0	;tblptru may be non-zero
  4967  00014C                     	endif
  4968  00014C  0008               	tblrd		*
  4969  00014E  50F5               	movf	tablat,w,c
  4970  000150  0101               	movlb	1	; () banked
  4971  000152  6F4A               	movwf	(??_printf+2)& (0+255),b
  4972  000154  6B4B               	clrf	(??_printf+3)& (0+255),b
  4973  000156  0101               	movlb	1	; () banked
  4974  000158  5148               	movf	??_printf& (0+255),w,b
  4975  00015A  0101               	movlb	1	; () banked
  4976  00015C  274A               	addwf	(??_printf+2)& (0+255),f,b
  4977  00015E  0101               	movlb	1	; () banked
  4978  000160  5149               	movf	(??_printf+1)& (0+255),w,b
  4979  000162  0101               	movlb	1	; () banked
  4980  000164  234B               	addwfc	(??_printf+3)& (0+255),f,b
  4981  000166  0101               	movlb	1	; () banked
  4982  000168  514A               	movf	(??_printf+2)& (0+255),w,b
  4983  00016A  0101               	movlb	1	; () banked
  4984  00016C  2762               	addwf	printf@width& (0+255),f,b
  4985  00016E  0101               	movlb	1	; () banked
  4986  000170  514B               	movf	(??_printf+3)& (0+255),w,b
  4987  000172  0101               	movlb	1	; () banked
  4988  000174  2363               	addwfc	(printf@width+1)& (0+255),f,b
  4989                           
  4990                           ; BSR set to: 1
  4991  000176  0101               	movlb	1	; () banked
  4992  000178  4B36               	infsnz	printf@f& (0+255),f,b
  4993  00017A  2B37               	incf	(printf@f+1)& (0+255),f,b
  4994                           
  4995                           ; BSR set to: 1
  4996                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4997  00017C  C136  FFF6         	movff	printf@f,tblptrl
  4998  000180  C137  FFF7         	movff	printf@f+1,tblptrh
  4999  000184                     	if	0	;tblptru may be non-zero
  5000  000184                     	endif
  5001  000184                     	if	0	;tblptru may be non-zero
  5002  000184                     	endif
  5003  000184  0008               	tblrd		*
  5004  000186  50F5               	movf	tablat,w,c
  5005  000188  ECAC  F02F         	call	_isdigit
  5006  00018C  B0D8               	btfsc	status,0,c
  5007  00018E  D7C5               	goto	l9151
  5008  000190                     l9159:
  5009                           
  5010                           ;doprnt.c: 608: }
  5011                           ;doprnt.c: 611: if(*f == '.') {
  5012  000190  C136  FFF6         	movff	printf@f,tblptrl
  5013  000194  C137  FFF7         	movff	printf@f+1,tblptrh
  5014  000198                     	if	0	;tblptru may be non-zero
  5015  000198                     	endif
  5016  000198                     	if	0	;tblptru may be non-zero
  5017  000198                     	endif
  5018  000198  0008               	tblrd		*
  5019  00019A  50F5               	movf	tablat,w,c
  5020  00019C  0A2E               	xorlw	46
  5021  00019E  A4D8               	btfss	status,2,c
  5022  0001A0  D039               	goto	l9171
  5023                           
  5024                           ;doprnt.c: 612: flag |= 0x4000;
  5025  0001A2  0101               	movlb	1	; () banked
  5026  0001A4  8D57               	bsf	(printf@flag+1)& (0+255),6,b
  5027                           
  5028                           ;doprnt.c: 613: f++;
  5029  0001A6  0101               	movlb	1	; () banked
  5030  0001A8  4B36               	infsnz	printf@f& (0+255),f,b
  5031  0001AA  2B37               	incf	(printf@f+1)& (0+255),f,b
  5032                           
  5033                           ; BSR set to: 1
  5034                           ;doprnt.c: 620: {
  5035                           ;doprnt.c: 621: prec = 0;
  5036  0001AC  0E00               	movlw	0
  5037  0001AE  0101               	movlb	1	; () banked
  5038  0001B0  6F69               	movwf	(printf@prec+1)& (0+255),b
  5039  0001B2  0E00               	movlw	0
  5040  0001B4  6F68               	movwf	printf@prec& (0+255),b
  5041                           
  5042                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5043  0001B6  D023               	goto	l9169
  5044  0001B8                     l9165:
  5045                           
  5046                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5047  0001B8  C168  F08F         	movff	printf@prec,___wmul@multiplier
  5048  0001BC  C169  F090         	movff	printf@prec+1,___wmul@multiplier+1
  5049  0001C0  0E00               	movlw	0
  5050  0001C2  0100               	movlb	0	; () banked
  5051  0001C4  6F92               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5052  0001C6  0E0A               	movlw	10
  5053  0001C8  6F91               	movwf	___wmul@multiplicand& (0+255),b
  5054  0001CA  ECBF  F02E         	call	___wmul	;wreg free
  5055  0001CE  C136  FFF6         	movff	printf@f,tblptrl
  5056  0001D2  C137  FFF7         	movff	printf@f+1,tblptrh
  5057  0001D6                     	if	0	;tblptru may be non-zero
  5058  0001D6                     	endif
  5059  0001D6                     	if	0	;tblptru may be non-zero
  5060  0001D6                     	endif
  5061  0001D6  0008               	tblrd		*
  5062  0001D8  50F5               	movf	tablat,w,c
  5063  0001DA  0100               	movlb	0	; () banked
  5064  0001DC  278F               	addwf	?___wmul& (0+255),f,b
  5065  0001DE  0E00               	movlw	0
  5066  0001E0  0100               	movlb	0	; () banked
  5067  0001E2  2390               	addwfc	(?___wmul+1)& (0+255),f,b
  5068  0001E4  0ED0               	movlw	208
  5069  0001E6  0100               	movlb	0	; () banked
  5070  0001E8  258F               	addwf	?___wmul& (0+255),w,b
  5071  0001EA  0101               	movlb	1	; () banked
  5072  0001EC  6F68               	movwf	printf@prec& (0+255),b
  5073  0001EE  0EFF               	movlw	255
  5074  0001F0  0100               	movlb	0	; () banked
  5075  0001F2  2190               	addwfc	(?___wmul+1)& (0+255),w,b
  5076  0001F4  0101               	movlb	1	; () banked
  5077  0001F6  6F69               	movwf	(printf@prec+1)& (0+255),b
  5078                           
  5079                           ; BSR set to: 1
  5080  0001F8  0101               	movlb	1	; () banked
  5081  0001FA  4B36               	infsnz	printf@f& (0+255),f,b
  5082  0001FC  2B37               	incf	(printf@f+1)& (0+255),f,b
  5083  0001FE                     l9169:
  5084                           
  5085                           ; BSR set to: 1
  5086  0001FE  C136  FFF6         	movff	printf@f,tblptrl
  5087  000202  C137  FFF7         	movff	printf@f+1,tblptrh
  5088  000206                     	if	0	;tblptru may be non-zero
  5089  000206                     	endif
  5090  000206                     	if	0	;tblptru may be non-zero
  5091  000206                     	endif
  5092  000206  0008               	tblrd		*
  5093  000208  50F5               	movf	tablat,w,c
  5094  00020A  ECAC  F02F         	call	_isdigit
  5095  00020E  A0D8               	btfss	status,0,c
  5096  000210  D07A               	goto	l9211
  5097  000212  D7D2               	goto	l9165
  5098  000214                     l9171:
  5099                           
  5100                           ;doprnt.c: 626: prec = 0;
  5101  000214  0E00               	movlw	0
  5102  000216  0101               	movlb	1	; () banked
  5103  000218  6F69               	movwf	(printf@prec+1)& (0+255),b
  5104  00021A  0E00               	movlw	0
  5105  00021C  6F68               	movwf	printf@prec& (0+255),b
  5106                           
  5107                           ; BSR set to: 1
  5108                           ;doprnt.c: 628: flag |= 0x1000;
  5109  00021E  0101               	movlb	1	; () banked
  5110  000220  8957               	bsf	(printf@flag+1)& (0+255),4,b
  5111                           
  5112                           ; BSR set to: 1
  5113                           ;doprnt.c: 630: }
  5114                           ;doprnt.c: 635: switch(c = *f++) {
  5115  000222  D071               	goto	l9211
  5116  000224                     l9175:
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;doprnt.c: 663: flag |= 0x400;
  5120  000224  0101               	movlb	1	; () banked
  5121  000226  8557               	bsf	(printf@flag+1)& (0+255),2,b
  5122                           
  5123                           ; BSR set to: 1
  5124                           ;doprnt.c: 698: case 'i':
  5125                           ;doprnt.c: 699: break;
  5126                           
  5127                           ; BSR set to: 1
  5128                           
  5129                           ;doprnt.c: 697: case 'd':
  5130                           
  5131                           ;doprnt.c: 664: break;
  5132  000228  D08D               	goto	l9213
  5133  00022A                     l9177:
  5134                           
  5135                           ; BSR set to: 1
  5136                           ;doprnt.c: 753: if(prec && prec < len)
  5137  00022A  0101               	movlb	1	; () banked
  5138  00022C  5168               	movf	printf@prec& (0+255),w,b
  5139  00022E  0101               	movlb	1	; () banked
  5140  000230  1169               	iorwf	(printf@prec+1)& (0+255),w,b
  5141  000232  B4D8               	btfsc	status,2,c
  5142  000234  D00E               	goto	l9183
  5143                           
  5144                           ; BSR set to: 1
  5145  000236  0101               	movlb	1	; () banked
  5146  000238  5152               	movf	printf@len& (0+255),w,b
  5147  00023A  0101               	movlb	1	; () banked
  5148  00023C  5D68               	subwf	printf@prec& (0+255),w,b
  5149  00023E  0101               	movlb	1	; () banked
  5150  000240  5153               	movf	(printf@len+1)& (0+255),w,b
  5151  000242  0101               	movlb	1	; () banked
  5152  000244  5969               	subwfb	(printf@prec+1)& (0+255),w,b
  5153  000246  B0D8               	btfsc	status,0,c
  5154  000248  D004               	goto	l9183
  5155                           
  5156                           ; BSR set to: 1
  5157                           ;doprnt.c: 754: len = prec;
  5158  00024A  C168  F152         	movff	printf@prec,printf@len
  5159  00024E  C169  F153         	movff	printf@prec+1,printf@len+1
  5160  000252                     l9183:
  5161                           
  5162                           ; BSR set to: 1
  5163                           ;doprnt.c: 757: if(width > len)
  5164  000252  0101               	movlb	1	; () banked
  5165  000254  5162               	movf	printf@width& (0+255),w,b
  5166  000256  0101               	movlb	1	; () banked
  5167  000258  5D52               	subwf	printf@len& (0+255),w,b
  5168  00025A  0101               	movlb	1	; () banked
  5169  00025C  5163               	movf	(printf@width+1)& (0+255),w,b
  5170  00025E  0101               	movlb	1	; () banked
  5171  000260  5953               	subwfb	(printf@len+1)& (0+255),w,b
  5172  000262  B0D8               	btfsc	status,0,c
  5173  000264  D009               	goto	l9187
  5174                           
  5175                           ; BSR set to: 1
  5176                           ;doprnt.c: 758: width -= len;
  5177  000266  0101               	movlb	1	; () banked
  5178  000268  5152               	movf	printf@len& (0+255),w,b
  5179  00026A  0101               	movlb	1	; () banked
  5180  00026C  5F62               	subwf	printf@width& (0+255),f,b
  5181  00026E  0101               	movlb	1	; () banked
  5182  000270  5153               	movf	(printf@len+1)& (0+255),w,b
  5183  000272  0101               	movlb	1	; () banked
  5184  000274  5B63               	subwfb	(printf@width+1)& (0+255),f,b
  5185  000276  D009               	goto	l9191
  5186  000278                     l9187:
  5187                           
  5188                           ; BSR set to: 1
  5189                           ;doprnt.c: 759: else
  5190                           ;doprnt.c: 760: width = 0;
  5191  000278  0E00               	movlw	0
  5192  00027A  0101               	movlb	1	; () banked
  5193  00027C  6F63               	movwf	(printf@width+1)& (0+255),b
  5194  00027E  0E00               	movlw	0
  5195  000280  6F62               	movwf	printf@width& (0+255),b
  5196                           
  5197                           ; BSR set to: 1
  5198                           ;doprnt.c: 764: while(width--)
  5199  000282  D003               	goto	l9191
  5200  000284                     l9189:
  5201                           
  5202                           ; BSR set to: 1
  5203                           ;doprnt.c: 765: (putch(' ') );
  5204  000284  0E20               	movlw	32
  5205  000286  EC3B  F030         	call	_putch
  5206  00028A                     l9191:
  5207  00028A  0101               	movlb	1	; () banked
  5208  00028C  0762               	decf	printf@width& (0+255),f,b
  5209  00028E  A0D8               	btfss	status,0,c
  5210  000290  0763               	decf	(printf@width+1)& (0+255),f,b
  5211  000292  0101               	movlb	1	; () banked
  5212  000294  2962               	incf	printf@width& (0+255),w,b
  5213  000296  E1F6               	bnz	l9189
  5214  000298  0101               	movlb	1	; () banked
  5215  00029A  2963               	incf	(printf@width+1)& (0+255),w,b
  5216  00029C  B4D8               	btfsc	status,2,c
  5217  00029E  D00B               	goto	l9197
  5218  0002A0  D7F1               	goto	l9189
  5219  0002A2                     l9193:
  5220                           
  5221                           ; BSR set to: 1
  5222                           ;doprnt.c: 768: (putch(*cp++) );
  5223  0002A2  C150  FFD9         	movff	printf@cp,fsr2l
  5224  0002A6  C151  FFDA         	movff	printf@cp+1,fsr2h
  5225  0002AA  50DF               	movf	indf2,w,c
  5226  0002AC  EC3B  F030         	call	_putch
  5227  0002B0  0101               	movlb	1	; () banked
  5228  0002B2  4B50               	infsnz	printf@cp& (0+255),f,b
  5229  0002B4  2B51               	incf	(printf@cp+1)& (0+255),f,b
  5230  0002B6                     l9197:
  5231                           
  5232                           ; BSR set to: 1
  5233  0002B6  0101               	movlb	1	; () banked
  5234  0002B8  0752               	decf	printf@len& (0+255),f,b
  5235  0002BA  A0D8               	btfss	status,0,c
  5236  0002BC  0753               	decf	(printf@len+1)& (0+255),f,b
  5237  0002BE  0101               	movlb	1	; () banked
  5238  0002C0  2952               	incf	printf@len& (0+255),w,b
  5239  0002C2  E1EF               	bnz	l9193
  5240  0002C4  0101               	movlb	1	; () banked
  5241  0002C6  2953               	incf	(printf@len+1)& (0+255),w,b
  5242  0002C8  B4D8               	btfsc	status,2,c
  5243  0002CA  EF88  F006         	goto	l9439
  5244  0002CE  D7E9               	goto	l9193
  5245  0002D0                     l9199:
  5246                           
  5247                           ; BSR set to: 1
  5248                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5249  0002D0  C154  FFD9         	movff	printf@ap,fsr2l
  5250  0002D4  C155  FFDA         	movff	printf@ap+1,fsr2h
  5251  0002D8  50DF               	movf	indf2,w,c
  5252  0002DA  0101               	movlb	1	; () banked
  5253  0002DC  6F6A               	movwf	printf@c& (0+255),b
  5254                           
  5255                           ; BSR set to: 1
  5256  0002DE  0E02               	movlw	2
  5257  0002E0  0101               	movlb	1	; () banked
  5258  0002E2  2754               	addwf	printf@ap& (0+255),f,b
  5259  0002E4  0E00               	movlw	0
  5260  0002E6  2355               	addwfc	(printf@ap+1)& (0+255),f,b
  5261  0002E8                     l9203:
  5262                           
  5263                           ; BSR set to: 1
  5264                           ;doprnt.c: 805: cp = (char *)&c;
  5265  0002E8  0E6A               	movlw	low printf@c
  5266  0002EA  0101               	movlb	1	; () banked
  5267  0002EC  6F50               	movwf	printf@cp& (0+255),b
  5268  0002EE  0E01               	movlw	high printf@c
  5269  0002F0  0101               	movlb	1	; () banked
  5270  0002F2  6F51               	movwf	(printf@cp+1)& (0+255),b
  5271                           
  5272                           ; BSR set to: 1
  5273                           ;doprnt.c: 806: len = 1;
  5274  0002F4  0E00               	movlw	0
  5275  0002F6  0101               	movlb	1	; () banked
  5276  0002F8  6F53               	movwf	(printf@len+1)& (0+255),b
  5277  0002FA  0E01               	movlw	1
  5278  0002FC  6F52               	movwf	printf@len& (0+255),b
  5279                           
  5280                           ;doprnt.c: 807: goto dostring;
  5281  0002FE  D795               	goto	l9177
  5282  000300                     l9207:
  5283                           
  5284                           ; BSR set to: 1
  5285                           ;doprnt.c: 818: flag |= 0x40;
  5286  000300  0101               	movlb	1	; () banked
  5287  000302  8D56               	bsf	printf@flag& (0+255),6,b
  5288                           
  5289                           ; BSR set to: 1
  5290                           ;doprnt.c: 822: }
  5291                           
  5292                           ;doprnt.c: 819: break;
  5293  000304  D01F               	goto	l9213
  5294  000306                     l9211:
  5295  000306  C136  FFF6         	movff	printf@f,tblptrl
  5296  00030A  C137  FFF7         	movff	printf@f+1,tblptrh
  5297  00030E  0101               	movlb	1	; () banked
  5298  000310  4B36               	infsnz	printf@f& (0+255),f,b
  5299  000312  2B37               	incf	(printf@f+1)& (0+255),f,b
  5300  000314                     	if	0	;tblptru may be non-zero
  5301  000314                     	endif
  5302  000314                     	if	0	;tblptru may be non-zero
  5303  000314                     	endif
  5304  000314  0008               	tblrd		*
  5305  000316  CFF5 F16A          	movff	tablat,printf@c
  5306  00031A  0101               	movlb	1	; () banked
  5307  00031C  516A               	movf	printf@c& (0+255),w,b
  5308                           
  5309                           ; Switch size 1, requested type "space"
  5310                           ; Number of cases is 6, Range of values is 0 to 117
  5311                           ; switch strategies available:
  5312                           ; Name         Instructions Cycles
  5313                           ; simple_byte           19    10 (average)
  5314                           ;	Chosen strategy is simple_byte
  5315  00031E  0A00               	xorlw	0	; case 0
  5316  000320  B4D8               	btfsc	status,2,c
  5317  000322  0012               	return	
  5318  000324  0A63               	xorlw	99	; case 99
  5319  000326  B4D8               	btfsc	status,2,c
  5320  000328  D7D3               	goto	l9199
  5321  00032A  0A07               	xorlw	7	; case 100
  5322  00032C  B4D8               	btfsc	status,2,c
  5323  00032E  D00A               	goto	l9213
  5324  000330  0A02               	xorlw	2	; case 102
  5325  000332  B4D8               	btfsc	status,2,c
  5326  000334  D777               	goto	l9175
  5327  000336  0A0F               	xorlw	15	; case 105
  5328  000338  B4D8               	btfsc	status,2,c
  5329  00033A  D004               	goto	l9213
  5330  00033C  0A1C               	xorlw	28	; case 117
  5331  00033E  B4D8               	btfsc	status,2,c
  5332  000340  D7DF               	goto	l9207
  5333  000342  D7D2               	goto	l9203
  5334  000344                     l9213:
  5335                           
  5336                           ; BSR set to: 1
  5337                           ;doprnt.c: 825: if(flag & (0x700)) {
  5338  000344  0E07               	movlw	7
  5339  000346  0101               	movlb	1	; () banked
  5340  000348  1557               	andwf	(printf@flag+1)& (0+255),w,b
  5341  00034A  B4D8               	btfsc	status,2,c
  5342  00034C  D36F               	goto	l897
  5343                           
  5344                           ; BSR set to: 1
  5345                           ;doprnt.c: 827: if(flag & 0x1000)
  5346  00034E  0101               	movlb	1	; () banked
  5347  000350  A957               	btfss	(printf@flag+1)& (0+255),4,b
  5348  000352  D005               	goto	l9219
  5349                           
  5350                           ; BSR set to: 1
  5351                           ;doprnt.c: 829: prec = 6;
  5352  000354  0E00               	movlw	0
  5353  000356  0101               	movlb	1	; () banked
  5354  000358  6F69               	movwf	(printf@prec+1)& (0+255),b
  5355  00035A  0E06               	movlw	6
  5356  00035C  6F68               	movwf	printf@prec& (0+255),b
  5357  00035E                     l9219:
  5358                           
  5359                           ; BSR set to: 1
  5360                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5361  00035E  C154  FFD9         	movff	printf@ap,fsr2l
  5362  000362  C155  FFDA         	movff	printf@ap+1,fsr2h
  5363  000366  CFDE F164          	movff	postinc2,printf@fval
  5364  00036A  CFDE F165          	movff	postinc2,printf@fval+1
  5365  00036E  CFDE F166          	movff	postinc2,printf@fval+2
  5366  000372  CFDE F167          	movff	postinc2,printf@fval+3
  5367                           
  5368                           ; BSR set to: 1
  5369  000376  0E04               	movlw	4
  5370  000378  0101               	movlb	1	; () banked
  5371  00037A  2754               	addwf	printf@ap& (0+255),f,b
  5372  00037C  0E00               	movlw	0
  5373  00037E  2355               	addwfc	(printf@ap+1)& (0+255),f,b
  5374                           
  5375                           ; BSR set to: 1
  5376                           ;doprnt.c: 831: if(fval < 0.0) {
  5377  000380  0101               	movlb	1	; () banked
  5378  000382  AF67               	btfss	(printf@fval+3)& (0+255),7,b
  5379  000384  D015               	goto	l9229
  5380                           
  5381                           ; BSR set to: 1
  5382                           ;doprnt.c: 832: fval = -fval;
  5383  000386  C164  F08F         	movff	printf@fval,___flneg@f1
  5384  00038A  C165  F090         	movff	printf@fval+1,___flneg@f1+1
  5385  00038E  C166  F091         	movff	printf@fval+2,___flneg@f1+2
  5386  000392  C167  F092         	movff	printf@fval+3,___flneg@f1+3
  5387  000396  EC87  F02E         	call	___flneg	;wreg free
  5388  00039A  C08F  F164         	movff	?___flneg,printf@fval
  5389  00039E  C090  F165         	movff	?___flneg+1,printf@fval+1
  5390  0003A2  C091  F166         	movff	?___flneg+2,printf@fval+2
  5391  0003A6  C092  F167         	movff	?___flneg+3,printf@fval+3
  5392                           
  5393                           ;doprnt.c: 833: flag |= 0x03;
  5394  0003AA  0E03               	movlw	3
  5395  0003AC  0101               	movlb	1	; () banked
  5396  0003AE  1356               	iorwf	printf@flag& (0+255),f,b
  5397  0003B0                     l9229:
  5398                           
  5399                           ; BSR set to: 1
  5400                           ;doprnt.c: 834: }
  5401                           ;doprnt.c: 835: exp = 0;
  5402  0003B0  0E00               	movlw	0
  5403  0003B2  0101               	movlb	1	; () banked
  5404  0003B4  6F61               	movwf	(printf@exp+1)& (0+255),b
  5405  0003B6  0E00               	movlw	0
  5406  0003B8  6F60               	movwf	printf@exp& (0+255),b
  5407                           
  5408                           ; BSR set to: 1
  5409                           ;doprnt.c: 836: if( fval!=0) {
  5410  0003BA  0101               	movlb	1	; () banked
  5411  0003BC  5164               	movf	printf@fval& (0+255),w,b
  5412  0003BE  0101               	movlb	1	; () banked
  5413  0003C0  1165               	iorwf	(printf@fval+1)& (0+255),w,b
  5414  0003C2  0101               	movlb	1	; () banked
  5415  0003C4  1166               	iorwf	(printf@fval+2)& (0+255),w,b
  5416  0003C6  0101               	movlb	1	; () banked
  5417  0003C8  1167               	iorwf	(printf@fval+3)& (0+255),w,b
  5418  0003CA  B4D8               	btfsc	status,2,c
  5419  0003CC  D08E               	goto	l9257
  5420                           
  5421                           ; BSR set to: 1
  5422                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  5423  0003CE  0101               	movlb	1	; () banked
  5424  0003D0  3566               	rlcf	(printf@fval+2)& (0+255),w,b
  5425  0003D2  3567               	rlcf	(printf@fval+3)& (0+255),w,b
  5426  0003D4  0F82               	addlw	130
  5427  0003D6  0101               	movlb	1	; () banked
  5428  0003D8  6F60               	movwf	printf@exp& (0+255),b
  5429  0003DA  0101               	movlb	1	; () banked
  5430  0003DC  6B61               	clrf	(printf@exp+1)& (0+255),b
  5431  0003DE  0EFF               	movlw	255
  5432  0003E0  2361               	addwfc	(printf@exp+1)& (0+255),f,b
  5433                           
  5434                           ; BSR set to: 1
  5435                           ;doprnt.c: 838: exp--;
  5436  0003E2  0101               	movlb	1	; () banked
  5437  0003E4  0760               	decf	printf@exp& (0+255),f,b
  5438  0003E6  A0D8               	btfss	status,0,c
  5439  0003E8  0761               	decf	(printf@exp+1)& (0+255),f,b
  5440                           
  5441                           ; BSR set to: 1
  5442                           ;doprnt.c: 839: exp *= 3;
  5443  0003EA  C160  F08F         	movff	printf@exp,___wmul@multiplier
  5444  0003EE  C161  F090         	movff	printf@exp+1,___wmul@multiplier+1
  5445  0003F2  0E00               	movlw	0
  5446  0003F4  0100               	movlb	0	; () banked
  5447  0003F6  6F92               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5448  0003F8  0E03               	movlw	3
  5449  0003FA  6F91               	movwf	___wmul@multiplicand& (0+255),b
  5450  0003FC  ECBF  F02E         	call	___wmul	;wreg free
  5451  000400  C08F  F160         	movff	?___wmul,printf@exp
  5452  000404  C090  F161         	movff	?___wmul+1,printf@exp+1
  5453                           
  5454                           ;doprnt.c: 840: exp /= 10;
  5455  000408  C160  F095         	movff	printf@exp,___awdiv@dividend
  5456  00040C  C161  F096         	movff	printf@exp+1,___awdiv@dividend+1
  5457  000410  0E00               	movlw	0
  5458  000412  0100               	movlb	0	; () banked
  5459  000414  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  5460  000416  0E0A               	movlw	10
  5461  000418  6F97               	movwf	___awdiv@divisor& (0+255),b
  5462  00041A  EC5E  F026         	call	___awdiv	;wreg free
  5463  00041E  C095  F160         	movff	?___awdiv,printf@exp
  5464  000422  C096  F161         	movff	?___awdiv+1,printf@exp+1
  5465                           
  5466                           ;doprnt.c: 841: if(exp < 0)
  5467  000426  0101               	movlb	1	; () banked
  5468  000428  AF61               	btfss	(printf@exp+1)& (0+255),7,b
  5469  00042A  D004               	goto	l9245
  5470                           
  5471                           ; BSR set to: 1
  5472                           ;doprnt.c: 842: exp--;
  5473  00042C  0101               	movlb	1	; () banked
  5474  00042E  0760               	decf	printf@exp& (0+255),f,b
  5475  000430  A0D8               	btfss	status,0,c
  5476  000432  0761               	decf	(printf@exp+1)& (0+255),f,b
  5477  000434                     l9245:
  5478                           
  5479                           ; BSR set to: 1
  5480                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5481  000434  0101               	movlb	1	; () banked
  5482  000436  5160               	movf	printf@exp& (0+255),w,b
  5483  000438  0800               	sublw	0
  5484  00043A  EC98  F006         	call	_scale
  5485  00043E  C10D  F158         	movff	?_scale,printf@tmpval
  5486  000442  C10E  F159         	movff	?_scale+1,printf@tmpval+1
  5487  000446  C10F  F15A         	movff	?_scale+2,printf@tmpval+2
  5488  00044A  C110  F15B         	movff	?_scale+3,printf@tmpval+3
  5489                           
  5490                           ;doprnt.c: 847: tmpval.integ *= fval;
  5491  00044E  C158  F09D         	movff	printf@tmpval,___flmul@b
  5492  000452  C159  F09E         	movff	printf@tmpval+1,___flmul@b+1
  5493  000456  C15A  F09F         	movff	printf@tmpval+2,___flmul@b+2
  5494  00045A  C15B  F0A0         	movff	printf@tmpval+3,___flmul@b+3
  5495  00045E  C164  F0A1         	movff	printf@fval,___flmul@a
  5496  000462  C165  F0A2         	movff	printf@fval+1,___flmul@a+1
  5497  000466  C166  F0A3         	movff	printf@fval+2,___flmul@a+2
  5498  00046A  C167  F0A4         	movff	printf@fval+3,___flmul@a+3
  5499  00046E  EC55  F00B         	call	___flmul	;wreg free
  5500  000472  C09D  F158         	movff	?___flmul,printf@tmpval
  5501  000476  C09E  F159         	movff	?___flmul+1,printf@tmpval+1
  5502  00047A  C09F  F15A         	movff	?___flmul+2,printf@tmpval+2
  5503  00047E  C0A0  F15B         	movff	?___flmul+3,printf@tmpval+3
  5504                           
  5505                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5506  000482  C158  F08F         	movff	printf@tmpval,___flge@ff1
  5507  000486  C159  F090         	movff	printf@tmpval+1,___flge@ff1+1
  5508  00048A  C15A  F091         	movff	printf@tmpval+2,___flge@ff1+2
  5509  00048E  C15B  F092         	movff	printf@tmpval+3,___flge@ff1+3
  5510  000492  0E00               	movlw	0
  5511  000494  0100               	movlb	0	; () banked
  5512  000496  6F93               	movwf	___flge@ff2& (0+255),b
  5513  000498  0E00               	movlw	0
  5514  00049A  6F94               	movwf	(___flge@ff2+1)& (0+255),b
  5515  00049C  0E80               	movlw	128
  5516  00049E  6F95               	movwf	(___flge@ff2+2)& (0+255),b
  5517  0004A0  0E3F               	movlw	63
  5518  0004A2  6F96               	movwf	(___flge@ff2+3)& (0+255),b
  5519  0004A4  EC97  F01C         	call	___flge	;wreg free
  5520  0004A8  0100               	movlb	0	; () banked
  5521  0004AA  B0D8               	btfsc	status,0,c
  5522  0004AC  D005               	goto	l9253
  5523                           
  5524                           ; BSR set to: 0
  5525                           ;doprnt.c: 849: exp--;
  5526  0004AE  0101               	movlb	1	; () banked
  5527  0004B0  0760               	decf	printf@exp& (0+255),f,b
  5528  0004B2  A0D8               	btfss	status,0,c
  5529  0004B4  0761               	decf	(printf@exp+1)& (0+255),f,b
  5530  0004B6  D019               	goto	l9257
  5531  0004B8                     l9253:
  5532                           
  5533                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5534  0004B8  C158  F08F         	movff	printf@tmpval,___flge@ff1
  5535  0004BC  C159  F090         	movff	printf@tmpval+1,___flge@ff1+1
  5536  0004C0  C15A  F091         	movff	printf@tmpval+2,___flge@ff1+2
  5537  0004C4  C15B  F092         	movff	printf@tmpval+3,___flge@ff1+3
  5538  0004C8  0E00               	movlw	0
  5539  0004CA  0100               	movlb	0	; () banked
  5540  0004CC  6F93               	movwf	___flge@ff2& (0+255),b
  5541  0004CE  0E00               	movlw	0
  5542  0004D0  6F94               	movwf	(___flge@ff2+1)& (0+255),b
  5543  0004D2  0E20               	movlw	32
  5544  0004D4  6F95               	movwf	(___flge@ff2+2)& (0+255),b
  5545  0004D6  0E41               	movlw	65
  5546  0004D8  6F96               	movwf	(___flge@ff2+3)& (0+255),b
  5547  0004DA  EC97  F01C         	call	___flge	;wreg free
  5548  0004DE  0100               	movlb	0	; () banked
  5549  0004E0  A0D8               	btfss	status,0,c
  5550  0004E2  D003               	goto	l9257
  5551                           
  5552                           ; BSR set to: 0
  5553                           ;doprnt.c: 851: exp++;
  5554  0004E4  0101               	movlb	1	; () banked
  5555  0004E6  4B60               	infsnz	printf@exp& (0+255),f,b
  5556  0004E8  2B61               	incf	(printf@exp+1)& (0+255),f,b
  5557  0004EA                     l9257:
  5558                           
  5559                           ;doprnt.c: 852: }
  5560                           ;doprnt.c: 1112: if(prec <= 12)
  5561  0004EA  0101               	movlb	1	; () banked
  5562  0004EC  BF69               	btfsc	(printf@prec+1)& (0+255),7,b
  5563  0004EE  D008               	goto	l9259
  5564  0004F0  0101               	movlb	1	; () banked
  5565  0004F2  5169               	movf	(printf@prec+1)& (0+255),w,b
  5566  0004F4  E123               	bnz	l9261
  5567  0004F6  0E0D               	movlw	13
  5568  0004F8  0101               	movlb	1	; () banked
  5569  0004FA  5D68               	subwf	printf@prec& (0+255),w,b
  5570  0004FC  B0D8               	btfsc	status,0,c
  5571  0004FE  D01E               	goto	l9261
  5572  000500                     l9259:
  5573                           
  5574                           ; BSR set to: 1
  5575                           ;doprnt.c: 1113: fval += fround(prec);
  5576  000500  C164  F11A         	movff	printf@fval,___fladd@b
  5577  000504  C165  F11B         	movff	printf@fval+1,___fladd@b+1
  5578  000508  C166  F11C         	movff	printf@fval+2,___fladd@b+2
  5579  00050C  C167  F11D         	movff	printf@fval+3,___fladd@b+3
  5580  000510  0101               	movlb	1	; () banked
  5581  000512  5168               	movf	printf@prec& (0+255),w,b
  5582  000514  EC27  F015         	call	_fround
  5583  000518  C10D  F11E         	movff	?_fround,___fladd@a
  5584  00051C  C10E  F11F         	movff	?_fround+1,___fladd@a+1
  5585  000520  C10F  F120         	movff	?_fround+2,___fladd@a+2
  5586  000524  C110  F121         	movff	?_fround+3,___fladd@a+3
  5587  000528  EC01  F009         	call	___fladd	;wreg free
  5588  00052C  C11A  F164         	movff	?___fladd,printf@fval
  5589  000530  C11B  F165         	movff	?___fladd+1,printf@fval+1
  5590  000534  C11C  F166         	movff	?___fladd+2,printf@fval+2
  5591  000538  C11D  F167         	movff	?___fladd+3,printf@fval+3
  5592  00053C                     l9261:
  5593                           
  5594                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5595  00053C  0101               	movlb	1	; () banked
  5596  00053E  BF61               	btfsc	(printf@exp+1)& (0+255),7,b
  5597  000540  D008               	goto	l9263
  5598  000542  0101               	movlb	1	; () banked
  5599  000544  5161               	movf	(printf@exp+1)& (0+255),w,b
  5600  000546  E12E               	bnz	l9269
  5601  000548  0E0A               	movlw	10
  5602  00054A  0101               	movlb	1	; () banked
  5603  00054C  5D60               	subwf	printf@exp& (0+255),w,b
  5604  00054E  B0D8               	btfsc	status,0,c
  5605  000550  D029               	goto	l9269
  5606  000552                     l9263:
  5607                           
  5608                           ; BSR set to: 1
  5609  000552  0101               	movlb	1	; () banked
  5610  000554  5164               	movf	printf@fval& (0+255),w,b
  5611  000556  0101               	movlb	1	; () banked
  5612  000558  1165               	iorwf	(printf@fval+1)& (0+255),w,b
  5613  00055A  0101               	movlb	1	; () banked
  5614  00055C  1166               	iorwf	(printf@fval+2)& (0+255),w,b
  5615  00055E  0101               	movlb	1	; () banked
  5616  000560  1167               	iorwf	(printf@fval+3)& (0+255),w,b
  5617  000562  B4D8               	btfsc	status,2,c
  5618  000564  D06D               	goto	l9283
  5619                           
  5620                           ; BSR set to: 1
  5621  000566  C164  F116         	movff	printf@fval,___fltol@f1
  5622  00056A  C165  F117         	movff	printf@fval+1,___fltol@f1+1
  5623  00056E  C166  F118         	movff	printf@fval+2,___fltol@f1+2
  5624  000572  C167  F119         	movff	printf@fval+3,___fltol@f1+3
  5625  000576  EC43  F021         	call	___fltol	;wreg free
  5626  00057A  0101               	movlb	1	; () banked
  5627  00057C  5116               	movf	?___fltol& (0+255),w,b
  5628  00057E  0101               	movlb	1	; () banked
  5629  000580  1117               	iorwf	(?___fltol+1)& (0+255),w,b
  5630  000582  0101               	movlb	1	; () banked
  5631  000584  1118               	iorwf	(?___fltol+2)& (0+255),w,b
  5632  000586  0101               	movlb	1	; () banked
  5633  000588  1119               	iorwf	(?___fltol+3)& (0+255),w,b
  5634  00058A  A4D8               	btfss	status,2,c
  5635  00058C  D059               	goto	l9283
  5636                           
  5637                           ; BSR set to: 1
  5638  00058E  0101               	movlb	1	; () banked
  5639  000590  BF61               	btfsc	(printf@exp+1)& (0+255),7,b
  5640  000592  D056               	goto	l9283
  5641  000594  0101               	movlb	1	; () banked
  5642  000596  5161               	movf	(printf@exp+1)& (0+255),w,b
  5643  000598  E105               	bnz	l9269
  5644  00059A  0E02               	movlw	2
  5645  00059C  0101               	movlb	1	; () banked
  5646  00059E  5D60               	subwf	printf@exp& (0+255),w,b
  5647  0005A0  A0D8               	btfss	status,0,c
  5648  0005A2  D04E               	goto	l9283
  5649  0005A4                     l9269:
  5650                           
  5651                           ; BSR set to: 1
  5652                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5653  0005A4  C158  F08F         	movff	printf@tmpval,___flge@ff1
  5654  0005A8  C159  F090         	movff	printf@tmpval+1,___flge@ff1+1
  5655  0005AC  C15A  F091         	movff	printf@tmpval+2,___flge@ff1+2
  5656  0005B0  C15B  F092         	movff	printf@tmpval+3,___flge@ff1+3
  5657  0005B4  0E5F               	movlw	95
  5658  0005B6  0100               	movlb	0	; () banked
  5659  0005B8  6F93               	movwf	___flge@ff2& (0+255),b
  5660  0005BA  0E70               	movlw	112
  5661  0005BC  6F94               	movwf	(___flge@ff2+1)& (0+255),b
  5662  0005BE  0E89               	movlw	137
  5663  0005C0  6F95               	movwf	(___flge@ff2+2)& (0+255),b
  5664  0005C2  0E40               	movlw	64
  5665  0005C4  6F96               	movwf	(___flge@ff2+3)& (0+255),b
  5666  0005C6  EC97  F01C         	call	___flge	;wreg free
  5667  0005CA  0100               	movlb	0	; () banked
  5668  0005CC  B0D8               	btfsc	status,0,c
  5669  0005CE  D003               	goto	l9273
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5673  0005D0  0101               	movlb	1	; () banked
  5674  0005D2  0EF7               	movlw	247
  5675  0005D4  D002               	goto	L1
  5676  0005D6                     l9273:
  5677                           
  5678                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5679  0005D6  0101               	movlb	1	; () banked
  5680  0005D8  0EF8               	movlw	248
  5681  0005DA                     L1:
  5682  0005DA  2760               	addwf	printf@exp& (0+255),f,b
  5683  0005DC  0EFF               	movlw	255
  5684  0005DE  2361               	addwfc	(printf@exp+1)& (0+255),f,b
  5685                           
  5686                           ; BSR set to: 1
  5687                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5688                           
  5689                           ; BSR set to: 1
  5690  0005E0  0101               	movlb	1	; () banked
  5691  0005E2  5160               	movf	printf@exp& (0+255),w,b
  5692  0005E4  EC98  F006         	call	_scale
  5693  0005E8  C10D  F158         	movff	?_scale,printf@tmpval
  5694  0005EC  C10E  F159         	movff	?_scale+1,printf@tmpval+1
  5695  0005F0  C10F  F15A         	movff	?_scale+2,printf@tmpval+2
  5696  0005F4  C110  F15B         	movff	?_scale+3,printf@tmpval+3
  5697  0005F8  C164  F08F         	movff	printf@fval,__div_to_l_@f1
  5698  0005FC  C165  F090         	movff	printf@fval+1,__div_to_l_@f1+1
  5699  000600  C166  F091         	movff	printf@fval+2,__div_to_l_@f1+2
  5700  000604  C167  F092         	movff	printf@fval+3,__div_to_l_@f1+3
  5701  000608  C158  F093         	movff	printf@tmpval,__div_to_l_@f2
  5702  00060C  C159  F094         	movff	printf@tmpval+1,__div_to_l_@f2+1
  5703  000610  C15A  F095         	movff	printf@tmpval+2,__div_to_l_@f2+2
  5704  000614  C15B  F096         	movff	printf@tmpval+3,__div_to_l_@f2+3
  5705  000618  EC24  F01E         	call	__div_to_l_	;wreg free
  5706  00061C  C08F  F15C         	movff	?__div_to_l_,printf@val
  5707  000620  C090  F15D         	movff	?__div_to_l_+1,printf@val+1
  5708  000624  C091  F15E         	movff	?__div_to_l_+2,printf@val+2
  5709  000628  C092  F15F         	movff	?__div_to_l_+3,printf@val+3
  5710                           
  5711                           ;doprnt.c: 1129: fval = 0.0;
  5712  00062C  0E00               	movlw	0
  5713  00062E  0101               	movlb	1	; () banked
  5714  000630  6F64               	movwf	printf@fval& (0+255),b
  5715  000632  0E00               	movlw	0
  5716  000634  6F65               	movwf	(printf@fval+1)& (0+255),b
  5717  000636  0E00               	movlw	0
  5718  000638  6F66               	movwf	(printf@fval+2)& (0+255),b
  5719  00063A  0E00               	movlw	0
  5720  00063C  6F67               	movwf	(printf@fval+3)& (0+255),b
  5721                           
  5722                           ;doprnt.c: 1130: } else {
  5723  00063E  D03C               	goto	l9287
  5724  000640                     l9283:
  5725                           
  5726                           ; BSR set to: 1
  5727                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5728  000640  C164  F116         	movff	printf@fval,___fltol@f1
  5729  000644  C165  F117         	movff	printf@fval+1,___fltol@f1+1
  5730  000648  C166  F118         	movff	printf@fval+2,___fltol@f1+2
  5731  00064C  C167  F119         	movff	printf@fval+3,___fltol@f1+3
  5732  000650  EC43  F021         	call	___fltol	;wreg free
  5733  000654  C116  F15C         	movff	?___fltol,printf@val
  5734  000658  C117  F15D         	movff	?___fltol+1,printf@val+1
  5735  00065C  C118  F15E         	movff	?___fltol+2,printf@val+2
  5736  000660  C119  F15F         	movff	?___fltol+3,printf@val+3
  5737                           
  5738                           ;doprnt.c: 1132: fval -= (double)val;
  5739  000664  C164  F12E         	movff	printf@fval,___flsub@b
  5740  000668  C165  F12F         	movff	printf@fval+1,___flsub@b+1
  5741  00066C  C166  F130         	movff	printf@fval+2,___flsub@b+2
  5742  000670  C167  F131         	movff	printf@fval+3,___flsub@b+3
  5743  000674  C15C  F08F         	movff	printf@val,___xxtofl@val
  5744  000678  C15D  F090         	movff	printf@val+1,___xxtofl@val+1
  5745  00067C  C15E  F091         	movff	printf@val+2,___xxtofl@val+2
  5746  000680  C15F  F092         	movff	printf@val+3,___xxtofl@val+3
  5747  000684  0E00               	movlw	0
  5748  000686  EC08  F01A         	call	___xxtofl
  5749  00068A  C08F  F132         	movff	?___xxtofl,___flsub@a
  5750  00068E  C090  F133         	movff	?___xxtofl+1,___flsub@a+1
  5751  000692  C091  F134         	movff	?___xxtofl+2,___flsub@a+2
  5752  000696  C092  F135         	movff	?___xxtofl+3,___flsub@a+3
  5753  00069A  ECB6  F02D         	call	___flsub	;wreg free
  5754  00069E  C12E  F164         	movff	?___flsub,printf@fval
  5755  0006A2  C12F  F165         	movff	?___flsub+1,printf@fval+1
  5756  0006A6  C130  F166         	movff	?___flsub+2,printf@fval+2
  5757  0006AA  C131  F167         	movff	?___flsub+3,printf@fval+3
  5758                           
  5759                           ;doprnt.c: 1133: exp = 0;
  5760  0006AE  0E00               	movlw	0
  5761  0006B0  0101               	movlb	1	; () banked
  5762  0006B2  6F61               	movwf	(printf@exp+1)& (0+255),b
  5763  0006B4  0E00               	movlw	0
  5764  0006B6  6F60               	movwf	printf@exp& (0+255),b
  5765  0006B8                     l9287:
  5766                           
  5767                           ; BSR set to: 1
  5768                           ;doprnt.c: 1134: }
  5769                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5770  0006B8  0E01               	movlw	1
  5771  0006BA  0101               	movlb	1	; () banked
  5772  0006BC  6F6A               	movwf	printf@c& (0+255),b
  5773  0006BE                     l9289:
  5774                           
  5775                           ; BSR set to: 1
  5776  0006BE  0E0A               	movlw	10
  5777  0006C0  0101               	movlb	1	; () banked
  5778  0006C2  196A               	xorwf	printf@c& (0+255),w,b
  5779  0006C4  B4D8               	btfsc	status,2,c
  5780  0006C6  D01E               	goto	l9301
  5781                           
  5782                           ; BSR set to: 1
  5783                           ;doprnt.c: 1137: if(val < dpowers[c])
  5784                           
  5785                           ; BSR set to: 1
  5786                           
  5787                           ; BSR set to: 1
  5788  0006C8  0101               	movlb	1	; () banked
  5789  0006CA  516A               	movf	printf@c& (0+255),w,b
  5790  0006CC  0D04               	mullw	4
  5791  0006CE  0E83               	movlw	low _dpowers
  5792  0006D0  24F3               	addwf	prodl,w,c
  5793  0006D2  6EF6               	movwf	tblptrl,c
  5794  0006D4  0E7D               	movlw	high _dpowers
  5795  0006D6  20F4               	addwfc	prodh,w,c
  5796  0006D8  6EF7               	movwf	tblptrh,c
  5797  0006DA                     	if	0	;There are less than 3 active tblptr bytes
  5798  0006DA                     	endif
  5799  0006DA  0009               	tblrd		*+
  5800  0006DC  50F5               	movf	tablat,w,c
  5801  0006DE  0101               	movlb	1	; () banked
  5802  0006E0  5D5C               	subwf	printf@val& (0+255),w,b
  5803  0006E2  0009               	tblrd		*+
  5804  0006E4  50F5               	movf	tablat,w,c
  5805  0006E6  0101               	movlb	1	; () banked
  5806  0006E8  595D               	subwfb	(printf@val+1)& (0+255),w,b
  5807  0006EA  0009               	tblrd		*+
  5808  0006EC  50F5               	movf	tablat,w,c
  5809  0006EE  0101               	movlb	1	; () banked
  5810  0006F0  595E               	subwfb	(printf@val+2)& (0+255),w,b
  5811  0006F2  0009               	tblrd		*+
  5812  0006F4  50F5               	movf	tablat,w,c
  5813  0006F6  0101               	movlb	1	; () banked
  5814  0006F8  595F               	subwfb	(printf@val+3)& (0+255),w,b
  5815  0006FA  A0D8               	btfss	status,0,c
  5816  0006FC  D003               	goto	l9301
  5817                           
  5818                           ; BSR set to: 1
  5819                           
  5820                           ; BSR set to: 1
  5821                           
  5822                           ; BSR set to: 1
  5823                           ;doprnt.c: 1138: break;
  5824  0006FE  0101               	movlb	1	; () banked
  5825  000700  2B6A               	incf	printf@c& (0+255),f,b
  5826  000702  D7DD               	goto	l9289
  5827  000704                     l9301:
  5828                           
  5829                           ; BSR set to: 1
  5830                           ;doprnt.c: 1142: width -= prec + c + exp;
  5831  000704  C16A  F148         	movff	printf@c,??_printf
  5832  000708  0101               	movlb	1	; () banked
  5833  00070A  6B49               	clrf	(??_printf+1)& (0+255),b
  5834  00070C  BF48               	btfsc	??_printf& (0+255),7,b
  5835  00070E  0749               	decf	(??_printf+1)& (0+255),f,b
  5836  000710  0101               	movlb	1	; () banked
  5837  000712  5168               	movf	printf@prec& (0+255),w,b
  5838  000714  0101               	movlb	1	; () banked
  5839  000716  2748               	addwf	??_printf& (0+255),f,b
  5840  000718  0101               	movlb	1	; () banked
  5841  00071A  5169               	movf	(printf@prec+1)& (0+255),w,b
  5842  00071C  0101               	movlb	1	; () banked
  5843  00071E  2349               	addwfc	(??_printf+1)& (0+255),f,b
  5844  000720  0101               	movlb	1	; () banked
  5845  000722  5160               	movf	printf@exp& (0+255),w,b
  5846  000724  0101               	movlb	1	; () banked
  5847  000726  2748               	addwf	??_printf& (0+255),f,b
  5848  000728  0101               	movlb	1	; () banked
  5849  00072A  5161               	movf	(printf@exp+1)& (0+255),w,b
  5850  00072C  0101               	movlb	1	; () banked
  5851  00072E  2349               	addwfc	(??_printf+1)& (0+255),f,b
  5852  000730  0101               	movlb	1	; () banked
  5853  000732  5148               	movf	??_printf& (0+255),w,b
  5854  000734  0101               	movlb	1	; () banked
  5855  000736  5F62               	subwf	printf@width& (0+255),f,b
  5856  000738  0101               	movlb	1	; () banked
  5857  00073A  5149               	movf	(??_printf+1)& (0+255),w,b
  5858  00073C  0101               	movlb	1	; () banked
  5859  00073E  5B63               	subwfb	(printf@width+1)& (0+255),f,b
  5860                           
  5861                           ;doprnt.c: 1143: if(
  5862                           ;doprnt.c: 1147: prec)
  5863  000740  0101               	movlb	1	; () banked
  5864  000742  5168               	movf	printf@prec& (0+255),w,b
  5865  000744  0101               	movlb	1	; () banked
  5866  000746  1169               	iorwf	(printf@prec+1)& (0+255),w,b
  5867  000748  B4D8               	btfsc	status,2,c
  5868  00074A  D004               	goto	l9305
  5869                           
  5870                           ; BSR set to: 1
  5871                           ;doprnt.c: 1148: width--;
  5872  00074C  0101               	movlb	1	; () banked
  5873  00074E  0762               	decf	printf@width& (0+255),f,b
  5874  000750  A0D8               	btfss	status,0,c
  5875  000752  0763               	decf	(printf@width+1)& (0+255),f,b
  5876  000754                     l9305:
  5877                           
  5878                           ; BSR set to: 1
  5879                           ;doprnt.c: 1149: if(flag & 0x03)
  5880  000754  0E03               	movlw	3
  5881  000756  0101               	movlb	1	; () banked
  5882  000758  1556               	andwf	printf@flag& (0+255),w,b
  5883  00075A  0101               	movlb	1	; () banked
  5884  00075C  6F48               	movwf	??_printf& (0+255),b
  5885  00075E  0E00               	movlw	0
  5886  000760  0101               	movlb	1	; () banked
  5887  000762  1557               	andwf	(printf@flag+1)& (0+255),w,b
  5888  000764  0101               	movlb	1	; () banked
  5889  000766  6F49               	movwf	(??_printf+1)& (0+255),b
  5890  000768  0101               	movlb	1	; () banked
  5891  00076A  5148               	movf	??_printf& (0+255),w,b
  5892  00076C  0101               	movlb	1	; () banked
  5893  00076E  1149               	iorwf	(??_printf+1)& (0+255),w,b
  5894  000770  B4D8               	btfsc	status,2,c
  5895  000772  D008               	goto	l9313
  5896  000774  D003               	goto	l9311
  5897  000776                     l9309:
  5898                           
  5899                           ; BSR set to: 1
  5900                           ;doprnt.c: 1181: (putch(' ') );
  5901  000776  0E20               	movlw	32
  5902  000778  EC3B  F030         	call	_putch
  5903  00077C                     l9311:
  5904                           
  5905                           ;doprnt.c: 1182: width--;
  5906  00077C  0101               	movlb	1	; () banked
  5907  00077E  0762               	decf	printf@width& (0+255),f,b
  5908  000780  A0D8               	btfss	status,0,c
  5909  000782  0763               	decf	(printf@width+1)& (0+255),f,b
  5910  000784                     l9313:
  5911                           
  5912                           ; BSR set to: 1
  5913  000784  0101               	movlb	1	; () banked
  5914  000786  BF63               	btfsc	(printf@width+1)& (0+255),7,b
  5915  000788  D007               	goto	l9315
  5916  00078A  0101               	movlb	1	; () banked
  5917  00078C  5163               	movf	(printf@width+1)& (0+255),w,b
  5918  00078E  E1F3               	bnz	l9309
  5919  000790  0101               	movlb	1	; () banked
  5920  000792  0562               	decf	printf@width& (0+255),w,b
  5921  000794  B0D8               	btfsc	status,0,c
  5922  000796  D7EF               	goto	l9309
  5923  000798                     l9315:
  5924                           
  5925                           ; BSR set to: 1
  5926                           ;doprnt.c: 1183: }
  5927                           ;doprnt.c: 1188: if(flag & 0x03)
  5928  000798  0E03               	movlw	3
  5929  00079A  0101               	movlb	1	; () banked
  5930  00079C  1556               	andwf	printf@flag& (0+255),w,b
  5931  00079E  0101               	movlb	1	; () banked
  5932  0007A0  6F48               	movwf	??_printf& (0+255),b
  5933  0007A2  0E00               	movlw	0
  5934  0007A4  0101               	movlb	1	; () banked
  5935  0007A6  1557               	andwf	(printf@flag+1)& (0+255),w,b
  5936  0007A8  0101               	movlb	1	; () banked
  5937  0007AA  6F49               	movwf	(??_printf+1)& (0+255),b
  5938  0007AC  0101               	movlb	1	; () banked
  5939  0007AE  5148               	movf	??_printf& (0+255),w,b
  5940  0007B0  0101               	movlb	1	; () banked
  5941  0007B2  1149               	iorwf	(??_printf+1)& (0+255),w,b
  5942  0007B4  B4D8               	btfsc	status,2,c
  5943  0007B6  D04B               	goto	l9325
  5944                           
  5945                           ; BSR set to: 1
  5946                           ;doprnt.c: 1190: (putch('-') );
  5947  0007B8  0E2D               	movlw	45
  5948  0007BA  EC3B  F030         	call	_putch
  5949                           
  5950                           ;doprnt.c: 1195: }
  5951                           ;doprnt.c: 1196: while(c--) {
  5952  0007BE  D047               	goto	l9325
  5953  0007C0                     l9319:
  5954                           
  5955                           ;doprnt.c: 1200: {
  5956                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5957  0007C0  C15C  F08F         	movff	printf@val,___lldiv@dividend
  5958  0007C4  C15D  F090         	movff	printf@val+1,___lldiv@dividend+1
  5959  0007C8  C15E  F091         	movff	printf@val+2,___lldiv@dividend+2
  5960  0007CC  C15F  F092         	movff	printf@val+3,___lldiv@dividend+3
  5961  0007D0  0101               	movlb	1	; () banked
  5962  0007D2  516A               	movf	printf@c& (0+255),w,b
  5963  0007D4  0D04               	mullw	4
  5964  0007D6  0E83               	movlw	low _dpowers
  5965  0007D8  24F3               	addwf	prodl,w,c
  5966  0007DA  6EF6               	movwf	tblptrl,c
  5967  0007DC  0E7D               	movlw	high _dpowers
  5968  0007DE  20F4               	addwfc	prodh,w,c
  5969  0007E0  6EF7               	movwf	tblptrh,c
  5970  0007E2                     	if	0	;There are less than 3 active tblptr bytes
  5971  0007E2                     	endif
  5972  0007E2  0009               	tblrd		*+
  5973  0007E4  CFF5 F093          	movff	tablat,___lldiv@divisor
  5974  0007E8  0009               	tblrd		*+
  5975  0007EA  CFF5 F094          	movff	tablat,___lldiv@divisor+1
  5976  0007EE  0009               	tblrd		*+
  5977  0007F0  CFF5 F095          	movff	tablat,___lldiv@divisor+2
  5978  0007F4  000A               	tblrd		*-
  5979  0007F6  CFF5 F096          	movff	tablat,___lldiv@divisor+3
  5980  0007FA  EC1B  F027         	call	___lldiv	;wreg free
  5981  0007FE  C08F  F158         	movff	?___lldiv,printf@tmpval
  5982  000802  C090  F159         	movff	?___lldiv+1,printf@tmpval+1
  5983  000806  C091  F15A         	movff	?___lldiv+2,printf@tmpval+2
  5984  00080A  C092  F15B         	movff	?___lldiv+3,printf@tmpval+3
  5985                           
  5986                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5987  00080E  C158  F09C         	movff	printf@tmpval,___llmod@dividend
  5988  000812  C159  F09D         	movff	printf@tmpval+1,___llmod@dividend+1
  5989  000816  C15A  F09E         	movff	printf@tmpval+2,___llmod@dividend+2
  5990  00081A  C15B  F09F         	movff	printf@tmpval+3,___llmod@dividend+3
  5991  00081E  0E0A               	movlw	10
  5992  000820  0100               	movlb	0	; () banked
  5993  000822  6FA0               	movwf	___llmod@divisor& (0+255),b
  5994  000824  0E00               	movlw	0
  5995  000826  6FA1               	movwf	(___llmod@divisor+1)& (0+255),b
  5996  000828  0E00               	movlw	0
  5997  00082A  6FA2               	movwf	(___llmod@divisor+2)& (0+255),b
  5998  00082C  0E00               	movlw	0
  5999  00082E  6FA3               	movwf	(___llmod@divisor+3)& (0+255),b
  6000  000830  EC22  F029         	call	___llmod	;wreg free
  6001  000834  C09C  F158         	movff	?___llmod,printf@tmpval
  6002  000838  C09D  F159         	movff	?___llmod+1,printf@tmpval+1
  6003  00083C  C09E  F15A         	movff	?___llmod+2,printf@tmpval+2
  6004  000840  C09F  F15B         	movff	?___llmod+3,printf@tmpval+3
  6005                           
  6006                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  6007  000844  0101               	movlb	1	; () banked
  6008  000846  5158               	movf	printf@tmpval& (0+255),w,b
  6009  000848  0F30               	addlw	48
  6010  00084A  EC3B  F030         	call	_putch
  6011  00084E                     l9325:
  6012  00084E  0101               	movlb	1	; () banked
  6013  000850  076A               	decf	printf@c& (0+255),f,b
  6014  000852  0101               	movlb	1	; () banked
  6015  000854  296A               	incf	printf@c& (0+255),w,b
  6016  000856  B4D8               	btfsc	status,2,c
  6017  000858  D008               	goto	l9331
  6018  00085A  D7B2               	goto	l9319
  6019  00085C                     l9327:
  6020                           
  6021                           ; BSR set to: 1
  6022                           ;doprnt.c: 1208: (putch('0') );
  6023  00085C  0E30               	movlw	48
  6024  00085E  EC3B  F030         	call	_putch
  6025                           
  6026                           ;doprnt.c: 1209: exp--;
  6027  000862  0101               	movlb	1	; () banked
  6028  000864  0760               	decf	printf@exp& (0+255),f,b
  6029  000866  A0D8               	btfss	status,0,c
  6030  000868  0761               	decf	(printf@exp+1)& (0+255),f,b
  6031  00086A                     l9331:
  6032                           
  6033                           ; BSR set to: 1
  6034  00086A  0101               	movlb	1	; () banked
  6035  00086C  BF61               	btfsc	(printf@exp+1)& (0+255),7,b
  6036  00086E  D007               	goto	l9333
  6037  000870  0101               	movlb	1	; () banked
  6038  000872  5161               	movf	(printf@exp+1)& (0+255),w,b
  6039  000874  E1F3               	bnz	l9327
  6040  000876  0101               	movlb	1	; () banked
  6041  000878  0560               	decf	printf@exp& (0+255),w,b
  6042  00087A  B0D8               	btfsc	status,0,c
  6043  00087C  D7EF               	goto	l9327
  6044  00087E                     l9333:
  6045                           
  6046                           ; BSR set to: 1
  6047                           ;doprnt.c: 1210: }
  6048                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6049  00087E  0101               	movlb	1	; () banked
  6050  000880  BF69               	btfsc	(printf@prec+1)& (0+255),7,b
  6051  000882  D00C               	goto	l931
  6052  000884  0101               	movlb	1	; () banked
  6053  000886  5169               	movf	(printf@prec+1)& (0+255),w,b
  6054  000888  E105               	bnz	u12260
  6055  00088A  0E09               	movlw	9
  6056  00088C  0101               	movlb	1	; () banked
  6057  00088E  5D68               	subwf	printf@prec& (0+255),w,b
  6058  000890  A0D8               	btfss	status,0,c
  6059  000892  D004               	goto	l931
  6060  000894                     u12260:
  6061                           
  6062                           ; BSR set to: 1
  6063                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6064  000894  0E08               	movlw	8
  6065  000896  0101               	movlb	1	; () banked
  6066  000898  6F6A               	movwf	printf@c& (0+255),b
  6067  00089A  D002               	goto	l9337
  6068  00089C                     l931:
  6069                           
  6070                           ; BSR set to: 1
  6071                           ;doprnt.c: 1213: else
  6072                           ;doprnt.c: 1214: c = prec;
  6073  00089C  C168  F16A         	movff	printf@prec,printf@c
  6074  0008A0                     l9337:
  6075                           
  6076                           ; BSR set to: 1
  6077                           ;doprnt.c: 1215: prec -= c;
  6078  0008A0  0101               	movlb	1	; () banked
  6079  0008A2  516A               	movf	printf@c& (0+255),w,b
  6080  0008A4  0101               	movlb	1	; () banked
  6081  0008A6  5F68               	subwf	printf@prec& (0+255),f,b
  6082  0008A8  0E00               	movlw	0
  6083  0008AA  0101               	movlb	1	; () banked
  6084  0008AC  BF6A               	btfsc	printf@c& (0+255),7,b
  6085  0008AE  0EFF               	movlw	255
  6086  0008B0  0101               	movlb	1	; () banked
  6087  0008B2  5B69               	subwfb	(printf@prec+1)& (0+255),f,b
  6088                           
  6089                           ; BSR set to: 1
  6090                           ;doprnt.c: 1219: if(c)
  6091  0008B4  0101               	movlb	1	; () banked
  6092  0008B6  516A               	movf	printf@c& (0+255),w,b
  6093  0008B8  0101               	movlb	1	; () banked
  6094  0008BA  B4D8               	btfsc	status,2,c
  6095  0008BC  D003               	goto	l9343
  6096                           
  6097                           ; BSR set to: 1
  6098                           ;doprnt.c: 1221: (putch('.') );
  6099  0008BE  0E2E               	movlw	46
  6100  0008C0  EC3B  F030         	call	_putch
  6101  0008C4                     l9343:
  6102                           
  6103                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6104  0008C4  0101               	movlb	1	; () banked
  6105  0008C6  516A               	movf	printf@c& (0+255),w,b
  6106  0008C8  EC98  F006         	call	_scale
  6107  0008CC  C10D  F14C         	movff	?_scale,_printf$2975
  6108  0008D0  C10E  F14D         	movff	?_scale+1,_printf$2975+1
  6109  0008D4  C10F  F14E         	movff	?_scale+2,_printf$2975+2
  6110  0008D8  C110  F14F         	movff	?_scale+3,_printf$2975+3
  6111                           
  6112                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6113  0008DC  C164  F0A1         	movff	printf@fval,___flmul@a
  6114  0008E0  C165  F0A2         	movff	printf@fval+1,___flmul@a+1
  6115  0008E4  C166  F0A3         	movff	printf@fval+2,___flmul@a+2
  6116  0008E8  C167  F0A4         	movff	printf@fval+3,___flmul@a+3
  6117  0008EC  C14C  F09D         	movff	_printf$2975,___flmul@b
  6118  0008F0  C14D  F09E         	movff	_printf$2975+1,___flmul@b+1
  6119  0008F4  C14E  F09F         	movff	_printf$2975+2,___flmul@b+2
  6120  0008F8  C14F  F0A0         	movff	_printf$2975+3,___flmul@b+3
  6121  0008FC  EC55  F00B         	call	___flmul	;wreg free
  6122  000900  C09D  F116         	movff	?___flmul,___fltol@f1
  6123  000904  C09E  F117         	movff	?___flmul+1,___fltol@f1+1
  6124  000908  C09F  F118         	movff	?___flmul+2,___fltol@f1+2
  6125  00090C  C0A0  F119         	movff	?___flmul+3,___fltol@f1+3
  6126  000910  EC43  F021         	call	___fltol	;wreg free
  6127  000914  C116  F15C         	movff	?___fltol,printf@val
  6128  000918  C117  F15D         	movff	?___fltol+1,printf@val+1
  6129  00091C  C118  F15E         	movff	?___fltol+2,printf@val+2
  6130  000920  C119  F15F         	movff	?___fltol+3,printf@val+3
  6131                           
  6132                           ;doprnt.c: 1228: while(c--) {
  6133  000924  D06E               	goto	l9353
  6134  000926                     l9347:
  6135                           
  6136                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6137  000926  C15C  F08F         	movff	printf@val,___lldiv@dividend
  6138  00092A  C15D  F090         	movff	printf@val+1,___lldiv@dividend+1
  6139  00092E  C15E  F091         	movff	printf@val+2,___lldiv@dividend+2
  6140  000932  C15F  F092         	movff	printf@val+3,___lldiv@dividend+3
  6141  000936  0101               	movlb	1	; () banked
  6142  000938  516A               	movf	printf@c& (0+255),w,b
  6143  00093A  0D04               	mullw	4
  6144  00093C  0E83               	movlw	low _dpowers
  6145  00093E  24F3               	addwf	prodl,w,c
  6146  000940  6EF6               	movwf	tblptrl,c
  6147  000942  0E7D               	movlw	high _dpowers
  6148  000944  20F4               	addwfc	prodh,w,c
  6149  000946  6EF7               	movwf	tblptrh,c
  6150  000948                     	if	0	;There are less than 3 active tblptr bytes
  6151  000948                     	endif
  6152  000948  0009               	tblrd		*+
  6153  00094A  CFF5 F093          	movff	tablat,___lldiv@divisor
  6154  00094E  0009               	tblrd		*+
  6155  000950  CFF5 F094          	movff	tablat,___lldiv@divisor+1
  6156  000954  0009               	tblrd		*+
  6157  000956  CFF5 F095          	movff	tablat,___lldiv@divisor+2
  6158  00095A  000A               	tblrd		*-
  6159  00095C  CFF5 F096          	movff	tablat,___lldiv@divisor+3
  6160  000960  EC1B  F027         	call	___lldiv	;wreg free
  6161  000964  C08F  F158         	movff	?___lldiv,printf@tmpval
  6162  000968  C090  F159         	movff	?___lldiv+1,printf@tmpval+1
  6163  00096C  C091  F15A         	movff	?___lldiv+2,printf@tmpval+2
  6164  000970  C092  F15B         	movff	?___lldiv+3,printf@tmpval+3
  6165                           
  6166                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6167  000974  C158  F09C         	movff	printf@tmpval,___llmod@dividend
  6168  000978  C159  F09D         	movff	printf@tmpval+1,___llmod@dividend+1
  6169  00097C  C15A  F09E         	movff	printf@tmpval+2,___llmod@dividend+2
  6170  000980  C15B  F09F         	movff	printf@tmpval+3,___llmod@dividend+3
  6171  000984  0E0A               	movlw	10
  6172  000986  0100               	movlb	0	; () banked
  6173  000988  6FA0               	movwf	___llmod@divisor& (0+255),b
  6174  00098A  0E00               	movlw	0
  6175  00098C  6FA1               	movwf	(___llmod@divisor+1)& (0+255),b
  6176  00098E  0E00               	movlw	0
  6177  000990  6FA2               	movwf	(___llmod@divisor+2)& (0+255),b
  6178  000992  0E00               	movlw	0
  6179  000994  6FA3               	movwf	(___llmod@divisor+3)& (0+255),b
  6180  000996  EC22  F029         	call	___llmod	;wreg free
  6181  00099A  C09C  F158         	movff	?___llmod,printf@tmpval
  6182  00099E  C09D  F159         	movff	?___llmod+1,printf@tmpval+1
  6183  0009A2  C09E  F15A         	movff	?___llmod+2,printf@tmpval+2
  6184  0009A6  C09F  F15B         	movff	?___llmod+3,printf@tmpval+3
  6185                           
  6186                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6187  0009AA  0101               	movlb	1	; () banked
  6188  0009AC  5158               	movf	printf@tmpval& (0+255),w,b
  6189  0009AE  0F30               	addlw	48
  6190  0009B0  EC3B  F030         	call	_putch
  6191                           
  6192                           ;doprnt.c: 1232: val %= dpowers[c];
  6193  0009B4  C15C  F09C         	movff	printf@val,___llmod@dividend
  6194  0009B8  C15D  F09D         	movff	printf@val+1,___llmod@dividend+1
  6195  0009BC  C15E  F09E         	movff	printf@val+2,___llmod@dividend+2
  6196  0009C0  C15F  F09F         	movff	printf@val+3,___llmod@dividend+3
  6197  0009C4  0101               	movlb	1	; () banked
  6198  0009C6  516A               	movf	printf@c& (0+255),w,b
  6199  0009C8  0D04               	mullw	4
  6200  0009CA  0E83               	movlw	low _dpowers
  6201  0009CC  24F3               	addwf	prodl,w,c
  6202  0009CE  6EF6               	movwf	tblptrl,c
  6203  0009D0  0E7D               	movlw	high _dpowers
  6204  0009D2  20F4               	addwfc	prodh,w,c
  6205  0009D4  6EF7               	movwf	tblptrh,c
  6206  0009D6                     	if	0	;There are less than 3 active tblptr bytes
  6207  0009D6                     	endif
  6208  0009D6  0009               	tblrd		*+
  6209  0009D8  CFF5 F0A0          	movff	tablat,___llmod@divisor
  6210  0009DC  0009               	tblrd		*+
  6211  0009DE  CFF5 F0A1          	movff	tablat,___llmod@divisor+1
  6212  0009E2  0009               	tblrd		*+
  6213  0009E4  CFF5 F0A2          	movff	tablat,___llmod@divisor+2
  6214  0009E8  000A               	tblrd		*-
  6215  0009EA  CFF5 F0A3          	movff	tablat,___llmod@divisor+3
  6216  0009EE  EC22  F029         	call	___llmod	;wreg free
  6217  0009F2  C09C  F15C         	movff	?___llmod,printf@val
  6218  0009F6  C09D  F15D         	movff	?___llmod+1,printf@val+1
  6219  0009FA  C09E  F15E         	movff	?___llmod+2,printf@val+2
  6220  0009FE  C09F  F15F         	movff	?___llmod+3,printf@val+3
  6221  000A02                     l9353:
  6222  000A02  0101               	movlb	1	; () banked
  6223  000A04  076A               	decf	printf@c& (0+255),f,b
  6224  000A06  0101               	movlb	1	; () banked
  6225  000A08  296A               	incf	printf@c& (0+255),w,b
  6226  000A0A  B4D8               	btfsc	status,2,c
  6227  000A0C  D008               	goto	l9359
  6228  000A0E  D78B               	goto	l9347
  6229  000A10                     l9355:
  6230                           
  6231                           ; BSR set to: 1
  6232                           ;doprnt.c: 1236: (putch('0') );
  6233  000A10  0E30               	movlw	48
  6234  000A12  EC3B  F030         	call	_putch
  6235                           
  6236                           ;doprnt.c: 1237: prec--;
  6237  000A16  0101               	movlb	1	; () banked
  6238  000A18  0768               	decf	printf@prec& (0+255),f,b
  6239  000A1A  A0D8               	btfss	status,0,c
  6240  000A1C  0769               	decf	(printf@prec+1)& (0+255),f,b
  6241  000A1E                     l9359:
  6242                           
  6243                           ; BSR set to: 1
  6244  000A1E  0101               	movlb	1	; () banked
  6245  000A20  5168               	movf	printf@prec& (0+255),w,b
  6246  000A22  0101               	movlb	1	; () banked
  6247  000A24  1169               	iorwf	(printf@prec+1)& (0+255),w,b
  6248  000A26  B4D8               	btfsc	status,2,c
  6249  000A28  D173               	goto	l9439
  6250  000A2A  D7F2               	goto	l9355
  6251  000A2C                     l897:
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;doprnt.c: 1246: }
  6255                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  6256  000A2C  0101               	movlb	1	; () banked
  6257  000A2E  BD56               	btfsc	printf@flag& (0+255),6,b
  6258  000A30  D023               	goto	l9371
  6259                           
  6260                           ; BSR set to: 1
  6261                           ;doprnt.c: 1253: {
  6262                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6263  000A32  C154  FFD9         	movff	printf@ap,fsr2l
  6264  000A36  C155  FFDA         	movff	printf@ap+1,fsr2h
  6265  000A3A  CFDE F15C          	movff	postinc2,printf@val
  6266  000A3E  CFDD F15D          	movff	postdec2,printf@val+1
  6267  000A42  0101               	movlb	1	; () banked
  6268  000A44  0E00               	movlw	0
  6269  000A46  BF5D               	btfsc	(printf@val+1)& (0+255),7,b
  6270  000A48  0EFF               	movlw	-1
  6271  000A4A  6F5E               	movwf	(printf@val+2)& (0+255),b
  6272  000A4C  6F5F               	movwf	(printf@val+3)& (0+255),b
  6273                           
  6274                           ; BSR set to: 1
  6275  000A4E  0E02               	movlw	2
  6276  000A50  0101               	movlb	1	; () banked
  6277  000A52  2754               	addwf	printf@ap& (0+255),f,b
  6278  000A54  0E00               	movlw	0
  6279  000A56  2355               	addwfc	(printf@ap+1)& (0+255),f,b
  6280                           
  6281                           ; BSR set to: 1
  6282                           ;doprnt.c: 1261: if((long)val < 0) {
  6283  000A58  0101               	movlb	1	; () banked
  6284  000A5A  AF5F               	btfss	(printf@val+3)& (0+255),7,b
  6285  000A5C  D021               	goto	l9375
  6286                           
  6287                           ; BSR set to: 1
  6288                           ;doprnt.c: 1262: flag |= 0x03;
  6289  000A5E  0E03               	movlw	3
  6290  000A60  0101               	movlb	1	; () banked
  6291  000A62  1356               	iorwf	printf@flag& (0+255),f,b
  6292                           
  6293                           ; BSR set to: 1
  6294                           ;doprnt.c: 1263: val = -val;
  6295  000A64  0101               	movlb	1	; () banked
  6296  000A66  1F5F               	comf	(printf@val+3)& (0+255),f,b
  6297  000A68  1F5E               	comf	(printf@val+2)& (0+255),f,b
  6298  000A6A  1F5D               	comf	(printf@val+1)& (0+255),f,b
  6299  000A6C  6D5C               	negf	printf@val& (0+255),b
  6300  000A6E  0E00               	movlw	0
  6301  000A70  235D               	addwfc	(printf@val+1)& (0+255),f,b
  6302  000A72  235E               	addwfc	(printf@val+2)& (0+255),f,b
  6303  000A74  235F               	addwfc	(printf@val+3)& (0+255),f,b
  6304                           
  6305                           ; BSR set to: 1
  6306                           ;doprnt.c: 1264: }
  6307                           ;doprnt.c: 1266: }
  6308  000A76  D014               	goto	l9375
  6309  000A78                     l9371:
  6310                           
  6311                           ; BSR set to: 1
  6312                           ;doprnt.c: 1268: else
  6313                           ;doprnt.c: 1273: {
  6314                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6315  000A78  C154  FFD9         	movff	printf@ap,fsr2l
  6316  000A7C  C155  FFDA         	movff	printf@ap+1,fsr2h
  6317  000A80  CFDE F148          	movff	postinc2,??_printf
  6318  000A84  CFDD F149          	movff	postdec2,??_printf+1
  6319  000A88  C148  F15C         	movff	??_printf,printf@val
  6320  000A8C  C149  F15D         	movff	??_printf+1,printf@val+1
  6321  000A90  0101               	movlb	1	; () banked
  6322  000A92  6B5E               	clrf	(printf@val+2)& (0+255),b
  6323  000A94  6B5F               	clrf	(printf@val+3)& (0+255),b
  6324                           
  6325                           ; BSR set to: 1
  6326  000A96  0E02               	movlw	2
  6327  000A98  0101               	movlb	1	; () banked
  6328  000A9A  2754               	addwf	printf@ap& (0+255),f,b
  6329  000A9C  0E00               	movlw	0
  6330  000A9E  2355               	addwfc	(printf@ap+1)& (0+255),f,b
  6331  000AA0                     l9375:
  6332                           
  6333                           ; BSR set to: 1
  6334                           ;doprnt.c: 1287: }
  6335                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6336  000AA0  0101               	movlb	1	; () banked
  6337  000AA2  5168               	movf	printf@prec& (0+255),w,b
  6338  000AA4  0101               	movlb	1	; () banked
  6339  000AA6  1169               	iorwf	(printf@prec+1)& (0+255),w,b
  6340  000AA8  A4D8               	btfss	status,2,c
  6341  000AAA  D00D               	goto	l9381
  6342                           
  6343                           ; BSR set to: 1
  6344  000AAC  0101               	movlb	1	; () banked
  6345  000AAE  515C               	movf	printf@val& (0+255),w,b
  6346  000AB0  0101               	movlb	1	; () banked
  6347  000AB2  115D               	iorwf	(printf@val+1)& (0+255),w,b
  6348  000AB4  0101               	movlb	1	; () banked
  6349  000AB6  115E               	iorwf	(printf@val+2)& (0+255),w,b
  6350  000AB8  0101               	movlb	1	; () banked
  6351  000ABA  115F               	iorwf	(printf@val+3)& (0+255),w,b
  6352  000ABC  A4D8               	btfss	status,2,c
  6353  000ABE  D003               	goto	l9381
  6354                           
  6355                           ; BSR set to: 1
  6356                           ;doprnt.c: 1291: prec++;
  6357  000AC0  0101               	movlb	1	; () banked
  6358  000AC2  4B68               	infsnz	printf@prec& (0+255),f,b
  6359  000AC4  2B69               	incf	(printf@prec+1)& (0+255),f,b
  6360  000AC6                     l9381:
  6361                           
  6362                           ; BSR set to: 1
  6363                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6364  000AC6  0E01               	movlw	1
  6365  000AC8  0101               	movlb	1	; () banked
  6366  000ACA  6F6A               	movwf	printf@c& (0+255),b
  6367  000ACC                     l9383:
  6368                           
  6369                           ; BSR set to: 1
  6370  000ACC  0E0A               	movlw	10
  6371  000ACE  0101               	movlb	1	; () banked
  6372  000AD0  196A               	xorwf	printf@c& (0+255),w,b
  6373  000AD2  B4D8               	btfsc	status,2,c
  6374  000AD4  D01E               	goto	l9395
  6375                           
  6376                           ; BSR set to: 1
  6377                           ;doprnt.c: 1306: if(val < dpowers[c])
  6378                           
  6379                           ; BSR set to: 1
  6380                           
  6381                           ; BSR set to: 1
  6382  000AD6  0101               	movlb	1	; () banked
  6383  000AD8  516A               	movf	printf@c& (0+255),w,b
  6384  000ADA  0D04               	mullw	4
  6385  000ADC  0E83               	movlw	low _dpowers
  6386  000ADE  24F3               	addwf	prodl,w,c
  6387  000AE0  6EF6               	movwf	tblptrl,c
  6388  000AE2  0E7D               	movlw	high _dpowers
  6389  000AE4  20F4               	addwfc	prodh,w,c
  6390  000AE6  6EF7               	movwf	tblptrh,c
  6391  000AE8                     	if	0	;There are less than 3 active tblptr bytes
  6392  000AE8                     	endif
  6393  000AE8  0009               	tblrd		*+
  6394  000AEA  50F5               	movf	tablat,w,c
  6395  000AEC  0101               	movlb	1	; () banked
  6396  000AEE  5D5C               	subwf	printf@val& (0+255),w,b
  6397  000AF0  0009               	tblrd		*+
  6398  000AF2  50F5               	movf	tablat,w,c
  6399  000AF4  0101               	movlb	1	; () banked
  6400  000AF6  595D               	subwfb	(printf@val+1)& (0+255),w,b
  6401  000AF8  0009               	tblrd		*+
  6402  000AFA  50F5               	movf	tablat,w,c
  6403  000AFC  0101               	movlb	1	; () banked
  6404  000AFE  595E               	subwfb	(printf@val+2)& (0+255),w,b
  6405  000B00  0009               	tblrd		*+
  6406  000B02  50F5               	movf	tablat,w,c
  6407  000B04  0101               	movlb	1	; () banked
  6408  000B06  595F               	subwfb	(printf@val+3)& (0+255),w,b
  6409  000B08  A0D8               	btfss	status,0,c
  6410  000B0A  D003               	goto	l9395
  6411                           
  6412                           ; BSR set to: 1
  6413                           
  6414                           ; BSR set to: 1
  6415                           
  6416                           ; BSR set to: 1
  6417                           ;doprnt.c: 1307: break;
  6418  000B0C  0101               	movlb	1	; () banked
  6419  000B0E  2B6A               	incf	printf@c& (0+255),f,b
  6420  000B10  D7DD               	goto	l9383
  6421  000B12                     l9395:
  6422                           
  6423                           ; BSR set to: 1
  6424                           ;doprnt.c: 1339: if(c < prec)
  6425  000B12  0E80               	movlw	128
  6426  000B14  0101               	movlb	1	; () banked
  6427  000B16  BF6A               	btfsc	printf@c& (0+255),7,b
  6428  000B18  0E7F               	movlw	127
  6429  000B1A  0101               	movlb	1	; () banked
  6430  000B1C  6F48               	movwf	??_printf& (0+255),b
  6431  000B1E  0101               	movlb	1	; () banked
  6432  000B20  5168               	movf	printf@prec& (0+255),w,b
  6433  000B22  0101               	movlb	1	; () banked
  6434  000B24  5D6A               	subwf	printf@c& (0+255),w,b
  6435  000B26  0101               	movlb	1	; () banked
  6436  000B28  5169               	movf	(printf@prec+1)& (0+255),w,b
  6437  000B2A  0A80               	xorlw	128
  6438  000B2C  0101               	movlb	1	; () banked
  6439  000B2E  5948               	subwfb	??_printf& (0+255),w,b
  6440  000B30  B0D8               	btfsc	status,0,c
  6441  000B32  D003               	goto	l9399
  6442                           
  6443                           ; BSR set to: 1
  6444                           ;doprnt.c: 1340: c = prec;
  6445  000B34  C168  F16A         	movff	printf@prec,printf@c
  6446  000B38  D018               	goto	l9403
  6447  000B3A                     l9399:
  6448                           
  6449                           ; BSR set to: 1
  6450                           ;doprnt.c: 1341: else if(prec < c)
  6451  000B3A  0101               	movlb	1	; () banked
  6452  000B3C  5169               	movf	(printf@prec+1)& (0+255),w,b
  6453  000B3E  0A80               	xorlw	128
  6454  000B40  0101               	movlb	1	; () banked
  6455  000B42  6F48               	movwf	??_printf& (0+255),b
  6456  000B44  0101               	movlb	1	; () banked
  6457  000B46  516A               	movf	printf@c& (0+255),w,b
  6458  000B48  0101               	movlb	1	; () banked
  6459  000B4A  5D68               	subwf	printf@prec& (0+255),w,b
  6460  000B4C  0E80               	movlw	128
  6461  000B4E  0101               	movlb	1	; () banked
  6462  000B50  BF6A               	btfsc	printf@c& (0+255),7,b
  6463  000B52  0E7F               	movlw	127
  6464  000B54  0101               	movlb	1	; () banked
  6465  000B56  5948               	subwfb	??_printf& (0+255),w,b
  6466  000B58  B0D8               	btfsc	status,0,c
  6467  000B5A  D007               	goto	l9403
  6468                           
  6469                           ; BSR set to: 1
  6470                           ;doprnt.c: 1342: prec = c;
  6471  000B5C  0101               	movlb	1	; () banked
  6472  000B5E  516A               	movf	printf@c& (0+255),w,b
  6473  000B60  0101               	movlb	1	; () banked
  6474  000B62  6F68               	movwf	printf@prec& (0+255),b
  6475  000B64  6B69               	clrf	(printf@prec+1)& (0+255),b
  6476  000B66  BF68               	btfsc	printf@prec& (0+255),7,b
  6477  000B68  0769               	decf	(printf@prec+1)& (0+255),f,b
  6478  000B6A                     l9403:
  6479                           
  6480                           ; BSR set to: 1
  6481                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6482  000B6A  0101               	movlb	1	; () banked
  6483  000B6C  5162               	movf	printf@width& (0+255),w,b
  6484  000B6E  0101               	movlb	1	; () banked
  6485  000B70  1163               	iorwf	(printf@width+1)& (0+255),w,b
  6486  000B72  B4D8               	btfsc	status,2,c
  6487  000B74  D014               	goto	l9409
  6488                           
  6489                           ; BSR set to: 1
  6490  000B76  0E03               	movlw	3
  6491  000B78  0101               	movlb	1	; () banked
  6492  000B7A  1556               	andwf	printf@flag& (0+255),w,b
  6493  000B7C  0101               	movlb	1	; () banked
  6494  000B7E  6F48               	movwf	??_printf& (0+255),b
  6495  000B80  0E00               	movlw	0
  6496  000B82  0101               	movlb	1	; () banked
  6497  000B84  1557               	andwf	(printf@flag+1)& (0+255),w,b
  6498  000B86  0101               	movlb	1	; () banked
  6499  000B88  6F49               	movwf	(??_printf+1)& (0+255),b
  6500  000B8A  0101               	movlb	1	; () banked
  6501  000B8C  5148               	movf	??_printf& (0+255),w,b
  6502  000B8E  0101               	movlb	1	; () banked
  6503  000B90  1149               	iorwf	(??_printf+1)& (0+255),w,b
  6504  000B92  B4D8               	btfsc	status,2,c
  6505  000B94  D004               	goto	l9409
  6506                           
  6507                           ; BSR set to: 1
  6508                           ;doprnt.c: 1346: width--;
  6509  000B96  0101               	movlb	1	; () banked
  6510  000B98  0762               	decf	printf@width& (0+255),f,b
  6511  000B9A  A0D8               	btfss	status,0,c
  6512  000B9C  0763               	decf	(printf@width+1)& (0+255),f,b
  6513  000B9E                     l9409:
  6514                           
  6515                           ; BSR set to: 1
  6516                           ;doprnt.c: 1348: if(flag & 0x4000) {
  6517  000B9E  0101               	movlb	1	; () banked
  6518  000BA0  AD57               	btfss	(printf@flag+1)& (0+255),6,b
  6519  000BA2  D01E               	goto	l9417
  6520                           
  6521                           ; BSR set to: 1
  6522                           ;doprnt.c: 1349: if(width > prec)
  6523  000BA4  0101               	movlb	1	; () banked
  6524  000BA6  5162               	movf	printf@width& (0+255),w,b
  6525  000BA8  0101               	movlb	1	; () banked
  6526  000BAA  5D68               	subwf	printf@prec& (0+255),w,b
  6527  000BAC  0101               	movlb	1	; () banked
  6528  000BAE  5169               	movf	(printf@prec+1)& (0+255),w,b
  6529  000BB0  0A80               	xorlw	128
  6530  000BB2  0101               	movlb	1	; () banked
  6531  000BB4  6F48               	movwf	??_printf& (0+255),b
  6532  000BB6  0101               	movlb	1	; () banked
  6533  000BB8  5163               	movf	(printf@width+1)& (0+255),w,b
  6534  000BBA  0A80               	xorlw	128
  6535  000BBC  0101               	movlb	1	; () banked
  6536  000BBE  5948               	subwfb	??_printf& (0+255),w,b
  6537  000BC0  B0D8               	btfsc	status,0,c
  6538  000BC2  D009               	goto	l9415
  6539                           
  6540                           ; BSR set to: 1
  6541                           ;doprnt.c: 1350: width -= prec;
  6542  000BC4  0101               	movlb	1	; () banked
  6543  000BC6  5168               	movf	printf@prec& (0+255),w,b
  6544  000BC8  0101               	movlb	1	; () banked
  6545  000BCA  5F62               	subwf	printf@width& (0+255),f,b
  6546  000BCC  0101               	movlb	1	; () banked
  6547  000BCE  5169               	movf	(printf@prec+1)& (0+255),w,b
  6548  000BD0  0101               	movlb	1	; () banked
  6549  000BD2  5B63               	subwfb	(printf@width+1)& (0+255),f,b
  6550  000BD4  D005               	goto	l9417
  6551  000BD6                     l9415:
  6552                           
  6553                           ; BSR set to: 1
  6554                           ;doprnt.c: 1351: else
  6555                           ;doprnt.c: 1352: width = 0;
  6556  000BD6  0E00               	movlw	0
  6557  000BD8  0101               	movlb	1	; () banked
  6558  000BDA  6F63               	movwf	(printf@width+1)& (0+255),b
  6559  000BDC  0E00               	movlw	0
  6560  000BDE  6F62               	movwf	printf@width& (0+255),b
  6561  000BE0                     l9417:
  6562                           
  6563                           ; BSR set to: 1
  6564                           ;doprnt.c: 1353: }
  6565                           ;doprnt.c: 1381: if(width > c)
  6566  000BE0  0E80               	movlw	128
  6567  000BE2  0101               	movlb	1	; () banked
  6568  000BE4  BF6A               	btfsc	printf@c& (0+255),7,b
  6569  000BE6  0E7F               	movlw	127
  6570  000BE8  0101               	movlb	1	; () banked
  6571  000BEA  6F48               	movwf	??_printf& (0+255),b
  6572  000BEC  0101               	movlb	1	; () banked
  6573  000BEE  5162               	movf	printf@width& (0+255),w,b
  6574  000BF0  0101               	movlb	1	; () banked
  6575  000BF2  5D6A               	subwf	printf@c& (0+255),w,b
  6576  000BF4  0101               	movlb	1	; () banked
  6577  000BF6  5163               	movf	(printf@width+1)& (0+255),w,b
  6578  000BF8  0A80               	xorlw	128
  6579  000BFA  0101               	movlb	1	; () banked
  6580  000BFC  5948               	subwfb	??_printf& (0+255),w,b
  6581  000BFE  B0D8               	btfsc	status,0,c
  6582  000C00  D00B               	goto	l9421
  6583                           
  6584                           ; BSR set to: 1
  6585                           ;doprnt.c: 1382: width -= c;
  6586  000C02  0101               	movlb	1	; () banked
  6587  000C04  516A               	movf	printf@c& (0+255),w,b
  6588  000C06  0101               	movlb	1	; () banked
  6589  000C08  5F62               	subwf	printf@width& (0+255),f,b
  6590  000C0A  0E00               	movlw	0
  6591  000C0C  0101               	movlb	1	; () banked
  6592  000C0E  BF6A               	btfsc	printf@c& (0+255),7,b
  6593  000C10  0EFF               	movlw	255
  6594  000C12  0101               	movlb	1	; () banked
  6595  000C14  5B63               	subwfb	(printf@width+1)& (0+255),f,b
  6596  000C16  D005               	goto	l9423
  6597  000C18                     l9421:
  6598                           
  6599                           ; BSR set to: 1
  6600                           ;doprnt.c: 1383: else
  6601                           ;doprnt.c: 1384: width = 0;
  6602  000C18  0E00               	movlw	0
  6603  000C1A  0101               	movlb	1	; () banked
  6604  000C1C  6F63               	movwf	(printf@width+1)& (0+255),b
  6605  000C1E  0E00               	movlw	0
  6606  000C20  6F62               	movwf	printf@width& (0+255),b
  6607  000C22                     l9423:
  6608                           
  6609                           ; BSR set to: 1
  6610                           ;doprnt.c: 1422: {
  6611                           ;doprnt.c: 1424: if(width
  6612                           ;doprnt.c: 1428: )
  6613  000C22  0101               	movlb	1	; () banked
  6614  000C24  5162               	movf	printf@width& (0+255),w,b
  6615  000C26  0101               	movlb	1	; () banked
  6616  000C28  1163               	iorwf	(printf@width+1)& (0+255),w,b
  6617  000C2A  B4D8               	btfsc	status,2,c
  6618  000C2C  D00D               	goto	l9429
  6619  000C2E                     l9425:
  6620                           
  6621                           ; BSR set to: 1
  6622                           ;doprnt.c: 1430: (putch(' ') );
  6623  000C2E  0E20               	movlw	32
  6624  000C30  EC3B  F030         	call	_putch
  6625                           
  6626                           ;doprnt.c: 1431: while(--width);
  6627  000C34  0101               	movlb	1	; () banked
  6628  000C36  0762               	decf	printf@width& (0+255),f,b
  6629  000C38  A0D8               	btfss	status,0,c
  6630  000C3A  0763               	decf	(printf@width+1)& (0+255),f,b
  6631  000C3C  0101               	movlb	1	; () banked
  6632  000C3E  5162               	movf	printf@width& (0+255),w,b
  6633  000C40  0101               	movlb	1	; () banked
  6634  000C42  1163               	iorwf	(printf@width+1)& (0+255),w,b
  6635  000C44  A4D8               	btfss	status,2,c
  6636  000C46  D7F3               	goto	l9425
  6637  000C48                     l9429:
  6638                           
  6639                           ; BSR set to: 1
  6640                           ;doprnt.c: 1438: if(flag & 0x03)
  6641  000C48  0E03               	movlw	3
  6642  000C4A  0101               	movlb	1	; () banked
  6643  000C4C  1556               	andwf	printf@flag& (0+255),w,b
  6644  000C4E  0101               	movlb	1	; () banked
  6645  000C50  6F48               	movwf	??_printf& (0+255),b
  6646  000C52  0E00               	movlw	0
  6647  000C54  0101               	movlb	1	; () banked
  6648  000C56  1557               	andwf	(printf@flag+1)& (0+255),w,b
  6649  000C58  0101               	movlb	1	; () banked
  6650  000C5A  6F49               	movwf	(??_printf+1)& (0+255),b
  6651  000C5C  0101               	movlb	1	; () banked
  6652  000C5E  5148               	movf	??_printf& (0+255),w,b
  6653  000C60  0101               	movlb	1	; () banked
  6654  000C62  1149               	iorwf	(??_printf+1)& (0+255),w,b
  6655  000C64  B4D8               	btfsc	status,2,c
  6656  000C66  D049               	goto	l9437
  6657                           
  6658                           ; BSR set to: 1
  6659                           ;doprnt.c: 1439: (putch('-') );
  6660  000C68  0E2D               	movlw	45
  6661  000C6A  EC3B  F030         	call	_putch
  6662                           
  6663                           ;doprnt.c: 1469: }
  6664                           ;doprnt.c: 1474: while(prec--) {
  6665  000C6E  D045               	goto	l9437
  6666  000C70                     l9433:
  6667                           
  6668                           ;doprnt.c: 1478: {
  6669                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6670  000C70  C168  F148         	movff	printf@prec,??_printf
  6671  000C74  C169  F149         	movff	printf@prec+1,??_printf+1
  6672  000C78  0101               	movlb	1	; () banked
  6673  000C7A  90D8               	bcf	status,0,c
  6674  000C7C  3748               	rlcf	??_printf& (0+255),f,b
  6675  000C7E  3749               	rlcf	(??_printf+1)& (0+255),f,b
  6676  000C80  0101               	movlb	1	; () banked
  6677  000C82  90D8               	bcf	status,0,c
  6678  000C84  3748               	rlcf	??_printf& (0+255),f,b
  6679  000C86  3749               	rlcf	(??_printf+1)& (0+255),f,b
  6680  000C88  0E83               	movlw	low _dpowers
  6681  000C8A  0101               	movlb	1	; () banked
  6682  000C8C  2548               	addwf	??_printf& (0+255),w,b
  6683  000C8E  6EF6               	movwf	tblptrl,c
  6684  000C90  0E7D               	movlw	high _dpowers
  6685  000C92  2149               	addwfc	(??_printf+1)& (0+255),w,b
  6686  000C94  6EF7               	movwf	tblptrh,c
  6687  000C96                     	if	0	;There are less than 3 active tblptr bytes
  6688  000C96                     	endif
  6689  000C96  0009               	tblrd		*+
  6690  000C98  CFF5 F093          	movff	tablat,___lldiv@divisor
  6691  000C9C  0009               	tblrd		*+
  6692  000C9E  CFF5 F094          	movff	tablat,___lldiv@divisor+1
  6693  000CA2  0009               	tblrd		*+
  6694  000CA4  CFF5 F095          	movff	tablat,___lldiv@divisor+2
  6695  000CA8  000A               	tblrd		*-
  6696  000CAA  CFF5 F096          	movff	tablat,___lldiv@divisor+3
  6697  000CAE  C15C  F08F         	movff	printf@val,___lldiv@dividend
  6698  000CB2  C15D  F090         	movff	printf@val+1,___lldiv@dividend+1
  6699  000CB6  C15E  F091         	movff	printf@val+2,___lldiv@dividend+2
  6700  000CBA  C15F  F092         	movff	printf@val+3,___lldiv@dividend+3
  6701  000CBE  EC1B  F027         	call	___lldiv	;wreg free
  6702  000CC2  C08F  F09C         	movff	?___lldiv,___llmod@dividend
  6703  000CC6  C090  F09D         	movff	?___lldiv+1,___llmod@dividend+1
  6704  000CCA  C091  F09E         	movff	?___lldiv+2,___llmod@dividend+2
  6705  000CCE  C092  F09F         	movff	?___lldiv+3,___llmod@dividend+3
  6706  000CD2  0E0A               	movlw	10
  6707  000CD4  0100               	movlb	0	; () banked
  6708  000CD6  6FA0               	movwf	___llmod@divisor& (0+255),b
  6709  000CD8  0E00               	movlw	0
  6710  000CDA  6FA1               	movwf	(___llmod@divisor+1)& (0+255),b
  6711  000CDC  0E00               	movlw	0
  6712  000CDE  6FA2               	movwf	(___llmod@divisor+2)& (0+255),b
  6713  000CE0  0E00               	movlw	0
  6714  000CE2  6FA3               	movwf	(___llmod@divisor+3)& (0+255),b
  6715  000CE4  EC22  F029         	call	___llmod	;wreg free
  6716  000CE8  0100               	movlb	0	; () banked
  6717  000CEA  519C               	movf	?___llmod& (0+255),w,b
  6718  000CEC  0F30               	addlw	48
  6719  000CEE  0101               	movlb	1	; () banked
  6720  000CF0  6F6A               	movwf	printf@c& (0+255),b
  6721                           
  6722                           ; BSR set to: 1
  6723                           ;doprnt.c: 1523: }
  6724                           ;doprnt.c: 1524: (putch(c) );
  6725  000CF2  0101               	movlb	1	; () banked
  6726  000CF4  516A               	movf	printf@c& (0+255),w,b
  6727  000CF6  EC3B  F030         	call	_putch
  6728  000CFA                     l9437:
  6729  000CFA  0101               	movlb	1	; () banked
  6730  000CFC  0768               	decf	printf@prec& (0+255),f,b
  6731  000CFE  A0D8               	btfss	status,0,c
  6732  000D00  0769               	decf	(printf@prec+1)& (0+255),f,b
  6733  000D02  0101               	movlb	1	; () banked
  6734  000D04  2968               	incf	printf@prec& (0+255),w,b
  6735  000D06  E1B4               	bnz	l9433
  6736  000D08  0101               	movlb	1	; () banked
  6737  000D0A  2969               	incf	(printf@prec+1)& (0+255),w,b
  6738  000D0C  A4D8               	btfss	status,2,c
  6739  000D0E  D7B0               	goto	l9433
  6740  000D10                     l9439:
  6741  000D10  C136  FFF6         	movff	printf@f,tblptrl
  6742  000D14  C137  FFF7         	movff	printf@f+1,tblptrh
  6743  000D18  0101               	movlb	1	; () banked
  6744  000D1A  4B36               	infsnz	printf@f& (0+255),f,b
  6745  000D1C  2B37               	incf	(printf@f+1)& (0+255),f,b
  6746  000D1E                     	if	0	;tblptru may be non-zero
  6747  000D1E                     	endif
  6748  000D1E                     	if	0	;tblptru may be non-zero
  6749  000D1E                     	endif
  6750  000D1E  0008               	tblrd		*
  6751  000D20  CFF5 F16A          	movff	tablat,printf@c
  6752  000D24  0101               	movlb	1	; () banked
  6753  000D26  516A               	movf	printf@c& (0+255),w,b
  6754  000D28  B4D8               	btfsc	status,2,c
  6755  000D2A  0012               	return	
  6756  000D2C  EF69  F000         	goto	l9141
  6757  000D30                     __end_of_printf:
  6758                           	opt stack 0
  6759                           tblptru	equ	0xFF8
  6760                           tblptrh	equ	0xFF7
  6761                           tblptrl	equ	0xFF6
  6762                           tablat	equ	0xFF5
  6763                           prodh	equ	0xFF4
  6764                           prodl	equ	0xFF3
  6765                           intcon	equ	0xFF2
  6766                           postinc0	equ	0xFEE
  6767                           wreg	equ	0xFE8
  6768                           postdec1	equ	0xFE5
  6769                           fsr1l	equ	0xFE1
  6770                           indf2	equ	0xFDF
  6771                           postinc2	equ	0xFDE
  6772                           postdec2	equ	0xFDD
  6773                           fsr2h	equ	0xFDA
  6774                           fsr2l	equ	0xFD9
  6775                           status	equ	0xFD8
  6776                           
  6777 ;; *************** function _scale *****************
  6778 ;; Defined at:
  6779 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6780 ;; Parameters:    Size  Location     Type
  6781 ;;  scl             1    wreg     char 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  scl             1   21[BANK1 ] char 
  6784 ;; Return value:  Size  Location     Type
  6785 ;;                  4   13[BANK1 ] char 
  6786 ;; Registers used:
  6787 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6788 ;; Tracked objects:
  6789 ;;		On entry : 0/0
  6790 ;;		On exit  : 0/0
  6791 ;;		Unchanged: 0/0
  6792 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6793 ;;      Params:         0       0       4       0       0       0       0
  6794 ;;      Locals:         0       0       5       0       0       0       0
  6795 ;;      Temps:          0       0       0       0       0       0       0
  6796 ;;      Totals:         0       0       9       0       0       0       0
  6797 ;;Total ram usage:        9 bytes
  6798 ;; Hardware stack levels used:    1
  6799 ;; Hardware stack levels required when called:    9
  6800 ;; This function calls:
  6801 ;;		___awdiv
  6802 ;;		___awmod
  6803 ;;		___flmul
  6804 ;; This function is called by:
  6805 ;;		_printf
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text18
  6810  000D30                     __ptext18:
  6811                           	opt stack 0
  6812  000D30                     _scale:
  6813                           	opt stack 18
  6814                           
  6815                           ; BSR set to: 1
  6816                           ;incstack = 0
  6817                           ;scale@scl stored from wreg
  6818  000D30  0101               	movlb	1	; () banked
  6819  000D32  6F15               	movwf	scale@scl& (0+255),b
  6820                           
  6821                           ;doprnt.c: 428: if(scl < 0) {
  6822  000D34  0101               	movlb	1	; () banked
  6823  000D36  AF15               	btfss	scale@scl& (0+255),7,b
  6824  000D38  D133               	goto	l8779
  6825                           
  6826                           ; BSR set to: 1
  6827                           ;doprnt.c: 429: scl = -scl;
  6828  000D3A  0101               	movlb	1	; () banked
  6829  000D3C  6D15               	negf	scale@scl& (0+255),b
  6830                           
  6831                           ;doprnt.c: 430: if(scl>=110)
  6832  000D3E  0101               	movlb	1	; () banked
  6833  000D40  5115               	movf	scale@scl& (0+255),w,b
  6834  000D42  0A80               	xorlw	128
  6835  000D44  0F12               	addlw	-238
  6836  000D46  A0D8               	btfss	status,0,c
  6837  000D48  D0B2               	goto	l8769
  6838                           
  6839                           ; BSR set to: 1
  6840                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6841  000D4A  0E00               	movlw	0
  6842  000D4C  0100               	movlb	0	; () banked
  6843  000D4E  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  6844  000D50  0E0A               	movlw	10
  6845  000D52  6F97               	movwf	___awdiv@divisor& (0+255),b
  6846  000D54  0E00               	movlw	0
  6847  000D56  0100               	movlb	0	; () banked
  6848  000D58  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  6849  000D5A  0E64               	movlw	100
  6850  000D5C  6F91               	movwf	___awmod@divisor& (0+255),b
  6851  000D5E  0101               	movlb	1	; () banked
  6852  000D60  5115               	movf	scale@scl& (0+255),w,b
  6853  000D62  0100               	movlb	0	; () banked
  6854  000D64  6F8F               	movwf	___awmod@dividend& (0+255),b
  6855  000D66  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  6856  000D68  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  6857  000D6A  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  6858  000D6C  ECD1  F028         	call	___awmod	;wreg free
  6859  000D70  C08F  F095         	movff	?___awmod,___awdiv@dividend
  6860  000D74  C090  F096         	movff	?___awmod+1,___awdiv@dividend+1
  6861  000D78  EC5E  F026         	call	___awdiv	;wreg free
  6862  000D7C  0100               	movlb	0	; () banked
  6863  000D7E  90D8               	bcf	status,0,c
  6864  000D80  3795               	rlcf	?___awdiv& (0+255),f,b
  6865  000D82  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  6866  000D84  0100               	movlb	0	; () banked
  6867  000D86  90D8               	bcf	status,0,c
  6868  000D88  3795               	rlcf	?___awdiv& (0+255),f,b
  6869  000D8A  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  6870  000D8C  0E24               	movlw	36
  6871  000D8E  0100               	movlb	0	; () banked
  6872  000D90  2795               	addwf	?___awdiv& (0+255),f,b
  6873  000D92  0E00               	movlw	0
  6874  000D94  0100               	movlb	0	; () banked
  6875  000D96  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  6876  000D98  0E1B               	movlw	low __npowers_
  6877  000D9A  0100               	movlb	0	; () banked
  6878  000D9C  2595               	addwf	?___awdiv& (0+255),w,b
  6879  000D9E  6EF6               	movwf	tblptrl,c
  6880  000DA0  0E7D               	movlw	high __npowers_
  6881  000DA2  0100               	movlb	0	; () banked
  6882  000DA4  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  6883  000DA6  6EF7               	movwf	tblptrh,c
  6884  000DA8                     	if	0	;There are less than 3 active tblptr bytes
  6885  000DA8                     	endif
  6886  000DA8  0009               	tblrd		*+
  6887  000DAA  CFF5 F0A1          	movff	tablat,___flmul@a
  6888  000DAE  0009               	tblrd		*+
  6889  000DB0  CFF5 F0A2          	movff	tablat,___flmul@a+1
  6890  000DB4  0009               	tblrd		*+
  6891  000DB6  CFF5 F0A3          	movff	tablat,___flmul@a+2
  6892  000DBA  000A               	tblrd		*-
  6893  000DBC  CFF5 F0A4          	movff	tablat,___flmul@a+3
  6894  000DC0  0E00               	movlw	0
  6895  000DC2  0100               	movlb	0	; () banked
  6896  000DC4  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  6897  000DC6  0E64               	movlw	100
  6898  000DC8  6F97               	movwf	___awdiv@divisor& (0+255),b
  6899  000DCA  0101               	movlb	1	; () banked
  6900  000DCC  5115               	movf	scale@scl& (0+255),w,b
  6901  000DCE  0100               	movlb	0	; () banked
  6902  000DD0  6F95               	movwf	___awdiv@dividend& (0+255),b
  6903  000DD2  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  6904  000DD4  BF95               	btfsc	___awdiv@dividend& (0+255),7,b
  6905  000DD6  0796               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6906  000DD8  EC5E  F026         	call	___awdiv	;wreg free
  6907  000DDC  0100               	movlb	0	; () banked
  6908  000DDE  90D8               	bcf	status,0,c
  6909  000DE0  3795               	rlcf	?___awdiv& (0+255),f,b
  6910  000DE2  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  6911  000DE4  0100               	movlb	0	; () banked
  6912  000DE6  90D8               	bcf	status,0,c
  6913  000DE8  3795               	rlcf	?___awdiv& (0+255),f,b
  6914  000DEA  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  6915  000DEC  0E48               	movlw	72
  6916  000DEE  0100               	movlb	0	; () banked
  6917  000DF0  2795               	addwf	?___awdiv& (0+255),f,b
  6918  000DF2  0E00               	movlw	0
  6919  000DF4  0100               	movlb	0	; () banked
  6920  000DF6  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  6921  000DF8  0E1B               	movlw	low __npowers_
  6922  000DFA  0100               	movlb	0	; () banked
  6923  000DFC  2595               	addwf	?___awdiv& (0+255),w,b
  6924  000DFE  6EF6               	movwf	tblptrl,c
  6925  000E00  0E7D               	movlw	high __npowers_
  6926  000E02  0100               	movlb	0	; () banked
  6927  000E04  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  6928  000E06  6EF7               	movwf	tblptrh,c
  6929  000E08                     	if	0	;There are less than 3 active tblptr bytes
  6930  000E08                     	endif
  6931  000E08  0009               	tblrd		*+
  6932  000E0A  CFF5 F09D          	movff	tablat,___flmul@b
  6933  000E0E  0009               	tblrd		*+
  6934  000E10  CFF5 F09E          	movff	tablat,___flmul@b+1
  6935  000E14  0009               	tblrd		*+
  6936  000E16  CFF5 F09F          	movff	tablat,___flmul@b+2
  6937  000E1A  000A               	tblrd		*-
  6938  000E1C  CFF5 F0A0          	movff	tablat,___flmul@b+3
  6939  000E20  EC55  F00B         	call	___flmul	;wreg free
  6940  000E24  C09D  F111         	movff	?___flmul,_scale$2974
  6941  000E28  C09E  F112         	movff	?___flmul+1,_scale$2974+1
  6942  000E2C  C09F  F113         	movff	?___flmul+2,_scale$2974+2
  6943  000E30  C0A0  F114         	movff	?___flmul+3,_scale$2974+3
  6944                           
  6945                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6946  000E34  C111  F09D         	movff	_scale$2974,___flmul@b
  6947  000E38  C112  F09E         	movff	_scale$2974+1,___flmul@b+1
  6948  000E3C  C113  F09F         	movff	_scale$2974+2,___flmul@b+2
  6949  000E40  C114  F0A0         	movff	_scale$2974+3,___flmul@b+3
  6950  000E44  0E00               	movlw	0
  6951  000E46  0100               	movlb	0	; () banked
  6952  000E48  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  6953  000E4A  0E0A               	movlw	10
  6954  000E4C  6F91               	movwf	___awmod@divisor& (0+255),b
  6955  000E4E  0101               	movlb	1	; () banked
  6956  000E50  5115               	movf	scale@scl& (0+255),w,b
  6957  000E52  0100               	movlb	0	; () banked
  6958  000E54  6F8F               	movwf	___awmod@dividend& (0+255),b
  6959  000E56  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  6960  000E58  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  6961  000E5A  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  6962  000E5C  ECD1  F028         	call	___awmod	;wreg free
  6963  000E60  0100               	movlb	0	; () banked
  6964  000E62  90D8               	bcf	status,0,c
  6965  000E64  378F               	rlcf	?___awmod& (0+255),f,b
  6966  000E66  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  6967  000E68  0100               	movlb	0	; () banked
  6968  000E6A  90D8               	bcf	status,0,c
  6969  000E6C  378F               	rlcf	?___awmod& (0+255),f,b
  6970  000E6E  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  6971  000E70  0E1B               	movlw	low __npowers_
  6972  000E72  0100               	movlb	0	; () banked
  6973  000E74  258F               	addwf	?___awmod& (0+255),w,b
  6974  000E76  6EF6               	movwf	tblptrl,c
  6975  000E78  0E7D               	movlw	high __npowers_
  6976  000E7A  0100               	movlb	0	; () banked
  6977  000E7C  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  6978  000E7E  6EF7               	movwf	tblptrh,c
  6979  000E80                     	if	0	;There are less than 3 active tblptr bytes
  6980  000E80                     	endif
  6981  000E80  0009               	tblrd		*+
  6982  000E82  CFF5 F0A1          	movff	tablat,___flmul@a
  6983  000E86  0009               	tblrd		*+
  6984  000E88  CFF5 F0A2          	movff	tablat,___flmul@a+1
  6985  000E8C  0009               	tblrd		*+
  6986  000E8E  CFF5 F0A3          	movff	tablat,___flmul@a+2
  6987  000E92  000A               	tblrd		*-
  6988  000E94  CFF5 F0A4          	movff	tablat,___flmul@a+3
  6989  000E98  EC55  F00B         	call	___flmul	;wreg free
  6990  000E9C  C09D  F10D         	movff	?___flmul,?_scale
  6991  000EA0  C09E  F10E         	movff	?___flmul+1,?_scale+1
  6992  000EA4  C09F  F10F         	movff	?___flmul+2,?_scale+2
  6993  000EA8  C0A0  F110         	movff	?___flmul+3,?_scale+3
  6994  000EAC  0012               	return	
  6995  000EAE                     l8769:
  6996                           
  6997                           ;doprnt.c: 432: else if(scl > 10)
  6998  000EAE  0101               	movlb	1	; () banked
  6999  000EB0  5115               	movf	scale@scl& (0+255),w,b
  7000  000EB2  0A80               	xorlw	128
  7001  000EB4  0F75               	addlw	-139
  7002  000EB6  A0D8               	btfss	status,0,c
  7003  000EB8  D05D               	goto	l8775
  7004                           
  7005                           ; BSR set to: 1
  7006                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  7007  000EBA  0E00               	movlw	0
  7008  000EBC  0100               	movlb	0	; () banked
  7009  000EBE  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  7010  000EC0  0E0A               	movlw	10
  7011  000EC2  6F97               	movwf	___awdiv@divisor& (0+255),b
  7012  000EC4  0101               	movlb	1	; () banked
  7013  000EC6  5115               	movf	scale@scl& (0+255),w,b
  7014  000EC8  0100               	movlb	0	; () banked
  7015  000ECA  6F95               	movwf	___awdiv@dividend& (0+255),b
  7016  000ECC  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  7017  000ECE  BF95               	btfsc	___awdiv@dividend& (0+255),7,b
  7018  000ED0  0796               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7019  000ED2  EC5E  F026         	call	___awdiv	;wreg free
  7020  000ED6  0100               	movlb	0	; () banked
  7021  000ED8  90D8               	bcf	status,0,c
  7022  000EDA  3795               	rlcf	?___awdiv& (0+255),f,b
  7023  000EDC  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7024  000EDE  0100               	movlb	0	; () banked
  7025  000EE0  90D8               	bcf	status,0,c
  7026  000EE2  3795               	rlcf	?___awdiv& (0+255),f,b
  7027  000EE4  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7028  000EE6  0E24               	movlw	36
  7029  000EE8  0100               	movlb	0	; () banked
  7030  000EEA  2795               	addwf	?___awdiv& (0+255),f,b
  7031  000EEC  0E00               	movlw	0
  7032  000EEE  0100               	movlb	0	; () banked
  7033  000EF0  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  7034  000EF2  0E1B               	movlw	low __npowers_
  7035  000EF4  0100               	movlb	0	; () banked
  7036  000EF6  2595               	addwf	?___awdiv& (0+255),w,b
  7037  000EF8  6EF6               	movwf	tblptrl,c
  7038  000EFA  0E7D               	movlw	high __npowers_
  7039  000EFC  0100               	movlb	0	; () banked
  7040  000EFE  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  7041  000F00  6EF7               	movwf	tblptrh,c
  7042  000F02                     	if	0	;There are less than 3 active tblptr bytes
  7043  000F02                     	endif
  7044  000F02  0009               	tblrd		*+
  7045  000F04  CFF5 F09D          	movff	tablat,___flmul@b
  7046  000F08  0009               	tblrd		*+
  7047  000F0A  CFF5 F09E          	movff	tablat,___flmul@b+1
  7048  000F0E  0009               	tblrd		*+
  7049  000F10  CFF5 F09F          	movff	tablat,___flmul@b+2
  7050  000F14  000A               	tblrd		*-
  7051  000F16  CFF5 F0A0          	movff	tablat,___flmul@b+3
  7052  000F1A  0E00               	movlw	0
  7053  000F1C  0100               	movlb	0	; () banked
  7054  000F1E  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  7055  000F20  0E0A               	movlw	10
  7056  000F22  6F91               	movwf	___awmod@divisor& (0+255),b
  7057  000F24  0101               	movlb	1	; () banked
  7058  000F26  5115               	movf	scale@scl& (0+255),w,b
  7059  000F28  0100               	movlb	0	; () banked
  7060  000F2A  6F8F               	movwf	___awmod@dividend& (0+255),b
  7061  000F2C  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  7062  000F2E  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  7063  000F30  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  7064  000F32  ECD1  F028         	call	___awmod	;wreg free
  7065  000F36  0100               	movlb	0	; () banked
  7066  000F38  90D8               	bcf	status,0,c
  7067  000F3A  378F               	rlcf	?___awmod& (0+255),f,b
  7068  000F3C  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7069  000F3E  0100               	movlb	0	; () banked
  7070  000F40  90D8               	bcf	status,0,c
  7071  000F42  378F               	rlcf	?___awmod& (0+255),f,b
  7072  000F44  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7073  000F46  0E1B               	movlw	low __npowers_
  7074  000F48  0100               	movlb	0	; () banked
  7075  000F4A  258F               	addwf	?___awmod& (0+255),w,b
  7076  000F4C  6EF6               	movwf	tblptrl,c
  7077  000F4E  0E7D               	movlw	high __npowers_
  7078  000F50  0100               	movlb	0	; () banked
  7079  000F52  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  7080  000F54  6EF7               	movwf	tblptrh,c
  7081  000F56                     	if	0	;There are less than 3 active tblptr bytes
  7082  000F56                     	endif
  7083  000F56  0009               	tblrd		*+
  7084  000F58  CFF5 F0A1          	movff	tablat,___flmul@a
  7085  000F5C  0009               	tblrd		*+
  7086  000F5E  CFF5 F0A2          	movff	tablat,___flmul@a+1
  7087  000F62  0009               	tblrd		*+
  7088  000F64  CFF5 F0A3          	movff	tablat,___flmul@a+2
  7089  000F68  000A               	tblrd		*-
  7090  000F6A  CFF5 F0A4          	movff	tablat,___flmul@a+3
  7091  000F6E  EC55  F00B         	call	___flmul	;wreg free
  7092  000F72  D794               	goto	L2
  7093  000F74                     l8775:
  7094                           
  7095                           ;doprnt.c: 434: return _npowers_[scl];
  7096  000F74  0101               	movlb	1	; () banked
  7097  000F76  5115               	movf	scale@scl& (0+255),w,b
  7098  000F78  0D04               	mullw	4
  7099  000F7A  0E1B               	movlw	low __npowers_
  7100  000F7C  24F3               	addwf	prodl,w,c
  7101  000F7E  6EF6               	movwf	tblptrl,c
  7102  000F80  0E7D               	movlw	high __npowers_
  7103  000F82  20F4               	addwfc	prodh,w,c
  7104  000F84  6EF7               	movwf	tblptrh,c
  7105  000F86                     	if	0	;There are less than 3 active tblptr bytes
  7106  000F86                     	endif
  7107  000F86  0009               	tblrd		*+
  7108  000F88  CFF5 F10D          	movff	tablat,?_scale
  7109  000F8C  0009               	tblrd		*+
  7110  000F8E  CFF5 F10E          	movff	tablat,?_scale+1
  7111  000F92  0009               	tblrd		*+
  7112  000F94  CFF5 F10F          	movff	tablat,?_scale+2
  7113  000F98  000A               	tblrd		*-
  7114  000F9A  CFF5 F110          	movff	tablat,?_scale+3
  7115                           
  7116                           ; BSR set to: 1
  7117  000F9E  0012               	return	
  7118  000FA0                     l8779:
  7119                           
  7120                           ; BSR set to: 1
  7121                           ;doprnt.c: 435: }
  7122                           ;doprnt.c: 436: if(scl>=110)
  7123  000FA0  0101               	movlb	1	; () banked
  7124  000FA2  5115               	movf	scale@scl& (0+255),w,b
  7125  000FA4  0A80               	xorlw	128
  7126  000FA6  0F12               	addlw	-238
  7127  000FA8  A0D8               	btfss	status,0,c
  7128  000FAA  D0B2               	goto	l8787
  7129                           
  7130                           ; BSR set to: 1
  7131                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7132  000FAC  0E00               	movlw	0
  7133  000FAE  0100               	movlb	0	; () banked
  7134  000FB0  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  7135  000FB2  0E0A               	movlw	10
  7136  000FB4  6F97               	movwf	___awdiv@divisor& (0+255),b
  7137  000FB6  0E00               	movlw	0
  7138  000FB8  0100               	movlb	0	; () banked
  7139  000FBA  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  7140  000FBC  0E64               	movlw	100
  7141  000FBE  6F91               	movwf	___awmod@divisor& (0+255),b
  7142  000FC0  0101               	movlb	1	; () banked
  7143  000FC2  5115               	movf	scale@scl& (0+255),w,b
  7144  000FC4  0100               	movlb	0	; () banked
  7145  000FC6  6F8F               	movwf	___awmod@dividend& (0+255),b
  7146  000FC8  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  7147  000FCA  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  7148  000FCC  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  7149  000FCE  ECD1  F028         	call	___awmod	;wreg free
  7150  000FD2  C08F  F095         	movff	?___awmod,___awdiv@dividend
  7151  000FD6  C090  F096         	movff	?___awmod+1,___awdiv@dividend+1
  7152  000FDA  EC5E  F026         	call	___awdiv	;wreg free
  7153  000FDE  0100               	movlb	0	; () banked
  7154  000FE0  90D8               	bcf	status,0,c
  7155  000FE2  3795               	rlcf	?___awdiv& (0+255),f,b
  7156  000FE4  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7157  000FE6  0100               	movlb	0	; () banked
  7158  000FE8  90D8               	bcf	status,0,c
  7159  000FEA  3795               	rlcf	?___awdiv& (0+255),f,b
  7160  000FEC  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7161  000FEE  0E24               	movlw	36
  7162  000FF0  0100               	movlb	0	; () banked
  7163  000FF2  2795               	addwf	?___awdiv& (0+255),f,b
  7164  000FF4  0E00               	movlw	0
  7165  000FF6  0100               	movlb	0	; () banked
  7166  000FF8  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  7167  000FFA  0E4F               	movlw	low __powers_
  7168  000FFC  0100               	movlb	0	; () banked
  7169  000FFE  2595               	addwf	?___awdiv& (0+255),w,b
  7170  001000  6EF6               	movwf	tblptrl,c
  7171  001002  0E7D               	movlw	high __powers_
  7172  001004  0100               	movlb	0	; () banked
  7173  001006  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  7174  001008  6EF7               	movwf	tblptrh,c
  7175  00100A                     	if	0	;There are less than 3 active tblptr bytes
  7176  00100A                     	endif
  7177  00100A  0009               	tblrd		*+
  7178  00100C  CFF5 F0A1          	movff	tablat,___flmul@a
  7179  001010  0009               	tblrd		*+
  7180  001012  CFF5 F0A2          	movff	tablat,___flmul@a+1
  7181  001016  0009               	tblrd		*+
  7182  001018  CFF5 F0A3          	movff	tablat,___flmul@a+2
  7183  00101C  000A               	tblrd		*-
  7184  00101E  CFF5 F0A4          	movff	tablat,___flmul@a+3
  7185  001022  0E00               	movlw	0
  7186  001024  0100               	movlb	0	; () banked
  7187  001026  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  7188  001028  0E64               	movlw	100
  7189  00102A  6F97               	movwf	___awdiv@divisor& (0+255),b
  7190  00102C  0101               	movlb	1	; () banked
  7191  00102E  5115               	movf	scale@scl& (0+255),w,b
  7192  001030  0100               	movlb	0	; () banked
  7193  001032  6F95               	movwf	___awdiv@dividend& (0+255),b
  7194  001034  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  7195  001036  BF95               	btfsc	___awdiv@dividend& (0+255),7,b
  7196  001038  0796               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7197  00103A  EC5E  F026         	call	___awdiv	;wreg free
  7198  00103E  0100               	movlb	0	; () banked
  7199  001040  90D8               	bcf	status,0,c
  7200  001042  3795               	rlcf	?___awdiv& (0+255),f,b
  7201  001044  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7202  001046  0100               	movlb	0	; () banked
  7203  001048  90D8               	bcf	status,0,c
  7204  00104A  3795               	rlcf	?___awdiv& (0+255),f,b
  7205  00104C  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7206  00104E  0E48               	movlw	72
  7207  001050  0100               	movlb	0	; () banked
  7208  001052  2795               	addwf	?___awdiv& (0+255),f,b
  7209  001054  0E00               	movlw	0
  7210  001056  0100               	movlb	0	; () banked
  7211  001058  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  7212  00105A  0E4F               	movlw	low __powers_
  7213  00105C  0100               	movlb	0	; () banked
  7214  00105E  2595               	addwf	?___awdiv& (0+255),w,b
  7215  001060  6EF6               	movwf	tblptrl,c
  7216  001062  0E7D               	movlw	high __powers_
  7217  001064  0100               	movlb	0	; () banked
  7218  001066  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  7219  001068  6EF7               	movwf	tblptrh,c
  7220  00106A                     	if	0	;There are less than 3 active tblptr bytes
  7221  00106A                     	endif
  7222  00106A  0009               	tblrd		*+
  7223  00106C  CFF5 F09D          	movff	tablat,___flmul@b
  7224  001070  0009               	tblrd		*+
  7225  001072  CFF5 F09E          	movff	tablat,___flmul@b+1
  7226  001076  0009               	tblrd		*+
  7227  001078  CFF5 F09F          	movff	tablat,___flmul@b+2
  7228  00107C  000A               	tblrd		*-
  7229  00107E  CFF5 F0A0          	movff	tablat,___flmul@b+3
  7230  001082  EC55  F00B         	call	___flmul	;wreg free
  7231  001086  C09D  F111         	movff	?___flmul,_scale$2974
  7232  00108A  C09E  F112         	movff	?___flmul+1,_scale$2974+1
  7233  00108E  C09F  F113         	movff	?___flmul+2,_scale$2974+2
  7234  001092  C0A0  F114         	movff	?___flmul+3,_scale$2974+3
  7235                           
  7236                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7237  001096  C111  F09D         	movff	_scale$2974,___flmul@b
  7238  00109A  C112  F09E         	movff	_scale$2974+1,___flmul@b+1
  7239  00109E  C113  F09F         	movff	_scale$2974+2,___flmul@b+2
  7240  0010A2  C114  F0A0         	movff	_scale$2974+3,___flmul@b+3
  7241  0010A6  0E00               	movlw	0
  7242  0010A8  0100               	movlb	0	; () banked
  7243  0010AA  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  7244  0010AC  0E0A               	movlw	10
  7245  0010AE  6F91               	movwf	___awmod@divisor& (0+255),b
  7246  0010B0  0101               	movlb	1	; () banked
  7247  0010B2  5115               	movf	scale@scl& (0+255),w,b
  7248  0010B4  0100               	movlb	0	; () banked
  7249  0010B6  6F8F               	movwf	___awmod@dividend& (0+255),b
  7250  0010B8  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  7251  0010BA  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  7252  0010BC  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  7253  0010BE  ECD1  F028         	call	___awmod	;wreg free
  7254  0010C2  0100               	movlb	0	; () banked
  7255  0010C4  90D8               	bcf	status,0,c
  7256  0010C6  378F               	rlcf	?___awmod& (0+255),f,b
  7257  0010C8  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7258  0010CA  0100               	movlb	0	; () banked
  7259  0010CC  90D8               	bcf	status,0,c
  7260  0010CE  378F               	rlcf	?___awmod& (0+255),f,b
  7261  0010D0  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7262  0010D2  0E4F               	movlw	low __powers_
  7263  0010D4  0100               	movlb	0	; () banked
  7264  0010D6  258F               	addwf	?___awmod& (0+255),w,b
  7265  0010D8  6EF6               	movwf	tblptrl,c
  7266  0010DA  0E7D               	movlw	high __powers_
  7267  0010DC  0100               	movlb	0	; () banked
  7268  0010DE  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  7269  0010E0  6EF7               	movwf	tblptrh,c
  7270  0010E2                     	if	0	;There are less than 3 active tblptr bytes
  7271  0010E2                     	endif
  7272  0010E2  0009               	tblrd		*+
  7273  0010E4  CFF5 F0A1          	movff	tablat,___flmul@a
  7274  0010E8  0009               	tblrd		*+
  7275  0010EA  CFF5 F0A2          	movff	tablat,___flmul@a+1
  7276  0010EE  0009               	tblrd		*+
  7277  0010F0  CFF5 F0A3          	movff	tablat,___flmul@a+2
  7278  0010F4  000A               	tblrd		*-
  7279  0010F6  CFF5 F0A4          	movff	tablat,___flmul@a+3
  7280  0010FA  EC55  F00B         	call	___flmul	;wreg free
  7281  0010FE  C09D  F10D         	movff	?___flmul,?_scale
  7282  001102  C09E  F10E         	movff	?___flmul+1,?_scale+1
  7283  001106  C09F  F10F         	movff	?___flmul+2,?_scale+2
  7284  00110A  C0A0  F110         	movff	?___flmul+3,?_scale+3
  7285  00110E  0012               	return	
  7286  001110                     l8787:
  7287                           
  7288                           ;doprnt.c: 438: else if(scl > 10)
  7289  001110  0101               	movlb	1	; () banked
  7290  001112  5115               	movf	scale@scl& (0+255),w,b
  7291  001114  0A80               	xorlw	128
  7292  001116  0F75               	addlw	-139
  7293  001118  A0D8               	btfss	status,0,c
  7294  00111A  D05D               	goto	l8793
  7295                           
  7296                           ; BSR set to: 1
  7297                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7298  00111C  0E00               	movlw	0
  7299  00111E  0100               	movlb	0	; () banked
  7300  001120  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  7301  001122  0E0A               	movlw	10
  7302  001124  6F97               	movwf	___awdiv@divisor& (0+255),b
  7303  001126  0101               	movlb	1	; () banked
  7304  001128  5115               	movf	scale@scl& (0+255),w,b
  7305  00112A  0100               	movlb	0	; () banked
  7306  00112C  6F95               	movwf	___awdiv@dividend& (0+255),b
  7307  00112E  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  7308  001130  BF95               	btfsc	___awdiv@dividend& (0+255),7,b
  7309  001132  0796               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7310  001134  EC5E  F026         	call	___awdiv	;wreg free
  7311  001138  0100               	movlb	0	; () banked
  7312  00113A  90D8               	bcf	status,0,c
  7313  00113C  3795               	rlcf	?___awdiv& (0+255),f,b
  7314  00113E  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7315  001140  0100               	movlb	0	; () banked
  7316  001142  90D8               	bcf	status,0,c
  7317  001144  3795               	rlcf	?___awdiv& (0+255),f,b
  7318  001146  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  7319  001148  0E24               	movlw	36
  7320  00114A  0100               	movlb	0	; () banked
  7321  00114C  2795               	addwf	?___awdiv& (0+255),f,b
  7322  00114E  0E00               	movlw	0
  7323  001150  0100               	movlb	0	; () banked
  7324  001152  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  7325  001154  0E4F               	movlw	low __powers_
  7326  001156  0100               	movlb	0	; () banked
  7327  001158  2595               	addwf	?___awdiv& (0+255),w,b
  7328  00115A  6EF6               	movwf	tblptrl,c
  7329  00115C  0E7D               	movlw	high __powers_
  7330  00115E  0100               	movlb	0	; () banked
  7331  001160  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  7332  001162  6EF7               	movwf	tblptrh,c
  7333  001164                     	if	0	;There are less than 3 active tblptr bytes
  7334  001164                     	endif
  7335  001164  0009               	tblrd		*+
  7336  001166  CFF5 F09D          	movff	tablat,___flmul@b
  7337  00116A  0009               	tblrd		*+
  7338  00116C  CFF5 F09E          	movff	tablat,___flmul@b+1
  7339  001170  0009               	tblrd		*+
  7340  001172  CFF5 F09F          	movff	tablat,___flmul@b+2
  7341  001176  000A               	tblrd		*-
  7342  001178  CFF5 F0A0          	movff	tablat,___flmul@b+3
  7343  00117C  0E00               	movlw	0
  7344  00117E  0100               	movlb	0	; () banked
  7345  001180  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  7346  001182  0E0A               	movlw	10
  7347  001184  6F91               	movwf	___awmod@divisor& (0+255),b
  7348  001186  0101               	movlb	1	; () banked
  7349  001188  5115               	movf	scale@scl& (0+255),w,b
  7350  00118A  0100               	movlb	0	; () banked
  7351  00118C  6F8F               	movwf	___awmod@dividend& (0+255),b
  7352  00118E  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  7353  001190  BF8F               	btfsc	___awmod@dividend& (0+255),7,b
  7354  001192  0790               	decf	(___awmod@dividend+1)& (0+255),f,b
  7355  001194  ECD1  F028         	call	___awmod	;wreg free
  7356  001198  0100               	movlb	0	; () banked
  7357  00119A  90D8               	bcf	status,0,c
  7358  00119C  378F               	rlcf	?___awmod& (0+255),f,b
  7359  00119E  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7360  0011A0  0100               	movlb	0	; () banked
  7361  0011A2  90D8               	bcf	status,0,c
  7362  0011A4  378F               	rlcf	?___awmod& (0+255),f,b
  7363  0011A6  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  7364  0011A8  0E4F               	movlw	low __powers_
  7365  0011AA  0100               	movlb	0	; () banked
  7366  0011AC  258F               	addwf	?___awmod& (0+255),w,b
  7367  0011AE  6EF6               	movwf	tblptrl,c
  7368  0011B0  0E7D               	movlw	high __powers_
  7369  0011B2  0100               	movlb	0	; () banked
  7370  0011B4  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  7371  0011B6  6EF7               	movwf	tblptrh,c
  7372  0011B8                     	if	0	;There are less than 3 active tblptr bytes
  7373  0011B8                     	endif
  7374  0011B8  0009               	tblrd		*+
  7375  0011BA  CFF5 F0A1          	movff	tablat,___flmul@a
  7376  0011BE  0009               	tblrd		*+
  7377  0011C0  CFF5 F0A2          	movff	tablat,___flmul@a+1
  7378  0011C4  0009               	tblrd		*+
  7379  0011C6  CFF5 F0A3          	movff	tablat,___flmul@a+2
  7380  0011CA  000A               	tblrd		*-
  7381  0011CC  CFF5 F0A4          	movff	tablat,___flmul@a+3
  7382  0011D0  EC55  F00B         	call	___flmul	;wreg free
  7383  0011D4  D794               	goto	L3
  7384  0011D6                     l8793:
  7385                           
  7386                           ;doprnt.c: 440: return _powers_[scl];
  7387  0011D6  0101               	movlb	1	; () banked
  7388  0011D8  5115               	movf	scale@scl& (0+255),w,b
  7389  0011DA  0D04               	mullw	4
  7390  0011DC  0E4F               	movlw	low __powers_
  7391  0011DE  24F3               	addwf	prodl,w,c
  7392  0011E0  6EF6               	movwf	tblptrl,c
  7393  0011E2  0E7D               	movlw	high __powers_
  7394  0011E4  20F4               	addwfc	prodh,w,c
  7395  0011E6  6EF7               	movwf	tblptrh,c
  7396  0011E8                     	if	0	;There are less than 3 active tblptr bytes
  7397  0011E8                     	endif
  7398  0011E8  0009               	tblrd		*+
  7399  0011EA  CFF5 F10D          	movff	tablat,?_scale
  7400  0011EE  0009               	tblrd		*+
  7401  0011F0  CFF5 F10E          	movff	tablat,?_scale+1
  7402  0011F4  0009               	tblrd		*+
  7403  0011F6  CFF5 F10F          	movff	tablat,?_scale+2
  7404  0011FA  000A               	tblrd		*-
  7405  0011FC  CFF5 F110          	movff	tablat,?_scale+3
  7406  001200  0012               	return	
  7407  001202                     __end_of_scale:
  7408                           	opt stack 0
  7409                           tblptru	equ	0xFF8
  7410                           tblptrh	equ	0xFF7
  7411                           tblptrl	equ	0xFF6
  7412                           tablat	equ	0xFF5
  7413                           prodh	equ	0xFF4
  7414                           prodl	equ	0xFF3
  7415                           intcon	equ	0xFF2
  7416                           postinc0	equ	0xFEE
  7417                           wreg	equ	0xFE8
  7418                           postdec1	equ	0xFE5
  7419                           fsr1l	equ	0xFE1
  7420                           indf2	equ	0xFDF
  7421                           postinc2	equ	0xFDE
  7422                           postdec2	equ	0xFDD
  7423                           fsr2h	equ	0xFDA
  7424                           fsr2l	equ	0xFD9
  7425                           status	equ	0xFD8
  7426                           
  7427 ;; *************** function _putch *****************
  7428 ;; Defined at:
  7429 ;;		line 59 in file "source/IOConfig.h"
  7430 ;; Parameters:    Size  Location     Type
  7431 ;;  val             1    wreg     unsigned char 
  7432 ;; Auto vars:     Size  Location     Type
  7433 ;;  val             1   60[BANK0 ] unsigned char 
  7434 ;; Return value:  Size  Location     Type
  7435 ;;                  1    wreg      void 
  7436 ;; Registers used:
  7437 ;;		wreg, status,2, status,0, cstack
  7438 ;; Tracked objects:
  7439 ;;		On entry : 0/0
  7440 ;;		On exit  : 0/0
  7441 ;;		Unchanged: 0/0
  7442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7443 ;;      Params:         0       0       0       0       0       0       0
  7444 ;;      Locals:         0       1       0       0       0       0       0
  7445 ;;      Temps:          0       0       0       0       0       0       0
  7446 ;;      Totals:         0       1       0       0       0       0       0
  7447 ;;Total ram usage:        1 bytes
  7448 ;; Hardware stack levels used:    1
  7449 ;; Hardware stack levels required when called:   13
  7450 ;; This function calls:
  7451 ;;		_lcd_putc
  7452 ;; This function is called by:
  7453 ;;		_printf
  7454 ;;		_send_float
  7455 ;;		_send_int32
  7456 ;;		_send_int16
  7457 ;;		_send_float_vt
  7458 ;;		_send_int32_vt
  7459 ;;		_send_int16_vt
  7460 ;; This function uses a non-reentrant model
  7461 ;;
  7462                           
  7463                           	psect	text19
  7464  006076                     __ptext19:
  7465                           	opt stack 0
  7466  006076                     _putch:
  7467                           	opt stack 14
  7468                           
  7469                           ;incstack = 0
  7470                           ;putch@val stored from wreg
  7471  006076  0100               	movlb	0	; () banked
  7472  006078  6F9C               	movwf	putch@val& (0+255),b
  7473                           
  7474                           ;IOConfig.h: 60: lcd_putc(val);
  7475  00607A  0100               	movlb	0	; () banked
  7476  00607C  519C               	movf	putch@val& (0+255),w,b
  7477  00607E  EC5B  F02B         	call	_lcd_putc
  7478  006082  0012               	return		;funcret
  7479  006084                     __end_of_putch:
  7480                           	opt stack 0
  7481                           tblptru	equ	0xFF8
  7482                           tblptrh	equ	0xFF7
  7483                           tblptrl	equ	0xFF6
  7484                           tablat	equ	0xFF5
  7485                           prodh	equ	0xFF4
  7486                           prodl	equ	0xFF3
  7487                           intcon	equ	0xFF2
  7488                           postinc0	equ	0xFEE
  7489                           wreg	equ	0xFE8
  7490                           postdec1	equ	0xFE5
  7491                           fsr1l	equ	0xFE1
  7492                           indf2	equ	0xFDF
  7493                           postinc2	equ	0xFDE
  7494                           postdec2	equ	0xFDD
  7495                           fsr2h	equ	0xFDA
  7496                           fsr2l	equ	0xFD9
  7497                           status	equ	0xFD8
  7498                           
  7499 ;; *************** function _lcd_putc *****************
  7500 ;; Defined at:
  7501 ;;		line 212 in file "source/../../vclib_lcd.h"
  7502 ;; Parameters:    Size  Location     Type
  7503 ;;  cha             1    wreg     unsigned char 
  7504 ;; Auto vars:     Size  Location     Type
  7505 ;;  cha             1   59[BANK0 ] unsigned char 
  7506 ;; Return value:  Size  Location     Type
  7507 ;;                  1    wreg      void 
  7508 ;; Registers used:
  7509 ;;		wreg, status,2, status,0, cstack
  7510 ;; Tracked objects:
  7511 ;;		On entry : 0/0
  7512 ;;		On exit  : 0/0
  7513 ;;		Unchanged: 0/0
  7514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7515 ;;      Params:         0       0       0       0       0       0       0
  7516 ;;      Locals:         0       1       0       0       0       0       0
  7517 ;;      Temps:          0       1       0       0       0       0       0
  7518 ;;      Totals:         0       2       0       0       0       0       0
  7519 ;;Total ram usage:        2 bytes
  7520 ;; Hardware stack levels used:    1
  7521 ;; Hardware stack levels required when called:   12
  7522 ;; This function calls:
  7523 ;;		_lcd_gotoxy
  7524 ;;		_lcd_send_byte
  7525 ;; This function is called by:
  7526 ;;		_putch
  7527 ;;		_drawMenu
  7528 ;; This function uses a non-reentrant model
  7529 ;;
  7530                           
  7531                           	psect	text20
  7532  0056B6                     __ptext20:
  7533                           	opt stack 0
  7534  0056B6                     _lcd_putc:
  7535                           	opt stack 14
  7536                           
  7537                           ;incstack = 0
  7538                           ;lcd_putc@cha stored from wreg
  7539  0056B6  0100               	movlb	0	; () banked
  7540  0056B8  6F9B               	movwf	lcd_putc@cha& (0+255),b
  7541                           
  7542                           ;vclib_lcd.h: 213: switch (cha) {
  7543  0056BA  D02B               	goto	l8181
  7544  0056BC                     l8167:
  7545  0056BC  0E01               	movlw	1
  7546  0056BE  0100               	movlb	0	; () banked
  7547  0056C0  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  7548  0056C2  0E01               	movlw	1
  7549  0056C4  EC25  F02F         	call	_lcd_gotoxy
  7550                           
  7551                           ;vclib_lcd.h: 215: break;
  7552  0056C8  0012               	return	
  7553  0056CA                     l8169:
  7554  0056CA  0E01               	movlw	1
  7555  0056CC  0100               	movlb	0	; () banked
  7556  0056CE  6F94               	movwf	lcd_send_byte@n& (0+255),b
  7557  0056D0  0E00               	movlw	0
  7558  0056D2  EC66  F02E         	call	_lcd_send_byte
  7559                           
  7560                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
  7561  0056D6  0E0B               	movlw	11
  7562  0056D8  0100               	movlb	0	; () banked
  7563  0056DA  6F9A               	movwf	??_lcd_putc& (0+255),b
  7564  0056DC  0E62               	movlw	98
  7565  0056DE                     u14617:
  7566  0056DE  2EE8               	decfsz	wreg,f,c
  7567  0056E0  D7FE               	goto	u14617
  7568  0056E2  2F9A               	decfsz	??_lcd_putc& (0+255),f,b
  7569  0056E4  D7FC               	goto	u14617
  7570  0056E6  D000               	nop2	
  7571                           
  7572                           ;vclib_lcd.h: 223: break;
  7573  0056E8  0012               	return	
  7574  0056EA                     l8173:
  7575  0056EA  0E02               	movlw	2
  7576  0056EC  0100               	movlb	0	; () banked
  7577  0056EE  6F97               	movwf	lcd_gotoxy@fila& (0+255),b
  7578  0056F0  0E01               	movlw	1
  7579  0056F2  EC25  F02F         	call	_lcd_gotoxy
  7580                           
  7581                           ;vclib_lcd.h: 236: break;
  7582  0056F6  0012               	return	
  7583  0056F8                     l8175:
  7584  0056F8  0E10               	movlw	16
  7585  0056FA  0100               	movlb	0	; () banked
  7586  0056FC  6F94               	movwf	lcd_send_byte@n& (0+255),b
  7587  0056FE  0E00               	movlw	0
  7588  005700  EC66  F02E         	call	_lcd_send_byte
  7589                           
  7590                           ;vclib_lcd.h: 240: break;
  7591  005704  0012               	return	
  7592  005706                     l8177:
  7593  005706  C09B  F094         	movff	lcd_putc@cha,lcd_send_byte@n
  7594  00570A  0E01               	movlw	1
  7595  00570C  EC66  F02E         	call	_lcd_send_byte
  7596                           
  7597                           ;vclib_lcd.h: 253: }
  7598                           
  7599                           ;vclib_lcd.h: 251: break;
  7600  005710  0012               	return	
  7601  005712                     l8181:
  7602  005712  0100               	movlb	0	; () banked
  7603  005714  519B               	movf	lcd_putc@cha& (0+255),w,b
  7604                           
  7605                           ; Switch size 1, requested type "space"
  7606                           ; Number of cases is 4, Range of values is 7 to 12
  7607                           ; switch strategies available:
  7608                           ; Name         Instructions Cycles
  7609                           ; simple_byte           13     7 (average)
  7610                           ;	Chosen strategy is simple_byte
  7611  005716  0A07               	xorlw	7	; case 7
  7612  005718  B4D8               	btfsc	status,2,c
  7613  00571A  D7D0               	goto	l8167
  7614  00571C  0A0F               	xorlw	15	; case 8
  7615  00571E  B4D8               	btfsc	status,2,c
  7616  005720  D7EB               	goto	l8175
  7617  005722  0A02               	xorlw	2	; case 10
  7618  005724  B4D8               	btfsc	status,2,c
  7619  005726  D7E1               	goto	l8173
  7620  005728  0A06               	xorlw	6	; case 12
  7621  00572A  B4D8               	btfsc	status,2,c
  7622  00572C  D7CE               	goto	l8169
  7623  00572E  D7EB               	goto	l8177
  7624  005730                     __end_of_lcd_putc:
  7625                           	opt stack 0
  7626                           tblptru	equ	0xFF8
  7627                           tblptrh	equ	0xFF7
  7628                           tblptrl	equ	0xFF6
  7629                           tablat	equ	0xFF5
  7630                           prodh	equ	0xFF4
  7631                           prodl	equ	0xFF3
  7632                           intcon	equ	0xFF2
  7633                           postinc0	equ	0xFEE
  7634                           wreg	equ	0xFE8
  7635                           postdec1	equ	0xFE5
  7636                           fsr1l	equ	0xFE1
  7637                           indf2	equ	0xFDF
  7638                           postinc2	equ	0xFDE
  7639                           postdec2	equ	0xFDD
  7640                           fsr2h	equ	0xFDA
  7641                           fsr2l	equ	0xFD9
  7642                           status	equ	0xFD8
  7643                           
  7644 ;; *************** function _lcd_gotoxy *****************
  7645 ;; Defined at:
  7646 ;;		line 198 in file "source/../../vclib_lcd.h"
  7647 ;; Parameters:    Size  Location     Type
  7648 ;;  pos             1    wreg     unsigned char 
  7649 ;;  fila            1   55[BANK0 ] unsigned char 
  7650 ;; Auto vars:     Size  Location     Type
  7651 ;;  pos             1   56[BANK0 ] unsigned char 
  7652 ;;  address         1   57[BANK0 ] unsigned char 
  7653 ;; Return value:  Size  Location     Type
  7654 ;;                  1    wreg      void 
  7655 ;; Registers used:
  7656 ;;		wreg, status,2, status,0, cstack
  7657 ;; Tracked objects:
  7658 ;;		On entry : 0/0
  7659 ;;		On exit  : 0/0
  7660 ;;		Unchanged: 0/0
  7661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7662 ;;      Params:         0       1       0       0       0       0       0
  7663 ;;      Locals:         0       2       0       0       0       0       0
  7664 ;;      Temps:          0       0       0       0       0       0       0
  7665 ;;      Totals:         0       3       0       0       0       0       0
  7666 ;;Total ram usage:        3 bytes
  7667 ;; Hardware stack levels used:    1
  7668 ;; Hardware stack levels required when called:   11
  7669 ;; This function calls:
  7670 ;;		_lcd_send_byte
  7671 ;; This function is called by:
  7672 ;;		_lcd_putc
  7673 ;;		_drawValEditor
  7674 ;;		_drawMenu
  7675 ;;		_drawChanVal
  7676 ;;		_drawPassWord
  7677 ;;		_drawBadPass
  7678 ;;		_drawAdvON
  7679 ;;		_drawAdvOFF
  7680 ;;		_drawSNquest
  7681 ;;		_drawAutoCalibRM
  7682 ;;		_lcd_getc
  7683 ;;		_drawValEditors
  7684 ;;		_drawAutoCalibRes
  7685 ;; This function uses a non-reentrant model
  7686 ;;
  7687                           
  7688                           	psect	text21
  7689  005E4A                     __ptext21:
  7690                           	opt stack 0
  7691  005E4A                     _lcd_gotoxy:
  7692                           	opt stack 14
  7693                           
  7694                           ;incstack = 0
  7695                           ;lcd_gotoxy@pos stored from wreg
  7696  005E4A  0100               	movlb	0	; () banked
  7697  005E4C  6F98               	movwf	lcd_gotoxy@pos& (0+255),b
  7698                           
  7699                           ;vclib_lcd.h: 199: unsigned char address;
  7700                           ;vclib_lcd.h: 200: if (fila != 1)
  7701  005E4E  0100               	movlb	0	; () banked
  7702  005E50  0597               	decf	lcd_gotoxy@fila& (0+255),w,b
  7703  005E52  B4D8               	btfsc	status,2,c
  7704  005E54  D002               	goto	l8159
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;vclib_lcd.h: 201: address = 0x40;
  7708  005E56  0E40               	movlw	64
  7709  005E58  D001               	goto	L4
  7710  005E5A                     l8159:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;vclib_lcd.h: 202: else
  7714                           ;vclib_lcd.h: 203: address = 0;
  7715  005E5A  0E00               	movlw	0
  7716  005E5C                     L4:
  7717  005E5C  0100               	movlb	0	; () banked
  7718  005E5E  6F99               	movwf	lcd_gotoxy@address& (0+255),b
  7719                           
  7720                           ; BSR set to: 0
  7721                           ;vclib_lcd.h: 204: address += pos - 1;
  7722                           
  7723                           ; BSR set to: 0
  7724  005E60  0100               	movlb	0	; () banked
  7725  005E62  0598               	decf	lcd_gotoxy@pos& (0+255),w,b
  7726  005E64  0100               	movlb	0	; () banked
  7727  005E66  2799               	addwf	lcd_gotoxy@address& (0+255),f,b
  7728                           
  7729                           ; BSR set to: 0
  7730                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
  7731  005E68  0100               	movlb	0	; () banked
  7732  005E6A  5199               	movf	lcd_gotoxy@address& (0+255),w,b
  7733  005E6C  0980               	iorlw	128
  7734  005E6E  0100               	movlb	0	; () banked
  7735  005E70  6F94               	movwf	lcd_send_byte@n& (0+255),b
  7736  005E72  0E00               	movlw	0
  7737  005E74  EC66  F02E         	call	_lcd_send_byte
  7738  005E78  0012               	return		;funcret
  7739  005E7A                     __end_of_lcd_gotoxy:
  7740                           	opt stack 0
  7741                           tblptru	equ	0xFF8
  7742                           tblptrh	equ	0xFF7
  7743                           tblptrl	equ	0xFF6
  7744                           tablat	equ	0xFF5
  7745                           prodh	equ	0xFF4
  7746                           prodl	equ	0xFF3
  7747                           intcon	equ	0xFF2
  7748                           postinc0	equ	0xFEE
  7749                           wreg	equ	0xFE8
  7750                           postdec1	equ	0xFE5
  7751                           fsr1l	equ	0xFE1
  7752                           indf2	equ	0xFDF
  7753                           postinc2	equ	0xFDE
  7754                           postdec2	equ	0xFDD
  7755                           fsr2h	equ	0xFDA
  7756                           fsr2l	equ	0xFD9
  7757                           status	equ	0xFD8
  7758                           
  7759 ;; *************** function _lcd_send_byte *****************
  7760 ;; Defined at:
  7761 ;;		line 163 in file "source/../../vclib_lcd.h"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  address         1    wreg     unsigned char 
  7764 ;;  n               1   52[BANK0 ] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  address         1   54[BANK0 ] unsigned char 
  7767 ;; Return value:  Size  Location     Type
  7768 ;;                  1    wreg      void 
  7769 ;; Registers used:
  7770 ;;		wreg, status,2, status,0, cstack
  7771 ;; Tracked objects:
  7772 ;;		On entry : 0/0
  7773 ;;		On exit  : 0/0
  7774 ;;		Unchanged: 0/0
  7775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7776 ;;      Params:         0       1       0       0       0       0       0
  7777 ;;      Locals:         0       1       0       0       0       0       0
  7778 ;;      Temps:          0       1       0       0       0       0       0
  7779 ;;      Totals:         0       3       0       0       0       0       0
  7780 ;;Total ram usage:        3 bytes
  7781 ;; Hardware stack levels used:    1
  7782 ;; Hardware stack levels required when called:   10
  7783 ;; This function calls:
  7784 ;;		_lcd_read_byte
  7785 ;;		_lcd_send_4bits
  7786 ;; This function is called by:
  7787 ;;		_lcd_init
  7788 ;;		_lcd_gotoxy
  7789 ;;		_lcd_putc
  7790 ;;		_lcd_set_cgram_char
  7791 ;;		_lcd_cursor_en
  7792 ;;		_lcd_clear
  7793 ;;		_lcd_shift_right
  7794 ;;		_lcd_shift_left
  7795 ;; This function uses a non-reentrant model
  7796 ;;
  7797                           
  7798                           	psect	text22
  7799  005CCC                     __ptext22:
  7800                           	opt stack 0
  7801  005CCC                     _lcd_send_byte:
  7802                           	opt stack 19
  7803                           
  7804                           ;incstack = 0
  7805                           ;lcd_send_byte@address stored from wreg
  7806  005CCC  0100               	movlb	0	; () banked
  7807  005CCE  6F96               	movwf	lcd_send_byte@address& (0+255),b
  7808                           
  7809                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
  7810  005CD0  9281               	bcf	3969,1,c	;volatile
  7811  005CD2                     l8151:
  7812  005CD2  ECDA  F02D         	call	_lcd_read_byte	;wreg free
  7813  005CD6  0100               	movlb	0	; () banked
  7814  005CD8  6F95               	movwf	??_lcd_send_byte& (0+255),b
  7815  005CDA  0100               	movlb	0	; () banked
  7816  005CDC  BF95               	btfsc	??_lcd_send_byte& (0+255),7,b
  7817  005CDE  D7F9               	goto	l8151
  7818                           
  7819                           ; BSR set to: 0
  7820                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
  7821  005CE0  0100               	movlb	0	; () banked
  7822  005CE2  B196               	btfsc	lcd_send_byte@address& (0+255),0,b
  7823  005CE4  D002               	bra	u10445
  7824  005CE6  9281               	bcf	3969,1,c	;volatile
  7825  005CE8  D001               	bra	u10446
  7826  005CEA                     u10445:
  7827  005CEA  8281               	bsf	3969,1,c	;volatile
  7828  005CEC                     u10446:
  7829                           
  7830                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7831  005CEC  D000               	nop2		;2 cycle nop
  7832  005CEE  D000               	nop2		;2 cycle nop
  7833                           
  7834                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
  7835  005CF0  9481               	bcf	3969,2,c	;volatile
  7836                           
  7837                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7838  005CF2  D000               	nop2		;2 cycle nop
  7839  005CF4  D000               	nop2		;2 cycle nop
  7840                           
  7841                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
  7842  005CF6  9681               	bcf	3969,3,c	;volatile
  7843                           
  7844                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
  7845  005CF8  0100               	movlb	0	; () banked
  7846  005CFA  3994               	swapf	lcd_send_byte@n& (0+255),w,b
  7847  005CFC  0B0F               	andlw	15
  7848  005CFE  EC4C  F02A         	call	_lcd_send_4bits
  7849                           
  7850                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
  7851  005D02  0100               	movlb	0	; () banked
  7852  005D04  5194               	movf	lcd_send_byte@n& (0+255),w,b
  7853  005D06  0B0F               	andlw	15
  7854  005D08  EC4C  F02A         	call	_lcd_send_4bits
  7855  005D0C  0012               	return		;funcret
  7856  005D0E                     __end_of_lcd_send_byte:
  7857                           	opt stack 0
  7858                           tblptru	equ	0xFF8
  7859                           tblptrh	equ	0xFF7
  7860                           tblptrl	equ	0xFF6
  7861                           tablat	equ	0xFF5
  7862                           prodh	equ	0xFF4
  7863                           prodl	equ	0xFF3
  7864                           intcon	equ	0xFF2
  7865                           postinc0	equ	0xFEE
  7866                           wreg	equ	0xFE8
  7867                           postdec1	equ	0xFE5
  7868                           fsr1l	equ	0xFE1
  7869                           indf2	equ	0xFDF
  7870                           postinc2	equ	0xFDE
  7871                           postdec2	equ	0xFDD
  7872                           fsr2h	equ	0xFDA
  7873                           fsr2l	equ	0xFD9
  7874                           status	equ	0xFD8
  7875                           
  7876 ;; *************** function _lcd_send_4bits *****************
  7877 ;; Defined at:
  7878 ;;		line 151 in file "source/../../vclib_lcd.h"
  7879 ;; Parameters:    Size  Location     Type
  7880 ;;  n               1    wreg     unsigned char 
  7881 ;; Auto vars:     Size  Location     Type
  7882 ;;  n               1   51[BANK0 ] unsigned char 
  7883 ;; Return value:  Size  Location     Type
  7884 ;;                  1    wreg      void 
  7885 ;; Registers used:
  7886 ;;		wreg, status,2, cstack
  7887 ;; Tracked objects:
  7888 ;;		On entry : 0/0
  7889 ;;		On exit  : 0/0
  7890 ;;		Unchanged: 0/0
  7891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7892 ;;      Params:         0       0       0       0       0       0       0
  7893 ;;      Locals:         0       5       0       0       0       0       0
  7894 ;;      Temps:          0       0       0       0       0       0       0
  7895 ;;      Totals:         0       5       0       0       0       0       0
  7896 ;;Total ram usage:        5 bytes
  7897 ;; Hardware stack levels used:    1
  7898 ;; Hardware stack levels required when called:    8
  7899 ;; This function calls:
  7900 ;;		Nothing
  7901 ;; This function is called by:
  7902 ;;		_lcd_send_byte
  7903 ;;		_lcd_init
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text23
  7908  005498                     __ptext23:
  7909                           	opt stack 0
  7910  005498                     _lcd_send_4bits:
  7911                           	opt stack 20
  7912                           
  7913                           ;incstack = 0
  7914                           ;lcd_send_4bits@n stored from wreg
  7915  005498  0100               	movlb	0	; () banked
  7916  00549A  6F93               	movwf	lcd_send_4bits@n& (0+255),b
  7917                           
  7918                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
  7919  00549C  0E01               	movlw	1
  7920  00549E  0100               	movlb	0	; () banked
  7921  0054A0  6F8F               	movwf	_lcd_send_4bits$1675& (0+255),b
  7922                           
  7923                           ; BSR set to: 0
  7924  0054A2  0100               	movlb	0	; () banked
  7925  0054A4  B193               	btfsc	lcd_send_4bits@n& (0+255),0,b
  7926  0054A6  D003               	goto	l8121
  7927                           
  7928                           ; BSR set to: 0
  7929  0054A8  0E00               	movlw	0
  7930  0054AA  0100               	movlb	0	; () banked
  7931  0054AC  6F8F               	movwf	_lcd_send_4bits$1675& (0+255),b
  7932  0054AE                     l8121:
  7933                           
  7934                           ; BSR set to: 0
  7935  0054AE  0100               	movlb	0	; () banked
  7936  0054B0  B18F               	btfsc	_lcd_send_4bits$1675& (0+255),0,b
  7937  0054B2  D002               	bra	u10365
  7938  0054B4  9881               	bcf	3969,4,c	;volatile
  7939  0054B6  D001               	bra	u10366
  7940  0054B8                     u10365:
  7941  0054B8  8881               	bsf	3969,4,c	;volatile
  7942  0054BA                     u10366:
  7943                           
  7944                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
  7945  0054BA  0E01               	movlw	1
  7946  0054BC  0100               	movlb	0	; () banked
  7947  0054BE  6F90               	movwf	_lcd_send_4bits$1676& (0+255),b
  7948                           
  7949                           ; BSR set to: 0
  7950  0054C0  0100               	movlb	0	; () banked
  7951  0054C2  B393               	btfsc	lcd_send_4bits@n& (0+255),1,b
  7952  0054C4  D003               	goto	l8127
  7953                           
  7954                           ; BSR set to: 0
  7955  0054C6  0E00               	movlw	0
  7956  0054C8  0100               	movlb	0	; () banked
  7957  0054CA  6F90               	movwf	_lcd_send_4bits$1676& (0+255),b
  7958  0054CC                     l8127:
  7959                           
  7960                           ; BSR set to: 0
  7961  0054CC  0100               	movlb	0	; () banked
  7962  0054CE  B190               	btfsc	_lcd_send_4bits$1676& (0+255),0,b
  7963  0054D0  D002               	bra	u10385
  7964  0054D2  9A81               	bcf	3969,5,c	;volatile
  7965  0054D4  D001               	bra	u10386
  7966  0054D6                     u10385:
  7967  0054D6  8A81               	bsf	3969,5,c	;volatile
  7968  0054D8                     u10386:
  7969                           
  7970                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
  7971  0054D8  0E01               	movlw	1
  7972  0054DA  0100               	movlb	0	; () banked
  7973  0054DC  6F91               	movwf	_lcd_send_4bits$1677& (0+255),b
  7974                           
  7975                           ; BSR set to: 0
  7976  0054DE  0100               	movlb	0	; () banked
  7977  0054E0  B593               	btfsc	lcd_send_4bits@n& (0+255),2,b
  7978  0054E2  D003               	goto	l8133
  7979                           
  7980                           ; BSR set to: 0
  7981  0054E4  0E00               	movlw	0
  7982  0054E6  0100               	movlb	0	; () banked
  7983  0054E8  6F91               	movwf	_lcd_send_4bits$1677& (0+255),b
  7984  0054EA                     l8133:
  7985                           
  7986                           ; BSR set to: 0
  7987  0054EA  0100               	movlb	0	; () banked
  7988  0054EC  B191               	btfsc	_lcd_send_4bits$1677& (0+255),0,b
  7989  0054EE  D002               	bra	u10405
  7990  0054F0  9C81               	bcf	3969,6,c	;volatile
  7991  0054F2  D001               	bra	u10406
  7992  0054F4                     u10405:
  7993  0054F4  8C81               	bsf	3969,6,c	;volatile
  7994  0054F6                     u10406:
  7995                           
  7996                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
  7997  0054F6  0E01               	movlw	1
  7998  0054F8  0100               	movlb	0	; () banked
  7999  0054FA  6F92               	movwf	_lcd_send_4bits$1678& (0+255),b
  8000                           
  8001                           ; BSR set to: 0
  8002  0054FC  0100               	movlb	0	; () banked
  8003  0054FE  B793               	btfsc	lcd_send_4bits@n& (0+255),3,b
  8004  005500  D003               	goto	l8139
  8005                           
  8006                           ; BSR set to: 0
  8007  005502  0E00               	movlw	0
  8008  005504  0100               	movlb	0	; () banked
  8009  005506  6F92               	movwf	_lcd_send_4bits$1678& (0+255),b
  8010  005508                     l8139:
  8011                           
  8012                           ; BSR set to: 0
  8013  005508  0100               	movlb	0	; () banked
  8014  00550A  B192               	btfsc	_lcd_send_4bits$1678& (0+255),0,b
  8015  00550C  D002               	bra	u10425
  8016  00550E  9E81               	bcf	3969,7,c	;volatile
  8017  005510  D001               	bra	u10426
  8018  005512                     u10425:
  8019  005512  8E81               	bsf	3969,7,c	;volatile
  8020  005514                     u10426:
  8021                           
  8022                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8023  005514  D000               	nop2		;2 cycle nop
  8024  005516  D000               	nop2		;2 cycle nop
  8025                           
  8026                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
  8027  005518  8681               	bsf	3969,3,c	;volatile
  8028                           
  8029                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
  8030  00551A  0E02               	movlw	2
  8031  00551C                     u14627:
  8032  00551C  2EE8               	decfsz	wreg,f,c
  8033  00551E  D7FE               	goto	u14627
  8034  005520  D000               	nop2		;nop
  8035                           
  8036                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
  8037  005522  9681               	bcf	3969,3,c	;volatile
  8038  005524  0012               	return		;funcret
  8039  005526                     __end_of_lcd_send_4bits:
  8040                           	opt stack 0
  8041                           tblptru	equ	0xFF8
  8042                           tblptrh	equ	0xFF7
  8043                           tblptrl	equ	0xFF6
  8044                           tablat	equ	0xFF5
  8045                           prodh	equ	0xFF4
  8046                           prodl	equ	0xFF3
  8047                           intcon	equ	0xFF2
  8048                           postinc0	equ	0xFEE
  8049                           wreg	equ	0xFE8
  8050                           postdec1	equ	0xFE5
  8051                           fsr1l	equ	0xFE1
  8052                           indf2	equ	0xFDF
  8053                           postinc2	equ	0xFDE
  8054                           postdec2	equ	0xFDD
  8055                           fsr2h	equ	0xFDA
  8056                           fsr2l	equ	0xFD9
  8057                           status	equ	0xFD8
  8058                           
  8059 ;; *************** function _lcd_read_byte *****************
  8060 ;; Defined at:
  8061 ;;		line 127 in file "source/../../vclib_lcd.h"
  8062 ;; Parameters:    Size  Location     Type
  8063 ;;		None
  8064 ;; Auto vars:     Size  Location     Type
  8065 ;;  high            1   50[BANK0 ] unsigned char 
  8066 ;;  low             1   49[BANK0 ] unsigned char 
  8067 ;; Return value:  Size  Location     Type
  8068 ;;                  1    wreg      unsigned char 
  8069 ;; Registers used:
  8070 ;;		wreg, status,2, status,0, cstack
  8071 ;; Tracked objects:
  8072 ;;		On entry : 0/0
  8073 ;;		On exit  : 0/0
  8074 ;;		Unchanged: 0/0
  8075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8076 ;;      Params:         0       0       0       0       0       0       0
  8077 ;;      Locals:         0       2       0       0       0       0       0
  8078 ;;      Temps:          0       0       0       0       0       0       0
  8079 ;;      Totals:         0       2       0       0       0       0       0
  8080 ;;Total ram usage:        2 bytes
  8081 ;; Hardware stack levels used:    1
  8082 ;; Hardware stack levels required when called:    9
  8083 ;; This function calls:
  8084 ;;		_lcd_read_4bits
  8085 ;; This function is called by:
  8086 ;;		_lcd_send_byte
  8087 ;;		_lcd_getc
  8088 ;; This function uses a non-reentrant model
  8089 ;;
  8090                           
  8091                           	psect	text24
  8092  005BB4                     __ptext24:
  8093                           	opt stack 0
  8094  005BB4                     _lcd_read_byte:
  8095                           	opt stack 19
  8096                           
  8097                           ;vclib_lcd.h: 128: unsigned char low, high;
  8098                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
  8099                           
  8100                           ;incstack = 0
  8101  005BB4  8893               	bsf	3987,4,c	;volatile
  8102                           
  8103                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
  8104  005BB6  8A93               	bsf	3987,5,c	;volatile
  8105                           
  8106                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
  8107  005BB8  8C93               	bsf	3987,6,c	;volatile
  8108                           
  8109                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
  8110  005BBA  8E93               	bsf	3987,7,c	;volatile
  8111                           
  8112                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
  8113  005BBC  8481               	bsf	3969,2,c	;volatile
  8114                           
  8115                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8116  005BBE  D000               	nop2		;2 cycle nop
  8117  005BC0  D000               	nop2		;2 cycle nop
  8118                           
  8119                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
  8120  005BC2  8681               	bsf	3969,3,c	;volatile
  8121                           
  8122                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8123  005BC4  D000               	nop2		;2 cycle nop
  8124  005BC6  D000               	nop2		;2 cycle nop
  8125                           
  8126                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
  8127  005BC8  EC98  F02B         	call	_lcd_read_4bits	;wreg free
  8128  005BCC  0100               	movlb	0	; () banked
  8129  005BCE  6F92               	movwf	lcd_read_byte@high& (0+255),b
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
  8133  005BD0  9681               	bcf	3969,3,c	;volatile
  8134                           
  8135                           ; BSR set to: 0
  8136                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8137  005BD2  D000               	nop2		;2 cycle nop
  8138  005BD4  D000               	nop2		;2 cycle nop
  8139                           
  8140                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
  8141  005BD6  8681               	bsf	3969,3,c	;volatile
  8142                           
  8143                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8144  005BD8  D000               	nop2		;2 cycle nop
  8145  005BDA  D000               	nop2		;2 cycle nop
  8146                           
  8147                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
  8148  005BDC  EC98  F02B         	call	_lcd_read_4bits	;wreg free
  8149  005BE0  0100               	movlb	0	; () banked
  8150  005BE2  6F91               	movwf	lcd_read_byte@low& (0+255),b
  8151                           
  8152                           ; BSR set to: 0
  8153                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
  8154  005BE4  9681               	bcf	3969,3,c	;volatile
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
  8158  005BE6  9893               	bcf	3987,4,c	;volatile
  8159                           
  8160                           ; BSR set to: 0
  8161                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
  8162  005BE8  9A93               	bcf	3987,5,c	;volatile
  8163                           
  8164                           ; BSR set to: 0
  8165                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
  8166  005BEA  9C93               	bcf	3987,6,c	;volatile
  8167                           
  8168                           ; BSR set to: 0
  8169                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
  8170  005BEC  9E93               	bcf	3987,7,c	;volatile
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
  8174  005BEE  0100               	movlb	0	; () banked
  8175  005BF0  3992               	swapf	lcd_read_byte@high& (0+255),w,b
  8176  005BF2  0BF0               	andlw	240
  8177  005BF4  0100               	movlb	0	; () banked
  8178  005BF6  1191               	iorwf	lcd_read_byte@low& (0+255),w,b
  8179  005BF8  0012               	return	
  8180  005BFA                     __end_of_lcd_read_byte:
  8181                           	opt stack 0
  8182                           tblptru	equ	0xFF8
  8183                           tblptrh	equ	0xFF7
  8184                           tblptrl	equ	0xFF6
  8185                           tablat	equ	0xFF5
  8186                           prodh	equ	0xFF4
  8187                           prodl	equ	0xFF3
  8188                           intcon	equ	0xFF2
  8189                           postinc0	equ	0xFEE
  8190                           wreg	equ	0xFE8
  8191                           postdec1	equ	0xFE5
  8192                           fsr1l	equ	0xFE1
  8193                           indf2	equ	0xFDF
  8194                           postinc2	equ	0xFDE
  8195                           postdec2	equ	0xFDD
  8196                           fsr2h	equ	0xFDA
  8197                           fsr2l	equ	0xFD9
  8198                           status	equ	0xFD8
  8199                           
  8200 ;; *************** function _lcd_read_4bits *****************
  8201 ;; Defined at:
  8202 ;;		line 117 in file "source/../../vclib_lcd.h"
  8203 ;; Parameters:    Size  Location     Type
  8204 ;;		None
  8205 ;; Auto vars:     Size  Location     Type
  8206 ;;  n               1   48[BANK0 ] unsigned char 
  8207 ;; Return value:  Size  Location     Type
  8208 ;;                  1    wreg      unsigned char 
  8209 ;; Registers used:
  8210 ;;		wreg, status,2, status,0
  8211 ;; Tracked objects:
  8212 ;;		On entry : 0/0
  8213 ;;		On exit  : 0/0
  8214 ;;		Unchanged: 0/0
  8215 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8216 ;;      Params:         0       0       0       0       0       0       0
  8217 ;;      Locals:         0       1       0       0       0       0       0
  8218 ;;      Temps:          0       1       0       0       0       0       0
  8219 ;;      Totals:         0       2       0       0       0       0       0
  8220 ;;Total ram usage:        2 bytes
  8221 ;; Hardware stack levels used:    1
  8222 ;; Hardware stack levels required when called:    8
  8223 ;; This function calls:
  8224 ;;		Nothing
  8225 ;; This function is called by:
  8226 ;;		_lcd_read_byte
  8227 ;; This function uses a non-reentrant model
  8228 ;;
  8229                           
  8230                           	psect	text25
  8231  005730                     __ptext25:
  8232                           	opt stack 0
  8233  005730                     _lcd_read_4bits:
  8234                           	opt stack 19
  8235                           
  8236                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
  8237                           
  8238                           ; BSR set to: 0
  8239                           ;incstack = 0
  8240  005730  0E00               	movlw	0
  8241  005732  0100               	movlb	0	; () banked
  8242  005734  6F90               	movwf	lcd_read_4bits@n& (0+255),b
  8243                           
  8244                           ; BSR set to: 0
  8245                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
  8246  005736  A881               	btfss	3969,4,c	;volatile
  8247  005738  D002               	goto	u10310
  8248  00573A  0E01               	movlw	1
  8249  00573C  D001               	goto	u10316
  8250  00573E                     u10310:
  8251  00573E  0E00               	movlw	0
  8252  005740                     u10316:
  8253  005740  0100               	movlb	0	; () banked
  8254  005742  1390               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
  8258  005744  AA81               	btfss	3969,5,c	;volatile
  8259  005746  D004               	goto	u10320
  8260  005748  0100               	movlb	0	; () banked
  8261  00574A  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8262  00574C  2B8F               	incf	??_lcd_read_4bits& (0+255),f,b
  8263  00574E  D002               	goto	u10328
  8264  005750                     u10320:
  8265  005750  0100               	movlb	0	; () banked
  8266  005752  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8267  005754                     u10328:
  8268  005754  0100               	movlb	0	; () banked
  8269  005756  90D8               	bcf	status,0,c
  8270  005758  358F               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8271  00575A  0100               	movlb	0	; () banked
  8272  00575C  1390               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8273                           
  8274                           ; BSR set to: 0
  8275                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
  8276  00575E  AC81               	btfss	3969,6,c	;volatile
  8277  005760  D004               	goto	u10330
  8278  005762  0100               	movlb	0	; () banked
  8279  005764  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8280  005766  2B8F               	incf	??_lcd_read_4bits& (0+255),f,b
  8281  005768  D002               	goto	u10338
  8282  00576A                     u10330:
  8283  00576A  0100               	movlb	0	; () banked
  8284  00576C  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8285  00576E                     u10338:
  8286  00576E  0100               	movlb	0	; () banked
  8287  005770  90D8               	bcf	status,0,c
  8288  005772  378F               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8289  005774  0100               	movlb	0	; () banked
  8290  005776  90D8               	bcf	status,0,c
  8291  005778  358F               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8292  00577A  0100               	movlb	0	; () banked
  8293  00577C  1390               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8294                           
  8295                           ; BSR set to: 0
  8296                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
  8297  00577E  AE81               	btfss	3969,7,c	;volatile
  8298  005780  D004               	goto	u10340
  8299  005782  0100               	movlb	0	; () banked
  8300  005784  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8301  005786  2B8F               	incf	??_lcd_read_4bits& (0+255),f,b
  8302  005788  D002               	goto	u10348
  8303  00578A                     u10340:
  8304  00578A  0100               	movlb	0	; () banked
  8305  00578C  6B8F               	clrf	??_lcd_read_4bits& (0+255),b
  8306  00578E                     u10348:
  8307  00578E  0100               	movlb	0	; () banked
  8308  005790  90D8               	bcf	status,0,c
  8309  005792  378F               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8310  005794  0100               	movlb	0	; () banked
  8311  005796  90D8               	bcf	status,0,c
  8312  005798  378F               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8313  00579A  0100               	movlb	0	; () banked
  8314  00579C  90D8               	bcf	status,0,c
  8315  00579E  358F               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8316  0057A0  0100               	movlb	0	; () banked
  8317  0057A2  1390               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8318                           
  8319                           ;vclib_lcd.h: 124: return (n);
  8320  0057A4  0100               	movlb	0	; () banked
  8321  0057A6  5190               	movf	lcd_read_4bits@n& (0+255),w,b
  8322  0057A8  0012               	return	
  8323  0057AA                     __end_of_lcd_read_4bits:
  8324                           	opt stack 0
  8325                           tblptru	equ	0xFF8
  8326                           tblptrh	equ	0xFF7
  8327                           tblptrl	equ	0xFF6
  8328                           tablat	equ	0xFF5
  8329                           prodh	equ	0xFF4
  8330                           prodl	equ	0xFF3
  8331                           intcon	equ	0xFF2
  8332                           postinc0	equ	0xFEE
  8333                           wreg	equ	0xFE8
  8334                           postdec1	equ	0xFE5
  8335                           fsr1l	equ	0xFE1
  8336                           indf2	equ	0xFDF
  8337                           postinc2	equ	0xFDE
  8338                           postdec2	equ	0xFDD
  8339                           fsr2h	equ	0xFDA
  8340                           fsr2l	equ	0xFD9
  8341                           status	equ	0xFD8
  8342                           
  8343 ;; *************** function _isdigit *****************
  8344 ;; Defined at:
  8345 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  8346 ;; Parameters:    Size  Location     Type
  8347 ;;  c               1    wreg     unsigned char 
  8348 ;; Auto vars:     Size  Location     Type
  8349 ;;  c               1   49[BANK0 ] unsigned char 
  8350 ;; Return value:  Size  Location     Type
  8351 ;;		None               void
  8352 ;; Registers used:
  8353 ;;		wreg, status,2, status,0
  8354 ;; Tracked objects:
  8355 ;;		On entry : 0/0
  8356 ;;		On exit  : 0/0
  8357 ;;		Unchanged: 0/0
  8358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8359 ;;      Params:         0       0       0       0       0       0       0
  8360 ;;      Locals:         0       2       0       0       0       0       0
  8361 ;;      Temps:          0       1       0       0       0       0       0
  8362 ;;      Totals:         0       3       0       0       0       0       0
  8363 ;;Total ram usage:        3 bytes
  8364 ;; Hardware stack levels used:    1
  8365 ;; Hardware stack levels required when called:    8
  8366 ;; This function calls:
  8367 ;;		Nothing
  8368 ;; This function is called by:
  8369 ;;		_printf
  8370 ;; This function uses a non-reentrant model
  8371 ;;
  8372                           
  8373                           	psect	text26
  8374  005F58                     __ptext26:
  8375                           	opt stack 0
  8376  005F58                     _isdigit:
  8377                           	opt stack 19
  8378                           
  8379                           ; BSR set to: 0
  8380                           ;incstack = 0
  8381                           ;isdigit@c stored from wreg
  8382  005F58  0100               	movlb	0	; () banked
  8383  005F5A  6F91               	movwf	isdigit@c& (0+255),b
  8384  005F5C  0E00               	movlw	0
  8385  005F5E  0100               	movlb	0	; () banked
  8386  005F60  6F90               	movwf	_isdigit$2475& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389  005F62  0E3A               	movlw	58
  8390  005F64  0100               	movlb	0	; () banked
  8391  005F66  6191               	cpfslt	isdigit@c& (0+255),b
  8392  005F68  D007               	goto	l8805
  8393                           
  8394                           ; BSR set to: 0
  8395  005F6A  0E2F               	movlw	47
  8396  005F6C  0100               	movlb	0	; () banked
  8397  005F6E  6591               	cpfsgt	isdigit@c& (0+255),b
  8398  005F70  D003               	goto	l8805
  8399                           
  8400                           ; BSR set to: 0
  8401  005F72  0E01               	movlw	1
  8402  005F74  0100               	movlb	0	; () banked
  8403  005F76  6F90               	movwf	_isdigit$2475& (0+255),b
  8404  005F78                     l8805:
  8405                           
  8406                           ; BSR set to: 0
  8407  005F78  C090  F08F         	movff	_isdigit$2475,??_isdigit
  8408  005F7C  0100               	movlb	0	; () banked
  8409  005F7E  318F               	rrcf	??_isdigit& (0+255),w,b
  8410  005F80  0012               	return	
  8411  005F82                     __end_of_isdigit:
  8412                           	opt stack 0
  8413                           tblptru	equ	0xFF8
  8414                           tblptrh	equ	0xFF7
  8415                           tblptrl	equ	0xFF6
  8416                           tablat	equ	0xFF5
  8417                           prodh	equ	0xFF4
  8418                           prodl	equ	0xFF3
  8419                           intcon	equ	0xFF2
  8420                           postinc0	equ	0xFEE
  8421                           wreg	equ	0xFE8
  8422                           postdec1	equ	0xFE5
  8423                           fsr1l	equ	0xFE1
  8424                           indf2	equ	0xFDF
  8425                           postinc2	equ	0xFDE
  8426                           postdec2	equ	0xFDD
  8427                           fsr2h	equ	0xFDA
  8428                           fsr2l	equ	0xFD9
  8429                           status	equ	0xFD8
  8430                           
  8431 ;; *************** function _fround *****************
  8432 ;; Defined at:
  8433 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  8434 ;; Parameters:    Size  Location     Type
  8435 ;;  prec            1    wreg     unsigned char 
  8436 ;; Auto vars:     Size  Location     Type
  8437 ;;  prec            1   25[BANK1 ] unsigned char 
  8438 ;; Return value:  Size  Location     Type
  8439 ;;                  4   13[BANK1 ] unsigned char 
  8440 ;; Registers used:
  8441 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8442 ;; Tracked objects:
  8443 ;;		On entry : 0/0
  8444 ;;		On exit  : 0/0
  8445 ;;		Unchanged: 0/0
  8446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8447 ;;      Params:         0       0       4       0       0       0       0
  8448 ;;      Locals:         0       0       9       0       0       0       0
  8449 ;;      Temps:          0       0       0       0       0       0       0
  8450 ;;      Totals:         0       0      13       0       0       0       0
  8451 ;;Total ram usage:       13 bytes
  8452 ;; Hardware stack levels used:    1
  8453 ;; Hardware stack levels required when called:    9
  8454 ;; This function calls:
  8455 ;;		___awdiv
  8456 ;;		___awmod
  8457 ;;		___flmul
  8458 ;; This function is called by:
  8459 ;;		_printf
  8460 ;; This function uses a non-reentrant model
  8461 ;;
  8462                           
  8463                           	psect	text27
  8464  002A4E                     __ptext27:
  8465                           	opt stack 0
  8466  002A4E                     _fround:
  8467                           	opt stack 18
  8468                           
  8469                           ; BSR set to: 0
  8470                           ;incstack = 0
  8471                           ;fround@prec stored from wreg
  8472  002A4E  0101               	movlb	1	; () banked
  8473  002A50  6F19               	movwf	fround@prec& (0+255),b
  8474                           
  8475                           ;doprnt.c: 413: if(prec>=110)
  8476  002A52  0E6D               	movlw	109
  8477  002A54  0101               	movlb	1	; () banked
  8478  002A56  6519               	cpfsgt	fround@prec& (0+255),b
  8479  002A58  D0C4               	goto	l8747
  8480                           
  8481                           ; BSR set to: 1
  8482                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8483  002A5A  0E00               	movlw	0
  8484  002A5C  0100               	movlb	0	; () banked
  8485  002A5E  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  8486  002A60  0E0A               	movlw	10
  8487  002A62  6F97               	movwf	___awdiv@divisor& (0+255),b
  8488  002A64  0E00               	movlw	0
  8489  002A66  0100               	movlb	0	; () banked
  8490  002A68  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  8491  002A6A  0E64               	movlw	100
  8492  002A6C  6F91               	movwf	___awmod@divisor& (0+255),b
  8493  002A6E  C119  F08F         	movff	fround@prec,___awmod@dividend
  8494  002A72  0100               	movlb	0	; () banked
  8495  002A74  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  8496  002A76  ECD1  F028         	call	___awmod	;wreg free
  8497  002A7A  C08F  F095         	movff	?___awmod,___awdiv@dividend
  8498  002A7E  C090  F096         	movff	?___awmod+1,___awdiv@dividend+1
  8499  002A82  EC5E  F026         	call	___awdiv	;wreg free
  8500  002A86  0100               	movlb	0	; () banked
  8501  002A88  90D8               	bcf	status,0,c
  8502  002A8A  3795               	rlcf	?___awdiv& (0+255),f,b
  8503  002A8C  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8504  002A8E  0100               	movlb	0	; () banked
  8505  002A90  90D8               	bcf	status,0,c
  8506  002A92  3795               	rlcf	?___awdiv& (0+255),f,b
  8507  002A94  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8508  002A96  0E24               	movlw	36
  8509  002A98  0100               	movlb	0	; () banked
  8510  002A9A  2795               	addwf	?___awdiv& (0+255),f,b
  8511  002A9C  0E00               	movlw	0
  8512  002A9E  0100               	movlb	0	; () banked
  8513  002AA0  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  8514  002AA2  0E1B               	movlw	low __npowers_
  8515  002AA4  0100               	movlb	0	; () banked
  8516  002AA6  2595               	addwf	?___awdiv& (0+255),w,b
  8517  002AA8  6EF6               	movwf	tblptrl,c
  8518  002AAA  0E7D               	movlw	high __npowers_
  8519  002AAC  0100               	movlb	0	; () banked
  8520  002AAE  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  8521  002AB0  6EF7               	movwf	tblptrh,c
  8522  002AB2                     	if	0	;There are less than 3 active tblptr bytes
  8523  002AB2                     	endif
  8524  002AB2  0009               	tblrd		*+
  8525  002AB4  CFF5 F0A1          	movff	tablat,___flmul@a
  8526  002AB8  0009               	tblrd		*+
  8527  002ABA  CFF5 F0A2          	movff	tablat,___flmul@a+1
  8528  002ABE  0009               	tblrd		*+
  8529  002AC0  CFF5 F0A3          	movff	tablat,___flmul@a+2
  8530  002AC4  000A               	tblrd		*-
  8531  002AC6  CFF5 F0A4          	movff	tablat,___flmul@a+3
  8532  002ACA  0E00               	movlw	0
  8533  002ACC  0100               	movlb	0	; () banked
  8534  002ACE  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  8535  002AD0  0E64               	movlw	100
  8536  002AD2  6F97               	movwf	___awdiv@divisor& (0+255),b
  8537  002AD4  C119  F095         	movff	fround@prec,___awdiv@dividend
  8538  002AD8  0100               	movlb	0	; () banked
  8539  002ADA  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  8540  002ADC  EC5E  F026         	call	___awdiv	;wreg free
  8541  002AE0  0100               	movlb	0	; () banked
  8542  002AE2  90D8               	bcf	status,0,c
  8543  002AE4  3795               	rlcf	?___awdiv& (0+255),f,b
  8544  002AE6  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8545  002AE8  0100               	movlb	0	; () banked
  8546  002AEA  90D8               	bcf	status,0,c
  8547  002AEC  3795               	rlcf	?___awdiv& (0+255),f,b
  8548  002AEE  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8549  002AF0  0E48               	movlw	72
  8550  002AF2  0100               	movlb	0	; () banked
  8551  002AF4  2795               	addwf	?___awdiv& (0+255),f,b
  8552  002AF6  0E00               	movlw	0
  8553  002AF8  0100               	movlb	0	; () banked
  8554  002AFA  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  8555  002AFC  0E1B               	movlw	low __npowers_
  8556  002AFE  0100               	movlb	0	; () banked
  8557  002B00  2595               	addwf	?___awdiv& (0+255),w,b
  8558  002B02  6EF6               	movwf	tblptrl,c
  8559  002B04  0E7D               	movlw	high __npowers_
  8560  002B06  0100               	movlb	0	; () banked
  8561  002B08  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  8562  002B0A  6EF7               	movwf	tblptrh,c
  8563  002B0C                     	if	0	;There are less than 3 active tblptr bytes
  8564  002B0C                     	endif
  8565  002B0C  0009               	tblrd		*+
  8566  002B0E  CFF5 F09D          	movff	tablat,___flmul@b
  8567  002B12  0009               	tblrd		*+
  8568  002B14  CFF5 F09E          	movff	tablat,___flmul@b+1
  8569  002B18  0009               	tblrd		*+
  8570  002B1A  CFF5 F09F          	movff	tablat,___flmul@b+2
  8571  002B1E  000A               	tblrd		*-
  8572  002B20  CFF5 F0A0          	movff	tablat,___flmul@b+3
  8573  002B24  EC55  F00B         	call	___flmul	;wreg free
  8574  002B28  C09D  F115         	movff	?___flmul,_fround$2972
  8575  002B2C  C09E  F116         	movff	?___flmul+1,_fround$2972+1
  8576  002B30  C09F  F117         	movff	?___flmul+2,_fround$2972+2
  8577  002B34  C0A0  F118         	movff	?___flmul+3,_fround$2972+3
  8578                           
  8579                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8580  002B38  0E00               	movlw	0
  8581  002B3A  0100               	movlb	0	; () banked
  8582  002B3C  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  8583  002B3E  0E0A               	movlw	10
  8584  002B40  6F91               	movwf	___awmod@divisor& (0+255),b
  8585  002B42  C119  F08F         	movff	fround@prec,___awmod@dividend
  8586  002B46  0100               	movlb	0	; () banked
  8587  002B48  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  8588  002B4A  ECD1  F028         	call	___awmod	;wreg free
  8589  002B4E  0100               	movlb	0	; () banked
  8590  002B50  90D8               	bcf	status,0,c
  8591  002B52  378F               	rlcf	?___awmod& (0+255),f,b
  8592  002B54  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  8593  002B56  0100               	movlb	0	; () banked
  8594  002B58  90D8               	bcf	status,0,c
  8595  002B5A  378F               	rlcf	?___awmod& (0+255),f,b
  8596  002B5C  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  8597  002B5E  0E1B               	movlw	low __npowers_
  8598  002B60  0100               	movlb	0	; () banked
  8599  002B62  258F               	addwf	?___awmod& (0+255),w,b
  8600  002B64  6EF6               	movwf	tblptrl,c
  8601  002B66  0E7D               	movlw	high __npowers_
  8602  002B68  0100               	movlb	0	; () banked
  8603  002B6A  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  8604  002B6C  6EF7               	movwf	tblptrh,c
  8605  002B6E                     	if	0	;There are less than 3 active tblptr bytes
  8606  002B6E                     	endif
  8607  002B6E  0009               	tblrd		*+
  8608  002B70  CFF5 F0A1          	movff	tablat,___flmul@a
  8609  002B74  0009               	tblrd		*+
  8610  002B76  CFF5 F0A2          	movff	tablat,___flmul@a+1
  8611  002B7A  0009               	tblrd		*+
  8612  002B7C  CFF5 F0A3          	movff	tablat,___flmul@a+2
  8613  002B80  000A               	tblrd		*-
  8614  002B82  CFF5 F0A4          	movff	tablat,___flmul@a+3
  8615  002B86  C115  F09D         	movff	_fround$2972,___flmul@b
  8616  002B8A  C116  F09E         	movff	_fround$2972+1,___flmul@b+1
  8617  002B8E  C117  F09F         	movff	_fround$2972+2,___flmul@b+2
  8618  002B92  C118  F0A0         	movff	_fround$2972+3,___flmul@b+3
  8619  002B96  EC55  F00B         	call	___flmul	;wreg free
  8620  002B9A  C09D  F111         	movff	?___flmul,_fround$2973
  8621  002B9E  C09E  F112         	movff	?___flmul+1,_fround$2973+1
  8622  002BA2  C09F  F113         	movff	?___flmul+2,_fround$2973+2
  8623  002BA6  C0A0  F114         	movff	?___flmul+3,_fround$2973+3
  8624                           
  8625                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8626  002BAA  C111  F09D         	movff	_fround$2973,___flmul@b
  8627  002BAE  C112  F09E         	movff	_fround$2973+1,___flmul@b+1
  8628  002BB2  C113  F09F         	movff	_fround$2973+2,___flmul@b+2
  8629  002BB6  C114  F0A0         	movff	_fround$2973+3,___flmul@b+3
  8630  002BBA  0E00               	movlw	0
  8631  002BBC  0100               	movlb	0	; () banked
  8632  002BBE  6FA1               	movwf	___flmul@a& (0+255),b
  8633  002BC0  0E00               	movlw	0
  8634  002BC2  6FA2               	movwf	(___flmul@a+1)& (0+255),b
  8635  002BC4  0E00               	movlw	0
  8636  002BC6  6FA3               	movwf	(___flmul@a+2)& (0+255),b
  8637  002BC8  0E3F               	movlw	63
  8638  002BCA  6FA4               	movwf	(___flmul@a+3)& (0+255),b
  8639  002BCC  EC55  F00B         	call	___flmul	;wreg free
  8640  002BD0  C09D  F10D         	movff	?___flmul,?_fround
  8641  002BD4  C09E  F10E         	movff	?___flmul+1,?_fround+1
  8642  002BD8  C09F  F10F         	movff	?___flmul+2,?_fround+2
  8643  002BDC  C0A0  F110         	movff	?___flmul+3,?_fround+3
  8644  002BE0  0012               	return	
  8645  002BE2                     l8747:
  8646                           
  8647                           ;doprnt.c: 415: else if(prec > 10)
  8648  002BE2  0E0A               	movlw	10
  8649  002BE4  0101               	movlb	1	; () banked
  8650  002BE6  6519               	cpfsgt	fround@prec& (0+255),b
  8651  002BE8  D072               	goto	l8755
  8652                           
  8653                           ; BSR set to: 1
  8654                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8655  002BEA  0E00               	movlw	0
  8656  002BEC  0100               	movlb	0	; () banked
  8657  002BEE  6F92               	movwf	(___awmod@divisor+1)& (0+255),b
  8658  002BF0  0E0A               	movlw	10
  8659  002BF2  6F91               	movwf	___awmod@divisor& (0+255),b
  8660  002BF4  C119  F08F         	movff	fround@prec,___awmod@dividend
  8661  002BF8  0100               	movlb	0	; () banked
  8662  002BFA  6B90               	clrf	(___awmod@dividend+1)& (0+255),b
  8663  002BFC  ECD1  F028         	call	___awmod	;wreg free
  8664  002C00  0100               	movlb	0	; () banked
  8665  002C02  90D8               	bcf	status,0,c
  8666  002C04  378F               	rlcf	?___awmod& (0+255),f,b
  8667  002C06  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  8668  002C08  0100               	movlb	0	; () banked
  8669  002C0A  90D8               	bcf	status,0,c
  8670  002C0C  378F               	rlcf	?___awmod& (0+255),f,b
  8671  002C0E  3790               	rlcf	(?___awmod+1)& (0+255),f,b
  8672  002C10  0E1B               	movlw	low __npowers_
  8673  002C12  0100               	movlb	0	; () banked
  8674  002C14  258F               	addwf	?___awmod& (0+255),w,b
  8675  002C16  6EF6               	movwf	tblptrl,c
  8676  002C18  0E7D               	movlw	high __npowers_
  8677  002C1A  0100               	movlb	0	; () banked
  8678  002C1C  2190               	addwfc	(?___awmod+1)& (0+255),w,b
  8679  002C1E  6EF7               	movwf	tblptrh,c
  8680  002C20                     	if	0	;There are less than 3 active tblptr bytes
  8681  002C20                     	endif
  8682  002C20  0009               	tblrd		*+
  8683  002C22  CFF5 F0A1          	movff	tablat,___flmul@a
  8684  002C26  0009               	tblrd		*+
  8685  002C28  CFF5 F0A2          	movff	tablat,___flmul@a+1
  8686  002C2C  0009               	tblrd		*+
  8687  002C2E  CFF5 F0A3          	movff	tablat,___flmul@a+2
  8688  002C32  000A               	tblrd		*-
  8689  002C34  CFF5 F0A4          	movff	tablat,___flmul@a+3
  8690  002C38  0E00               	movlw	0
  8691  002C3A  0100               	movlb	0	; () banked
  8692  002C3C  6F98               	movwf	(___awdiv@divisor+1)& (0+255),b
  8693  002C3E  0E0A               	movlw	10
  8694  002C40  6F97               	movwf	___awdiv@divisor& (0+255),b
  8695  002C42  C119  F095         	movff	fround@prec,___awdiv@dividend
  8696  002C46  0100               	movlb	0	; () banked
  8697  002C48  6B96               	clrf	(___awdiv@dividend+1)& (0+255),b
  8698  002C4A  EC5E  F026         	call	___awdiv	;wreg free
  8699  002C4E  0100               	movlb	0	; () banked
  8700  002C50  90D8               	bcf	status,0,c
  8701  002C52  3795               	rlcf	?___awdiv& (0+255),f,b
  8702  002C54  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8703  002C56  0100               	movlb	0	; () banked
  8704  002C58  90D8               	bcf	status,0,c
  8705  002C5A  3795               	rlcf	?___awdiv& (0+255),f,b
  8706  002C5C  3796               	rlcf	(?___awdiv+1)& (0+255),f,b
  8707  002C5E  0E24               	movlw	36
  8708  002C60  0100               	movlb	0	; () banked
  8709  002C62  2795               	addwf	?___awdiv& (0+255),f,b
  8710  002C64  0E00               	movlw	0
  8711  002C66  0100               	movlb	0	; () banked
  8712  002C68  2396               	addwfc	(?___awdiv+1)& (0+255),f,b
  8713  002C6A  0E1B               	movlw	low __npowers_
  8714  002C6C  0100               	movlb	0	; () banked
  8715  002C6E  2595               	addwf	?___awdiv& (0+255),w,b
  8716  002C70  6EF6               	movwf	tblptrl,c
  8717  002C72  0E7D               	movlw	high __npowers_
  8718  002C74  0100               	movlb	0	; () banked
  8719  002C76  2196               	addwfc	(?___awdiv+1)& (0+255),w,b
  8720  002C78  6EF7               	movwf	tblptrh,c
  8721  002C7A                     	if	0	;There are less than 3 active tblptr bytes
  8722  002C7A                     	endif
  8723  002C7A  0009               	tblrd		*+
  8724  002C7C  CFF5 F09D          	movff	tablat,___flmul@b
  8725  002C80  0009               	tblrd		*+
  8726  002C82  CFF5 F09E          	movff	tablat,___flmul@b+1
  8727  002C86  0009               	tblrd		*+
  8728  002C88  CFF5 F09F          	movff	tablat,___flmul@b+2
  8729  002C8C  000A               	tblrd		*-
  8730  002C8E  CFF5 F0A0          	movff	tablat,___flmul@b+3
  8731  002C92  EC55  F00B         	call	___flmul	;wreg free
  8732  002C96  C09D  F115         	movff	?___flmul,_fround$2972
  8733  002C9A  C09E  F116         	movff	?___flmul+1,_fround$2972+1
  8734  002C9E  C09F  F117         	movff	?___flmul+2,_fround$2972+2
  8735  002CA2  C0A0  F118         	movff	?___flmul+3,_fround$2972+3
  8736                           
  8737                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8738  002CA6  C115  F09D         	movff	_fround$2972,___flmul@b
  8739  002CAA  C116  F09E         	movff	_fround$2972+1,___flmul@b+1
  8740  002CAE  C117  F09F         	movff	_fround$2972+2,___flmul@b+2
  8741  002CB2  C118  F0A0         	movff	_fround$2972+3,___flmul@b+3
  8742  002CB6  0E00               	movlw	0
  8743  002CB8  0100               	movlb	0	; () banked
  8744  002CBA  6FA1               	movwf	___flmul@a& (0+255),b
  8745  002CBC  0E00               	movlw	0
  8746  002CBE  6FA2               	movwf	(___flmul@a+1)& (0+255),b
  8747  002CC0  0E00               	movlw	0
  8748  002CC2  6FA3               	movwf	(___flmul@a+2)& (0+255),b
  8749  002CC4  0E3F               	movlw	63
  8750  002CC6  6FA4               	movwf	(___flmul@a+3)& (0+255),b
  8751  002CC8  EC55  F00B         	call	___flmul	;wreg free
  8752  002CCC  D781               	goto	L5
  8753  002CCE                     l8755:
  8754                           
  8755                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8756  002CCE  0101               	movlb	1	; () banked
  8757  002CD0  5119               	movf	fround@prec& (0+255),w,b
  8758  002CD2  0D04               	mullw	4
  8759  002CD4  0E1B               	movlw	low __npowers_
  8760  002CD6  24F3               	addwf	prodl,w,c
  8761  002CD8  6EF6               	movwf	tblptrl,c
  8762  002CDA  0E7D               	movlw	high __npowers_
  8763  002CDC  20F4               	addwfc	prodh,w,c
  8764  002CDE  6EF7               	movwf	tblptrh,c
  8765  002CE0                     	if	0	;There are less than 3 active tblptr bytes
  8766  002CE0                     	endif
  8767  002CE0  0009               	tblrd		*+
  8768  002CE2  CFF5 F09D          	movff	tablat,___flmul@b
  8769  002CE6  0009               	tblrd		*+
  8770  002CE8  CFF5 F09E          	movff	tablat,___flmul@b+1
  8771  002CEC  0009               	tblrd		*+
  8772  002CEE  CFF5 F09F          	movff	tablat,___flmul@b+2
  8773  002CF2  000A               	tblrd		*-
  8774  002CF4  CFF5 F0A0          	movff	tablat,___flmul@b+3
  8775  002CF8  0E00               	movlw	0
  8776  002CFA  0100               	movlb	0	; () banked
  8777  002CFC  6FA1               	movwf	___flmul@a& (0+255),b
  8778  002CFE  0E00               	movlw	0
  8779  002D00  6FA2               	movwf	(___flmul@a+1)& (0+255),b
  8780  002D02  0E00               	movlw	0
  8781  002D04  6FA3               	movwf	(___flmul@a+2)& (0+255),b
  8782  002D06  0E3F               	movlw	63
  8783  002D08  6FA4               	movwf	(___flmul@a+3)& (0+255),b
  8784  002D0A  EC55  F00B         	call	___flmul	;wreg free
  8785  002D0E  C09D  F10D         	movff	?___flmul,?_fround
  8786  002D12  C09E  F10E         	movff	?___flmul+1,?_fround+1
  8787  002D16  C09F  F10F         	movff	?___flmul+2,?_fround+2
  8788  002D1A  C0A0  F110         	movff	?___flmul+3,?_fround+3
  8789  002D1E  0012               	return	
  8790  002D20                     __end_of_fround:
  8791                           	opt stack 0
  8792                           tblptru	equ	0xFF8
  8793                           tblptrh	equ	0xFF7
  8794                           tblptrl	equ	0xFF6
  8795                           tablat	equ	0xFF5
  8796                           prodh	equ	0xFF4
  8797                           prodl	equ	0xFF3
  8798                           intcon	equ	0xFF2
  8799                           postinc0	equ	0xFEE
  8800                           wreg	equ	0xFE8
  8801                           postdec1	equ	0xFE5
  8802                           fsr1l	equ	0xFE1
  8803                           indf2	equ	0xFDF
  8804                           postinc2	equ	0xFDE
  8805                           postdec2	equ	0xFDD
  8806                           fsr2h	equ	0xFDA
  8807                           fsr2l	equ	0xFD9
  8808                           status	equ	0xFD8
  8809                           
  8810 ;; *************** function ___awmod *****************
  8811 ;; Defined at:
  8812 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8813 ;; Parameters:    Size  Location     Type
  8814 ;;  dividend        2   47[BANK0 ] int 
  8815 ;;  divisor         2   49[BANK0 ] int 
  8816 ;; Auto vars:     Size  Location     Type
  8817 ;;  sign            1   52[BANK0 ] unsigned char 
  8818 ;;  counter         1   51[BANK0 ] unsigned char 
  8819 ;; Return value:  Size  Location     Type
  8820 ;;                  2   47[BANK0 ] int 
  8821 ;; Registers used:
  8822 ;;		wreg, status,2, status,0
  8823 ;; Tracked objects:
  8824 ;;		On entry : 0/0
  8825 ;;		On exit  : 0/0
  8826 ;;		Unchanged: 0/0
  8827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8828 ;;      Params:         0       4       0       0       0       0       0
  8829 ;;      Locals:         0       2       0       0       0       0       0
  8830 ;;      Temps:          0       0       0       0       0       0       0
  8831 ;;      Totals:         0       6       0       0       0       0       0
  8832 ;;Total ram usage:        6 bytes
  8833 ;; Hardware stack levels used:    1
  8834 ;; Hardware stack levels required when called:    8
  8835 ;; This function calls:
  8836 ;;		Nothing
  8837 ;; This function is called by:
  8838 ;;		_fround
  8839 ;;		_scale
  8840 ;; This function uses a non-reentrant model
  8841 ;;
  8842                           
  8843                           	psect	text28
  8844  0051A2                     __ptext28:
  8845                           	opt stack 0
  8846  0051A2                     ___awmod:
  8847                           	opt stack 18
  8848                           
  8849                           ;incstack = 0
  8850  0051A2  0E00               	movlw	0
  8851  0051A4  0100               	movlb	0	; () banked
  8852  0051A6  6F94               	movwf	___awmod@sign& (0+255),b
  8853                           
  8854                           ; BSR set to: 0
  8855  0051A8  0100               	movlb	0	; () banked
  8856  0051AA  AF90               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8857  0051AC  D008               	goto	l8703
  8858                           
  8859                           ; BSR set to: 0
  8860  0051AE  0100               	movlb	0	; () banked
  8861  0051B0  6D8F               	negf	___awmod@dividend& (0+255),b
  8862  0051B2  1F90               	comf	(___awmod@dividend+1)& (0+255),f,b
  8863  0051B4  B0D8               	btfsc	status,0,c
  8864  0051B6  2B90               	incf	(___awmod@dividend+1)& (0+255),f,b
  8865                           
  8866                           ; BSR set to: 0
  8867  0051B8  0E01               	movlw	1
  8868  0051BA  0100               	movlb	0	; () banked
  8869  0051BC  6F94               	movwf	___awmod@sign& (0+255),b
  8870  0051BE                     l8703:
  8871                           
  8872                           ; BSR set to: 0
  8873  0051BE  0100               	movlb	0	; () banked
  8874  0051C0  AF92               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8875  0051C2  D005               	goto	l8707
  8876                           
  8877                           ; BSR set to: 0
  8878  0051C4  0100               	movlb	0	; () banked
  8879  0051C6  6D91               	negf	___awmod@divisor& (0+255),b
  8880  0051C8  1F92               	comf	(___awmod@divisor+1)& (0+255),f,b
  8881  0051CA  B0D8               	btfsc	status,0,c
  8882  0051CC  2B92               	incf	(___awmod@divisor+1)& (0+255),f,b
  8883  0051CE                     l8707:
  8884                           
  8885                           ; BSR set to: 0
  8886  0051CE  0100               	movlb	0	; () banked
  8887  0051D0  5191               	movf	___awmod@divisor& (0+255),w,b
  8888  0051D2  0100               	movlb	0	; () banked
  8889  0051D4  1192               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8890  0051D6  B4D8               	btfsc	status,2,c
  8891  0051D8  D026               	goto	l8723
  8892                           
  8893                           ; BSR set to: 0
  8894  0051DA  0E01               	movlw	1
  8895  0051DC  0100               	movlb	0	; () banked
  8896  0051DE  6F93               	movwf	___awmod@counter& (0+255),b
  8897  0051E0  D006               	goto	l8713
  8898  0051E2                     l8711:
  8899                           
  8900                           ; BSR set to: 0
  8901  0051E2  0100               	movlb	0	; () banked
  8902  0051E4  90D8               	bcf	status,0,c
  8903  0051E6  3791               	rlcf	___awmod@divisor& (0+255),f,b
  8904  0051E8  3792               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8905  0051EA  0100               	movlb	0	; () banked
  8906  0051EC  2B93               	incf	___awmod@counter& (0+255),f,b
  8907  0051EE                     l8713:
  8908                           
  8909                           ; BSR set to: 0
  8910  0051EE  0100               	movlb	0	; () banked
  8911  0051F0  AF92               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8912  0051F2  D7F7               	goto	l8711
  8913  0051F4                     l8715:
  8914                           
  8915                           ; BSR set to: 0
  8916  0051F4  0100               	movlb	0	; () banked
  8917  0051F6  5191               	movf	___awmod@divisor& (0+255),w,b
  8918  0051F8  0100               	movlb	0	; () banked
  8919  0051FA  5D8F               	subwf	___awmod@dividend& (0+255),w,b
  8920  0051FC  0100               	movlb	0	; () banked
  8921  0051FE  5192               	movf	(___awmod@divisor+1)& (0+255),w,b
  8922  005200  0100               	movlb	0	; () banked
  8923  005202  5990               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8924  005204  A0D8               	btfss	status,0,c
  8925  005206  D008               	goto	l8719
  8926                           
  8927                           ; BSR set to: 0
  8928  005208  0100               	movlb	0	; () banked
  8929  00520A  5191               	movf	___awmod@divisor& (0+255),w,b
  8930  00520C  0100               	movlb	0	; () banked
  8931  00520E  5F8F               	subwf	___awmod@dividend& (0+255),f,b
  8932  005210  0100               	movlb	0	; () banked
  8933  005212  5192               	movf	(___awmod@divisor+1)& (0+255),w,b
  8934  005214  0100               	movlb	0	; () banked
  8935  005216  5B90               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8936  005218                     l8719:
  8937                           
  8938                           ; BSR set to: 0
  8939  005218  0100               	movlb	0	; () banked
  8940  00521A  90D8               	bcf	status,0,c
  8941  00521C  3392               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8942  00521E  3391               	rrcf	___awmod@divisor& (0+255),f,b
  8943                           
  8944                           ; BSR set to: 0
  8945  005220  0100               	movlb	0	; () banked
  8946  005222  2F93               	decfsz	___awmod@counter& (0+255),f,b
  8947  005224  D7E7               	goto	l8715
  8948  005226                     l8723:
  8949                           
  8950                           ; BSR set to: 0
  8951  005226  0100               	movlb	0	; () banked
  8952  005228  5194               	movf	___awmod@sign& (0+255),w,b
  8953  00522A  0100               	movlb	0	; () banked
  8954  00522C  B4D8               	btfsc	status,2,c
  8955  00522E  D005               	goto	l8727
  8956                           
  8957                           ; BSR set to: 0
  8958  005230  0100               	movlb	0	; () banked
  8959  005232  6D8F               	negf	___awmod@dividend& (0+255),b
  8960  005234  1F90               	comf	(___awmod@dividend+1)& (0+255),f,b
  8961  005236  B0D8               	btfsc	status,0,c
  8962  005238  2B90               	incf	(___awmod@dividend+1)& (0+255),f,b
  8963  00523A                     l8727:
  8964                           
  8965                           ; BSR set to: 0
  8966  00523A  C08F  F08F         	movff	___awmod@dividend,?___awmod
  8967  00523E  C090  F090         	movff	___awmod@dividend+1,?___awmod+1
  8968  005242  0012               	return	
  8969  005244                     __end_of___awmod:
  8970                           	opt stack 0
  8971                           tblptru	equ	0xFF8
  8972                           tblptrh	equ	0xFF7
  8973                           tblptrl	equ	0xFF6
  8974                           tablat	equ	0xFF5
  8975                           prodh	equ	0xFF4
  8976                           prodl	equ	0xFF3
  8977                           intcon	equ	0xFF2
  8978                           postinc0	equ	0xFEE
  8979                           wreg	equ	0xFE8
  8980                           postdec1	equ	0xFE5
  8981                           fsr1l	equ	0xFE1
  8982                           indf2	equ	0xFDF
  8983                           postinc2	equ	0xFDE
  8984                           postdec2	equ	0xFDD
  8985                           fsr2h	equ	0xFDA
  8986                           fsr2l	equ	0xFD9
  8987                           status	equ	0xFD8
  8988                           
  8989 ;; *************** function ___awdiv *****************
  8990 ;; Defined at:
  8991 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8992 ;; Parameters:    Size  Location     Type
  8993 ;;  dividend        2   53[BANK0 ] int 
  8994 ;;  divisor         2   55[BANK0 ] int 
  8995 ;; Auto vars:     Size  Location     Type
  8996 ;;  quotient        2   59[BANK0 ] int 
  8997 ;;  sign            1   58[BANK0 ] unsigned char 
  8998 ;;  counter         1   57[BANK0 ] unsigned char 
  8999 ;; Return value:  Size  Location     Type
  9000 ;;                  2   53[BANK0 ] int 
  9001 ;; Registers used:
  9002 ;;		wreg, status,2, status,0
  9003 ;; Tracked objects:
  9004 ;;		On entry : 0/0
  9005 ;;		On exit  : 0/0
  9006 ;;		Unchanged: 0/0
  9007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9008 ;;      Params:         0       4       0       0       0       0       0
  9009 ;;      Locals:         0       4       0       0       0       0       0
  9010 ;;      Temps:          0       0       0       0       0       0       0
  9011 ;;      Totals:         0       8       0       0       0       0       0
  9012 ;;Total ram usage:        8 bytes
  9013 ;; Hardware stack levels used:    1
  9014 ;; Hardware stack levels required when called:    8
  9015 ;; This function calls:
  9016 ;;		Nothing
  9017 ;; This function is called by:
  9018 ;;		_fround
  9019 ;;		_scale
  9020 ;;		_printf
  9021 ;; This function uses a non-reentrant model
  9022 ;;
  9023                           
  9024                           	psect	text29
  9025  004CBC                     __ptext29:
  9026                           	opt stack 0
  9027  004CBC                     ___awdiv:
  9028                           	opt stack 18
  9029                           
  9030                           ; BSR set to: 0
  9031                           ;incstack = 0
  9032  004CBC  0E00               	movlw	0
  9033  004CBE  0100               	movlb	0	; () banked
  9034  004CC0  6F9A               	movwf	___awdiv@sign& (0+255),b
  9035                           
  9036                           ; BSR set to: 0
  9037  004CC2  0100               	movlb	0	; () banked
  9038  004CC4  AF98               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9039  004CC6  D008               	goto	l8659
  9040                           
  9041                           ; BSR set to: 0
  9042  004CC8  0100               	movlb	0	; () banked
  9043  004CCA  6D97               	negf	___awdiv@divisor& (0+255),b
  9044  004CCC  1F98               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9045  004CCE  B0D8               	btfsc	status,0,c
  9046  004CD0  2B98               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9047                           
  9048                           ; BSR set to: 0
  9049  004CD2  0E01               	movlw	1
  9050  004CD4  0100               	movlb	0	; () banked
  9051  004CD6  6F9A               	movwf	___awdiv@sign& (0+255),b
  9052  004CD8                     l8659:
  9053                           
  9054                           ; BSR set to: 0
  9055  004CD8  0100               	movlb	0	; () banked
  9056  004CDA  AF96               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9057  004CDC  D008               	goto	l8665
  9058                           
  9059                           ; BSR set to: 0
  9060  004CDE  0100               	movlb	0	; () banked
  9061  004CE0  6D95               	negf	___awdiv@dividend& (0+255),b
  9062  004CE2  1F96               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9063  004CE4  B0D8               	btfsc	status,0,c
  9064  004CE6  2B96               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9065                           
  9066                           ; BSR set to: 0
  9067  004CE8  0E01               	movlw	1
  9068  004CEA  0100               	movlb	0	; () banked
  9069  004CEC  1B9A               	xorwf	___awdiv@sign& (0+255),f,b
  9070  004CEE                     l8665:
  9071                           
  9072                           ; BSR set to: 0
  9073  004CEE  0E00               	movlw	0
  9074  004CF0  0100               	movlb	0	; () banked
  9075  004CF2  6F9C               	movwf	(___awdiv@quotient+1)& (0+255),b
  9076  004CF4  0E00               	movlw	0
  9077  004CF6  6F9B               	movwf	___awdiv@quotient& (0+255),b
  9078                           
  9079                           ; BSR set to: 0
  9080  004CF8  0100               	movlb	0	; () banked
  9081  004CFA  5197               	movf	___awdiv@divisor& (0+255),w,b
  9082  004CFC  0100               	movlb	0	; () banked
  9083  004CFE  1198               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9084  004D00  B4D8               	btfsc	status,2,c
  9085  004D02  D02C               	goto	l8687
  9086                           
  9087                           ; BSR set to: 0
  9088  004D04  0E01               	movlw	1
  9089  004D06  0100               	movlb	0	; () banked
  9090  004D08  6F99               	movwf	___awdiv@counter& (0+255),b
  9091  004D0A  D006               	goto	l8673
  9092  004D0C                     l8671:
  9093                           
  9094                           ; BSR set to: 0
  9095  004D0C  0100               	movlb	0	; () banked
  9096  004D0E  90D8               	bcf	status,0,c
  9097  004D10  3797               	rlcf	___awdiv@divisor& (0+255),f,b
  9098  004D12  3798               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9099  004D14  0100               	movlb	0	; () banked
  9100  004D16  2B99               	incf	___awdiv@counter& (0+255),f,b
  9101  004D18                     l8673:
  9102                           
  9103                           ; BSR set to: 0
  9104  004D18  0100               	movlb	0	; () banked
  9105  004D1A  AF98               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9106  004D1C  D7F7               	goto	l8671
  9107  004D1E                     l8675:
  9108                           
  9109                           ; BSR set to: 0
  9110  004D1E  0100               	movlb	0	; () banked
  9111  004D20  90D8               	bcf	status,0,c
  9112  004D22  379B               	rlcf	___awdiv@quotient& (0+255),f,b
  9113  004D24  379C               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9114                           
  9115                           ; BSR set to: 0
  9116  004D26  0100               	movlb	0	; () banked
  9117  004D28  5197               	movf	___awdiv@divisor& (0+255),w,b
  9118  004D2A  0100               	movlb	0	; () banked
  9119  004D2C  5D95               	subwf	___awdiv@dividend& (0+255),w,b
  9120  004D2E  0100               	movlb	0	; () banked
  9121  004D30  5198               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9122  004D32  0100               	movlb	0	; () banked
  9123  004D34  5996               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9124  004D36  A0D8               	btfss	status,0,c
  9125  004D38  D00A               	goto	l8683
  9126                           
  9127                           ; BSR set to: 0
  9128  004D3A  0100               	movlb	0	; () banked
  9129  004D3C  5197               	movf	___awdiv@divisor& (0+255),w,b
  9130  004D3E  0100               	movlb	0	; () banked
  9131  004D40  5F95               	subwf	___awdiv@dividend& (0+255),f,b
  9132  004D42  0100               	movlb	0	; () banked
  9133  004D44  5198               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9134  004D46  0100               	movlb	0	; () banked
  9135  004D48  5B96               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9136                           
  9137                           ; BSR set to: 0
  9138  004D4A  0100               	movlb	0	; () banked
  9139  004D4C  819B               	bsf	___awdiv@quotient& (0+255),0,b
  9140  004D4E                     l8683:
  9141                           
  9142                           ; BSR set to: 0
  9143  004D4E  0100               	movlb	0	; () banked
  9144  004D50  90D8               	bcf	status,0,c
  9145  004D52  3398               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9146  004D54  3397               	rrcf	___awdiv@divisor& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 0
  9149  004D56  0100               	movlb	0	; () banked
  9150  004D58  2F99               	decfsz	___awdiv@counter& (0+255),f,b
  9151  004D5A  D7E1               	goto	l8675
  9152  004D5C                     l8687:
  9153                           
  9154                           ; BSR set to: 0
  9155  004D5C  0100               	movlb	0	; () banked
  9156  004D5E  519A               	movf	___awdiv@sign& (0+255),w,b
  9157  004D60  0100               	movlb	0	; () banked
  9158  004D62  B4D8               	btfsc	status,2,c
  9159  004D64  D005               	goto	l8691
  9160                           
  9161                           ; BSR set to: 0
  9162  004D66  0100               	movlb	0	; () banked
  9163  004D68  6D9B               	negf	___awdiv@quotient& (0+255),b
  9164  004D6A  1F9C               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9165  004D6C  B0D8               	btfsc	status,0,c
  9166  004D6E  2B9C               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9167  004D70                     l8691:
  9168                           
  9169                           ; BSR set to: 0
  9170  004D70  C09B  F095         	movff	___awdiv@quotient,?___awdiv
  9171  004D74  C09C  F096         	movff	___awdiv@quotient+1,?___awdiv+1
  9172  004D78  0012               	return	
  9173  004D7A                     __end_of___awdiv:
  9174                           	opt stack 0
  9175                           tblptru	equ	0xFF8
  9176                           tblptrh	equ	0xFF7
  9177                           tblptrl	equ	0xFF6
  9178                           tablat	equ	0xFF5
  9179                           prodh	equ	0xFF4
  9180                           prodl	equ	0xFF3
  9181                           intcon	equ	0xFF2
  9182                           postinc0	equ	0xFEE
  9183                           wreg	equ	0xFE8
  9184                           postdec1	equ	0xFE5
  9185                           fsr1l	equ	0xFE1
  9186                           indf2	equ	0xFDF
  9187                           postinc2	equ	0xFDE
  9188                           postdec2	equ	0xFDD
  9189                           fsr2h	equ	0xFDA
  9190                           fsr2l	equ	0xFD9
  9191                           status	equ	0xFD8
  9192                           
  9193 ;; *************** function __tdiv_to_l_ *****************
  9194 ;; Defined at:
  9195 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  9196 ;; Parameters:    Size  Location     Type
  9197 ;;  f1              4   47[BANK0 ] float 
  9198 ;;  f2              4   51[BANK0 ] float 
  9199 ;; Auto vars:     Size  Location     Type
  9200 ;;  quot            4   58[BANK0 ] unsigned long 
  9201 ;;  exp1            1   63[BANK0 ] unsigned char 
  9202 ;;  cntr            1   62[BANK0 ] unsigned char 
  9203 ;; Return value:  Size  Location     Type
  9204 ;;                  4   47[BANK0 ] unsigned long 
  9205 ;; Registers used:
  9206 ;;		wreg, status,2, status,0
  9207 ;; Tracked objects:
  9208 ;;		On entry : 0/0
  9209 ;;		On exit  : 0/0
  9210 ;;		Unchanged: 0/0
  9211 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9212 ;;      Params:         0       8       0       0       0       0       0
  9213 ;;      Locals:         0       6       0       0       0       0       0
  9214 ;;      Temps:          0       3       0       0       0       0       0
  9215 ;;      Totals:         0      17       0       0       0       0       0
  9216 ;;Total ram usage:       17 bytes
  9217 ;; Hardware stack levels used:    1
  9218 ;; Hardware stack levels required when called:    8
  9219 ;; This function calls:
  9220 ;;		Nothing
  9221 ;; This function is called by:
  9222 ;;		_printf
  9223 ;; This function uses a non-reentrant model
  9224 ;;
  9225                           
  9226                           	psect	text30
  9227  003790                     __ptext30:
  9228                           	opt stack 0
  9229  003790                     __tdiv_to_l_:
  9230                           	opt stack 19
  9231                           
  9232                           ; BSR set to: 0
  9233                           ;incstack = 0
  9234  003790  C091  F097         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9235  003794  0100               	movlb	0	; () banked
  9236  003796  6B98               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9237  003798  6B99               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9238  00379A  0100               	movlb	0	; () banked
  9239  00379C  3590               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9240  00379E  0100               	movlb	0	; () banked
  9241  0037A0  3797               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9242  0037A2  E301               	bnc	u11481
  9243  0037A4  8198               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9244  0037A6                     u11481:
  9245  0037A6  0100               	movlb	0	; () banked
  9246  0037A8  5197               	movf	??__tdiv_to_l_& (0+255),w,b
  9247  0037AA  0100               	movlb	0	; () banked
  9248  0037AC  6F9F               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9249  0037AE  0100               	movlb	0	; () banked
  9250  0037B0  519F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9251  0037B2  A4D8               	btfss	status,2,c
  9252  0037B4  D00A               	goto	l8815
  9253                           
  9254                           ; BSR set to: 0
  9255  0037B6  0E00               	movlw	0
  9256  0037B8  0100               	movlb	0	; () banked
  9257  0037BA  6F8F               	movwf	?__tdiv_to_l_& (0+255),b
  9258  0037BC  0E00               	movlw	0
  9259  0037BE  6F90               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9260  0037C0  0E00               	movlw	0
  9261  0037C2  6F91               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9262  0037C4  0E00               	movlw	0
  9263  0037C6  6F92               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9264                           
  9265                           ; BSR set to: 0
  9266  0037C8  0012               	return	
  9267  0037CA                     l8815:
  9268                           
  9269                           ; BSR set to: 0
  9270  0037CA  C095  F097         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9271  0037CE  0100               	movlb	0	; () banked
  9272  0037D0  6B98               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9273  0037D2  6B99               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9274  0037D4  0100               	movlb	0	; () banked
  9275  0037D6  3594               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9276  0037D8  0100               	movlb	0	; () banked
  9277  0037DA  3797               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9278  0037DC  E301               	bnc	u11501
  9279  0037DE  8198               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9280  0037E0                     u11501:
  9281  0037E0  0100               	movlb	0	; () banked
  9282  0037E2  5197               	movf	??__tdiv_to_l_& (0+255),w,b
  9283  0037E4  0100               	movlb	0	; () banked
  9284  0037E6  6F9E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9285  0037E8  0100               	movlb	0	; () banked
  9286  0037EA  519E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9287  0037EC  A4D8               	btfss	status,2,c
  9288  0037EE  D00A               	goto	l8821
  9289                           
  9290                           ; BSR set to: 0
  9291  0037F0  0E00               	movlw	0
  9292  0037F2  0100               	movlb	0	; () banked
  9293  0037F4  6F8F               	movwf	?__tdiv_to_l_& (0+255),b
  9294  0037F6  0E00               	movlw	0
  9295  0037F8  6F90               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9296  0037FA  0E00               	movlw	0
  9297  0037FC  6F91               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9298  0037FE  0E00               	movlw	0
  9299  003800  6F92               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9300                           
  9301                           ; BSR set to: 0
  9302  003802  0012               	return	
  9303  003804                     l8821:
  9304                           
  9305                           ; BSR set to: 0
  9306  003804  0100               	movlb	0	; () banked
  9307  003806  8F90               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9308                           
  9309                           ; BSR set to: 0
  9310  003808  0EFF               	movlw	255
  9311  00380A  0100               	movlb	0	; () banked
  9312  00380C  178F               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9313  00380E  0EFF               	movlw	255
  9314  003810  0100               	movlb	0	; () banked
  9315  003812  1790               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9316  003814  0E00               	movlw	0
  9317  003816  0100               	movlb	0	; () banked
  9318  003818  1791               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9319  00381A  0100               	movlb	0	; () banked
  9320  00381C  8F94               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9321                           
  9322                           ; BSR set to: 0
  9323  00381E  0EFF               	movlw	255
  9324  003820  0100               	movlb	0	; () banked
  9325  003822  1793               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9326  003824  0EFF               	movlw	255
  9327  003826  0100               	movlb	0	; () banked
  9328  003828  1794               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9329  00382A  0E00               	movlw	0
  9330  00382C  0100               	movlb	0	; () banked
  9331  00382E  1795               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9332                           
  9333                           ; BSR set to: 0
  9334  003830  0E00               	movlw	0
  9335  003832  0100               	movlb	0	; () banked
  9336  003834  6F9A               	movwf	__tdiv_to_l_@quot& (0+255),b
  9337  003836  0E00               	movlw	0
  9338  003838  6F9B               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9339  00383A  0E00               	movlw	0
  9340  00383C  6F9C               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9341  00383E  0E00               	movlw	0
  9342  003840  6F9D               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9343                           
  9344                           ; BSR set to: 0
  9345  003842  0E7F               	movlw	127
  9346  003844  0100               	movlb	0	; () banked
  9347  003846  5F9F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9348                           
  9349                           ; BSR set to: 0
  9350  003848  0100               	movlb	0	; () banked
  9351  00384A  519E               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9352  00384C  0F98               	addlw	152
  9353  00384E  0100               	movlb	0	; () banked
  9354  003850  5F9F               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9355                           
  9356                           ; BSR set to: 0
  9357  003852  0E18               	movlw	24
  9358  003854  0100               	movlb	0	; () banked
  9359  003856  6F9E               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9360  003858                     l1271:
  9361                           
  9362                           ; BSR set to: 0
  9363  003858  0100               	movlb	0	; () banked
  9364  00385A  90D8               	bcf	status,0,c
  9365  00385C  379A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9366  00385E  379B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9367  003860  379C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9368  003862  379D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9369                           
  9370                           ; BSR set to: 0
  9371  003864  0100               	movlb	0	; () banked
  9372  003866  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9373  003868  0100               	movlb	0	; () banked
  9374  00386A  5D8F               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9375  00386C  0100               	movlb	0	; () banked
  9376  00386E  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9377  003870  0100               	movlb	0	; () banked
  9378  003872  5990               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9379  003874  0100               	movlb	0	; () banked
  9380  003876  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9381  003878  0100               	movlb	0	; () banked
  9382  00387A  5991               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9383  00387C  A0D8               	btfss	status,0,c
  9384  00387E  D00E               	goto	l1272
  9385                           
  9386                           ; BSR set to: 0
  9387  003880  0100               	movlb	0	; () banked
  9388  003882  5193               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9389  003884  0100               	movlb	0	; () banked
  9390  003886  5F8F               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9391  003888  0100               	movlb	0	; () banked
  9392  00388A  5194               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9393  00388C  0100               	movlb	0	; () banked
  9394  00388E  5B90               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9395  003890  0100               	movlb	0	; () banked
  9396  003892  5195               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9397  003894  0100               	movlb	0	; () banked
  9398  003896  5B91               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9399                           
  9400                           ; BSR set to: 0
  9401  003898  0100               	movlb	0	; () banked
  9402  00389A  819A               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9403  00389C                     l1272:
  9404                           
  9405                           ; BSR set to: 0
  9406  00389C  0100               	movlb	0	; () banked
  9407  00389E  90D8               	bcf	status,0,c
  9408  0038A0  378F               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9409  0038A2  3790               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9410  0038A4  3791               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9411                           
  9412                           ; BSR set to: 0
  9413  0038A6  0100               	movlb	0	; () banked
  9414  0038A8  2F9E               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9415  0038AA  D7D6               	goto	l1271
  9416                           
  9417                           ; BSR set to: 0
  9418                           
  9419                           ; BSR set to: 0
  9420  0038AC  0100               	movlb	0	; () banked
  9421  0038AE  AF9F               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9422  0038B0  D01A               	goto	l8855
  9423                           
  9424                           ; BSR set to: 0
  9425  0038B2  0100               	movlb	0	; () banked
  9426  0038B4  519F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9427  0038B6  0A80               	xorlw	128
  9428  0038B8  0F97               	addlw	151
  9429  0038BA  B0D8               	btfsc	status,0,c
  9430  0038BC  D00A               	goto	l8851
  9431                           
  9432                           ; BSR set to: 0
  9433  0038BE  0E00               	movlw	0
  9434  0038C0  0100               	movlb	0	; () banked
  9435  0038C2  6F8F               	movwf	?__tdiv_to_l_& (0+255),b
  9436  0038C4  0E00               	movlw	0
  9437  0038C6  6F90               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9438  0038C8  0E00               	movlw	0
  9439  0038CA  6F91               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9440  0038CC  0E00               	movlw	0
  9441  0038CE  6F92               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9442                           
  9443                           ; BSR set to: 0
  9444  0038D0  0012               	return	
  9445  0038D2                     l8851:
  9446                           
  9447                           ; BSR set to: 0
  9448  0038D2  0100               	movlb	0	; () banked
  9449  0038D4  90D8               	bcf	status,0,c
  9450  0038D6  339D               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9451  0038D8  339C               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9452  0038DA  339B               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9453  0038DC  339A               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9454                           
  9455                           ; BSR set to: 0
  9456  0038DE  0100               	movlb	0	; () banked
  9457  0038E0  3F9F               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9458  0038E2  D7F7               	goto	l8851
  9459                           
  9460                           ; BSR set to: 0
  9461  0038E4  D01B               	goto	l1278
  9462  0038E6                     l8855:
  9463                           
  9464                           ; BSR set to: 0
  9465  0038E6  0E17               	movlw	23
  9466  0038E8  0100               	movlb	0	; () banked
  9467  0038EA  659F               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9468  0038EC  D012               	goto	l8863
  9469                           
  9470                           ; BSR set to: 0
  9471  0038EE  0E00               	movlw	0
  9472  0038F0  0100               	movlb	0	; () banked
  9473  0038F2  6F8F               	movwf	?__tdiv_to_l_& (0+255),b
  9474  0038F4  0E00               	movlw	0
  9475  0038F6  6F90               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9476  0038F8  0E00               	movlw	0
  9477  0038FA  6F91               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9478  0038FC  0E00               	movlw	0
  9479  0038FE  6F92               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9480                           
  9481                           ; BSR set to: 0
  9482  003900  0012               	return	
  9483  003902                     l8861:
  9484                           
  9485                           ; BSR set to: 0
  9486  003902  0100               	movlb	0	; () banked
  9487  003904  90D8               	bcf	status,0,c
  9488  003906  379A               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9489  003908  379B               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9490  00390A  379C               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9491  00390C  379D               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9492  00390E  0100               	movlb	0	; () banked
  9493  003910  079F               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9494  003912                     l8863:
  9495                           
  9496                           ; BSR set to: 0
  9497  003912  0100               	movlb	0	; () banked
  9498  003914  519F               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9499  003916  0100               	movlb	0	; () banked
  9500  003918  A4D8               	btfss	status,2,c
  9501  00391A  D7F3               	goto	l8861
  9502  00391C                     l1278:
  9503                           
  9504                           ; BSR set to: 0
  9505  00391C  C09A  F08F         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9506  003920  C09B  F090         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9507  003924  C09C  F091         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9508  003928  C09D  F092         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9509                           
  9510                           ; BSR set to: 0
  9511  00392C  0012               	return		;funcret
  9512  00392E                     __end_of__tdiv_to_l_:
  9513                           	opt stack 0
  9514                           tblptru	equ	0xFF8
  9515                           tblptrh	equ	0xFF7
  9516                           tblptrl	equ	0xFF6
  9517                           tablat	equ	0xFF5
  9518                           prodh	equ	0xFF4
  9519                           prodl	equ	0xFF3
  9520                           intcon	equ	0xFF2
  9521                           postinc0	equ	0xFEE
  9522                           wreg	equ	0xFE8
  9523                           postdec1	equ	0xFE5
  9524                           fsr1l	equ	0xFE1
  9525                           indf2	equ	0xFDF
  9526                           postinc2	equ	0xFDE
  9527                           postdec2	equ	0xFDD
  9528                           fsr2h	equ	0xFDA
  9529                           fsr2l	equ	0xFD9
  9530                           status	equ	0xFD8
  9531                           
  9532 ;; *************** function __div_to_l_ *****************
  9533 ;; Defined at:
  9534 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  9535 ;; Parameters:    Size  Location     Type
  9536 ;;  f1              4   47[BANK0 ] unsigned long 
  9537 ;;  f2              4   51[BANK0 ] unsigned long 
  9538 ;; Auto vars:     Size  Location     Type
  9539 ;;  quot            4   55[BANK0 ] unsigned long 
  9540 ;;  exp1            1   60[BANK0 ] unsigned char 
  9541 ;;  cntr            1   59[BANK0 ] unsigned char 
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  4   47[BANK0 ] unsigned long 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9551 ;;      Params:         0       8       0       0       0       0       0
  9552 ;;      Locals:         0       6       0       0       0       0       0
  9553 ;;      Temps:          0       0       0       0       0       0       0
  9554 ;;      Totals:         0      14       0       0       0       0       0
  9555 ;;Total ram usage:       14 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    8
  9558 ;; This function calls:
  9559 ;;		Nothing
  9560 ;; This function is called by:
  9561 ;;		_printf
  9562 ;; This function uses a non-reentrant model
  9563 ;;
  9564                           
  9565                           	psect	text31
  9566  003C48                     __ptext31:
  9567                           	opt stack 0
  9568  003C48                     __div_to_l_:
  9569                           	opt stack 19
  9570                           
  9571                           ; BSR set to: 0
  9572                           ;incstack = 0
  9573  003C48  0100               	movlb	0	; () banked
  9574  003C4A  3591               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9575  003C4C  3592               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9576  003C4E  0100               	movlb	0	; () banked
  9577  003C50  6F9C               	movwf	__div_to_l_@exp1& (0+255),b
  9578  003C52  0100               	movlb	0	; () banked
  9579  003C54  519C               	movf	__div_to_l_@exp1& (0+255),w,b
  9580  003C56  A4D8               	btfss	status,2,c
  9581  003C58  D00A               	goto	l8871
  9582                           
  9583                           ; BSR set to: 0
  9584  003C5A  0E00               	movlw	0
  9585  003C5C  0100               	movlb	0	; () banked
  9586  003C5E  6F8F               	movwf	?__div_to_l_& (0+255),b
  9587  003C60  0E00               	movlw	0
  9588  003C62  6F90               	movwf	(?__div_to_l_+1)& (0+255),b
  9589  003C64  0E00               	movlw	0
  9590  003C66  6F91               	movwf	(?__div_to_l_+2)& (0+255),b
  9591  003C68  0E00               	movlw	0
  9592  003C6A  6F92               	movwf	(?__div_to_l_+3)& (0+255),b
  9593                           
  9594                           ; BSR set to: 0
  9595  003C6C  0012               	return	
  9596  003C6E                     l8871:
  9597                           
  9598                           ; BSR set to: 0
  9599  003C6E  0100               	movlb	0	; () banked
  9600  003C70  3595               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9601  003C72  3596               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9602  003C74  0100               	movlb	0	; () banked
  9603  003C76  6F9B               	movwf	__div_to_l_@cntr& (0+255),b
  9604  003C78  0100               	movlb	0	; () banked
  9605  003C7A  519B               	movf	__div_to_l_@cntr& (0+255),w,b
  9606  003C7C  A4D8               	btfss	status,2,c
  9607  003C7E  D00A               	goto	l8877
  9608                           
  9609                           ; BSR set to: 0
  9610  003C80  0E00               	movlw	0
  9611  003C82  0100               	movlb	0	; () banked
  9612  003C84  6F8F               	movwf	?__div_to_l_& (0+255),b
  9613  003C86  0E00               	movlw	0
  9614  003C88  6F90               	movwf	(?__div_to_l_+1)& (0+255),b
  9615  003C8A  0E00               	movlw	0
  9616  003C8C  6F91               	movwf	(?__div_to_l_+2)& (0+255),b
  9617  003C8E  0E00               	movlw	0
  9618  003C90  6F92               	movwf	(?__div_to_l_+3)& (0+255),b
  9619                           
  9620                           ; BSR set to: 0
  9621  003C92  0012               	return	
  9622  003C94                     l8877:
  9623                           
  9624                           ; BSR set to: 0
  9625  003C94  0100               	movlb	0	; () banked
  9626  003C96  8F91               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9627                           
  9628                           ; BSR set to: 0
  9629  003C98  0EFF               	movlw	255
  9630  003C9A  0100               	movlb	0	; () banked
  9631  003C9C  178F               	andwf	__div_to_l_@f1& (0+255),f,b
  9632  003C9E  0EFF               	movlw	255
  9633  003CA0  1790               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9634  003CA2  0EFF               	movlw	255
  9635  003CA4  1791               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9636  003CA6  0E00               	movlw	0
  9637  003CA8  1792               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9638                           
  9639                           ; BSR set to: 0
  9640  003CAA  0100               	movlb	0	; () banked
  9641  003CAC  8F95               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9642  003CAE  0EFF               	movlw	255
  9643  003CB0  0100               	movlb	0	; () banked
  9644  003CB2  1793               	andwf	__div_to_l_@f2& (0+255),f,b
  9645  003CB4  0EFF               	movlw	255
  9646  003CB6  1794               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9647  003CB8  0EFF               	movlw	255
  9648  003CBA  1795               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9649  003CBC  0E00               	movlw	0
  9650  003CBE  1796               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9651                           
  9652                           ; BSR set to: 0
  9653  003CC0  0E00               	movlw	0
  9654  003CC2  0100               	movlb	0	; () banked
  9655  003CC4  6F97               	movwf	__div_to_l_@quot& (0+255),b
  9656  003CC6  0E00               	movlw	0
  9657  003CC8  6F98               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9658  003CCA  0E00               	movlw	0
  9659  003CCC  6F99               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9660  003CCE  0E00               	movlw	0
  9661  003CD0  6F9A               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9662                           
  9663                           ; BSR set to: 0
  9664  003CD2  0E7F               	movlw	127
  9665  003CD4  0100               	movlb	0	; () banked
  9666  003CD6  5F9C               	subwf	__div_to_l_@exp1& (0+255),f,b
  9667                           
  9668                           ; BSR set to: 0
  9669  003CD8  0100               	movlb	0	; () banked
  9670  003CDA  519B               	movf	__div_to_l_@cntr& (0+255),w,b
  9671  003CDC  0FA0               	addlw	160
  9672  003CDE  0100               	movlb	0	; () banked
  9673  003CE0  5F9C               	subwf	__div_to_l_@exp1& (0+255),f,b
  9674                           
  9675                           ; BSR set to: 0
  9676  003CE2  0E20               	movlw	32
  9677  003CE4  0100               	movlb	0	; () banked
  9678  003CE6  6F9B               	movwf	__div_to_l_@cntr& (0+255),b
  9679  003CE8                     l8891:
  9680                           
  9681                           ; BSR set to: 0
  9682  003CE8  0100               	movlb	0	; () banked
  9683  003CEA  90D8               	bcf	status,0,c
  9684  003CEC  3797               	rlcf	__div_to_l_@quot& (0+255),f,b
  9685  003CEE  3798               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9686  003CF0  3799               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9687  003CF2  379A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9688                           
  9689                           ; BSR set to: 0
  9690  003CF4  0100               	movlb	0	; () banked
  9691  003CF6  5193               	movf	__div_to_l_@f2& (0+255),w,b
  9692  003CF8  0100               	movlb	0	; () banked
  9693  003CFA  5D8F               	subwf	__div_to_l_@f1& (0+255),w,b
  9694  003CFC  0100               	movlb	0	; () banked
  9695  003CFE  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9696  003D00  0100               	movlb	0	; () banked
  9697  003D02  5990               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9698  003D04  0100               	movlb	0	; () banked
  9699  003D06  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9700  003D08  0100               	movlb	0	; () banked
  9701  003D0A  5991               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9702  003D0C  0100               	movlb	0	; () banked
  9703  003D0E  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9704  003D10  0100               	movlb	0	; () banked
  9705  003D12  5992               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9706  003D14  A0D8               	btfss	status,0,c
  9707  003D16  D012               	goto	l8899
  9708                           
  9709                           ; BSR set to: 0
  9710  003D18  0100               	movlb	0	; () banked
  9711  003D1A  5193               	movf	__div_to_l_@f2& (0+255),w,b
  9712  003D1C  0100               	movlb	0	; () banked
  9713  003D1E  5F8F               	subwf	__div_to_l_@f1& (0+255),f,b
  9714  003D20  0100               	movlb	0	; () banked
  9715  003D22  5194               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9716  003D24  0100               	movlb	0	; () banked
  9717  003D26  5B90               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9718  003D28  0100               	movlb	0	; () banked
  9719  003D2A  5195               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9720  003D2C  0100               	movlb	0	; () banked
  9721  003D2E  5B91               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9722  003D30  0100               	movlb	0	; () banked
  9723  003D32  5196               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9724  003D34  0100               	movlb	0	; () banked
  9725  003D36  5B92               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9726                           
  9727                           ; BSR set to: 0
  9728  003D38  0100               	movlb	0	; () banked
  9729  003D3A  8197               	bsf	__div_to_l_@quot& (0+255),0,b
  9730  003D3C                     l8899:
  9731                           
  9732                           ; BSR set to: 0
  9733  003D3C  0100               	movlb	0	; () banked
  9734  003D3E  90D8               	bcf	status,0,c
  9735  003D40  378F               	rlcf	__div_to_l_@f1& (0+255),f,b
  9736  003D42  3790               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9737  003D44  3791               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9738  003D46  3792               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9739                           
  9740                           ; BSR set to: 0
  9741  003D48  0100               	movlb	0	; () banked
  9742  003D4A  2F9B               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9743  003D4C  D7CD               	goto	l8891
  9744                           
  9745                           ; BSR set to: 0
  9746                           
  9747                           ; BSR set to: 0
  9748  003D4E  0100               	movlb	0	; () banked
  9749  003D50  AF9C               	btfss	__div_to_l_@exp1& (0+255),7,b
  9750  003D52  D01A               	goto	l8915
  9751                           
  9752                           ; BSR set to: 0
  9753  003D54  0100               	movlb	0	; () banked
  9754  003D56  519C               	movf	__div_to_l_@exp1& (0+255),w,b
  9755  003D58  0A80               	xorlw	128
  9756  003D5A  0F9F               	addlw	159
  9757  003D5C  B0D8               	btfsc	status,0,c
  9758  003D5E  D00A               	goto	l8911
  9759                           
  9760                           ; BSR set to: 0
  9761  003D60  0E00               	movlw	0
  9762  003D62  0100               	movlb	0	; () banked
  9763  003D64  6F8F               	movwf	?__div_to_l_& (0+255),b
  9764  003D66  0E00               	movlw	0
  9765  003D68  6F90               	movwf	(?__div_to_l_+1)& (0+255),b
  9766  003D6A  0E00               	movlw	0
  9767  003D6C  6F91               	movwf	(?__div_to_l_+2)& (0+255),b
  9768  003D6E  0E00               	movlw	0
  9769  003D70  6F92               	movwf	(?__div_to_l_+3)& (0+255),b
  9770                           
  9771                           ; BSR set to: 0
  9772  003D72  0012               	return	
  9773  003D74                     l8911:
  9774                           
  9775                           ; BSR set to: 0
  9776  003D74  0100               	movlb	0	; () banked
  9777  003D76  90D8               	bcf	status,0,c
  9778  003D78  339A               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9779  003D7A  3399               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9780  003D7C  3398               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9781  003D7E  3397               	rrcf	__div_to_l_@quot& (0+255),f,b
  9782                           
  9783                           ; BSR set to: 0
  9784  003D80  0100               	movlb	0	; () banked
  9785  003D82  3F9C               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9786  003D84  D7F7               	goto	l8911
  9787                           
  9788                           ; BSR set to: 0
  9789  003D86  D01B               	goto	l1174
  9790  003D88                     l8915:
  9791                           
  9792                           ; BSR set to: 0
  9793  003D88  0E1F               	movlw	31
  9794  003D8A  0100               	movlb	0	; () banked
  9795  003D8C  659C               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9796  003D8E  D012               	goto	l8923
  9797                           
  9798                           ; BSR set to: 0
  9799  003D90  0E00               	movlw	0
  9800  003D92  0100               	movlb	0	; () banked
  9801  003D94  6F8F               	movwf	?__div_to_l_& (0+255),b
  9802  003D96  0E00               	movlw	0
  9803  003D98  6F90               	movwf	(?__div_to_l_+1)& (0+255),b
  9804  003D9A  0E00               	movlw	0
  9805  003D9C  6F91               	movwf	(?__div_to_l_+2)& (0+255),b
  9806  003D9E  0E00               	movlw	0
  9807  003DA0  6F92               	movwf	(?__div_to_l_+3)& (0+255),b
  9808                           
  9809                           ; BSR set to: 0
  9810  003DA2  0012               	return	
  9811  003DA4                     l8921:
  9812                           
  9813                           ; BSR set to: 0
  9814  003DA4  0100               	movlb	0	; () banked
  9815  003DA6  90D8               	bcf	status,0,c
  9816  003DA8  3797               	rlcf	__div_to_l_@quot& (0+255),f,b
  9817  003DAA  3798               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9818  003DAC  3799               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9819  003DAE  379A               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9820  003DB0  0100               	movlb	0	; () banked
  9821  003DB2  079C               	decf	__div_to_l_@exp1& (0+255),f,b
  9822  003DB4                     l8923:
  9823                           
  9824                           ; BSR set to: 0
  9825  003DB4  0100               	movlb	0	; () banked
  9826  003DB6  519C               	movf	__div_to_l_@exp1& (0+255),w,b
  9827  003DB8  0100               	movlb	0	; () banked
  9828  003DBA  A4D8               	btfss	status,2,c
  9829  003DBC  D7F3               	goto	l8921
  9830  003DBE                     l1174:
  9831                           
  9832                           ; BSR set to: 0
  9833  003DBE  C097  F08F         	movff	__div_to_l_@quot,?__div_to_l_
  9834  003DC2  C098  F090         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9835  003DC6  C099  F091         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9836  003DCA  C09A  F092         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9837                           
  9838                           ; BSR set to: 0
  9839  003DCE  0012               	return		;funcret
  9840  003DD0                     __end_of__div_to_l_:
  9841                           	opt stack 0
  9842                           tblptru	equ	0xFF8
  9843                           tblptrh	equ	0xFF7
  9844                           tblptrl	equ	0xFF6
  9845                           tablat	equ	0xFF5
  9846                           prodh	equ	0xFF4
  9847                           prodl	equ	0xFF3
  9848                           intcon	equ	0xFF2
  9849                           postinc0	equ	0xFEE
  9850                           wreg	equ	0xFE8
  9851                           postdec1	equ	0xFE5
  9852                           fsr1l	equ	0xFE1
  9853                           indf2	equ	0xFDF
  9854                           postinc2	equ	0xFDE
  9855                           postdec2	equ	0xFDD
  9856                           fsr2h	equ	0xFDA
  9857                           fsr2l	equ	0xFD9
  9858                           status	equ	0xFD8
  9859                           
  9860 ;; *************** function ___wmul *****************
  9861 ;; Defined at:
  9862 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9863 ;; Parameters:    Size  Location     Type
  9864 ;;  multiplier      2   47[BANK0 ] unsigned int 
  9865 ;;  multiplicand    2   49[BANK0 ] unsigned int 
  9866 ;; Auto vars:     Size  Location     Type
  9867 ;;  product         2   51[BANK0 ] unsigned int 
  9868 ;; Return value:  Size  Location     Type
  9869 ;;                  2   47[BANK0 ] unsigned int 
  9870 ;; Registers used:
  9871 ;;		wreg, status,2, status,0, prodl, prodh
  9872 ;; Tracked objects:
  9873 ;;		On entry : 0/0
  9874 ;;		On exit  : 0/0
  9875 ;;		Unchanged: 0/0
  9876 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9877 ;;      Params:         0       4       0       0       0       0       0
  9878 ;;      Locals:         0       2       0       0       0       0       0
  9879 ;;      Temps:          0       0       0       0       0       0       0
  9880 ;;      Totals:         0       6       0       0       0       0       0
  9881 ;;Total ram usage:        6 bytes
  9882 ;; Hardware stack levels used:    1
  9883 ;; Hardware stack levels required when called:    8
  9884 ;; This function calls:
  9885 ;;		Nothing
  9886 ;; This function is called by:
  9887 ;;		_printf
  9888 ;; This function uses a non-reentrant model
  9889 ;;
  9890                           
  9891                           	psect	text32
  9892  005D7E                     __ptext32:
  9893                           	opt stack 0
  9894  005D7E                     ___wmul:
  9895                           	opt stack 19
  9896                           
  9897                           ; BSR set to: 0
  9898                           ;incstack = 0
  9899  005D7E  0100               	movlb	0	; () banked
  9900  005D80  518F               	movf	___wmul@multiplier& (0+255),w,b
  9901  005D82  0100               	movlb	0	; () banked
  9902  005D84  0391               	mulwf	___wmul@multiplicand& (0+255),b
  9903  005D86  CFF3 F093          	movff	prodl,___wmul@product
  9904  005D8A  CFF4 F094          	movff	prodh,___wmul@product+1
  9905  005D8E  0100               	movlb	0	; () banked
  9906  005D90  518F               	movf	___wmul@multiplier& (0+255),w,b
  9907  005D92  0100               	movlb	0	; () banked
  9908  005D94  0392               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9909  005D96  50F3               	movf	prodl,w,c
  9910  005D98  0100               	movlb	0	; () banked
  9911  005D9A  2794               	addwf	(___wmul@product+1)& (0+255),f,b
  9912  005D9C  0100               	movlb	0	; () banked
  9913  005D9E  5190               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9914  005DA0  0100               	movlb	0	; () banked
  9915  005DA2  0391               	mulwf	___wmul@multiplicand& (0+255),b
  9916  005DA4  50F3               	movf	prodl,w,c
  9917  005DA6  0100               	movlb	0	; () banked
  9918  005DA8  2794               	addwf	(___wmul@product+1)& (0+255),f,b
  9919                           
  9920                           ; BSR set to: 0
  9921  005DAA  C093  F08F         	movff	___wmul@product,?___wmul
  9922  005DAE  C094  F090         	movff	___wmul@product+1,?___wmul+1
  9923  005DB2  0012               	return	
  9924  005DB4                     __end_of___wmul:
  9925                           	opt stack 0
  9926                           tblptru	equ	0xFF8
  9927                           tblptrh	equ	0xFF7
  9928                           tblptrl	equ	0xFF6
  9929                           tablat	equ	0xFF5
  9930                           prodh	equ	0xFF4
  9931                           prodl	equ	0xFF3
  9932                           intcon	equ	0xFF2
  9933                           postinc0	equ	0xFEE
  9934                           wreg	equ	0xFE8
  9935                           postdec1	equ	0xFE5
  9936                           fsr1l	equ	0xFE1
  9937                           indf2	equ	0xFDF
  9938                           postinc2	equ	0xFDE
  9939                           postdec2	equ	0xFDD
  9940                           fsr2h	equ	0xFDA
  9941                           fsr2l	equ	0xFD9
  9942                           status	equ	0xFD8
  9943                           
  9944 ;; *************** function ___llmod *****************
  9945 ;; Defined at:
  9946 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  9947 ;; Parameters:    Size  Location     Type
  9948 ;;  dividend        4   60[BANK0 ] unsigned long 
  9949 ;;  divisor         4   64[BANK0 ] unsigned long 
  9950 ;; Auto vars:     Size  Location     Type
  9951 ;;  counter         1   68[BANK0 ] unsigned char 
  9952 ;; Return value:  Size  Location     Type
  9953 ;;                  4   60[BANK0 ] unsigned long 
  9954 ;; Registers used:
  9955 ;;		wreg, status,2, status,0
  9956 ;; Tracked objects:
  9957 ;;		On entry : 0/0
  9958 ;;		On exit  : 0/0
  9959 ;;		Unchanged: 0/0
  9960 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9961 ;;      Params:         0       8       0       0       0       0       0
  9962 ;;      Locals:         0       1       0       0       0       0       0
  9963 ;;      Temps:          0       0       0       0       0       0       0
  9964 ;;      Totals:         0       9       0       0       0       0       0
  9965 ;;Total ram usage:        9 bytes
  9966 ;; Hardware stack levels used:    1
  9967 ;; Hardware stack levels required when called:    8
  9968 ;; This function calls:
  9969 ;;		Nothing
  9970 ;; This function is called by:
  9971 ;;		_printf
  9972 ;; This function uses a non-reentrant model
  9973 ;;
  9974                           
  9975                           	psect	text33
  9976  005244                     __ptext33:
  9977                           	opt stack 0
  9978  005244                     ___llmod:
  9979                           	opt stack 19
  9980                           
  9981                           ; BSR set to: 0
  9982                           ;incstack = 0
  9983  005244  0100               	movlb	0	; () banked
  9984  005246  51A0               	movf	___llmod@divisor& (0+255),w,b
  9985  005248  0100               	movlb	0	; () banked
  9986  00524A  11A1               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9987  00524C  0100               	movlb	0	; () banked
  9988  00524E  11A2               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9989  005250  0100               	movlb	0	; () banked
  9990  005252  11A3               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9991  005254  B4D8               	btfsc	status,2,c
  9992  005256  D03A               	goto	l1363
  9993                           
  9994                           ; BSR set to: 0
  9995  005258  0E01               	movlw	1
  9996  00525A  0100               	movlb	0	; () banked
  9997  00525C  6FA4               	movwf	___llmod@counter& (0+255),b
  9998  00525E  D008               	goto	l9039
  9999  005260                     l9037:
 10000                           
 10001                           ; BSR set to: 0
 10002  005260  0100               	movlb	0	; () banked
 10003  005262  90D8               	bcf	status,0,c
 10004  005264  37A0               	rlcf	___llmod@divisor& (0+255),f,b
 10005  005266  37A1               	rlcf	(___llmod@divisor+1)& (0+255),f,b
 10006  005268  37A2               	rlcf	(___llmod@divisor+2)& (0+255),f,b
 10007  00526A  37A3               	rlcf	(___llmod@divisor+3)& (0+255),f,b
 10008  00526C  0100               	movlb	0	; () banked
 10009  00526E  2BA4               	incf	___llmod@counter& (0+255),f,b
 10010  005270                     l9039:
 10011                           
 10012                           ; BSR set to: 0
 10013  005270  0100               	movlb	0	; () banked
 10014  005272  AFA3               	btfss	(___llmod@divisor+3)& (0+255),7,b
 10015  005274  D7F5               	goto	l9037
 10016  005276                     l9041:
 10017                           
 10018                           ; BSR set to: 0
 10019  005276  0100               	movlb	0	; () banked
 10020  005278  51A0               	movf	___llmod@divisor& (0+255),w,b
 10021  00527A  0100               	movlb	0	; () banked
 10022  00527C  5D9C               	subwf	___llmod@dividend& (0+255),w,b
 10023  00527E  0100               	movlb	0	; () banked
 10024  005280  51A1               	movf	(___llmod@divisor+1)& (0+255),w,b
 10025  005282  0100               	movlb	0	; () banked
 10026  005284  599D               	subwfb	(___llmod@dividend+1)& (0+255),w,b
 10027  005286  0100               	movlb	0	; () banked
 10028  005288  51A2               	movf	(___llmod@divisor+2)& (0+255),w,b
 10029  00528A  0100               	movlb	0	; () banked
 10030  00528C  599E               	subwfb	(___llmod@dividend+2)& (0+255),w,b
 10031  00528E  0100               	movlb	0	; () banked
 10032  005290  51A3               	movf	(___llmod@divisor+3)& (0+255),w,b
 10033  005292  0100               	movlb	0	; () banked
 10034  005294  599F               	subwfb	(___llmod@dividend+3)& (0+255),w,b
 10035  005296  A0D8               	btfss	status,0,c
 10036  005298  D010               	goto	l9045
 10037                           
 10038                           ; BSR set to: 0
 10039  00529A  0100               	movlb	0	; () banked
 10040  00529C  51A0               	movf	___llmod@divisor& (0+255),w,b
 10041  00529E  0100               	movlb	0	; () banked
 10042  0052A0  5F9C               	subwf	___llmod@dividend& (0+255),f,b
 10043  0052A2  0100               	movlb	0	; () banked
 10044  0052A4  51A1               	movf	(___llmod@divisor+1)& (0+255),w,b
 10045  0052A6  0100               	movlb	0	; () banked
 10046  0052A8  5B9D               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10047  0052AA  0100               	movlb	0	; () banked
 10048  0052AC  51A2               	movf	(___llmod@divisor+2)& (0+255),w,b
 10049  0052AE  0100               	movlb	0	; () banked
 10050  0052B0  5B9E               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10051  0052B2  0100               	movlb	0	; () banked
 10052  0052B4  51A3               	movf	(___llmod@divisor+3)& (0+255),w,b
 10053  0052B6  0100               	movlb	0	; () banked
 10054  0052B8  5B9F               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10055  0052BA                     l9045:
 10056                           
 10057                           ; BSR set to: 0
 10058  0052BA  0100               	movlb	0	; () banked
 10059  0052BC  90D8               	bcf	status,0,c
 10060  0052BE  33A3               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10061  0052C0  33A2               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10062  0052C2  33A1               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10063  0052C4  33A0               	rrcf	___llmod@divisor& (0+255),f,b
 10064                           
 10065                           ; BSR set to: 0
 10066  0052C6  0100               	movlb	0	; () banked
 10067  0052C8  2FA4               	decfsz	___llmod@counter& (0+255),f,b
 10068  0052CA  D7D5               	goto	l9041
 10069  0052CC                     l1363:
 10070                           
 10071                           ; BSR set to: 0
 10072  0052CC  C09C  F09C         	movff	___llmod@dividend,?___llmod
 10073  0052D0  C09D  F09D         	movff	___llmod@dividend+1,?___llmod+1
 10074  0052D4  C09E  F09E         	movff	___llmod@dividend+2,?___llmod+2
 10075  0052D8  C09F  F09F         	movff	___llmod@dividend+3,?___llmod+3
 10076                           
 10077                           ; BSR set to: 0
 10078  0052DC  0012               	return		;funcret
 10079  0052DE                     __end_of___llmod:
 10080                           	opt stack 0
 10081                           tblptru	equ	0xFF8
 10082                           tblptrh	equ	0xFF7
 10083                           tblptrl	equ	0xFF6
 10084                           tablat	equ	0xFF5
 10085                           prodh	equ	0xFF4
 10086                           prodl	equ	0xFF3
 10087                           intcon	equ	0xFF2
 10088                           postinc0	equ	0xFEE
 10089                           wreg	equ	0xFE8
 10090                           postdec1	equ	0xFE5
 10091                           fsr1l	equ	0xFE1
 10092                           indf2	equ	0xFDF
 10093                           postinc2	equ	0xFDE
 10094                           postdec2	equ	0xFDD
 10095                           fsr2h	equ	0xFDA
 10096                           fsr2l	equ	0xFD9
 10097                           status	equ	0xFD8
 10098                           
 10099 ;; *************** function ___lldiv *****************
 10100 ;; Defined at:
 10101 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 10102 ;; Parameters:    Size  Location     Type
 10103 ;;  dividend        4   47[BANK0 ] unsigned long 
 10104 ;;  divisor         4   51[BANK0 ] unsigned long 
 10105 ;; Auto vars:     Size  Location     Type
 10106 ;;  quotient        4   55[BANK0 ] unsigned long 
 10107 ;;  counter         1   59[BANK0 ] unsigned char 
 10108 ;; Return value:  Size  Location     Type
 10109 ;;                  4   47[BANK0 ] unsigned long 
 10110 ;; Registers used:
 10111 ;;		wreg, status,2, status,0
 10112 ;; Tracked objects:
 10113 ;;		On entry : 0/0
 10114 ;;		On exit  : 0/0
 10115 ;;		Unchanged: 0/0
 10116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10117 ;;      Params:         0       8       0       0       0       0       0
 10118 ;;      Locals:         0       5       0       0       0       0       0
 10119 ;;      Temps:          0       0       0       0       0       0       0
 10120 ;;      Totals:         0      13       0       0       0       0       0
 10121 ;;Total ram usage:       13 bytes
 10122 ;; Hardware stack levels used:    1
 10123 ;; Hardware stack levels required when called:    8
 10124 ;; This function calls:
 10125 ;;		Nothing
 10126 ;; This function is called by:
 10127 ;;		_printf
 10128 ;; This function uses a non-reentrant model
 10129 ;;
 10130                           
 10131                           	psect	text34
 10132  004E36                     __ptext34:
 10133                           	opt stack 0
 10134  004E36                     ___lldiv:
 10135                           	opt stack 19
 10136                           
 10137                           ; BSR set to: 0
 10138                           ;incstack = 0
 10139  004E36  0E00               	movlw	0
 10140  004E38  0100               	movlb	0	; () banked
 10141  004E3A  6F97               	movwf	___lldiv@quotient& (0+255),b
 10142  004E3C  0E00               	movlw	0
 10143  004E3E  6F98               	movwf	(___lldiv@quotient+1)& (0+255),b
 10144  004E40  0E00               	movlw	0
 10145  004E42  6F99               	movwf	(___lldiv@quotient+2)& (0+255),b
 10146  004E44  0E00               	movlw	0
 10147  004E46  6F9A               	movwf	(___lldiv@quotient+3)& (0+255),b
 10148                           
 10149                           ; BSR set to: 0
 10150  004E48  0100               	movlb	0	; () banked
 10151  004E4A  5193               	movf	___lldiv@divisor& (0+255),w,b
 10152  004E4C  0100               	movlb	0	; () banked
 10153  004E4E  1194               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10154  004E50  0100               	movlb	0	; () banked
 10155  004E52  1195               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10156  004E54  0100               	movlb	0	; () banked
 10157  004E56  1196               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10158  004E58  B4D8               	btfsc	status,2,c
 10159  004E5A  D042               	goto	l1353
 10160                           
 10161                           ; BSR set to: 0
 10162  004E5C  0E01               	movlw	1
 10163  004E5E  0100               	movlb	0	; () banked
 10164  004E60  6F9B               	movwf	___lldiv@counter& (0+255),b
 10165  004E62  D008               	goto	l9019
 10166  004E64                     l9017:
 10167                           
 10168                           ; BSR set to: 0
 10169  004E64  0100               	movlb	0	; () banked
 10170  004E66  90D8               	bcf	status,0,c
 10171  004E68  3793               	rlcf	___lldiv@divisor& (0+255),f,b
 10172  004E6A  3794               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10173  004E6C  3795               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10174  004E6E  3796               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10175  004E70  0100               	movlb	0	; () banked
 10176  004E72  2B9B               	incf	___lldiv@counter& (0+255),f,b
 10177  004E74                     l9019:
 10178                           
 10179                           ; BSR set to: 0
 10180  004E74  0100               	movlb	0	; () banked
 10181  004E76  AF96               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10182  004E78  D7F5               	goto	l9017
 10183  004E7A                     l9021:
 10184                           
 10185                           ; BSR set to: 0
 10186  004E7A  0100               	movlb	0	; () banked
 10187  004E7C  90D8               	bcf	status,0,c
 10188  004E7E  3797               	rlcf	___lldiv@quotient& (0+255),f,b
 10189  004E80  3798               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10190  004E82  3799               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10191  004E84  379A               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10192                           
 10193                           ; BSR set to: 0
 10194  004E86  0100               	movlb	0	; () banked
 10195  004E88  5193               	movf	___lldiv@divisor& (0+255),w,b
 10196  004E8A  0100               	movlb	0	; () banked
 10197  004E8C  5D8F               	subwf	___lldiv@dividend& (0+255),w,b
 10198  004E8E  0100               	movlb	0	; () banked
 10199  004E90  5194               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10200  004E92  0100               	movlb	0	; () banked
 10201  004E94  5990               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10202  004E96  0100               	movlb	0	; () banked
 10203  004E98  5195               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10204  004E9A  0100               	movlb	0	; () banked
 10205  004E9C  5991               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10206  004E9E  0100               	movlb	0	; () banked
 10207  004EA0  5196               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10208  004EA2  0100               	movlb	0	; () banked
 10209  004EA4  5992               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10210  004EA6  A0D8               	btfss	status,0,c
 10211  004EA8  D012               	goto	l9029
 10212                           
 10213                           ; BSR set to: 0
 10214  004EAA  0100               	movlb	0	; () banked
 10215  004EAC  5193               	movf	___lldiv@divisor& (0+255),w,b
 10216  004EAE  0100               	movlb	0	; () banked
 10217  004EB0  5F8F               	subwf	___lldiv@dividend& (0+255),f,b
 10218  004EB2  0100               	movlb	0	; () banked
 10219  004EB4  5194               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10220  004EB6  0100               	movlb	0	; () banked
 10221  004EB8  5B90               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10222  004EBA  0100               	movlb	0	; () banked
 10223  004EBC  5195               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10224  004EBE  0100               	movlb	0	; () banked
 10225  004EC0  5B91               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10226  004EC2  0100               	movlb	0	; () banked
 10227  004EC4  5196               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10228  004EC6  0100               	movlb	0	; () banked
 10229  004EC8  5B92               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10230                           
 10231                           ; BSR set to: 0
 10232  004ECA  0100               	movlb	0	; () banked
 10233  004ECC  8197               	bsf	___lldiv@quotient& (0+255),0,b
 10234  004ECE                     l9029:
 10235                           
 10236                           ; BSR set to: 0
 10237  004ECE  0100               	movlb	0	; () banked
 10238  004ED0  90D8               	bcf	status,0,c
 10239  004ED2  3396               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10240  004ED4  3395               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10241  004ED6  3394               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10242  004ED8  3393               	rrcf	___lldiv@divisor& (0+255),f,b
 10243                           
 10244                           ; BSR set to: 0
 10245  004EDA  0100               	movlb	0	; () banked
 10246  004EDC  2F9B               	decfsz	___lldiv@counter& (0+255),f,b
 10247  004EDE  D7CD               	goto	l9021
 10248  004EE0                     l1353:
 10249                           
 10250                           ; BSR set to: 0
 10251  004EE0  C097  F08F         	movff	___lldiv@quotient,?___lldiv
 10252  004EE4  C098  F090         	movff	___lldiv@quotient+1,?___lldiv+1
 10253  004EE8  C099  F091         	movff	___lldiv@quotient+2,?___lldiv+2
 10254  004EEC  C09A  F092         	movff	___lldiv@quotient+3,?___lldiv+3
 10255                           
 10256                           ; BSR set to: 0
 10257  004EF0  0012               	return		;funcret
 10258  004EF2                     __end_of___lldiv:
 10259                           	opt stack 0
 10260                           tblptru	equ	0xFF8
 10261                           tblptrh	equ	0xFF7
 10262                           tblptrl	equ	0xFF6
 10263                           tablat	equ	0xFF5
 10264                           prodh	equ	0xFF4
 10265                           prodl	equ	0xFF3
 10266                           intcon	equ	0xFF2
 10267                           postinc0	equ	0xFEE
 10268                           wreg	equ	0xFE8
 10269                           postdec1	equ	0xFE5
 10270                           fsr1l	equ	0xFE1
 10271                           indf2	equ	0xFDF
 10272                           postinc2	equ	0xFDE
 10273                           postdec2	equ	0xFDD
 10274                           fsr2h	equ	0xFDA
 10275                           fsr2l	equ	0xFD9
 10276                           status	equ	0xFD8
 10277                           
 10278 ;; *************** function ___flsub *****************
 10279 ;; Defined at:
 10280 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10281 ;; Parameters:    Size  Location     Type
 10282 ;;  b               4   46[BANK1 ] unsigned long 
 10283 ;;  a               4   50[BANK1 ] unsigned long 
 10284 ;; Auto vars:     Size  Location     Type
 10285 ;;		None
 10286 ;; Return value:  Size  Location     Type
 10287 ;;                  4   46[BANK1 ] unsigned long 
 10288 ;; Registers used:
 10289 ;;		wreg, status,2, status,0, cstack
 10290 ;; Tracked objects:
 10291 ;;		On entry : 0/0
 10292 ;;		On exit  : 0/0
 10293 ;;		Unchanged: 0/0
 10294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10295 ;;      Params:         0       0       8       0       0       0       0
 10296 ;;      Locals:         0       0       0       0       0       0       0
 10297 ;;      Temps:          0       0       0       0       0       0       0
 10298 ;;      Totals:         0       0       8       0       0       0       0
 10299 ;;Total ram usage:        8 bytes
 10300 ;; Hardware stack levels used:    1
 10301 ;; Hardware stack levels required when called:    9
 10302 ;; This function calls:
 10303 ;;		___fladd
 10304 ;; This function is called by:
 10305 ;;		_printf
 10306 ;; This function uses a non-reentrant model
 10307 ;;
 10308                           
 10309                           	psect	text35
 10310  005B6C                     __ptext35:
 10311                           	opt stack 0
 10312  005B6C                     ___flsub:
 10313                           	opt stack 18
 10314                           
 10315                           ; BSR set to: 0
 10316                           ;incstack = 0
 10317  005B6C  0E00               	movlw	0
 10318  005B6E  0101               	movlb	1	; () banked
 10319  005B70  1B32               	xorwf	___flsub@a& (0+255),f,b
 10320  005B72  0E00               	movlw	0
 10321  005B74  1B33               	xorwf	(___flsub@a+1)& (0+255),f,b
 10322  005B76  0E00               	movlw	0
 10323  005B78  1B34               	xorwf	(___flsub@a+2)& (0+255),f,b
 10324  005B7A  0E80               	movlw	128
 10325  005B7C  1B35               	xorwf	(___flsub@a+3)& (0+255),f,b
 10326                           
 10327                           ; BSR set to: 1
 10328  005B7E  C12E  F11A         	movff	___flsub@b,___fladd@b
 10329  005B82  C12F  F11B         	movff	___flsub@b+1,___fladd@b+1
 10330  005B86  C130  F11C         	movff	___flsub@b+2,___fladd@b+2
 10331  005B8A  C131  F11D         	movff	___flsub@b+3,___fladd@b+3
 10332  005B8E  C132  F11E         	movff	___flsub@a,___fladd@a
 10333  005B92  C133  F11F         	movff	___flsub@a+1,___fladd@a+1
 10334  005B96  C134  F120         	movff	___flsub@a+2,___fladd@a+2
 10335  005B9A  C135  F121         	movff	___flsub@a+3,___fladd@a+3
 10336  005B9E  EC01  F009         	call	___fladd	;wreg free
 10337  005BA2  C11A  F12E         	movff	?___fladd,?___flsub
 10338  005BA6  C11B  F12F         	movff	?___fladd+1,?___flsub+1
 10339  005BAA  C11C  F130         	movff	?___fladd+2,?___flsub+2
 10340  005BAE  C11D  F131         	movff	?___fladd+3,?___flsub+3
 10341  005BB2  0012               	return	
 10342  005BB4                     __end_of___flsub:
 10343                           	opt stack 0
 10344                           tblptru	equ	0xFF8
 10345                           tblptrh	equ	0xFF7
 10346                           tblptrl	equ	0xFF6
 10347                           tablat	equ	0xFF5
 10348                           prodh	equ	0xFF4
 10349                           prodl	equ	0xFF3
 10350                           intcon	equ	0xFF2
 10351                           postinc0	equ	0xFEE
 10352                           wreg	equ	0xFE8
 10353                           postdec1	equ	0xFE5
 10354                           fsr1l	equ	0xFE1
 10355                           indf2	equ	0xFDF
 10356                           postinc2	equ	0xFDE
 10357                           postdec2	equ	0xFDD
 10358                           fsr2h	equ	0xFDA
 10359                           fsr2l	equ	0xFD9
 10360                           status	equ	0xFD8
 10361                           
 10362 ;; *************** function ___fladd *****************
 10363 ;; Defined at:
 10364 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10365 ;; Parameters:    Size  Location     Type
 10366 ;;  b               4   26[BANK1 ] unsigned long 
 10367 ;;  a               4   30[BANK1 ] unsigned long 
 10368 ;; Auto vars:     Size  Location     Type
 10369 ;;  grs             1   45[BANK1 ] unsigned char 
 10370 ;;  bexp            1   44[BANK1 ] unsigned char 
 10371 ;;  aexp            1   43[BANK1 ] unsigned char 
 10372 ;;  signs           1   42[BANK1 ] unsigned char 
 10373 ;; Return value:  Size  Location     Type
 10374 ;;                  4   26[BANK1 ] unsigned char 
 10375 ;; Registers used:
 10376 ;;		wreg, status,2, status,0
 10377 ;; Tracked objects:
 10378 ;;		On entry : 0/0
 10379 ;;		On exit  : 0/0
 10380 ;;		Unchanged: 0/0
 10381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10382 ;;      Params:         0       0       8       0       0       0       0
 10383 ;;      Locals:         0       0       4       0       0       0       0
 10384 ;;      Temps:          0       0       8       0       0       0       0
 10385 ;;      Totals:         0       0      20       0       0       0       0
 10386 ;;Total ram usage:       20 bytes
 10387 ;; Hardware stack levels used:    1
 10388 ;; Hardware stack levels required when called:    8
 10389 ;; This function calls:
 10390 ;;		Nothing
 10391 ;; This function is called by:
 10392 ;;		_printf
 10393 ;;		___flsub
 10394 ;; This function uses a non-reentrant model
 10395 ;;
 10396                           
 10397                           	psect	text36
 10398  001202                     __ptext36:
 10399                           	opt stack 0
 10400  001202                     ___fladd:
 10401                           	opt stack 18
 10402                           
 10403                           ;incstack = 0
 10404  001202  0101               	movlb	1	; () banked
 10405  001204  511D               	movf	(___fladd@b+3)& (0+255),w,b
 10406  001206  0B80               	andlw	128
 10407  001208  0101               	movlb	1	; () banked
 10408  00120A  6F2A               	movwf	___fladd@signs& (0+255),b
 10409  00120C  0101               	movlb	1	; () banked
 10410  00120E  511D               	movf	(___fladd@b+3)& (0+255),w,b
 10411  001210  251D               	addwf	(___fladd@b+3)& (0+255),w,b
 10412  001212  0101               	movlb	1	; () banked
 10413  001214  6F2C               	movwf	___fladd@bexp& (0+255),b
 10414                           
 10415                           ; BSR set to: 1
 10416  001216  0101               	movlb	1	; () banked
 10417  001218  AF1C               	btfss	(___fladd@b+2)& (0+255),7,b
 10418  00121A  D002               	goto	l8189
 10419                           
 10420                           ; BSR set to: 1
 10421  00121C  0101               	movlb	1	; () banked
 10422  00121E  812C               	bsf	___fladd@bexp& (0+255),0,b
 10423  001220                     l8189:
 10424                           
 10425                           ; BSR set to: 1
 10426  001220  0101               	movlb	1	; () banked
 10427  001222  512C               	movf	___fladd@bexp& (0+255),w,b
 10428  001224  0101               	movlb	1	; () banked
 10429  001226  B4D8               	btfsc	status,2,c
 10430  001228  D012               	goto	l8199
 10431                           
 10432                           ; BSR set to: 1
 10433  00122A  0101               	movlb	1	; () banked
 10434  00122C  292C               	incf	___fladd@bexp& (0+255),w,b
 10435  00122E  A4D8               	btfss	status,2,c
 10436  001230  D009               	goto	l8195
 10437                           
 10438                           ; BSR set to: 1
 10439  001232  0E00               	movlw	0
 10440  001234  0101               	movlb	1	; () banked
 10441  001236  6F1A               	movwf	___fladd@b& (0+255),b
 10442  001238  0E00               	movlw	0
 10443  00123A  6F1B               	movwf	(___fladd@b+1)& (0+255),b
 10444  00123C  0E00               	movlw	0
 10445  00123E  6F1C               	movwf	(___fladd@b+2)& (0+255),b
 10446  001240  0E00               	movlw	0
 10447  001242  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 10448  001244                     l8195:
 10449                           
 10450                           ; BSR set to: 1
 10451  001244  0101               	movlb	1	; () banked
 10452  001246  8F1C               	bsf	(___fladd@b+2)& (0+255),7,b
 10453                           
 10454                           ; BSR set to: 1
 10455  001248  0E00               	movlw	0
 10456  00124A  0101               	movlb	1	; () banked
 10457  00124C  D008               	goto	L6
 10458  00124E                     l8199:
 10459                           
 10460                           ; BSR set to: 1
 10461  00124E  0E00               	movlw	0
 10462  001250  0101               	movlb	1	; () banked
 10463  001252  6F1A               	movwf	___fladd@b& (0+255),b
 10464  001254  0E00               	movlw	0
 10465  001256  6F1B               	movwf	(___fladd@b+1)& (0+255),b
 10466  001258  0E00               	movlw	0
 10467  00125A  6F1C               	movwf	(___fladd@b+2)& (0+255),b
 10468  00125C  0E00               	movlw	0
 10469  00125E                     L6:
 10470  00125E  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 10471                           
 10472                           ; BSR set to: 1
 10473                           
 10474                           ; BSR set to: 1
 10475  001260  0101               	movlb	1	; () banked
 10476  001262  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10477  001264  0B80               	andlw	128
 10478  001266  0101               	movlb	1	; () banked
 10479  001268  6F2B               	movwf	___fladd@aexp& (0+255),b
 10480                           
 10481                           ; BSR set to: 1
 10482  00126A  0101               	movlb	1	; () banked
 10483  00126C  512A               	movf	___fladd@signs& (0+255),w,b
 10484  00126E  0101               	movlb	1	; () banked
 10485  001270  192B               	xorwf	___fladd@aexp& (0+255),w,b
 10486  001272  B4D8               	btfsc	status,2,c
 10487  001274  D002               	goto	l8207
 10488                           
 10489                           ; BSR set to: 1
 10490  001276  0101               	movlb	1	; () banked
 10491  001278  8D2A               	bsf	___fladd@signs& (0+255),6,b
 10492  00127A                     l8207:
 10493                           
 10494                           ; BSR set to: 1
 10495  00127A  0101               	movlb	1	; () banked
 10496  00127C  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10497  00127E  2521               	addwf	(___fladd@a+3)& (0+255),w,b
 10498  001280  0101               	movlb	1	; () banked
 10499  001282  6F2B               	movwf	___fladd@aexp& (0+255),b
 10500                           
 10501                           ; BSR set to: 1
 10502  001284  0101               	movlb	1	; () banked
 10503  001286  AF20               	btfss	(___fladd@a+2)& (0+255),7,b
 10504  001288  D002               	goto	l8213
 10505                           
 10506                           ; BSR set to: 1
 10507  00128A  0101               	movlb	1	; () banked
 10508  00128C  812B               	bsf	___fladd@aexp& (0+255),0,b
 10509  00128E                     l8213:
 10510                           
 10511                           ; BSR set to: 1
 10512  00128E  0101               	movlb	1	; () banked
 10513  001290  512B               	movf	___fladd@aexp& (0+255),w,b
 10514  001292  0101               	movlb	1	; () banked
 10515  001294  B4D8               	btfsc	status,2,c
 10516  001296  D012               	goto	l8223
 10517                           
 10518                           ; BSR set to: 1
 10519  001298  0101               	movlb	1	; () banked
 10520  00129A  292B               	incf	___fladd@aexp& (0+255),w,b
 10521  00129C  A4D8               	btfss	status,2,c
 10522  00129E  D009               	goto	l8219
 10523                           
 10524                           ; BSR set to: 1
 10525  0012A0  0E00               	movlw	0
 10526  0012A2  0101               	movlb	1	; () banked
 10527  0012A4  6F1E               	movwf	___fladd@a& (0+255),b
 10528  0012A6  0E00               	movlw	0
 10529  0012A8  6F1F               	movwf	(___fladd@a+1)& (0+255),b
 10530  0012AA  0E00               	movlw	0
 10531  0012AC  6F20               	movwf	(___fladd@a+2)& (0+255),b
 10532  0012AE  0E00               	movlw	0
 10533  0012B0  6F21               	movwf	(___fladd@a+3)& (0+255),b
 10534  0012B2                     l8219:
 10535                           
 10536                           ; BSR set to: 1
 10537  0012B2  0101               	movlb	1	; () banked
 10538  0012B4  8F20               	bsf	(___fladd@a+2)& (0+255),7,b
 10539                           
 10540                           ; BSR set to: 1
 10541  0012B6  0E00               	movlw	0
 10542  0012B8  0101               	movlb	1	; () banked
 10543  0012BA  D008               	goto	L7
 10544  0012BC                     l8223:
 10545                           
 10546                           ; BSR set to: 1
 10547  0012BC  0E00               	movlw	0
 10548  0012BE  0101               	movlb	1	; () banked
 10549  0012C0  6F1E               	movwf	___fladd@a& (0+255),b
 10550  0012C2  0E00               	movlw	0
 10551  0012C4  6F1F               	movwf	(___fladd@a+1)& (0+255),b
 10552  0012C6  0E00               	movlw	0
 10553  0012C8  6F20               	movwf	(___fladd@a+2)& (0+255),b
 10554  0012CA  0E00               	movlw	0
 10555  0012CC                     L7:
 10556  0012CC  6F21               	movwf	(___fladd@a+3)& (0+255),b
 10557                           
 10558                           ; BSR set to: 1
 10559                           
 10560                           ; BSR set to: 1
 10561  0012CE  0101               	movlb	1	; () banked
 10562  0012D0  512C               	movf	___fladd@bexp& (0+255),w,b
 10563  0012D2  0101               	movlb	1	; () banked
 10564  0012D4  5D2B               	subwf	___fladd@aexp& (0+255),w,b
 10565  0012D6  B0D8               	btfsc	status,0,c
 10566  0012D8  D024               	goto	l8261
 10567                           
 10568                           ; BSR set to: 1
 10569  0012DA  0101               	movlb	1	; () banked
 10570  0012DC  AD2A               	btfss	___fladd@signs& (0+255),6,b
 10571  0012DE  D003               	goto	l8231
 10572                           
 10573                           ; BSR set to: 1
 10574  0012E0  0E80               	movlw	128
 10575  0012E2  0101               	movlb	1	; () banked
 10576  0012E4  1B2A               	xorwf	___fladd@signs& (0+255),f,b
 10577  0012E6                     l8231:
 10578                           
 10579                           ; BSR set to: 1
 10580  0012E6  C12C  F12D         	movff	___fladd@bexp,___fladd@grs
 10581                           
 10582                           ; BSR set to: 1
 10583  0012EA  C12B  F12C         	movff	___fladd@aexp,___fladd@bexp
 10584                           
 10585                           ; BSR set to: 1
 10586  0012EE  C12D  F12B         	movff	___fladd@grs,___fladd@aexp
 10587                           
 10588                           ; BSR set to: 1
 10589  0012F2  C11A  F12D         	movff	___fladd@b,___fladd@grs
 10590                           
 10591                           ; BSR set to: 1
 10592  0012F6  C11E  F11A         	movff	___fladd@a,___fladd@b
 10593                           
 10594                           ; BSR set to: 1
 10595  0012FA  C12D  F11E         	movff	___fladd@grs,___fladd@a
 10596                           
 10597                           ; BSR set to: 1
 10598  0012FE  C11B  F12D         	movff	___fladd@b+1,___fladd@grs
 10599                           
 10600                           ; BSR set to: 1
 10601  001302  C11F  F11B         	movff	___fladd@a+1,___fladd@b+1
 10602                           
 10603                           ; BSR set to: 1
 10604  001306  C12D  F11F         	movff	___fladd@grs,___fladd@a+1
 10605                           
 10606                           ; BSR set to: 1
 10607  00130A  C11C  F12D         	movff	___fladd@b+2,___fladd@grs
 10608                           
 10609                           ; BSR set to: 1
 10610  00130E  C120  F11C         	movff	___fladd@a+2,___fladd@b+2
 10611                           
 10612                           ; BSR set to: 1
 10613  001312  C12D  F120         	movff	___fladd@grs,___fladd@a+2
 10614                           
 10615                           ; BSR set to: 1
 10616  001316  C11D  F12D         	movff	___fladd@b+3,___fladd@grs
 10617                           
 10618                           ; BSR set to: 1
 10619  00131A  C121  F11D         	movff	___fladd@a+3,___fladd@b+3
 10620                           
 10621                           ; BSR set to: 1
 10622  00131E  C12D  F121         	movff	___fladd@grs,___fladd@a+3
 10623  001322                     l8261:
 10624                           
 10625                           ; BSR set to: 1
 10626  001322  0E00               	movlw	0
 10627  001324  0101               	movlb	1	; () banked
 10628  001326  6F2D               	movwf	___fladd@grs& (0+255),b
 10629                           
 10630                           ; BSR set to: 1
 10631  001328  0101               	movlb	1	; () banked
 10632  00132A  512C               	movf	___fladd@bexp& (0+255),w,b
 10633  00132C  0101               	movlb	1	; () banked
 10634  00132E  6F22               	movwf	??___fladd& (0+255),b
 10635  001330  6B23               	clrf	(??___fladd+1)& (0+255),b
 10636  001332  0101               	movlb	1	; () banked
 10637  001334  1F22               	comf	??___fladd& (0+255),f,b
 10638  001336  1F23               	comf	(??___fladd+1)& (0+255),f,b
 10639  001338  4B22               	infsnz	??___fladd& (0+255),f,b
 10640  00133A  2B23               	incf	(??___fladd+1)& (0+255),f,b
 10641  00133C  0101               	movlb	1	; () banked
 10642  00133E  512B               	movf	___fladd@aexp& (0+255),w,b
 10643  001340  0101               	movlb	1	; () banked
 10644  001342  6F24               	movwf	(??___fladd+2)& (0+255),b
 10645  001344  6B25               	clrf	(??___fladd+3)& (0+255),b
 10646  001346  0101               	movlb	1	; () banked
 10647  001348  5122               	movf	??___fladd& (0+255),w,b
 10648  00134A  0101               	movlb	1	; () banked
 10649  00134C  2724               	addwf	(??___fladd+2)& (0+255),f,b
 10650  00134E  0101               	movlb	1	; () banked
 10651  001350  5123               	movf	(??___fladd+1)& (0+255),w,b
 10652  001352  0101               	movlb	1	; () banked
 10653  001354  2325               	addwfc	(??___fladd+3)& (0+255),f,b
 10654  001356  0101               	movlb	1	; () banked
 10655  001358  BF25               	btfsc	(??___fladd+3)& (0+255),7,b
 10656  00135A  D03D               	goto	l1448
 10657  00135C  0101               	movlb	1	; () banked
 10658  00135E  5125               	movf	(??___fladd+3)& (0+255),w,b
 10659  001360  E105               	bnz	u10550
 10660  001362  0E1A               	movlw	26
 10661  001364  0101               	movlb	1	; () banked
 10662  001366  5D24               	subwf	(??___fladd+2)& (0+255),w,b
 10663  001368  A0D8               	btfss	status,0,c
 10664  00136A  D035               	goto	l1448
 10665  00136C                     u10550:
 10666                           
 10667                           ; BSR set to: 1
 10668  00136C  0101               	movlb	1	; () banked
 10669  00136E  511A               	movf	___fladd@b& (0+255),w,b
 10670  001370  0101               	movlb	1	; () banked
 10671  001372  111B               	iorwf	(___fladd@b+1)& (0+255),w,b
 10672  001374  0101               	movlb	1	; () banked
 10673  001376  111C               	iorwf	(___fladd@b+2)& (0+255),w,b
 10674  001378  0101               	movlb	1	; () banked
 10675  00137A  111D               	iorwf	(___fladd@b+3)& (0+255),w,b
 10676  00137C  B4D8               	btfsc	status,2,c
 10677  00137E  D002               	goto	u10560
 10678  001380  0E01               	movlw	1
 10679  001382  D001               	goto	u10570
 10680  001384                     u10560:
 10681  001384  0E00               	movlw	0
 10682  001386                     u10570:
 10683  001386  0101               	movlb	1	; () banked
 10684  001388  6F2D               	movwf	___fladd@grs& (0+255),b
 10685                           
 10686                           ; BSR set to: 1
 10687  00138A  0E00               	movlw	0
 10688  00138C  0101               	movlb	1	; () banked
 10689  00138E  6F1A               	movwf	___fladd@b& (0+255),b
 10690  001390  0E00               	movlw	0
 10691  001392  6F1B               	movwf	(___fladd@b+1)& (0+255),b
 10692  001394  0E00               	movlw	0
 10693  001396  6F1C               	movwf	(___fladd@b+2)& (0+255),b
 10694  001398  0E00               	movlw	0
 10695  00139A  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 10696                           
 10697                           ; BSR set to: 1
 10698  00139C  C12B  F12C         	movff	___fladd@aexp,___fladd@bexp
 10699  0013A0  D020               	goto	l1447
 10700  0013A2                     l1449:
 10701                           
 10702                           ; BSR set to: 1
 10703  0013A2  0101               	movlb	1	; () banked
 10704  0013A4  A12D               	btfss	___fladd@grs& (0+255),0,b
 10705  0013A6  D007               	goto	l8273
 10706                           
 10707                           ; BSR set to: 1
 10708  0013A8  0101               	movlb	1	; () banked
 10709  0013AA  90D8               	bcf	status,0,c
 10710  0013AC  312D               	rrcf	___fladd@grs& (0+255),w,b
 10711  0013AE  0901               	iorlw	1
 10712  0013B0  0101               	movlb	1	; () banked
 10713  0013B2  6F2D               	movwf	___fladd@grs& (0+255),b
 10714  0013B4  D003               	goto	l8275
 10715  0013B6                     l8273:
 10716                           
 10717                           ; BSR set to: 1
 10718  0013B6  0101               	movlb	1	; () banked
 10719  0013B8  90D8               	bcf	status,0,c
 10720  0013BA  332D               	rrcf	___fladd@grs& (0+255),f,b
 10721  0013BC                     l8275:
 10722                           
 10723                           ; BSR set to: 1
 10724  0013BC  0101               	movlb	1	; () banked
 10725  0013BE  A11A               	btfss	___fladd@b& (0+255),0,b
 10726  0013C0  D002               	goto	l8279
 10727                           
 10728                           ; BSR set to: 1
 10729  0013C2  0101               	movlb	1	; () banked
 10730  0013C4  8F2D               	bsf	___fladd@grs& (0+255),7,b
 10731  0013C6                     l8279:
 10732                           
 10733                           ; BSR set to: 1
 10734  0013C6  0101               	movlb	1	; () banked
 10735  0013C8  351D               	rlcf	(___fladd@b+3)& (0+255),w,b
 10736  0013CA  331D               	rrcf	(___fladd@b+3)& (0+255),f,b
 10737  0013CC  331C               	rrcf	(___fladd@b+2)& (0+255),f,b
 10738  0013CE  331B               	rrcf	(___fladd@b+1)& (0+255),f,b
 10739  0013D0  331A               	rrcf	___fladd@b& (0+255),f,b
 10740                           
 10741                           ; BSR set to: 1
 10742  0013D2  0101               	movlb	1	; () banked
 10743  0013D4  2B2C               	incf	___fladd@bexp& (0+255),f,b
 10744  0013D6                     l1448:
 10745                           
 10746                           ; BSR set to: 1
 10747  0013D6  0101               	movlb	1	; () banked
 10748  0013D8  512B               	movf	___fladd@aexp& (0+255),w,b
 10749  0013DA  0101               	movlb	1	; () banked
 10750  0013DC  5D2C               	subwf	___fladd@bexp& (0+255),w,b
 10751  0013DE  A0D8               	btfss	status,0,c
 10752  0013E0  D7E0               	goto	l1449
 10753  0013E2                     l1447:
 10754                           
 10755                           ; BSR set to: 1
 10756  0013E2  0101               	movlb	1	; () banked
 10757  0013E4  BD2A               	btfsc	___fladd@signs& (0+255),6,b
 10758  0013E6  D03F               	goto	l8307
 10759                           
 10760                           ; BSR set to: 1
 10761  0013E8  0101               	movlb	1	; () banked
 10762  0013EA  512C               	movf	___fladd@bexp& (0+255),w,b
 10763  0013EC  0101               	movlb	1	; () banked
 10764  0013EE  A4D8               	btfss	status,2,c
 10765  0013F0  D00A               	goto	l8289
 10766                           
 10767                           ; BSR set to: 1
 10768  0013F2  0E00               	movlw	0
 10769  0013F4  0101               	movlb	1	; () banked
 10770  0013F6  6F1A               	movwf	?___fladd& (0+255),b
 10771  0013F8  0E00               	movlw	0
 10772  0013FA  6F1B               	movwf	(?___fladd+1)& (0+255),b
 10773  0013FC  0E00               	movlw	0
 10774  0013FE  6F1C               	movwf	(?___fladd+2)& (0+255),b
 10775  001400  0E00               	movlw	0
 10776  001402  6F1D               	movwf	(?___fladd+3)& (0+255),b
 10777                           
 10778                           ; BSR set to: 1
 10779  001404  0012               	return	
 10780  001406                     l8289:
 10781                           
 10782                           ; BSR set to: 1
 10783  001406  0101               	movlb	1	; () banked
 10784  001408  511E               	movf	___fladd@a& (0+255),w,b
 10785  00140A  0101               	movlb	1	; () banked
 10786  00140C  271A               	addwf	___fladd@b& (0+255),f,b
 10787  00140E  0101               	movlb	1	; () banked
 10788  001410  511F               	movf	(___fladd@a+1)& (0+255),w,b
 10789  001412  0101               	movlb	1	; () banked
 10790  001414  231B               	addwfc	(___fladd@b+1)& (0+255),f,b
 10791  001416  0101               	movlb	1	; () banked
 10792  001418  5120               	movf	(___fladd@a+2)& (0+255),w,b
 10793  00141A  0101               	movlb	1	; () banked
 10794  00141C  231C               	addwfc	(___fladd@b+2)& (0+255),f,b
 10795  00141E  0101               	movlb	1	; () banked
 10796  001420  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10797  001422  0101               	movlb	1	; () banked
 10798  001424  231D               	addwfc	(___fladd@b+3)& (0+255),f,b
 10799                           
 10800                           ; BSR set to: 1
 10801  001426  0101               	movlb	1	; () banked
 10802  001428  A11D               	btfss	(___fladd@b+3)& (0+255),0,b
 10803  00142A  D0CC               	goto	l8343
 10804                           
 10805                           ; BSR set to: 1
 10806  00142C  0101               	movlb	1	; () banked
 10807  00142E  A12D               	btfss	___fladd@grs& (0+255),0,b
 10808  001430  D009               	goto	l8297
 10809                           
 10810                           ; BSR set to: 1
 10811  001432  0101               	movlb	1	; () banked
 10812  001434  90D8               	bcf	status,0,c
 10813  001436  332D               	rrcf	___fladd@grs& (0+255),f,b
 10814  001438  0101               	movlb	1	; () banked
 10815  00143A  512D               	movf	___fladd@grs& (0+255),w,b
 10816  00143C  0901               	iorlw	1
 10817  00143E  0101               	movlb	1	; () banked
 10818  001440  6F2D               	movwf	___fladd@grs& (0+255),b
 10819  001442  D003               	goto	l8299
 10820  001444                     l8297:
 10821                           
 10822                           ; BSR set to: 1
 10823  001444  0101               	movlb	1	; () banked
 10824  001446  90D8               	bcf	status,0,c
 10825  001448  332D               	rrcf	___fladd@grs& (0+255),f,b
 10826  00144A                     l8299:
 10827                           
 10828                           ; BSR set to: 1
 10829  00144A  0101               	movlb	1	; () banked
 10830  00144C  A11A               	btfss	___fladd@b& (0+255),0,b
 10831  00144E  D002               	goto	l8303
 10832                           
 10833                           ; BSR set to: 1
 10834  001450  0101               	movlb	1	; () banked
 10835  001452  8F2D               	bsf	___fladd@grs& (0+255),7,b
 10836  001454                     l8303:
 10837                           
 10838                           ; BSR set to: 1
 10839  001454  0101               	movlb	1	; () banked
 10840  001456  351D               	rlcf	(___fladd@b+3)& (0+255),w,b
 10841  001458  331D               	rrcf	(___fladd@b+3)& (0+255),f,b
 10842  00145A  331C               	rrcf	(___fladd@b+2)& (0+255),f,b
 10843  00145C  331B               	rrcf	(___fladd@b+1)& (0+255),f,b
 10844  00145E  331A               	rrcf	___fladd@b& (0+255),f,b
 10845                           
 10846                           ; BSR set to: 1
 10847  001460  0101               	movlb	1	; () banked
 10848  001462  2B2C               	incf	___fladd@bexp& (0+255),f,b
 10849                           
 10850                           ; BSR set to: 1
 10851  001464  D0AF               	goto	l8343
 10852  001466                     l8307:
 10853                           
 10854                           ; BSR set to: 1
 10855  001466  0101               	movlb	1	; () banked
 10856  001468  511E               	movf	___fladd@a& (0+255),w,b
 10857  00146A  0101               	movlb	1	; () banked
 10858  00146C  5D1A               	subwf	___fladd@b& (0+255),w,b
 10859  00146E  0101               	movlb	1	; () banked
 10860  001470  511F               	movf	(___fladd@a+1)& (0+255),w,b
 10861  001472  0101               	movlb	1	; () banked
 10862  001474  591B               	subwfb	(___fladd@b+1)& (0+255),w,b
 10863  001476  0101               	movlb	1	; () banked
 10864  001478  5120               	movf	(___fladd@a+2)& (0+255),w,b
 10865  00147A  0101               	movlb	1	; () banked
 10866  00147C  591C               	subwfb	(___fladd@b+2)& (0+255),w,b
 10867  00147E  0101               	movlb	1	; () banked
 10868  001480  511D               	movf	(___fladd@b+3)& (0+255),w,b
 10869  001482  0A80               	xorlw	128
 10870  001484  0101               	movlb	1	; () banked
 10871  001486  6F22               	movwf	??___fladd& (0+255),b
 10872  001488  0101               	movlb	1	; () banked
 10873  00148A  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10874  00148C  0A80               	xorlw	128
 10875  00148E  0101               	movlb	1	; () banked
 10876  001490  5922               	subwfb	??___fladd& (0+255),w,b
 10877  001492  B0D8               	btfsc	status,0,c
 10878  001494  D050               	goto	l8317
 10879                           
 10880                           ; BSR set to: 1
 10881  001496  C11A  F122         	movff	___fladd@b,??___fladd
 10882  00149A  C11B  F123         	movff	___fladd@b+1,??___fladd+1
 10883  00149E  C11C  F124         	movff	___fladd@b+2,??___fladd+2
 10884  0014A2  C11D  F125         	movff	___fladd@b+3,??___fladd+3
 10885  0014A6  0101               	movlb	1	; () banked
 10886  0014A8  1F22               	comf	??___fladd& (0+255),f,b
 10887  0014AA  1F23               	comf	(??___fladd+1)& (0+255),f,b
 10888  0014AC  1F24               	comf	(??___fladd+2)& (0+255),f,b
 10889  0014AE  1F25               	comf	(??___fladd+3)& (0+255),f,b
 10890  0014B0  2B22               	incf	??___fladd& (0+255),f,b
 10891  0014B2  0E00               	movlw	0
 10892  0014B4  2323               	addwfc	(??___fladd+1)& (0+255),f,b
 10893  0014B6  2324               	addwfc	(??___fladd+2)& (0+255),f,b
 10894  0014B8  2325               	addwfc	(??___fladd+3)& (0+255),f,b
 10895  0014BA  0101               	movlb	1	; () banked
 10896  0014BC  511E               	movf	___fladd@a& (0+255),w,b
 10897  0014BE  0101               	movlb	1	; () banked
 10898  0014C0  2522               	addwf	??___fladd& (0+255),w,b
 10899  0014C2  0101               	movlb	1	; () banked
 10900  0014C4  6F26               	movwf	(??___fladd+4)& (0+255),b
 10901  0014C6  0101               	movlb	1	; () banked
 10902  0014C8  511F               	movf	(___fladd@a+1)& (0+255),w,b
 10903  0014CA  0101               	movlb	1	; () banked
 10904  0014CC  2123               	addwfc	(??___fladd+1)& (0+255),w,b
 10905  0014CE  0101               	movlb	1	; () banked
 10906  0014D0  6F27               	movwf	(??___fladd+5)& (0+255),b
 10907  0014D2  0101               	movlb	1	; () banked
 10908  0014D4  5120               	movf	(___fladd@a+2)& (0+255),w,b
 10909  0014D6  0101               	movlb	1	; () banked
 10910  0014D8  2124               	addwfc	(??___fladd+2)& (0+255),w,b
 10911  0014DA  0101               	movlb	1	; () banked
 10912  0014DC  6F28               	movwf	(??___fladd+6)& (0+255),b
 10913  0014DE  0101               	movlb	1	; () banked
 10914  0014E0  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10915  0014E2  0101               	movlb	1	; () banked
 10916  0014E4  2125               	addwfc	(??___fladd+3)& (0+255),w,b
 10917  0014E6  0101               	movlb	1	; () banked
 10918  0014E8  6F29               	movwf	(??___fladd+7)& (0+255),b
 10919  0014EA  0EFF               	movlw	255
 10920  0014EC  0101               	movlb	1	; () banked
 10921  0014EE  2526               	addwf	(??___fladd+4)& (0+255),w,b
 10922  0014F0  0101               	movlb	1	; () banked
 10923  0014F2  6F1A               	movwf	___fladd@b& (0+255),b
 10924  0014F4  0EFF               	movlw	255
 10925  0014F6  0101               	movlb	1	; () banked
 10926  0014F8  2127               	addwfc	(??___fladd+5)& (0+255),w,b
 10927  0014FA  0101               	movlb	1	; () banked
 10928  0014FC  6F1B               	movwf	(___fladd@b+1)& (0+255),b
 10929  0014FE  0EFF               	movlw	255
 10930  001500  0101               	movlb	1	; () banked
 10931  001502  2128               	addwfc	(??___fladd+6)& (0+255),w,b
 10932  001504  0101               	movlb	1	; () banked
 10933  001506  6F1C               	movwf	(___fladd@b+2)& (0+255),b
 10934  001508  0EFF               	movlw	255
 10935  00150A  0101               	movlb	1	; () banked
 10936  00150C  2129               	addwfc	(??___fladd+7)& (0+255),w,b
 10937  00150E  0101               	movlb	1	; () banked
 10938  001510  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 10939  001512  0E80               	movlw	128
 10940  001514  0101               	movlb	1	; () banked
 10941  001516  1B2A               	xorwf	___fladd@signs& (0+255),f,b
 10942                           
 10943                           ; BSR set to: 1
 10944  001518  0101               	movlb	1	; () banked
 10945  00151A  6D2D               	negf	___fladd@grs& (0+255),b
 10946                           
 10947                           ; BSR set to: 1
 10948  00151C  0101               	movlb	1	; () banked
 10949  00151E  512D               	movf	___fladd@grs& (0+255),w,b
 10950  001520  0101               	movlb	1	; () banked
 10951  001522  A4D8               	btfss	status,2,c
 10952  001524  D018               	goto	l1464
 10953                           
 10954                           ; BSR set to: 1
 10955  001526  0E01               	movlw	1
 10956  001528  0101               	movlb	1	; () banked
 10957  00152A  271A               	addwf	___fladd@b& (0+255),f,b
 10958  00152C  0E00               	movlw	0
 10959  00152E  231B               	addwfc	(___fladd@b+1)& (0+255),f,b
 10960  001530  231C               	addwfc	(___fladd@b+2)& (0+255),f,b
 10961  001532  231D               	addwfc	(___fladd@b+3)& (0+255),f,b
 10962                           
 10963                           ; BSR set to: 1
 10964  001534  D010               	goto	l1464
 10965  001536                     l8317:
 10966                           
 10967                           ; BSR set to: 1
 10968  001536  0101               	movlb	1	; () banked
 10969  001538  511E               	movf	___fladd@a& (0+255),w,b
 10970  00153A  0101               	movlb	1	; () banked
 10971  00153C  5F1A               	subwf	___fladd@b& (0+255),f,b
 10972  00153E  0101               	movlb	1	; () banked
 10973  001540  511F               	movf	(___fladd@a+1)& (0+255),w,b
 10974  001542  0101               	movlb	1	; () banked
 10975  001544  5B1B               	subwfb	(___fladd@b+1)& (0+255),f,b
 10976  001546  0101               	movlb	1	; () banked
 10977  001548  5120               	movf	(___fladd@a+2)& (0+255),w,b
 10978  00154A  0101               	movlb	1	; () banked
 10979  00154C  5B1C               	subwfb	(___fladd@b+2)& (0+255),f,b
 10980  00154E  0101               	movlb	1	; () banked
 10981  001550  5121               	movf	(___fladd@a+3)& (0+255),w,b
 10982  001552  0101               	movlb	1	; () banked
 10983  001554  5B1D               	subwfb	(___fladd@b+3)& (0+255),f,b
 10984  001556                     l1464:
 10985                           
 10986                           ; BSR set to: 1
 10987  001556  0101               	movlb	1	; () banked
 10988  001558  511A               	movf	___fladd@b& (0+255),w,b
 10989  00155A  0101               	movlb	1	; () banked
 10990  00155C  111B               	iorwf	(___fladd@b+1)& (0+255),w,b
 10991  00155E  0101               	movlb	1	; () banked
 10992  001560  111C               	iorwf	(___fladd@b+2)& (0+255),w,b
 10993  001562  0101               	movlb	1	; () banked
 10994  001564  111D               	iorwf	(___fladd@b+3)& (0+255),w,b
 10995  001566  A4D8               	btfss	status,2,c
 10996  001568  D02A               	goto	l8341
 10997                           
 10998                           ; BSR set to: 1
 10999  00156A  0101               	movlb	1	; () banked
 11000  00156C  512D               	movf	___fladd@grs& (0+255),w,b
 11001  00156E  0101               	movlb	1	; () banked
 11002  001570  A4D8               	btfss	status,2,c
 11003  001572  D025               	goto	l8341
 11004                           
 11005                           ; BSR set to: 1
 11006  001574  0E00               	movlw	0
 11007  001576  0101               	movlb	1	; () banked
 11008  001578  6F1A               	movwf	?___fladd& (0+255),b
 11009  00157A  0E00               	movlw	0
 11010  00157C  6F1B               	movwf	(?___fladd+1)& (0+255),b
 11011  00157E  0E00               	movlw	0
 11012  001580  6F1C               	movwf	(?___fladd+2)& (0+255),b
 11013  001582  0E00               	movlw	0
 11014  001584  6F1D               	movwf	(?___fladd+3)& (0+255),b
 11015                           
 11016                           ; BSR set to: 1
 11017  001586  0012               	return	
 11018  001588                     l8325:
 11019                           
 11020                           ; BSR set to: 1
 11021  001588  0101               	movlb	1	; () banked
 11022  00158A  90D8               	bcf	status,0,c
 11023  00158C  371A               	rlcf	___fladd@b& (0+255),f,b
 11024  00158E  371B               	rlcf	(___fladd@b+1)& (0+255),f,b
 11025  001590  371C               	rlcf	(___fladd@b+2)& (0+255),f,b
 11026  001592  371D               	rlcf	(___fladd@b+3)& (0+255),f,b
 11027                           
 11028                           ; BSR set to: 1
 11029  001594  0101               	movlb	1	; () banked
 11030  001596  AF2D               	btfss	___fladd@grs& (0+255),7,b
 11031  001598  D002               	goto	l8331
 11032                           
 11033                           ; BSR set to: 1
 11034  00159A  0101               	movlb	1	; () banked
 11035  00159C  811A               	bsf	___fladd@b& (0+255),0,b
 11036  00159E                     l8331:
 11037                           
 11038                           ; BSR set to: 1
 11039  00159E  0101               	movlb	1	; () banked
 11040  0015A0  A12D               	btfss	___fladd@grs& (0+255),0,b
 11041  0015A2  D003               	goto	l8335
 11042                           
 11043                           ; BSR set to: 1
 11044  0015A4  80D8               	bsf	status,0,c
 11045  0015A6  0101               	movlb	1	; () banked
 11046  0015A8  D002               	goto	L8
 11047  0015AA                     l8335:
 11048                           
 11049                           ; BSR set to: 1
 11050  0015AA  0101               	movlb	1	; () banked
 11051  0015AC  90D8               	bcf	status,0,c
 11052  0015AE                     L8:
 11053  0015AE  372D               	rlcf	___fladd@grs& (0+255),f,b
 11054                           
 11055                           ; BSR set to: 1
 11056                           
 11057                           ; BSR set to: 1
 11058  0015B0  0101               	movlb	1	; () banked
 11059  0015B2  512C               	movf	___fladd@bexp& (0+255),w,b
 11060  0015B4  0101               	movlb	1	; () banked
 11061  0015B6  B4D8               	btfsc	status,2,c
 11062  0015B8  D002               	goto	l8341
 11063                           
 11064                           ; BSR set to: 1
 11065  0015BA  0101               	movlb	1	; () banked
 11066  0015BC  072C               	decf	___fladd@bexp& (0+255),f,b
 11067  0015BE                     l8341:
 11068                           
 11069                           ; BSR set to: 1
 11070  0015BE  0101               	movlb	1	; () banked
 11071  0015C0  AF1C               	btfss	(___fladd@b+2)& (0+255),7,b
 11072  0015C2  D7E2               	goto	l8325
 11073  0015C4                     l8343:
 11074                           
 11075                           ; BSR set to: 1
 11076  0015C4  0E00               	movlw	0
 11077  0015C6  0101               	movlb	1	; () banked
 11078  0015C8  6F2B               	movwf	___fladd@aexp& (0+255),b
 11079                           
 11080                           ; BSR set to: 1
 11081  0015CA  0101               	movlb	1	; () banked
 11082  0015CC  AF2D               	btfss	___fladd@grs& (0+255),7,b
 11083  0015CE  D00D               	goto	l1473
 11084                           
 11085                           ; BSR set to: 1
 11086  0015D0  C12D  F122         	movff	___fladd@grs,??___fladd
 11087  0015D4  0E7F               	movlw	127
 11088  0015D6  0101               	movlb	1	; () banked
 11089  0015D8  1722               	andwf	??___fladd& (0+255),f,b
 11090  0015DA  A4D8               	btfss	status,2,c
 11091  0015DC  D003               	goto	l8351
 11092                           
 11093                           ; BSR set to: 1
 11094                           
 11095                           ; BSR set to: 1
 11096  0015DE  0101               	movlb	1	; () banked
 11097  0015E0  A11A               	btfss	___fladd@b& (0+255),0,b
 11098  0015E2  D003               	goto	l1473
 11099  0015E4                     l8351:
 11100                           
 11101                           ; BSR set to: 1
 11102  0015E4  0E01               	movlw	1
 11103  0015E6  0101               	movlb	1	; () banked
 11104  0015E8  6F2B               	movwf	___fladd@aexp& (0+255),b
 11105  0015EA                     l1473:
 11106                           
 11107                           ; BSR set to: 1
 11108  0015EA  0101               	movlb	1	; () banked
 11109  0015EC  512B               	movf	___fladd@aexp& (0+255),w,b
 11110  0015EE  0101               	movlb	1	; () banked
 11111  0015F0  B4D8               	btfsc	status,2,c
 11112  0015F2  D026               	goto	l8361
 11113                           
 11114                           ; BSR set to: 1
 11115  0015F4  0E01               	movlw	1
 11116  0015F6  0101               	movlb	1	; () banked
 11117  0015F8  271A               	addwf	___fladd@b& (0+255),f,b
 11118  0015FA  0E00               	movlw	0
 11119  0015FC  231B               	addwfc	(___fladd@b+1)& (0+255),f,b
 11120  0015FE  231C               	addwfc	(___fladd@b+2)& (0+255),f,b
 11121  001600  231D               	addwfc	(___fladd@b+3)& (0+255),f,b
 11122                           
 11123                           ; BSR set to: 1
 11124  001602  0101               	movlb	1	; () banked
 11125  001604  A11D               	btfss	(___fladd@b+3)& (0+255),0,b
 11126  001606  D01C               	goto	l8361
 11127                           
 11128                           ; BSR set to: 1
 11129  001608  C11A  F122         	movff	___fladd@b,??___fladd
 11130  00160C  C11B  F123         	movff	___fladd@b+1,??___fladd+1
 11131  001610  C11C  F124         	movff	___fladd@b+2,??___fladd+2
 11132  001614  C11D  F125         	movff	___fladd@b+3,??___fladd+3
 11133  001618  0101               	movlb	1	; () banked
 11134  00161A  3525               	rlcf	(??___fladd+3)& (0+255),w,b
 11135  00161C  3325               	rrcf	(??___fladd+3)& (0+255),f,b
 11136  00161E  3324               	rrcf	(??___fladd+2)& (0+255),f,b
 11137  001620  3323               	rrcf	(??___fladd+1)& (0+255),f,b
 11138  001622  3322               	rrcf	??___fladd& (0+255),f,b
 11139  001624  C122  F11A         	movff	??___fladd,___fladd@b
 11140  001628  C123  F11B         	movff	??___fladd+1,___fladd@b+1
 11141  00162C  C124  F11C         	movff	??___fladd+2,___fladd@b+2
 11142  001630  C125  F11D         	movff	??___fladd+3,___fladd@b+3
 11143  001634  0101               	movlb	1	; () banked
 11144  001636  292C               	incf	___fladd@bexp& (0+255),w,b
 11145  001638  B4D8               	btfsc	status,2,c
 11146  00163A  D002               	goto	l8361
 11147                           
 11148                           ; BSR set to: 1
 11149  00163C  0101               	movlb	1	; () banked
 11150  00163E  2B2C               	incf	___fladd@bexp& (0+255),f,b
 11151  001640                     l8361:
 11152                           
 11153                           ; BSR set to: 1
 11154  001640  0101               	movlb	1	; () banked
 11155  001642  292C               	incf	___fladd@bexp& (0+255),w,b
 11156  001644  B4D8               	btfsc	status,2,c
 11157  001646  D005               	goto	l8365
 11158                           
 11159                           ; BSR set to: 1
 11160  001648  0101               	movlb	1	; () banked
 11161  00164A  512C               	movf	___fladd@bexp& (0+255),w,b
 11162  00164C  0101               	movlb	1	; () banked
 11163  00164E  A4D8               	btfss	status,2,c
 11164  001650  D011               	goto	l8369
 11165  001652                     l8365:
 11166                           
 11167                           ; BSR set to: 1
 11168  001652  0E00               	movlw	0
 11169  001654  0101               	movlb	1	; () banked
 11170  001656  6F1A               	movwf	___fladd@b& (0+255),b
 11171  001658  0E00               	movlw	0
 11172  00165A  6F1B               	movwf	(___fladd@b+1)& (0+255),b
 11173  00165C  0E00               	movlw	0
 11174  00165E  6F1C               	movwf	(___fladd@b+2)& (0+255),b
 11175  001660  0E00               	movlw	0
 11176  001662  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 11177  001664  0101               	movlb	1	; () banked
 11178  001666  512C               	movf	___fladd@bexp& (0+255),w,b
 11179  001668  0101               	movlb	1	; () banked
 11180  00166A  A4D8               	btfss	status,2,c
 11181  00166C  D003               	goto	l8369
 11182                           
 11183                           ; BSR set to: 1
 11184  00166E  0E00               	movlw	0
 11185  001670  0101               	movlb	1	; () banked
 11186  001672  6F2A               	movwf	___fladd@signs& (0+255),b
 11187  001674                     l8369:
 11188                           
 11189                           ; BSR set to: 1
 11190  001674  0101               	movlb	1	; () banked
 11191  001676  A12C               	btfss	___fladd@bexp& (0+255),0,b
 11192  001678  D003               	goto	l8373
 11193                           
 11194                           ; BSR set to: 1
 11195  00167A  0101               	movlb	1	; () banked
 11196  00167C  8F1C               	bsf	(___fladd@b+2)& (0+255),7,b
 11197  00167E  D002               	goto	l8375
 11198  001680                     l8373:
 11199                           
 11200                           ; BSR set to: 1
 11201  001680  0101               	movlb	1	; () banked
 11202  001682  9F1C               	bcf	(___fladd@b+2)& (0+255),7,b
 11203  001684                     l8375:
 11204                           
 11205                           ; BSR set to: 1
 11206  001684  0101               	movlb	1	; () banked
 11207  001686  90D8               	bcf	status,0,c
 11208  001688  312C               	rrcf	___fladd@bexp& (0+255),w,b
 11209  00168A  0101               	movlb	1	; () banked
 11210  00168C  6F1D               	movwf	(___fladd@b+3)& (0+255),b
 11211                           
 11212                           ; BSR set to: 1
 11213  00168E  0101               	movlb	1	; () banked
 11214  001690  AF2A               	btfss	___fladd@signs& (0+255),7,b
 11215  001692  D002               	goto	l8381
 11216                           
 11217                           ; BSR set to: 1
 11218  001694  0101               	movlb	1	; () banked
 11219  001696  8F1D               	bsf	(___fladd@b+3)& (0+255),7,b
 11220  001698                     l8381:
 11221                           
 11222                           ; BSR set to: 1
 11223  001698  C11A  F11A         	movff	___fladd@b,?___fladd
 11224  00169C  C11B  F11B         	movff	___fladd@b+1,?___fladd+1
 11225  0016A0  C11C  F11C         	movff	___fladd@b+2,?___fladd+2
 11226  0016A4  C11D  F11D         	movff	___fladd@b+3,?___fladd+3
 11227  0016A8  0012               	return	
 11228  0016AA                     __end_of___fladd:
 11229                           	opt stack 0
 11230                           tblptru	equ	0xFF8
 11231                           tblptrh	equ	0xFF7
 11232                           tblptrl	equ	0xFF6
 11233                           tablat	equ	0xFF5
 11234                           prodh	equ	0xFF4
 11235                           prodl	equ	0xFF3
 11236                           intcon	equ	0xFF2
 11237                           postinc0	equ	0xFEE
 11238                           wreg	equ	0xFE8
 11239                           postdec1	equ	0xFE5
 11240                           fsr1l	equ	0xFE1
 11241                           indf2	equ	0xFDF
 11242                           postinc2	equ	0xFDE
 11243                           postdec2	equ	0xFDD
 11244                           fsr2h	equ	0xFDA
 11245                           fsr2l	equ	0xFD9
 11246                           status	equ	0xFD8
 11247                           
 11248 ;; *************** function ___flneg *****************
 11249 ;; Defined at:
 11250 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flneg.c"
 11251 ;; Parameters:    Size  Location     Type
 11252 ;;  f1              4   47[BANK0 ] unsigned char 
 11253 ;; Auto vars:     Size  Location     Type
 11254 ;;		None
 11255 ;; Return value:  Size  Location     Type
 11256 ;;                  4   47[BANK0 ] unsigned char 
 11257 ;; Registers used:
 11258 ;;		wreg, status,2, status,0
 11259 ;; Tracked objects:
 11260 ;;		On entry : 0/0
 11261 ;;		On exit  : 0/0
 11262 ;;		Unchanged: 0/0
 11263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11264 ;;      Params:         0       4       0       0       0       0       0
 11265 ;;      Locals:         0       0       0       0       0       0       0
 11266 ;;      Temps:          0       0       0       0       0       0       0
 11267 ;;      Totals:         0       4       0       0       0       0       0
 11268 ;;Total ram usage:        4 bytes
 11269 ;; Hardware stack levels used:    1
 11270 ;; Hardware stack levels required when called:    8
 11271 ;; This function calls:
 11272 ;;		Nothing
 11273 ;; This function is called by:
 11274 ;;		_printf
 11275 ;; This function uses a non-reentrant model
 11276 ;;
 11277                           
 11278                           	psect	text37
 11279  005D0E                     __ptext37:
 11280                           	opt stack 0
 11281  005D0E                     ___flneg:
 11282                           	opt stack 19
 11283                           
 11284                           ; BSR set to: 1
 11285                           ;incstack = 0
 11286  005D0E  0100               	movlb	0	; () banked
 11287  005D10  518F               	movf	___flneg@f1& (0+255),w,b
 11288  005D12  0100               	movlb	0	; () banked
 11289  005D14  1190               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11290  005D16  0100               	movlb	0	; () banked
 11291  005D18  1191               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11292  005D1A  0100               	movlb	0	; () banked
 11293  005D1C  1192               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11294  005D1E  B4D8               	btfsc	status,2,c
 11295  005D20  D009               	goto	l8963
 11296                           
 11297                           ; BSR set to: 0
 11298  005D22  0E00               	movlw	0
 11299  005D24  0100               	movlb	0	; () banked
 11300  005D26  1B8F               	xorwf	___flneg@f1& (0+255),f,b
 11301  005D28  0E00               	movlw	0
 11302  005D2A  1B90               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11303  005D2C  0E00               	movlw	0
 11304  005D2E  1B91               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11305  005D30  0E80               	movlw	128
 11306  005D32  1B92               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11307  005D34                     l8963:
 11308                           
 11309                           ; BSR set to: 0
 11310  005D34  C08F  F08F         	movff	___flneg@f1,?___flneg
 11311  005D38  C090  F090         	movff	___flneg@f1+1,?___flneg+1
 11312  005D3C  C091  F091         	movff	___flneg@f1+2,?___flneg+2
 11313  005D40  C092  F092         	movff	___flneg@f1+3,?___flneg+3
 11314  005D44  0012               	return	
 11315  005D46                     __end_of___flneg:
 11316                           	opt stack 0
 11317                           tblptru	equ	0xFF8
 11318                           tblptrh	equ	0xFF7
 11319                           tblptrl	equ	0xFF6
 11320                           tablat	equ	0xFF5
 11321                           prodh	equ	0xFF4
 11322                           prodl	equ	0xFF3
 11323                           intcon	equ	0xFF2
 11324                           postinc0	equ	0xFEE
 11325                           wreg	equ	0xFE8
 11326                           postdec1	equ	0xFE5
 11327                           fsr1l	equ	0xFE1
 11328                           indf2	equ	0xFDF
 11329                           postinc2	equ	0xFDE
 11330                           postdec2	equ	0xFDD
 11331                           fsr2h	equ	0xFDA
 11332                           fsr2l	equ	0xFD9
 11333                           status	equ	0xFD8
 11334                           
 11335 ;; *************** function ___flge *****************
 11336 ;; Defined at:
 11337 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 11338 ;; Parameters:    Size  Location     Type
 11339 ;;  ff1             4   47[BANK0 ] unsigned char 
 11340 ;;  ff2             4   51[BANK0 ] unsigned char 
 11341 ;; Auto vars:     Size  Location     Type
 11342 ;;		None
 11343 ;; Return value:  Size  Location     Type
 11344 ;;		None               void
 11345 ;; Registers used:
 11346 ;;		wreg, status,2, status,0
 11347 ;; Tracked objects:
 11348 ;;		On entry : 0/0
 11349 ;;		On exit  : 0/0
 11350 ;;		Unchanged: 0/0
 11351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11352 ;;      Params:         0       8       0       0       0       0       0
 11353 ;;      Locals:         0       0       0       0       0       0       0
 11354 ;;      Temps:          0       4       0       0       0       0       0
 11355 ;;      Totals:         0      12       0       0       0       0       0
 11356 ;;Total ram usage:       12 bytes
 11357 ;; Hardware stack levels used:    1
 11358 ;; Hardware stack levels required when called:    8
 11359 ;; This function calls:
 11360 ;;		Nothing
 11361 ;; This function is called by:
 11362 ;;		_printf
 11363 ;; This function uses a non-reentrant model
 11364 ;;
 11365                           
 11366                           	psect	text38
 11367  00392E                     __ptext38:
 11368                           	opt stack 0
 11369  00392E                     ___flge:
 11370                           	opt stack 19
 11371                           
 11372                           ; BSR set to: 0
 11373                           ;incstack = 0
 11374  00392E  0E00               	movlw	0
 11375  003930  0100               	movlb	0	; () banked
 11376  003932  158F               	andwf	___flge@ff1& (0+255),w,b
 11377  003934  0100               	movlb	0	; () banked
 11378  003936  6F97               	movwf	??___flge& (0+255),b
 11379  003938  0E00               	movlw	0
 11380  00393A  0100               	movlb	0	; () banked
 11381  00393C  1590               	andwf	(___flge@ff1+1)& (0+255),w,b
 11382  00393E  0100               	movlb	0	; () banked
 11383  003940  6F98               	movwf	(??___flge+1)& (0+255),b
 11384  003942  0E80               	movlw	128
 11385  003944  0100               	movlb	0	; () banked
 11386  003946  1591               	andwf	(___flge@ff1+2)& (0+255),w,b
 11387  003948  0100               	movlb	0	; () banked
 11388  00394A  6F99               	movwf	(??___flge+2)& (0+255),b
 11389  00394C  0E7F               	movlw	127
 11390  00394E  0100               	movlb	0	; () banked
 11391  003950  1592               	andwf	(___flge@ff1+3)& (0+255),w,b
 11392  003952  0100               	movlb	0	; () banked
 11393  003954  6F9A               	movwf	(??___flge+3)& (0+255),b
 11394  003956  0100               	movlb	0	; () banked
 11395  003958  5197               	movf	??___flge& (0+255),w,b
 11396  00395A  0100               	movlb	0	; () banked
 11397  00395C  1198               	iorwf	(??___flge+1)& (0+255),w,b
 11398  00395E  0100               	movlb	0	; () banked
 11399  003960  1199               	iorwf	(??___flge+2)& (0+255),w,b
 11400  003962  0100               	movlb	0	; () banked
 11401  003964  119A               	iorwf	(??___flge+3)& (0+255),w,b
 11402  003966  A4D8               	btfss	status,2,c
 11403  003968  D009               	goto	l8941
 11404                           
 11405                           ; BSR set to: 0
 11406  00396A  0E00               	movlw	0
 11407  00396C  0100               	movlb	0	; () banked
 11408  00396E  6F8F               	movwf	___flge@ff1& (0+255),b
 11409  003970  0E00               	movlw	0
 11410  003972  6F90               	movwf	(___flge@ff1+1)& (0+255),b
 11411  003974  0E00               	movlw	0
 11412  003976  6F91               	movwf	(___flge@ff1+2)& (0+255),b
 11413  003978  0E00               	movlw	0
 11414  00397A  6F92               	movwf	(___flge@ff1+3)& (0+255),b
 11415  00397C                     l8941:
 11416                           
 11417                           ; BSR set to: 0
 11418  00397C  0E00               	movlw	0
 11419  00397E  0100               	movlb	0	; () banked
 11420  003980  1593               	andwf	___flge@ff2& (0+255),w,b
 11421  003982  0100               	movlb	0	; () banked
 11422  003984  6F97               	movwf	??___flge& (0+255),b
 11423  003986  0E00               	movlw	0
 11424  003988  0100               	movlb	0	; () banked
 11425  00398A  1594               	andwf	(___flge@ff2+1)& (0+255),w,b
 11426  00398C  0100               	movlb	0	; () banked
 11427  00398E  6F98               	movwf	(??___flge+1)& (0+255),b
 11428  003990  0E80               	movlw	128
 11429  003992  0100               	movlb	0	; () banked
 11430  003994  1595               	andwf	(___flge@ff2+2)& (0+255),w,b
 11431  003996  0100               	movlb	0	; () banked
 11432  003998  6F99               	movwf	(??___flge+2)& (0+255),b
 11433  00399A  0E7F               	movlw	127
 11434  00399C  0100               	movlb	0	; () banked
 11435  00399E  1596               	andwf	(___flge@ff2+3)& (0+255),w,b
 11436  0039A0  0100               	movlb	0	; () banked
 11437  0039A2  6F9A               	movwf	(??___flge+3)& (0+255),b
 11438  0039A4  0100               	movlb	0	; () banked
 11439  0039A6  5197               	movf	??___flge& (0+255),w,b
 11440  0039A8  0100               	movlb	0	; () banked
 11441  0039AA  1198               	iorwf	(??___flge+1)& (0+255),w,b
 11442  0039AC  0100               	movlb	0	; () banked
 11443  0039AE  1199               	iorwf	(??___flge+2)& (0+255),w,b
 11444  0039B0  0100               	movlb	0	; () banked
 11445  0039B2  119A               	iorwf	(??___flge+3)& (0+255),w,b
 11446  0039B4  A4D8               	btfss	status,2,c
 11447  0039B6  D009               	goto	l8945
 11448                           
 11449                           ; BSR set to: 0
 11450  0039B8  0E00               	movlw	0
 11451  0039BA  0100               	movlb	0	; () banked
 11452  0039BC  6F93               	movwf	___flge@ff2& (0+255),b
 11453  0039BE  0E00               	movlw	0
 11454  0039C0  6F94               	movwf	(___flge@ff2+1)& (0+255),b
 11455  0039C2  0E00               	movlw	0
 11456  0039C4  6F95               	movwf	(___flge@ff2+2)& (0+255),b
 11457  0039C6  0E00               	movlw	0
 11458  0039C8  6F96               	movwf	(___flge@ff2+3)& (0+255),b
 11459  0039CA                     l8945:
 11460                           
 11461                           ; BSR set to: 0
 11462  0039CA  0100               	movlb	0	; () banked
 11463  0039CC  AF92               	btfss	(___flge@ff1+3)& (0+255),7,b
 11464  0039CE  D026               	goto	l8949
 11465                           
 11466                           ; BSR set to: 0
 11467  0039D0  C08F  F097         	movff	___flge@ff1,??___flge
 11468  0039D4  C090  F098         	movff	___flge@ff1+1,??___flge+1
 11469  0039D8  C091  F099         	movff	___flge@ff1+2,??___flge+2
 11470  0039DC  C092  F09A         	movff	___flge@ff1+3,??___flge+3
 11471  0039E0  0100               	movlb	0	; () banked
 11472  0039E2  1F97               	comf	??___flge& (0+255),f,b
 11473  0039E4  1F98               	comf	(??___flge+1)& (0+255),f,b
 11474  0039E6  1F99               	comf	(??___flge+2)& (0+255),f,b
 11475  0039E8  1F9A               	comf	(??___flge+3)& (0+255),f,b
 11476  0039EA  2B97               	incf	??___flge& (0+255),f,b
 11477  0039EC  0E00               	movlw	0
 11478  0039EE  2398               	addwfc	(??___flge+1)& (0+255),f,b
 11479  0039F0  2399               	addwfc	(??___flge+2)& (0+255),f,b
 11480  0039F2  239A               	addwfc	(??___flge+3)& (0+255),f,b
 11481  0039F4  0E00               	movlw	0
 11482  0039F6  0100               	movlb	0	; () banked
 11483  0039F8  2597               	addwf	??___flge& (0+255),w,b
 11484  0039FA  0100               	movlb	0	; () banked
 11485  0039FC  6F8F               	movwf	___flge@ff1& (0+255),b
 11486  0039FE  0E00               	movlw	0
 11487  003A00  0100               	movlb	0	; () banked
 11488  003A02  2198               	addwfc	(??___flge+1)& (0+255),w,b
 11489  003A04  0100               	movlb	0	; () banked
 11490  003A06  6F90               	movwf	(___flge@ff1+1)& (0+255),b
 11491  003A08  0E00               	movlw	0
 11492  003A0A  0100               	movlb	0	; () banked
 11493  003A0C  2199               	addwfc	(??___flge+2)& (0+255),w,b
 11494  003A0E  0100               	movlb	0	; () banked
 11495  003A10  6F91               	movwf	(___flge@ff1+2)& (0+255),b
 11496  003A12  0E80               	movlw	128
 11497  003A14  0100               	movlb	0	; () banked
 11498  003A16  219A               	addwfc	(??___flge+3)& (0+255),w,b
 11499  003A18  0100               	movlb	0	; () banked
 11500  003A1A  6F92               	movwf	(___flge@ff1+3)& (0+255),b
 11501  003A1C                     l8949:
 11502                           
 11503                           ; BSR set to: 0
 11504  003A1C  0100               	movlb	0	; () banked
 11505  003A1E  AF96               	btfss	(___flge@ff2+3)& (0+255),7,b
 11506  003A20  D026               	goto	l1184
 11507                           
 11508                           ; BSR set to: 0
 11509  003A22  C093  F097         	movff	___flge@ff2,??___flge
 11510  003A26  C094  F098         	movff	___flge@ff2+1,??___flge+1
 11511  003A2A  C095  F099         	movff	___flge@ff2+2,??___flge+2
 11512  003A2E  C096  F09A         	movff	___flge@ff2+3,??___flge+3
 11513  003A32  0100               	movlb	0	; () banked
 11514  003A34  1F97               	comf	??___flge& (0+255),f,b
 11515  003A36  1F98               	comf	(??___flge+1)& (0+255),f,b
 11516  003A38  1F99               	comf	(??___flge+2)& (0+255),f,b
 11517  003A3A  1F9A               	comf	(??___flge+3)& (0+255),f,b
 11518  003A3C  2B97               	incf	??___flge& (0+255),f,b
 11519  003A3E  0E00               	movlw	0
 11520  003A40  2398               	addwfc	(??___flge+1)& (0+255),f,b
 11521  003A42  2399               	addwfc	(??___flge+2)& (0+255),f,b
 11522  003A44  239A               	addwfc	(??___flge+3)& (0+255),f,b
 11523  003A46  0E00               	movlw	0
 11524  003A48  0100               	movlb	0	; () banked
 11525  003A4A  2597               	addwf	??___flge& (0+255),w,b
 11526  003A4C  0100               	movlb	0	; () banked
 11527  003A4E  6F93               	movwf	___flge@ff2& (0+255),b
 11528  003A50  0E00               	movlw	0
 11529  003A52  0100               	movlb	0	; () banked
 11530  003A54  2198               	addwfc	(??___flge+1)& (0+255),w,b
 11531  003A56  0100               	movlb	0	; () banked
 11532  003A58  6F94               	movwf	(___flge@ff2+1)& (0+255),b
 11533  003A5A  0E00               	movlw	0
 11534  003A5C  0100               	movlb	0	; () banked
 11535  003A5E  2199               	addwfc	(??___flge+2)& (0+255),w,b
 11536  003A60  0100               	movlb	0	; () banked
 11537  003A62  6F95               	movwf	(___flge@ff2+2)& (0+255),b
 11538  003A64  0E80               	movlw	128
 11539  003A66  0100               	movlb	0	; () banked
 11540  003A68  219A               	addwfc	(??___flge+3)& (0+255),w,b
 11541  003A6A  0100               	movlb	0	; () banked
 11542  003A6C  6F96               	movwf	(___flge@ff2+3)& (0+255),b
 11543  003A6E                     l1184:
 11544                           
 11545                           ; BSR set to: 0
 11546  003A6E  0E00               	movlw	0
 11547  003A70  0100               	movlb	0	; () banked
 11548  003A72  1B8F               	xorwf	___flge@ff1& (0+255),f,b
 11549  003A74  0E00               	movlw	0
 11550  003A76  1B90               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11551  003A78  0E00               	movlw	0
 11552  003A7A  1B91               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11553  003A7C  0E80               	movlw	128
 11554  003A7E  1B92               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11555  003A80  0E00               	movlw	0
 11556  003A82  0100               	movlb	0	; () banked
 11557  003A84  1B93               	xorwf	___flge@ff2& (0+255),f,b
 11558  003A86  0E00               	movlw	0
 11559  003A88  1B94               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11560  003A8A  0E00               	movlw	0
 11561  003A8C  1B95               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11562  003A8E  0E80               	movlw	128
 11563  003A90  1B96               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11564  003A92  0100               	movlb	0	; () banked
 11565  003A94  5193               	movf	___flge@ff2& (0+255),w,b
 11566  003A96  0100               	movlb	0	; () banked
 11567  003A98  5D8F               	subwf	___flge@ff1& (0+255),w,b
 11568  003A9A  0100               	movlb	0	; () banked
 11569  003A9C  5194               	movf	(___flge@ff2+1)& (0+255),w,b
 11570  003A9E  0100               	movlb	0	; () banked
 11571  003AA0  5990               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11572  003AA2  0100               	movlb	0	; () banked
 11573  003AA4  5195               	movf	(___flge@ff2+2)& (0+255),w,b
 11574  003AA6  0100               	movlb	0	; () banked
 11575  003AA8  5991               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11576  003AAA  0100               	movlb	0	; () banked
 11577  003AAC  5196               	movf	(___flge@ff2+3)& (0+255),w,b
 11578  003AAE  0100               	movlb	0	; () banked
 11579  003AB0  5992               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11580  003AB2  B0D8               	btfsc	status,0,c
 11581  003AB4  D002               	goto	l8955
 11582                           
 11583                           ; BSR set to: 0
 11584  003AB6  90D8               	bcf	status,0,c
 11585  003AB8  0012               	return	
 11586  003ABA                     l8955:
 11587                           
 11588                           ; BSR set to: 0
 11589  003ABA  80D8               	bsf	status,0,c
 11590                           
 11591                           ; BSR set to: 0
 11592  003ABC  0012               	return	
 11593  003ABE                     __end_of___flge:
 11594                           	opt stack 0
 11595                           tblptru	equ	0xFF8
 11596                           tblptrh	equ	0xFF7
 11597                           tblptrl	equ	0xFF6
 11598                           tablat	equ	0xFF5
 11599                           prodh	equ	0xFF4
 11600                           prodl	equ	0xFF3
 11601                           intcon	equ	0xFF2
 11602                           postinc0	equ	0xFEE
 11603                           wreg	equ	0xFE8
 11604                           postdec1	equ	0xFE5
 11605                           fsr1l	equ	0xFE1
 11606                           indf2	equ	0xFDF
 11607                           postinc2	equ	0xFDE
 11608                           postdec2	equ	0xFDD
 11609                           fsr2h	equ	0xFDA
 11610                           fsr2l	equ	0xFD9
 11611                           status	equ	0xFD8
 11612                           
 11613 ;; *************** function _clockConfig *****************
 11614 ;; Defined at:
 11615 ;;		line 76 in file "source/SYSConfig.h"
 11616 ;; Parameters:    Size  Location     Type
 11617 ;;		None
 11618 ;; Auto vars:     Size  Location     Type
 11619 ;;		None
 11620 ;; Return value:  Size  Location     Type
 11621 ;;                  1    wreg      void 
 11622 ;; Registers used:
 11623 ;;		wreg, status,2
 11624 ;; Tracked objects:
 11625 ;;		On entry : 0/0
 11626 ;;		On exit  : 0/0
 11627 ;;		Unchanged: 0/0
 11628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11629 ;;      Params:         0       0       0       0       0       0       0
 11630 ;;      Locals:         0       0       0       0       0       0       0
 11631 ;;      Temps:          0       0       0       0       0       0       0
 11632 ;;      Totals:         0       0       0       0       0       0       0
 11633 ;;Total ram usage:        0 bytes
 11634 ;; Hardware stack levels used:    1
 11635 ;; Hardware stack levels required when called:    8
 11636 ;; This function calls:
 11637 ;;		Nothing
 11638 ;; This function is called by:
 11639 ;;		_main
 11640 ;; This function uses a non-reentrant model
 11641 ;;
 11642                           
 11643                           	psect	text39
 11644  005FAC                     __ptext39:
 11645                           	opt stack 0
 11646  005FAC                     _clockConfig:
 11647                           	opt stack 22
 11648                           
 11649                           ;SYSConfig.h: 77: OSCCONbits.IDLEN = 1;
 11650                           
 11651                           ; BSR set to: 0
 11652                           ;incstack = 0
 11653  005FAC  8ED3               	bsf	4051,7,c	;volatile
 11654                           
 11655                           ;SYSConfig.h: 78: OSCCONbits.IRCF = 0b111;
 11656  005FAE  88D3               	bsf	4051,4,c	;volatile
 11657  005FB0  8AD3               	bsf	4051,5,c	;volatile
 11658  005FB2  8CD3               	bsf	4051,6,c	;volatile
 11659  005FB4                     l91:
 11660  005FB4  A4D3               	btfss	4051,2,c	;volatile
 11661  005FB6  D7FE               	goto	l91
 11662                           
 11663                           ;SYSConfig.h: 80: OSCCONbits.SCS = 0b11;
 11664  005FB8  0E03               	movlw	3
 11665  005FBA  12D3               	iorwf	4051,f,c	;volatile
 11666                           
 11667                           ;SYSConfig.h: 81: OSCCON2bits.MFIOSEL = 0;
 11668  005FBC  98D2               	bcf	4050,4,c	;volatile
 11669                           
 11670                           ;SYSConfig.h: 82: OSCCON2bits.SOSCGO = 0;
 11671  005FBE  96D2               	bcf	4050,3,c	;volatile
 11672                           
 11673                           ;SYSConfig.h: 83: OSCTUNEbits.INTSRC = 0;
 11674  005FC0  9E9B               	bcf	3995,7,c	;volatile
 11675                           
 11676                           ;SYSConfig.h: 84: OSCTUNEbits.TUN = 0b011111;
 11677  005FC2  809B               	bsf	3995,0,c	;volatile
 11678  005FC4  829B               	bsf	3995,1,c	;volatile
 11679  005FC6  849B               	bsf	3995,2,c	;volatile
 11680  005FC8  869B               	bsf	3995,3,c	;volatile
 11681  005FCA  889B               	bsf	3995,4,c	;volatile
 11682  005FCC  9A9B               	bcf	3995,5,c	;volatile
 11683                           
 11684                           ;SYSConfig.h: 85: OSCTUNEbits.PLLEN = 1;
 11685  005FCE  8C9B               	bsf	3995,6,c	;volatile
 11686  005FD0  0012               	return		;funcret
 11687  005FD2                     __end_of_clockConfig:
 11688                           	opt stack 0
 11689                           tblptru	equ	0xFF8
 11690                           tblptrh	equ	0xFF7
 11691                           tblptrl	equ	0xFF6
 11692                           tablat	equ	0xFF5
 11693                           prodh	equ	0xFF4
 11694                           prodl	equ	0xFF3
 11695                           intcon	equ	0xFF2
 11696                           postinc0	equ	0xFEE
 11697                           wreg	equ	0xFE8
 11698                           postdec1	equ	0xFE5
 11699                           fsr1l	equ	0xFE1
 11700                           indf2	equ	0xFDF
 11701                           postinc2	equ	0xFDE
 11702                           postdec2	equ	0xFDD
 11703                           fsr2h	equ	0xFDA
 11704                           fsr2l	equ	0xFD9
 11705                           status	equ	0xFD8
 11706                           
 11707 ;; *************** function _buttonChecking *****************
 11708 ;; Defined at:
 11709 ;;		line 9 in file "source/ButtonController.h"
 11710 ;; Parameters:    Size  Location     Type
 11711 ;;		None
 11712 ;; Auto vars:     Size  Location     Type
 11713 ;;		None
 11714 ;; Return value:  Size  Location     Type
 11715 ;;                  1    wreg      void 
 11716 ;; Registers used:
 11717 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11718 ;; Tracked objects:
 11719 ;;		On entry : 0/0
 11720 ;;		On exit  : 0/0
 11721 ;;		Unchanged: 0/0
 11722 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11723 ;;      Params:         0       0       0       0       0       0       0
 11724 ;;      Locals:         0       0       0       0       0       0       0
 11725 ;;      Temps:          0       0       0       0       0       0       0
 11726 ;;      Totals:         0       0       0       0       0       0       0
 11727 ;;Total ram usage:        0 bytes
 11728 ;; Hardware stack levels used:    1
 11729 ;; Hardware stack levels required when called:   13
 11730 ;; This function calls:
 11731 ;;		_delay_ms
 11732 ;;		_longPressDOWN
 11733 ;;		_longPressENTER
 11734 ;;		_longPressRETRO
 11735 ;;		_longPressUP
 11736 ;;		_pressDOWN
 11737 ;;		_pressENTER
 11738 ;;		_pressRETRO
 11739 ;;		_pressUP
 11740 ;;		_releaseDOWN
 11741 ;;		_releaseENTER
 11742 ;;		_releaseRETRO
 11743 ;;		_releaseUP
 11744 ;; This function is called by:
 11745 ;;		_main
 11746 ;; This function uses a non-reentrant model
 11747 ;;
 11748                           
 11749                           	psect	text40
 11750  002D20                     __ptext40:
 11751                           	opt stack 0
 11752  002D20                     _buttonChecking:
 11753                           	opt stack 17
 11754                           
 11755                           ;ButtonController.h: 10: if(!PORTAbits.RA2 && lastSttUP) {
 11756                           
 11757                           ;incstack = 0
 11758  002D20  B480               	btfsc	3968,2,c	;volatile
 11759  002D22  D010               	goto	l766
 11760  002D24  0100               	movlb	0	; () banked
 11761  002D26  51D0               	movf	_lastSttUP& (0+255),w,b
 11762  002D28  0100               	movlb	0	; () banked
 11763  002D2A  B4D8               	btfsc	status,2,c
 11764  002D2C  D00B               	goto	l766
 11765                           
 11766                           ; BSR set to: 0
 11767                           ;ButtonController.h: 11: lastSttUP = 0;
 11768  002D2E  0E00               	movlw	0
 11769  002D30  0100               	movlb	0	; () banked
 11770  002D32  6FD0               	movwf	_lastSttUP& (0+255),b
 11771                           
 11772                           ; BSR set to: 0
 11773                           ;ButtonController.h: 12: delay_ms(200);
 11774  002D34  0E00               	movlw	0
 11775  002D36  0100               	movlb	0	; () banked
 11776  002D38  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 11777  002D3A  0EC8               	movlw	200
 11778  002D3C  6F8F               	movwf	delay_ms@del& (0+255),b
 11779  002D3E  EC20  F02E         	call	_delay_ms	;wreg free
 11780                           
 11781                           ;ButtonController.h: 13: }else if(PORTAbits.RA2 && !lastSttUP) {
 11782  002D42  D044               	goto	l10585
 11783  002D44                     l766:
 11784  002D44  A480               	btfss	3968,2,c	;volatile
 11785  002D46  D016               	goto	l10563
 11786  002D48  0100               	movlb	0	; () banked
 11787  002D4A  51D0               	movf	_lastSttUP& (0+255),w,b
 11788  002D4C  0100               	movlb	0	; () banked
 11789  002D4E  A4D8               	btfss	status,2,c
 11790  002D50  D011               	goto	l10563
 11791                           
 11792                           ; BSR set to: 0
 11793                           ;ButtonController.h: 14: lastSttUP = 1;
 11794  002D52  0E01               	movlw	1
 11795  002D54  0100               	movlb	0	; () banked
 11796  002D56  6FD0               	movwf	_lastSttUP& (0+255),b
 11797                           
 11798                           ; BSR set to: 0
 11799                           ;ButtonController.h: 15: if(holdUPcont < 10)
 11800  002D58  0E0A               	movlw	10
 11801  002D5A  0100               	movlb	0	; () banked
 11802  002D5C  61BE               	cpfslt	_holdUPcont& (0+255),b
 11803  002D5E  D002               	goto	l10561
 11804                           
 11805                           ; BSR set to: 0
 11806                           ;ButtonController.h: 16: pressUP();
 11807  002D60  EC4C  F022         	call	_pressUP	;wreg free
 11808  002D64                     l10561:
 11809                           
 11810                           ;ButtonController.h: 17: delay_ms(50);
 11811  002D64  0E00               	movlw	0
 11812  002D66  0100               	movlb	0	; () banked
 11813  002D68  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 11814  002D6A  0E32               	movlw	50
 11815  002D6C  6F8F               	movwf	delay_ms@del& (0+255),b
 11816  002D6E  EC20  F02E         	call	_delay_ms	;wreg free
 11817                           
 11818                           ;ButtonController.h: 18: }else if(PORTAbits.RA2 == lastSttUP) {
 11819  002D72  D02C               	goto	l10585
 11820  002D74                     l10563:
 11821  002D74  A480               	btfss	3968,2,c	;volatile
 11822  002D76  D002               	goto	u14110
 11823  002D78  0E01               	movlw	1
 11824  002D7A  D001               	goto	u14116
 11825  002D7C                     u14110:
 11826  002D7C  0E00               	movlw	0
 11827  002D7E                     u14116:
 11828  002D7E  0100               	movlb	0	; () banked
 11829  002D80  19D0               	xorwf	_lastSttUP& (0+255),w,b
 11830  002D82  A4D8               	btfss	status,2,c
 11831  002D84  D023               	goto	l10585
 11832                           
 11833                           ; BSR set to: 0
 11834                           ;ButtonController.h: 19: if(PORTAbits.RA2) {
 11835  002D86  A480               	btfss	3968,2,c	;volatile
 11836  002D88  D006               	goto	l10571
 11837                           
 11838                           ; BSR set to: 0
 11839                           ;ButtonController.h: 20: holdUPcont = 0;
 11840  002D8A  0E00               	movlw	0
 11841  002D8C  0100               	movlb	0	; () banked
 11842  002D8E  6FBE               	movwf	_holdUPcont& (0+255),b
 11843                           
 11844                           ; BSR set to: 0
 11845                           ;ButtonController.h: 21: releaseUP();
 11846  002D90  EC50  F030         	call	_releaseUP	;wreg free
 11847                           
 11848                           ;ButtonController.h: 22: }else {
 11849  002D94  D01B               	goto	l10585
 11850  002D96                     l10571:
 11851                           
 11852                           ;ButtonController.h: 23: if(!UPsecurLock)
 11853  002D96  0100               	movlb	0	; () banked
 11854  002D98  51B7               	movf	_UPsecurLock& (0+255),w,b
 11855  002D9A  A4D8               	btfss	status,2,c
 11856  002D9C  D002               	goto	l10575
 11857                           
 11858                           ; BSR set to: 0
 11859                           ;ButtonController.h: 24: holdUPcont++;
 11860  002D9E  0100               	movlb	0	; () banked
 11861  002DA0  2BBE               	incf	_holdUPcont& (0+255),f,b
 11862  002DA2                     l10575:
 11863                           
 11864                           ; BSR set to: 0
 11865                           ;ButtonController.h: 25: if(holdUPcont > 9) {
 11866  002DA2  0E09               	movlw	9
 11867  002DA4  0100               	movlb	0	; () banked
 11868  002DA6  65BE               	cpfsgt	_holdUPcont& (0+255),b
 11869  002DA8  D00A               	goto	l10583
 11870                           
 11871                           ; BSR set to: 0
 11872                           ;ButtonController.h: 26: if(holdUPcont < 26)
 11873  002DAA  0E1A               	movlw	26
 11874  002DAC  0100               	movlb	0	; () banked
 11875  002DAE  61BE               	cpfslt	_holdUPcont& (0+255),b
 11876  002DB0  D003               	goto	l10581
 11877                           
 11878                           ; BSR set to: 0
 11879                           ;ButtonController.h: 27: longPressUP();
 11880  002DB2  EC4C  F02C         	call	_longPressUP	;wreg free
 11881  002DB6  D003               	goto	l10583
 11882  002DB8                     l10581:
 11883                           
 11884                           ;ButtonController.h: 28: else
 11885                           ;ButtonController.h: 29: UPsecurLock = 1;
 11886  002DB8  0E01               	movlw	1
 11887  002DBA  0100               	movlb	0	; () banked
 11888  002DBC  6FB7               	movwf	_UPsecurLock& (0+255),b
 11889  002DBE                     l10583:
 11890                           
 11891                           ;ButtonController.h: 30: }
 11892                           ;ButtonController.h: 31: delay_ms(200);
 11893  002DBE  0E00               	movlw	0
 11894  002DC0  0100               	movlb	0	; () banked
 11895  002DC2  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 11896  002DC4  0EC8               	movlw	200
 11897  002DC6  6F8F               	movwf	delay_ms@del& (0+255),b
 11898  002DC8  EC20  F02E         	call	_delay_ms	;wreg free
 11899  002DCC                     l10585:
 11900                           
 11901                           ;ButtonController.h: 32: }
 11902                           ;ButtonController.h: 33: }
 11903                           ;ButtonController.h: 34: if(!PORTAbits.RA3 && lastSttDOWN) {
 11904  002DCC  B680               	btfsc	3968,3,c	;volatile
 11905  002DCE  D010               	goto	l778
 11906  002DD0  0100               	movlb	0	; () banked
 11907  002DD2  51CD               	movf	_lastSttDOWN& (0+255),w,b
 11908  002DD4  0100               	movlb	0	; () banked
 11909  002DD6  B4D8               	btfsc	status,2,c
 11910  002DD8  D00B               	goto	l778
 11911                           
 11912                           ; BSR set to: 0
 11913                           ;ButtonController.h: 35: lastSttDOWN = 0;
 11914  002DDA  0E00               	movlw	0
 11915  002DDC  0100               	movlb	0	; () banked
 11916  002DDE  6FCD               	movwf	_lastSttDOWN& (0+255),b
 11917                           
 11918                           ; BSR set to: 0
 11919                           ;ButtonController.h: 36: delay_ms(200);
 11920  002DE0  0E00               	movlw	0
 11921  002DE2  0100               	movlb	0	; () banked
 11922  002DE4  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 11923  002DE6  0EC8               	movlw	200
 11924  002DE8  6F8F               	movwf	delay_ms@del& (0+255),b
 11925  002DEA  EC20  F02E         	call	_delay_ms	;wreg free
 11926                           
 11927                           ;ButtonController.h: 37: }else if(PORTAbits.RA3 && !lastSttDOWN) {
 11928  002DEE  D044               	goto	l10625
 11929  002DF0                     l778:
 11930  002DF0  A680               	btfss	3968,3,c	;volatile
 11931  002DF2  D016               	goto	l10603
 11932  002DF4  0100               	movlb	0	; () banked
 11933  002DF6  51CD               	movf	_lastSttDOWN& (0+255),w,b
 11934  002DF8  0100               	movlb	0	; () banked
 11935  002DFA  A4D8               	btfss	status,2,c
 11936  002DFC  D011               	goto	l10603
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;ButtonController.h: 38: lastSttDOWN = 1;
 11940  002DFE  0E01               	movlw	1
 11941  002E00  0100               	movlb	0	; () banked
 11942  002E02  6FCD               	movwf	_lastSttDOWN& (0+255),b
 11943                           
 11944                           ; BSR set to: 0
 11945                           ;ButtonController.h: 39: if(holdDOWNcont < 10)
 11946  002E04  0E0A               	movlw	10
 11947  002E06  0100               	movlb	0	; () banked
 11948  002E08  61BB               	cpfslt	_holdDOWNcont& (0+255),b
 11949  002E0A  D002               	goto	l10601
 11950                           
 11951                           ; BSR set to: 0
 11952                           ;ButtonController.h: 40: pressDOWN();
 11953  002E0C  EC4F  F023         	call	_pressDOWN	;wreg free
 11954  002E10                     l10601:
 11955                           
 11956                           ;ButtonController.h: 41: delay_ms(50);
 11957  002E10  0E00               	movlw	0
 11958  002E12  0100               	movlb	0	; () banked
 11959  002E14  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 11960  002E16  0E32               	movlw	50
 11961  002E18  6F8F               	movwf	delay_ms@del& (0+255),b
 11962  002E1A  EC20  F02E         	call	_delay_ms	;wreg free
 11963                           
 11964                           ;ButtonController.h: 42: }else if(PORTAbits.RA3 == lastSttDOWN) {
 11965  002E1E  D02C               	goto	l10625
 11966  002E20                     l10603:
 11967  002E20  A680               	btfss	3968,3,c	;volatile
 11968  002E22  D002               	goto	u14220
 11969  002E24  0E01               	movlw	1
 11970  002E26  D001               	goto	u14226
 11971  002E28                     u14220:
 11972  002E28  0E00               	movlw	0
 11973  002E2A                     u14226:
 11974  002E2A  0100               	movlb	0	; () banked
 11975  002E2C  19CD               	xorwf	_lastSttDOWN& (0+255),w,b
 11976  002E2E  A4D8               	btfss	status,2,c
 11977  002E30  D023               	goto	l10625
 11978                           
 11979                           ; BSR set to: 0
 11980                           ;ButtonController.h: 43: if(PORTAbits.RA3) {
 11981  002E32  A680               	btfss	3968,3,c	;volatile
 11982  002E34  D006               	goto	l10611
 11983                           
 11984                           ; BSR set to: 0
 11985                           ;ButtonController.h: 44: holdDOWNcont = 0;
 11986  002E36  0E00               	movlw	0
 11987  002E38  0100               	movlb	0	; () banked
 11988  002E3A  6FBB               	movwf	_holdDOWNcont& (0+255),b
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;ButtonController.h: 45: releaseDOWN();
 11992  002E3C  EC5C  F030         	call	_releaseDOWN	;wreg free
 11993                           
 11994                           ;ButtonController.h: 46: }else {
 11995  002E40  D01B               	goto	l10625
 11996  002E42                     l10611:
 11997                           
 11998                           ;ButtonController.h: 47: if(!DOWNsecurLock)
 11999  002E42  0100               	movlb	0	; () banked
 12000  002E44  51B3               	movf	_DOWNsecurLock& (0+255),w,b
 12001  002E46  A4D8               	btfss	status,2,c
 12002  002E48  D002               	goto	l10615
 12003                           
 12004                           ; BSR set to: 0
 12005                           ;ButtonController.h: 48: holdDOWNcont++;
 12006  002E4A  0100               	movlb	0	; () banked
 12007  002E4C  2BBB               	incf	_holdDOWNcont& (0+255),f,b
 12008  002E4E                     l10615:
 12009                           
 12010                           ; BSR set to: 0
 12011                           ;ButtonController.h: 49: if(holdDOWNcont > 9) {
 12012  002E4E  0E09               	movlw	9
 12013  002E50  0100               	movlb	0	; () banked
 12014  002E52  65BB               	cpfsgt	_holdDOWNcont& (0+255),b
 12015  002E54  D00A               	goto	l10623
 12016                           
 12017                           ; BSR set to: 0
 12018                           ;ButtonController.h: 50: if(holdDOWNcont < 26)
 12019  002E56  0E1A               	movlw	26
 12020  002E58  0100               	movlb	0	; () banked
 12021  002E5A  61BB               	cpfslt	_holdDOWNcont& (0+255),b
 12022  002E5C  D003               	goto	l10621
 12023                           
 12024                           ; BSR set to: 0
 12025                           ;ButtonController.h: 51: longPressDOWN();
 12026  002E5E  ECC1  F02F         	call	_longPressDOWN	;wreg free
 12027  002E62  D003               	goto	l10623
 12028  002E64                     l10621:
 12029                           
 12030                           ;ButtonController.h: 52: else
 12031                           ;ButtonController.h: 53: DOWNsecurLock = 1;
 12032  002E64  0E01               	movlw	1
 12033  002E66  0100               	movlb	0	; () banked
 12034  002E68  6FB3               	movwf	_DOWNsecurLock& (0+255),b
 12035  002E6A                     l10623:
 12036                           
 12037                           ;ButtonController.h: 54: }
 12038                           ;ButtonController.h: 55: delay_ms(200);
 12039  002E6A  0E00               	movlw	0
 12040  002E6C  0100               	movlb	0	; () banked
 12041  002E6E  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12042  002E70  0EC8               	movlw	200
 12043  002E72  6F8F               	movwf	delay_ms@del& (0+255),b
 12044  002E74  EC20  F02E         	call	_delay_ms	;wreg free
 12045  002E78                     l10625:
 12046                           
 12047                           ;ButtonController.h: 56: }
 12048                           ;ButtonController.h: 57: }
 12049                           ;ButtonController.h: 58: if(!PORTAbits.RA4 && lastSttRETRO) {
 12050  002E78  B880               	btfsc	3968,4,c	;volatile
 12051  002E7A  D010               	goto	l790
 12052  002E7C  0100               	movlb	0	; () banked
 12053  002E7E  51CF               	movf	_lastSttRETRO& (0+255),w,b
 12054  002E80  0100               	movlb	0	; () banked
 12055  002E82  B4D8               	btfsc	status,2,c
 12056  002E84  D00B               	goto	l790
 12057                           
 12058                           ; BSR set to: 0
 12059                           ;ButtonController.h: 59: lastSttRETRO = 0;
 12060  002E86  0E00               	movlw	0
 12061  002E88  0100               	movlb	0	; () banked
 12062  002E8A  6FCF               	movwf	_lastSttRETRO& (0+255),b
 12063                           
 12064                           ; BSR set to: 0
 12065                           ;ButtonController.h: 60: delay_ms(200);
 12066  002E8C  0E00               	movlw	0
 12067  002E8E  0100               	movlb	0	; () banked
 12068  002E90  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12069  002E92  0EC8               	movlw	200
 12070  002E94  6F8F               	movwf	delay_ms@del& (0+255),b
 12071  002E96  EC20  F02E         	call	_delay_ms	;wreg free
 12072                           
 12073                           ;ButtonController.h: 61: }else if(PORTAbits.RA4 && !lastSttRETRO) {
 12074  002E9A  D044               	goto	l10663
 12075  002E9C                     l790:
 12076  002E9C  A880               	btfss	3968,4,c	;volatile
 12077  002E9E  D016               	goto	l10641
 12078  002EA0  0100               	movlb	0	; () banked
 12079  002EA2  51CF               	movf	_lastSttRETRO& (0+255),w,b
 12080  002EA4  0100               	movlb	0	; () banked
 12081  002EA6  A4D8               	btfss	status,2,c
 12082  002EA8  D011               	goto	l10641
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;ButtonController.h: 62: lastSttRETRO = 1;
 12086  002EAA  0E01               	movlw	1
 12087  002EAC  0100               	movlb	0	; () banked
 12088  002EAE  6FCF               	movwf	_lastSttRETRO& (0+255),b
 12089                           
 12090                           ; BSR set to: 0
 12091                           ;ButtonController.h: 63: if(holdRETROcont < 10)
 12092  002EB0  0E0A               	movlw	10
 12093  002EB2  0100               	movlb	0	; () banked
 12094  002EB4  61BD               	cpfslt	_holdRETROcont& (0+255),b
 12095  002EB6  D002               	goto	l793
 12096                           
 12097                           ; BSR set to: 0
 12098                           ;ButtonController.h: 64: pressRETRO();
 12099  002EB8  EC2A  F02D         	call	_pressRETRO	;wreg free
 12100  002EBC                     l793:
 12101                           
 12102                           ;ButtonController.h: 65: delay_ms(50);
 12103  002EBC  0E00               	movlw	0
 12104  002EBE  0100               	movlb	0	; () banked
 12105  002EC0  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12106  002EC2  0E32               	movlw	50
 12107  002EC4  6F8F               	movwf	delay_ms@del& (0+255),b
 12108  002EC6  EC20  F02E         	call	_delay_ms	;wreg free
 12109                           
 12110                           ;ButtonController.h: 66: }else if(PORTAbits.RA4 == lastSttRETRO) {
 12111  002ECA  D02C               	goto	l10663
 12112  002ECC                     l10641:
 12113  002ECC  A880               	btfss	3968,4,c	;volatile
 12114  002ECE  D002               	goto	u14330
 12115  002ED0  0E01               	movlw	1
 12116  002ED2  D001               	goto	u14336
 12117  002ED4                     u14330:
 12118  002ED4  0E00               	movlw	0
 12119  002ED6                     u14336:
 12120  002ED6  0100               	movlb	0	; () banked
 12121  002ED8  19CF               	xorwf	_lastSttRETRO& (0+255),w,b
 12122  002EDA  A4D8               	btfss	status,2,c
 12123  002EDC  D023               	goto	l10663
 12124                           
 12125                           ; BSR set to: 0
 12126                           ;ButtonController.h: 67: if(PORTAbits.RA4) {
 12127  002EDE  A880               	btfss	3968,4,c	;volatile
 12128  002EE0  D006               	goto	l10649
 12129                           
 12130                           ; BSR set to: 0
 12131                           ;ButtonController.h: 68: holdRETROcont = 0;
 12132  002EE2  0E00               	movlw	0
 12133  002EE4  0100               	movlb	0	; () banked
 12134  002EE6  6FBD               	movwf	_holdRETROcont& (0+255),b
 12135                           
 12136                           ; BSR set to: 0
 12137                           ;ButtonController.h: 69: releaseRETRO();
 12138  002EE8  EC56  F030         	call	_releaseRETRO	;wreg free
 12139                           
 12140                           ;ButtonController.h: 70: }else {
 12141  002EEC  D01B               	goto	l10663
 12142  002EEE                     l10649:
 12143                           
 12144                           ;ButtonController.h: 71: if(!RETROsecurLock)
 12145  002EEE  0100               	movlb	0	; () banked
 12146  002EF0  51B6               	movf	_RETROsecurLock& (0+255),w,b
 12147  002EF2  A4D8               	btfss	status,2,c
 12148  002EF4  D002               	goto	l10653
 12149                           
 12150                           ; BSR set to: 0
 12151                           ;ButtonController.h: 72: holdRETROcont++;
 12152  002EF6  0100               	movlb	0	; () banked
 12153  002EF8  2BBD               	incf	_holdRETROcont& (0+255),f,b
 12154  002EFA                     l10653:
 12155                           
 12156                           ; BSR set to: 0
 12157                           ;ButtonController.h: 73: if(holdRETROcont > 9) {
 12158  002EFA  0E09               	movlw	9
 12159  002EFC  0100               	movlb	0	; () banked
 12160  002EFE  65BD               	cpfsgt	_holdRETROcont& (0+255),b
 12161  002F00  D00A               	goto	l10661
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;ButtonController.h: 74: if(holdRETROcont < 26)
 12165  002F02  0E1A               	movlw	26
 12166  002F04  0100               	movlb	0	; () banked
 12167  002F06  61BD               	cpfslt	_holdRETROcont& (0+255),b
 12168  002F08  D003               	goto	l10659
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;ButtonController.h: 75: longPressRETRO();
 12172  002F0A  ECFD  F02D         	call	_longPressRETRO	;wreg free
 12173  002F0E  D003               	goto	l10661
 12174  002F10                     l10659:
 12175                           
 12176                           ;ButtonController.h: 76: else
 12177                           ;ButtonController.h: 77: RETROsecurLock = 1;
 12178  002F10  0E01               	movlw	1
 12179  002F12  0100               	movlb	0	; () banked
 12180  002F14  6FB6               	movwf	_RETROsecurLock& (0+255),b
 12181  002F16                     l10661:
 12182                           
 12183                           ;ButtonController.h: 78: }
 12184                           ;ButtonController.h: 79: delay_ms(200);
 12185  002F16  0E00               	movlw	0
 12186  002F18  0100               	movlb	0	; () banked
 12187  002F1A  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12188  002F1C  0EC8               	movlw	200
 12189  002F1E  6F8F               	movwf	delay_ms@del& (0+255),b
 12190  002F20  EC20  F02E         	call	_delay_ms	;wreg free
 12191  002F24                     l10663:
 12192                           
 12193                           ;ButtonController.h: 80: }
 12194                           ;ButtonController.h: 81: }
 12195                           ;ButtonController.h: 82: if(!PORTAbits.RA5 && lastSttENTER) {
 12196  002F24  BA80               	btfsc	3968,5,c	;volatile
 12197  002F26  D010               	goto	l802
 12198  002F28  0100               	movlb	0	; () banked
 12199  002F2A  51CE               	movf	_lastSttENTER& (0+255),w,b
 12200  002F2C  0100               	movlb	0	; () banked
 12201  002F2E  B4D8               	btfsc	status,2,c
 12202  002F30  D00B               	goto	l802
 12203                           
 12204                           ; BSR set to: 0
 12205                           ;ButtonController.h: 83: lastSttENTER = 0;
 12206  002F32  0E00               	movlw	0
 12207  002F34  0100               	movlb	0	; () banked
 12208  002F36  6FCE               	movwf	_lastSttENTER& (0+255),b
 12209                           
 12210                           ; BSR set to: 0
 12211                           ;ButtonController.h: 84: delay_ms(200);
 12212  002F38  0E00               	movlw	0
 12213  002F3A  0100               	movlb	0	; () banked
 12214  002F3C  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12215  002F3E  0EC8               	movlw	200
 12216  002F40  6F8F               	movwf	delay_ms@del& (0+255),b
 12217  002F42  EC20  F02E         	call	_delay_ms	;wreg free
 12218                           
 12219                           ;ButtonController.h: 85: }else if(PORTAbits.RA5 && !lastSttENTER) {
 12220  002F46  0012               	return	
 12221  002F48                     l802:
 12222  002F48  AA80               	btfss	3968,5,c	;volatile
 12223  002F4A  D016               	goto	l10681
 12224  002F4C  0100               	movlb	0	; () banked
 12225  002F4E  51CE               	movf	_lastSttENTER& (0+255),w,b
 12226  002F50  0100               	movlb	0	; () banked
 12227  002F52  A4D8               	btfss	status,2,c
 12228  002F54  D011               	goto	l10681
 12229                           
 12230                           ; BSR set to: 0
 12231                           ;ButtonController.h: 86: lastSttENTER = 1;
 12232  002F56  0E01               	movlw	1
 12233  002F58  0100               	movlb	0	; () banked
 12234  002F5A  6FCE               	movwf	_lastSttENTER& (0+255),b
 12235                           
 12236                           ; BSR set to: 0
 12237                           ;ButtonController.h: 87: if(holdENTERcont < 10)
 12238  002F5C  0E0A               	movlw	10
 12239  002F5E  0100               	movlb	0	; () banked
 12240  002F60  61BC               	cpfslt	_holdENTERcont& (0+255),b
 12241  002F62  D002               	goto	l10679
 12242                           
 12243                           ; BSR set to: 0
 12244                           ;ButtonController.h: 88: pressENTER();
 12245  002F64  ECFB  F018         	call	_pressENTER	;wreg free
 12246  002F68                     l10679:
 12247                           
 12248                           ;ButtonController.h: 89: delay_ms(50);
 12249  002F68  0E00               	movlw	0
 12250  002F6A  0100               	movlb	0	; () banked
 12251  002F6C  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12252  002F6E  0E32               	movlw	50
 12253  002F70  6F8F               	movwf	delay_ms@del& (0+255),b
 12254  002F72  EC20  F02E         	call	_delay_ms	;wreg free
 12255                           
 12256                           ;ButtonController.h: 90: }else if(PORTAbits.RA5 == lastSttENTER) {
 12257  002F76  0012               	return	
 12258  002F78                     l10681:
 12259  002F78  AA80               	btfss	3968,5,c	;volatile
 12260  002F7A  D002               	goto	u14440
 12261  002F7C  0E01               	movlw	1
 12262  002F7E  D001               	goto	u14446
 12263  002F80                     u14440:
 12264  002F80  0E00               	movlw	0
 12265  002F82                     u14446:
 12266  002F82  0100               	movlb	0	; () banked
 12267  002F84  19CE               	xorwf	_lastSttENTER& (0+255),w,b
 12268  002F86  A4D8               	btfss	status,2,c
 12269  002F88  0012               	return	
 12270                           
 12271                           ; BSR set to: 0
 12272                           ;ButtonController.h: 91: if(PORTAbits.RA5) {
 12273  002F8A  AA80               	btfss	3968,5,c	;volatile
 12274  002F8C  D006               	goto	l10689
 12275                           
 12276                           ; BSR set to: 0
 12277                           ;ButtonController.h: 92: holdENTERcont = 0;
 12278  002F8E  0E00               	movlw	0
 12279  002F90  0100               	movlb	0	; () banked
 12280  002F92  6FBC               	movwf	_holdENTERcont& (0+255),b
 12281                           
 12282                           ; BSR set to: 0
 12283                           ;ButtonController.h: 93: releaseENTER();
 12284  002F94  EC42  F030         	call	_releaseENTER	;wreg free
 12285                           
 12286                           ;ButtonController.h: 94: }else {
 12287  002F98  0012               	return	
 12288  002F9A                     l10689:
 12289                           
 12290                           ;ButtonController.h: 95: if(!ENTERsecurLock)
 12291  002F9A  0100               	movlb	0	; () banked
 12292  002F9C  51B5               	movf	_ENTERsecurLock& (0+255),w,b
 12293  002F9E  A4D8               	btfss	status,2,c
 12294  002FA0  D002               	goto	l10693
 12295                           
 12296                           ; BSR set to: 0
 12297                           ;ButtonController.h: 96: holdENTERcont++;
 12298  002FA2  0100               	movlb	0	; () banked
 12299  002FA4  2BBC               	incf	_holdENTERcont& (0+255),f,b
 12300  002FA6                     l10693:
 12301                           
 12302                           ; BSR set to: 0
 12303                           ;ButtonController.h: 97: if(holdENTERcont > 9) {
 12304  002FA6  0E09               	movlw	9
 12305  002FA8  0100               	movlb	0	; () banked
 12306  002FAA  65BC               	cpfsgt	_holdENTERcont& (0+255),b
 12307  002FAC  D00A               	goto	l10701
 12308                           
 12309                           ; BSR set to: 0
 12310                           ;ButtonController.h: 98: if(holdENTERcont < 26)
 12311  002FAE  0E1A               	movlw	26
 12312  002FB0  0100               	movlb	0	; () banked
 12313  002FB2  61BC               	cpfslt	_holdENTERcont& (0+255),b
 12314  002FB4  D003               	goto	l10699
 12315                           
 12316                           ; BSR set to: 0
 12317                           ;ButtonController.h: 99: longPressENTER();
 12318  002FB6  EC79  F027         	call	_longPressENTER	;wreg free
 12319  002FBA  D003               	goto	l10701
 12320  002FBC                     l10699:
 12321                           
 12322                           ;ButtonController.h: 100: else
 12323                           ;ButtonController.h: 101: ENTERsecurLock = 1;
 12324  002FBC  0E01               	movlw	1
 12325  002FBE  0100               	movlb	0	; () banked
 12326  002FC0  6FB5               	movwf	_ENTERsecurLock& (0+255),b
 12327  002FC2                     l10701:
 12328                           
 12329                           ;ButtonController.h: 102: }
 12330                           ;ButtonController.h: 103: delay_ms(200);
 12331  002FC2  0E00               	movlw	0
 12332  002FC4  0100               	movlb	0	; () banked
 12333  002FC6  6F90               	movwf	(delay_ms@del+1)& (0+255),b
 12334  002FC8  0EC8               	movlw	200
 12335  002FCA  6F8F               	movwf	delay_ms@del& (0+255),b
 12336  002FCC  EC20  F02E         	call	_delay_ms	;wreg free
 12337  002FD0  0012               	return	
 12338  002FD2                     __end_of_buttonChecking:
 12339                           	opt stack 0
 12340                           tblptru	equ	0xFF8
 12341                           tblptrh	equ	0xFF7
 12342                           tblptrl	equ	0xFF6
 12343                           tablat	equ	0xFF5
 12344                           prodh	equ	0xFF4
 12345                           prodl	equ	0xFF3
 12346                           intcon	equ	0xFF2
 12347                           postinc0	equ	0xFEE
 12348                           wreg	equ	0xFE8
 12349                           postdec1	equ	0xFE5
 12350                           fsr1l	equ	0xFE1
 12351                           indf2	equ	0xFDF
 12352                           postinc2	equ	0xFDE
 12353                           postdec2	equ	0xFDD
 12354                           fsr2h	equ	0xFDA
 12355                           fsr2l	equ	0xFD9
 12356                           status	equ	0xFD8
 12357                           
 12358 ;; *************** function _releaseUP *****************
 12359 ;; Defined at:
 12360 ;;		line 178 in file "source/DisplayProtocol.h"
 12361 ;; Parameters:    Size  Location     Type
 12362 ;;		None
 12363 ;; Auto vars:     Size  Location     Type
 12364 ;;		None
 12365 ;; Return value:  Size  Location     Type
 12366 ;;                  1    wreg      void 
 12367 ;; Registers used:
 12368 ;;		wreg, status,2
 12369 ;; Tracked objects:
 12370 ;;		On entry : 0/0
 12371 ;;		On exit  : 0/0
 12372 ;;		Unchanged: 0/0
 12373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12374 ;;      Params:         0       0       0       0       0       0       0
 12375 ;;      Locals:         0       0       0       0       0       0       0
 12376 ;;      Temps:          0       0       0       0       0       0       0
 12377 ;;      Totals:         0       0       0       0       0       0       0
 12378 ;;Total ram usage:        0 bytes
 12379 ;; Hardware stack levels used:    1
 12380 ;; Hardware stack levels required when called:    8
 12381 ;; This function calls:
 12382 ;;		Nothing
 12383 ;; This function is called by:
 12384 ;;		_buttonChecking
 12385 ;; This function uses a non-reentrant model
 12386 ;;
 12387                           
 12388                           	psect	text41
 12389  0060A0                     __ptext41:
 12390                           	opt stack 0
 12391  0060A0                     _releaseUP:
 12392                           	opt stack 21
 12393                           
 12394                           ;DisplayProtocol.h: 179: UPisLP = 0;
 12395                           
 12396                           ;incstack = 0
 12397  0060A0  0E00               	movlw	0
 12398  0060A2  6E3C               	movwf	_UPisLP,c
 12399                           
 12400                           ;DisplayProtocol.h: 180: UPsecurLock = 0;
 12401  0060A4  0E00               	movlw	0
 12402  0060A6  0100               	movlb	0	; () banked
 12403  0060A8  6FB7               	movwf	_UPsecurLock& (0+255),b
 12404                           
 12405                           ; BSR set to: 0
 12406  0060AA  0012               	return		;funcret
 12407  0060AC                     __end_of_releaseUP:
 12408                           	opt stack 0
 12409                           tblptru	equ	0xFF8
 12410                           tblptrh	equ	0xFF7
 12411                           tblptrl	equ	0xFF6
 12412                           tablat	equ	0xFF5
 12413                           prodh	equ	0xFF4
 12414                           prodl	equ	0xFF3
 12415                           intcon	equ	0xFF2
 12416                           postinc0	equ	0xFEE
 12417                           wreg	equ	0xFE8
 12418                           postdec1	equ	0xFE5
 12419                           fsr1l	equ	0xFE1
 12420                           indf2	equ	0xFDF
 12421                           postinc2	equ	0xFDE
 12422                           postdec2	equ	0xFDD
 12423                           fsr2h	equ	0xFDA
 12424                           fsr2l	equ	0xFD9
 12425                           status	equ	0xFD8
 12426                           
 12427 ;; *************** function _releaseRETRO *****************
 12428 ;; Defined at:
 12429 ;;		line 264 in file "source/DisplayProtocol.h"
 12430 ;; Parameters:    Size  Location     Type
 12431 ;;		None
 12432 ;; Auto vars:     Size  Location     Type
 12433 ;;		None
 12434 ;; Return value:  Size  Location     Type
 12435 ;;                  1    wreg      void 
 12436 ;; Registers used:
 12437 ;;		wreg, status,2
 12438 ;; Tracked objects:
 12439 ;;		On entry : 0/0
 12440 ;;		On exit  : 0/0
 12441 ;;		Unchanged: 0/0
 12442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12443 ;;      Params:         0       0       0       0       0       0       0
 12444 ;;      Locals:         0       0       0       0       0       0       0
 12445 ;;      Temps:          0       0       0       0       0       0       0
 12446 ;;      Totals:         0       0       0       0       0       0       0
 12447 ;;Total ram usage:        0 bytes
 12448 ;; Hardware stack levels used:    1
 12449 ;; Hardware stack levels required when called:    8
 12450 ;; This function calls:
 12451 ;;		Nothing
 12452 ;; This function is called by:
 12453 ;;		_buttonChecking
 12454 ;; This function uses a non-reentrant model
 12455 ;;
 12456                           
 12457                           	psect	text42
 12458  0060AC                     __ptext42:
 12459                           	opt stack 0
 12460  0060AC                     _releaseRETRO:
 12461                           	opt stack 21
 12462                           
 12463                           ;DisplayProtocol.h: 265: RETROisLP = 0;
 12464                           
 12465                           ; BSR set to: 0
 12466                           ;incstack = 0
 12467  0060AC  0E00               	movlw	0
 12468  0060AE  6E3B               	movwf	_RETROisLP,c
 12469                           
 12470                           ;DisplayProtocol.h: 266: RETROsecurLock = 0;
 12471  0060B0  0E00               	movlw	0
 12472  0060B2  0100               	movlb	0	; () banked
 12473  0060B4  6FB6               	movwf	_RETROsecurLock& (0+255),b
 12474                           
 12475                           ; BSR set to: 0
 12476  0060B6  0012               	return		;funcret
 12477  0060B8                     __end_of_releaseRETRO:
 12478                           	opt stack 0
 12479                           tblptru	equ	0xFF8
 12480                           tblptrh	equ	0xFF7
 12481                           tblptrl	equ	0xFF6
 12482                           tablat	equ	0xFF5
 12483                           prodh	equ	0xFF4
 12484                           prodl	equ	0xFF3
 12485                           intcon	equ	0xFF2
 12486                           postinc0	equ	0xFEE
 12487                           wreg	equ	0xFE8
 12488                           postdec1	equ	0xFE5
 12489                           fsr1l	equ	0xFE1
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           postdec2	equ	0xFDD
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _releaseENTER *****************
 12498 ;; Defined at:
 12499 ;;		line 382 in file "source/DisplayProtocol.h"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;		None
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;		None
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, status,2
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12513 ;;      Params:         0       0       0       0       0       0       0
 12514 ;;      Locals:         0       0       0       0       0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0
 12516 ;;      Totals:         0       0       0       0       0       0       0
 12517 ;;Total ram usage:        0 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    8
 12520 ;; This function calls:
 12521 ;;		Nothing
 12522 ;; This function is called by:
 12523 ;;		_buttonChecking
 12524 ;; This function uses a non-reentrant model
 12525 ;;
 12526                           
 12527                           	psect	text43
 12528  006084                     __ptext43:
 12529                           	opt stack 0
 12530  006084                     _releaseENTER:
 12531                           	opt stack 21
 12532                           
 12533                           ;DisplayProtocol.h: 383: ENTERisLP = 0;
 12534                           
 12535                           ; BSR set to: 0
 12536                           ;incstack = 0
 12537  006084  0E00               	movlw	0
 12538  006086  0100               	movlb	0	; () banked
 12539  006088  6FB4               	movwf	_ENTERisLP& (0+255),b
 12540                           
 12541                           ;DisplayProtocol.h: 384: ENTERsecurLock = 0;
 12542  00608A  0E00               	movlw	0
 12543  00608C  0100               	movlb	0	; () banked
 12544  00608E  6FB5               	movwf	_ENTERsecurLock& (0+255),b
 12545                           
 12546                           ; BSR set to: 0
 12547  006090  0012               	return		;funcret
 12548  006092                     __end_of_releaseENTER:
 12549                           	opt stack 0
 12550                           tblptru	equ	0xFF8
 12551                           tblptrh	equ	0xFF7
 12552                           tblptrl	equ	0xFF6
 12553                           tablat	equ	0xFF5
 12554                           prodh	equ	0xFF4
 12555                           prodl	equ	0xFF3
 12556                           intcon	equ	0xFF2
 12557                           postinc0	equ	0xFEE
 12558                           wreg	equ	0xFE8
 12559                           postdec1	equ	0xFE5
 12560                           fsr1l	equ	0xFE1
 12561                           indf2	equ	0xFDF
 12562                           postinc2	equ	0xFDE
 12563                           postdec2	equ	0xFDD
 12564                           fsr2h	equ	0xFDA
 12565                           fsr2l	equ	0xFD9
 12566                           status	equ	0xFD8
 12567                           
 12568 ;; *************** function _releaseDOWN *****************
 12569 ;; Defined at:
 12570 ;;		line 228 in file "source/DisplayProtocol.h"
 12571 ;; Parameters:    Size  Location     Type
 12572 ;;		None
 12573 ;; Auto vars:     Size  Location     Type
 12574 ;;		None
 12575 ;; Return value:  Size  Location     Type
 12576 ;;                  1    wreg      void 
 12577 ;; Registers used:
 12578 ;;		wreg, status,2
 12579 ;; Tracked objects:
 12580 ;;		On entry : 0/0
 12581 ;;		On exit  : 0/0
 12582 ;;		Unchanged: 0/0
 12583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12584 ;;      Params:         0       0       0       0       0       0       0
 12585 ;;      Locals:         0       0       0       0       0       0       0
 12586 ;;      Temps:          0       0       0       0       0       0       0
 12587 ;;      Totals:         0       0       0       0       0       0       0
 12588 ;;Total ram usage:        0 bytes
 12589 ;; Hardware stack levels used:    1
 12590 ;; Hardware stack levels required when called:    8
 12591 ;; This function calls:
 12592 ;;		Nothing
 12593 ;; This function is called by:
 12594 ;;		_buttonChecking
 12595 ;; This function uses a non-reentrant model
 12596 ;;
 12597                           
 12598                           	psect	text44
 12599  0060B8                     __ptext44:
 12600                           	opt stack 0
 12601  0060B8                     _releaseDOWN:
 12602                           	opt stack 21
 12603                           
 12604                           ;DisplayProtocol.h: 229: DOWNisLP = 0;
 12605                           
 12606                           ; BSR set to: 0
 12607                           ;incstack = 0
 12608  0060B8  0E00               	movlw	0
 12609  0060BA  6E37               	movwf	_DOWNisLP,c
 12610                           
 12611                           ;DisplayProtocol.h: 230: DOWNsecurLock = 0;
 12612  0060BC  0E00               	movlw	0
 12613  0060BE  0100               	movlb	0	; () banked
 12614  0060C0  6FB3               	movwf	_DOWNsecurLock& (0+255),b
 12615                           
 12616                           ; BSR set to: 0
 12617  0060C2  0012               	return		;funcret
 12618  0060C4                     __end_of_releaseDOWN:
 12619                           	opt stack 0
 12620                           tblptru	equ	0xFF8
 12621                           tblptrh	equ	0xFF7
 12622                           tblptrl	equ	0xFF6
 12623                           tablat	equ	0xFF5
 12624                           prodh	equ	0xFF4
 12625                           prodl	equ	0xFF3
 12626                           intcon	equ	0xFF2
 12627                           postinc0	equ	0xFEE
 12628                           wreg	equ	0xFE8
 12629                           postdec1	equ	0xFE5
 12630                           fsr1l	equ	0xFE1
 12631                           indf2	equ	0xFDF
 12632                           postinc2	equ	0xFDE
 12633                           postdec2	equ	0xFDD
 12634                           fsr2h	equ	0xFDA
 12635                           fsr2l	equ	0xFD9
 12636                           status	equ	0xFD8
 12637                           
 12638 ;; *************** function _pressUP *****************
 12639 ;; Defined at:
 12640 ;;		line 124 in file "source/DisplayProtocol.h"
 12641 ;; Parameters:    Size  Location     Type
 12642 ;;		None
 12643 ;; Auto vars:     Size  Location     Type
 12644 ;;		None
 12645 ;; Return value:  Size  Location     Type
 12646 ;;                  1    wreg      void 
 12647 ;; Registers used:
 12648 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12649 ;; Tracked objects:
 12650 ;;		On entry : 0/0
 12651 ;;		On exit  : 0/0
 12652 ;;		Unchanged: 0/0
 12653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12654 ;;      Params:         0       0       0       0       0       0       0
 12655 ;;      Locals:         0       0       0       0       0       0       0
 12656 ;;      Temps:          0       1       0       0       0       0       0
 12657 ;;      Totals:         0       1       0       0       0       0       0
 12658 ;;Total ram usage:        1 bytes
 12659 ;; Hardware stack levels used:    1
 12660 ;; Hardware stack levels required when called:    9
 12661 ;; This function calls:
 12662 ;;		_chanValDigUP
 12663 ;; This function is called by:
 12664 ;;		_buttonChecking
 12665 ;; This function uses a non-reentrant model
 12666 ;;
 12667                           
 12668                           	psect	text45
 12669  004498                     __ptext45:
 12670                           	opt stack 0
 12671  004498                     _pressUP:
 12672                           	opt stack 20
 12673                           
 12674                           ;DisplayProtocol.h: 125: if (actualScreen == 0 || actualScreen == 4) {
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;incstack = 0
 12678  004498  0100               	movlb	0	; () banked
 12679  00449A  51B8               	movf	_actualScreen& (0+255),w,b
 12680  00449C  B4D8               	btfsc	status,2,c
 12681  00449E  D005               	goto	l7013
 12682                           
 12683                           ; BSR set to: 0
 12684  0044A0  0E04               	movlw	4
 12685  0044A2  0100               	movlb	0	; () banked
 12686  0044A4  19B8               	xorwf	_actualScreen& (0+255),w,b
 12687  0044A6  A4D8               	btfss	status,2,c
 12688  0044A8  D00C               	goto	l7019
 12689  0044AA                     l7013:
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;DisplayProtocol.h: 126: menuSection++;
 12693  0044AA  0101               	movlb	1	; () banked
 12694  0044AC  2BB6               	incf	_menuSection& (0+255),f,b
 12695                           
 12696                           ; BSR set to: 1
 12697                           ;DisplayProtocol.h: 127: if (menuSection > 4)
 12698  0044AE  0101               	movlb	1	; () banked
 12699  0044B0  51B6               	movf	_menuSection& (0+255),w,b
 12700  0044B2  0A80               	xorlw	128
 12701  0044B4  0F7B               	addlw	-133
 12702  0044B6  A0D8               	btfss	status,0,c
 12703  0044B8  0012               	return	
 12704                           
 12705                           ; BSR set to: 1
 12706                           ;DisplayProtocol.h: 128: menuSection = 0;
 12707  0044BA  0E00               	movlw	0
 12708  0044BC  0101               	movlb	1	; () banked
 12709  0044BE  6FB6               	movwf	_menuSection& (0+255),b
 12710                           
 12711                           ; BSR set to: 1
 12712                           ;DisplayProtocol.h: 129: } else if (actualScreen == 1) {
 12713  0044C0  0012               	return	
 12714  0044C2                     l7019:
 12715  0044C2  0100               	movlb	0	; () banked
 12716  0044C4  05B8               	decf	_actualScreen& (0+255),w,b
 12717  0044C6  A4D8               	btfss	status,2,c
 12718  0044C8  D024               	goto	l7025
 12719                           
 12720                           ; BSR set to: 0
 12721                           ;DisplayProtocol.h: 130: introducido[passSection]++;
 12722  0044CA  0100               	movlb	0	; () banked
 12723  0044CC  51C0               	movf	_passSection& (0+255),w,b
 12724  0044CE  0D01               	mullw	1
 12725  0044D0  0EAC               	movlw	low _introducido
 12726  0044D2  24F3               	addwf	prodl,w,c
 12727  0044D4  6ED9               	movwf	fsr2l,c
 12728  0044D6  0E01               	movlw	high _introducido
 12729  0044D8  20F4               	addwfc	prodh,w,c
 12730  0044DA  6EDA               	movwf	fsr2h,c
 12731  0044DC  2ADF               	incf	indf2,f,c
 12732                           
 12733                           ;DisplayProtocol.h: 131: if (introducido[passSection] > 9)
 12734  0044DE  0100               	movlb	0	; () banked
 12735  0044E0  51C0               	movf	_passSection& (0+255),w,b
 12736  0044E2  0D01               	mullw	1
 12737  0044E4  0EAC               	movlw	low _introducido
 12738  0044E6  24F3               	addwf	prodl,w,c
 12739  0044E8  6ED9               	movwf	fsr2l,c
 12740  0044EA  0E01               	movlw	high _introducido
 12741  0044EC  20F4               	addwfc	prodh,w,c
 12742  0044EE  6EDA               	movwf	fsr2h,c
 12743  0044F0  50DF               	movf	indf2,w,c
 12744  0044F2  0A80               	xorlw	128
 12745  0044F4  0F76               	addlw	-138
 12746  0044F6  A0D8               	btfss	status,0,c
 12747  0044F8  0012               	return	
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;DisplayProtocol.h: 132: introducido[passSection] = 0;
 12751  0044FA  0100               	movlb	0	; () banked
 12752  0044FC  51C0               	movf	_passSection& (0+255),w,b
 12753  0044FE  0D01               	mullw	1
 12754  004500  0EAC               	movlw	low _introducido
 12755  004502  24F3               	addwf	prodl,w,c
 12756  004504  6ED9               	movwf	fsr2l,c
 12757  004506  0E01               	movlw	high _introducido
 12758  004508  20F4               	addwfc	prodh,w,c
 12759  00450A  6EDA               	movwf	fsr2h,c
 12760  00450C  0E00               	movlw	0
 12761  00450E  6EDF               	movwf	indf2,c
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;DisplayProtocol.h: 133: } else if (actualScreen == 2 || actualScreen == 3
 12765  004510  0012               	return	
 12766  004512                     l7025:
 12767                           
 12768                           ; BSR set to: 0
 12769                           ;DisplayProtocol.h: 134: || actualScreen == 10) {
 12770  004512  0E02               	movlw	2
 12771  004514  0100               	movlb	0	; () banked
 12772  004516  19B8               	xorwf	_actualScreen& (0+255),w,b
 12773  004518  B4D8               	btfsc	status,2,c
 12774  00451A  D00A               	goto	l7031
 12775                           
 12776                           ; BSR set to: 0
 12777  00451C  0E03               	movlw	3
 12778  00451E  0100               	movlb	0	; () banked
 12779  004520  19B8               	xorwf	_actualScreen& (0+255),w,b
 12780  004522  B4D8               	btfsc	status,2,c
 12781  004524  D005               	goto	l7031
 12782                           
 12783                           ; BSR set to: 0
 12784  004526  0E0A               	movlw	10
 12785  004528  0100               	movlb	0	; () banked
 12786  00452A  19B8               	xorwf	_actualScreen& (0+255),w,b
 12787  00452C  A4D8               	btfss	status,2,c
 12788  00452E  D011               	goto	l7037
 12789  004530                     l7031:
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;DisplayProtocol.h: 135: selSN = !selSN;
 12793  004530  0100               	movlb	0	; () banked
 12794  004532  51C1               	movf	_selSN& (0+255),w,b
 12795  004534  A4D8               	btfss	status,2,c
 12796  004536  D002               	goto	u8390
 12797  004538  0E01               	movlw	1
 12798  00453A  D001               	goto	u8400
 12799  00453C                     u8390:
 12800  00453C  0E00               	movlw	0
 12801  00453E                     u8400:
 12802  00453E  0100               	movlb	0	; () banked
 12803  004540  6FC1               	movwf	_selSN& (0+255),b
 12804                           
 12805                           ; BSR set to: 0
 12806                           ;DisplayProtocol.h: 136: if(selSN > 1)
 12807  004542  0E01               	movlw	1
 12808  004544  0100               	movlb	0	; () banked
 12809  004546  65C1               	cpfsgt	_selSN& (0+255),b
 12810  004548  0012               	return	
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;DisplayProtocol.h: 137: selSN = 0;
 12814  00454A  0E00               	movlw	0
 12815  00454C  0100               	movlb	0	; () banked
 12816  00454E  6FC1               	movwf	_selSN& (0+255),b
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;DisplayProtocol.h: 138: }else if(actualScreen == 5) {
 12820  004550  0012               	return	
 12821  004552                     l7037:
 12822                           
 12823                           ; BSR set to: 0
 12824  004552  0E05               	movlw	5
 12825  004554  0100               	movlb	0	; () banked
 12826  004556  19B8               	xorwf	_actualScreen& (0+255),w,b
 12827  004558  A4D8               	btfss	status,2,c
 12828  00455A  0012               	return	
 12829  00455C  D00D               	goto	l7051
 12830  00455E                     l7041:
 12831                           
 12832                           ;DisplayProtocol.h: 143: chanValDigUP();
 12833  00455E  EC2B  F025         	call	_chanValDigUP	;wreg free
 12834                           
 12835                           ;DisplayProtocol.h: 144: break;
 12836  004562  0012               	return	
 12837  004564                     l7043:
 12838                           
 12839                           ;DisplayProtocol.h: 146: chanVals++;
 12840  004564  0101               	movlb	1	; () banked
 12841  004566  4BB4               	infsnz	_chanVals& (0+255),f,b
 12842  004568  2BB5               	incf	(_chanVals+1)& (0+255),f,b
 12843                           
 12844                           ;DisplayProtocol.h: 147: break;
 12845  00456A  0012               	return	
 12846  00456C                     l7045:
 12847                           
 12848                           ; BSR set to: 1
 12849                           ;DisplayProtocol.h: 149: chanValDigUP();
 12850  00456C  EC2B  F025         	call	_chanValDigUP	;wreg free
 12851                           
 12852                           ;DisplayProtocol.h: 150: break;
 12853  004570  0012               	return	
 12854  004572                     l7047:
 12855                           
 12856                           ;DisplayProtocol.h: 152: chanValDigUP();
 12857  004572  EC2B  F025         	call	_chanValDigUP	;wreg free
 12858                           
 12859                           ;DisplayProtocol.h: 154: }
 12860                           ;DisplayProtocol.h: 155: }
 12861                           
 12862                           ;DisplayProtocol.h: 153: break;
 12863  004576  0012               	return	
 12864  004578                     l7051:
 12865  004578  0101               	movlb	1	; () banked
 12866  00457A  51B6               	movf	_menuSection& (0+255),w,b
 12867                           
 12868                           ; Switch size 1, requested type "space"
 12869                           ; Number of cases is 5, Range of values is 0 to 4
 12870                           ; switch strategies available:
 12871                           ; Name         Instructions Cycles
 12872                           ; simple_byte           16     9 (average)
 12873                           ;	Chosen strategy is simple_byte
 12874  00457C  0A00               	xorlw	0	; case 0
 12875  00457E  B4D8               	btfsc	status,2,c
 12876  004580  0012               	return	
 12877  004582  0A01               	xorlw	1	; case 1
 12878  004584  B4D8               	btfsc	status,2,c
 12879  004586  D7EB               	goto	l7041
 12880  004588  0A03               	xorlw	3	; case 2
 12881  00458A  B4D8               	btfsc	status,2,c
 12882  00458C  D7EB               	goto	l7043
 12883  00458E  0A01               	xorlw	1	; case 3
 12884  004590  B4D8               	btfsc	status,2,c
 12885  004592  D7EC               	goto	l7045
 12886  004594  0A07               	xorlw	7	; case 4
 12887  004596  A4D8               	btfss	status,2,c
 12888                           
 12889                           ; BSR set to: 1
 12890                           
 12891                           ; BSR set to: 1
 12892                           
 12893                           ; BSR set to: 1
 12894                           
 12895                           ; BSR set to: 1
 12896  004598  0012               	return	
 12897  00459A  D7EB               	goto	l7047
 12898  00459C                     __end_of_pressUP:
 12899                           	opt stack 0
 12900                           tblptru	equ	0xFF8
 12901                           tblptrh	equ	0xFF7
 12902                           tblptrl	equ	0xFF6
 12903                           tablat	equ	0xFF5
 12904                           prodh	equ	0xFF4
 12905                           prodl	equ	0xFF3
 12906                           intcon	equ	0xFF2
 12907                           postinc0	equ	0xFEE
 12908                           wreg	equ	0xFE8
 12909                           postdec1	equ	0xFE5
 12910                           fsr1l	equ	0xFE1
 12911                           indf2	equ	0xFDF
 12912                           postinc2	equ	0xFDE
 12913                           postdec2	equ	0xFDD
 12914                           fsr2h	equ	0xFDA
 12915                           fsr2l	equ	0xFD9
 12916                           status	equ	0xFD8
 12917                           
 12918 ;; *************** function _chanValDigUP *****************
 12919 ;; Defined at:
 12920 ;;		line 28 in file "source/DisplayProtocol.h"
 12921 ;; Parameters:    Size  Location     Type
 12922 ;;		None
 12923 ;; Auto vars:     Size  Location     Type
 12924 ;;		None
 12925 ;; Return value:  Size  Location     Type
 12926 ;;                  1    wreg      void 
 12927 ;; Registers used:
 12928 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12929 ;; Tracked objects:
 12930 ;;		On entry : 0/0
 12931 ;;		On exit  : 0/0
 12932 ;;		Unchanged: 0/0
 12933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12934 ;;      Params:         0       0       0       0       0       0       0
 12935 ;;      Locals:         0       0       0       0       0       0       0
 12936 ;;      Temps:          0       5       0       0       0       0       0
 12937 ;;      Totals:         0       5       0       0       0       0       0
 12938 ;;Total ram usage:        5 bytes
 12939 ;; Hardware stack levels used:    1
 12940 ;; Hardware stack levels required when called:    8
 12941 ;; This function calls:
 12942 ;;		Nothing
 12943 ;; This function is called by:
 12944 ;;		_pressUP
 12945 ;; This function uses a non-reentrant model
 12946 ;;
 12947                           
 12948                           	psect	text46
 12949  004A56                     __ptext46:
 12950                           	opt stack 0
 12951  004A56                     _chanValDigUP:
 12952                           	opt stack 20
 12953                           
 12954                           ;DisplayProtocol.h: 29: chanValdig[chanValSection]++;
 12955                           
 12956                           ;incstack = 0
 12957  004A56  0101               	movlb	1	; () banked
 12958  004A58  5196               	movf	_chanValSection& (0+255),w,b
 12959  004A5A  0D01               	mullw	1
 12960  004A5C  0E9E               	movlw	low _chanValdig
 12961  004A5E  24F3               	addwf	prodl,w,c
 12962  004A60  6ED9               	movwf	fsr2l,c
 12963  004A62  0E01               	movlw	high _chanValdig
 12964  004A64  20F4               	addwfc	prodh,w,c
 12965  004A66  6EDA               	movwf	fsr2h,c
 12966  004A68  2ADF               	incf	indf2,f,c
 12967                           
 12968                           ;DisplayProtocol.h: 30: if(chanValdig[chanValSection] > 9) {
 12969  004A6A  0101               	movlb	1	; () banked
 12970  004A6C  5196               	movf	_chanValSection& (0+255),w,b
 12971  004A6E  0D01               	mullw	1
 12972  004A70  0E9E               	movlw	low _chanValdig
 12973  004A72  24F3               	addwf	prodl,w,c
 12974  004A74  6ED9               	movwf	fsr2l,c
 12975  004A76  0E01               	movlw	high _chanValdig
 12976  004A78  20F4               	addwfc	prodh,w,c
 12977  004A7A  6EDA               	movwf	fsr2h,c
 12978  004A7C  50DF               	movf	indf2,w,c
 12979  004A7E  0A80               	xorlw	128
 12980  004A80  0F76               	addlw	-138
 12981  004A82  A0D8               	btfss	status,0,c
 12982  004A84  0012               	return	
 12983                           
 12984                           ; BSR set to: 1
 12985                           ;DisplayProtocol.h: 31: chanValdig[chanValSection] = 0;
 12986  004A86  0101               	movlb	1	; () banked
 12987  004A88  5196               	movf	_chanValSection& (0+255),w,b
 12988  004A8A  0D01               	mullw	1
 12989  004A8C  0E9E               	movlw	low _chanValdig
 12990  004A8E  24F3               	addwf	prodl,w,c
 12991  004A90  6ED9               	movwf	fsr2l,c
 12992  004A92  0E01               	movlw	high _chanValdig
 12993  004A94  20F4               	addwfc	prodh,w,c
 12994  004A96  6EDA               	movwf	fsr2h,c
 12995  004A98  0E00               	movlw	0
 12996  004A9A  6EDF               	movwf	indf2,c
 12997                           
 12998                           ; BSR set to: 1
 12999                           ;DisplayProtocol.h: 32: if(chanValSection > 1 && chanValdig[chanValSection - 1] < 9)
 13000  004A9C  0101               	movlb	1	; () banked
 13001  004A9E  5196               	movf	_chanValSection& (0+255),w,b
 13002  004AA0  0A80               	xorlw	128
 13003  004AA2  0F7E               	addlw	-130
 13004  004AA4  A0D8               	btfss	status,0,c
 13005  004AA6  0012               	return	
 13006                           
 13007                           ; BSR set to: 1
 13008  004AA8  0EFF               	movlw	255
 13009  004AAA  0100               	movlb	0	; () banked
 13010  004AAC  6F8F               	movwf	??_chanValDigUP& (0+255),b
 13011  004AAE  0EFF               	movlw	255
 13012  004AB0  0100               	movlb	0	; () banked
 13013  004AB2  6F90               	movwf	(??_chanValDigUP+1)& (0+255),b
 13014  004AB4  C196  F091         	movff	_chanValSection,??_chanValDigUP+2
 13015  004AB8  0100               	movlb	0	; () banked
 13016  004ABA  6B92               	clrf	(??_chanValDigUP+3)& (0+255),b
 13017  004ABC  BF91               	btfsc	(??_chanValDigUP+2)& (0+255),7,b
 13018  004ABE  0792               	decf	(??_chanValDigUP+3)& (0+255),f,b
 13019  004AC0  0100               	movlb	0	; () banked
 13020  004AC2  518F               	movf	??_chanValDigUP& (0+255),w,b
 13021  004AC4  0100               	movlb	0	; () banked
 13022  004AC6  2791               	addwf	(??_chanValDigUP+2)& (0+255),f,b
 13023  004AC8  0100               	movlb	0	; () banked
 13024  004ACA  5190               	movf	(??_chanValDigUP+1)& (0+255),w,b
 13025  004ACC  0100               	movlb	0	; () banked
 13026  004ACE  2392               	addwfc	(??_chanValDigUP+3)& (0+255),f,b
 13027  004AD0  0E9E               	movlw	low _chanValdig
 13028  004AD2  0100               	movlb	0	; () banked
 13029  004AD4  2591               	addwf	(??_chanValDigUP+2)& (0+255),w,b
 13030  004AD6  6ED9               	movwf	fsr2l,c
 13031  004AD8  0E01               	movlw	high _chanValdig
 13032  004ADA  0100               	movlb	0	; () banked
 13033  004ADC  2192               	addwfc	(??_chanValDigUP+3)& (0+255),w,b
 13034  004ADE  6EDA               	movwf	fsr2h,c
 13035  004AE0  50DF               	movf	indf2,w,c
 13036  004AE2  0A80               	xorlw	128
 13037  004AE4  0F77               	addlw	-137
 13038  004AE6  B0D8               	btfsc	status,0,c
 13039  004AE8  0012               	return	
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;DisplayProtocol.h: 33: chanValdig[chanValSection - 1]++;
 13043  004AEA  0EFF               	movlw	255
 13044  004AEC  0100               	movlb	0	; () banked
 13045  004AEE  6F8F               	movwf	??_chanValDigUP& (0+255),b
 13046  004AF0  0EFF               	movlw	255
 13047  004AF2  0100               	movlb	0	; () banked
 13048  004AF4  6F90               	movwf	(??_chanValDigUP+1)& (0+255),b
 13049  004AF6  C196  F091         	movff	_chanValSection,??_chanValDigUP+2
 13050  004AFA  0100               	movlb	0	; () banked
 13051  004AFC  6B92               	clrf	(??_chanValDigUP+3)& (0+255),b
 13052  004AFE  BF91               	btfsc	(??_chanValDigUP+2)& (0+255),7,b
 13053  004B00  0792               	decf	(??_chanValDigUP+3)& (0+255),f,b
 13054  004B02  0100               	movlb	0	; () banked
 13055  004B04  518F               	movf	??_chanValDigUP& (0+255),w,b
 13056  004B06  0100               	movlb	0	; () banked
 13057  004B08  2791               	addwf	(??_chanValDigUP+2)& (0+255),f,b
 13058  004B0A  0100               	movlb	0	; () banked
 13059  004B0C  5190               	movf	(??_chanValDigUP+1)& (0+255),w,b
 13060  004B0E  0100               	movlb	0	; () banked
 13061  004B10  2392               	addwfc	(??_chanValDigUP+3)& (0+255),f,b
 13062  004B12  0E9E               	movlw	low _chanValdig
 13063  004B14  0100               	movlb	0	; () banked
 13064  004B16  2591               	addwf	(??_chanValDigUP+2)& (0+255),w,b
 13065  004B18  6ED9               	movwf	fsr2l,c
 13066  004B1A  0E01               	movlw	high _chanValdig
 13067  004B1C  0100               	movlb	0	; () banked
 13068  004B1E  2192               	addwfc	(??_chanValDigUP+3)& (0+255),w,b
 13069  004B20  6EDA               	movwf	fsr2h,c
 13070  004B22  2ADF               	incf	indf2,f,c
 13071                           
 13072                           ; BSR set to: 0
 13073  004B24  0012               	return	
 13074  004B26                     __end_of_chanValDigUP:
 13075                           	opt stack 0
 13076                           tblptru	equ	0xFF8
 13077                           tblptrh	equ	0xFF7
 13078                           tblptrl	equ	0xFF6
 13079                           tablat	equ	0xFF5
 13080                           prodh	equ	0xFF4
 13081                           prodl	equ	0xFF3
 13082                           intcon	equ	0xFF2
 13083                           postinc0	equ	0xFEE
 13084                           wreg	equ	0xFE8
 13085                           postdec1	equ	0xFE5
 13086                           fsr1l	equ	0xFE1
 13087                           indf2	equ	0xFDF
 13088                           postinc2	equ	0xFDE
 13089                           postdec2	equ	0xFDD
 13090                           fsr2h	equ	0xFDA
 13091                           fsr2l	equ	0xFD9
 13092                           status	equ	0xFD8
 13093                           
 13094 ;; *************** function _pressRETRO *****************
 13095 ;; Defined at:
 13096 ;;		line 233 in file "source/DisplayProtocol.h"
 13097 ;; Parameters:    Size  Location     Type
 13098 ;;		None
 13099 ;; Auto vars:     Size  Location     Type
 13100 ;;		None
 13101 ;; Return value:  Size  Location     Type
 13102 ;;                  1    wreg      void 
 13103 ;; Registers used:
 13104 ;;		wreg, status,2, status,0
 13105 ;; Tracked objects:
 13106 ;;		On entry : 0/0
 13107 ;;		On exit  : 0/0
 13108 ;;		Unchanged: 0/0
 13109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13110 ;;      Params:         0       0       0       0       0       0       0
 13111 ;;      Locals:         0       0       0       0       0       0       0
 13112 ;;      Temps:          0       0       0       0       0       0       0
 13113 ;;      Totals:         0       0       0       0       0       0       0
 13114 ;;Total ram usage:        0 bytes
 13115 ;; Hardware stack levels used:    1
 13116 ;; Hardware stack levels required when called:    8
 13117 ;; This function calls:
 13118 ;;		Nothing
 13119 ;; This function is called by:
 13120 ;;		_buttonChecking
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text47
 13125  005A54                     __ptext47:
 13126                           	opt stack 0
 13127  005A54                     _pressRETRO:
 13128                           	opt stack 21
 13129                           
 13130                           ;DisplayProtocol.h: 234: if (actualScreen == 1) {
 13131                           
 13132                           ;incstack = 0
 13133  005A54  0100               	movlb	0	; () banked
 13134  005A56  05B8               	decf	_actualScreen& (0+255),w,b
 13135  005A58  A4D8               	btfss	status,2,c
 13136  005A5A  D004               	goto	l7139
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;DisplayProtocol.h: 235: actualScreen = 0;
 13140  005A5C  0E00               	movlw	0
 13141  005A5E  0100               	movlb	0	; () banked
 13142  005A60  6FB8               	movwf	_actualScreen& (0+255),b
 13143                           
 13144                           ;DisplayProtocol.h: 236: }else if (actualScreen == 2 || actualScreen == 3
 13145  005A62  0012               	return	
 13146  005A64                     l7139:
 13147                           
 13148                           ; BSR set to: 0
 13149                           ;DisplayProtocol.h: 237: || actualScreen == 10) {
 13150  005A64  0E02               	movlw	2
 13151  005A66  0100               	movlb	0	; () banked
 13152  005A68  19B8               	xorwf	_actualScreen& (0+255),w,b
 13153  005A6A  B4D8               	btfsc	status,2,c
 13154  005A6C  D00A               	goto	l651
 13155                           
 13156                           ; BSR set to: 0
 13157  005A6E  0E03               	movlw	3
 13158  005A70  0100               	movlb	0	; () banked
 13159  005A72  19B8               	xorwf	_actualScreen& (0+255),w,b
 13160  005A74  B4D8               	btfsc	status,2,c
 13161  005A76  D005               	goto	l651
 13162                           
 13163                           ; BSR set to: 0
 13164  005A78  0E0A               	movlw	10
 13165  005A7A  0100               	movlb	0	; () banked
 13166  005A7C  19B8               	xorwf	_actualScreen& (0+255),w,b
 13167  005A7E  A4D8               	btfss	status,2,c
 13168  005A80  D003               	goto	l7145
 13169  005A82                     l651:
 13170                           
 13171                           ; BSR set to: 0
 13172                           ;DisplayProtocol.h: 238: actualScreen = tempLastScreen;
 13173  005A82  C0C2  F0B8         	movff	_tempLastScreen,_actualScreen
 13174                           
 13175                           ;DisplayProtocol.h: 239: }else if(actualScreen == 5) {
 13176  005A86  0012               	return	
 13177  005A88                     l7145:
 13178                           
 13179                           ; BSR set to: 0
 13180  005A88  0E05               	movlw	5
 13181  005A8A  0100               	movlb	0	; () banked
 13182  005A8C  19B8               	xorwf	_actualScreen& (0+255),w,b
 13183  005A8E  A4D8               	btfss	status,2,c
 13184  005A90  0012               	return	
 13185                           
 13186                           ; BSR set to: 0
 13187                           ;DisplayProtocol.h: 240: if(menuSection != 2 ) {
 13188  005A92  0E02               	movlw	2
 13189  005A94  0101               	movlb	1	; () banked
 13190  005A96  19B6               	xorwf	_menuSection& (0+255),w,b
 13191  005A98  B4D8               	btfsc	status,2,c
 13192  005A9A  D00C               	goto	l7155
 13193                           
 13194                           ; BSR set to: 1
 13195                           ;DisplayProtocol.h: 241: chanValSection++;
 13196  005A9C  0101               	movlb	1	; () banked
 13197  005A9E  2B96               	incf	_chanValSection& (0+255),f,b
 13198                           
 13199                           ; BSR set to: 1
 13200                           ;DisplayProtocol.h: 242: if(chanValSection > 5)
 13201  005AA0  0101               	movlb	1	; () banked
 13202  005AA2  5196               	movf	_chanValSection& (0+255),w,b
 13203  005AA4  0A80               	xorlw	128
 13204  005AA6  0F7A               	addlw	-134
 13205  005AA8  A0D8               	btfss	status,0,c
 13206  005AAA  0012               	return	
 13207                           
 13208                           ; BSR set to: 1
 13209                           ;DisplayProtocol.h: 243: chanValSection = 0;
 13210  005AAC  0E00               	movlw	0
 13211  005AAE  0101               	movlb	1	; () banked
 13212  005AB0  6F96               	movwf	_chanValSection& (0+255),b
 13213                           
 13214                           ; BSR set to: 1
 13215                           ;DisplayProtocol.h: 244: }else
 13216  005AB2  0012               	return	
 13217  005AB4                     l7155:
 13218                           
 13219                           ; BSR set to: 1
 13220                           ;DisplayProtocol.h: 245: actualScreen = 4;
 13221  005AB4  0E04               	movlw	4
 13222  005AB6  0100               	movlb	0	; () banked
 13223  005AB8  6FB8               	movwf	_actualScreen& (0+255),b
 13224                           
 13225                           ; BSR set to: 0
 13226                           
 13227                           ; BSR set to: 0
 13228                           
 13229                           ; BSR set to: 0
 13230  005ABA  0012               	return	
 13231  005ABC                     __end_of_pressRETRO:
 13232                           	opt stack 0
 13233                           tblptru	equ	0xFF8
 13234                           tblptrh	equ	0xFF7
 13235                           tblptrl	equ	0xFF6
 13236                           tablat	equ	0xFF5
 13237                           prodh	equ	0xFF4
 13238                           prodl	equ	0xFF3
 13239                           intcon	equ	0xFF2
 13240                           postinc0	equ	0xFEE
 13241                           wreg	equ	0xFE8
 13242                           postdec1	equ	0xFE5
 13243                           fsr1l	equ	0xFE1
 13244                           indf2	equ	0xFDF
 13245                           postinc2	equ	0xFDE
 13246                           postdec2	equ	0xFDD
 13247                           fsr2h	equ	0xFDA
 13248                           fsr2l	equ	0xFD9
 13249                           status	equ	0xFD8
 13250                           
 13251 ;; *************** function _pressENTER *****************
 13252 ;; Defined at:
 13253 ;;		line 269 in file "source/DisplayProtocol.h"
 13254 ;; Parameters:    Size  Location     Type
 13255 ;;		None
 13256 ;; Auto vars:     Size  Location     Type
 13257 ;;		None
 13258 ;; Return value:  Size  Location     Type
 13259 ;;                  1    wreg      void 
 13260 ;; Registers used:
 13261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13262 ;; Tracked objects:
 13263 ;;		On entry : 0/0
 13264 ;;		On exit  : 0/0
 13265 ;;		Unchanged: 0/0
 13266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13267 ;;      Params:         0       0       0       0       0       0       0
 13268 ;;      Locals:         0       0       0       0       0       0       0
 13269 ;;      Temps:          0       0       0       0       0       0       0
 13270 ;;      Totals:         0       0       0       0       0       0       0
 13271 ;;Total ram usage:        0 bytes
 13272 ;; Hardware stack levels used:    1
 13273 ;; Hardware stack levels required when called:   12
 13274 ;; This function calls:
 13275 ;;		_checkPass
 13276 ;;		_confirmEdition
 13277 ;;		_desintegrator
 13278 ;;		_setPWM2duty
 13279 ;; This function is called by:
 13280 ;;		_buttonChecking
 13281 ;; This function uses a non-reentrant model
 13282 ;;
 13283                           
 13284                           	psect	text48
 13285  0031F6                     __ptext48:
 13286                           	opt stack 0
 13287  0031F6                     _pressENTER:
 13288                           	opt stack 17
 13289                           
 13290                           ;DisplayProtocol.h: 270: if (actualScreen == 1) {
 13291                           
 13292                           ;incstack = 0
 13293  0031F6  0100               	movlb	0	; () banked
 13294  0031F8  05B8               	decf	_actualScreen& (0+255),w,b
 13295  0031FA  A4D8               	btfss	status,2,c
 13296  0031FC  D018               	goto	l10129
 13297                           
 13298                           ; BSR set to: 0
 13299                           ;DisplayProtocol.h: 271: passSection++;
 13300  0031FE  0100               	movlb	0	; () banked
 13301  003200  2BC0               	incf	_passSection& (0+255),f,b
 13302                           
 13303                           ; BSR set to: 0
 13304                           ;DisplayProtocol.h: 272: if (passSection > 3) {
 13305  003202  0100               	movlb	0	; () banked
 13306  003204  51C0               	movf	_passSection& (0+255),w,b
 13307  003206  0A80               	xorlw	128
 13308  003208  0F7C               	addlw	-132
 13309  00320A  A0D8               	btfss	status,0,c
 13310  00320C  0012               	return	
 13311                           
 13312                           ; BSR set to: 0
 13313                           ;DisplayProtocol.h: 273: passSection = 0;
 13314  00320E  0E00               	movlw	0
 13315  003210  0100               	movlb	0	; () banked
 13316  003212  6FC0               	movwf	_passSection& (0+255),b
 13317                           
 13318                           ; BSR set to: 0
 13319                           ;DisplayProtocol.h: 274: if (checkPass())
 13320  003214  EC93  F02A         	call	_checkPass	;wreg free
 13321  003218  0900               	iorlw	0
 13322  00321A  B4D8               	btfsc	status,2,c
 13323  00321C  D004               	goto	l10127
 13324                           
 13325                           ;DisplayProtocol.h: 275: actualScreen = 8;
 13326  00321E  0E08               	movlw	8
 13327  003220  0100               	movlb	0	; () banked
 13328  003222  6FB8               	movwf	_actualScreen& (0+255),b
 13329  003224  0012               	return	
 13330  003226                     l10127:
 13331                           
 13332                           ;DisplayProtocol.h: 276: else
 13333                           ;DisplayProtocol.h: 277: actualScreen = 7;
 13334  003226  0E07               	movlw	7
 13335  003228  0100               	movlb	0	; () banked
 13336  00322A  6FB8               	movwf	_actualScreen& (0+255),b
 13337                           
 13338                           ; BSR set to: 0
 13339                           ;DisplayProtocol.h: 278: }
 13340                           ;DisplayProtocol.h: 279: }else if(actualScreen == 4) {
 13341                           
 13342                           ; BSR set to: 0
 13343  00322C  0012               	return	
 13344  00322E                     l10129:
 13345                           
 13346                           ; BSR set to: 0
 13347  00322E  0E04               	movlw	4
 13348  003230  0100               	movlb	0	; () banked
 13349  003232  19B8               	xorwf	_actualScreen& (0+255),w,b
 13350  003234  B4D8               	btfsc	status,2,c
 13351  003236  D043               	goto	l10153
 13352  003238  D054               	goto	l10155
 13353  00323A                     l680:
 13354                           
 13355                           ; BSR set to: 1
 13356                           ;DisplayProtocol.h: 282: tempLastScreen = actualScreen;
 13357  00323A  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 13358                           
 13359                           ; BSR set to: 1
 13360                           ;DisplayProtocol.h: 283: if(ProcessStarted) {
 13361  00323E  503A               	movf	_ProcessStarted,w,c
 13362  003240  B4D8               	btfsc	status,2,c
 13363  003242  D007               	goto	l10137
 13364                           
 13365                           ; BSR set to: 1
 13366                           ;DisplayProtocol.h: 284: actualScreen = 3;
 13367  003244  0E03               	movlw	3
 13368  003246  0100               	movlb	0	; () banked
 13369  003248  6FB8               	movwf	_actualScreen& (0+255),b
 13370                           
 13371                           ;DisplayProtocol.h: 285: selSN = 0;
 13372  00324A  0E00               	movlw	0
 13373  00324C  0100               	movlb	0	; () banked
 13374  00324E  6FC1               	movwf	_selSN& (0+255),b
 13375                           
 13376                           ;DisplayProtocol.h: 286: }else {
 13377  003250  0012               	return	
 13378  003252                     l10137:
 13379                           
 13380                           ;DisplayProtocol.h: 287: actualScreen = 2;
 13381  003252  0E02               	movlw	2
 13382  003254  0100               	movlb	0	; () banked
 13383  003256  6FB8               	movwf	_actualScreen& (0+255),b
 13384                           
 13385                           ;DisplayProtocol.h: 288: selSN = 1;
 13386  003258  0E01               	movlw	1
 13387  00325A  0100               	movlb	0	; () banked
 13388  00325C  6FC1               	movwf	_selSN& (0+255),b
 13389                           
 13390                           ; BSR set to: 0
 13391                           ;DisplayProtocol.h: 289: }
 13392                           ;DisplayProtocol.h: 290: break;
 13393  00325E  0012               	return	
 13394  003260                     l684:
 13395                           
 13396                           ; BSR set to: 1
 13397                           ;DisplayProtocol.h: 292: chanValf = kgXcorte;
 13398  003260  C18A  F02A         	movff	_kgXcorte,_chanValf
 13399  003264  C18B  F02B         	movff	_kgXcorte+1,_chanValf+1
 13400  003268  C18C  F02C         	movff	_kgXcorte+2,_chanValf+2
 13401  00326C  C18D  F02D         	movff	_kgXcorte+3,_chanValf+3
 13402                           
 13403                           ; BSR set to: 1
 13404                           ;DisplayProtocol.h: 293: desintegrator();
 13405  003270  ECEF  F01A         	call	_desintegrator	;wreg free
 13406                           
 13407                           ;DisplayProtocol.h: 294: actualScreen = 5;
 13408  003274  0E05               	movlw	5
 13409  003276  0100               	movlb	0	; () banked
 13410  003278  6FB8               	movwf	_actualScreen& (0+255),b
 13411                           
 13412                           ;DisplayProtocol.h: 295: break;
 13413  00327A  0012               	return	
 13414  00327C                     l685:
 13415                           
 13416                           ; BSR set to: 1
 13417                           ;DisplayProtocol.h: 297: tempLastScreen = actualScreen;
 13418  00327C  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 13419                           
 13420                           ;DisplayProtocol.h: 298: chanVals = numCortes;
 13421  003280  C0CB  F1B4         	movff	_numCortes,_chanVals
 13422  003284  C0CC  F1B5         	movff	_numCortes+1,_chanVals+1
 13423                           
 13424                           ; BSR set to: 1
 13425                           ;DisplayProtocol.h: 299: actualScreen = 5;
 13426  003288  0E05               	movlw	5
 13427  00328A  0100               	movlb	0	; () banked
 13428  00328C  6FB8               	movwf	_actualScreen& (0+255),b
 13429                           
 13430                           ;DisplayProtocol.h: 300: break;
 13431  00328E  0012               	return	
 13432  003290                     l686:
 13433                           
 13434                           ; BSR set to: 1
 13435                           ;DisplayProtocol.h: 302: chanValf = diamTubo;
 13436  003290  C186  F02A         	movff	_diamTubo,_chanValf
 13437  003294  C187  F02B         	movff	_diamTubo+1,_chanValf+1
 13438  003298  C188  F02C         	movff	_diamTubo+2,_chanValf+2
 13439  00329C  C189  F02D         	movff	_diamTubo+3,_chanValf+3
 13440                           
 13441                           ; BSR set to: 1
 13442                           ;DisplayProtocol.h: 303: desintegrator();
 13443  0032A0  ECEF  F01A         	call	_desintegrator	;wreg free
 13444                           
 13445                           ;DisplayProtocol.h: 304: actualScreen = 5;
 13446  0032A4  0E05               	movlw	5
 13447  0032A6  0100               	movlb	0	; () banked
 13448  0032A8  6FB8               	movwf	_actualScreen& (0+255),b
 13449                           
 13450                           ;DisplayProtocol.h: 305: break;
 13451  0032AA  0012               	return	
 13452  0032AC                     l687:
 13453                           
 13454                           ; BSR set to: 1
 13455                           ;DisplayProtocol.h: 307: tempLastScreen = actualScreen;
 13456  0032AC  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 13457                           
 13458                           ; BSR set to: 1
 13459                           ;DisplayProtocol.h: 308: selSN = 1;
 13460  0032B0  0E01               	movlw	1
 13461  0032B2  0100               	movlb	0	; () banked
 13462  0032B4  6FC1               	movwf	_selSN& (0+255),b
 13463                           
 13464                           ;DisplayProtocol.h: 309: actualScreen = 11;
 13465  0032B6  0E0B               	movlw	11
 13466  0032B8  0100               	movlb	0	; () banked
 13467  0032BA  6FB8               	movwf	_actualScreen& (0+255),b
 13468                           
 13469                           ; BSR set to: 0
 13470                           ;DisplayProtocol.h: 311: }
 13471                           ;DisplayProtocol.h: 312: }
 13472                           
 13473                           ;DisplayProtocol.h: 310: break;
 13474  0032BC  0012               	return	
 13475  0032BE                     l10153:
 13476                           
 13477                           ; BSR set to: 0
 13478  0032BE  0101               	movlb	1	; () banked
 13479  0032C0  51B6               	movf	_menuSection& (0+255),w,b
 13480                           
 13481                           ; Switch size 1, requested type "space"
 13482                           ; Number of cases is 5, Range of values is 0 to 4
 13483                           ; switch strategies available:
 13484                           ; Name         Instructions Cycles
 13485                           ; simple_byte           16     9 (average)
 13486                           ;	Chosen strategy is simple_byte
 13487  0032C2  0A00               	xorlw	0	; case 0
 13488  0032C4  B4D8               	btfsc	status,2,c
 13489  0032C6  D7B9               	goto	l680
 13490  0032C8  0A01               	xorlw	1	; case 1
 13491  0032CA  B4D8               	btfsc	status,2,c
 13492  0032CC  D7C9               	goto	l684
 13493  0032CE  0A03               	xorlw	3	; case 2
 13494  0032D0  B4D8               	btfsc	status,2,c
 13495  0032D2  D7D4               	goto	l685
 13496  0032D4  0A01               	xorlw	1	; case 3
 13497  0032D6  B4D8               	btfsc	status,2,c
 13498  0032D8  D7DB               	goto	l686
 13499  0032DA  0A07               	xorlw	7	; case 4
 13500  0032DC  A4D8               	btfss	status,2,c
 13501                           
 13502                           ; BSR set to: 1
 13503                           ;DisplayProtocol.h: 313: }else if(actualScreen == 7)
 13504  0032DE  0012               	return	
 13505  0032E0  D7E5               	goto	l687
 13506  0032E2                     l10155:
 13507  0032E2  0E07               	movlw	7
 13508  0032E4  0100               	movlb	0	; () banked
 13509  0032E6  19B8               	xorwf	_actualScreen& (0+255),w,b
 13510  0032E8  A4D8               	btfss	status,2,c
 13511  0032EA  D004               	goto	l10159
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;DisplayProtocol.h: 314: actualScreen = 1;
 13515  0032EC  0E01               	movlw	1
 13516  0032EE  0100               	movlb	0	; () banked
 13517  0032F0  6FB8               	movwf	_actualScreen& (0+255),b
 13518  0032F2  0012               	return	
 13519  0032F4                     l10159:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;DisplayProtocol.h: 315: else if(actualScreen == 6) {
 13523  0032F4  0E06               	movlw	6
 13524  0032F6  0100               	movlb	0	; () banked
 13525  0032F8  19B8               	xorwf	_actualScreen& (0+255),w,b
 13526  0032FA  B4D8               	btfsc	status,2,c
 13527  0032FC  0012               	return	
 13528                           
 13529                           ; BSR set to: 0
 13530                           
 13531                           ; BSR set to: 0
 13532                           
 13533                           ; BSR set to: 0
 13534                           ;DisplayProtocol.h: 317: }else if(actualScreen == 5) {
 13535  0032FE  0E05               	movlw	5
 13536  003300  0100               	movlb	0	; () banked
 13537  003302  19B8               	xorwf	_actualScreen& (0+255),w,b
 13538  003304  A4D8               	btfss	status,2,c
 13539  003306  D017               	goto	l10175
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;DisplayProtocol.h: 318: if(menuSection != 2 ) {
 13543  003308  0E02               	movlw	2
 13544  00330A  0101               	movlb	1	; () banked
 13545  00330C  19B6               	xorwf	_menuSection& (0+255),w,b
 13546  00330E  B4D8               	btfsc	status,2,c
 13547  003310  D009               	goto	l10173
 13548                           
 13549                           ; BSR set to: 1
 13550                           ;DisplayProtocol.h: 319: chanValSection--;
 13551  003312  0101               	movlb	1	; () banked
 13552  003314  0796               	decf	_chanValSection& (0+255),f,b
 13553                           
 13554                           ; BSR set to: 1
 13555                           ;DisplayProtocol.h: 320: if(chanValSection < 0)
 13556  003316  0101               	movlb	1	; () banked
 13557  003318  AF96               	btfss	_chanValSection& (0+255),7,b
 13558  00331A  0012               	return	
 13559                           
 13560                           ; BSR set to: 1
 13561                           ;DisplayProtocol.h: 321: chanValSection = 5;
 13562  00331C  0E05               	movlw	5
 13563  00331E  0101               	movlb	1	; () banked
 13564  003320  6F96               	movwf	_chanValSection& (0+255),b
 13565                           
 13566                           ; BSR set to: 1
 13567                           ;DisplayProtocol.h: 322: }else
 13568  003322  0012               	return	
 13569  003324                     l10173:
 13570                           
 13571                           ; BSR set to: 1
 13572                           ;DisplayProtocol.h: 323: confirmEdition(!ProcessStarted);
 13573  003324  503A               	movf	_ProcessStarted,w,c
 13574  003326  A4D8               	btfss	status,2,c
 13575  003328  D002               	goto	u13420
 13576  00332A  0E01               	movlw	1
 13577  00332C  D001               	goto	u13430
 13578  00332E                     u13420:
 13579  00332E  0E00               	movlw	0
 13580  003330                     u13430:
 13581  003330  ECCE  F022         	call	_confirmEdition
 13582                           
 13583                           ;DisplayProtocol.h: 324: }else if(actualScreen == 2) {
 13584  003334  0012               	return	
 13585  003336                     l10175:
 13586  003336  0E02               	movlw	2
 13587  003338  0100               	movlb	0	; () banked
 13588  00333A  19B8               	xorwf	_actualScreen& (0+255),w,b
 13589  00333C  A4D8               	btfss	status,2,c
 13590  00333E  D01D               	goto	l10187
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;DisplayProtocol.h: 325: ProcessStarted = !selSN;
 13594  003340  0100               	movlb	0	; () banked
 13595  003342  51C1               	movf	_selSN& (0+255),w,b
 13596  003344  A4D8               	btfss	status,2,c
 13597  003346  D002               	goto	u13450
 13598  003348  0E01               	movlw	1
 13599  00334A  D001               	goto	u13460
 13600  00334C                     u13450:
 13601  00334C  0E00               	movlw	0
 13602  00334E                     u13460:
 13603  00334E  6E3A               	movwf	_ProcessStarted,c
 13604                           
 13605                           ;DisplayProtocol.h: 326: if(ProcessStarted && !bladeIsUP) {
 13606  003350  503A               	movf	_ProcessStarted,w,c
 13607  003352  B4D8               	btfsc	status,2,c
 13608  003354  D00F               	goto	l10185
 13609                           
 13610                           ; BSR set to: 0
 13611  003356  0100               	movlb	0	; () banked
 13612  003358  51B9               	movf	_bladeIsUP& (0+255),w,b
 13613  00335A  A4D8               	btfss	status,2,c
 13614  00335C  D00B               	goto	l10185
 13615                           
 13616                           ; BSR set to: 0
 13617                           ;DisplayProtocol.h: 327: processState = 0;
 13618  00335E  0E00               	movlw	0
 13619  003360  6E36               	movwf	_processState+1,c
 13620  003362  0E00               	movlw	0
 13621  003364  6E35               	movwf	_processState,c
 13622                           
 13623                           ; BSR set to: 0
 13624                           ;DisplayProtocol.h: 328: setPWM2duty(-400);
 13625  003366  0EFE               	movlw	254
 13626  003368  0100               	movlb	0	; () banked
 13627  00336A  6F90               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 13628  00336C  0E70               	movlw	112
 13629  00336E  6F8F               	movwf	setPWM2duty@actuator& (0+255),b
 13630  003370  EC6F  F029         	call	_setPWM2duty	;wreg free
 13631  003374                     l10185:
 13632                           
 13633                           ;DisplayProtocol.h: 329: }
 13634                           ;DisplayProtocol.h: 330: actualScreen = tempLastScreen;
 13635  003374  C0C2  F0B8         	movff	_tempLastScreen,_actualScreen
 13636                           
 13637                           ;DisplayProtocol.h: 331: }else if(actualScreen == 3) {
 13638  003378  0012               	return	
 13639  00337A                     l10187:
 13640  00337A  0E03               	movlw	3
 13641  00337C  0100               	movlb	0	; () banked
 13642  00337E  19B8               	xorwf	_actualScreen& (0+255),w,b
 13643  003380  A4D8               	btfss	status,2,c
 13644  003382  D005               	goto	l10191
 13645                           
 13646                           ; BSR set to: 0
 13647                           ;DisplayProtocol.h: 332: ProcessStarted = selSN;
 13648  003384  C0C1  F03A         	movff	_selSN,_ProcessStarted
 13649                           
 13650                           ;DisplayProtocol.h: 333: actualScreen = tempLastScreen;
 13651  003388  C0C2  F0B8         	movff	_tempLastScreen,_actualScreen
 13652                           
 13653                           ;DisplayProtocol.h: 334: }else if(actualScreen == 10) {
 13654  00338C  0012               	return	
 13655  00338E                     l10191:
 13656                           
 13657                           ; BSR set to: 0
 13658  00338E  0E0A               	movlw	10
 13659  003390  0100               	movlb	0	; () banked
 13660  003392  19B8               	xorwf	_actualScreen& (0+255),w,b
 13661  003394  A4D8               	btfss	status,2,c
 13662  003396  D00B               	goto	l10197
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;DisplayProtocol.h: 335: if(!selSN)
 13666  003398  0100               	movlb	0	; () banked
 13667  00339A  51C1               	movf	_selSN& (0+255),w,b
 13668  00339C  A4D8               	btfss	status,2,c
 13669  00339E  D004               	goto	l704
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;DisplayProtocol.h: 336: confirmEdition(1);
 13673  0033A0  0E01               	movlw	1
 13674  0033A2  ECCE  F022         	call	_confirmEdition
 13675  0033A6  0012               	return	
 13676  0033A8                     l704:
 13677                           
 13678                           ; BSR set to: 0
 13679                           ;DisplayProtocol.h: 337: else
 13680                           ;DisplayProtocol.h: 338: actualScreen = tempLastScreen;
 13681  0033A8  C0C2  F0B8         	movff	_tempLastScreen,_actualScreen
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;DisplayProtocol.h: 339: }else if(actualScreen == 8)
 13685  0033AC  0012               	return	
 13686  0033AE                     l10197:
 13687                           
 13688                           ; BSR set to: 0
 13689  0033AE  0E08               	movlw	8
 13690  0033B0  0100               	movlb	0	; () banked
 13691  0033B2  19B8               	xorwf	_actualScreen& (0+255),w,b
 13692  0033B4  A4D8               	btfss	status,2,c
 13693  0033B6  D004               	goto	l10201
 13694                           
 13695                           ; BSR set to: 0
 13696                           ;DisplayProtocol.h: 340: actualScreen = 4;
 13697  0033B8  0E04               	movlw	4
 13698  0033BA  0100               	movlb	0	; () banked
 13699  0033BC  6FB8               	movwf	_actualScreen& (0+255),b
 13700  0033BE  0012               	return	
 13701  0033C0                     l10201:
 13702                           
 13703                           ; BSR set to: 0
 13704                           ;DisplayProtocol.h: 341: else if(actualScreen == 9)
 13705  0033C0  0E09               	movlw	9
 13706  0033C2  0100               	movlb	0	; () banked
 13707  0033C4  19B8               	xorwf	_actualScreen& (0+255),w,b
 13708  0033C6  A4D8               	btfss	status,2,c
 13709  0033C8  D004               	goto	l10205
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;DisplayProtocol.h: 342: actualScreen = 0;
 13713  0033CA  0E00               	movlw	0
 13714  0033CC  0100               	movlb	0	; () banked
 13715  0033CE  6FB8               	movwf	_actualScreen& (0+255),b
 13716  0033D0  0012               	return	
 13717  0033D2                     l10205:
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;DisplayProtocol.h: 343: else if(actualScreen == 11) {
 13721  0033D2  0E0B               	movlw	11
 13722  0033D4  0100               	movlb	0	; () banked
 13723  0033D6  19B8               	xorwf	_actualScreen& (0+255),w,b
 13724  0033D8  A4D8               	btfss	status,2,c
 13725  0033DA  D00C               	goto	l10213
 13726                           
 13727                           ; BSR set to: 0
 13728                           ;DisplayProtocol.h: 344: if(!selSN)
 13729  0033DC  0100               	movlb	0	; () banked
 13730  0033DE  51C1               	movf	_selSN& (0+255),w,b
 13731  0033E0  A4D8               	btfss	status,2,c
 13732  0033E2  D004               	goto	l10211
 13733                           
 13734                           ; BSR set to: 0
 13735                           ;DisplayProtocol.h: 345: actualScreen = 6;
 13736  0033E4  0E06               	movlw	6
 13737  0033E6  0100               	movlb	0	; () banked
 13738  0033E8  6FB8               	movwf	_actualScreen& (0+255),b
 13739  0033EA  0012               	return	
 13740  0033EC                     l10211:
 13741                           
 13742                           ; BSR set to: 0
 13743                           ;DisplayProtocol.h: 346: else
 13744                           ;DisplayProtocol.h: 347: actualScreen = 4;
 13745  0033EC  0E04               	movlw	4
 13746  0033EE  0100               	movlb	0	; () banked
 13747  0033F0  6FB8               	movwf	_actualScreen& (0+255),b
 13748                           
 13749                           ; BSR set to: 0
 13750                           ;DisplayProtocol.h: 348: }else if(actualScreen == 12) {
 13751  0033F2  0012               	return	
 13752  0033F4                     l10213:
 13753                           
 13754                           ; BSR set to: 0
 13755  0033F4  0E0C               	movlw	12
 13756  0033F6  0100               	movlb	0	; () banked
 13757  0033F8  19B8               	xorwf	_actualScreen& (0+255),w,b
 13758  0033FA  A4D8               	btfss	status,2,c
 13759  0033FC  0012               	return	
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;DisplayProtocol.h: 349: chanValSection--;
 13763  0033FE  0101               	movlb	1	; () banked
 13764  003400  0796               	decf	_chanValSection& (0+255),f,b
 13765                           
 13766                           ; BSR set to: 1
 13767                           ;DisplayProtocol.h: 350: if(chanValSection < 0)
 13768  003402  0101               	movlb	1	; () banked
 13769  003404  AF96               	btfss	_chanValSection& (0+255),7,b
 13770  003406  0012               	return	
 13771                           
 13772                           ; BSR set to: 1
 13773                           ;DisplayProtocol.h: 351: chanValSection = 5;
 13774  003408  0E05               	movlw	5
 13775  00340A  0101               	movlb	1	; () banked
 13776  00340C  6F96               	movwf	_chanValSection& (0+255),b
 13777                           
 13778                           ; BSR set to: 1
 13779                           
 13780                           ; BSR set to: 1
 13781                           
 13782                           ; BSR set to: 1
 13783                           
 13784                           ; BSR set to: 1
 13785                           
 13786                           ; BSR set to: 1
 13787                           
 13788                           ; BSR set to: 1
 13789                           
 13790                           ; BSR set to: 1
 13791                           
 13792                           ; BSR set to: 1
 13793                           
 13794                           ; BSR set to: 1
 13795                           
 13796                           ; BSR set to: 1
 13797                           
 13798                           ; BSR set to: 1
 13799                           
 13800                           ; BSR set to: 1
 13801  00340E  0012               	return	
 13802  003410                     __end_of_pressENTER:
 13803                           	opt stack 0
 13804                           tblptru	equ	0xFF8
 13805                           tblptrh	equ	0xFF7
 13806                           tblptrl	equ	0xFF6
 13807                           tablat	equ	0xFF5
 13808                           prodh	equ	0xFF4
 13809                           prodl	equ	0xFF3
 13810                           intcon	equ	0xFF2
 13811                           postinc0	equ	0xFEE
 13812                           wreg	equ	0xFE8
 13813                           postdec1	equ	0xFE5
 13814                           fsr1l	equ	0xFE1
 13815                           indf2	equ	0xFDF
 13816                           postinc2	equ	0xFDE
 13817                           postdec2	equ	0xFDD
 13818                           fsr2h	equ	0xFDA
 13819                           fsr2l	equ	0xFD9
 13820                           status	equ	0xFD8
 13821                           
 13822 ;; *************** function _desintegrator *****************
 13823 ;; Defined at:
 13824 ;;		line 46 in file "source/DisplayProtocol.h"
 13825 ;; Parameters:    Size  Location     Type
 13826 ;;		None
 13827 ;; Auto vars:     Size  Location     Type
 13828 ;;  temp2           4   44[BANK1 ] long 
 13829 ;;  temp3           4   40[BANK1 ] long 
 13830 ;;  tempL           4   36[BANK1 ] long 
 13831 ;;  temp            4   32[BANK1 ] float 
 13832 ;;  i               2   48[BANK1 ] int 
 13833 ;; Return value:  Size  Location     Type
 13834 ;;                  1    wreg      void 
 13835 ;; Registers used:
 13836 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13837 ;; Tracked objects:
 13838 ;;		On entry : 0/0
 13839 ;;		On exit  : 0/0
 13840 ;;		Unchanged: 0/0
 13841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13842 ;;      Params:         0       0       0       0       0       0       0
 13843 ;;      Locals:         0       0      18       0       0       0       0
 13844 ;;      Temps:          0       0       2       0       0       0       0
 13845 ;;      Totals:         0       0      20       0       0       0       0
 13846 ;;Total ram usage:       20 bytes
 13847 ;; Hardware stack levels used:    1
 13848 ;; Hardware stack levels required when called:    9
 13849 ;; This function calls:
 13850 ;;		___aldiv
 13851 ;;		___flmul
 13852 ;;		___fltol
 13853 ;;		___lmul
 13854 ;; This function is called by:
 13855 ;;		_pressENTER
 13856 ;; This function uses a non-reentrant model
 13857 ;;
 13858                           
 13859                           	psect	text49
 13860  0035DE                     __ptext49:
 13861                           	opt stack 0
 13862  0035DE                     _desintegrator:
 13863                           	opt stack 19
 13864                           
 13865                           ;DisplayProtocol.h: 47: chanValSection = 5;
 13866                           
 13867                           ;incstack = 0
 13868  0035DE  0E05               	movlw	5
 13869  0035E0  0101               	movlb	1	; () banked
 13870  0035E2  6F96               	movwf	_chanValSection& (0+255),b
 13871                           
 13872                           ; BSR set to: 1
 13873                           ;DisplayProtocol.h: 48: float temp = (float)chanValf*1000;
 13874  0035E4  C02A  F09D         	movff	_chanValf,___flmul@b
 13875  0035E8  C02B  F09E         	movff	_chanValf+1,___flmul@b+1
 13876  0035EC  C02C  F09F         	movff	_chanValf+2,___flmul@b+2
 13877  0035F0  C02D  F0A0         	movff	_chanValf+3,___flmul@b+3
 13878  0035F4  0E00               	movlw	0
 13879  0035F6  0100               	movlb	0	; () banked
 13880  0035F8  6FA1               	movwf	___flmul@a& (0+255),b
 13881  0035FA  0E00               	movlw	0
 13882  0035FC  6FA2               	movwf	(___flmul@a+1)& (0+255),b
 13883  0035FE  0E7A               	movlw	122
 13884  003600  6FA3               	movwf	(___flmul@a+2)& (0+255),b
 13885  003602  0E44               	movlw	68
 13886  003604  6FA4               	movwf	(___flmul@a+3)& (0+255),b
 13887  003606  EC55  F00B         	call	___flmul	;wreg free
 13888  00360A  C09D  F120         	movff	?___flmul,desintegrator@temp
 13889  00360E  C09E  F121         	movff	?___flmul+1,desintegrator@temp+1
 13890  003612  C09F  F122         	movff	?___flmul+2,desintegrator@temp+2
 13891  003616  C0A0  F123         	movff	?___flmul+3,desintegrator@temp+3
 13892                           
 13893                           ;DisplayProtocol.h: 49: long tempL = (long)temp;
 13894  00361A  C120  F116         	movff	desintegrator@temp,___fltol@f1
 13895  00361E  C121  F117         	movff	desintegrator@temp+1,___fltol@f1+1
 13896  003622  C122  F118         	movff	desintegrator@temp+2,___fltol@f1+2
 13897  003626  C123  F119         	movff	desintegrator@temp+3,___fltol@f1+3
 13898  00362A  EC43  F021         	call	___fltol	;wreg free
 13899  00362E  C116  F124         	movff	?___fltol,desintegrator@tempL
 13900  003632  C117  F125         	movff	?___fltol+1,desintegrator@tempL+1
 13901  003636  C118  F126         	movff	?___fltol+2,desintegrator@tempL+2
 13902  00363A  C119  F127         	movff	?___fltol+3,desintegrator@tempL+3
 13903                           
 13904                           ;DisplayProtocol.h: 50: long temp2 = 0;
 13905  00363E  0E00               	movlw	0
 13906  003640  0101               	movlb	1	; () banked
 13907  003642  6F2C               	movwf	desintegrator@temp2& (0+255),b
 13908  003644  0E00               	movlw	0
 13909  003646  6F2D               	movwf	(desintegrator@temp2+1)& (0+255),b
 13910  003648  0E00               	movlw	0
 13911  00364A  6F2E               	movwf	(desintegrator@temp2+2)& (0+255),b
 13912  00364C  0E00               	movlw	0
 13913  00364E  6F2F               	movwf	(desintegrator@temp2+3)& (0+255),b
 13914                           
 13915                           ; BSR set to: 1
 13916                           ;DisplayProtocol.h: 51: long temp3 = 0;
 13917  003650  0E00               	movlw	0
 13918  003652  0101               	movlb	1	; () banked
 13919  003654  6F28               	movwf	desintegrator@temp3& (0+255),b
 13920  003656  0E00               	movlw	0
 13921  003658  6F29               	movwf	(desintegrator@temp3+1)& (0+255),b
 13922  00365A  0E00               	movlw	0
 13923  00365C  6F2A               	movwf	(desintegrator@temp3+2)& (0+255),b
 13924  00365E  0E00               	movlw	0
 13925  003660  6F2B               	movwf	(desintegrator@temp3+3)& (0+255),b
 13926                           
 13927                           ; BSR set to: 1
 13928                           ;DisplayProtocol.h: 52: int i;
 13929                           ;DisplayProtocol.h: 53: for(i = 0; i < 6; i++) {
 13930  003662  0E00               	movlw	0
 13931  003664  0101               	movlb	1	; () banked
 13932  003666  6F31               	movwf	(desintegrator@i+1)& (0+255),b
 13933  003668  0E00               	movlw	0
 13934  00366A  6F30               	movwf	desintegrator@i& (0+255),b
 13935                           
 13936                           ; BSR set to: 1
 13937  00366C  0101               	movlb	1	; () banked
 13938  00366E  BF31               	btfsc	(desintegrator@i+1)& (0+255),7,b
 13939  003670  D00A               	goto	l9817
 13940  003672  0101               	movlb	1	; () banked
 13941  003674  5131               	movf	(desintegrator@i+1)& (0+255),w,b
 13942  003676  E106               	bnz	u13060
 13943  003678  0E06               	movlw	6
 13944  00367A  0101               	movlb	1	; () banked
 13945  00367C  5D30               	subwf	desintegrator@i& (0+255),w,b
 13946  00367E  B0D8               	btfsc	status,0,c
 13947  003680  0012               	return	
 13948  003682  D001               	goto	l9817
 13949  003684                     u13060:
 13950                           
 13951                           ; BSR set to: 1
 13952  003684  0012               	return	
 13953  003686                     l9817:
 13954                           
 13955                           ; BSR set to: 1
 13956                           ;DisplayProtocol.h: 54: temp2 = tempL/exp10[i];
 13957  003686  C124  F08F         	movff	desintegrator@tempL,___aldiv@dividend
 13958  00368A  C125  F090         	movff	desintegrator@tempL+1,___aldiv@dividend+1
 13959  00368E  C126  F091         	movff	desintegrator@tempL+2,___aldiv@dividend+2
 13960  003692  C127  F092         	movff	desintegrator@tempL+3,___aldiv@dividend+3
 13961  003696  0E6E               	movlw	low _exp10
 13962  003698  0101               	movlb	1	; () banked
 13963  00369A  6F1E               	movwf	??_desintegrator& (0+255),b
 13964  00369C  0E01               	movlw	high _exp10
 13965  00369E  0101               	movlb	1	; () banked
 13966  0036A0  6F1F               	movwf	(??_desintegrator+1)& (0+255),b
 13967  0036A2  90D8               	bcf	status,0,c
 13968  0036A4  0101               	movlb	1	; () banked
 13969  0036A6  3530               	rlcf	desintegrator@i& (0+255),w,b
 13970  0036A8  6ED9               	movwf	fsr2l,c
 13971  0036AA  0101               	movlb	1	; () banked
 13972  0036AC  3531               	rlcf	(desintegrator@i+1)& (0+255),w,b
 13973  0036AE  6EDA               	movwf	fsr2h,c
 13974  0036B0  90D8               	bcf	status,0,c
 13975  0036B2  36D9               	rlcf	fsr2l,f,c
 13976  0036B4  36DA               	rlcf	fsr2h,f,c
 13977  0036B6  0101               	movlb	1	; () banked
 13978  0036B8  511E               	movf	??_desintegrator& (0+255),w,b
 13979  0036BA  26D9               	addwf	fsr2l,f,c
 13980  0036BC  0101               	movlb	1	; () banked
 13981  0036BE  511F               	movf	(??_desintegrator+1)& (0+255),w,b
 13982  0036C0  22DA               	addwfc	fsr2h,f,c
 13983  0036C2  CFDE F093          	movff	postinc2,___aldiv@divisor
 13984  0036C6  CFDE F094          	movff	postinc2,___aldiv@divisor+1
 13985  0036CA  CFDE F095          	movff	postinc2,___aldiv@divisor+2
 13986  0036CE  CFDE F096          	movff	postinc2,___aldiv@divisor+3
 13987  0036D2  ECB6  F020         	call	___aldiv	;wreg free
 13988  0036D6  C08F  F12C         	movff	?___aldiv,desintegrator@temp2
 13989  0036DA  C090  F12D         	movff	?___aldiv+1,desintegrator@temp2+1
 13990  0036DE  C091  F12E         	movff	?___aldiv+2,desintegrator@temp2+2
 13991  0036E2  C092  F12F         	movff	?___aldiv+3,desintegrator@temp2+3
 13992                           
 13993                           ;DisplayProtocol.h: 55: temp3 = temp2*exp10[i];
 13994  0036E6  0E6E               	movlw	low _exp10
 13995  0036E8  0101               	movlb	1	; () banked
 13996  0036EA  6F1E               	movwf	??_desintegrator& (0+255),b
 13997  0036EC  0E01               	movlw	high _exp10
 13998  0036EE  0101               	movlb	1	; () banked
 13999  0036F0  6F1F               	movwf	(??_desintegrator+1)& (0+255),b
 14000  0036F2  90D8               	bcf	status,0,c
 14001  0036F4  0101               	movlb	1	; () banked
 14002  0036F6  3530               	rlcf	desintegrator@i& (0+255),w,b
 14003  0036F8  6ED9               	movwf	fsr2l,c
 14004  0036FA  0101               	movlb	1	; () banked
 14005  0036FC  3531               	rlcf	(desintegrator@i+1)& (0+255),w,b
 14006  0036FE  6EDA               	movwf	fsr2h,c
 14007  003700  90D8               	bcf	status,0,c
 14008  003702  36D9               	rlcf	fsr2l,f,c
 14009  003704  36DA               	rlcf	fsr2h,f,c
 14010  003706  0101               	movlb	1	; () banked
 14011  003708  511E               	movf	??_desintegrator& (0+255),w,b
 14012  00370A  26D9               	addwf	fsr2l,f,c
 14013  00370C  0101               	movlb	1	; () banked
 14014  00370E  511F               	movf	(??_desintegrator+1)& (0+255),w,b
 14015  003710  22DA               	addwfc	fsr2h,f,c
 14016  003712  CFDE F08F          	movff	postinc2,___lmul@multiplier
 14017  003716  CFDE F090          	movff	postinc2,___lmul@multiplier+1
 14018  00371A  CFDE F091          	movff	postinc2,___lmul@multiplier+2
 14019  00371E  CFDE F092          	movff	postinc2,___lmul@multiplier+3
 14020  003722  C12C  F093         	movff	desintegrator@temp2,___lmul@multiplicand
 14021  003726  C12D  F094         	movff	desintegrator@temp2+1,___lmul@multiplicand+1
 14022  00372A  C12E  F095         	movff	desintegrator@temp2+2,___lmul@multiplicand+2
 14023  00372E  C12F  F096         	movff	desintegrator@temp2+3,___lmul@multiplicand+3
 14024  003732  EC11  F02C         	call	___lmul	;wreg free
 14025  003736  C08F  F128         	movff	?___lmul,desintegrator@temp3
 14026  00373A  C090  F129         	movff	?___lmul+1,desintegrator@temp3+1
 14027  00373E  C091  F12A         	movff	?___lmul+2,desintegrator@temp3+2
 14028  003742  C092  F12B         	movff	?___lmul+3,desintegrator@temp3+3
 14029                           
 14030                           ;DisplayProtocol.h: 56: chanValdig[i] = temp2;
 14031  003746  0E9E               	movlw	low _chanValdig
 14032  003748  0101               	movlb	1	; () banked
 14033  00374A  2530               	addwf	desintegrator@i& (0+255),w,b
 14034  00374C  6ED9               	movwf	fsr2l,c
 14035  00374E  0E01               	movlw	high _chanValdig
 14036  003750  0101               	movlb	1	; () banked
 14037  003752  2131               	addwfc	(desintegrator@i+1)& (0+255),w,b
 14038  003754  6EDA               	movwf	fsr2h,c
 14039  003756  C12C  FFDF         	movff	desintegrator@temp2,indf2
 14040                           
 14041                           ; BSR set to: 1
 14042                           ;DisplayProtocol.h: 57: tempL -= temp3;
 14043  00375A  0101               	movlb	1	; () banked
 14044  00375C  5128               	movf	desintegrator@temp3& (0+255),w,b
 14045  00375E  0101               	movlb	1	; () banked
 14046  003760  5F24               	subwf	desintegrator@tempL& (0+255),f,b
 14047  003762  0101               	movlb	1	; () banked
 14048  003764  5129               	movf	(desintegrator@temp3+1)& (0+255),w,b
 14049  003766  0101               	movlb	1	; () banked
 14050  003768  5B25               	subwfb	(desintegrator@tempL+1)& (0+255),f,b
 14051  00376A  0101               	movlb	1	; () banked
 14052  00376C  512A               	movf	(desintegrator@temp3+2)& (0+255),w,b
 14053  00376E  0101               	movlb	1	; () banked
 14054  003770  5B26               	subwfb	(desintegrator@tempL+2)& (0+255),f,b
 14055  003772  0101               	movlb	1	; () banked
 14056  003774  512B               	movf	(desintegrator@temp3+3)& (0+255),w,b
 14057  003776  0101               	movlb	1	; () banked
 14058  003778  5B27               	subwfb	(desintegrator@tempL+3)& (0+255),f,b
 14059                           
 14060                           ; BSR set to: 1
 14061  00377A  0101               	movlb	1	; () banked
 14062  00377C  4B30               	infsnz	desintegrator@i& (0+255),f,b
 14063  00377E  2B31               	incf	(desintegrator@i+1)& (0+255),f,b
 14064                           
 14065                           ; BSR set to: 1
 14066  003780  0101               	movlb	1	; () banked
 14067  003782  BF31               	btfsc	(desintegrator@i+1)& (0+255),7,b
 14068  003784  D780               	goto	l9817
 14069  003786  0101               	movlb	1	; () banked
 14070  003788  5131               	movf	(desintegrator@i+1)& (0+255),w,b
 14071  00378A  E101               	bnz	l546
 14072  00378C  D775               	goto	L9
 14073  00378E                     l546:
 14074                           
 14075                           ; BSR set to: 1
 14076  00378E  0012               	return		;funcret
 14077  003790                     __end_of_desintegrator:
 14078                           	opt stack 0
 14079                           tblptru	equ	0xFF8
 14080                           tblptrh	equ	0xFF7
 14081                           tblptrl	equ	0xFF6
 14082                           tablat	equ	0xFF5
 14083                           prodh	equ	0xFF4
 14084                           prodl	equ	0xFF3
 14085                           intcon	equ	0xFF2
 14086                           postinc0	equ	0xFEE
 14087                           wreg	equ	0xFE8
 14088                           postdec1	equ	0xFE5
 14089                           fsr1l	equ	0xFE1
 14090                           indf2	equ	0xFDF
 14091                           postinc2	equ	0xFDE
 14092                           postdec2	equ	0xFDD
 14093                           fsr2h	equ	0xFDA
 14094                           fsr2l	equ	0xFD9
 14095                           status	equ	0xFD8
 14096                           
 14097 ;; *************** function ___fltol *****************
 14098 ;; Defined at:
 14099 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fltol.c"
 14100 ;; Parameters:    Size  Location     Type
 14101 ;;  f1              4   22[BANK1 ] void 
 14102 ;; Auto vars:     Size  Location     Type
 14103 ;;  exp1            1   74[BANK0 ] unsigned char 
 14104 ;;  sign1           1   73[BANK0 ] unsigned char 
 14105 ;; Return value:  Size  Location     Type
 14106 ;;                  4   22[BANK1 ] long 
 14107 ;; Registers used:
 14108 ;;		wreg, status,2, status,0
 14109 ;; Tracked objects:
 14110 ;;		On entry : 0/0
 14111 ;;		On exit  : 0/0
 14112 ;;		Unchanged: 0/0
 14113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14114 ;;      Params:         0       0       4       0       0       0       0
 14115 ;;      Locals:         0       2       0       0       0       0       0
 14116 ;;      Temps:          0       0       4       0       0       0       0
 14117 ;;      Totals:         0       2       8       0       0       0       0
 14118 ;;Total ram usage:       10 bytes
 14119 ;; Hardware stack levels used:    1
 14120 ;; Hardware stack levels required when called:    8
 14121 ;; This function calls:
 14122 ;;		Nothing
 14123 ;; This function is called by:
 14124 ;;		_desintegrator
 14125 ;;		_printf
 14126 ;; This function uses a non-reentrant model
 14127 ;;
 14128                           
 14129                           	psect	text50
 14130  004286                     __ptext50:
 14131                           	opt stack 0
 14132  004286                     ___fltol:
 14133                           	opt stack 19
 14134                           
 14135                           ; BSR set to: 1
 14136                           ;incstack = 0
 14137  004286  0101               	movlb	1	; () banked
 14138  004288  3518               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14139  00428A  3519               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14140  00428C  0100               	movlb	0	; () banked
 14141  00428E  6FAA               	movwf	___fltol@exp1& (0+255),b
 14142  004290  0100               	movlb	0	; () banked
 14143  004292  51AA               	movf	___fltol@exp1& (0+255),w,b
 14144  004294  A4D8               	btfss	status,2,c
 14145  004296  D00A               	goto	l8973
 14146                           
 14147                           ; BSR set to: 0
 14148  004298  0E00               	movlw	0
 14149  00429A  0101               	movlb	1	; () banked
 14150  00429C  6F16               	movwf	?___fltol& (0+255),b
 14151  00429E  0E00               	movlw	0
 14152  0042A0  6F17               	movwf	(?___fltol+1)& (0+255),b
 14153  0042A2  0E00               	movlw	0
 14154  0042A4  6F18               	movwf	(?___fltol+2)& (0+255),b
 14155  0042A6  0E00               	movlw	0
 14156  0042A8  6F19               	movwf	(?___fltol+3)& (0+255),b
 14157                           
 14158                           ; BSR set to: 1
 14159  0042AA  0012               	return	
 14160  0042AC                     l8973:
 14161  0042AC  C116  F11A         	movff	___fltol@f1,??___fltol
 14162  0042B0  C117  F11B         	movff	___fltol@f1+1,??___fltol+1
 14163  0042B4  C118  F11C         	movff	___fltol@f1+2,??___fltol+2
 14164  0042B8  C119  F11D         	movff	___fltol@f1+3,??___fltol+3
 14165  0042BC  0E20               	movlw	32
 14166  0042BE  D006               	goto	u11710
 14167  0042C0                     u11715:
 14168  0042C0  0101               	movlb	1	; () banked
 14169  0042C2  90D8               	bcf	status,0,c
 14170  0042C4  331D               	rrcf	(??___fltol+3)& (0+255),f,b
 14171  0042C6  331C               	rrcf	(??___fltol+2)& (0+255),f,b
 14172  0042C8  331B               	rrcf	(??___fltol+1)& (0+255),f,b
 14173  0042CA  331A               	rrcf	??___fltol& (0+255),f,b
 14174  0042CC                     u11710:
 14175  0042CC  2EE8               	decfsz	wreg,f,c
 14176  0042CE  D7F8               	goto	u11715
 14177  0042D0  0101               	movlb	1	; () banked
 14178  0042D2  511A               	movf	??___fltol& (0+255),w,b
 14179  0042D4  0100               	movlb	0	; () banked
 14180  0042D6  6FA9               	movwf	___fltol@sign1& (0+255),b
 14181                           
 14182                           ; BSR set to: 0
 14183  0042D8  0101               	movlb	1	; () banked
 14184  0042DA  8F18               	bsf	(___fltol@f1+2)& (0+255),7,b
 14185                           
 14186                           ; BSR set to: 1
 14187  0042DC  0EFF               	movlw	255
 14188  0042DE  0101               	movlb	1	; () banked
 14189  0042E0  1716               	andwf	___fltol@f1& (0+255),f,b
 14190  0042E2  0EFF               	movlw	255
 14191  0042E4  1717               	andwf	(___fltol@f1+1)& (0+255),f,b
 14192  0042E6  0EFF               	movlw	255
 14193  0042E8  1718               	andwf	(___fltol@f1+2)& (0+255),f,b
 14194  0042EA  0E00               	movlw	0
 14195  0042EC  1719               	andwf	(___fltol@f1+3)& (0+255),f,b
 14196                           
 14197                           ; BSR set to: 1
 14198  0042EE  0E96               	movlw	150
 14199  0042F0  0100               	movlb	0	; () banked
 14200  0042F2  5FAA               	subwf	___fltol@exp1& (0+255),f,b
 14201                           
 14202                           ; BSR set to: 0
 14203  0042F4  0100               	movlb	0	; () banked
 14204  0042F6  AFAA               	btfss	___fltol@exp1& (0+255),7,b
 14205  0042F8  D01A               	goto	l8993
 14206                           
 14207                           ; BSR set to: 0
 14208  0042FA  0100               	movlb	0	; () banked
 14209  0042FC  51AA               	movf	___fltol@exp1& (0+255),w,b
 14210  0042FE  0A80               	xorlw	128
 14211  004300  0F97               	addlw	151
 14212  004302  B0D8               	btfsc	status,0,c
 14213  004304  D00A               	goto	l8989
 14214                           
 14215                           ; BSR set to: 0
 14216  004306  0E00               	movlw	0
 14217  004308  0101               	movlb	1	; () banked
 14218  00430A  6F16               	movwf	?___fltol& (0+255),b
 14219  00430C  0E00               	movlw	0
 14220  00430E  6F17               	movwf	(?___fltol+1)& (0+255),b
 14221  004310  0E00               	movlw	0
 14222  004312  6F18               	movwf	(?___fltol+2)& (0+255),b
 14223  004314  0E00               	movlw	0
 14224  004316  6F19               	movwf	(?___fltol+3)& (0+255),b
 14225                           
 14226                           ; BSR set to: 1
 14227  004318  0012               	return	
 14228  00431A                     l8989:
 14229  00431A  0101               	movlb	1	; () banked
 14230  00431C  90D8               	bcf	status,0,c
 14231  00431E  3319               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14232  004320  3318               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14233  004322  3317               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14234  004324  3316               	rrcf	___fltol@f1& (0+255),f,b
 14235                           
 14236                           ; BSR set to: 1
 14237  004326  0100               	movlb	0	; () banked
 14238  004328  3FAA               	incfsz	___fltol@exp1& (0+255),f,b
 14239  00432A  D7F7               	goto	l8989
 14240                           
 14241                           ; BSR set to: 0
 14242  00432C  D01B               	goto	l9003
 14243  00432E                     l8993:
 14244                           
 14245                           ; BSR set to: 0
 14246  00432E  0E1F               	movlw	31
 14247  004330  0100               	movlb	0	; () banked
 14248  004332  65AA               	cpfsgt	___fltol@exp1& (0+255),b
 14249  004334  D012               	goto	l9001
 14250                           
 14251                           ; BSR set to: 0
 14252  004336  0E00               	movlw	0
 14253  004338  0101               	movlb	1	; () banked
 14254  00433A  6F16               	movwf	?___fltol& (0+255),b
 14255  00433C  0E00               	movlw	0
 14256  00433E  6F17               	movwf	(?___fltol+1)& (0+255),b
 14257  004340  0E00               	movlw	0
 14258  004342  6F18               	movwf	(?___fltol+2)& (0+255),b
 14259  004344  0E00               	movlw	0
 14260  004346  6F19               	movwf	(?___fltol+3)& (0+255),b
 14261                           
 14262                           ; BSR set to: 1
 14263  004348  0012               	return	
 14264  00434A                     l8999:
 14265  00434A  0101               	movlb	1	; () banked
 14266  00434C  90D8               	bcf	status,0,c
 14267  00434E  3716               	rlcf	___fltol@f1& (0+255),f,b
 14268  004350  3717               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14269  004352  3718               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14270  004354  3719               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14271  004356  0100               	movlb	0	; () banked
 14272  004358  07AA               	decf	___fltol@exp1& (0+255),f,b
 14273  00435A                     l9001:
 14274  00435A  0100               	movlb	0	; () banked
 14275  00435C  51AA               	movf	___fltol@exp1& (0+255),w,b
 14276  00435E  0100               	movlb	0	; () banked
 14277  004360  A4D8               	btfss	status,2,c
 14278  004362  D7F3               	goto	l8999
 14279  004364                     l9003:
 14280                           
 14281                           ; BSR set to: 0
 14282  004364  0100               	movlb	0	; () banked
 14283  004366  51A9               	movf	___fltol@sign1& (0+255),w,b
 14284  004368  0100               	movlb	0	; () banked
 14285  00436A  B4D8               	btfsc	status,2,c
 14286  00436C  D009               	goto	l9007
 14287                           
 14288                           ; BSR set to: 0
 14289  00436E  0101               	movlb	1	; () banked
 14290  004370  1F19               	comf	(___fltol@f1+3)& (0+255),f,b
 14291  004372  1F18               	comf	(___fltol@f1+2)& (0+255),f,b
 14292  004374  1F17               	comf	(___fltol@f1+1)& (0+255),f,b
 14293  004376  6D16               	negf	___fltol@f1& (0+255),b
 14294  004378  0E00               	movlw	0
 14295  00437A  2317               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14296  00437C  2318               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14297  00437E  2319               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14298  004380                     l9007:
 14299  004380  C116  F116         	movff	___fltol@f1,?___fltol
 14300  004384  C117  F117         	movff	___fltol@f1+1,?___fltol+1
 14301  004388  C118  F118         	movff	___fltol@f1+2,?___fltol+2
 14302  00438C  C119  F119         	movff	___fltol@f1+3,?___fltol+3
 14303  004390  0012               	return	
 14304  004392                     __end_of___fltol:
 14305                           	opt stack 0
 14306                           tblptru	equ	0xFF8
 14307                           tblptrh	equ	0xFF7
 14308                           tblptrl	equ	0xFF6
 14309                           tablat	equ	0xFF5
 14310                           prodh	equ	0xFF4
 14311                           prodl	equ	0xFF3
 14312                           intcon	equ	0xFF2
 14313                           postinc0	equ	0xFEE
 14314                           wreg	equ	0xFE8
 14315                           postdec1	equ	0xFE5
 14316                           fsr1l	equ	0xFE1
 14317                           indf2	equ	0xFDF
 14318                           postinc2	equ	0xFDE
 14319                           postdec2	equ	0xFDD
 14320                           fsr2h	equ	0xFDA
 14321                           fsr2l	equ	0xFD9
 14322                           status	equ	0xFD8
 14323                           
 14324 ;; *************** function ___aldiv *****************
 14325 ;; Defined at:
 14326 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 14327 ;; Parameters:    Size  Location     Type
 14328 ;;  dividend        4   47[BANK0 ] long 
 14329 ;;  divisor         4   51[BANK0 ] long 
 14330 ;; Auto vars:     Size  Location     Type
 14331 ;;  quotient        4   57[BANK0 ] long 
 14332 ;;  sign            1   56[BANK0 ] unsigned char 
 14333 ;;  counter         1   55[BANK0 ] unsigned char 
 14334 ;; Return value:  Size  Location     Type
 14335 ;;                  4   47[BANK0 ] long 
 14336 ;; Registers used:
 14337 ;;		wreg, status,2, status,0
 14338 ;; Tracked objects:
 14339 ;;		On entry : 0/0
 14340 ;;		On exit  : 0/0
 14341 ;;		Unchanged: 0/0
 14342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14343 ;;      Params:         0       8       0       0       0       0       0
 14344 ;;      Locals:         0       6       0       0       0       0       0
 14345 ;;      Temps:          0       0       0       0       0       0       0
 14346 ;;      Totals:         0      14       0       0       0       0       0
 14347 ;;Total ram usage:       14 bytes
 14348 ;; Hardware stack levels used:    1
 14349 ;; Hardware stack levels required when called:    8
 14350 ;; This function calls:
 14351 ;;		Nothing
 14352 ;; This function is called by:
 14353 ;;		_desintegrator
 14354 ;; This function uses a non-reentrant model
 14355 ;;
 14356                           
 14357                           	psect	text51
 14358  00416C                     __ptext51:
 14359                           	opt stack 0
 14360  00416C                     ___aldiv:
 14361                           	opt stack 19
 14362                           
 14363                           ;incstack = 0
 14364  00416C  0E00               	movlw	0
 14365  00416E  0100               	movlb	0	; () banked
 14366  004170  6F98               	movwf	___aldiv@sign& (0+255),b
 14367                           
 14368                           ; BSR set to: 0
 14369  004172  0100               	movlb	0	; () banked
 14370  004174  AF96               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14371  004176  D00C               	goto	l9459
 14372                           
 14373                           ; BSR set to: 0
 14374  004178  0100               	movlb	0	; () banked
 14375  00417A  1F96               	comf	(___aldiv@divisor+3)& (0+255),f,b
 14376  00417C  1F95               	comf	(___aldiv@divisor+2)& (0+255),f,b
 14377  00417E  1F94               	comf	(___aldiv@divisor+1)& (0+255),f,b
 14378  004180  6D93               	negf	___aldiv@divisor& (0+255),b
 14379  004182  0E00               	movlw	0
 14380  004184  2394               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 14381  004186  2395               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 14382  004188  2396               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 14383                           
 14384                           ; BSR set to: 0
 14385  00418A  0E01               	movlw	1
 14386  00418C  0100               	movlb	0	; () banked
 14387  00418E  6F98               	movwf	___aldiv@sign& (0+255),b
 14388  004190                     l9459:
 14389                           
 14390                           ; BSR set to: 0
 14391  004190  0100               	movlb	0	; () banked
 14392  004192  AF92               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 14393  004194  D00C               	goto	l9465
 14394                           
 14395                           ; BSR set to: 0
 14396  004196  0100               	movlb	0	; () banked
 14397  004198  1F92               	comf	(___aldiv@dividend+3)& (0+255),f,b
 14398  00419A  1F91               	comf	(___aldiv@dividend+2)& (0+255),f,b
 14399  00419C  1F90               	comf	(___aldiv@dividend+1)& (0+255),f,b
 14400  00419E  6D8F               	negf	___aldiv@dividend& (0+255),b
 14401  0041A0  0E00               	movlw	0
 14402  0041A2  2390               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 14403  0041A4  2391               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 14404  0041A6  2392               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 14405                           
 14406                           ; BSR set to: 0
 14407  0041A8  0E01               	movlw	1
 14408  0041AA  0100               	movlb	0	; () banked
 14409  0041AC  1B98               	xorwf	___aldiv@sign& (0+255),f,b
 14410  0041AE                     l9465:
 14411                           
 14412                           ; BSR set to: 0
 14413  0041AE  0E00               	movlw	0
 14414  0041B0  0100               	movlb	0	; () banked
 14415  0041B2  6F99               	movwf	___aldiv@quotient& (0+255),b
 14416  0041B4  0E00               	movlw	0
 14417  0041B6  6F9A               	movwf	(___aldiv@quotient+1)& (0+255),b
 14418  0041B8  0E00               	movlw	0
 14419  0041BA  6F9B               	movwf	(___aldiv@quotient+2)& (0+255),b
 14420  0041BC  0E00               	movlw	0
 14421  0041BE  6F9C               	movwf	(___aldiv@quotient+3)& (0+255),b
 14422                           
 14423                           ; BSR set to: 0
 14424  0041C0  0100               	movlb	0	; () banked
 14425  0041C2  5193               	movf	___aldiv@divisor& (0+255),w,b
 14426  0041C4  0100               	movlb	0	; () banked
 14427  0041C6  1194               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 14428  0041C8  0100               	movlb	0	; () banked
 14429  0041CA  1195               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 14430  0041CC  0100               	movlb	0	; () banked
 14431  0041CE  1196               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 14432  0041D0  B4D8               	btfsc	status,2,c
 14433  0041D2  D042               	goto	l9487
 14434                           
 14435                           ; BSR set to: 0
 14436  0041D4  0E01               	movlw	1
 14437  0041D6  0100               	movlb	0	; () banked
 14438  0041D8  6F97               	movwf	___aldiv@counter& (0+255),b
 14439  0041DA  D008               	goto	l9473
 14440  0041DC                     l9471:
 14441                           
 14442                           ; BSR set to: 0
 14443  0041DC  0100               	movlb	0	; () banked
 14444  0041DE  90D8               	bcf	status,0,c
 14445  0041E0  3793               	rlcf	___aldiv@divisor& (0+255),f,b
 14446  0041E2  3794               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 14447  0041E4  3795               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 14448  0041E6  3796               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 14449  0041E8  0100               	movlb	0	; () banked
 14450  0041EA  2B97               	incf	___aldiv@counter& (0+255),f,b
 14451  0041EC                     l9473:
 14452                           
 14453                           ; BSR set to: 0
 14454  0041EC  0100               	movlb	0	; () banked
 14455  0041EE  AF96               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14456  0041F0  D7F5               	goto	l9471
 14457  0041F2                     l9475:
 14458                           
 14459                           ; BSR set to: 0
 14460  0041F2  0100               	movlb	0	; () banked
 14461  0041F4  90D8               	bcf	status,0,c
 14462  0041F6  3799               	rlcf	___aldiv@quotient& (0+255),f,b
 14463  0041F8  379A               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 14464  0041FA  379B               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 14465  0041FC  379C               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 14466                           
 14467                           ; BSR set to: 0
 14468  0041FE  0100               	movlb	0	; () banked
 14469  004200  5193               	movf	___aldiv@divisor& (0+255),w,b
 14470  004202  0100               	movlb	0	; () banked
 14471  004204  5D8F               	subwf	___aldiv@dividend& (0+255),w,b
 14472  004206  0100               	movlb	0	; () banked
 14473  004208  5194               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14474  00420A  0100               	movlb	0	; () banked
 14475  00420C  5990               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 14476  00420E  0100               	movlb	0	; () banked
 14477  004210  5195               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14478  004212  0100               	movlb	0	; () banked
 14479  004214  5991               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 14480  004216  0100               	movlb	0	; () banked
 14481  004218  5196               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14482  00421A  0100               	movlb	0	; () banked
 14483  00421C  5992               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 14484  00421E  A0D8               	btfss	status,0,c
 14485  004220  D012               	goto	l9483
 14486                           
 14487                           ; BSR set to: 0
 14488  004222  0100               	movlb	0	; () banked
 14489  004224  5193               	movf	___aldiv@divisor& (0+255),w,b
 14490  004226  0100               	movlb	0	; () banked
 14491  004228  5F8F               	subwf	___aldiv@dividend& (0+255),f,b
 14492  00422A  0100               	movlb	0	; () banked
 14493  00422C  5194               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14494  00422E  0100               	movlb	0	; () banked
 14495  004230  5B90               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 14496  004232  0100               	movlb	0	; () banked
 14497  004234  5195               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14498  004236  0100               	movlb	0	; () banked
 14499  004238  5B91               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 14500  00423A  0100               	movlb	0	; () banked
 14501  00423C  5196               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14502  00423E  0100               	movlb	0	; () banked
 14503  004240  5B92               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 14504                           
 14505                           ; BSR set to: 0
 14506  004242  0100               	movlb	0	; () banked
 14507  004244  8199               	bsf	___aldiv@quotient& (0+255),0,b
 14508  004246                     l9483:
 14509                           
 14510                           ; BSR set to: 0
 14511  004246  0100               	movlb	0	; () banked
 14512  004248  90D8               	bcf	status,0,c
 14513  00424A  3396               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 14514  00424C  3395               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 14515  00424E  3394               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 14516  004250  3393               	rrcf	___aldiv@divisor& (0+255),f,b
 14517                           
 14518                           ; BSR set to: 0
 14519  004252  0100               	movlb	0	; () banked
 14520  004254  2F97               	decfsz	___aldiv@counter& (0+255),f,b
 14521  004256  D7CD               	goto	l9475
 14522  004258                     l9487:
 14523                           
 14524                           ; BSR set to: 0
 14525  004258  0100               	movlb	0	; () banked
 14526  00425A  5198               	movf	___aldiv@sign& (0+255),w,b
 14527  00425C  0100               	movlb	0	; () banked
 14528  00425E  B4D8               	btfsc	status,2,c
 14529  004260  D009               	goto	l9491
 14530                           
 14531                           ; BSR set to: 0
 14532  004262  0100               	movlb	0	; () banked
 14533  004264  1F9C               	comf	(___aldiv@quotient+3)& (0+255),f,b
 14534  004266  1F9B               	comf	(___aldiv@quotient+2)& (0+255),f,b
 14535  004268  1F9A               	comf	(___aldiv@quotient+1)& (0+255),f,b
 14536  00426A  6D99               	negf	___aldiv@quotient& (0+255),b
 14537  00426C  0E00               	movlw	0
 14538  00426E  239A               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 14539  004270  239B               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 14540  004272  239C               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 14541  004274                     l9491:
 14542                           
 14543                           ; BSR set to: 0
 14544  004274  C099  F08F         	movff	___aldiv@quotient,?___aldiv
 14545  004278  C09A  F090         	movff	___aldiv@quotient+1,?___aldiv+1
 14546  00427C  C09B  F091         	movff	___aldiv@quotient+2,?___aldiv+2
 14547  004280  C09C  F092         	movff	___aldiv@quotient+3,?___aldiv+3
 14548  004284  0012               	return	
 14549  004286                     __end_of___aldiv:
 14550                           	opt stack 0
 14551                           tblptru	equ	0xFF8
 14552                           tblptrh	equ	0xFF7
 14553                           tblptrl	equ	0xFF6
 14554                           tablat	equ	0xFF5
 14555                           prodh	equ	0xFF4
 14556                           prodl	equ	0xFF3
 14557                           intcon	equ	0xFF2
 14558                           postinc0	equ	0xFEE
 14559                           wreg	equ	0xFE8
 14560                           postdec1	equ	0xFE5
 14561                           fsr1l	equ	0xFE1
 14562                           indf2	equ	0xFDF
 14563                           postinc2	equ	0xFDE
 14564                           postdec2	equ	0xFDD
 14565                           fsr2h	equ	0xFDA
 14566                           fsr2l	equ	0xFD9
 14567                           status	equ	0xFD8
 14568                           
 14569 ;; *************** function _checkPass *****************
 14570 ;; Defined at:
 14571 ;;		line 14 in file "source/DisplayProtocol.h"
 14572 ;; Parameters:    Size  Location     Type
 14573 ;;		None
 14574 ;; Auto vars:     Size  Location     Type
 14575 ;;  i               2   52[BANK0 ] int 
 14576 ;;  passOK          1   51[BANK0 ] unsigned char 
 14577 ;; Return value:  Size  Location     Type
 14578 ;;                  1    wreg      unsigned char 
 14579 ;; Registers used:
 14580 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14581 ;; Tracked objects:
 14582 ;;		On entry : 0/0
 14583 ;;		On exit  : 0/0
 14584 ;;		Unchanged: 0/0
 14585 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14586 ;;      Params:         0       0       0       0       0       0       0
 14587 ;;      Locals:         0       3       0       0       0       0       0
 14588 ;;      Temps:          0       4       0       0       0       0       0
 14589 ;;      Totals:         0       7       0       0       0       0       0
 14590 ;;Total ram usage:        7 bytes
 14591 ;; Hardware stack levels used:    1
 14592 ;; Hardware stack levels required when called:    8
 14593 ;; This function calls:
 14594 ;;		Nothing
 14595 ;; This function is called by:
 14596 ;;		_pressENTER
 14597 ;; This function uses a non-reentrant model
 14598 ;;
 14599                           
 14600                           	psect	text52
 14601  005526                     __ptext52:
 14602                           	opt stack 0
 14603  005526                     _checkPass:
 14604                           	opt stack 20
 14605                           
 14606                           ;DisplayProtocol.h: 15: int i;
 14607                           ;DisplayProtocol.h: 16: char passOK = 0;
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;incstack = 0
 14611  005526  0E00               	movlw	0
 14612  005528  0100               	movlb	0	; () banked
 14613  00552A  6F93               	movwf	checkPass@passOK& (0+255),b
 14614                           
 14615                           ;DisplayProtocol.h: 17: for (i = 0; i < 4; i++) {
 14616  00552C  0E00               	movlw	0
 14617  00552E  0100               	movlb	0	; () banked
 14618  005530  6F95               	movwf	(checkPass@i+1)& (0+255),b
 14619  005532  0E00               	movlw	0
 14620  005534  6F94               	movwf	checkPass@i& (0+255),b
 14621  005536                     l6637:
 14622                           
 14623                           ; BSR set to: 0
 14624  005536  0100               	movlb	0	; () banked
 14625  005538  BF95               	btfsc	(checkPass@i+1)& (0+255),7,b
 14626  00553A  D008               	goto	l6641
 14627  00553C  0100               	movlb	0	; () banked
 14628  00553E  5195               	movf	(checkPass@i+1)& (0+255),w,b
 14629  005540  E136               	bnz	l6651
 14630  005542  0E04               	movlw	4
 14631  005544  0100               	movlb	0	; () banked
 14632  005546  5D94               	subwf	checkPass@i& (0+255),w,b
 14633  005548  B0D8               	btfsc	status,0,c
 14634  00554A  D031               	goto	l6651
 14635  00554C                     l6641:
 14636                           
 14637                           ; BSR set to: 0
 14638                           ;DisplayProtocol.h: 18: if (introducido[i] == contra[i])
 14639  00554C  0EA8               	movlw	low _contra
 14640  00554E  0100               	movlb	0	; () banked
 14641  005550  2594               	addwf	checkPass@i& (0+255),w,b
 14642  005552  6ED9               	movwf	fsr2l,c
 14643  005554  0E01               	movlw	high _contra
 14644  005556  0100               	movlb	0	; () banked
 14645  005558  2195               	addwfc	(checkPass@i+1)& (0+255),w,b
 14646  00555A  6EDA               	movwf	fsr2h,c
 14647  00555C  50DF               	movf	indf2,w,c
 14648  00555E  0100               	movlb	0	; () banked
 14649  005560  6F8F               	movwf	??_checkPass& (0+255),b
 14650  005562  6B90               	clrf	(??_checkPass+1)& (0+255),b
 14651  005564  0EAC               	movlw	low _introducido
 14652  005566  0100               	movlb	0	; () banked
 14653  005568  2594               	addwf	checkPass@i& (0+255),w,b
 14654  00556A  6ED9               	movwf	fsr2l,c
 14655  00556C  0E01               	movlw	high _introducido
 14656  00556E  0100               	movlb	0	; () banked
 14657  005570  2195               	addwfc	(checkPass@i+1)& (0+255),w,b
 14658  005572  6EDA               	movwf	fsr2h,c
 14659  005574  50DF               	movf	indf2,w,c
 14660  005576  0100               	movlb	0	; () banked
 14661  005578  6F91               	movwf	(??_checkPass+2)& (0+255),b
 14662  00557A  6B92               	clrf	(??_checkPass+3)& (0+255),b
 14663  00557C  BF91               	btfsc	(??_checkPass+2)& (0+255),7,b
 14664  00557E  0792               	decf	(??_checkPass+3)& (0+255),f,b
 14665  005580  0100               	movlb	0	; () banked
 14666  005582  518F               	movf	??_checkPass& (0+255),w,b
 14667  005584  0100               	movlb	0	; () banked
 14668  005586  1991               	xorwf	(??_checkPass+2)& (0+255),w,b
 14669  005588  E10A               	bnz	l6645
 14670  00558A  0100               	movlb	0	; () banked
 14671  00558C  5190               	movf	(??_checkPass+1)& (0+255),w,b
 14672  00558E  0100               	movlb	0	; () banked
 14673  005590  1992               	xorwf	(??_checkPass+3)& (0+255),w,b
 14674  005592  A4D8               	btfss	status,2,c
 14675  005594  D004               	goto	l6645
 14676                           
 14677                           ; BSR set to: 0
 14678                           ;DisplayProtocol.h: 19: passOK = 1;
 14679  005596  0E01               	movlw	1
 14680  005598  0100               	movlb	0	; () banked
 14681  00559A  6F93               	movwf	checkPass@passOK& (0+255),b
 14682  00559C  D004               	goto	l6647
 14683  00559E                     l6645:
 14684                           
 14685                           ; BSR set to: 0
 14686                           ;DisplayProtocol.h: 20: else {
 14687                           ;DisplayProtocol.h: 21: passOK = 0;
 14688  00559E  0E00               	movlw	0
 14689  0055A0  0100               	movlb	0	; () banked
 14690  0055A2  6F93               	movwf	checkPass@passOK& (0+255),b
 14691                           
 14692                           ;DisplayProtocol.h: 22: break;
 14693  0055A4  D004               	goto	l6651
 14694  0055A6                     l6647:
 14695                           
 14696                           ; BSR set to: 0
 14697  0055A6  0100               	movlb	0	; () banked
 14698  0055A8  4B94               	infsnz	checkPass@i& (0+255),f,b
 14699  0055AA  2B95               	incf	(checkPass@i+1)& (0+255),f,b
 14700  0055AC  D7C4               	goto	l6637
 14701  0055AE                     l6651:
 14702                           
 14703                           ; BSR set to: 0
 14704                           ;DisplayProtocol.h: 23: }
 14705                           ;DisplayProtocol.h: 24: }
 14706                           ;DisplayProtocol.h: 25: return passOK;
 14707  0055AE  0100               	movlb	0	; () banked
 14708  0055B0  5193               	movf	checkPass@passOK& (0+255),w,b
 14709  0055B2  0012               	return	
 14710  0055B4                     __end_of_checkPass:
 14711                           	opt stack 0
 14712                           tblptru	equ	0xFF8
 14713                           tblptrh	equ	0xFF7
 14714                           tblptrl	equ	0xFF6
 14715                           tablat	equ	0xFF5
 14716                           prodh	equ	0xFF4
 14717                           prodl	equ	0xFF3
 14718                           intcon	equ	0xFF2
 14719                           postinc0	equ	0xFEE
 14720                           wreg	equ	0xFE8
 14721                           postdec1	equ	0xFE5
 14722                           fsr1l	equ	0xFE1
 14723                           indf2	equ	0xFDF
 14724                           postinc2	equ	0xFDE
 14725                           postdec2	equ	0xFDD
 14726                           fsr2h	equ	0xFDA
 14727                           fsr2l	equ	0xFD9
 14728                           status	equ	0xFD8
 14729                           
 14730 ;; *************** function _pressDOWN *****************
 14731 ;; Defined at:
 14732 ;;		line 183 in file "source/DisplayProtocol.h"
 14733 ;; Parameters:    Size  Location     Type
 14734 ;;		None
 14735 ;; Auto vars:     Size  Location     Type
 14736 ;;		None
 14737 ;; Return value:  Size  Location     Type
 14738 ;;                  1    wreg      void 
 14739 ;; Registers used:
 14740 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14741 ;; Tracked objects:
 14742 ;;		On entry : 0/0
 14743 ;;		On exit  : 0/0
 14744 ;;		Unchanged: 0/0
 14745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14746 ;;      Params:         0       0       0       0       0       0       0
 14747 ;;      Locals:         0       0       0       0       0       0       0
 14748 ;;      Temps:          0       1       0       0       0       0       0
 14749 ;;      Totals:         0       1       0       0       0       0       0
 14750 ;;Total ram usage:        1 bytes
 14751 ;; Hardware stack levels used:    1
 14752 ;; Hardware stack levels required when called:    9
 14753 ;; This function calls:
 14754 ;;		_chanValDigDOWN
 14755 ;; This function is called by:
 14756 ;;		_buttonChecking
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text53
 14761  00469E                     __ptext53:
 14762                           	opt stack 0
 14763  00469E                     _pressDOWN:
 14764                           	opt stack 20
 14765                           
 14766                           ;DisplayProtocol.h: 184: if (actualScreen == 0 || actualScreen == 4) {
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;incstack = 0
 14770  00469E  0100               	movlb	0	; () banked
 14771  0046A0  51B8               	movf	_actualScreen& (0+255),w,b
 14772  0046A2  B4D8               	btfsc	status,2,c
 14773  0046A4  D005               	goto	l7083
 14774                           
 14775                           ; BSR set to: 0
 14776  0046A6  0E04               	movlw	4
 14777  0046A8  0100               	movlb	0	; () banked
 14778  0046AA  19B8               	xorwf	_actualScreen& (0+255),w,b
 14779  0046AC  A4D8               	btfss	status,2,c
 14780  0046AE  D009               	goto	l7089
 14781  0046B0                     l7083:
 14782                           
 14783                           ; BSR set to: 0
 14784                           ;DisplayProtocol.h: 185: menuSection--;
 14785  0046B0  0101               	movlb	1	; () banked
 14786  0046B2  07B6               	decf	_menuSection& (0+255),f,b
 14787                           
 14788                           ; BSR set to: 1
 14789                           ;DisplayProtocol.h: 186: if (menuSection < 0)
 14790  0046B4  0101               	movlb	1	; () banked
 14791  0046B6  AFB6               	btfss	_menuSection& (0+255),7,b
 14792  0046B8  0012               	return	
 14793                           
 14794                           ; BSR set to: 1
 14795                           ;DisplayProtocol.h: 187: menuSection = 4;
 14796  0046BA  0E04               	movlw	4
 14797  0046BC  0101               	movlb	1	; () banked
 14798  0046BE  6FB6               	movwf	_menuSection& (0+255),b
 14799                           
 14800                           ; BSR set to: 1
 14801                           ;DisplayProtocol.h: 188: } else if (actualScreen == 1) {
 14802  0046C0  0012               	return	
 14803  0046C2                     l7089:
 14804  0046C2  0100               	movlb	0	; () banked
 14805  0046C4  05B8               	decf	_actualScreen& (0+255),w,b
 14806  0046C6  A4D8               	btfss	status,2,c
 14807  0046C8  D022               	goto	l7095
 14808                           
 14809                           ; BSR set to: 0
 14810                           ;DisplayProtocol.h: 189: introducido[passSection]--;
 14811  0046CA  0100               	movlb	0	; () banked
 14812  0046CC  51C0               	movf	_passSection& (0+255),w,b
 14813  0046CE  0D01               	mullw	1
 14814  0046D0  0EAC               	movlw	low _introducido
 14815  0046D2  24F3               	addwf	prodl,w,c
 14816  0046D4  6ED9               	movwf	fsr2l,c
 14817  0046D6  0E01               	movlw	high _introducido
 14818  0046D8  20F4               	addwfc	prodh,w,c
 14819  0046DA  6EDA               	movwf	fsr2h,c
 14820  0046DC  06DF               	decf	indf2,f,c
 14821                           
 14822                           ;DisplayProtocol.h: 190: if (introducido[passSection] < 0)
 14823  0046DE  0100               	movlb	0	; () banked
 14824  0046E0  51C0               	movf	_passSection& (0+255),w,b
 14825  0046E2  0D01               	mullw	1
 14826  0046E4  0EAC               	movlw	low _introducido
 14827  0046E6  24F3               	addwf	prodl,w,c
 14828  0046E8  6ED9               	movwf	fsr2l,c
 14829  0046EA  0E01               	movlw	high _introducido
 14830  0046EC  20F4               	addwfc	prodh,w,c
 14831  0046EE  6EDA               	movwf	fsr2h,c
 14832  0046F0  0E00               	movlw	0
 14833  0046F2  AEDB               	btfss	plusw2,7,c
 14834  0046F4  0012               	return	
 14835                           
 14836                           ; BSR set to: 0
 14837                           ;DisplayProtocol.h: 191: introducido[passSection] = 9;
 14838  0046F6  0100               	movlb	0	; () banked
 14839  0046F8  51C0               	movf	_passSection& (0+255),w,b
 14840  0046FA  0D01               	mullw	1
 14841  0046FC  0EAC               	movlw	low _introducido
 14842  0046FE  24F3               	addwf	prodl,w,c
 14843  004700  6ED9               	movwf	fsr2l,c
 14844  004702  0E01               	movlw	high _introducido
 14845  004704  20F4               	addwfc	prodh,w,c
 14846  004706  6EDA               	movwf	fsr2h,c
 14847  004708  0E09               	movlw	9
 14848  00470A  6EDF               	movwf	indf2,c
 14849                           
 14850                           ; BSR set to: 0
 14851                           ;DisplayProtocol.h: 192: } else if (actualScreen == 2 || actualScreen == 3
 14852  00470C  0012               	return	
 14853  00470E                     l7095:
 14854                           
 14855                           ; BSR set to: 0
 14856                           ;DisplayProtocol.h: 193: || actualScreen == 10) {
 14857  00470E  0E02               	movlw	2
 14858  004710  0100               	movlb	0	; () banked
 14859  004712  19B8               	xorwf	_actualScreen& (0+255),w,b
 14860  004714  B4D8               	btfsc	status,2,c
 14861  004716  D00A               	goto	l7101
 14862                           
 14863                           ; BSR set to: 0
 14864  004718  0E03               	movlw	3
 14865  00471A  0100               	movlb	0	; () banked
 14866  00471C  19B8               	xorwf	_actualScreen& (0+255),w,b
 14867  00471E  B4D8               	btfsc	status,2,c
 14868  004720  D005               	goto	l7101
 14869                           
 14870                           ; BSR set to: 0
 14871  004722  0E0A               	movlw	10
 14872  004724  0100               	movlb	0	; () banked
 14873  004726  19B8               	xorwf	_actualScreen& (0+255),w,b
 14874  004728  A4D8               	btfss	status,2,c
 14875  00472A  D011               	goto	l7107
 14876  00472C                     l7101:
 14877                           
 14878                           ; BSR set to: 0
 14879                           ;DisplayProtocol.h: 194: selSN = !selSN;
 14880  00472C  0100               	movlb	0	; () banked
 14881  00472E  51C1               	movf	_selSN& (0+255),w,b
 14882  004730  A4D8               	btfss	status,2,c
 14883  004732  D002               	goto	u8590
 14884  004734  0E01               	movlw	1
 14885  004736  D001               	goto	u8600
 14886  004738                     u8590:
 14887  004738  0E00               	movlw	0
 14888  00473A                     u8600:
 14889  00473A  0100               	movlb	0	; () banked
 14890  00473C  6FC1               	movwf	_selSN& (0+255),b
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;DisplayProtocol.h: 195: if(selSN > 1)
 14894  00473E  0E01               	movlw	1
 14895  004740  0100               	movlb	0	; () banked
 14896  004742  65C1               	cpfsgt	_selSN& (0+255),b
 14897  004744  0012               	return	
 14898                           
 14899                           ; BSR set to: 0
 14900                           ;DisplayProtocol.h: 196: selSN = 0;
 14901  004746  0E00               	movlw	0
 14902  004748  0100               	movlb	0	; () banked
 14903  00474A  6FC1               	movwf	_selSN& (0+255),b
 14904                           
 14905                           ; BSR set to: 0
 14906                           ;DisplayProtocol.h: 197: }else if(actualScreen == 5) {
 14907  00474C  0012               	return	
 14908  00474E                     l7107:
 14909                           
 14910                           ; BSR set to: 0
 14911  00474E  0E05               	movlw	5
 14912  004750  0100               	movlb	0	; () banked
 14913  004752  19B8               	xorwf	_actualScreen& (0+255),w,b
 14914  004754  A4D8               	btfss	status,2,c
 14915  004756  0012               	return	
 14916  004758  D00E               	goto	l7121
 14917  00475A                     l7111:
 14918                           
 14919                           ;DisplayProtocol.h: 202: chanValDigDOWN();
 14920  00475A  EC93  F025         	call	_chanValDigDOWN	;wreg free
 14921                           
 14922                           ;DisplayProtocol.h: 203: break;
 14923  00475E  0012               	return	
 14924  004760                     l7113:
 14925                           
 14926                           ;DisplayProtocol.h: 205: chanVals--;
 14927  004760  0101               	movlb	1	; () banked
 14928  004762  07B4               	decf	_chanVals& (0+255),f,b
 14929  004764  A0D8               	btfss	status,0,c
 14930  004766  07B5               	decf	(_chanVals+1)& (0+255),f,b
 14931                           
 14932                           ;DisplayProtocol.h: 206: break;
 14933  004768  0012               	return	
 14934  00476A                     l7115:
 14935                           
 14936                           ; BSR set to: 1
 14937                           ;DisplayProtocol.h: 208: chanValDigDOWN();
 14938  00476A  EC93  F025         	call	_chanValDigDOWN	;wreg free
 14939                           
 14940                           ;DisplayProtocol.h: 209: break;
 14941  00476E  0012               	return	
 14942  004770                     l7117:
 14943                           
 14944                           ;DisplayProtocol.h: 211: chanValDigDOWN();
 14945  004770  EC93  F025         	call	_chanValDigDOWN	;wreg free
 14946                           
 14947                           ;DisplayProtocol.h: 213: }
 14948                           ;DisplayProtocol.h: 214: }
 14949                           
 14950                           ;DisplayProtocol.h: 212: break;
 14951  004774  0012               	return	
 14952  004776                     l7121:
 14953  004776  0101               	movlb	1	; () banked
 14954  004778  51B6               	movf	_menuSection& (0+255),w,b
 14955                           
 14956                           ; Switch size 1, requested type "space"
 14957                           ; Number of cases is 5, Range of values is 0 to 4
 14958                           ; switch strategies available:
 14959                           ; Name         Instructions Cycles
 14960                           ; simple_byte           16     9 (average)
 14961                           ;	Chosen strategy is simple_byte
 14962  00477A  0A00               	xorlw	0	; case 0
 14963  00477C  B4D8               	btfsc	status,2,c
 14964  00477E  0012               	return	
 14965  004780  0A01               	xorlw	1	; case 1
 14966  004782  B4D8               	btfsc	status,2,c
 14967  004784  D7EA               	goto	l7111
 14968  004786  0A03               	xorlw	3	; case 2
 14969  004788  B4D8               	btfsc	status,2,c
 14970  00478A  D7EA               	goto	l7113
 14971  00478C  0A01               	xorlw	1	; case 3
 14972  00478E  B4D8               	btfsc	status,2,c
 14973  004790  D7EC               	goto	l7115
 14974  004792  0A07               	xorlw	7	; case 4
 14975  004794  A4D8               	btfss	status,2,c
 14976                           
 14977                           ; BSR set to: 1
 14978                           
 14979                           ; BSR set to: 1
 14980                           
 14981                           ; BSR set to: 1
 14982                           
 14983                           ; BSR set to: 1
 14984  004796  0012               	return	
 14985  004798  D7EB               	goto	l7117
 14986  00479A                     __end_of_pressDOWN:
 14987                           	opt stack 0
 14988                           tblptru	equ	0xFF8
 14989                           tblptrh	equ	0xFF7
 14990                           tblptrl	equ	0xFF6
 14991                           tablat	equ	0xFF5
 14992                           prodh	equ	0xFF4
 14993                           prodl	equ	0xFF3
 14994                           intcon	equ	0xFF2
 14995                           postinc0	equ	0xFEE
 14996                           wreg	equ	0xFE8
 14997                           postdec1	equ	0xFE5
 14998                           fsr1l	equ	0xFE1
 14999                           indf2	equ	0xFDF
 15000                           postinc2	equ	0xFDE
 15001                           postdec2	equ	0xFDD
 15002                           plusw2	equ	0xFDB
 15003                           fsr2h	equ	0xFDA
 15004                           fsr2l	equ	0xFD9
 15005                           status	equ	0xFD8
 15006                           
 15007 ;; *************** function _chanValDigDOWN *****************
 15008 ;; Defined at:
 15009 ;;		line 37 in file "source/DisplayProtocol.h"
 15010 ;; Parameters:    Size  Location     Type
 15011 ;;		None
 15012 ;; Auto vars:     Size  Location     Type
 15013 ;;		None
 15014 ;; Return value:  Size  Location     Type
 15015 ;;                  1    wreg      void 
 15016 ;; Registers used:
 15017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15018 ;; Tracked objects:
 15019 ;;		On entry : 0/0
 15020 ;;		On exit  : 0/0
 15021 ;;		Unchanged: 0/0
 15022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15023 ;;      Params:         0       0       0       0       0       0       0
 15024 ;;      Locals:         0       0       0       0       0       0       0
 15025 ;;      Temps:          0       5       0       0       0       0       0
 15026 ;;      Totals:         0       5       0       0       0       0       0
 15027 ;;Total ram usage:        5 bytes
 15028 ;; Hardware stack levels used:    1
 15029 ;; Hardware stack levels required when called:    8
 15030 ;; This function calls:
 15031 ;;		Nothing
 15032 ;; This function is called by:
 15033 ;;		_pressDOWN
 15034 ;; This function uses a non-reentrant model
 15035 ;;
 15036                           
 15037                           	psect	text54
 15038  004B26                     __ptext54:
 15039                           	opt stack 0
 15040  004B26                     _chanValDigDOWN:
 15041                           	opt stack 20
 15042                           
 15043                           ;DisplayProtocol.h: 38: chanValdig[chanValSection]--;
 15044                           
 15045                           ;incstack = 0
 15046  004B26  0101               	movlb	1	; () banked
 15047  004B28  5196               	movf	_chanValSection& (0+255),w,b
 15048  004B2A  0D01               	mullw	1
 15049  004B2C  0E9E               	movlw	low _chanValdig
 15050  004B2E  24F3               	addwf	prodl,w,c
 15051  004B30  6ED9               	movwf	fsr2l,c
 15052  004B32  0E01               	movlw	high _chanValdig
 15053  004B34  20F4               	addwfc	prodh,w,c
 15054  004B36  6EDA               	movwf	fsr2h,c
 15055  004B38  06DF               	decf	indf2,f,c
 15056                           
 15057                           ;DisplayProtocol.h: 39: if(chanValdig[chanValSection] < 0) {
 15058  004B3A  0101               	movlb	1	; () banked
 15059  004B3C  5196               	movf	_chanValSection& (0+255),w,b
 15060  004B3E  0D01               	mullw	1
 15061  004B40  0E9E               	movlw	low _chanValdig
 15062  004B42  24F3               	addwf	prodl,w,c
 15063  004B44  6ED9               	movwf	fsr2l,c
 15064  004B46  0E01               	movlw	high _chanValdig
 15065  004B48  20F4               	addwfc	prodh,w,c
 15066  004B4A  6EDA               	movwf	fsr2h,c
 15067  004B4C  0E00               	movlw	0
 15068  004B4E  AEDB               	btfss	plusw2,7,c
 15069  004B50  0012               	return	
 15070                           
 15071                           ; BSR set to: 1
 15072                           ;DisplayProtocol.h: 40: chanValdig[chanValSection] = 9;
 15073  004B52  0101               	movlb	1	; () banked
 15074  004B54  5196               	movf	_chanValSection& (0+255),w,b
 15075  004B56  0D01               	mullw	1
 15076  004B58  0E9E               	movlw	low _chanValdig
 15077  004B5A  24F3               	addwf	prodl,w,c
 15078  004B5C  6ED9               	movwf	fsr2l,c
 15079  004B5E  0E01               	movlw	high _chanValdig
 15080  004B60  20F4               	addwfc	prodh,w,c
 15081  004B62  6EDA               	movwf	fsr2h,c
 15082  004B64  0E09               	movlw	9
 15083  004B66  6EDF               	movwf	indf2,c
 15084                           
 15085                           ; BSR set to: 1
 15086                           ;DisplayProtocol.h: 41: if(chanValSection > 1 && chanValdig[chanValSection - 1] > 0)
 15087  004B68  0101               	movlb	1	; () banked
 15088  004B6A  5196               	movf	_chanValSection& (0+255),w,b
 15089  004B6C  0A80               	xorlw	128
 15090  004B6E  0F7E               	addlw	-130
 15091  004B70  A0D8               	btfss	status,0,c
 15092  004B72  0012               	return	
 15093                           
 15094                           ; BSR set to: 1
 15095  004B74  0EFF               	movlw	255
 15096  004B76  0100               	movlb	0	; () banked
 15097  004B78  6F8F               	movwf	??_chanValDigDOWN& (0+255),b
 15098  004B7A  0EFF               	movlw	255
 15099  004B7C  0100               	movlb	0	; () banked
 15100  004B7E  6F90               	movwf	(??_chanValDigDOWN+1)& (0+255),b
 15101  004B80  C196  F091         	movff	_chanValSection,??_chanValDigDOWN+2
 15102  004B84  0100               	movlb	0	; () banked
 15103  004B86  6B92               	clrf	(??_chanValDigDOWN+3)& (0+255),b
 15104  004B88  BF91               	btfsc	(??_chanValDigDOWN+2)& (0+255),7,b
 15105  004B8A  0792               	decf	(??_chanValDigDOWN+3)& (0+255),f,b
 15106  004B8C  0100               	movlb	0	; () banked
 15107  004B8E  518F               	movf	??_chanValDigDOWN& (0+255),w,b
 15108  004B90  0100               	movlb	0	; () banked
 15109  004B92  2791               	addwf	(??_chanValDigDOWN+2)& (0+255),f,b
 15110  004B94  0100               	movlb	0	; () banked
 15111  004B96  5190               	movf	(??_chanValDigDOWN+1)& (0+255),w,b
 15112  004B98  0100               	movlb	0	; () banked
 15113  004B9A  2392               	addwfc	(??_chanValDigDOWN+3)& (0+255),f,b
 15114  004B9C  0E9E               	movlw	low _chanValdig
 15115  004B9E  0100               	movlb	0	; () banked
 15116  004BA0  2591               	addwf	(??_chanValDigDOWN+2)& (0+255),w,b
 15117  004BA2  6ED9               	movwf	fsr2l,c
 15118  004BA4  0E01               	movlw	high _chanValdig
 15119  004BA6  0100               	movlb	0	; () banked
 15120  004BA8  2192               	addwfc	(??_chanValDigDOWN+3)& (0+255),w,b
 15121  004BAA  6EDA               	movwf	fsr2h,c
 15122  004BAC  50DF               	movf	indf2,w,c
 15123  004BAE  0A80               	xorlw	128
 15124  004BB0  0F7F               	addlw	-129
 15125  004BB2  A0D8               	btfss	status,0,c
 15126  004BB4  0012               	return	
 15127                           
 15128                           ; BSR set to: 0
 15129                           ;DisplayProtocol.h: 42: chanValdig[chanValSection - 1]--;
 15130  004BB6  0EFF               	movlw	255
 15131  004BB8  0100               	movlb	0	; () banked
 15132  004BBA  6F8F               	movwf	??_chanValDigDOWN& (0+255),b
 15133  004BBC  0EFF               	movlw	255
 15134  004BBE  0100               	movlb	0	; () banked
 15135  004BC0  6F90               	movwf	(??_chanValDigDOWN+1)& (0+255),b
 15136  004BC2  C196  F091         	movff	_chanValSection,??_chanValDigDOWN+2
 15137  004BC6  0100               	movlb	0	; () banked
 15138  004BC8  6B92               	clrf	(??_chanValDigDOWN+3)& (0+255),b
 15139  004BCA  BF91               	btfsc	(??_chanValDigDOWN+2)& (0+255),7,b
 15140  004BCC  0792               	decf	(??_chanValDigDOWN+3)& (0+255),f,b
 15141  004BCE  0100               	movlb	0	; () banked
 15142  004BD0  518F               	movf	??_chanValDigDOWN& (0+255),w,b
 15143  004BD2  0100               	movlb	0	; () banked
 15144  004BD4  2791               	addwf	(??_chanValDigDOWN+2)& (0+255),f,b
 15145  004BD6  0100               	movlb	0	; () banked
 15146  004BD8  5190               	movf	(??_chanValDigDOWN+1)& (0+255),w,b
 15147  004BDA  0100               	movlb	0	; () banked
 15148  004BDC  2392               	addwfc	(??_chanValDigDOWN+3)& (0+255),f,b
 15149  004BDE  0E9E               	movlw	low _chanValdig
 15150  004BE0  0100               	movlb	0	; () banked
 15151  004BE2  2591               	addwf	(??_chanValDigDOWN+2)& (0+255),w,b
 15152  004BE4  6ED9               	movwf	fsr2l,c
 15153  004BE6  0E01               	movlw	high _chanValdig
 15154  004BE8  0100               	movlb	0	; () banked
 15155  004BEA  2192               	addwfc	(??_chanValDigDOWN+3)& (0+255),w,b
 15156  004BEC  6EDA               	movwf	fsr2h,c
 15157  004BEE  06DF               	decf	indf2,f,c
 15158                           
 15159                           ; BSR set to: 0
 15160  004BF0  0012               	return	
 15161  004BF2                     __end_of_chanValDigDOWN:
 15162                           	opt stack 0
 15163                           tblptru	equ	0xFF8
 15164                           tblptrh	equ	0xFF7
 15165                           tblptrl	equ	0xFF6
 15166                           tablat	equ	0xFF5
 15167                           prodh	equ	0xFF4
 15168                           prodl	equ	0xFF3
 15169                           intcon	equ	0xFF2
 15170                           postinc0	equ	0xFEE
 15171                           wreg	equ	0xFE8
 15172                           postdec1	equ	0xFE5
 15173                           fsr1l	equ	0xFE1
 15174                           indf2	equ	0xFDF
 15175                           postinc2	equ	0xFDE
 15176                           postdec2	equ	0xFDD
 15177                           plusw2	equ	0xFDB
 15178                           fsr2h	equ	0xFDA
 15179                           fsr2l	equ	0xFD9
 15180                           status	equ	0xFD8
 15181                           
 15182 ;; *************** function _longPressUP *****************
 15183 ;; Defined at:
 15184 ;;		line 159 in file "source/DisplayProtocol.h"
 15185 ;; Parameters:    Size  Location     Type
 15186 ;;		None
 15187 ;; Auto vars:     Size  Location     Type
 15188 ;;		None
 15189 ;; Return value:  Size  Location     Type
 15190 ;;                  1    wreg      void 
 15191 ;; Registers used:
 15192 ;;		wreg, status,2, status,0
 15193 ;; Tracked objects:
 15194 ;;		On entry : 0/0
 15195 ;;		On exit  : 0/0
 15196 ;;		Unchanged: 0/0
 15197 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15198 ;;      Params:         0       0       0       0       0       0       0
 15199 ;;      Locals:         0       0       0       0       0       0       0
 15200 ;;      Temps:          0       0       0       0       0       0       0
 15201 ;;      Totals:         0       0       0       0       0       0       0
 15202 ;;Total ram usage:        0 bytes
 15203 ;; Hardware stack levels used:    1
 15204 ;; Hardware stack levels required when called:    8
 15205 ;; This function calls:
 15206 ;;		Nothing
 15207 ;; This function is called by:
 15208 ;;		_buttonChecking
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text55
 15213  005898                     __ptext55:
 15214                           	opt stack 0
 15215  005898                     _longPressUP:
 15216                           	opt stack 21
 15217                           
 15218                           ;DisplayProtocol.h: 160: if (!UPisLP) {
 15219                           
 15220                           ;incstack = 0
 15221  005898  503C               	movf	_UPisLP,w,c
 15222  00589A  A4D8               	btfss	status,2,c
 15223  00589C  0012               	return	
 15224                           
 15225                           ;DisplayProtocol.h: 161: UPisLP = 1;
 15226  00589E  0E01               	movlw	1
 15227  0058A0  6E3C               	movwf	_UPisLP,c
 15228                           
 15229                           ;DisplayProtocol.h: 162: if (actualScreen == 0 || actualScreen == 4) {
 15230  0058A2  0100               	movlb	0	; () banked
 15231  0058A4  51B8               	movf	_actualScreen& (0+255),w,b
 15232  0058A6  B4D8               	btfsc	status,2,c
 15233  0058A8  D005               	goto	l7059
 15234                           
 15235                           ; BSR set to: 0
 15236  0058AA  0E04               	movlw	4
 15237  0058AC  0100               	movlb	0	; () banked
 15238  0058AE  19B8               	xorwf	_actualScreen& (0+255),w,b
 15239  0058B0  A4D8               	btfss	status,2,c
 15240  0058B2  D01C               	goto	l7071
 15241  0058B4                     l7059:
 15242                           
 15243                           ; BSR set to: 0
 15244                           ;DisplayProtocol.h: 163: if (holdENTERcont > 5) {
 15245  0058B4  0E05               	movlw	5
 15246  0058B6  0100               	movlb	0	; () banked
 15247  0058B8  65BC               	cpfsgt	_holdENTERcont& (0+255),b
 15248  0058BA  D014               	goto	l7069
 15249                           
 15250                           ; BSR set to: 0
 15251                           ;DisplayProtocol.h: 164: if (actualScreen == 0) {
 15252  0058BC  0100               	movlb	0	; () banked
 15253  0058BE  51B8               	movf	_actualScreen& (0+255),w,b
 15254  0058C0  A4D8               	btfss	status,2,c
 15255  0058C2  D007               	goto	l7065
 15256                           
 15257                           ; BSR set to: 0
 15258                           ;DisplayProtocol.h: 165: actualScreen = 1;
 15259  0058C4  0E01               	movlw	1
 15260  0058C6  0100               	movlb	0	; () banked
 15261  0058C8  6FB8               	movwf	_actualScreen& (0+255),b
 15262                           
 15263                           ;DisplayProtocol.h: 166: fd = 0;
 15264  0058CA  0E00               	movlw	0
 15265  0058CC  0100               	movlb	0	; () banked
 15266  0058CE  6FBA               	movwf	_fd& (0+255),b
 15267                           
 15268                           ;DisplayProtocol.h: 167: } else if (actualScreen == 4)
 15269  0058D0  0012               	return	
 15270  0058D2                     l7065:
 15271                           
 15272                           ; BSR set to: 0
 15273  0058D2  0E04               	movlw	4
 15274  0058D4  0100               	movlb	0	; () banked
 15275  0058D6  19B8               	xorwf	_actualScreen& (0+255),w,b
 15276  0058D8  A4D8               	btfss	status,2,c
 15277  0058DA  0012               	return	
 15278                           
 15279                           ; BSR set to: 0
 15280                           ;DisplayProtocol.h: 168: actualScreen = 9;
 15281  0058DC  0E09               	movlw	9
 15282  0058DE  0100               	movlb	0	; () banked
 15283  0058E0  6FB8               	movwf	_actualScreen& (0+255),b
 15284                           
 15285                           ; BSR set to: 0
 15286                           ;DisplayProtocol.h: 169: } else
 15287                           
 15288                           ; BSR set to: 0
 15289  0058E2  0012               	return	
 15290  0058E4                     l7069:
 15291                           
 15292                           ; BSR set to: 0
 15293                           ;DisplayProtocol.h: 170: menuSection = 0;
 15294  0058E4  0E00               	movlw	0
 15295  0058E6  0101               	movlb	1	; () banked
 15296  0058E8  6FB6               	movwf	_menuSection& (0+255),b
 15297                           
 15298                           ; BSR set to: 1
 15299                           ;DisplayProtocol.h: 171: }else if(actualScreen == 5) {
 15300  0058EA  0012               	return	
 15301  0058EC                     l7071:
 15302  0058EC  0E05               	movlw	5
 15303  0058EE  0100               	movlb	0	; () banked
 15304  0058F0  19B8               	xorwf	_actualScreen& (0+255),w,b
 15305  0058F2  A4D8               	btfss	status,2,c
 15306  0058F4  0012               	return	
 15307                           
 15308                           ; BSR set to: 0
 15309                           ;DisplayProtocol.h: 172: if(menuSection == 2)
 15310  0058F6  0E02               	movlw	2
 15311  0058F8  0101               	movlb	1	; () banked
 15312  0058FA  19B6               	xorwf	_menuSection& (0+255),w,b
 15313  0058FC  A4D8               	btfss	status,2,c
 15314  0058FE  0012               	return	
 15315                           
 15316                           ; BSR set to: 1
 15317                           ;DisplayProtocol.h: 173: chanVals += 10;
 15318  005900  0E0A               	movlw	10
 15319  005902  0101               	movlb	1	; () banked
 15320  005904  27B4               	addwf	_chanVals& (0+255),f,b
 15321  005906  0E00               	movlw	0
 15322  005908  23B5               	addwfc	(_chanVals+1)& (0+255),f,b
 15323                           
 15324                           ; BSR set to: 1
 15325                           
 15326                           ; BSR set to: 1
 15327                           
 15328                           ; BSR set to: 1
 15329  00590A  0012               	return	
 15330  00590C                     __end_of_longPressUP:
 15331                           	opt stack 0
 15332                           tblptru	equ	0xFF8
 15333                           tblptrh	equ	0xFF7
 15334                           tblptrl	equ	0xFF6
 15335                           tablat	equ	0xFF5
 15336                           prodh	equ	0xFF4
 15337                           prodl	equ	0xFF3
 15338                           intcon	equ	0xFF2
 15339                           postinc0	equ	0xFEE
 15340                           wreg	equ	0xFE8
 15341                           postdec1	equ	0xFE5
 15342                           fsr1l	equ	0xFE1
 15343                           indf2	equ	0xFDF
 15344                           postinc2	equ	0xFDE
 15345                           postdec2	equ	0xFDD
 15346                           plusw2	equ	0xFDB
 15347                           fsr2h	equ	0xFDA
 15348                           fsr2l	equ	0xFD9
 15349                           status	equ	0xFD8
 15350                           
 15351 ;; *************** function _longPressRETRO *****************
 15352 ;; Defined at:
 15353 ;;		line 250 in file "source/DisplayProtocol.h"
 15354 ;; Parameters:    Size  Location     Type
 15355 ;;		None
 15356 ;; Auto vars:     Size  Location     Type
 15357 ;;		None
 15358 ;; Return value:  Size  Location     Type
 15359 ;;                  1    wreg      void 
 15360 ;; Registers used:
 15361 ;;		wreg, status,2, status,0
 15362 ;; Tracked objects:
 15363 ;;		On entry : 0/0
 15364 ;;		On exit  : 0/0
 15365 ;;		Unchanged: 0/0
 15366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15367 ;;      Params:         0       0       0       0       0       0       0
 15368 ;;      Locals:         0       0       0       0       0       0       0
 15369 ;;      Temps:          0       0       0       0       0       0       0
 15370 ;;      Totals:         0       0       0       0       0       0       0
 15371 ;;Total ram usage:        0 bytes
 15372 ;; Hardware stack levels used:    1
 15373 ;; Hardware stack levels required when called:    8
 15374 ;; This function calls:
 15375 ;;		Nothing
 15376 ;; This function is called by:
 15377 ;;		_buttonChecking
 15378 ;; This function uses a non-reentrant model
 15379 ;;
 15380                           
 15381                           	psect	text56
 15382  005BFA                     __ptext56:
 15383                           	opt stack 0
 15384  005BFA                     _longPressRETRO:
 15385                           	opt stack 21
 15386                           
 15387                           ;DisplayProtocol.h: 251: if (!RETROisLP) {
 15388                           
 15389                           ;incstack = 0
 15390  005BFA  503B               	movf	_RETROisLP,w,c
 15391  005BFC  A4D8               	btfss	status,2,c
 15392  005BFE  0012               	return	
 15393                           
 15394                           ;DisplayProtocol.h: 252: RETROisLP = 1;
 15395  005C00  0E01               	movlw	1
 15396  005C02  6E3B               	movwf	_RETROisLP,c
 15397                           
 15398                           ;DisplayProtocol.h: 253: if(actualScreen == 0 || actualScreen == 4) {
 15399  005C04  0100               	movlb	0	; () banked
 15400  005C06  51B8               	movf	_actualScreen& (0+255),w,b
 15401  005C08  B4D8               	btfsc	status,2,c
 15402  005C0A  D005               	goto	l7163
 15403                           
 15404                           ; BSR set to: 0
 15405  005C0C  0E04               	movlw	4
 15406  005C0E  0100               	movlb	0	; () banked
 15407  005C10  19B8               	xorwf	_actualScreen& (0+255),w,b
 15408  005C12  A4D8               	btfss	status,2,c
 15409  005C14  D00C               	goto	l7169
 15410  005C16                     l7163:
 15411                           
 15412                           ; BSR set to: 0
 15413                           ;DisplayProtocol.h: 254: if(ProcessStarted) {
 15414  005C16  503A               	movf	_ProcessStarted,w,c
 15415  005C18  B4D8               	btfsc	status,2,c
 15416  005C1A  0012               	return	
 15417                           
 15418                           ; BSR set to: 0
 15419                           ;DisplayProtocol.h: 255: tempLastScreen = actualScreen;
 15420  005C1C  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 15421                           
 15422                           ; BSR set to: 0
 15423                           ;DisplayProtocol.h: 256: actualScreen = 3;
 15424  005C20  0E03               	movlw	3
 15425  005C22  0100               	movlb	0	; () banked
 15426  005C24  6FB8               	movwf	_actualScreen& (0+255),b
 15427                           
 15428                           ;DisplayProtocol.h: 257: selSN = 0;
 15429  005C26  0E00               	movlw	0
 15430  005C28  0100               	movlb	0	; () banked
 15431  005C2A  6FC1               	movwf	_selSN& (0+255),b
 15432                           
 15433                           ; BSR set to: 0
 15434                           ;DisplayProtocol.h: 258: }
 15435                           ;DisplayProtocol.h: 259: }else if(actualScreen == 5)
 15436  005C2C  0012               	return	
 15437  005C2E                     l7169:
 15438                           
 15439                           ; BSR set to: 0
 15440  005C2E  0E05               	movlw	5
 15441  005C30  0100               	movlb	0	; () banked
 15442  005C32  19B8               	xorwf	_actualScreen& (0+255),w,b
 15443  005C34  A4D8               	btfss	status,2,c
 15444  005C36  0012               	return	
 15445                           
 15446                           ; BSR set to: 0
 15447                           ;DisplayProtocol.h: 260: actualScreen = 4;
 15448  005C38  0E04               	movlw	4
 15449  005C3A  0100               	movlb	0	; () banked
 15450  005C3C  6FB8               	movwf	_actualScreen& (0+255),b
 15451                           
 15452                           ; BSR set to: 0
 15453                           
 15454                           ; BSR set to: 0
 15455  005C3E  0012               	return	
 15456  005C40                     __end_of_longPressRETRO:
 15457                           	opt stack 0
 15458                           tblptru	equ	0xFF8
 15459                           tblptrh	equ	0xFF7
 15460                           tblptrl	equ	0xFF6
 15461                           tablat	equ	0xFF5
 15462                           prodh	equ	0xFF4
 15463                           prodl	equ	0xFF3
 15464                           intcon	equ	0xFF2
 15465                           postinc0	equ	0xFEE
 15466                           wreg	equ	0xFE8
 15467                           postdec1	equ	0xFE5
 15468                           fsr1l	equ	0xFE1
 15469                           indf2	equ	0xFDF
 15470                           postinc2	equ	0xFDE
 15471                           postdec2	equ	0xFDD
 15472                           plusw2	equ	0xFDB
 15473                           fsr2h	equ	0xFDA
 15474                           fsr2l	equ	0xFD9
 15475                           status	equ	0xFD8
 15476                           
 15477 ;; *************** function _longPressENTER *****************
 15478 ;; Defined at:
 15479 ;;		line 356 in file "source/DisplayProtocol.h"
 15480 ;; Parameters:    Size  Location     Type
 15481 ;;		None
 15482 ;; Auto vars:     Size  Location     Type
 15483 ;;		None
 15484 ;; Return value:  Size  Location     Type
 15485 ;;                  1    wreg      void 
 15486 ;; Registers used:
 15487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15488 ;; Tracked objects:
 15489 ;;		On entry : 0/0
 15490 ;;		On exit  : 0/0
 15491 ;;		Unchanged: 0/0
 15492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15493 ;;      Params:         0       0       0       0       0       0       0
 15494 ;;      Locals:         0       0       0       0       0       0       0
 15495 ;;      Temps:          0       0       0       0       0       0       0
 15496 ;;      Totals:         0       0       0       0       0       0       0
 15497 ;;Total ram usage:        0 bytes
 15498 ;; Hardware stack levels used:    1
 15499 ;; Hardware stack levels required when called:   12
 15500 ;; This function calls:
 15501 ;;		_confirmEdition
 15502 ;;		_integrator
 15503 ;; This function is called by:
 15504 ;;		_buttonChecking
 15505 ;; This function uses a non-reentrant model
 15506 ;;
 15507                           
 15508                           	psect	text57
 15509  004EF2                     __ptext57:
 15510                           	opt stack 0
 15511  004EF2                     _longPressENTER:
 15512                           	opt stack 17
 15513                           
 15514                           ;DisplayProtocol.h: 357: if (!ENTERisLP) {
 15515                           
 15516                           ;incstack = 0
 15517  004EF2  0100               	movlb	0	; () banked
 15518  004EF4  51B4               	movf	_ENTERisLP& (0+255),w,b
 15519  004EF6  0100               	movlb	0	; () banked
 15520  004EF8  A4D8               	btfss	status,2,c
 15521  004EFA  0012               	return	
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;DisplayProtocol.h: 358: ENTERisLP = 1;
 15525  004EFC  0E01               	movlw	1
 15526  004EFE  0100               	movlb	0	; () banked
 15527  004F00  6FB4               	movwf	_ENTERisLP& (0+255),b
 15528                           
 15529                           ;DisplayProtocol.h: 359: if(actualScreen == 0 || actualScreen == 4) {
 15530  004F02  0100               	movlb	0	; () banked
 15531  004F04  51B8               	movf	_actualScreen& (0+255),w,b
 15532  004F06  B4D8               	btfsc	status,2,c
 15533  004F08  D005               	goto	l10227
 15534                           
 15535                           ; BSR set to: 0
 15536  004F0A  0E04               	movlw	4
 15537  004F0C  0100               	movlb	0	; () banked
 15538  004F0E  19B8               	xorwf	_actualScreen& (0+255),w,b
 15539  004F10  A4D8               	btfss	status,2,c
 15540  004F12  D024               	goto	l10243
 15541  004F14                     l10227:
 15542                           
 15543                           ; BSR set to: 0
 15544                           ;DisplayProtocol.h: 360: if (holdUPcont > 5) {
 15545  004F14  0E05               	movlw	5
 15546  004F16  0100               	movlb	0	; () banked
 15547  004F18  65BE               	cpfsgt	_holdUPcont& (0+255),b
 15548  004F1A  D014               	goto	l10237
 15549                           
 15550                           ; BSR set to: 0
 15551                           ;DisplayProtocol.h: 361: if (actualScreen == 0) {
 15552  004F1C  0100               	movlb	0	; () banked
 15553  004F1E  51B8               	movf	_actualScreen& (0+255),w,b
 15554  004F20  A4D8               	btfss	status,2,c
 15555  004F22  D007               	goto	l10233
 15556                           
 15557                           ; BSR set to: 0
 15558                           ;DisplayProtocol.h: 362: actualScreen = 1;
 15559  004F24  0E01               	movlw	1
 15560  004F26  0100               	movlb	0	; () banked
 15561  004F28  6FB8               	movwf	_actualScreen& (0+255),b
 15562                           
 15563                           ;DisplayProtocol.h: 363: fd = 0;
 15564  004F2A  0E00               	movlw	0
 15565  004F2C  0100               	movlb	0	; () banked
 15566  004F2E  6FBA               	movwf	_fd& (0+255),b
 15567                           
 15568                           ;DisplayProtocol.h: 364: } else if (actualScreen == 4)
 15569  004F30  0012               	return	
 15570  004F32                     l10233:
 15571                           
 15572                           ; BSR set to: 0
 15573  004F32  0E04               	movlw	4
 15574  004F34  0100               	movlb	0	; () banked
 15575  004F36  19B8               	xorwf	_actualScreen& (0+255),w,b
 15576  004F38  A4D8               	btfss	status,2,c
 15577  004F3A  0012               	return	
 15578                           
 15579                           ; BSR set to: 0
 15580                           ;DisplayProtocol.h: 365: actualScreen = 9;
 15581  004F3C  0E09               	movlw	9
 15582  004F3E  0100               	movlb	0	; () banked
 15583  004F40  6FB8               	movwf	_actualScreen& (0+255),b
 15584                           
 15585                           ; BSR set to: 0
 15586                           ;DisplayProtocol.h: 366: } else if(!ProcessStarted) {
 15587                           
 15588                           ; BSR set to: 0
 15589  004F42  0012               	return	
 15590  004F44                     l10237:
 15591                           
 15592                           ; BSR set to: 0
 15593  004F44  503A               	movf	_ProcessStarted,w,c
 15594  004F46  A4D8               	btfss	status,2,c
 15595  004F48  0012               	return	
 15596                           
 15597                           ; BSR set to: 0
 15598                           ;DisplayProtocol.h: 367: tempLastScreen = actualScreen;
 15599  004F4A  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 15600                           
 15601                           ; BSR set to: 0
 15602                           ;DisplayProtocol.h: 368: actualScreen = 2;
 15603  004F4E  0E02               	movlw	2
 15604  004F50  0100               	movlb	0	; () banked
 15605  004F52  6FB8               	movwf	_actualScreen& (0+255),b
 15606                           
 15607                           ;DisplayProtocol.h: 369: selSN = 1;
 15608  004F54  0E01               	movlw	1
 15609  004F56  0100               	movlb	0	; () banked
 15610  004F58  6FC1               	movwf	_selSN& (0+255),b
 15611                           
 15612                           ; BSR set to: 0
 15613                           ;DisplayProtocol.h: 370: }
 15614                           ;DisplayProtocol.h: 371: }else if(actualScreen == 5) {
 15615                           
 15616                           ; BSR set to: 0
 15617  004F5A  0012               	return	
 15618  004F5C                     l10243:
 15619                           
 15620                           ; BSR set to: 0
 15621  004F5C  0E05               	movlw	5
 15622  004F5E  0100               	movlb	0	; () banked
 15623  004F60  19B8               	xorwf	_actualScreen& (0+255),w,b
 15624  004F62  A4D8               	btfss	status,2,c
 15625  004F64  D00F               	goto	l10251
 15626                           
 15627                           ; BSR set to: 0
 15628                           ;DisplayProtocol.h: 372: if(menuSection != 2 )
 15629  004F66  0E02               	movlw	2
 15630  004F68  0101               	movlb	1	; () banked
 15631  004F6A  19B6               	xorwf	_menuSection& (0+255),w,b
 15632  004F6C  A4D8               	btfss	status,2,c
 15633                           
 15634                           ; BSR set to: 1
 15635                           ;DisplayProtocol.h: 373: integrator();
 15636  004F6E  EC90  F01F         	call	_integrator	;wreg free
 15637                           
 15638                           ;DisplayProtocol.h: 374: confirmEdition(!ProcessStarted);
 15639  004F72  503A               	movf	_ProcessStarted,w,c
 15640  004F74  A4D8               	btfss	status,2,c
 15641  004F76  D002               	goto	u13670
 15642  004F78  0E01               	movlw	1
 15643  004F7A  D001               	goto	u13680
 15644  004F7C                     u13670:
 15645  004F7C  0E00               	movlw	0
 15646  004F7E                     u13680:
 15647  004F7E  ECCE  F022         	call	_confirmEdition
 15648                           
 15649                           ;DisplayProtocol.h: 375: }else if(actualScreen == 12) {
 15650  004F82  0012               	return	
 15651  004F84                     l10251:
 15652  004F84  0E0C               	movlw	12
 15653  004F86  0100               	movlb	0	; () banked
 15654  004F88  19B8               	xorwf	_actualScreen& (0+255),w,b
 15655  004F8A  A4D8               	btfss	status,2,c
 15656  004F8C  0012               	return	
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;DisplayProtocol.h: 376: integrator();
 15660  004F8E  EC90  F01F         	call	_integrator	;wreg free
 15661                           
 15662                           ;DisplayProtocol.h: 377: confirmEdition(!ProcessStarted);
 15663  004F92  503A               	movf	_ProcessStarted,w,c
 15664  004F94  A4D8               	btfss	status,2,c
 15665  004F96  D002               	goto	u13700
 15666  004F98  0E01               	movlw	1
 15667  004F9A  D001               	goto	u13710
 15668  004F9C                     u13700:
 15669  004F9C  0E00               	movlw	0
 15670  004F9E                     u13710:
 15671  004F9E  ECCE  F022         	call	_confirmEdition
 15672  004FA2  0012               	return	
 15673  004FA4                     __end_of_longPressENTER:
 15674                           	opt stack 0
 15675                           tblptru	equ	0xFF8
 15676                           tblptrh	equ	0xFF7
 15677                           tblptrl	equ	0xFF6
 15678                           tablat	equ	0xFF5
 15679                           prodh	equ	0xFF4
 15680                           prodl	equ	0xFF3
 15681                           intcon	equ	0xFF2
 15682                           postinc0	equ	0xFEE
 15683                           wreg	equ	0xFE8
 15684                           postdec1	equ	0xFE5
 15685                           fsr1l	equ	0xFE1
 15686                           indf2	equ	0xFDF
 15687                           postinc2	equ	0xFDE
 15688                           postdec2	equ	0xFDD
 15689                           plusw2	equ	0xFDB
 15690                           fsr2h	equ	0xFDA
 15691                           fsr2l	equ	0xFD9
 15692                           status	equ	0xFD8
 15693                           
 15694 ;; *************** function _integrator *****************
 15695 ;; Defined at:
 15696 ;;		line 61 in file "source/DisplayProtocol.h"
 15697 ;; Parameters:    Size  Location     Type
 15698 ;;		None
 15699 ;; Auto vars:     Size  Location     Type
 15700 ;;  temp            4   17[BANK1 ] long 
 15701 ;;  acum            4   13[BANK1 ] long 
 15702 ;;  i               2   21[BANK1 ] int 
 15703 ;; Return value:  Size  Location     Type
 15704 ;;                  1    wreg      void 
 15705 ;; Registers used:
 15706 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15707 ;; Tracked objects:
 15708 ;;		On entry : 0/0
 15709 ;;		On exit  : 0/0
 15710 ;;		Unchanged: 0/0
 15711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15712 ;;      Params:         0       0       0       0       0       0       0
 15713 ;;      Locals:         0       0      10       0       0       0       0
 15714 ;;      Temps:          0       2       0       0       0       0       0
 15715 ;;      Totals:         0       2      10       0       0       0       0
 15716 ;;Total ram usage:       12 bytes
 15717 ;; Hardware stack levels used:    1
 15718 ;; Hardware stack levels required when called:    9
 15719 ;; This function calls:
 15720 ;;		___fldiv
 15721 ;;		___lmul
 15722 ;;		___xxtofl
 15723 ;; This function is called by:
 15724 ;;		_longPressENTER
 15725 ;; This function uses a non-reentrant model
 15726 ;;
 15727                           
 15728                           	psect	text58
 15729  003F20                     __ptext58:
 15730                           	opt stack 0
 15731  003F20                     _integrator:
 15732                           	opt stack 19
 15733                           
 15734                           ;DisplayProtocol.h: 62: long acum = 0;
 15735                           
 15736                           ;incstack = 0
 15737  003F20  0E00               	movlw	0
 15738  003F22  0101               	movlb	1	; () banked
 15739  003F24  6F0D               	movwf	integrator@acum& (0+255),b
 15740  003F26  0E00               	movlw	0
 15741  003F28  6F0E               	movwf	(integrator@acum+1)& (0+255),b
 15742  003F2A  0E00               	movlw	0
 15743  003F2C  6F0F               	movwf	(integrator@acum+2)& (0+255),b
 15744  003F2E  0E00               	movlw	0
 15745  003F30  6F10               	movwf	(integrator@acum+3)& (0+255),b
 15746                           
 15747                           ;DisplayProtocol.h: 63: long temp = 0;
 15748  003F32  0E00               	movlw	0
 15749  003F34  0101               	movlb	1	; () banked
 15750  003F36  6F11               	movwf	integrator@temp& (0+255),b
 15751  003F38  0E00               	movlw	0
 15752  003F3A  6F12               	movwf	(integrator@temp+1)& (0+255),b
 15753  003F3C  0E00               	movlw	0
 15754  003F3E  6F13               	movwf	(integrator@temp+2)& (0+255),b
 15755  003F40  0E00               	movlw	0
 15756  003F42  6F14               	movwf	(integrator@temp+3)& (0+255),b
 15757                           
 15758                           ;DisplayProtocol.h: 64: int i;
 15759                           ;DisplayProtocol.h: 65: for(i = 0; i < 6; i++) {
 15760  003F44  0E00               	movlw	0
 15761  003F46  0101               	movlb	1	; () banked
 15762  003F48  6F16               	movwf	(integrator@i+1)& (0+255),b
 15763  003F4A  0E00               	movlw	0
 15764  003F4C  6F15               	movwf	integrator@i& (0+255),b
 15765  003F4E                     l9829:
 15766                           
 15767                           ; BSR set to: 1
 15768  003F4E  0101               	movlb	1	; () banked
 15769  003F50  BF16               	btfsc	(integrator@i+1)& (0+255),7,b
 15770  003F52  D008               	goto	l9833
 15771  003F54  0101               	movlb	1	; () banked
 15772  003F56  5116               	movf	(integrator@i+1)& (0+255),w,b
 15773  003F58  E152               	bnz	l9841
 15774  003F5A  0E06               	movlw	6
 15775  003F5C  0101               	movlb	1	; () banked
 15776  003F5E  5D15               	subwf	integrator@i& (0+255),w,b
 15777  003F60  B0D8               	btfsc	status,0,c
 15778  003F62  D04D               	goto	l9841
 15779  003F64                     l9833:
 15780                           
 15781                           ; BSR set to: 1
 15782                           ;DisplayProtocol.h: 66: temp = (long)chanValdig[i]*exp10[i];
 15783  003F64  0E9E               	movlw	low _chanValdig
 15784  003F66  0101               	movlb	1	; () banked
 15785  003F68  2515               	addwf	integrator@i& (0+255),w,b
 15786  003F6A  6ED9               	movwf	fsr2l,c
 15787  003F6C  0E01               	movlw	high _chanValdig
 15788  003F6E  0101               	movlb	1	; () banked
 15789  003F70  2116               	addwfc	(integrator@i+1)& (0+255),w,b
 15790  003F72  6EDA               	movwf	fsr2h,c
 15791  003F74  50DF               	movf	indf2,w,c
 15792  003F76  0100               	movlb	0	; () banked
 15793  003F78  6F8F               	movwf	___lmul@multiplier& (0+255),b
 15794  003F7A  0E00               	movlw	0
 15795  003F7C  BF8F               	btfsc	___lmul@multiplier& (0+255),7,b
 15796  003F7E  0EFF               	movlw	-1
 15797  003F80  6F90               	movwf	(___lmul@multiplier+1)& (0+255),b
 15798  003F82  6F91               	movwf	(___lmul@multiplier+2)& (0+255),b
 15799  003F84  6F92               	movwf	(___lmul@multiplier+3)& (0+255),b
 15800  003F86  0E6E               	movlw	low _exp10
 15801  003F88  0100               	movlb	0	; () banked
 15802  003F8A  6FA9               	movwf	??_integrator& (0+255),b
 15803  003F8C  0E01               	movlw	high _exp10
 15804  003F8E  0100               	movlb	0	; () banked
 15805  003F90  6FAA               	movwf	(??_integrator+1)& (0+255),b
 15806  003F92  90D8               	bcf	status,0,c
 15807  003F94  0101               	movlb	1	; () banked
 15808  003F96  3515               	rlcf	integrator@i& (0+255),w,b
 15809  003F98  6ED9               	movwf	fsr2l,c
 15810  003F9A  0101               	movlb	1	; () banked
 15811  003F9C  3516               	rlcf	(integrator@i+1)& (0+255),w,b
 15812  003F9E  6EDA               	movwf	fsr2h,c
 15813  003FA0  90D8               	bcf	status,0,c
 15814  003FA2  36D9               	rlcf	fsr2l,f,c
 15815  003FA4  36DA               	rlcf	fsr2h,f,c
 15816  003FA6  0100               	movlb	0	; () banked
 15817  003FA8  51A9               	movf	??_integrator& (0+255),w,b
 15818  003FAA  26D9               	addwf	fsr2l,f,c
 15819  003FAC  0100               	movlb	0	; () banked
 15820  003FAE  51AA               	movf	(??_integrator+1)& (0+255),w,b
 15821  003FB0  22DA               	addwfc	fsr2h,f,c
 15822  003FB2  CFDE F093          	movff	postinc2,___lmul@multiplicand
 15823  003FB6  CFDE F094          	movff	postinc2,___lmul@multiplicand+1
 15824  003FBA  CFDE F095          	movff	postinc2,___lmul@multiplicand+2
 15825  003FBE  CFDE F096          	movff	postinc2,___lmul@multiplicand+3
 15826  003FC2  EC11  F02C         	call	___lmul	;wreg free
 15827  003FC6  C08F  F111         	movff	?___lmul,integrator@temp
 15828  003FCA  C090  F112         	movff	?___lmul+1,integrator@temp+1
 15829  003FCE  C091  F113         	movff	?___lmul+2,integrator@temp+2
 15830  003FD2  C092  F114         	movff	?___lmul+3,integrator@temp+3
 15831                           
 15832                           ;DisplayProtocol.h: 67: acum += temp;
 15833  003FD6  0101               	movlb	1	; () banked
 15834  003FD8  5111               	movf	integrator@temp& (0+255),w,b
 15835  003FDA  0101               	movlb	1	; () banked
 15836  003FDC  270D               	addwf	integrator@acum& (0+255),f,b
 15837  003FDE  0101               	movlb	1	; () banked
 15838  003FE0  5112               	movf	(integrator@temp+1)& (0+255),w,b
 15839  003FE2  0101               	movlb	1	; () banked
 15840  003FE4  230E               	addwfc	(integrator@acum+1)& (0+255),f,b
 15841  003FE6  0101               	movlb	1	; () banked
 15842  003FE8  5113               	movf	(integrator@temp+2)& (0+255),w,b
 15843  003FEA  0101               	movlb	1	; () banked
 15844  003FEC  230F               	addwfc	(integrator@acum+2)& (0+255),f,b
 15845  003FEE  0101               	movlb	1	; () banked
 15846  003FF0  5114               	movf	(integrator@temp+3)& (0+255),w,b
 15847  003FF2  0101               	movlb	1	; () banked
 15848  003FF4  2310               	addwfc	(integrator@acum+3)& (0+255),f,b
 15849                           
 15850                           ; BSR set to: 1
 15851  003FF6  0101               	movlb	1	; () banked
 15852  003FF8  4B15               	infsnz	integrator@i& (0+255),f,b
 15853  003FFA  2B16               	incf	(integrator@i+1)& (0+255),f,b
 15854  003FFC  D7A8               	goto	l9829
 15855  003FFE                     l9841:
 15856                           
 15857                           ; BSR set to: 1
 15858                           ;DisplayProtocol.h: 68: }
 15859                           ;DisplayProtocol.h: 69: chanValf = (float)acum / 1000;
 15860  003FFE  C10D  F08F         	movff	integrator@acum,___xxtofl@val
 15861  004002  C10E  F090         	movff	integrator@acum+1,___xxtofl@val+1
 15862  004006  C10F  F091         	movff	integrator@acum+2,___xxtofl@val+2
 15863  00400A  C110  F092         	movff	integrator@acum+3,___xxtofl@val+3
 15864  00400E  0E01               	movlw	1
 15865  004010  EC08  F01A         	call	___xxtofl
 15866  004014  C08F  F09D         	movff	?___xxtofl,___fldiv@b
 15867  004018  C090  F09E         	movff	?___xxtofl+1,___fldiv@b+1
 15868  00401C  C091  F09F         	movff	?___xxtofl+2,___fldiv@b+2
 15869  004020  C092  F0A0         	movff	?___xxtofl+3,___fldiv@b+3
 15870  004024  0E00               	movlw	0
 15871  004026  0100               	movlb	0	; () banked
 15872  004028  6FA1               	movwf	___fldiv@a& (0+255),b
 15873  00402A  0E00               	movlw	0
 15874  00402C  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
 15875  00402E  0E7A               	movlw	122
 15876  004030  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
 15877  004032  0E44               	movlw	68
 15878  004034  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
 15879  004036  ECFB  F00F         	call	___fldiv	;wreg free
 15880  00403A  C09D  F02A         	movff	?___fldiv,_chanValf
 15881  00403E  C09E  F02B         	movff	?___fldiv+1,_chanValf+1
 15882  004042  C09F  F02C         	movff	?___fldiv+2,_chanValf+2
 15883  004046  C0A0  F02D         	movff	?___fldiv+3,_chanValf+3
 15884  00404A  0012               	return		;funcret
 15885  00404C                     __end_of_integrator:
 15886                           	opt stack 0
 15887                           tblptru	equ	0xFF8
 15888                           tblptrh	equ	0xFF7
 15889                           tblptrl	equ	0xFF6
 15890                           tablat	equ	0xFF5
 15891                           prodh	equ	0xFF4
 15892                           prodl	equ	0xFF3
 15893                           intcon	equ	0xFF2
 15894                           postinc0	equ	0xFEE
 15895                           wreg	equ	0xFE8
 15896                           postdec1	equ	0xFE5
 15897                           fsr1l	equ	0xFE1
 15898                           indf2	equ	0xFDF
 15899                           postinc2	equ	0xFDE
 15900                           postdec2	equ	0xFDD
 15901                           plusw2	equ	0xFDB
 15902                           fsr2h	equ	0xFDA
 15903                           fsr2l	equ	0xFD9
 15904                           status	equ	0xFD8
 15905                           
 15906 ;; *************** function ___xxtofl *****************
 15907 ;; Defined at:
 15908 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
 15909 ;; Parameters:    Size  Location     Type
 15910 ;;  sign            1    wreg     unsigned char 
 15911 ;;  val             4   47[BANK0 ] long 
 15912 ;; Auto vars:     Size  Location     Type
 15913 ;;  sign            1   55[BANK0 ] unsigned char 
 15914 ;;  arg             4   57[BANK0 ] unsigned long 
 15915 ;;  exp             1   56[BANK0 ] unsigned char 
 15916 ;; Return value:  Size  Location     Type
 15917 ;;                  4   47[BANK0 ] unsigned char 
 15918 ;; Registers used:
 15919 ;;		wreg, status,2, status,0
 15920 ;; Tracked objects:
 15921 ;;		On entry : 0/0
 15922 ;;		On exit  : 0/0
 15923 ;;		Unchanged: 0/0
 15924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15925 ;;      Params:         0       4       0       0       0       0       0
 15926 ;;      Locals:         0       6       0       0       0       0       0
 15927 ;;      Temps:          0       4       0       0       0       0       0
 15928 ;;      Totals:         0      14       0       0       0       0       0
 15929 ;;Total ram usage:       14 bytes
 15930 ;; Hardware stack levels used:    1
 15931 ;; Hardware stack levels required when called:    8
 15932 ;; This function calls:
 15933 ;;		Nothing
 15934 ;; This function is called by:
 15935 ;;		_integrator
 15936 ;;		_printf
 15937 ;; This function uses a non-reentrant model
 15938 ;;
 15939                           
 15940                           	psect	text59
 15941  003410                     __ptext59:
 15942                           	opt stack 0
 15943  003410                     ___xxtofl:
 15944                           	opt stack 19
 15945                           
 15946                           ;incstack = 0
 15947                           ;___xxtofl@sign stored from wreg
 15948  003410  0100               	movlb	0	; () banked
 15949  003412  6F97               	movwf	___xxtofl@sign& (0+255),b
 15950  003414  0100               	movlb	0	; () banked
 15951  003416  5197               	movf	___xxtofl@sign& (0+255),w,b
 15952  003418  0100               	movlb	0	; () banked
 15953  00341A  B4D8               	btfsc	status,2,c
 15954  00341C  D01E               	goto	l1555
 15955                           
 15956                           ; BSR set to: 0
 15957  00341E  0100               	movlb	0	; () banked
 15958  003420  AF92               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15959  003422  D01B               	goto	l1555
 15960                           
 15961                           ; BSR set to: 0
 15962  003424  C08F  F093         	movff	___xxtofl@val,??___xxtofl
 15963  003428  C090  F094         	movff	___xxtofl@val+1,??___xxtofl+1
 15964  00342C  C091  F095         	movff	___xxtofl@val+2,??___xxtofl+2
 15965  003430  C092  F096         	movff	___xxtofl@val+3,??___xxtofl+3
 15966  003434  0100               	movlb	0	; () banked
 15967  003436  1F93               	comf	??___xxtofl& (0+255),f,b
 15968  003438  1F94               	comf	(??___xxtofl+1)& (0+255),f,b
 15969  00343A  1F95               	comf	(??___xxtofl+2)& (0+255),f,b
 15970  00343C  1F96               	comf	(??___xxtofl+3)& (0+255),f,b
 15971  00343E  2B93               	incf	??___xxtofl& (0+255),f,b
 15972  003440  0E00               	movlw	0
 15973  003442  2394               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15974  003444  2395               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15975  003446  2396               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15976  003448  C093  F099         	movff	??___xxtofl,___xxtofl@arg
 15977  00344C  C094  F09A         	movff	??___xxtofl+1,___xxtofl@arg+1
 15978  003450  C095  F09B         	movff	??___xxtofl+2,___xxtofl@arg+2
 15979  003454  C096  F09C         	movff	??___xxtofl+3,___xxtofl@arg+3
 15980  003458  D008               	goto	l9055
 15981  00345A                     l1555:
 15982                           
 15983                           ; BSR set to: 0
 15984  00345A  C08F  F099         	movff	___xxtofl@val,___xxtofl@arg
 15985  00345E  C090  F09A         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15986  003462  C091  F09B         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15987  003466  C092  F09C         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15988  00346A                     l9055:
 15989                           
 15990                           ; BSR set to: 0
 15991  00346A  0100               	movlb	0	; () banked
 15992  00346C  518F               	movf	___xxtofl@val& (0+255),w,b
 15993  00346E  0100               	movlb	0	; () banked
 15994  003470  1190               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 15995  003472  0100               	movlb	0	; () banked
 15996  003474  1191               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 15997  003476  0100               	movlb	0	; () banked
 15998  003478  1192               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 15999  00347A  A4D8               	btfss	status,2,c
 16000  00347C  D00A               	goto	l9061
 16001                           
 16002                           ; BSR set to: 0
 16003  00347E  0E00               	movlw	0
 16004  003480  0100               	movlb	0	; () banked
 16005  003482  6F8F               	movwf	?___xxtofl& (0+255),b
 16006  003484  0E00               	movlw	0
 16007  003486  6F90               	movwf	(?___xxtofl+1)& (0+255),b
 16008  003488  0E00               	movlw	0
 16009  00348A  6F91               	movwf	(?___xxtofl+2)& (0+255),b
 16010  00348C  0E00               	movlw	0
 16011  00348E  6F92               	movwf	(?___xxtofl+3)& (0+255),b
 16012                           
 16013                           ; BSR set to: 0
 16014  003490  0012               	return	
 16015  003492                     l9061:
 16016                           
 16017                           ; BSR set to: 0
 16018  003492  0E96               	movlw	150
 16019  003494  0100               	movlb	0	; () banked
 16020  003496  6F98               	movwf	___xxtofl@exp& (0+255),b
 16021  003498  D008               	goto	l9065
 16022  00349A                     l9063:
 16023                           
 16024                           ; BSR set to: 0
 16025  00349A  0100               	movlb	0	; () banked
 16026  00349C  2B98               	incf	___xxtofl@exp& (0+255),f,b
 16027  00349E  0100               	movlb	0	; () banked
 16028  0034A0  90D8               	bcf	status,0,c
 16029  0034A2  339C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16030  0034A4  339B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16031  0034A6  339A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16032  0034A8  3399               	rrcf	___xxtofl@arg& (0+255),f,b
 16033  0034AA                     l9065:
 16034                           
 16035                           ; BSR set to: 0
 16036  0034AA  0E00               	movlw	0
 16037  0034AC  0100               	movlb	0	; () banked
 16038  0034AE  1599               	andwf	___xxtofl@arg& (0+255),w,b
 16039  0034B0  0100               	movlb	0	; () banked
 16040  0034B2  6F93               	movwf	??___xxtofl& (0+255),b
 16041  0034B4  0E00               	movlw	0
 16042  0034B6  0100               	movlb	0	; () banked
 16043  0034B8  159A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16044  0034BA  0100               	movlb	0	; () banked
 16045  0034BC  6F94               	movwf	(??___xxtofl+1)& (0+255),b
 16046  0034BE  0E00               	movlw	0
 16047  0034C0  0100               	movlb	0	; () banked
 16048  0034C2  159B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16049  0034C4  0100               	movlb	0	; () banked
 16050  0034C6  6F95               	movwf	(??___xxtofl+2)& (0+255),b
 16051  0034C8  0EFE               	movlw	254
 16052  0034CA  0100               	movlb	0	; () banked
 16053  0034CC  159C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16054  0034CE  0100               	movlb	0	; () banked
 16055  0034D0  6F96               	movwf	(??___xxtofl+3)& (0+255),b
 16056  0034D2  0100               	movlb	0	; () banked
 16057  0034D4  5193               	movf	??___xxtofl& (0+255),w,b
 16058  0034D6  0100               	movlb	0	; () banked
 16059  0034D8  1194               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16060  0034DA  0100               	movlb	0	; () banked
 16061  0034DC  1195               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16062  0034DE  0100               	movlb	0	; () banked
 16063  0034E0  1196               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16064  0034E2  B4D8               	btfsc	status,2,c
 16065  0034E4  D010               	goto	l1562
 16066  0034E6  D7D9               	goto	l9063
 16067  0034E8                     l9067:
 16068                           
 16069                           ; BSR set to: 0
 16070  0034E8  0100               	movlb	0	; () banked
 16071  0034EA  2B98               	incf	___xxtofl@exp& (0+255),f,b
 16072                           
 16073                           ; BSR set to: 0
 16074  0034EC  0E01               	movlw	1
 16075  0034EE  0100               	movlb	0	; () banked
 16076  0034F0  2799               	addwf	___xxtofl@arg& (0+255),f,b
 16077  0034F2  0E00               	movlw	0
 16078  0034F4  239A               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16079  0034F6  239B               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16080  0034F8  239C               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16081                           
 16082                           ; BSR set to: 0
 16083  0034FA  0100               	movlb	0	; () banked
 16084  0034FC  90D8               	bcf	status,0,c
 16085  0034FE  339C               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16086  003500  339B               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16087  003502  339A               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16088  003504  3399               	rrcf	___xxtofl@arg& (0+255),f,b
 16089  003506                     l1562:
 16090                           
 16091                           ; BSR set to: 0
 16092  003506  0E00               	movlw	0
 16093  003508  0100               	movlb	0	; () banked
 16094  00350A  1599               	andwf	___xxtofl@arg& (0+255),w,b
 16095  00350C  0100               	movlb	0	; () banked
 16096  00350E  6F93               	movwf	??___xxtofl& (0+255),b
 16097  003510  0E00               	movlw	0
 16098  003512  0100               	movlb	0	; () banked
 16099  003514  159A               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16100  003516  0100               	movlb	0	; () banked
 16101  003518  6F94               	movwf	(??___xxtofl+1)& (0+255),b
 16102  00351A  0E00               	movlw	0
 16103  00351C  0100               	movlb	0	; () banked
 16104  00351E  159B               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16105  003520  0100               	movlb	0	; () banked
 16106  003522  6F95               	movwf	(??___xxtofl+2)& (0+255),b
 16107  003524  0EFF               	movlw	255
 16108  003526  0100               	movlb	0	; () banked
 16109  003528  159C               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16110  00352A  0100               	movlb	0	; () banked
 16111  00352C  6F96               	movwf	(??___xxtofl+3)& (0+255),b
 16112  00352E  0100               	movlb	0	; () banked
 16113  003530  5193               	movf	??___xxtofl& (0+255),w,b
 16114  003532  0100               	movlb	0	; () banked
 16115  003534  1194               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16116  003536  0100               	movlb	0	; () banked
 16117  003538  1195               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16118  00353A  0100               	movlb	0	; () banked
 16119  00353C  1196               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16120  00353E  B4D8               	btfsc	status,2,c
 16121  003540  D009               	goto	l9075
 16122  003542  D7D2               	goto	l9067
 16123  003544                     l9073:
 16124                           
 16125                           ; BSR set to: 0
 16126  003544  0100               	movlb	0	; () banked
 16127  003546  0798               	decf	___xxtofl@exp& (0+255),f,b
 16128  003548  0100               	movlb	0	; () banked
 16129  00354A  90D8               	bcf	status,0,c
 16130  00354C  3799               	rlcf	___xxtofl@arg& (0+255),f,b
 16131  00354E  379A               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16132  003550  379B               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16133  003552  379C               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16134  003554                     l9075:
 16135                           
 16136                           ; BSR set to: 0
 16137  003554  0100               	movlb	0	; () banked
 16138  003556  BF9B               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16139  003558  D004               	goto	l1569
 16140                           
 16141                           ; BSR set to: 0
 16142  00355A  0E02               	movlw	2
 16143  00355C  0100               	movlb	0	; () banked
 16144  00355E  6198               	cpfslt	___xxtofl@exp& (0+255),b
 16145  003560  D7F1               	goto	l9073
 16146  003562                     l1569:
 16147                           
 16148                           ; BSR set to: 0
 16149  003562  0100               	movlb	0	; () banked
 16150  003564  B198               	btfsc	___xxtofl@exp& (0+255),0,b
 16151  003566  D009               	goto	l1570
 16152                           
 16153                           ; BSR set to: 0
 16154  003568  0EFF               	movlw	255
 16155  00356A  0100               	movlb	0	; () banked
 16156  00356C  1799               	andwf	___xxtofl@arg& (0+255),f,b
 16157  00356E  0EFF               	movlw	255
 16158  003570  179A               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 16159  003572  0E7F               	movlw	127
 16160  003574  179B               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 16161  003576  0EFF               	movlw	255
 16162  003578  179C               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 16163  00357A                     l1570:
 16164                           
 16165                           ; BSR set to: 0
 16166  00357A  0100               	movlb	0	; () banked
 16167  00357C  90D8               	bcf	status,0,c
 16168  00357E  3398               	rrcf	___xxtofl@exp& (0+255),f,b
 16169  003580  C098  F093         	movff	___xxtofl@exp,??___xxtofl
 16170  003584  0100               	movlb	0	; () banked
 16171  003586  6B94               	clrf	(??___xxtofl+1)& (0+255),b
 16172  003588  6B95               	clrf	(??___xxtofl+2)& (0+255),b
 16173  00358A  6B96               	clrf	(??___xxtofl+3)& (0+255),b
 16174  00358C  C093  F096         	movff	??___xxtofl,??___xxtofl+3
 16175  003590  0100               	movlb	0	; () banked
 16176  003592  6B95               	clrf	(??___xxtofl+2)& (0+255),b
 16177  003594  6B94               	clrf	(??___xxtofl+1)& (0+255),b
 16178  003596  6B93               	clrf	??___xxtofl& (0+255),b
 16179  003598  0100               	movlb	0	; () banked
 16180  00359A  5193               	movf	??___xxtofl& (0+255),w,b
 16181  00359C  0100               	movlb	0	; () banked
 16182  00359E  1399               	iorwf	___xxtofl@arg& (0+255),f,b
 16183  0035A0  0100               	movlb	0	; () banked
 16184  0035A2  5194               	movf	(??___xxtofl+1)& (0+255),w,b
 16185  0035A4  0100               	movlb	0	; () banked
 16186  0035A6  139A               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16187  0035A8  0100               	movlb	0	; () banked
 16188  0035AA  5195               	movf	(??___xxtofl+2)& (0+255),w,b
 16189  0035AC  0100               	movlb	0	; () banked
 16190  0035AE  139B               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16191  0035B0  0100               	movlb	0	; () banked
 16192  0035B2  5196               	movf	(??___xxtofl+3)& (0+255),w,b
 16193  0035B4  0100               	movlb	0	; () banked
 16194  0035B6  139C               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16195                           
 16196                           ; BSR set to: 0
 16197  0035B8  0100               	movlb	0	; () banked
 16198  0035BA  5197               	movf	___xxtofl@sign& (0+255),w,b
 16199  0035BC  0100               	movlb	0	; () banked
 16200  0035BE  B4D8               	btfsc	status,2,c
 16201  0035C0  D005               	goto	l9087
 16202                           
 16203                           ; BSR set to: 0
 16204  0035C2  0100               	movlb	0	; () banked
 16205  0035C4  AF92               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16206  0035C6  D002               	goto	l9087
 16207                           
 16208                           ; BSR set to: 0
 16209  0035C8  0100               	movlb	0	; () banked
 16210  0035CA  8F9C               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16211  0035CC                     l9087:
 16212                           
 16213                           ; BSR set to: 0
 16214  0035CC  C099  F08F         	movff	___xxtofl@arg,?___xxtofl
 16215  0035D0  C09A  F090         	movff	___xxtofl@arg+1,?___xxtofl+1
 16216  0035D4  C09B  F091         	movff	___xxtofl@arg+2,?___xxtofl+2
 16217  0035D8  C09C  F092         	movff	___xxtofl@arg+3,?___xxtofl+3
 16218  0035DC  0012               	return	
 16219  0035DE                     __end_of___xxtofl:
 16220                           	opt stack 0
 16221                           tblptru	equ	0xFF8
 16222                           tblptrh	equ	0xFF7
 16223                           tblptrl	equ	0xFF6
 16224                           tablat	equ	0xFF5
 16225                           prodh	equ	0xFF4
 16226                           prodl	equ	0xFF3
 16227                           intcon	equ	0xFF2
 16228                           postinc0	equ	0xFEE
 16229                           wreg	equ	0xFE8
 16230                           postdec1	equ	0xFE5
 16231                           fsr1l	equ	0xFE1
 16232                           indf2	equ	0xFDF
 16233                           postinc2	equ	0xFDE
 16234                           postdec2	equ	0xFDD
 16235                           plusw2	equ	0xFDB
 16236                           fsr2h	equ	0xFDA
 16237                           fsr2l	equ	0xFD9
 16238                           status	equ	0xFD8
 16239                           
 16240 ;; *************** function ___lmul *****************
 16241 ;; Defined at:
 16242 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;  multiplier      4   47[BANK0 ] unsigned long 
 16245 ;;  multiplicand    4   51[BANK0 ] unsigned long 
 16246 ;; Auto vars:     Size  Location     Type
 16247 ;;  product         4   55[BANK0 ] unsigned long 
 16248 ;; Return value:  Size  Location     Type
 16249 ;;                  4   47[BANK0 ] unsigned long 
 16250 ;; Registers used:
 16251 ;;		wreg, status,2, status,0
 16252 ;; Tracked objects:
 16253 ;;		On entry : 0/0
 16254 ;;		On exit  : 0/0
 16255 ;;		Unchanged: 0/0
 16256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16257 ;;      Params:         0       8       0       0       0       0       0
 16258 ;;      Locals:         0       4       0       0       0       0       0
 16259 ;;      Temps:          0       0       0       0       0       0       0
 16260 ;;      Totals:         0      12       0       0       0       0       0
 16261 ;;Total ram usage:       12 bytes
 16262 ;; Hardware stack levels used:    1
 16263 ;; Hardware stack levels required when called:    8
 16264 ;; This function calls:
 16265 ;;		Nothing
 16266 ;; This function is called by:
 16267 ;;		_desintegrator
 16268 ;;		_integrator
 16269 ;; This function uses a non-reentrant model
 16270 ;;
 16271                           
 16272                           	psect	text60
 16273  005822                     __ptext60:
 16274                           	opt stack 0
 16275  005822                     ___lmul:
 16276                           	opt stack 19
 16277                           
 16278                           ; BSR set to: 0
 16279                           ;incstack = 0
 16280  005822  0E00               	movlw	0
 16281  005824  0100               	movlb	0	; () banked
 16282  005826  6F97               	movwf	___lmul@product& (0+255),b
 16283  005828  0E00               	movlw	0
 16284  00582A  6F98               	movwf	(___lmul@product+1)& (0+255),b
 16285  00582C  0E00               	movlw	0
 16286  00582E  6F99               	movwf	(___lmul@product+2)& (0+255),b
 16287  005830  0E00               	movlw	0
 16288  005832  6F9A               	movwf	(___lmul@product+3)& (0+255),b
 16289  005834                     l9443:
 16290                           
 16291                           ; BSR set to: 0
 16292  005834  0100               	movlb	0	; () banked
 16293  005836  A18F               	btfss	___lmul@multiplier& (0+255),0,b
 16294  005838  D010               	goto	l9447
 16295                           
 16296                           ; BSR set to: 0
 16297  00583A  0100               	movlb	0	; () banked
 16298  00583C  5193               	movf	___lmul@multiplicand& (0+255),w,b
 16299  00583E  0100               	movlb	0	; () banked
 16300  005840  2797               	addwf	___lmul@product& (0+255),f,b
 16301  005842  0100               	movlb	0	; () banked
 16302  005844  5194               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16303  005846  0100               	movlb	0	; () banked
 16304  005848  2398               	addwfc	(___lmul@product+1)& (0+255),f,b
 16305  00584A  0100               	movlb	0	; () banked
 16306  00584C  5195               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16307  00584E  0100               	movlb	0	; () banked
 16308  005850  2399               	addwfc	(___lmul@product+2)& (0+255),f,b
 16309  005852  0100               	movlb	0	; () banked
 16310  005854  5196               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16311  005856  0100               	movlb	0	; () banked
 16312  005858  239A               	addwfc	(___lmul@product+3)& (0+255),f,b
 16313  00585A                     l9447:
 16314                           
 16315                           ; BSR set to: 0
 16316  00585A  0100               	movlb	0	; () banked
 16317  00585C  90D8               	bcf	status,0,c
 16318  00585E  3793               	rlcf	___lmul@multiplicand& (0+255),f,b
 16319  005860  3794               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16320  005862  3795               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16321  005864  3796               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16322                           
 16323                           ; BSR set to: 0
 16324  005866  0100               	movlb	0	; () banked
 16325  005868  90D8               	bcf	status,0,c
 16326  00586A  3392               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16327  00586C  3391               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16328  00586E  3390               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16329  005870  338F               	rrcf	___lmul@multiplier& (0+255),f,b
 16330  005872  0100               	movlb	0	; () banked
 16331  005874  518F               	movf	___lmul@multiplier& (0+255),w,b
 16332  005876  0100               	movlb	0	; () banked
 16333  005878  1190               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16334  00587A  0100               	movlb	0	; () banked
 16335  00587C  1191               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16336  00587E  0100               	movlb	0	; () banked
 16337  005880  1192               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16338  005882  A4D8               	btfss	status,2,c
 16339  005884  D7D7               	goto	l9443
 16340                           
 16341                           ; BSR set to: 0
 16342  005886  C097  F08F         	movff	___lmul@product,?___lmul
 16343  00588A  C098  F090         	movff	___lmul@product+1,?___lmul+1
 16344  00588E  C099  F091         	movff	___lmul@product+2,?___lmul+2
 16345  005892  C09A  F092         	movff	___lmul@product+3,?___lmul+3
 16346                           
 16347                           ; BSR set to: 0
 16348  005896  0012               	return		;funcret
 16349  005898                     __end_of___lmul:
 16350                           	opt stack 0
 16351                           tblptru	equ	0xFF8
 16352                           tblptrh	equ	0xFF7
 16353                           tblptrl	equ	0xFF6
 16354                           tablat	equ	0xFF5
 16355                           prodh	equ	0xFF4
 16356                           prodl	equ	0xFF3
 16357                           intcon	equ	0xFF2
 16358                           postinc0	equ	0xFEE
 16359                           wreg	equ	0xFE8
 16360                           postdec1	equ	0xFE5
 16361                           fsr1l	equ	0xFE1
 16362                           indf2	equ	0xFDF
 16363                           postinc2	equ	0xFDE
 16364                           postdec2	equ	0xFDD
 16365                           plusw2	equ	0xFDB
 16366                           fsr2h	equ	0xFDA
 16367                           fsr2l	equ	0xFD9
 16368                           status	equ	0xFD8
 16369                           
 16370 ;; *************** function _confirmEdition *****************
 16371 ;; Defined at:
 16372 ;;		line 72 in file "source/DisplayProtocol.h"
 16373 ;; Parameters:    Size  Location     Type
 16374 ;;  yes             1    wreg     unsigned char 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;  yes             1   73[BANK0 ] unsigned char 
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      void 
 16379 ;; Registers used:
 16380 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16386 ;;      Params:         0       0       0       0       0       0       0
 16387 ;;      Locals:         0       1       0       0       0       0       0
 16388 ;;      Temps:          0       0       0       0       0       0       0
 16389 ;;      Totals:         0       1       0       0       0       0       0
 16390 ;;Total ram usage:        1 bytes
 16391 ;; Hardware stack levels used:    1
 16392 ;; Hardware stack levels required when called:   11
 16393 ;; This function calls:
 16394 ;;		_saveSysParams
 16395 ;; This function is called by:
 16396 ;;		_pressENTER
 16397 ;;		_longPressENTER
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text61
 16402  00459C                     __ptext61:
 16403                           	opt stack 0
 16404  00459C                     _confirmEdition:
 16405                           	opt stack 17
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;incstack = 0
 16409                           ;confirmEdition@yes stored from wreg
 16410  00459C  0100               	movlb	0	; () banked
 16411  00459E  6FA9               	movwf	confirmEdition@yes& (0+255),b
 16412                           
 16413                           ;DisplayProtocol.h: 73: switch (menuSection) {
 16414  0045A0  D06C               	goto	l9887
 16415  0045A2                     l9845:
 16416                           
 16417                           ;DisplayProtocol.h: 77: if(yes) {
 16418  0045A2  0100               	movlb	0	; () banked
 16419  0045A4  51A9               	movf	confirmEdition@yes& (0+255),w,b
 16420  0045A6  0100               	movlb	0	; () banked
 16421  0045A8  B4D8               	btfsc	status,2,c
 16422  0045AA  D00E               	goto	l558
 16423                           
 16424                           ; BSR set to: 0
 16425                           ;DisplayProtocol.h: 78: kgXcorte = chanValf;
 16426  0045AC  C02A  F18A         	movff	_chanValf,_kgXcorte
 16427  0045B0  C02B  F18B         	movff	_chanValf+1,_kgXcorte+1
 16428  0045B4  C02C  F18C         	movff	_chanValf+2,_kgXcorte+2
 16429  0045B8  C02D  F18D         	movff	_chanValf+3,_kgXcorte+3
 16430                           
 16431                           ; BSR set to: 0
 16432                           ;DisplayProtocol.h: 79: actualScreen = 4;
 16433  0045BC  0E04               	movlw	4
 16434  0045BE  0100               	movlb	0	; () banked
 16435  0045C0  6FB8               	movwf	_actualScreen& (0+255),b
 16436                           
 16437                           ; BSR set to: 0
 16438                           ;DisplayProtocol.h: 80: saveSysParams();
 16439  0045C2  EC45  F024         	call	_saveSysParams	;wreg free
 16440                           
 16441                           ;DisplayProtocol.h: 81: }else {
 16442  0045C6  0012               	return	
 16443  0045C8                     l558:
 16444                           
 16445                           ; BSR set to: 0
 16446                           ;DisplayProtocol.h: 82: tempLastScreen = actualScreen;
 16447  0045C8  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 16448                           
 16449                           ; BSR set to: 0
 16450                           ;DisplayProtocol.h: 83: selSN = 1;
 16451  0045CC  0E01               	movlw	1
 16452  0045CE  0100               	movlb	0	; () banked
 16453  0045D0  6FC1               	movwf	_selSN& (0+255),b
 16454                           
 16455                           ;DisplayProtocol.h: 84: actualScreen = 10;
 16456  0045D2  0E0A               	movlw	10
 16457  0045D4  0100               	movlb	0	; () banked
 16458  0045D6  6FB8               	movwf	_actualScreen& (0+255),b
 16459                           
 16460                           ; BSR set to: 0
 16461                           ;DisplayProtocol.h: 85: }
 16462                           ;DisplayProtocol.h: 86: break;
 16463  0045D8  0012               	return	
 16464  0045DA                     l9855:
 16465                           
 16466                           ;DisplayProtocol.h: 88: if(yes) {
 16467  0045DA  0100               	movlb	0	; () banked
 16468  0045DC  51A9               	movf	confirmEdition@yes& (0+255),w,b
 16469  0045DE  0100               	movlb	0	; () banked
 16470  0045E0  B4D8               	btfsc	status,2,c
 16471  0045E2  D00A               	goto	l561
 16472                           
 16473                           ; BSR set to: 0
 16474                           ;DisplayProtocol.h: 89: numCortes = chanVals;
 16475  0045E4  C1B4  F0CB         	movff	_chanVals,_numCortes
 16476  0045E8  C1B5  F0CC         	movff	_chanVals+1,_numCortes+1
 16477                           
 16478                           ; BSR set to: 0
 16479                           ;DisplayProtocol.h: 90: actualScreen = 4;
 16480  0045EC  0E04               	movlw	4
 16481  0045EE  0100               	movlb	0	; () banked
 16482  0045F0  6FB8               	movwf	_actualScreen& (0+255),b
 16483                           
 16484                           ; BSR set to: 0
 16485                           ;DisplayProtocol.h: 91: saveSysParams();
 16486  0045F2  EC45  F024         	call	_saveSysParams	;wreg free
 16487                           
 16488                           ;DisplayProtocol.h: 92: }else {
 16489  0045F6  0012               	return	
 16490  0045F8                     l561:
 16491                           
 16492                           ; BSR set to: 0
 16493                           ;DisplayProtocol.h: 93: tempLastScreen = actualScreen;
 16494  0045F8  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;DisplayProtocol.h: 94: selSN = 1;
 16498  0045FC  0E01               	movlw	1
 16499  0045FE  0100               	movlb	0	; () banked
 16500  004600  6FC1               	movwf	_selSN& (0+255),b
 16501                           
 16502                           ;DisplayProtocol.h: 95: actualScreen = 10;
 16503  004602  0E0A               	movlw	10
 16504  004604  0100               	movlb	0	; () banked
 16505  004606  6FB8               	movwf	_actualScreen& (0+255),b
 16506                           
 16507                           ; BSR set to: 0
 16508                           ;DisplayProtocol.h: 96: }
 16509                           ;DisplayProtocol.h: 97: break;
 16510  004608  0012               	return	
 16511  00460A                     l9865:
 16512                           
 16513                           ;DisplayProtocol.h: 99: if(yes) {
 16514  00460A  0100               	movlb	0	; () banked
 16515  00460C  51A9               	movf	confirmEdition@yes& (0+255),w,b
 16516  00460E  0100               	movlb	0	; () banked
 16517  004610  B4D8               	btfsc	status,2,c
 16518  004612  D00E               	goto	l564
 16519                           
 16520                           ; BSR set to: 0
 16521                           ;DisplayProtocol.h: 100: diamTubo = chanValf;
 16522  004614  C02A  F186         	movff	_chanValf,_diamTubo
 16523  004618  C02B  F187         	movff	_chanValf+1,_diamTubo+1
 16524  00461C  C02C  F188         	movff	_chanValf+2,_diamTubo+2
 16525  004620  C02D  F189         	movff	_chanValf+3,_diamTubo+3
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;DisplayProtocol.h: 101: actualScreen = 4;
 16529  004624  0E04               	movlw	4
 16530  004626  0100               	movlb	0	; () banked
 16531  004628  6FB8               	movwf	_actualScreen& (0+255),b
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;DisplayProtocol.h: 102: saveSysParams();
 16535  00462A  EC45  F024         	call	_saveSysParams	;wreg free
 16536                           
 16537                           ;DisplayProtocol.h: 103: }else {
 16538  00462E  0012               	return	
 16539  004630                     l564:
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;DisplayProtocol.h: 104: tempLastScreen = actualScreen;
 16543  004630  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 16544                           
 16545                           ; BSR set to: 0
 16546                           ;DisplayProtocol.h: 105: selSN = 1;
 16547  004634  0E01               	movlw	1
 16548  004636  0100               	movlb	0	; () banked
 16549  004638  6FC1               	movwf	_selSN& (0+255),b
 16550                           
 16551                           ;DisplayProtocol.h: 106: actualScreen = 10;
 16552  00463A  0E0A               	movlw	10
 16553  00463C  0100               	movlb	0	; () banked
 16554  00463E  6FB8               	movwf	_actualScreen& (0+255),b
 16555                           
 16556                           ; BSR set to: 0
 16557                           ;DisplayProtocol.h: 107: }
 16558                           ;DisplayProtocol.h: 108: break;
 16559  004640  0012               	return	
 16560  004642                     l9875:
 16561                           
 16562                           ;DisplayProtocol.h: 110: if(yes) {
 16563  004642  0100               	movlb	0	; () banked
 16564  004644  51A9               	movf	confirmEdition@yes& (0+255),w,b
 16565  004646  0100               	movlb	0	; () banked
 16566  004648  B4D8               	btfsc	status,2,c
 16567  00464A  D00E               	goto	l567
 16568                           
 16569                           ; BSR set to: 0
 16570                           ;DisplayProtocol.h: 111: velocidadMasa = chanValf;
 16571  00464C  C02A  F0C7         	movff	_chanValf,_velocidadMasa
 16572  004650  C02B  F0C8         	movff	_chanValf+1,_velocidadMasa+1
 16573  004654  C02C  F0C9         	movff	_chanValf+2,_velocidadMasa+2
 16574  004658  C02D  F0CA         	movff	_chanValf+3,_velocidadMasa+3
 16575                           
 16576                           ; BSR set to: 0
 16577                           ;DisplayProtocol.h: 112: actualScreen = 4;
 16578  00465C  0E04               	movlw	4
 16579  00465E  0100               	movlb	0	; () banked
 16580  004660  6FB8               	movwf	_actualScreen& (0+255),b
 16581                           
 16582                           ; BSR set to: 0
 16583                           ;DisplayProtocol.h: 113: saveSysParams();
 16584  004662  EC45  F024         	call	_saveSysParams	;wreg free
 16585                           
 16586                           ;DisplayProtocol.h: 114: }else {
 16587  004666  0012               	return	
 16588  004668                     l567:
 16589                           
 16590                           ; BSR set to: 0
 16591                           ;DisplayProtocol.h: 115: tempLastScreen = actualScreen;
 16592  004668  C0B8  F0C2         	movff	_actualScreen,_tempLastScreen
 16593                           
 16594                           ; BSR set to: 0
 16595                           ;DisplayProtocol.h: 116: selSN = 1;
 16596  00466C  0E01               	movlw	1
 16597  00466E  0100               	movlb	0	; () banked
 16598  004670  6FC1               	movwf	_selSN& (0+255),b
 16599                           
 16600                           ;DisplayProtocol.h: 117: actualScreen = 10;
 16601  004672  0E0A               	movlw	10
 16602  004674  0100               	movlb	0	; () banked
 16603  004676  6FB8               	movwf	_actualScreen& (0+255),b
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;DisplayProtocol.h: 120: }
 16607                           ;DisplayProtocol.h: 121: }
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;DisplayProtocol.h: 118: }
 16611                           ;DisplayProtocol.h: 119: break;
 16612  004678  0012               	return	
 16613  00467A                     l9887:
 16614  00467A  0101               	movlb	1	; () banked
 16615  00467C  51B6               	movf	_menuSection& (0+255),w,b
 16616                           
 16617                           ; Switch size 1, requested type "space"
 16618                           ; Number of cases is 5, Range of values is 0 to 4
 16619                           ; switch strategies available:
 16620                           ; Name         Instructions Cycles
 16621                           ; simple_byte           16     9 (average)
 16622                           ;	Chosen strategy is simple_byte
 16623  00467E  0A00               	xorlw	0	; case 0
 16624  004680  B4D8               	btfsc	status,2,c
 16625  004682  0012               	return	
 16626  004684  0A01               	xorlw	1	; case 1
 16627  004686  B4D8               	btfsc	status,2,c
 16628  004688  D78C               	goto	l9845
 16629  00468A  0A03               	xorlw	3	; case 2
 16630  00468C  B4D8               	btfsc	status,2,c
 16631  00468E  D7A5               	goto	l9855
 16632  004690  0A01               	xorlw	1	; case 3
 16633  004692  B4D8               	btfsc	status,2,c
 16634  004694  D7BA               	goto	l9865
 16635  004696  0A07               	xorlw	7	; case 4
 16636  004698  A4D8               	btfss	status,2,c
 16637  00469A  0012               	return	
 16638  00469C  D7D2               	goto	l9875
 16639  00469E                     __end_of_confirmEdition:
 16640                           	opt stack 0
 16641                           tblptru	equ	0xFF8
 16642                           tblptrh	equ	0xFF7
 16643                           tblptrl	equ	0xFF6
 16644                           tablat	equ	0xFF5
 16645                           prodh	equ	0xFF4
 16646                           prodl	equ	0xFF3
 16647                           intcon	equ	0xFF2
 16648                           postinc0	equ	0xFEE
 16649                           wreg	equ	0xFE8
 16650                           postdec1	equ	0xFE5
 16651                           fsr1l	equ	0xFE1
 16652                           indf2	equ	0xFDF
 16653                           postinc2	equ	0xFDE
 16654                           postdec2	equ	0xFDD
 16655                           plusw2	equ	0xFDB
 16656                           fsr2h	equ	0xFDA
 16657                           fsr2l	equ	0xFD9
 16658                           status	equ	0xFD8
 16659                           
 16660 ;; *************** function _saveSysParams *****************
 16661 ;; Defined at:
 16662 ;;		line 91 in file "source/sysParams.h"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;		None
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;		None
 16667 ;; Return value:  Size  Location     Type
 16668 ;;                  1    wreg      void 
 16669 ;; Registers used:
 16670 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16671 ;; Tracked objects:
 16672 ;;		On entry : 0/0
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16676 ;;      Params:         0       0       0       0       0       0       0
 16677 ;;      Locals:         0       0       0       0       0       0       0
 16678 ;;      Temps:          0       0       0       0       0       0       0
 16679 ;;      Totals:         0       0       0       0       0       0       0
 16680 ;;Total ram usage:        0 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; Hardware stack levels required when called:   10
 16683 ;; This function calls:
 16684 ;;		_calcVars2ti
 16685 ;;		_writeEEPROM
 16686 ;; This function is called by:
 16687 ;;		_confirmEdition
 16688 ;;		_main
 16689 ;; This function uses a non-reentrant model
 16690 ;;
 16691                           
 16692                           	psect	text62
 16693  00488A                     __ptext62:
 16694                           	opt stack 0
 16695  00488A                     _saveSysParams:
 16696                           	opt stack 20
 16697                           
 16698                           ;sysParams.h: 92: EECON1bits.WREN = 1;
 16699                           
 16700                           ;incstack = 0
 16701  00488A  84A6               	bsf	4006,2,c	;volatile
 16702                           
 16703                           ;sysParams.h: 93: ie = INTCONbits.GIE;
 16704  00488C  0E00               	movlw	0
 16705  00488E  BEF2               	btfsc	intcon,7,c	;volatile
 16706  004890  0E01               	movlw	1
 16707  004892  0100               	movlb	0	; () banked
 16708  004894  6FBF               	movwf	_ie& (0+255),b
 16709                           
 16710                           ; BSR set to: 0
 16711                           ;sysParams.h: 94: INTCONbits.GIE = 0;
 16712  004896  9EF2               	bcf	intcon,7,c	;volatile
 16713                           
 16714                           ; BSR set to: 0
 16715                           ;sysParams.h: 96: fData.floatdat = tiXcorte;
 16716  004898  C0C3  F0AB         	movff	_tiXcorte,_fData
 16717  00489C  C0C4  F0AC         	movff	_tiXcorte+1,_fData+1
 16718  0048A0  C0C5  F0AD         	movff	_tiXcorte+2,_fData+2
 16719  0048A4  C0C6  F0AE         	movff	_tiXcorte+3,_fData+3
 16720                           
 16721                           ; BSR set to: 0
 16722                           ;sysParams.h: 97: writeEEPROM(2, fData.floatMB);
 16723  0048A8  C0AE  F08F         	movff	_fData+3,writeEEPROM@data
 16724  0048AC  0E02               	movlw	2
 16725  0048AE  ECE9  F02F         	call	_writeEEPROM
 16726                           
 16727                           ;sysParams.h: 98: writeEEPROM(3, fData.floatUB);
 16728  0048B2  C0AD  F08F         	movff	_fData+2,writeEEPROM@data
 16729  0048B6  0E03               	movlw	3
 16730  0048B8  ECE9  F02F         	call	_writeEEPROM
 16731                           
 16732                           ;sysParams.h: 99: writeEEPROM(4, fData.floatHB);
 16733  0048BC  C0AC  F08F         	movff	_fData+1,writeEEPROM@data
 16734  0048C0  0E04               	movlw	4
 16735  0048C2  ECE9  F02F         	call	_writeEEPROM
 16736                           
 16737                           ;sysParams.h: 100: writeEEPROM(5, fData.floatLB);
 16738  0048C6  C0AB  F08F         	movff	_fData,writeEEPROM@data
 16739  0048CA  0E05               	movlw	5
 16740  0048CC  ECE9  F02F         	call	_writeEEPROM
 16741                           
 16742                           ;sysParams.h: 101: i16Data.int16dat = numCortes;
 16743  0048D0  C0CB  F0AF         	movff	_numCortes,_i16Data
 16744  0048D4  C0CC  F0B0         	movff	_numCortes+1,_i16Data+1
 16745                           
 16746                           ;sysParams.h: 102: writeEEPROM(6, i16Data.int16HB);
 16747  0048D8  C0B0  F08F         	movff	_i16Data+1,writeEEPROM@data
 16748  0048DC  0E06               	movlw	6
 16749  0048DE  ECE9  F02F         	call	_writeEEPROM
 16750                           
 16751                           ;sysParams.h: 103: writeEEPROM(7, i16Data.int16LB);
 16752  0048E2  C0AF  F08F         	movff	_i16Data,writeEEPROM@data
 16753  0048E6  0E07               	movlw	7
 16754  0048E8  ECE9  F02F         	call	_writeEEPROM
 16755                           
 16756                           ;sysParams.h: 104: fData.floatdat = diamTubo;
 16757  0048EC  C186  F0AB         	movff	_diamTubo,_fData
 16758  0048F0  C187  F0AC         	movff	_diamTubo+1,_fData+1
 16759  0048F4  C188  F0AD         	movff	_diamTubo+2,_fData+2
 16760  0048F8  C189  F0AE         	movff	_diamTubo+3,_fData+3
 16761                           
 16762                           ;sysParams.h: 105: writeEEPROM(8, fData.floatMB);
 16763  0048FC  C0AE  F08F         	movff	_fData+3,writeEEPROM@data
 16764  004900  0E08               	movlw	8
 16765  004902  ECE9  F02F         	call	_writeEEPROM
 16766                           
 16767                           ;sysParams.h: 106: writeEEPROM(9, fData.floatUB);
 16768  004906  C0AD  F08F         	movff	_fData+2,writeEEPROM@data
 16769  00490A  0E09               	movlw	9
 16770  00490C  ECE9  F02F         	call	_writeEEPROM
 16771                           
 16772                           ;sysParams.h: 107: writeEEPROM(10, fData.floatHB);
 16773  004910  C0AC  F08F         	movff	_fData+1,writeEEPROM@data
 16774  004914  0E0A               	movlw	10
 16775  004916  ECE9  F02F         	call	_writeEEPROM
 16776                           
 16777                           ;sysParams.h: 108: writeEEPROM(11, fData.floatLB);
 16778  00491A  C0AB  F08F         	movff	_fData,writeEEPROM@data
 16779  00491E  0E0B               	movlw	11
 16780  004920  ECE9  F02F         	call	_writeEEPROM
 16781                           
 16782                           ;sysParams.h: 114: fData.floatdat = velocidadMasa;
 16783  004924  C0C7  F0AB         	movff	_velocidadMasa,_fData
 16784  004928  C0C8  F0AC         	movff	_velocidadMasa+1,_fData+1
 16785  00492C  C0C9  F0AD         	movff	_velocidadMasa+2,_fData+2
 16786  004930  C0CA  F0AE         	movff	_velocidadMasa+3,_fData+3
 16787                           
 16788                           ;sysParams.h: 115: writeEEPROM(16, fData.floatMB);
 16789  004934  C0AE  F08F         	movff	_fData+3,writeEEPROM@data
 16790  004938  0E10               	movlw	16
 16791  00493A  ECE9  F02F         	call	_writeEEPROM
 16792                           
 16793                           ;sysParams.h: 116: writeEEPROM(17, fData.floatUB);
 16794  00493E  C0AD  F08F         	movff	_fData+2,writeEEPROM@data
 16795  004942  0E11               	movlw	17
 16796  004944  ECE9  F02F         	call	_writeEEPROM
 16797                           
 16798                           ;sysParams.h: 117: writeEEPROM(18, fData.floatHB);
 16799  004948  C0AC  F08F         	movff	_fData+1,writeEEPROM@data
 16800  00494C  0E12               	movlw	18
 16801  00494E  ECE9  F02F         	call	_writeEEPROM
 16802                           
 16803                           ;sysParams.h: 118: writeEEPROM(19, fData.floatLB);
 16804  004952  C0AB  F08F         	movff	_fData,writeEEPROM@data
 16805  004956  0E13               	movlw	19
 16806  004958  ECE9  F02F         	call	_writeEEPROM
 16807                           
 16808                           ;sysParams.h: 119: EECON1bits.WREN = 0;
 16809  00495C  94A6               	bcf	4006,2,c	;volatile
 16810                           
 16811                           ;sysParams.h: 120: INTCONbits.GIE = ie;
 16812  00495E  0100               	movlb	0	; () banked
 16813  004960  B1BF               	btfsc	_ie& (0+255),0,b
 16814  004962  D002               	bra	u11935
 16815  004964  9EF2               	bcf	intcon,7,c	;volatile
 16816  004966  D001               	bra	u11936
 16817  004968                     u11935:
 16818  004968  8EF2               	bsf	intcon,7,c	;volatile
 16819  00496A                     u11936:
 16820                           
 16821                           ;sysParams.h: 121: calcVars2ti();
 16822  00496A  ECBE  F02C         	call	_calcVars2ti	;wreg free
 16823  00496E  0012               	return		;funcret
 16824  004970                     __end_of_saveSysParams:
 16825                           	opt stack 0
 16826                           tblptru	equ	0xFF8
 16827                           tblptrh	equ	0xFF7
 16828                           tblptrl	equ	0xFF6
 16829                           tablat	equ	0xFF5
 16830                           prodh	equ	0xFF4
 16831                           prodl	equ	0xFF3
 16832                           intcon	equ	0xFF2
 16833                           postinc0	equ	0xFEE
 16834                           wreg	equ	0xFE8
 16835                           postdec1	equ	0xFE5
 16836                           fsr1l	equ	0xFE1
 16837                           indf2	equ	0xFDF
 16838                           postinc2	equ	0xFDE
 16839                           postdec2	equ	0xFDD
 16840                           plusw2	equ	0xFDB
 16841                           fsr2h	equ	0xFDA
 16842                           fsr2l	equ	0xFD9
 16843                           status	equ	0xFD8
 16844                           
 16845 ;; *************** function _writeEEPROM *****************
 16846 ;; Defined at:
 16847 ;;		line 31 in file "source/sysParams.h"
 16848 ;; Parameters:    Size  Location     Type
 16849 ;;  adr             1    wreg     unsigned char 
 16850 ;;  data            1   47[BANK0 ] unsigned char 
 16851 ;; Auto vars:     Size  Location     Type
 16852 ;;  adr             1   48[BANK0 ] unsigned char 
 16853 ;; Return value:  Size  Location     Type
 16854 ;;                  1    wreg      void 
 16855 ;; Registers used:
 16856 ;;		wreg, status,2
 16857 ;; Tracked objects:
 16858 ;;		On entry : 0/0
 16859 ;;		On exit  : 0/0
 16860 ;;		Unchanged: 0/0
 16861 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16862 ;;      Params:         0       1       0       0       0       0       0
 16863 ;;      Locals:         0       1       0       0       0       0       0
 16864 ;;      Temps:          0       0       0       0       0       0       0
 16865 ;;      Totals:         0       2       0       0       0       0       0
 16866 ;;Total ram usage:        2 bytes
 16867 ;; Hardware stack levels used:    1
 16868 ;; Hardware stack levels required when called:    8
 16869 ;; This function calls:
 16870 ;;		Nothing
 16871 ;; This function is called by:
 16872 ;;		_saveSysParams
 16873 ;; This function uses a non-reentrant model
 16874 ;;
 16875                           
 16876                           	psect	text63
 16877  005FD2                     __ptext63:
 16878                           	opt stack 0
 16879  005FD2                     _writeEEPROM:
 16880                           	opt stack 21
 16881                           
 16882                           ;incstack = 0
 16883                           ;writeEEPROM@adr stored from wreg
 16884  005FD2  0100               	movlb	0	; () banked
 16885  005FD4  6F90               	movwf	writeEEPROM@adr& (0+255),b
 16886                           
 16887                           ;sysParams.h: 32: EEADR = adr;
 16888  005FD6  C090  FFA9         	movff	writeEEPROM@adr,4009	;volatile
 16889                           
 16890                           ;sysParams.h: 33: EEDATA = data;
 16891  005FDA  C08F  FFA8         	movff	writeEEPROM@data,4008	;volatile
 16892                           
 16893                           ;sysParams.h: 34: EECON1bits.EEPGD = 0;
 16894  005FDE  9EA6               	bcf	4006,7,c	;volatile
 16895                           
 16896                           ;sysParams.h: 35: EECON1bits.CFGS = 0;
 16897  005FE0  9CA6               	bcf	4006,6,c	;volatile
 16898                           
 16899                           ;sysParams.h: 36: EECON2 = 0x55;
 16900  005FE2  0E55               	movlw	85
 16901  005FE4  6EA7               	movwf	4007,c	;volatile
 16902                           
 16903                           ;sysParams.h: 37: EECON2 = 0xAA;
 16904  005FE6  0EAA               	movlw	170
 16905  005FE8  6EA7               	movwf	4007,c	;volatile
 16906                           
 16907                           ;sysParams.h: 38: EECON1bits.WR = 1;
 16908  005FEA  82A6               	bsf	4006,1,c	;volatile
 16909  005FEC                     l294:
 16910  005FEC  A2A6               	btfss	4006,1,c	;volatile
 16911  005FEE  0012               	return	
 16912  005FF0  D7FD               	goto	l294
 16913  005FF2                     __end_of_writeEEPROM:
 16914                           	opt stack 0
 16915                           tblptru	equ	0xFF8
 16916                           tblptrh	equ	0xFF7
 16917                           tblptrl	equ	0xFF6
 16918                           tablat	equ	0xFF5
 16919                           prodh	equ	0xFF4
 16920                           prodl	equ	0xFF3
 16921                           intcon	equ	0xFF2
 16922                           postinc0	equ	0xFEE
 16923                           wreg	equ	0xFE8
 16924                           postdec1	equ	0xFE5
 16925                           fsr1l	equ	0xFE1
 16926                           indf2	equ	0xFDF
 16927                           postinc2	equ	0xFDE
 16928                           postdec2	equ	0xFDD
 16929                           plusw2	equ	0xFDB
 16930                           fsr2h	equ	0xFDA
 16931                           fsr2l	equ	0xFD9
 16932                           status	equ	0xFD8
 16933                           
 16934 ;; *************** function _calcVars2ti *****************
 16935 ;; Defined at:
 16936 ;;		line 67 in file "source/sysParams.h"
 16937 ;; Parameters:    Size  Location     Type
 16938 ;;		None
 16939 ;; Auto vars:     Size  Location     Type
 16940 ;;		None
 16941 ;; Return value:  Size  Location     Type
 16942 ;;                  1    wreg      void 
 16943 ;; Registers used:
 16944 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16945 ;; Tracked objects:
 16946 ;;		On entry : 0/0
 16947 ;;		On exit  : 0/0
 16948 ;;		Unchanged: 0/0
 16949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16950 ;;      Params:         0       0       0       0       0       0       0
 16951 ;;      Locals:         0       0       0       0       0       0       0
 16952 ;;      Temps:          0       0       0       0       0       0       0
 16953 ;;      Totals:         0       0       0       0       0       0       0
 16954 ;;Total ram usage:        0 bytes
 16955 ;; Hardware stack levels used:    1
 16956 ;; Hardware stack levels required when called:    9
 16957 ;; This function calls:
 16958 ;;		___fldiv
 16959 ;;		___flmul
 16960 ;; This function is called by:
 16961 ;;		_saveSysParams
 16962 ;; This function uses a non-reentrant model
 16963 ;;
 16964                           
 16965                           	psect	text64
 16966  00597C                     __ptext64:
 16967                           	opt stack 0
 16968  00597C                     _calcVars2ti:
 16969                           	opt stack 20
 16970                           
 16971                           ;sysParams.h: 75: tiXcorte = (float)kgXcorte / velocidadMasa;
 16972                           
 16973                           ;incstack = 0
 16974  00597C  C18A  F09D         	movff	_kgXcorte,___fldiv@b
 16975  005980  C18B  F09E         	movff	_kgXcorte+1,___fldiv@b+1
 16976  005984  C18C  F09F         	movff	_kgXcorte+2,___fldiv@b+2
 16977  005988  C18D  F0A0         	movff	_kgXcorte+3,___fldiv@b+3
 16978  00598C  C0C7  F0A1         	movff	_velocidadMasa,___fldiv@a
 16979  005990  C0C8  F0A2         	movff	_velocidadMasa+1,___fldiv@a+1
 16980  005994  C0C9  F0A3         	movff	_velocidadMasa+2,___fldiv@a+2
 16981  005998  C0CA  F0A4         	movff	_velocidadMasa+3,___fldiv@a+3
 16982  00599C  ECFB  F00F         	call	___fldiv	;wreg free
 16983  0059A0  C09D  F0C3         	movff	?___fldiv,_tiXcorte
 16984  0059A4  C09E  F0C4         	movff	?___fldiv+1,_tiXcorte+1
 16985  0059A8  C09F  F0C5         	movff	?___fldiv+2,_tiXcorte+2
 16986  0059AC  C0A0  F0C6         	movff	?___fldiv+3,_tiXcorte+3
 16987                           
 16988                           ;sysParams.h: 76: timsXcorte = (float)tiXcorte * 1000;
 16989  0059B0  C0C3  F09D         	movff	_tiXcorte,___flmul@b
 16990  0059B4  C0C4  F09E         	movff	_tiXcorte+1,___flmul@b+1
 16991  0059B8  C0C5  F09F         	movff	_tiXcorte+2,___flmul@b+2
 16992  0059BC  C0C6  F0A0         	movff	_tiXcorte+3,___flmul@b+3
 16993  0059C0  0E00               	movlw	0
 16994  0059C2  0100               	movlb	0	; () banked
 16995  0059C4  6FA1               	movwf	___flmul@a& (0+255),b
 16996  0059C6  0E00               	movlw	0
 16997  0059C8  6FA2               	movwf	(___flmul@a+1)& (0+255),b
 16998  0059CA  0E7A               	movlw	122
 16999  0059CC  6FA3               	movwf	(___flmul@a+2)& (0+255),b
 17000  0059CE  0E44               	movlw	68
 17001  0059D0  6FA4               	movwf	(___flmul@a+3)& (0+255),b
 17002  0059D2  EC55  F00B         	call	___flmul	;wreg free
 17003  0059D6  C09D  F047         	movff	?___flmul,_timsXcorte
 17004  0059DA  C09E  F048         	movff	?___flmul+1,_timsXcorte+1
 17005  0059DE  C09F  F049         	movff	?___flmul+2,_timsXcorte+2
 17006  0059E2  C0A0  F04A         	movff	?___flmul+3,_timsXcorte+3
 17007  0059E6  0012               	return		;funcret
 17008  0059E8                     __end_of_calcVars2ti:
 17009                           	opt stack 0
 17010                           tblptru	equ	0xFF8
 17011                           tblptrh	equ	0xFF7
 17012                           tblptrl	equ	0xFF6
 17013                           tablat	equ	0xFF5
 17014                           prodh	equ	0xFF4
 17015                           prodl	equ	0xFF3
 17016                           intcon	equ	0xFF2
 17017                           postinc0	equ	0xFEE
 17018                           wreg	equ	0xFE8
 17019                           postdec1	equ	0xFE5
 17020                           fsr1l	equ	0xFE1
 17021                           indf2	equ	0xFDF
 17022                           postinc2	equ	0xFDE
 17023                           postdec2	equ	0xFDD
 17024                           plusw2	equ	0xFDB
 17025                           fsr2h	equ	0xFDA
 17026                           fsr2l	equ	0xFD9
 17027                           status	equ	0xFD8
 17028                           
 17029 ;; *************** function ___flmul *****************
 17030 ;; Defined at:
 17031 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 17032 ;; Parameters:    Size  Location     Type
 17033 ;;  b               4   61[BANK0 ] void 
 17034 ;;  a               4   65[BANK0 ] void 
 17035 ;; Auto vars:     Size  Location     Type
 17036 ;;  prod            4    7[BANK1 ] struct .
 17037 ;;  grs             4    2[BANK1 ] unsigned long 
 17038 ;;  temp            2   11[BANK1 ] struct .
 17039 ;;  bexp            1    6[BANK1 ] unsigned char 
 17040 ;;  aexp            1    1[BANK1 ] unsigned char 
 17041 ;;  sign            1    0[BANK1 ] unsigned char 
 17042 ;; Return value:  Size  Location     Type
 17043 ;;                  4   61[BANK0 ] unsigned char 
 17044 ;; Registers used:
 17045 ;;		wreg, status,2, status,0, prodl, prodh
 17046 ;; Tracked objects:
 17047 ;;		On entry : 0/0
 17048 ;;		On exit  : 0/0
 17049 ;;		Unchanged: 0/0
 17050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17051 ;;      Params:         0       8       0       0       0       0       0
 17052 ;;      Locals:         0       0      13       0       0       0       0
 17053 ;;      Temps:          0       4       0       0       0       0       0
 17054 ;;      Totals:         0      12      13       0       0       0       0
 17055 ;;Total ram usage:       25 bytes
 17056 ;; Hardware stack levels used:    1
 17057 ;; Hardware stack levels required when called:    8
 17058 ;; This function calls:
 17059 ;;		Nothing
 17060 ;; This function is called by:
 17061 ;;		_calcVars2ti
 17062 ;;		_desintegrator
 17063 ;;		_fround
 17064 ;;		_scale
 17065 ;;		_printf
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text65
 17070  0016AA                     __ptext65:
 17071                           	opt stack 0
 17072  0016AA                     ___flmul:
 17073                           	opt stack 20
 17074                           
 17075                           ;incstack = 0
 17076  0016AA  0100               	movlb	0	; () banked
 17077  0016AC  51A0               	movf	(___flmul@b+3)& (0+255),w,b
 17078  0016AE  0B80               	andlw	128
 17079  0016B0  0101               	movlb	1	; () banked
 17080  0016B2  6F00               	movwf	___flmul@sign& (0+255),b
 17081  0016B4  0100               	movlb	0	; () banked
 17082  0016B6  51A0               	movf	(___flmul@b+3)& (0+255),w,b
 17083  0016B8  25A0               	addwf	(___flmul@b+3)& (0+255),w,b
 17084  0016BA  0101               	movlb	1	; () banked
 17085  0016BC  6F06               	movwf	___flmul@bexp& (0+255),b
 17086                           
 17087                           ; BSR set to: 1
 17088  0016BE  0100               	movlb	0	; () banked
 17089  0016C0  AF9F               	btfss	(___flmul@b+2)& (0+255),7,b
 17090  0016C2  D002               	goto	l8527
 17091                           
 17092                           ; BSR set to: 0
 17093  0016C4  0101               	movlb	1	; () banked
 17094  0016C6  8106               	bsf	___flmul@bexp& (0+255),0,b
 17095  0016C8                     l8527:
 17096  0016C8  0101               	movlb	1	; () banked
 17097  0016CA  5106               	movf	___flmul@bexp& (0+255),w,b
 17098  0016CC  0101               	movlb	1	; () banked
 17099  0016CE  B4D8               	btfsc	status,2,c
 17100  0016D0  D010               	goto	l8535
 17101                           
 17102                           ; BSR set to: 1
 17103  0016D2  0101               	movlb	1	; () banked
 17104  0016D4  2906               	incf	___flmul@bexp& (0+255),w,b
 17105  0016D6  A4D8               	btfss	status,2,c
 17106  0016D8  D009               	goto	l8533
 17107                           
 17108                           ; BSR set to: 1
 17109  0016DA  0E00               	movlw	0
 17110  0016DC  0100               	movlb	0	; () banked
 17111  0016DE  6F9D               	movwf	___flmul@b& (0+255),b
 17112  0016E0  0E00               	movlw	0
 17113  0016E2  6F9E               	movwf	(___flmul@b+1)& (0+255),b
 17114  0016E4  0E00               	movlw	0
 17115  0016E6  6F9F               	movwf	(___flmul@b+2)& (0+255),b
 17116  0016E8  0E00               	movlw	0
 17117  0016EA  6FA0               	movwf	(___flmul@b+3)& (0+255),b
 17118  0016EC                     l8533:
 17119  0016EC  0100               	movlb	0	; () banked
 17120  0016EE  8F9F               	bsf	(___flmul@b+2)& (0+255),7,b
 17121  0016F0  D009               	goto	l8537
 17122  0016F2                     l8535:
 17123  0016F2  0E00               	movlw	0
 17124  0016F4  0100               	movlb	0	; () banked
 17125  0016F6  6F9D               	movwf	___flmul@b& (0+255),b
 17126  0016F8  0E00               	movlw	0
 17127  0016FA  6F9E               	movwf	(___flmul@b+1)& (0+255),b
 17128  0016FC  0E00               	movlw	0
 17129  0016FE  6F9F               	movwf	(___flmul@b+2)& (0+255),b
 17130  001700  0E00               	movlw	0
 17131  001702  6FA0               	movwf	(___flmul@b+3)& (0+255),b
 17132  001704                     l8537:
 17133                           
 17134                           ; BSR set to: 0
 17135  001704  0100               	movlb	0	; () banked
 17136  001706  51A4               	movf	(___flmul@a+3)& (0+255),w,b
 17137  001708  0B80               	andlw	128
 17138  00170A  0101               	movlb	1	; () banked
 17139  00170C  1B00               	xorwf	___flmul@sign& (0+255),f,b
 17140                           
 17141                           ; BSR set to: 1
 17142  00170E  0100               	movlb	0	; () banked
 17143  001710  51A4               	movf	(___flmul@a+3)& (0+255),w,b
 17144  001712  25A4               	addwf	(___flmul@a+3)& (0+255),w,b
 17145  001714  0101               	movlb	1	; () banked
 17146  001716  6F01               	movwf	___flmul@aexp& (0+255),b
 17147                           
 17148                           ; BSR set to: 1
 17149  001718  0100               	movlb	0	; () banked
 17150  00171A  AFA3               	btfss	(___flmul@a+2)& (0+255),7,b
 17151  00171C  D002               	goto	l8545
 17152                           
 17153                           ; BSR set to: 0
 17154  00171E  0101               	movlb	1	; () banked
 17155  001720  8101               	bsf	___flmul@aexp& (0+255),0,b
 17156  001722                     l8545:
 17157  001722  0101               	movlb	1	; () banked
 17158  001724  5101               	movf	___flmul@aexp& (0+255),w,b
 17159  001726  0101               	movlb	1	; () banked
 17160  001728  B4D8               	btfsc	status,2,c
 17161  00172A  D010               	goto	l8553
 17162                           
 17163                           ; BSR set to: 1
 17164  00172C  0101               	movlb	1	; () banked
 17165  00172E  2901               	incf	___flmul@aexp& (0+255),w,b
 17166  001730  A4D8               	btfss	status,2,c
 17167  001732  D009               	goto	l8551
 17168                           
 17169                           ; BSR set to: 1
 17170  001734  0E00               	movlw	0
 17171  001736  0100               	movlb	0	; () banked
 17172  001738  6FA1               	movwf	___flmul@a& (0+255),b
 17173  00173A  0E00               	movlw	0
 17174  00173C  6FA2               	movwf	(___flmul@a+1)& (0+255),b
 17175  00173E  0E00               	movlw	0
 17176  001740  6FA3               	movwf	(___flmul@a+2)& (0+255),b
 17177  001742  0E00               	movlw	0
 17178  001744  6FA4               	movwf	(___flmul@a+3)& (0+255),b
 17179  001746                     l8551:
 17180  001746  0100               	movlb	0	; () banked
 17181  001748  8FA3               	bsf	(___flmul@a+2)& (0+255),7,b
 17182  00174A  D009               	goto	l1533
 17183  00174C                     l8553:
 17184  00174C  0E00               	movlw	0
 17185  00174E  0100               	movlb	0	; () banked
 17186  001750  6FA1               	movwf	___flmul@a& (0+255),b
 17187  001752  0E00               	movlw	0
 17188  001754  6FA2               	movwf	(___flmul@a+1)& (0+255),b
 17189  001756  0E00               	movlw	0
 17190  001758  6FA3               	movwf	(___flmul@a+2)& (0+255),b
 17191  00175A  0E00               	movlw	0
 17192  00175C  6FA4               	movwf	(___flmul@a+3)& (0+255),b
 17193  00175E                     l1533:
 17194                           
 17195                           ; BSR set to: 0
 17196  00175E  0101               	movlb	1	; () banked
 17197  001760  5101               	movf	___flmul@aexp& (0+255),w,b
 17198  001762  0101               	movlb	1	; () banked
 17199  001764  B4D8               	btfsc	status,2,c
 17200  001766  D005               	goto	l8557
 17201                           
 17202                           ; BSR set to: 1
 17203  001768  0101               	movlb	1	; () banked
 17204  00176A  5106               	movf	___flmul@bexp& (0+255),w,b
 17205  00176C  0101               	movlb	1	; () banked
 17206  00176E  A4D8               	btfss	status,2,c
 17207  001770  D00A               	goto	l8561
 17208  001772                     l8557:
 17209                           
 17210                           ; BSR set to: 1
 17211  001772  0E00               	movlw	0
 17212  001774  0100               	movlb	0	; () banked
 17213  001776  6F9D               	movwf	?___flmul& (0+255),b
 17214  001778  0E00               	movlw	0
 17215  00177A  6F9E               	movwf	(?___flmul+1)& (0+255),b
 17216  00177C  0E00               	movlw	0
 17217  00177E  6F9F               	movwf	(?___flmul+2)& (0+255),b
 17218  001780  0E00               	movlw	0
 17219  001782  6FA0               	movwf	(?___flmul+3)& (0+255),b
 17220                           
 17221                           ; BSR set to: 0
 17222  001784  0012               	return	
 17223  001786                     l8561:
 17224  001786  0100               	movlb	0	; () banked
 17225  001788  51A3               	movf	(___flmul@a+2)& (0+255),w,b
 17226  00178A  0100               	movlb	0	; () banked
 17227  00178C  039D               	mulwf	___flmul@b& (0+255),b
 17228  00178E  CFF3 F10B          	movff	prodl,___flmul@temp
 17229  001792  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17230                           
 17231                           ; BSR set to: 0
 17232  001796  0101               	movlb	1	; () banked
 17233  001798  510B               	movf	___flmul@temp& (0+255),w,b
 17234  00179A  0101               	movlb	1	; () banked
 17235  00179C  6F02               	movwf	___flmul@grs& (0+255),b
 17236  00179E  6B03               	clrf	(___flmul@grs+1)& (0+255),b
 17237  0017A0  6B04               	clrf	(___flmul@grs+2)& (0+255),b
 17238  0017A2  6B05               	clrf	(___flmul@grs+3)& (0+255),b
 17239                           
 17240                           ; BSR set to: 1
 17241  0017A4  0101               	movlb	1	; () banked
 17242  0017A6  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17243  0017A8  0101               	movlb	1	; () banked
 17244  0017AA  6F07               	movwf	___flmul@prod& (0+255),b
 17245  0017AC  6B08               	clrf	(___flmul@prod+1)& (0+255),b
 17246  0017AE  6B09               	clrf	(___flmul@prod+2)& (0+255),b
 17247  0017B0  6B0A               	clrf	(___flmul@prod+3)& (0+255),b
 17248  0017B2  0100               	movlb	0	; () banked
 17249  0017B4  51A2               	movf	(___flmul@a+1)& (0+255),w,b
 17250  0017B6  0100               	movlb	0	; () banked
 17251  0017B8  039E               	mulwf	(___flmul@b+1)& (0+255),b
 17252  0017BA  CFF3 F10B          	movff	prodl,___flmul@temp
 17253  0017BE  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17254                           
 17255                           ; BSR set to: 0
 17256  0017C2  0101               	movlb	1	; () banked
 17257  0017C4  510B               	movf	___flmul@temp& (0+255),w,b
 17258  0017C6  0101               	movlb	1	; () banked
 17259  0017C8  2702               	addwf	___flmul@grs& (0+255),f,b
 17260  0017CA  0E00               	movlw	0
 17261  0017CC  2303               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17262  0017CE  2304               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17263  0017D0  2305               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17264                           
 17265                           ; BSR set to: 1
 17266  0017D2  0101               	movlb	1	; () banked
 17267  0017D4  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17268  0017D6  0101               	movlb	1	; () banked
 17269  0017D8  2707               	addwf	___flmul@prod& (0+255),f,b
 17270  0017DA  0E00               	movlw	0
 17271  0017DC  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17272  0017DE  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17273  0017E0  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17274  0017E2  0100               	movlb	0	; () banked
 17275  0017E4  51A1               	movf	___flmul@a& (0+255),w,b
 17276  0017E6  0100               	movlb	0	; () banked
 17277  0017E8  039F               	mulwf	(___flmul@b+2)& (0+255),b
 17278  0017EA  CFF3 F10B          	movff	prodl,___flmul@temp
 17279  0017EE  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17280                           
 17281                           ; BSR set to: 0
 17282  0017F2  0101               	movlb	1	; () banked
 17283  0017F4  510B               	movf	___flmul@temp& (0+255),w,b
 17284  0017F6  0101               	movlb	1	; () banked
 17285  0017F8  2702               	addwf	___flmul@grs& (0+255),f,b
 17286  0017FA  0E00               	movlw	0
 17287  0017FC  2303               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17288  0017FE  2304               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17289  001800  2305               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17290                           
 17291                           ; BSR set to: 1
 17292  001802  0101               	movlb	1	; () banked
 17293  001804  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17294  001806  0101               	movlb	1	; () banked
 17295  001808  2707               	addwf	___flmul@prod& (0+255),f,b
 17296  00180A  0E00               	movlw	0
 17297  00180C  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17298  00180E  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17299  001810  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17300                           
 17301                           ; BSR set to: 1
 17302  001812  C104  F105         	movff	___flmul@grs+2,___flmul@grs+3
 17303  001816  C103  F104         	movff	___flmul@grs+1,___flmul@grs+2
 17304  00181A  C102  F103         	movff	___flmul@grs,___flmul@grs+1
 17305  00181E  0101               	movlb	1	; () banked
 17306  001820  6B02               	clrf	___flmul@grs& (0+255),b
 17307                           
 17308                           ; BSR set to: 1
 17309  001822  0100               	movlb	0	; () banked
 17310  001824  51A1               	movf	___flmul@a& (0+255),w,b
 17311  001826  0100               	movlb	0	; () banked
 17312  001828  039E               	mulwf	(___flmul@b+1)& (0+255),b
 17313  00182A  CFF3 F10B          	movff	prodl,___flmul@temp
 17314  00182E  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17315                           
 17316                           ; BSR set to: 0
 17317  001832  0101               	movlb	1	; () banked
 17318  001834  510B               	movf	___flmul@temp& (0+255),w,b
 17319  001836  0101               	movlb	1	; () banked
 17320  001838  2702               	addwf	___flmul@grs& (0+255),f,b
 17321  00183A  0101               	movlb	1	; () banked
 17322  00183C  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17323  00183E  0101               	movlb	1	; () banked
 17324  001840  2303               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17325  001842  0E00               	movlw	0
 17326  001844  0101               	movlb	1	; () banked
 17327  001846  2304               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17328  001848  0E00               	movlw	0
 17329  00184A  0101               	movlb	1	; () banked
 17330  00184C  2305               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17331                           
 17332                           ; BSR set to: 1
 17333  00184E  0100               	movlb	0	; () banked
 17334  001850  51A2               	movf	(___flmul@a+1)& (0+255),w,b
 17335  001852  0100               	movlb	0	; () banked
 17336  001854  039D               	mulwf	___flmul@b& (0+255),b
 17337  001856  CFF3 F10B          	movff	prodl,___flmul@temp
 17338  00185A  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17339                           
 17340                           ; BSR set to: 0
 17341  00185E  0101               	movlb	1	; () banked
 17342  001860  510B               	movf	___flmul@temp& (0+255),w,b
 17343  001862  0101               	movlb	1	; () banked
 17344  001864  2702               	addwf	___flmul@grs& (0+255),f,b
 17345  001866  0101               	movlb	1	; () banked
 17346  001868  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17347  00186A  0101               	movlb	1	; () banked
 17348  00186C  2303               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17349  00186E  0E00               	movlw	0
 17350  001870  0101               	movlb	1	; () banked
 17351  001872  2304               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17352  001874  0E00               	movlw	0
 17353  001876  0101               	movlb	1	; () banked
 17354  001878  2305               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17355                           
 17356                           ; BSR set to: 1
 17357  00187A  C104  F105         	movff	___flmul@grs+2,___flmul@grs+3
 17358  00187E  C103  F104         	movff	___flmul@grs+1,___flmul@grs+2
 17359  001882  C102  F103         	movff	___flmul@grs,___flmul@grs+1
 17360  001886  0101               	movlb	1	; () banked
 17361  001888  6B02               	clrf	___flmul@grs& (0+255),b
 17362  00188A  0100               	movlb	0	; () banked
 17363  00188C  51A1               	movf	___flmul@a& (0+255),w,b
 17364  00188E  0100               	movlb	0	; () banked
 17365  001890  039D               	mulwf	___flmul@b& (0+255),b
 17366  001892  CFF3 F10B          	movff	prodl,___flmul@temp
 17367  001896  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17368                           
 17369                           ; BSR set to: 0
 17370  00189A  0101               	movlb	1	; () banked
 17371  00189C  510B               	movf	___flmul@temp& (0+255),w,b
 17372  00189E  0101               	movlb	1	; () banked
 17373  0018A0  2702               	addwf	___flmul@grs& (0+255),f,b
 17374  0018A2  0101               	movlb	1	; () banked
 17375  0018A4  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17376  0018A6  0101               	movlb	1	; () banked
 17377  0018A8  2303               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17378  0018AA  0E00               	movlw	0
 17379  0018AC  0101               	movlb	1	; () banked
 17380  0018AE  2304               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17381  0018B0  0E00               	movlw	0
 17382  0018B2  0101               	movlb	1	; () banked
 17383  0018B4  2305               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17384                           
 17385                           ; BSR set to: 1
 17386  0018B6  0100               	movlb	0	; () banked
 17387  0018B8  51A3               	movf	(___flmul@a+2)& (0+255),w,b
 17388  0018BA  0100               	movlb	0	; () banked
 17389  0018BC  039E               	mulwf	(___flmul@b+1)& (0+255),b
 17390  0018BE  CFF3 F10B          	movff	prodl,___flmul@temp
 17391  0018C2  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17392  0018C6  0101               	movlb	1	; () banked
 17393  0018C8  510B               	movf	___flmul@temp& (0+255),w,b
 17394  0018CA  0101               	movlb	1	; () banked
 17395  0018CC  2707               	addwf	___flmul@prod& (0+255),f,b
 17396  0018CE  0101               	movlb	1	; () banked
 17397  0018D0  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17398  0018D2  0101               	movlb	1	; () banked
 17399  0018D4  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17400  0018D6  0E00               	movlw	0
 17401  0018D8  0101               	movlb	1	; () banked
 17402  0018DA  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17403  0018DC  0E00               	movlw	0
 17404  0018DE  0101               	movlb	1	; () banked
 17405  0018E0  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17406                           
 17407                           ; BSR set to: 1
 17408  0018E2  0100               	movlb	0	; () banked
 17409  0018E4  51A2               	movf	(___flmul@a+1)& (0+255),w,b
 17410  0018E6  0100               	movlb	0	; () banked
 17411  0018E8  039F               	mulwf	(___flmul@b+2)& (0+255),b
 17412  0018EA  CFF3 F10B          	movff	prodl,___flmul@temp
 17413  0018EE  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17414                           
 17415                           ; BSR set to: 0
 17416  0018F2  0101               	movlb	1	; () banked
 17417  0018F4  510B               	movf	___flmul@temp& (0+255),w,b
 17418  0018F6  0101               	movlb	1	; () banked
 17419  0018F8  2707               	addwf	___flmul@prod& (0+255),f,b
 17420  0018FA  0101               	movlb	1	; () banked
 17421  0018FC  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17422  0018FE  0101               	movlb	1	; () banked
 17423  001900  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17424  001902  0E00               	movlw	0
 17425  001904  0101               	movlb	1	; () banked
 17426  001906  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17427  001908  0E00               	movlw	0
 17428  00190A  0101               	movlb	1	; () banked
 17429  00190C  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17430  00190E  0100               	movlb	0	; () banked
 17431  001910  51A3               	movf	(___flmul@a+2)& (0+255),w,b
 17432  001912  0100               	movlb	0	; () banked
 17433  001914  039F               	mulwf	(___flmul@b+2)& (0+255),b
 17434  001916  CFF3 F10B          	movff	prodl,___flmul@temp
 17435  00191A  CFF4 F10C          	movff	prodh,___flmul@temp+1
 17436                           
 17437                           ; BSR set to: 0
 17438  00191E  0101               	movlb	1	; () banked
 17439  001920  510B               	movf	___flmul@temp& (0+255),w,b
 17440  001922  0100               	movlb	0	; () banked
 17441  001924  6FA5               	movwf	??___flmul& (0+255),b
 17442  001926  0101               	movlb	1	; () banked
 17443  001928  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17444  00192A  0100               	movlb	0	; () banked
 17445  00192C  6FA6               	movwf	(??___flmul+1)& (0+255),b
 17446  00192E  0100               	movlb	0	; () banked
 17447  001930  6BA7               	clrf	(??___flmul+2)& (0+255),b
 17448  001932  0100               	movlb	0	; () banked
 17449  001934  6BA8               	clrf	(??___flmul+3)& (0+255),b
 17450  001936  C0A7  F0A8         	movff	??___flmul+2,??___flmul+3
 17451  00193A  C0A6  F0A7         	movff	??___flmul+1,??___flmul+2
 17452  00193E  C0A5  F0A6         	movff	??___flmul,??___flmul+1
 17453  001942  0100               	movlb	0	; () banked
 17454  001944  6BA5               	clrf	??___flmul& (0+255),b
 17455  001946  0100               	movlb	0	; () banked
 17456  001948  51A5               	movf	??___flmul& (0+255),w,b
 17457  00194A  0101               	movlb	1	; () banked
 17458  00194C  2707               	addwf	___flmul@prod& (0+255),f,b
 17459  00194E  0100               	movlb	0	; () banked
 17460  001950  51A6               	movf	(??___flmul+1)& (0+255),w,b
 17461  001952  0101               	movlb	1	; () banked
 17462  001954  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17463  001956  0100               	movlb	0	; () banked
 17464  001958  51A7               	movf	(??___flmul+2)& (0+255),w,b
 17465  00195A  0101               	movlb	1	; () banked
 17466  00195C  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17467  00195E  0100               	movlb	0	; () banked
 17468  001960  51A8               	movf	(??___flmul+3)& (0+255),w,b
 17469  001962  0101               	movlb	1	; () banked
 17470  001964  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17471                           
 17472                           ; BSR set to: 1
 17473  001966  C102  F0A5         	movff	___flmul@grs,??___flmul
 17474  00196A  C103  F0A6         	movff	___flmul@grs+1,??___flmul+1
 17475  00196E  C104  F0A7         	movff	___flmul@grs+2,??___flmul+2
 17476  001972  C105  F0A8         	movff	___flmul@grs+3,??___flmul+3
 17477  001976  0E19               	movlw	25
 17478  001978  D006               	goto	u11160
 17479  00197A                     u11165:
 17480  00197A  0100               	movlb	0	; () banked
 17481  00197C  90D8               	bcf	status,0,c
 17482  00197E  33A8               	rrcf	(??___flmul+3)& (0+255),f,b
 17483  001980  33A7               	rrcf	(??___flmul+2)& (0+255),f,b
 17484  001982  33A6               	rrcf	(??___flmul+1)& (0+255),f,b
 17485  001984  33A5               	rrcf	??___flmul& (0+255),f,b
 17486  001986                     u11160:
 17487  001986  2EE8               	decfsz	wreg,f,c
 17488  001988  D7F8               	goto	u11165
 17489  00198A  0100               	movlb	0	; () banked
 17490  00198C  51A5               	movf	??___flmul& (0+255),w,b
 17491  00198E  0101               	movlb	1	; () banked
 17492  001990  2707               	addwf	___flmul@prod& (0+255),f,b
 17493  001992  0100               	movlb	0	; () banked
 17494  001994  51A6               	movf	(??___flmul+1)& (0+255),w,b
 17495  001996  0101               	movlb	1	; () banked
 17496  001998  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17497  00199A  0100               	movlb	0	; () banked
 17498  00199C  51A7               	movf	(??___flmul+2)& (0+255),w,b
 17499  00199E  0101               	movlb	1	; () banked
 17500  0019A0  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17501  0019A2  0100               	movlb	0	; () banked
 17502  0019A4  51A8               	movf	(??___flmul+3)& (0+255),w,b
 17503  0019A6  0101               	movlb	1	; () banked
 17504  0019A8  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17505                           
 17506                           ; BSR set to: 1
 17507  0019AA  C104  F105         	movff	___flmul@grs+2,___flmul@grs+3
 17508  0019AE  C103  F104         	movff	___flmul@grs+1,___flmul@grs+2
 17509  0019B2  C102  F103         	movff	___flmul@grs,___flmul@grs+1
 17510  0019B6  0101               	movlb	1	; () banked
 17511  0019B8  6B02               	clrf	___flmul@grs& (0+255),b
 17512                           
 17513                           ; BSR set to: 1
 17514  0019BA  0101               	movlb	1	; () banked
 17515  0019BC  5101               	movf	___flmul@aexp& (0+255),w,b
 17516  0019BE  C106  F0A5         	movff	___flmul@bexp,??___flmul
 17517  0019C2  0100               	movlb	0	; () banked
 17518  0019C4  6BA6               	clrf	(??___flmul+1)& (0+255),b
 17519  0019C6  0100               	movlb	0	; () banked
 17520  0019C8  27A5               	addwf	??___flmul& (0+255),f,b
 17521  0019CA  0E00               	movlw	0
 17522  0019CC  23A6               	addwfc	(??___flmul+1)& (0+255),f,b
 17523  0019CE  0E82               	movlw	130
 17524  0019D0  0100               	movlb	0	; () banked
 17525  0019D2  25A5               	addwf	??___flmul& (0+255),w,b
 17526  0019D4  0101               	movlb	1	; () banked
 17527  0019D6  6F0B               	movwf	___flmul@temp& (0+255),b
 17528  0019D8  0EFF               	movlw	255
 17529  0019DA  0100               	movlb	0	; () banked
 17530  0019DC  21A6               	addwfc	(??___flmul+1)& (0+255),w,b
 17531  0019DE  0101               	movlb	1	; () banked
 17532  0019E0  6F0C               	movwf	(___flmul@temp+1)& (0+255),b
 17533  0019E2  D015               	goto	l8609
 17534  0019E4                     l8603:
 17535                           
 17536                           ; BSR set to: 1
 17537  0019E4  0101               	movlb	1	; () banked
 17538  0019E6  90D8               	bcf	status,0,c
 17539  0019E8  3707               	rlcf	___flmul@prod& (0+255),f,b
 17540  0019EA  3708               	rlcf	(___flmul@prod+1)& (0+255),f,b
 17541  0019EC  3709               	rlcf	(___flmul@prod+2)& (0+255),f,b
 17542  0019EE  370A               	rlcf	(___flmul@prod+3)& (0+255),f,b
 17543                           
 17544                           ; BSR set to: 1
 17545  0019F0  0101               	movlb	1	; () banked
 17546  0019F2  AF05               	btfss	(___flmul@grs+3)& (0+255),7,b
 17547  0019F4  D002               	goto	l1540
 17548                           
 17549                           ; BSR set to: 1
 17550  0019F6  0101               	movlb	1	; () banked
 17551  0019F8  8107               	bsf	___flmul@prod& (0+255),0,b
 17552  0019FA                     l1540:
 17553                           
 17554                           ; BSR set to: 1
 17555  0019FA  0101               	movlb	1	; () banked
 17556  0019FC  90D8               	bcf	status,0,c
 17557  0019FE  3702               	rlcf	___flmul@grs& (0+255),f,b
 17558  001A00  3703               	rlcf	(___flmul@grs+1)& (0+255),f,b
 17559  001A02  3704               	rlcf	(___flmul@grs+2)& (0+255),f,b
 17560  001A04  3705               	rlcf	(___flmul@grs+3)& (0+255),f,b
 17561  001A06  0101               	movlb	1	; () banked
 17562  001A08  070B               	decf	___flmul@temp& (0+255),f,b
 17563  001A0A  A0D8               	btfss	status,0,c
 17564  001A0C  070C               	decf	(___flmul@temp+1)& (0+255),f,b
 17565  001A0E                     l8609:
 17566                           
 17567                           ; BSR set to: 1
 17568  001A0E  0101               	movlb	1	; () banked
 17569  001A10  AF09               	btfss	(___flmul@prod+2)& (0+255),7,b
 17570  001A12  D7E8               	goto	l8603
 17571                           
 17572                           ; BSR set to: 1
 17573                           
 17574                           ; BSR set to: 1
 17575  001A14  0E00               	movlw	0
 17576  001A16  0101               	movlb	1	; () banked
 17577  001A18  6F01               	movwf	___flmul@aexp& (0+255),b
 17578                           
 17579                           ; BSR set to: 1
 17580  001A1A  0101               	movlb	1	; () banked
 17581  001A1C  AF05               	btfss	(___flmul@grs+3)& (0+255),7,b
 17582  001A1E  D024               	goto	l1542
 17583                           
 17584                           ; BSR set to: 1
 17585  001A20  0EFF               	movlw	255
 17586  001A22  0101               	movlb	1	; () banked
 17587  001A24  1502               	andwf	___flmul@grs& (0+255),w,b
 17588  001A26  0100               	movlb	0	; () banked
 17589  001A28  6FA5               	movwf	??___flmul& (0+255),b
 17590  001A2A  0EFF               	movlw	255
 17591  001A2C  0101               	movlb	1	; () banked
 17592  001A2E  1503               	andwf	(___flmul@grs+1)& (0+255),w,b
 17593  001A30  0100               	movlb	0	; () banked
 17594  001A32  6FA6               	movwf	(??___flmul+1)& (0+255),b
 17595  001A34  0EFF               	movlw	255
 17596  001A36  0101               	movlb	1	; () banked
 17597  001A38  1504               	andwf	(___flmul@grs+2)& (0+255),w,b
 17598  001A3A  0100               	movlb	0	; () banked
 17599  001A3C  6FA7               	movwf	(??___flmul+2)& (0+255),b
 17600  001A3E  0E7F               	movlw	127
 17601  001A40  0101               	movlb	1	; () banked
 17602  001A42  1505               	andwf	(___flmul@grs+3)& (0+255),w,b
 17603  001A44  0100               	movlb	0	; () banked
 17604  001A46  6FA8               	movwf	(??___flmul+3)& (0+255),b
 17605  001A48  0100               	movlb	0	; () banked
 17606  001A4A  51A5               	movf	??___flmul& (0+255),w,b
 17607  001A4C  0100               	movlb	0	; () banked
 17608  001A4E  11A6               	iorwf	(??___flmul+1)& (0+255),w,b
 17609  001A50  0100               	movlb	0	; () banked
 17610  001A52  11A7               	iorwf	(??___flmul+2)& (0+255),w,b
 17611  001A54  0100               	movlb	0	; () banked
 17612  001A56  11A8               	iorwf	(??___flmul+3)& (0+255),w,b
 17613  001A58  A4D8               	btfss	status,2,c
 17614  001A5A  D003               	goto	l8619
 17615                           
 17616                           ; BSR set to: 0
 17617                           
 17618                           ; BSR set to: 0
 17619  001A5C  0101               	movlb	1	; () banked
 17620  001A5E  A107               	btfss	___flmul@prod& (0+255),0,b
 17621  001A60  D003               	goto	l1542
 17622  001A62                     l8619:
 17623                           
 17624                           ; BSR set to: 1
 17625  001A62  0E01               	movlw	1
 17626  001A64  0101               	movlb	1	; () banked
 17627  001A66  6F01               	movwf	___flmul@aexp& (0+255),b
 17628  001A68                     l1542:
 17629                           
 17630                           ; BSR set to: 1
 17631  001A68  0101               	movlb	1	; () banked
 17632  001A6A  5101               	movf	___flmul@aexp& (0+255),w,b
 17633  001A6C  0101               	movlb	1	; () banked
 17634  001A6E  B4D8               	btfsc	status,2,c
 17635  001A70  D023               	goto	l8629
 17636                           
 17637                           ; BSR set to: 1
 17638  001A72  0E01               	movlw	1
 17639  001A74  0101               	movlb	1	; () banked
 17640  001A76  2707               	addwf	___flmul@prod& (0+255),f,b
 17641  001A78  0E00               	movlw	0
 17642  001A7A  2308               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17643  001A7C  2309               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17644  001A7E  230A               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17645                           
 17646                           ; BSR set to: 1
 17647  001A80  0101               	movlb	1	; () banked
 17648  001A82  A10A               	btfss	(___flmul@prod+3)& (0+255),0,b
 17649  001A84  D019               	goto	l8629
 17650                           
 17651                           ; BSR set to: 1
 17652  001A86  C107  F0A5         	movff	___flmul@prod,??___flmul
 17653  001A8A  C108  F0A6         	movff	___flmul@prod+1,??___flmul+1
 17654  001A8E  C109  F0A7         	movff	___flmul@prod+2,??___flmul+2
 17655  001A92  C10A  F0A8         	movff	___flmul@prod+3,??___flmul+3
 17656  001A96  0100               	movlb	0	; () banked
 17657  001A98  35A8               	rlcf	(??___flmul+3)& (0+255),w,b
 17658  001A9A  33A8               	rrcf	(??___flmul+3)& (0+255),f,b
 17659  001A9C  33A7               	rrcf	(??___flmul+2)& (0+255),f,b
 17660  001A9E  33A6               	rrcf	(??___flmul+1)& (0+255),f,b
 17661  001AA0  33A5               	rrcf	??___flmul& (0+255),f,b
 17662  001AA2  C0A5  F107         	movff	??___flmul,___flmul@prod
 17663  001AA6  C0A6  F108         	movff	??___flmul+1,___flmul@prod+1
 17664  001AAA  C0A7  F109         	movff	??___flmul+2,___flmul@prod+2
 17665  001AAE  C0A8  F10A         	movff	??___flmul+3,___flmul@prod+3
 17666                           
 17667                           ; BSR set to: 0
 17668  001AB2  0101               	movlb	1	; () banked
 17669  001AB4  4B0B               	infsnz	___flmul@temp& (0+255),f,b
 17670  001AB6  2B0C               	incf	(___flmul@temp+1)& (0+255),f,b
 17671  001AB8                     l8629:
 17672                           
 17673                           ; BSR set to: 1
 17674  001AB8  0101               	movlb	1	; () banked
 17675  001ABA  BF0C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 17676  001ABC  D010               	goto	l8633
 17677  001ABE  0101               	movlb	1	; () banked
 17678  001AC0  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17679  001AC2  E104               	bnz	u11240
 17680  001AC4  0101               	movlb	1	; () banked
 17681  001AC6  290B               	incf	___flmul@temp& (0+255),w,b
 17682  001AC8  A0D8               	btfss	status,0,c
 17683  001ACA  D009               	goto	l8633
 17684  001ACC                     u11240:
 17685                           
 17686                           ; BSR set to: 1
 17687  001ACC  0E00               	movlw	0
 17688  001ACE  0101               	movlb	1	; () banked
 17689  001AD0  6F07               	movwf	___flmul@prod& (0+255),b
 17690  001AD2  0E00               	movlw	0
 17691  001AD4  6F08               	movwf	(___flmul@prod+1)& (0+255),b
 17692  001AD6  0E80               	movlw	128
 17693  001AD8  6F09               	movwf	(___flmul@prod+2)& (0+255),b
 17694  001ADA  0E7F               	movlw	127
 17695  001ADC  D02B               	goto	L10
 17696  001ADE                     l8633:
 17697                           
 17698                           ; BSR set to: 1
 17699  001ADE  0101               	movlb	1	; () banked
 17700  001AE0  BF0C               	btfsc	(___flmul@temp+1)& (0+255),7,b
 17701  001AE2  D007               	goto	l8635
 17702  001AE4  0101               	movlb	1	; () banked
 17703  001AE6  510C               	movf	(___flmul@temp+1)& (0+255),w,b
 17704  001AE8  E111               	bnz	l1550
 17705  001AEA  0101               	movlb	1	; () banked
 17706  001AEC  050B               	decf	___flmul@temp& (0+255),w,b
 17707  001AEE  B0D8               	btfsc	status,0,c
 17708  001AF0  D00D               	goto	l1550
 17709  001AF2                     l8635:
 17710                           
 17711                           ; BSR set to: 1
 17712  001AF2  0E00               	movlw	0
 17713  001AF4  0101               	movlb	1	; () banked
 17714  001AF6  6F07               	movwf	___flmul@prod& (0+255),b
 17715  001AF8  0E00               	movlw	0
 17716  001AFA  6F08               	movwf	(___flmul@prod+1)& (0+255),b
 17717  001AFC  0E00               	movlw	0
 17718  001AFE  6F09               	movwf	(___flmul@prod+2)& (0+255),b
 17719  001B00  0E00               	movlw	0
 17720  001B02  6F0A               	movwf	(___flmul@prod+3)& (0+255),b
 17721  001B04  0E00               	movlw	0
 17722  001B06  0101               	movlb	1	; () banked
 17723  001B08  6F00               	movwf	___flmul@sign& (0+255),b
 17724  001B0A  D015               	goto	l8645
 17725  001B0C                     l1550:
 17726                           
 17727                           ; BSR set to: 1
 17728  001B0C  C10B  F106         	movff	___flmul@temp,___flmul@bexp
 17729                           
 17730                           ; BSR set to: 1
 17731  001B10  0EFF               	movlw	255
 17732  001B12  0101               	movlb	1	; () banked
 17733  001B14  1707               	andwf	___flmul@prod& (0+255),f,b
 17734  001B16  0EFF               	movlw	255
 17735  001B18  1708               	andwf	(___flmul@prod+1)& (0+255),f,b
 17736  001B1A  0E7F               	movlw	127
 17737  001B1C  1709               	andwf	(___flmul@prod+2)& (0+255),f,b
 17738  001B1E  0E00               	movlw	0
 17739  001B20  170A               	andwf	(___flmul@prod+3)& (0+255),f,b
 17740                           
 17741                           ; BSR set to: 1
 17742  001B22  0101               	movlb	1	; () banked
 17743  001B24  A106               	btfss	___flmul@bexp& (0+255),0,b
 17744  001B26  D002               	goto	l8643
 17745                           
 17746                           ; BSR set to: 1
 17747  001B28  0101               	movlb	1	; () banked
 17748  001B2A  8F09               	bsf	(___flmul@prod+2)& (0+255),7,b
 17749  001B2C                     l8643:
 17750                           
 17751                           ; BSR set to: 1
 17752  001B2C  0101               	movlb	1	; () banked
 17753  001B2E  90D8               	bcf	status,0,c
 17754  001B30  3106               	rrcf	___flmul@bexp& (0+255),w,b
 17755  001B32  0101               	movlb	1	; () banked
 17756  001B34                     L10:
 17757  001B34  6F0A               	movwf	(___flmul@prod+3)& (0+255),b
 17758  001B36                     l8645:
 17759                           
 17760                           ; BSR set to: 1
 17761  001B36  0101               	movlb	1	; () banked
 17762  001B38  5100               	movf	___flmul@sign& (0+255),w,b
 17763  001B3A  0101               	movlb	1	; () banked
 17764  001B3C  130A               	iorwf	(___flmul@prod+3)& (0+255),f,b
 17765                           
 17766                           ; BSR set to: 1
 17767  001B3E  C107  F09D         	movff	___flmul@prod,?___flmul
 17768  001B42  C108  F09E         	movff	___flmul@prod+1,?___flmul+1
 17769  001B46  C109  F09F         	movff	___flmul@prod+2,?___flmul+2
 17770  001B4A  C10A  F0A0         	movff	___flmul@prod+3,?___flmul+3
 17771  001B4E  0012               	return	
 17772  001B50                     __end_of___flmul:
 17773                           	opt stack 0
 17774                           tblptru	equ	0xFF8
 17775                           tblptrh	equ	0xFF7
 17776                           tblptrl	equ	0xFF6
 17777                           tablat	equ	0xFF5
 17778                           prodh	equ	0xFF4
 17779                           prodl	equ	0xFF3
 17780                           intcon	equ	0xFF2
 17781                           postinc0	equ	0xFEE
 17782                           wreg	equ	0xFE8
 17783                           postdec1	equ	0xFE5
 17784                           fsr1l	equ	0xFE1
 17785                           indf2	equ	0xFDF
 17786                           postinc2	equ	0xFDE
 17787                           postdec2	equ	0xFDD
 17788                           plusw2	equ	0xFDB
 17789                           fsr2h	equ	0xFDA
 17790                           fsr2l	equ	0xFD9
 17791                           status	equ	0xFD8
 17792                           
 17793 ;; *************** function ___fldiv *****************
 17794 ;; Defined at:
 17795 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 17796 ;; Parameters:    Size  Location     Type
 17797 ;;  b               4   61[BANK0 ] unsigned char 
 17798 ;;  a               4   65[BANK0 ] unsigned char 
 17799 ;; Auto vars:     Size  Location     Type
 17800 ;;  grs             4    7[BANK1 ] unsigned long 
 17801 ;;  rem             4    1[BANK1 ] unsigned long 
 17802 ;;  new_exp         2    5[BANK1 ] int 
 17803 ;;  aexp            1   12[BANK1 ] unsigned char 
 17804 ;;  bexp            1   11[BANK1 ] unsigned char 
 17805 ;;  sign            1    0[BANK1 ] unsigned char 
 17806 ;; Return value:  Size  Location     Type
 17807 ;;                  4   61[BANK0 ] unsigned char 
 17808 ;; Registers used:
 17809 ;;		wreg, status,2, status,0
 17810 ;; Tracked objects:
 17811 ;;		On entry : 0/0
 17812 ;;		On exit  : 0/0
 17813 ;;		Unchanged: 0/0
 17814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17815 ;;      Params:         0       8       0       0       0       0       0
 17816 ;;      Locals:         0       0      13       0       0       0       0
 17817 ;;      Temps:          0       4       0       0       0       0       0
 17818 ;;      Totals:         0      12      13       0       0       0       0
 17819 ;;Total ram usage:       25 bytes
 17820 ;; Hardware stack levels used:    1
 17821 ;; Hardware stack levels required when called:    8
 17822 ;; This function calls:
 17823 ;;		Nothing
 17824 ;; This function is called by:
 17825 ;;		_calcVars2ti
 17826 ;;		_integrator
 17827 ;; This function uses a non-reentrant model
 17828 ;;
 17829                           
 17830                           	psect	text66
 17831  001FF6                     __ptext66:
 17832                           	opt stack 0
 17833  001FF6                     ___fldiv:
 17834                           	opt stack 20
 17835                           
 17836                           ;incstack = 0
 17837  001FF6  0100               	movlb	0	; () banked
 17838  001FF8  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
 17839  001FFA  0B80               	andlw	128
 17840  001FFC  0101               	movlb	1	; () banked
 17841  001FFE  6F00               	movwf	___fldiv@sign& (0+255),b
 17842  002000  0100               	movlb	0	; () banked
 17843  002002  51A0               	movf	(___fldiv@b+3)& (0+255),w,b
 17844  002004  25A0               	addwf	(___fldiv@b+3)& (0+255),w,b
 17845  002006  0101               	movlb	1	; () banked
 17846  002008  6F0B               	movwf	___fldiv@bexp& (0+255),b
 17847                           
 17848                           ; BSR set to: 1
 17849  00200A  0100               	movlb	0	; () banked
 17850  00200C  AF9F               	btfss	(___fldiv@b+2)& (0+255),7,b
 17851  00200E  D002               	goto	l8391
 17852                           
 17853                           ; BSR set to: 0
 17854  002010  0101               	movlb	1	; () banked
 17855  002012  810B               	bsf	___fldiv@bexp& (0+255),0,b
 17856  002014                     l8391:
 17857  002014  0101               	movlb	1	; () banked
 17858  002016  510B               	movf	___fldiv@bexp& (0+255),w,b
 17859  002018  0101               	movlb	1	; () banked
 17860  00201A  B4D8               	btfsc	status,2,c
 17861  00201C  D012               	goto	l8401
 17862                           
 17863                           ; BSR set to: 1
 17864  00201E  0101               	movlb	1	; () banked
 17865  002020  290B               	incf	___fldiv@bexp& (0+255),w,b
 17866  002022  A4D8               	btfss	status,2,c
 17867  002024  D009               	goto	l8397
 17868                           
 17869                           ; BSR set to: 1
 17870  002026  0E00               	movlw	0
 17871  002028  0100               	movlb	0	; () banked
 17872  00202A  6F9D               	movwf	___fldiv@b& (0+255),b
 17873  00202C  0E00               	movlw	0
 17874  00202E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 17875  002030  0E00               	movlw	0
 17876  002032  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 17877  002034  0E00               	movlw	0
 17878  002036  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 17879  002038                     l8397:
 17880  002038  0100               	movlb	0	; () banked
 17881  00203A  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
 17882                           
 17883                           ; BSR set to: 0
 17884  00203C  0E00               	movlw	0
 17885  00203E  0100               	movlb	0	; () banked
 17886  002040  D008               	goto	L11
 17887  002042                     l8401:
 17888  002042  0E00               	movlw	0
 17889  002044  0100               	movlb	0	; () banked
 17890  002046  6F9D               	movwf	___fldiv@b& (0+255),b
 17891  002048  0E00               	movlw	0
 17892  00204A  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 17893  00204C  0E00               	movlw	0
 17894  00204E  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 17895  002050  0E00               	movlw	0
 17896  002052                     L11:
 17897  002052  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 17898                           
 17899                           ; BSR set to: 0
 17900                           
 17901                           ; BSR set to: 0
 17902  002054  0100               	movlb	0	; () banked
 17903  002056  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
 17904  002058  0B80               	andlw	128
 17905  00205A  0101               	movlb	1	; () banked
 17906  00205C  1B00               	xorwf	___fldiv@sign& (0+255),f,b
 17907                           
 17908                           ; BSR set to: 1
 17909  00205E  0100               	movlb	0	; () banked
 17910  002060  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
 17911  002062  25A4               	addwf	(___fldiv@a+3)& (0+255),w,b
 17912  002064  0101               	movlb	1	; () banked
 17913  002066  6F0C               	movwf	___fldiv@aexp& (0+255),b
 17914                           
 17915                           ; BSR set to: 1
 17916  002068  0100               	movlb	0	; () banked
 17917  00206A  AFA3               	btfss	(___fldiv@a+2)& (0+255),7,b
 17918  00206C  D002               	goto	l8411
 17919                           
 17920                           ; BSR set to: 0
 17921  00206E  0101               	movlb	1	; () banked
 17922  002070  810C               	bsf	___fldiv@aexp& (0+255),0,b
 17923  002072                     l8411:
 17924  002072  0101               	movlb	1	; () banked
 17925  002074  510C               	movf	___fldiv@aexp& (0+255),w,b
 17926  002076  0101               	movlb	1	; () banked
 17927  002078  B4D8               	btfsc	status,2,c
 17928  00207A  D012               	goto	l8421
 17929                           
 17930                           ; BSR set to: 1
 17931  00207C  0101               	movlb	1	; () banked
 17932  00207E  290C               	incf	___fldiv@aexp& (0+255),w,b
 17933  002080  A4D8               	btfss	status,2,c
 17934  002082  D009               	goto	l8417
 17935                           
 17936                           ; BSR set to: 1
 17937  002084  0E00               	movlw	0
 17938  002086  0100               	movlb	0	; () banked
 17939  002088  6FA1               	movwf	___fldiv@a& (0+255),b
 17940  00208A  0E00               	movlw	0
 17941  00208C  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
 17942  00208E  0E00               	movlw	0
 17943  002090  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
 17944  002092  0E00               	movlw	0
 17945  002094  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
 17946  002096                     l8417:
 17947  002096  0100               	movlb	0	; () banked
 17948  002098  8FA3               	bsf	(___fldiv@a+2)& (0+255),7,b
 17949                           
 17950                           ; BSR set to: 0
 17951  00209A  0E00               	movlw	0
 17952  00209C  0100               	movlb	0	; () banked
 17953  00209E  D008               	goto	L12
 17954  0020A0                     l8421:
 17955  0020A0  0E00               	movlw	0
 17956  0020A2  0100               	movlb	0	; () banked
 17957  0020A4  6FA1               	movwf	___fldiv@a& (0+255),b
 17958  0020A6  0E00               	movlw	0
 17959  0020A8  6FA2               	movwf	(___fldiv@a+1)& (0+255),b
 17960  0020AA  0E00               	movlw	0
 17961  0020AC  6FA3               	movwf	(___fldiv@a+2)& (0+255),b
 17962  0020AE  0E00               	movlw	0
 17963  0020B0                     L12:
 17964  0020B0  6FA4               	movwf	(___fldiv@a+3)& (0+255),b
 17965                           
 17966                           ; BSR set to: 0
 17967                           
 17968                           ; BSR set to: 0
 17969  0020B2  0100               	movlb	0	; () banked
 17970  0020B4  51A1               	movf	___fldiv@a& (0+255),w,b
 17971  0020B6  0100               	movlb	0	; () banked
 17972  0020B8  11A2               	iorwf	(___fldiv@a+1)& (0+255),w,b
 17973  0020BA  0100               	movlb	0	; () banked
 17974  0020BC  11A3               	iorwf	(___fldiv@a+2)& (0+255),w,b
 17975  0020BE  0100               	movlb	0	; () banked
 17976  0020C0  11A4               	iorwf	(___fldiv@a+3)& (0+255),w,b
 17977  0020C2  A4D8               	btfss	status,2,c
 17978  0020C4  D017               	goto	l8433
 17979                           
 17980                           ; BSR set to: 0
 17981  0020C6  0E00               	movlw	0
 17982  0020C8  0100               	movlb	0	; () banked
 17983  0020CA  6F9D               	movwf	___fldiv@b& (0+255),b
 17984  0020CC  0E00               	movlw	0
 17985  0020CE  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 17986  0020D0  0E00               	movlw	0
 17987  0020D2  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 17988  0020D4  0E00               	movlw	0
 17989  0020D6  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 17990                           
 17991                           ; BSR set to: 0
 17992  0020D8  0100               	movlb	0	; () banked
 17993  0020DA  0E80               	movlw	128
 17994  0020DC  139F               	iorwf	(___fldiv@b+2)& (0+255),f,b
 17995  0020DE  0E7F               	movlw	127
 17996  0020E0  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
 17997                           
 17998                           ; BSR set to: 0
 17999  0020E2  C09D  F09D         	movff	___fldiv@b,?___fldiv
 18000  0020E6  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
 18001  0020EA  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
 18002  0020EE  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
 18003                           
 18004                           ; BSR set to: 0
 18005  0020F2  0012               	return	
 18006  0020F4                     l8433:
 18007                           
 18008                           ; BSR set to: 0
 18009  0020F4  0101               	movlb	1	; () banked
 18010  0020F6  510B               	movf	___fldiv@bexp& (0+255),w,b
 18011  0020F8  0101               	movlb	1	; () banked
 18012  0020FA  A4D8               	btfss	status,2,c
 18013  0020FC  D012               	goto	l8441
 18014                           
 18015                           ; BSR set to: 1
 18016  0020FE  0E00               	movlw	0
 18017  002100  0100               	movlb	0	; () banked
 18018  002102  6F9D               	movwf	___fldiv@b& (0+255),b
 18019  002104  0E00               	movlw	0
 18020  002106  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 18021  002108  0E00               	movlw	0
 18022  00210A  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 18023  00210C  0E00               	movlw	0
 18024  00210E  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 18025                           
 18026                           ; BSR set to: 0
 18027  002110  C09D  F09D         	movff	___fldiv@b,?___fldiv
 18028  002114  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
 18029  002118  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
 18030  00211C  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
 18031                           
 18032                           ; BSR set to: 0
 18033  002120  0012               	return	
 18034  002122                     l8441:
 18035  002122  0101               	movlb	1	; () banked
 18036  002124  510C               	movf	___fldiv@aexp& (0+255),w,b
 18037  002126  0100               	movlb	0	; () banked
 18038  002128  6FA5               	movwf	??___fldiv& (0+255),b
 18039  00212A  6BA6               	clrf	(??___fldiv+1)& (0+255),b
 18040  00212C  0100               	movlb	0	; () banked
 18041  00212E  1FA5               	comf	??___fldiv& (0+255),f,b
 18042  002130  1FA6               	comf	(??___fldiv+1)& (0+255),f,b
 18043  002132  4BA5               	infsnz	??___fldiv& (0+255),f,b
 18044  002134  2BA6               	incf	(??___fldiv+1)& (0+255),f,b
 18045  002136  0101               	movlb	1	; () banked
 18046  002138  510B               	movf	___fldiv@bexp& (0+255),w,b
 18047  00213A  0100               	movlb	0	; () banked
 18048  00213C  6FA7               	movwf	(??___fldiv+2)& (0+255),b
 18049  00213E  6BA8               	clrf	(??___fldiv+3)& (0+255),b
 18050  002140  0100               	movlb	0	; () banked
 18051  002142  51A5               	movf	??___fldiv& (0+255),w,b
 18052  002144  0100               	movlb	0	; () banked
 18053  002146  27A7               	addwf	(??___fldiv+2)& (0+255),f,b
 18054  002148  0100               	movlb	0	; () banked
 18055  00214A  51A6               	movf	(??___fldiv+1)& (0+255),w,b
 18056  00214C  0100               	movlb	0	; () banked
 18057  00214E  23A8               	addwfc	(??___fldiv+3)& (0+255),f,b
 18058  002150  0E7F               	movlw	127
 18059  002152  0100               	movlb	0	; () banked
 18060  002154  25A7               	addwf	(??___fldiv+2)& (0+255),w,b
 18061  002156  0101               	movlb	1	; () banked
 18062  002158  6F05               	movwf	___fldiv@new_exp& (0+255),b
 18063  00215A  0E00               	movlw	0
 18064  00215C  0100               	movlb	0	; () banked
 18065  00215E  21A8               	addwfc	(??___fldiv+3)& (0+255),w,b
 18066  002160  0101               	movlb	1	; () banked
 18067  002162  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18068                           
 18069                           ; BSR set to: 1
 18070  002164  C09D  F101         	movff	___fldiv@b,___fldiv@rem
 18071  002168  C09E  F102         	movff	___fldiv@b+1,___fldiv@rem+1
 18072  00216C  C09F  F103         	movff	___fldiv@b+2,___fldiv@rem+2
 18073  002170  C0A0  F104         	movff	___fldiv@b+3,___fldiv@rem+3
 18074                           
 18075                           ; BSR set to: 1
 18076  002174  0E00               	movlw	0
 18077  002176  0100               	movlb	0	; () banked
 18078  002178  6F9D               	movwf	___fldiv@b& (0+255),b
 18079  00217A  0E00               	movlw	0
 18080  00217C  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 18081  00217E  0E00               	movlw	0
 18082  002180  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 18083  002182  0E00               	movlw	0
 18084  002184  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 18085                           
 18086                           ; BSR set to: 0
 18087  002186  0E00               	movlw	0
 18088  002188  0101               	movlb	1	; () banked
 18089  00218A  6F07               	movwf	___fldiv@grs& (0+255),b
 18090  00218C  0E00               	movlw	0
 18091  00218E  6F08               	movwf	(___fldiv@grs+1)& (0+255),b
 18092  002190  0E00               	movlw	0
 18093  002192  6F09               	movwf	(___fldiv@grs+2)& (0+255),b
 18094  002194  0E00               	movlw	0
 18095  002196  6F0A               	movwf	(___fldiv@grs+3)& (0+255),b
 18096                           
 18097                           ; BSR set to: 1
 18098  002198  0E00               	movlw	0
 18099  00219A  0101               	movlb	1	; () banked
 18100  00219C  6F0C               	movwf	___fldiv@aexp& (0+255),b
 18101  00219E  D042               	goto	l1503
 18102  0021A0                     l8451:
 18103                           
 18104                           ; BSR set to: 1
 18105  0021A0  0101               	movlb	1	; () banked
 18106  0021A2  510C               	movf	___fldiv@aexp& (0+255),w,b
 18107  0021A4  0101               	movlb	1	; () banked
 18108  0021A6  B4D8               	btfsc	status,2,c
 18109  0021A8  D017               	goto	l8459
 18110                           
 18111                           ; BSR set to: 1
 18112  0021AA  0101               	movlb	1	; () banked
 18113  0021AC  90D8               	bcf	status,0,c
 18114  0021AE  3701               	rlcf	___fldiv@rem& (0+255),f,b
 18115  0021B0  3702               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 18116  0021B2  3703               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 18117  0021B4  3704               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 18118  0021B6  0100               	movlb	0	; () banked
 18119  0021B8  90D8               	bcf	status,0,c
 18120  0021BA  379D               	rlcf	___fldiv@b& (0+255),f,b
 18121  0021BC  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18122  0021BE  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18123  0021C0  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18124                           
 18125                           ; BSR set to: 0
 18126  0021C2  0101               	movlb	1	; () banked
 18127  0021C4  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18128  0021C6  D002               	goto	l1506
 18129                           
 18130                           ; BSR set to: 1
 18131  0021C8  0100               	movlb	0	; () banked
 18132  0021CA  819D               	bsf	___fldiv@b& (0+255),0,b
 18133  0021CC                     l1506:
 18134  0021CC  0101               	movlb	1	; () banked
 18135  0021CE  90D8               	bcf	status,0,c
 18136  0021D0  3707               	rlcf	___fldiv@grs& (0+255),f,b
 18137  0021D2  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18138  0021D4  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18139  0021D6  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18140  0021D8                     l8459:
 18141                           
 18142                           ; BSR set to: 1
 18143  0021D8  0100               	movlb	0	; () banked
 18144  0021DA  51A1               	movf	___fldiv@a& (0+255),w,b
 18145  0021DC  0101               	movlb	1	; () banked
 18146  0021DE  5D01               	subwf	___fldiv@rem& (0+255),w,b
 18147  0021E0  0100               	movlb	0	; () banked
 18148  0021E2  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
 18149  0021E4  0101               	movlb	1	; () banked
 18150  0021E6  5902               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 18151  0021E8  0100               	movlb	0	; () banked
 18152  0021EA  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
 18153  0021EC  0101               	movlb	1	; () banked
 18154  0021EE  5903               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 18155  0021F0  0100               	movlb	0	; () banked
 18156  0021F2  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
 18157  0021F4  0101               	movlb	1	; () banked
 18158  0021F6  5904               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 18159  0021F8  A0D8               	btfss	status,0,c
 18160  0021FA  D012               	goto	l8465
 18161                           
 18162                           ; BSR set to: 1
 18163  0021FC  0101               	movlb	1	; () banked
 18164  0021FE  8D0A               	bsf	(___fldiv@grs+3)& (0+255),6,b
 18165                           
 18166                           ; BSR set to: 1
 18167  002200  0100               	movlb	0	; () banked
 18168  002202  51A1               	movf	___fldiv@a& (0+255),w,b
 18169  002204  0101               	movlb	1	; () banked
 18170  002206  5F01               	subwf	___fldiv@rem& (0+255),f,b
 18171  002208  0100               	movlb	0	; () banked
 18172  00220A  51A2               	movf	(___fldiv@a+1)& (0+255),w,b
 18173  00220C  0101               	movlb	1	; () banked
 18174  00220E  5B02               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 18175  002210  0100               	movlb	0	; () banked
 18176  002212  51A3               	movf	(___fldiv@a+2)& (0+255),w,b
 18177  002214  0101               	movlb	1	; () banked
 18178  002216  5B03               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 18179  002218  0100               	movlb	0	; () banked
 18180  00221A  51A4               	movf	(___fldiv@a+3)& (0+255),w,b
 18181  00221C  0101               	movlb	1	; () banked
 18182  00221E  5B04               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 18183  002220                     l8465:
 18184                           
 18185                           ; BSR set to: 1
 18186  002220  0101               	movlb	1	; () banked
 18187  002222  2B0C               	incf	___fldiv@aexp& (0+255),f,b
 18188  002224                     l1503:
 18189                           
 18190                           ; BSR set to: 1
 18191  002224  0E19               	movlw	25
 18192  002226  0101               	movlb	1	; () banked
 18193  002228  650C               	cpfsgt	___fldiv@aexp& (0+255),b
 18194  00222A  D7BA               	goto	l8451
 18195                           
 18196                           ; BSR set to: 1
 18197                           
 18198                           ; BSR set to: 1
 18199  00222C  0101               	movlb	1	; () banked
 18200  00222E  5101               	movf	___fldiv@rem& (0+255),w,b
 18201  002230  0101               	movlb	1	; () banked
 18202  002232  1102               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 18203  002234  0101               	movlb	1	; () banked
 18204  002236  1103               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 18205  002238  0101               	movlb	1	; () banked
 18206  00223A  1104               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 18207  00223C  B4D8               	btfsc	status,2,c
 18208  00223E  D018               	goto	l8477
 18209                           
 18210                           ; BSR set to: 1
 18211  002240  0101               	movlb	1	; () banked
 18212  002242  8107               	bsf	___fldiv@grs& (0+255),0,b
 18213                           
 18214                           ; BSR set to: 1
 18215  002244  D015               	goto	l8477
 18216  002246                     l8471:
 18217  002246  0100               	movlb	0	; () banked
 18218  002248  90D8               	bcf	status,0,c
 18219  00224A  379D               	rlcf	___fldiv@b& (0+255),f,b
 18220  00224C  379E               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18221  00224E  379F               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18222  002250  37A0               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18223                           
 18224                           ; BSR set to: 0
 18225  002252  0101               	movlb	1	; () banked
 18226  002254  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18227  002256  D002               	goto	l1512
 18228                           
 18229                           ; BSR set to: 1
 18230  002258  0100               	movlb	0	; () banked
 18231  00225A  819D               	bsf	___fldiv@b& (0+255),0,b
 18232  00225C                     l1512:
 18233  00225C  0101               	movlb	1	; () banked
 18234  00225E  90D8               	bcf	status,0,c
 18235  002260  3707               	rlcf	___fldiv@grs& (0+255),f,b
 18236  002262  3708               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18237  002264  3709               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18238  002266  370A               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18239  002268  0101               	movlb	1	; () banked
 18240  00226A  0705               	decf	___fldiv@new_exp& (0+255),f,b
 18241  00226C  A0D8               	btfss	status,0,c
 18242  00226E  0706               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 18243  002270                     l8477:
 18244                           
 18245                           ; BSR set to: 1
 18246  002270  0100               	movlb	0	; () banked
 18247  002272  AF9F               	btfss	(___fldiv@b+2)& (0+255),7,b
 18248  002274  D7E8               	goto	l8471
 18249                           
 18250                           ; BSR set to: 0
 18251                           
 18252                           ; BSR set to: 0
 18253  002276  0E00               	movlw	0
 18254  002278  0101               	movlb	1	; () banked
 18255  00227A  6F0C               	movwf	___fldiv@aexp& (0+255),b
 18256                           
 18257                           ; BSR set to: 1
 18258  00227C  0101               	movlb	1	; () banked
 18259  00227E  AF0A               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18260  002280  D024               	goto	l1514
 18261                           
 18262                           ; BSR set to: 1
 18263  002282  0EFF               	movlw	255
 18264  002284  0101               	movlb	1	; () banked
 18265  002286  1507               	andwf	___fldiv@grs& (0+255),w,b
 18266  002288  0100               	movlb	0	; () banked
 18267  00228A  6FA5               	movwf	??___fldiv& (0+255),b
 18268  00228C  0EFF               	movlw	255
 18269  00228E  0101               	movlb	1	; () banked
 18270  002290  1508               	andwf	(___fldiv@grs+1)& (0+255),w,b
 18271  002292  0100               	movlb	0	; () banked
 18272  002294  6FA6               	movwf	(??___fldiv+1)& (0+255),b
 18273  002296  0EFF               	movlw	255
 18274  002298  0101               	movlb	1	; () banked
 18275  00229A  1509               	andwf	(___fldiv@grs+2)& (0+255),w,b
 18276  00229C  0100               	movlb	0	; () banked
 18277  00229E  6FA7               	movwf	(??___fldiv+2)& (0+255),b
 18278  0022A0  0E7F               	movlw	127
 18279  0022A2  0101               	movlb	1	; () banked
 18280  0022A4  150A               	andwf	(___fldiv@grs+3)& (0+255),w,b
 18281  0022A6  0100               	movlb	0	; () banked
 18282  0022A8  6FA8               	movwf	(??___fldiv+3)& (0+255),b
 18283  0022AA  0100               	movlb	0	; () banked
 18284  0022AC  51A5               	movf	??___fldiv& (0+255),w,b
 18285  0022AE  0100               	movlb	0	; () banked
 18286  0022B0  11A6               	iorwf	(??___fldiv+1)& (0+255),w,b
 18287  0022B2  0100               	movlb	0	; () banked
 18288  0022B4  11A7               	iorwf	(??___fldiv+2)& (0+255),w,b
 18289  0022B6  0100               	movlb	0	; () banked
 18290  0022B8  11A8               	iorwf	(??___fldiv+3)& (0+255),w,b
 18291  0022BA  A4D8               	btfss	status,2,c
 18292  0022BC  D003               	goto	l8487
 18293                           
 18294                           ; BSR set to: 0
 18295                           
 18296                           ; BSR set to: 0
 18297  0022BE  0100               	movlb	0	; () banked
 18298  0022C0  A19D               	btfss	___fldiv@b& (0+255),0,b
 18299  0022C2  D003               	goto	l1514
 18300  0022C4                     l8487:
 18301                           
 18302                           ; BSR set to: 0
 18303  0022C4  0E01               	movlw	1
 18304  0022C6  0101               	movlb	1	; () banked
 18305  0022C8  6F0C               	movwf	___fldiv@aexp& (0+255),b
 18306  0022CA                     l1514:
 18307  0022CA  0101               	movlb	1	; () banked
 18308  0022CC  510C               	movf	___fldiv@aexp& (0+255),w,b
 18309  0022CE  0101               	movlb	1	; () banked
 18310  0022D0  B4D8               	btfsc	status,2,c
 18311  0022D2  D023               	goto	l8497
 18312                           
 18313                           ; BSR set to: 1
 18314  0022D4  0E01               	movlw	1
 18315  0022D6  0100               	movlb	0	; () banked
 18316  0022D8  279D               	addwf	___fldiv@b& (0+255),f,b
 18317  0022DA  0E00               	movlw	0
 18318  0022DC  239E               	addwfc	(___fldiv@b+1)& (0+255),f,b
 18319  0022DE  239F               	addwfc	(___fldiv@b+2)& (0+255),f,b
 18320  0022E0  23A0               	addwfc	(___fldiv@b+3)& (0+255),f,b
 18321                           
 18322                           ; BSR set to: 0
 18323  0022E2  0100               	movlb	0	; () banked
 18324  0022E4  A1A0               	btfss	(___fldiv@b+3)& (0+255),0,b
 18325  0022E6  D019               	goto	l8497
 18326                           
 18327                           ; BSR set to: 0
 18328  0022E8  C09D  F0A5         	movff	___fldiv@b,??___fldiv
 18329  0022EC  C09E  F0A6         	movff	___fldiv@b+1,??___fldiv+1
 18330  0022F0  C09F  F0A7         	movff	___fldiv@b+2,??___fldiv+2
 18331  0022F4  C0A0  F0A8         	movff	___fldiv@b+3,??___fldiv+3
 18332  0022F8  0100               	movlb	0	; () banked
 18333  0022FA  35A8               	rlcf	(??___fldiv+3)& (0+255),w,b
 18334  0022FC  33A8               	rrcf	(??___fldiv+3)& (0+255),f,b
 18335  0022FE  33A7               	rrcf	(??___fldiv+2)& (0+255),f,b
 18336  002300  33A6               	rrcf	(??___fldiv+1)& (0+255),f,b
 18337  002302  33A5               	rrcf	??___fldiv& (0+255),f,b
 18338  002304  C0A5  F09D         	movff	??___fldiv,___fldiv@b
 18339  002308  C0A6  F09E         	movff	??___fldiv+1,___fldiv@b+1
 18340  00230C  C0A7  F09F         	movff	??___fldiv+2,___fldiv@b+2
 18341  002310  C0A8  F0A0         	movff	??___fldiv+3,___fldiv@b+3
 18342                           
 18343                           ; BSR set to: 0
 18344  002314  0101               	movlb	1	; () banked
 18345  002316  4B05               	infsnz	___fldiv@new_exp& (0+255),f,b
 18346  002318  2B06               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 18347  00231A                     l8497:
 18348  00231A  0101               	movlb	1	; () banked
 18349  00231C  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18350  00231E  D014               	goto	l8501
 18351  002320  0101               	movlb	1	; () banked
 18352  002322  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18353  002324  E104               	bnz	u11050
 18354  002326  0101               	movlb	1	; () banked
 18355  002328  2905               	incf	___fldiv@new_exp& (0+255),w,b
 18356  00232A  A0D8               	btfss	status,0,c
 18357  00232C  D00D               	goto	l8501
 18358  00232E                     u11050:
 18359                           
 18360                           ; BSR set to: 1
 18361  00232E  0E00               	movlw	0
 18362  002330  0101               	movlb	1	; () banked
 18363  002332  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18364  002334  6905               	setf	___fldiv@new_exp& (0+255),b
 18365  002336  0E00               	movlw	0
 18366  002338  0100               	movlb	0	; () banked
 18367  00233A  6F9D               	movwf	___fldiv@b& (0+255),b
 18368  00233C  0E00               	movlw	0
 18369  00233E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 18370  002340  0E00               	movlw	0
 18371  002342  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 18372  002344  0E00               	movlw	0
 18373  002346  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 18374  002348                     l8501:
 18375  002348  0101               	movlb	1	; () banked
 18376  00234A  BF06               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18377  00234C  D007               	goto	l8503
 18378  00234E  0101               	movlb	1	; () banked
 18379  002350  5106               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18380  002352  E115               	bnz	l8505
 18381  002354  0101               	movlb	1	; () banked
 18382  002356  0505               	decf	___fldiv@new_exp& (0+255),w,b
 18383  002358  B0D8               	btfsc	status,0,c
 18384  00235A  D011               	goto	l8505
 18385  00235C                     l8503:
 18386                           
 18387                           ; BSR set to: 1
 18388  00235C  0E00               	movlw	0
 18389  00235E  0101               	movlb	1	; () banked
 18390  002360  6F06               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18391  002362  0E00               	movlw	0
 18392  002364  6F05               	movwf	___fldiv@new_exp& (0+255),b
 18393  002366  0E00               	movlw	0
 18394  002368  0100               	movlb	0	; () banked
 18395  00236A  6F9D               	movwf	___fldiv@b& (0+255),b
 18396  00236C  0E00               	movlw	0
 18397  00236E  6F9E               	movwf	(___fldiv@b+1)& (0+255),b
 18398  002370  0E00               	movlw	0
 18399  002372  6F9F               	movwf	(___fldiv@b+2)& (0+255),b
 18400  002374  0E00               	movlw	0
 18401  002376  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 18402  002378  0E00               	movlw	0
 18403  00237A  0101               	movlb	1	; () banked
 18404  00237C  6F00               	movwf	___fldiv@sign& (0+255),b
 18405  00237E                     l8505:
 18406                           
 18407                           ; BSR set to: 1
 18408  00237E  C105  F10B         	movff	___fldiv@new_exp,___fldiv@bexp
 18409                           
 18410                           ; BSR set to: 1
 18411  002382  0101               	movlb	1	; () banked
 18412  002384  A10B               	btfss	___fldiv@bexp& (0+255),0,b
 18413  002386  D003               	goto	l8511
 18414                           
 18415                           ; BSR set to: 1
 18416  002388  0100               	movlb	0	; () banked
 18417  00238A  8F9F               	bsf	(___fldiv@b+2)& (0+255),7,b
 18418  00238C  D002               	goto	l8513
 18419  00238E                     l8511:
 18420  00238E  0100               	movlb	0	; () banked
 18421  002390  9F9F               	bcf	(___fldiv@b+2)& (0+255),7,b
 18422  002392                     l8513:
 18423                           
 18424                           ; BSR set to: 0
 18425  002392  0101               	movlb	1	; () banked
 18426  002394  90D8               	bcf	status,0,c
 18427  002396  310B               	rrcf	___fldiv@bexp& (0+255),w,b
 18428  002398  0100               	movlb	0	; () banked
 18429  00239A  6FA0               	movwf	(___fldiv@b+3)& (0+255),b
 18430                           
 18431                           ; BSR set to: 0
 18432  00239C  0101               	movlb	1	; () banked
 18433  00239E  5100               	movf	___fldiv@sign& (0+255),w,b
 18434  0023A0  0100               	movlb	0	; () banked
 18435  0023A2  13A0               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18436                           
 18437                           ; BSR set to: 0
 18438  0023A4  C09D  F09D         	movff	___fldiv@b,?___fldiv
 18439  0023A8  C09E  F09E         	movff	___fldiv@b+1,?___fldiv+1
 18440  0023AC  C09F  F09F         	movff	___fldiv@b+2,?___fldiv+2
 18441  0023B0  C0A0  F0A0         	movff	___fldiv@b+3,?___fldiv+3
 18442  0023B4  0012               	return	
 18443  0023B6                     __end_of___fldiv:
 18444                           	opt stack 0
 18445                           tblptru	equ	0xFF8
 18446                           tblptrh	equ	0xFF7
 18447                           tblptrl	equ	0xFF6
 18448                           tablat	equ	0xFF5
 18449                           prodh	equ	0xFF4
 18450                           prodl	equ	0xFF3
 18451                           intcon	equ	0xFF2
 18452                           postinc0	equ	0xFEE
 18453                           wreg	equ	0xFE8
 18454                           postdec1	equ	0xFE5
 18455                           fsr1l	equ	0xFE1
 18456                           indf2	equ	0xFDF
 18457                           postinc2	equ	0xFDE
 18458                           postdec2	equ	0xFDD
 18459                           plusw2	equ	0xFDB
 18460                           fsr2h	equ	0xFDA
 18461                           fsr2l	equ	0xFD9
 18462                           status	equ	0xFD8
 18463                           
 18464 ;; *************** function _longPressDOWN *****************
 18465 ;; Defined at:
 18466 ;;		line 218 in file "source/DisplayProtocol.h"
 18467 ;; Parameters:    Size  Location     Type
 18468 ;;		None
 18469 ;; Auto vars:     Size  Location     Type
 18470 ;;		None
 18471 ;; Return value:  Size  Location     Type
 18472 ;;                  1    wreg      void 
 18473 ;; Registers used:
 18474 ;;		wreg, status,2, status,0
 18475 ;; Tracked objects:
 18476 ;;		On entry : 0/0
 18477 ;;		On exit  : 0/0
 18478 ;;		Unchanged: 0/0
 18479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18480 ;;      Params:         0       0       0       0       0       0       0
 18481 ;;      Locals:         0       0       0       0       0       0       0
 18482 ;;      Temps:          0       0       0       0       0       0       0
 18483 ;;      Totals:         0       0       0       0       0       0       0
 18484 ;;Total ram usage:        0 bytes
 18485 ;; Hardware stack levels used:    1
 18486 ;; Hardware stack levels required when called:    8
 18487 ;; This function calls:
 18488 ;;		Nothing
 18489 ;; This function is called by:
 18490 ;;		_buttonChecking
 18491 ;; This function uses a non-reentrant model
 18492 ;;
 18493                           
 18494                           	psect	text67
 18495  005F82                     __ptext67:
 18496                           	opt stack 0
 18497  005F82                     _longPressDOWN:
 18498                           	opt stack 21
 18499                           
 18500                           ;DisplayProtocol.h: 219: if (!DOWNisLP) {
 18501                           
 18502                           ; BSR set to: 0
 18503                           ;incstack = 0
 18504  005F82  5037               	movf	_DOWNisLP,w,c
 18505  005F84  A4D8               	btfss	status,2,c
 18506  005F86  0012               	return	
 18507                           
 18508                           ;DisplayProtocol.h: 220: DOWNisLP = 1;
 18509  005F88  0E01               	movlw	1
 18510  005F8A  6E37               	movwf	_DOWNisLP,c
 18511                           
 18512                           ;DisplayProtocol.h: 221: if(actualScreen == 5) {
 18513  005F8C  0E05               	movlw	5
 18514  005F8E  0100               	movlb	0	; () banked
 18515  005F90  19B8               	xorwf	_actualScreen& (0+255),w,b
 18516  005F92  A4D8               	btfss	status,2,c
 18517  005F94  0012               	return	
 18518                           
 18519                           ; BSR set to: 0
 18520                           ;DisplayProtocol.h: 222: if(menuSection == 2)
 18521  005F96  0E02               	movlw	2
 18522  005F98  0101               	movlb	1	; () banked
 18523  005F9A  19B6               	xorwf	_menuSection& (0+255),w,b
 18524  005F9C  A4D8               	btfss	status,2,c
 18525  005F9E  0012               	return	
 18526                           
 18527                           ; BSR set to: 1
 18528                           ;DisplayProtocol.h: 223: chanVals -= 10;
 18529  005FA0  0101               	movlb	1	; () banked
 18530  005FA2  0EF6               	movlw	246
 18531  005FA4  27B4               	addwf	_chanVals& (0+255),f,b
 18532  005FA6  0EFF               	movlw	255
 18533  005FA8  23B5               	addwfc	(_chanVals+1)& (0+255),f,b
 18534                           
 18535                           ; BSR set to: 1
 18536                           
 18537                           ; BSR set to: 1
 18538  005FAA  0012               	return	
 18539  005FAC                     __end_of_longPressDOWN:
 18540                           	opt stack 0
 18541                           tblptru	equ	0xFF8
 18542                           tblptrh	equ	0xFF7
 18543                           tblptrl	equ	0xFF6
 18544                           tablat	equ	0xFF5
 18545                           prodh	equ	0xFF4
 18546                           prodl	equ	0xFF3
 18547                           intcon	equ	0xFF2
 18548                           postinc0	equ	0xFEE
 18549                           wreg	equ	0xFE8
 18550                           postdec1	equ	0xFE5
 18551                           fsr1l	equ	0xFE1
 18552                           indf2	equ	0xFDF
 18553                           postinc2	equ	0xFDE
 18554                           postdec2	equ	0xFDD
 18555                           plusw2	equ	0xFDB
 18556                           fsr2h	equ	0xFDA
 18557                           fsr2l	equ	0xFD9
 18558                           status	equ	0xFD8
 18559                           
 18560 ;; *************** function _delay_ms *****************
 18561 ;; Defined at:
 18562 ;;		line 13 in file "source/../../delay.h"
 18563 ;; Parameters:    Size  Location     Type
 18564 ;;  del             2   47[BANK0 ] int 
 18565 ;; Auto vars:     Size  Location     Type
 18566 ;;  i               2   50[BANK0 ] int 
 18567 ;; Return value:  Size  Location     Type
 18568 ;;                  1    wreg      void 
 18569 ;; Registers used:
 18570 ;;		wreg, status,2, status,0
 18571 ;; Tracked objects:
 18572 ;;		On entry : 0/0
 18573 ;;		On exit  : 0/0
 18574 ;;		Unchanged: 0/0
 18575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18576 ;;      Params:         0       2       0       0       0       0       0
 18577 ;;      Locals:         0       2       0       0       0       0       0
 18578 ;;      Temps:          0       1       0       0       0       0       0
 18579 ;;      Totals:         0       5       0       0       0       0       0
 18580 ;;Total ram usage:        5 bytes
 18581 ;; Hardware stack levels used:    1
 18582 ;; Hardware stack levels required when called:    8
 18583 ;; This function calls:
 18584 ;;		Nothing
 18585 ;; This function is called by:
 18586 ;;		_buttonChecking
 18587 ;; This function uses a non-reentrant model
 18588 ;;
 18589                           
 18590                           	psect	text68
 18591  005C40                     __ptext68:
 18592                           	opt stack 0
 18593  005C40                     _delay_ms:
 18594                           	opt stack 21
 18595                           
 18596                           ;delay.h: 14: for(int i = 1;i <= del;i++)
 18597                           
 18598                           ;incstack = 0
 18599  005C40  0E00               	movlw	0
 18600  005C42  0100               	movlb	0	; () banked
 18601  005C44  6F93               	movwf	(delay_ms@i+1)& (0+255),b
 18602  005C46  0E01               	movlw	1
 18603  005C48  6F92               	movwf	delay_ms@i& (0+255),b
 18604  005C4A  D00C               	goto	l100
 18605  005C4C                     l6783:
 18606                           
 18607                           ; BSR set to: 0
 18608                           ;delay.h: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
 18609  005C4C  0E06               	movlw	6
 18610  005C4E  0100               	movlb	0	; () banked
 18611  005C50  6F91               	movwf	??_delay_ms& (0+255),b
 18612  005C52  0E30               	movlw	48
 18613  005C54                     u14637:
 18614  005C54  2EE8               	decfsz	wreg,f,c
 18615  005C56  D7FE               	goto	u14637
 18616  005C58  2F91               	decfsz	??_delay_ms& (0+255),f,b
 18617  005C5A  D7FC               	goto	u14637
 18618  005C5C  D000               	nop2	
 18619  005C5E  0100               	movlb	0	; () banked
 18620  005C60  4B92               	infsnz	delay_ms@i& (0+255),f,b
 18621  005C62  2B93               	incf	(delay_ms@i+1)& (0+255),f,b
 18622  005C64                     l100:
 18623                           
 18624                           ; BSR set to: 0
 18625  005C64  0100               	movlb	0	; () banked
 18626  005C66  5192               	movf	delay_ms@i& (0+255),w,b
 18627  005C68  0100               	movlb	0	; () banked
 18628  005C6A  5D8F               	subwf	delay_ms@del& (0+255),w,b
 18629  005C6C  0100               	movlb	0	; () banked
 18630  005C6E  5190               	movf	(delay_ms@del+1)& (0+255),w,b
 18631  005C70  0A80               	xorlw	128
 18632  005C72  0100               	movlb	0	; () banked
 18633  005C74  6F91               	movwf	??_delay_ms& (0+255),b
 18634  005C76  0100               	movlb	0	; () banked
 18635  005C78  5193               	movf	(delay_ms@i+1)& (0+255),w,b
 18636  005C7A  0A80               	xorlw	128
 18637  005C7C  0100               	movlb	0	; () banked
 18638  005C7E  5991               	subwfb	??_delay_ms& (0+255),w,b
 18639  005C80  A0D8               	btfss	status,0,c
 18640  005C82  0012               	return	
 18641  005C84  D7E3               	goto	l6783
 18642  005C86                     __end_of_delay_ms:
 18643                           	opt stack 0
 18644                           tblptru	equ	0xFF8
 18645                           tblptrh	equ	0xFF7
 18646                           tblptrl	equ	0xFF6
 18647                           tablat	equ	0xFF5
 18648                           prodh	equ	0xFF4
 18649                           prodl	equ	0xFF3
 18650                           intcon	equ	0xFF2
 18651                           postinc0	equ	0xFEE
 18652                           wreg	equ	0xFE8
 18653                           postdec1	equ	0xFE5
 18654                           fsr1l	equ	0xFE1
 18655                           indf2	equ	0xFDF
 18656                           postinc2	equ	0xFDE
 18657                           postdec2	equ	0xFDD
 18658                           plusw2	equ	0xFDB
 18659                           fsr2h	equ	0xFDA
 18660                           fsr2l	equ	0xFD9
 18661                           status	equ	0xFD8
 18662                           
 18663 ;; *************** function _UARTConfig *****************
 18664 ;; Defined at:
 18665 ;;		line 64 in file "source/UARTConfig.h"
 18666 ;; Parameters:    Size  Location     Type
 18667 ;;		None
 18668 ;; Auto vars:     Size  Location     Type
 18669 ;;		None
 18670 ;; Return value:  Size  Location     Type
 18671 ;;                  1    wreg      void 
 18672 ;; Registers used:
 18673 ;;		wreg, status,2
 18674 ;; Tracked objects:
 18675 ;;		On entry : 0/0
 18676 ;;		On exit  : 0/0
 18677 ;;		Unchanged: 0/0
 18678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18679 ;;      Params:         0       0       0       0       0       0       0
 18680 ;;      Locals:         0       0       0       0       0       0       0
 18681 ;;      Temps:          0       0       0       0       0       0       0
 18682 ;;      Totals:         0       0       0       0       0       0       0
 18683 ;;Total ram usage:        0 bytes
 18684 ;; Hardware stack levels used:    1
 18685 ;; Hardware stack levels required when called:    8
 18686 ;; This function calls:
 18687 ;;		Nothing
 18688 ;; This function is called by:
 18689 ;;		_main
 18690 ;; This function uses a non-reentrant model
 18691 ;;
 18692                           
 18693                           	psect	text69
 18694  005D46                     __ptext69:
 18695                           	opt stack 0
 18696  005D46                     _UARTConfig:
 18697                           	opt stack 22
 18698                           
 18699                           ;UARTConfig.h: 65: RCSTA1bits.SPEN = 0;
 18700                           
 18701                           ; BSR set to: 0
 18702                           ;incstack = 0
 18703  005D46  9EAB               	bcf	4011,7,c	;volatile
 18704                           
 18705                           ;UARTConfig.h: 66: SPBRGH1 = 0;
 18706  005D48  0E00               	movlw	0
 18707  005D4A  6EB0               	movwf	4016,c	;volatile
 18708                           
 18709                           ;UARTConfig.h: 67: SPBRG1 = 34;
 18710  005D4C  0E22               	movlw	34
 18711  005D4E  6EAF               	movwf	4015,c	;volatile
 18712                           
 18713                           ;UARTConfig.h: 68: ANSELCbits.ANSC6 = 0;
 18714  005D50  010F               	movlb	15	; () banked
 18715  005D52  9D3A               	bcf	58,6,b	;volatile
 18716                           
 18717                           ; BSR set to: 15
 18718                           ;UARTConfig.h: 69: ANSELCbits.ANSC7 = 0;
 18719  005D54  010F               	movlb	15	; () banked
 18720  005D56  9F3A               	bcf	58,7,b	;volatile
 18721                           
 18722                           ; BSR set to: 15
 18723                           ;UARTConfig.h: 70: TRISCbits.TRISC6 = 1;
 18724  005D58  8C94               	bsf	3988,6,c	;volatile
 18725                           
 18726                           ; BSR set to: 15
 18727                           ;UARTConfig.h: 71: TRISCbits.TRISC7 = 1;
 18728  005D5A  8E94               	bsf	3988,7,c	;volatile
 18729                           
 18730                           ; BSR set to: 15
 18731                           ;UARTConfig.h: 72: TXSTA1bits.TX9 = 0;
 18732  005D5C  9CAC               	bcf	4012,6,c	;volatile
 18733                           
 18734                           ; BSR set to: 15
 18735                           ;UARTConfig.h: 73: TXSTA1bits.SYNC = 0;
 18736  005D5E  98AC               	bcf	4012,4,c	;volatile
 18737                           
 18738                           ; BSR set to: 15
 18739                           ;UARTConfig.h: 74: TXSTA1bits.SENDB = 0;
 18740  005D60  96AC               	bcf	4012,3,c	;volatile
 18741                           
 18742                           ; BSR set to: 15
 18743                           ;UARTConfig.h: 75: TXSTA1bits.BRGH = 1;
 18744  005D62  84AC               	bsf	4012,2,c	;volatile
 18745                           
 18746                           ; BSR set to: 15
 18747                           ;UARTConfig.h: 76: RCSTA1bits.RX9 = 0;
 18748  005D64  9CAB               	bcf	4011,6,c	;volatile
 18749                           
 18750                           ; BSR set to: 15
 18751                           ;UARTConfig.h: 77: BAUDCON1bits.DTRXP = 0;
 18752  005D66  9AB8               	bcf	4024,5,c	;volatile
 18753                           
 18754                           ; BSR set to: 15
 18755                           ;UARTConfig.h: 78: BAUDCON1bits.CKTXP = 0;
 18756  005D68  98B8               	bcf	4024,4,c	;volatile
 18757                           
 18758                           ; BSR set to: 15
 18759                           ;UARTConfig.h: 79: BAUDCON1bits.BRG16 = 1;
 18760  005D6A  86B8               	bsf	4024,3,c	;volatile
 18761                           
 18762                           ; BSR set to: 15
 18763                           ;UARTConfig.h: 80: BAUDCON1bits.WUE = 0;
 18764  005D6C  92B8               	bcf	4024,1,c	;volatile
 18765                           
 18766                           ; BSR set to: 15
 18767                           ;UARTConfig.h: 81: BAUDCON1bits.ABDEN = 0;
 18768  005D6E  90B8               	bcf	4024,0,c	;volatile
 18769                           
 18770                           ; BSR set to: 15
 18771                           ;UARTConfig.h: 82: RCSTA1bits.CREN = 1;
 18772  005D70  88AB               	bsf	4011,4,c	;volatile
 18773                           
 18774                           ; BSR set to: 15
 18775                           ;UARTConfig.h: 83: TXSTA1bits.TXEN = 1;
 18776  005D72  8AAC               	bsf	4012,5,c	;volatile
 18777                           
 18778                           ; BSR set to: 15
 18779                           ;UARTConfig.h: 84: IPR1bits.RC1IP = 0;
 18780  005D74  9A9F               	bcf	3999,5,c	;volatile
 18781                           
 18782                           ; BSR set to: 15
 18783                           ;UARTConfig.h: 85: PIR1bits.RC1IF = 0;
 18784  005D76  9A9E               	bcf	3998,5,c	;volatile
 18785                           
 18786                           ; BSR set to: 15
 18787                           ;UARTConfig.h: 86: PIE1bits.RC1IE = 1;
 18788  005D78  8A9D               	bsf	3997,5,c	;volatile
 18789                           
 18790                           ; BSR set to: 15
 18791                           ;UARTConfig.h: 87: RCSTA1bits.SPEN = 1;
 18792  005D7A  8EAB               	bsf	4011,7,c	;volatile
 18793                           
 18794                           ; BSR set to: 15
 18795  005D7C  0012               	return		;funcret
 18796  005D7E                     __end_of_UARTConfig:
 18797                           	opt stack 0
 18798                           tblptru	equ	0xFF8
 18799                           tblptrh	equ	0xFF7
 18800                           tblptrl	equ	0xFF6
 18801                           tablat	equ	0xFF5
 18802                           prodh	equ	0xFF4
 18803                           prodl	equ	0xFF3
 18804                           intcon	equ	0xFF2
 18805                           postinc0	equ	0xFEE
 18806                           wreg	equ	0xFE8
 18807                           postdec1	equ	0xFE5
 18808                           fsr1l	equ	0xFE1
 18809                           indf2	equ	0xFDF
 18810                           postinc2	equ	0xFDE
 18811                           postdec2	equ	0xFDD
 18812                           plusw2	equ	0xFDB
 18813                           fsr2h	equ	0xFDA
 18814                           fsr2l	equ	0xFD9
 18815                           status	equ	0xFD8
 18816                           
 18817 ;; *************** function _PWM2Config *****************
 18818 ;; Defined at:
 18819 ;;		line 126 in file "source/PWMConfig.h"
 18820 ;; Parameters:    Size  Location     Type
 18821 ;;		None
 18822 ;; Auto vars:     Size  Location     Type
 18823 ;;		None
 18824 ;; Return value:  Size  Location     Type
 18825 ;;                  1    wreg      void 
 18826 ;; Registers used:
 18827 ;;		wreg, status,2, status,0, cstack
 18828 ;; Tracked objects:
 18829 ;;		On entry : 0/0
 18830 ;;		On exit  : 0/0
 18831 ;;		Unchanged: 0/0
 18832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18833 ;;      Params:         0       0       0       0       0       0       0
 18834 ;;      Locals:         0       0       0       0       0       0       0
 18835 ;;      Temps:          0       0       0       0       0       0       0
 18836 ;;      Totals:         0       0       0       0       0       0       0
 18837 ;;Total ram usage:        0 bytes
 18838 ;; Hardware stack levels used:    1
 18839 ;; Hardware stack levels required when called:    9
 18840 ;; This function calls:
 18841 ;;		_setPWM2duty
 18842 ;;		_t2config
 18843 ;; This function is called by:
 18844 ;;		_main
 18845 ;; This function uses a non-reentrant model
 18846 ;;
 18847                           
 18848                           	psect	text70
 18849  005ABC                     __ptext70:
 18850                           	opt stack 0
 18851  005ABC                     _PWM2Config:
 18852                           	opt stack 21
 18853                           
 18854                           ;PWMConfig.h: 127: TRISCbits.TRISC0 = 1;
 18855                           
 18856                           ; BSR set to: 15
 18857                           ;incstack = 0
 18858  005ABC  8094               	bsf	3988,0,c	;volatile
 18859                           
 18860                           ;PWMConfig.h: 128: TRISCbits.TRISC1 = 1;
 18861  005ABE  8294               	bsf	3988,1,c	;volatile
 18862                           
 18863                           ;PWMConfig.h: 129: PSTR2CONbits.STR2A = 1;
 18864  005AC0  8063               	bsf	3939,0,c	;volatile
 18865                           
 18866                           ;PWMConfig.h: 130: PSTR2CONbits.STR2B = 1;
 18867  005AC2  8263               	bsf	3939,1,c	;volatile
 18868                           
 18869                           ;PWMConfig.h: 131: PSTR2CONbits.STR2C = 0;
 18870  005AC4  9463               	bcf	3939,2,c	;volatile
 18871                           
 18872                           ;PWMConfig.h: 132: PSTR2CONbits.STR2D = 0;
 18873  005AC6  9663               	bcf	3939,3,c	;volatile
 18874                           
 18875                           ;PWMConfig.h: 133: CCPTMRS0bits.C2TSEL = 0b00;
 18876  005AC8  0EE7               	movlw	-25
 18877  005ACA  010F               	movlb	15	; () banked
 18878  005ACC  1749               	andwf	73,f,b	;volatile
 18879                           
 18880                           ;PWMConfig.h: 134: PR2 = 199;
 18881  005ACE  0EC7               	movlw	199
 18882  005AD0  6EBB               	movwf	4027,c	;volatile
 18883                           
 18884                           ; BSR set to: 15
 18885                           ;PWMConfig.h: 135: ECCP2ASbits.CCP2AS = 0b000;
 18886  005AD2  9864               	bcf	3940,4,c	;volatile
 18887  005AD4  9A64               	bcf	3940,5,c	;volatile
 18888  005AD6  9C64               	bcf	3940,6,c	;volatile
 18889                           
 18890                           ;PWMConfig.h: 136: ECCP2ASbits.PSS2AC = 0b00;
 18891  005AD8  0EF3               	movlw	-13
 18892  005ADA  1664               	andwf	3940,f,c	;volatile
 18893                           
 18894                           ;PWMConfig.h: 137: ECCP2ASbits.PSS2BD = 0b00;
 18895  005ADC  0EFC               	movlw	-4
 18896  005ADE  1664               	andwf	3940,f,c	;volatile
 18897                           
 18898                           ; BSR set to: 15
 18899                           ;PWMConfig.h: 138: PWM2CONbits.P2RSEN = 0;
 18900  005AE0  9E65               	bcf	3941,7,c	;volatile
 18901                           
 18902                           ;PWMConfig.h: 139: ECCP2ASbits.CCP2AS = 1;
 18903  005AE2  5064               	movf	3940,w,c	;volatile
 18904  005AE4  0B8F               	andlw	-113
 18905  005AE6  0910               	iorlw	16
 18906  005AE8  6E64               	movwf	3940,c	;volatile
 18907                           
 18908                           ;PWMConfig.h: 140: CCP2CONbits.P2M = 0b10;
 18909  005AEA  5066               	movf	3942,w,c	;volatile
 18910  005AEC  0B3F               	andlw	-193
 18911  005AEE  0980               	iorlw	128
 18912  005AF0  6E66               	movwf	3942,c	;volatile
 18913                           
 18914                           ;PWMConfig.h: 141: CCP2CONbits.CCP2M = 0b1100;
 18915  005AF2  5066               	movf	3942,w,c	;volatile
 18916  005AF4  0BF0               	andlw	-16
 18917  005AF6  090C               	iorlw	12
 18918  005AF8  6E66               	movwf	3942,c	;volatile
 18919                           
 18920                           ; BSR set to: 15
 18921                           ;PWMConfig.h: 142: setPWM2duty(0);
 18922  005AFA  0E00               	movlw	0
 18923  005AFC  0100               	movlb	0	; () banked
 18924  005AFE  6F90               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 18925  005B00  0E00               	movlw	0
 18926  005B02  6F8F               	movwf	setPWM2duty@actuator& (0+255),b
 18927  005B04  EC6F  F029         	call	_setPWM2duty	;wreg free
 18928                           
 18929                           ;PWMConfig.h: 143: PWM2CONbits.P2DC = 16;
 18930  005B08  9065               	bcf	3941,0,c	;volatile
 18931  005B0A  9265               	bcf	3941,1,c	;volatile
 18932  005B0C  9465               	bcf	3941,2,c	;volatile
 18933  005B0E  9665               	bcf	3941,3,c	;volatile
 18934  005B10  8865               	bsf	3941,4,c	;volatile
 18935  005B12  9A65               	bcf	3941,5,c	;volatile
 18936  005B14  9C65               	bcf	3941,6,c	;volatile
 18937                           
 18938                           ;PWMConfig.h: 144: t2config();
 18939  005B16  EC16  F030         	call	_t2config	;wreg free
 18940                           
 18941                           ;PWMConfig.h: 145: TRISCbits.TRISC0 = 0;
 18942  005B1A  9094               	bcf	3988,0,c	;volatile
 18943                           
 18944                           ;PWMConfig.h: 146: TRISCbits.TRISC1 = 0;
 18945  005B1C  9294               	bcf	3988,1,c	;volatile
 18946                           
 18947                           ;PWMConfig.h: 147: ECCP2ASbits.CCP2ASE = 0;
 18948  005B1E  9E64               	bcf	3940,7,c	;volatile
 18949  005B20  0012               	return		;funcret
 18950  005B22                     __end_of_PWM2Config:
 18951                           	opt stack 0
 18952                           tblptru	equ	0xFF8
 18953                           tblptrh	equ	0xFF7
 18954                           tblptrl	equ	0xFF6
 18955                           tablat	equ	0xFF5
 18956                           prodh	equ	0xFF4
 18957                           prodl	equ	0xFF3
 18958                           intcon	equ	0xFF2
 18959                           postinc0	equ	0xFEE
 18960                           wreg	equ	0xFE8
 18961                           postdec1	equ	0xFE5
 18962                           fsr1l	equ	0xFE1
 18963                           indf2	equ	0xFDF
 18964                           postinc2	equ	0xFDE
 18965                           postdec2	equ	0xFDD
 18966                           plusw2	equ	0xFDB
 18967                           fsr2h	equ	0xFDA
 18968                           fsr2l	equ	0xFD9
 18969                           status	equ	0xFD8
 18970                           
 18971 ;; *************** function _t2config *****************
 18972 ;; Defined at:
 18973 ;;		line 22 in file "source/PWMConfig.h"
 18974 ;; Parameters:    Size  Location     Type
 18975 ;;		None
 18976 ;; Auto vars:     Size  Location     Type
 18977 ;;		None
 18978 ;; Return value:  Size  Location     Type
 18979 ;;                  1    wreg      void 
 18980 ;; Registers used:
 18981 ;;		wreg, status,2
 18982 ;; Tracked objects:
 18983 ;;		On entry : 0/0
 18984 ;;		On exit  : 0/0
 18985 ;;		Unchanged: 0/0
 18986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18987 ;;      Params:         0       0       0       0       0       0       0
 18988 ;;      Locals:         0       0       0       0       0       0       0
 18989 ;;      Temps:          0       0       0       0       0       0       0
 18990 ;;      Totals:         0       0       0       0       0       0       0
 18991 ;;Total ram usage:        0 bytes
 18992 ;; Hardware stack levels used:    1
 18993 ;; Hardware stack levels required when called:    8
 18994 ;; This function calls:
 18995 ;;		Nothing
 18996 ;; This function is called by:
 18997 ;;		_PWM2Config
 18998 ;; This function uses a non-reentrant model
 18999 ;;
 19000                           
 19001                           	psect	text71
 19002  00602C                     __ptext71:
 19003                           	opt stack 0
 19004  00602C                     _t2config:
 19005                           	opt stack 21
 19006                           
 19007                           ;PWMConfig.h: 23: T2CONbits.TMR2ON = 0;
 19008                           
 19009                           ;incstack = 0
 19010  00602C  94BA               	bcf	4026,2,c	;volatile
 19011                           
 19012                           ;PWMConfig.h: 24: T2CONbits.T2CKPS = 0b00;
 19013  00602E  0EFC               	movlw	-4
 19014  006030  16BA               	andwf	4026,f,c	;volatile
 19015                           
 19016                           ;PWMConfig.h: 25: T2CONbits.T2OUTPS = 0b1111;
 19017  006032  86BA               	bsf	4026,3,c	;volatile
 19018  006034  88BA               	bsf	4026,4,c	;volatile
 19019  006036  8ABA               	bsf	4026,5,c	;volatile
 19020  006038  8CBA               	bsf	4026,6,c	;volatile
 19021                           
 19022                           ;PWMConfig.h: 27: PIR1bits.TMR2IF = 0;
 19023  00603A  929E               	bcf	3998,1,c	;volatile
 19024                           
 19025                           ;PWMConfig.h: 28: IPR1bits.TMR2IP = 0;
 19026  00603C  929F               	bcf	3999,1,c	;volatile
 19027                           
 19028                           ;PWMConfig.h: 29: PIE1bits.TMR2IE = 1;
 19029  00603E  829D               	bsf	3997,1,c	;volatile
 19030                           
 19031                           ;PWMConfig.h: 30: T2CONbits.TMR2ON = 1;
 19032  006040  84BA               	bsf	4026,2,c	;volatile
 19033  006042  0012               	return		;funcret
 19034  006044                     __end_of_t2config:
 19035                           	opt stack 0
 19036                           tblptru	equ	0xFF8
 19037                           tblptrh	equ	0xFF7
 19038                           tblptrl	equ	0xFF6
 19039                           tablat	equ	0xFF5
 19040                           prodh	equ	0xFF4
 19041                           prodl	equ	0xFF3
 19042                           intcon	equ	0xFF2
 19043                           postinc0	equ	0xFEE
 19044                           wreg	equ	0xFE8
 19045                           postdec1	equ	0xFE5
 19046                           fsr1l	equ	0xFE1
 19047                           indf2	equ	0xFDF
 19048                           postinc2	equ	0xFDE
 19049                           postdec2	equ	0xFDD
 19050                           plusw2	equ	0xFDB
 19051                           fsr2h	equ	0xFDA
 19052                           fsr2l	equ	0xFD9
 19053                           status	equ	0xFD8
 19054                           
 19055 ;; *************** function _setPWM2duty *****************
 19056 ;; Defined at:
 19057 ;;		line 33 in file "source/PWMConfig.h"
 19058 ;; Parameters:    Size  Location     Type
 19059 ;;  actuator        2   47[BANK0 ] short 
 19060 ;; Auto vars:     Size  Location     Type
 19061 ;;  act             2   51[BANK0 ] short 
 19062 ;; Return value:  Size  Location     Type
 19063 ;;                  1    wreg      void 
 19064 ;; Registers used:
 19065 ;;		wreg, status,2, status,0
 19066 ;; Tracked objects:
 19067 ;;		On entry : 0/0
 19068 ;;		On exit  : 0/0
 19069 ;;		Unchanged: 0/0
 19070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19071 ;;      Params:         0       2       0       0       0       0       0
 19072 ;;      Locals:         0       2       0       0       0       0       0
 19073 ;;      Temps:          0       2       0       0       0       0       0
 19074 ;;      Totals:         0       6       0       0       0       0       0
 19075 ;;Total ram usage:        6 bytes
 19076 ;; Hardware stack levels used:    1
 19077 ;; Hardware stack levels required when called:    8
 19078 ;; This function calls:
 19079 ;;		Nothing
 19080 ;; This function is called by:
 19081 ;;		_PWM2Config
 19082 ;;		_pressENTER
 19083 ;;		_main
 19084 ;; This function uses a non-reentrant model
 19085 ;;
 19086                           
 19087                           	psect	text72
 19088  0052DE                     __ptext72:
 19089                           	opt stack 0
 19090  0052DE                     _setPWM2duty:
 19091                           	opt stack 22
 19092                           
 19093                           ;PWMConfig.h: 34: short act = 400;
 19094                           
 19095                           ;incstack = 0
 19096  0052DE  0E01               	movlw	1
 19097  0052E0  0100               	movlb	0	; () banked
 19098  0052E2  6F94               	movwf	(setPWM2duty@act+1)& (0+255),b
 19099  0052E4  0E90               	movlw	144
 19100  0052E6  6F93               	movwf	setPWM2duty@act& (0+255),b
 19101                           
 19102                           ; BSR set to: 0
 19103                           ;PWMConfig.h: 35: if(actuator > 400)
 19104  0052E8  0100               	movlb	0	; () banked
 19105  0052EA  BF90               	btfsc	(setPWM2duty@actuator+1)& (0+255),7,b
 19106  0052EC  D00D               	goto	l6629
 19107  0052EE  0E91               	movlw	145
 19108  0052F0  0100               	movlb	0	; () banked
 19109  0052F2  5D8F               	subwf	setPWM2duty@actuator& (0+255),w,b
 19110  0052F4  0E01               	movlw	1
 19111  0052F6  0100               	movlb	0	; () banked
 19112  0052F8  5990               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 19113  0052FA  A0D8               	btfss	status,0,c
 19114  0052FC  D005               	goto	l6629
 19115                           
 19116                           ; BSR set to: 0
 19117                           ;PWMConfig.h: 36: act = 800;
 19118  0052FE  0E03               	movlw	3
 19119  005300  0100               	movlb	0	; () banked
 19120  005302  6F94               	movwf	(setPWM2duty@act+1)& (0+255),b
 19121  005304  0E20               	movlw	32
 19122  005306  D00F               	goto	L13
 19123  005308                     l6629:
 19124                           
 19125                           ; BSR set to: 0
 19126                           ;PWMConfig.h: 37: else if(actuator < -400)
 19127  005308  0100               	movlb	0	; () banked
 19128  00530A  AF90               	btfss	(setPWM2duty@actuator+1)& (0+255),7,b
 19129  00530C  D00E               	goto	l6633
 19130  00530E  0E70               	movlw	112
 19131  005310  0100               	movlb	0	; () banked
 19132  005312  5D8F               	subwf	setPWM2duty@actuator& (0+255),w,b
 19133  005314  0EFE               	movlw	254
 19134  005316  0100               	movlb	0	; () banked
 19135  005318  5990               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 19136  00531A  B0D8               	btfsc	status,0,c
 19137  00531C  D006               	goto	l6633
 19138                           
 19139                           ; BSR set to: 0
 19140                           ;PWMConfig.h: 38: act = 0;
 19141  00531E  0E00               	movlw	0
 19142  005320  0100               	movlb	0	; () banked
 19143  005322  6F94               	movwf	(setPWM2duty@act+1)& (0+255),b
 19144  005324  0E00               	movlw	0
 19145  005326                     L13:
 19146  005326  6F93               	movwf	setPWM2duty@act& (0+255),b
 19147  005328  D00A               	goto	l486
 19148  00532A                     l6633:
 19149                           
 19150                           ; BSR set to: 0
 19151                           ;PWMConfig.h: 39: else
 19152                           ;PWMConfig.h: 40: act = actuator + 400;
 19153  00532A  0E90               	movlw	144
 19154  00532C  0100               	movlb	0	; () banked
 19155  00532E  258F               	addwf	setPWM2duty@actuator& (0+255),w,b
 19156  005330  0100               	movlb	0	; () banked
 19157  005332  6F93               	movwf	setPWM2duty@act& (0+255),b
 19158  005334  0E01               	movlw	1
 19159  005336  0100               	movlb	0	; () banked
 19160  005338  2190               	addwfc	(setPWM2duty@actuator+1)& (0+255),w,b
 19161  00533A  0100               	movlb	0	; () banked
 19162  00533C  6F94               	movwf	(setPWM2duty@act+1)& (0+255),b
 19163  00533E                     l486:
 19164                           
 19165                           ; BSR set to: 0
 19166                           ;PWMConfig.h: 41: CCP2CONbits.DC2B = act;
 19167  00533E  C093  F091         	movff	setPWM2duty@act,??_setPWM2duty
 19168  005342  0100               	movlb	0	; () banked
 19169  005344  3B91               	swapf	??_setPWM2duty& (0+255),f,b
 19170  005346  5066               	movf	3942,w,c	;volatile
 19171  005348  0100               	movlb	0	; () banked
 19172  00534A  1991               	xorwf	??_setPWM2duty& (0+255),w,b
 19173  00534C  0BCF               	andlw	-49
 19174  00534E  1991               	xorwf	??_setPWM2duty& (0+255),w,b
 19175  005350  6E66               	movwf	3942,c	;volatile
 19176                           
 19177                           ;PWMConfig.h: 42: CCPR2L = act>>2;
 19178  005352  C093  F091         	movff	setPWM2duty@act,??_setPWM2duty
 19179  005356  C094  F092         	movff	setPWM2duty@act+1,??_setPWM2duty+1
 19180  00535A  0100               	movlb	0	; () banked
 19181  00535C  3592               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 19182  00535E  3392               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 19183  005360  3391               	rrcf	??_setPWM2duty& (0+255),f,b
 19184  005362  0100               	movlb	0	; () banked
 19185  005364  3592               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 19186  005366  3392               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 19187  005368  3391               	rrcf	??_setPWM2duty& (0+255),f,b
 19188  00536A  0100               	movlb	0	; () banked
 19189  00536C  5191               	movf	??_setPWM2duty& (0+255),w,b
 19190  00536E  6E67               	movwf	3943,c	;volatile
 19191                           
 19192                           ; BSR set to: 0
 19193  005370  0012               	return		;funcret
 19194  005372                     __end_of_setPWM2duty:
 19195                           	opt stack 0
 19196                           tblptru	equ	0xFF8
 19197                           tblptrh	equ	0xFF7
 19198                           tblptrl	equ	0xFF6
 19199                           tablat	equ	0xFF5
 19200                           prodh	equ	0xFF4
 19201                           prodl	equ	0xFF3
 19202                           intcon	equ	0xFF2
 19203                           postinc0	equ	0xFEE
 19204                           wreg	equ	0xFE8
 19205                           postdec1	equ	0xFE5
 19206                           fsr1l	equ	0xFE1
 19207                           indf2	equ	0xFDF
 19208                           postinc2	equ	0xFDE
 19209                           postdec2	equ	0xFDD
 19210                           plusw2	equ	0xFDB
 19211                           fsr2h	equ	0xFDA
 19212                           fsr2l	equ	0xFD9
 19213                           status	equ	0xFD8
 19214                           
 19215 ;; *************** function _EEPROMConfig *****************
 19216 ;; Defined at:
 19217 ;;		line 51 in file "source/sysParams.h"
 19218 ;; Parameters:    Size  Location     Type
 19219 ;;		None
 19220 ;; Auto vars:     Size  Location     Type
 19221 ;;		None
 19222 ;; Return value:  Size  Location     Type
 19223 ;;                  1    wreg      void 
 19224 ;; Registers used:
 19225 ;;		None
 19226 ;; Tracked objects:
 19227 ;;		On entry : 0/0
 19228 ;;		On exit  : 0/0
 19229 ;;		Unchanged: 0/0
 19230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19231 ;;      Params:         0       0       0       0       0       0       0
 19232 ;;      Locals:         0       0       0       0       0       0       0
 19233 ;;      Temps:          0       0       0       0       0       0       0
 19234 ;;      Totals:         0       0       0       0       0       0       0
 19235 ;;Total ram usage:        0 bytes
 19236 ;; Hardware stack levels used:    1
 19237 ;; Hardware stack levels required when called:    8
 19238 ;; This function calls:
 19239 ;;		Nothing
 19240 ;; This function is called by:
 19241 ;;		_main
 19242 ;; This function uses a non-reentrant model
 19243 ;;
 19244                           
 19245                           	psect	text73
 19246  0060D4                     __ptext73:
 19247                           	opt stack 0
 19248  0060D4                     _EEPROMConfig:
 19249                           	opt stack 22
 19250                           
 19251                           ;sysParams.h: 52: EECON1bits.WREN = 0;
 19252                           
 19253                           ; BSR set to: 0
 19254                           ;incstack = 0
 19255  0060D4  94A6               	bcf	4006,2,c	;volatile
 19256                           
 19257                           ;sysParams.h: 53: EECON1bits.FREE = 0;
 19258  0060D6  98A6               	bcf	4006,4,c	;volatile
 19259  0060D8  0012               	return		;funcret
 19260  0060DA                     __end_of_EEPROMConfig:
 19261                           	opt stack 0
 19262                           tblptru	equ	0xFF8
 19263                           tblptrh	equ	0xFF7
 19264                           tblptrl	equ	0xFF6
 19265                           tablat	equ	0xFF5
 19266                           prodh	equ	0xFF4
 19267                           prodl	equ	0xFF3
 19268                           intcon	equ	0xFF2
 19269                           postinc0	equ	0xFEE
 19270                           wreg	equ	0xFE8
 19271                           postdec1	equ	0xFE5
 19272                           fsr1l	equ	0xFE1
 19273                           indf2	equ	0xFDF
 19274                           postinc2	equ	0xFDE
 19275                           postdec2	equ	0xFDD
 19276                           plusw2	equ	0xFDB
 19277                           fsr2h	equ	0xFDA
 19278                           fsr2l	equ	0xFD9
 19279                           status	equ	0xFD8
 19280                           
 19281 ;; *************** function _isr *****************
 19282 ;; Defined at:
 19283 ;;		line 21 in file "source/main.c"
 19284 ;; Parameters:    Size  Location     Type
 19285 ;;		None
 19286 ;; Auto vars:     Size  Location     Type
 19287 ;;		None
 19288 ;; Return value:  Size  Location     Type
 19289 ;;                  1    wreg      void 
 19290 ;; Registers used:
 19291 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19292 ;; Tracked objects:
 19293 ;;		On entry : 0/0
 19294 ;;		On exit  : 0/0
 19295 ;;		Unchanged: 0/0
 19296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19297 ;;      Params:         0       0       0       0       0       0       0
 19298 ;;      Locals:         0       0       0       0       0       0       0
 19299 ;;      Temps:          0      17       0       0       0       0       0
 19300 ;;      Totals:         0      17       0       0       0       0       0
 19301 ;;Total ram usage:       17 bytes
 19302 ;; Hardware stack levels used:    1
 19303 ;; Hardware stack levels required when called:    7
 19304 ;; This function calls:
 19305 ;;		_T2int
 19306 ;;		_UARTint
 19307 ;; This function is called by:
 19308 ;;		Interrupt level 1
 19309 ;; This function uses a non-reentrant model
 19310 ;;
 19311                           
 19312                           	psect	intcodelo
 19313  000018                     __pintcodelo:
 19314                           	opt stack 0
 19315  000018                     _isr:
 19316                           	opt stack 13
 19317                           
 19318                           ;incstack = 0
 19319  000018  8051               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19320  00001A  CFD8 F07E          	movff	status,??_isr
 19321  00001E  CFE8 F07F          	movff	wreg,??_isr+1
 19322  000022  CFE0 F080          	movff	bsr,??_isr+2
 19323  000026  CFFA F081          	movff	pclath,??_isr+3
 19324  00002A  CFFB F082          	movff	pclatu,??_isr+4
 19325  00002E  CFE9 F083          	movff	fsr0l,??_isr+5
 19326  000032  CFEA F084          	movff	fsr0h,??_isr+6
 19327  000036  CFE1 F085          	movff	fsr1l,??_isr+7
 19328  00003A  CFE2 F086          	movff	fsr1h,??_isr+8
 19329  00003E  CFD9 F087          	movff	fsr2l,??_isr+9
 19330  000042  CFDA F088          	movff	fsr2h,??_isr+10
 19331  000046  CFF3 F089          	movff	prodl,??_isr+11
 19332  00004A  CFF4 F08A          	movff	prodh,??_isr+12
 19333  00004E  CFF6 F08B          	movff	tblptrl,??_isr+13
 19334  000052  CFF7 F08C          	movff	tblptrh,??_isr+14
 19335  000056  CFF8 F08D          	movff	tblptru,??_isr+15
 19336  00005A  CFF5 F08E          	movff	tablat,??_isr+16
 19337                           
 19338                           ;main.c: 22: if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
 19339  00005E  BA9D               	btfsc	3997,5,c	;volatile
 19340  000060  AA9E               	btfss	3998,5,c	;volatile
 19341  000062  D003               	goto	i1l10767
 19342                           
 19343                           ;main.c: 23: UARTint();
 19344  000064  ECDA  F02A         	call	_UARTint	;wreg free
 19345                           
 19346                           ;main.c: 24: PIR1bits.RC1IF = 0;
 19347  000068  9A9E               	bcf	3998,5,c	;volatile
 19348  00006A                     i1l10767:
 19349                           
 19350                           ;main.c: 25: }
 19351                           ;main.c: 26: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
 19352  00006A  B29D               	btfsc	3997,1,c	;volatile
 19353  00006C  A29E               	btfss	3998,1,c	;volatile
 19354  00006E  D003               	goto	i1l823
 19355                           
 19356                           ;main.c: 27: T2int();
 19357  000070  EC5F  F01D         	call	_T2int	;wreg free
 19358                           
 19359                           ;main.c: 28: PIR1bits.TMR2IF = 0;
 19360  000074  929E               	bcf	3998,1,c	;volatile
 19361  000076                     i1l823:
 19362  000076  C08E  FFF5         	movff	??_isr+16,tablat
 19363  00007A  C08D  FFF8         	movff	??_isr+15,tblptru
 19364  00007E  C08C  FFF7         	movff	??_isr+14,tblptrh
 19365  000082  C08B  FFF6         	movff	??_isr+13,tblptrl
 19366  000086  C08A  FFF4         	movff	??_isr+12,prodh
 19367  00008A  C089  FFF3         	movff	??_isr+11,prodl
 19368  00008E  C088  FFDA         	movff	??_isr+10,fsr2h
 19369  000092  C087  FFD9         	movff	??_isr+9,fsr2l
 19370  000096  C086  FFE2         	movff	??_isr+8,fsr1h
 19371  00009A  C085  FFE1         	movff	??_isr+7,fsr1l
 19372  00009E  C084  FFEA         	movff	??_isr+6,fsr0h
 19373  0000A2  C083  FFE9         	movff	??_isr+5,fsr0l
 19374  0000A6  C082  FFFB         	movff	??_isr+4,pclatu
 19375  0000AA  C081  FFFA         	movff	??_isr+3,pclath
 19376  0000AE  C080  FFE0         	movff	??_isr+2,bsr
 19377  0000B2  C07F  FFE8         	movff	??_isr+1,wreg
 19378  0000B6  C07E  FFD8         	movff	??_isr,status
 19379  0000BA  9051               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19380  0000BC  0010               	retfie	
 19381  0000BE                     __end_of_isr:
 19382                           	opt stack 0
 19383                           pclatu	equ	0xFFB
 19384                           pclath	equ	0xFFA
 19385                           tblptru	equ	0xFF8
 19386                           tblptrh	equ	0xFF7
 19387                           tblptrl	equ	0xFF6
 19388                           tablat	equ	0xFF5
 19389                           prodh	equ	0xFF4
 19390                           prodl	equ	0xFF3
 19391                           intcon	equ	0xFF2
 19392                           postinc0	equ	0xFEE
 19393                           fsr0h	equ	0xFEA
 19394                           fsr0l	equ	0xFE9
 19395                           wreg	equ	0xFE8
 19396                           postdec1	equ	0xFE5
 19397                           fsr1h	equ	0xFE2
 19398                           fsr1l	equ	0xFE1
 19399                           bsr	equ	0xFE0
 19400                           indf2	equ	0xFDF
 19401                           postinc2	equ	0xFDE
 19402                           postdec2	equ	0xFDD
 19403                           plusw2	equ	0xFDB
 19404                           fsr2h	equ	0xFDA
 19405                           fsr2l	equ	0xFD9
 19406                           status	equ	0xFD8
 19407                           
 19408 ;; *************** function _UARTint *****************
 19409 ;; Defined at:
 19410 ;;		line 11 in file "source/UARTConfig.h"
 19411 ;; Parameters:    Size  Location     Type
 19412 ;;		None
 19413 ;; Auto vars:     Size  Location     Type
 19414 ;;  sas             1   29[BANK0 ] unsigned char 
 19415 ;; Return value:  Size  Location     Type
 19416 ;;                  1    wreg      void 
 19417 ;; Registers used:
 19418 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19419 ;; Tracked objects:
 19420 ;;		On entry : 0/0
 19421 ;;		On exit  : 0/0
 19422 ;;		Unchanged: 0/0
 19423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19424 ;;      Params:         0       0       0       0       0       0       0
 19425 ;;      Locals:         0       1       0       0       0       0       0
 19426 ;;      Temps:          0       0       0       0       0       0       0
 19427 ;;      Totals:         0       1       0       0       0       0       0
 19428 ;;Total ram usage:        1 bytes
 19429 ;; Hardware stack levels used:    1
 19430 ;; Hardware stack levels required when called:    6
 19431 ;; This function calls:
 19432 ;;		_putchUART
 19433 ;;		_sysParamInit
 19434 ;;		i1_saveSysParams
 19435 ;; This function is called by:
 19436 ;;		_isr
 19437 ;; This function uses a non-reentrant model
 19438 ;;
 19439                           
 19440                           	psect	text75
 19441  0055B4                     __ptext75:
 19442                           	opt stack 0
 19443  0055B4                     _UARTint:
 19444                           	opt stack 13
 19445                           
 19446                           ;UARTConfig.h: 12: char sas = RCREG1;
 19447                           
 19448                           ;incstack = 0
 19449  0055B4  CFAE F07D          	movff	4014,UARTint@sas	;volatile
 19450                           
 19451                           ;UARTConfig.h: 13: if(sas == 'A') {
 19452  0055B8  0E41               	movlw	65
 19453  0055BA  0100               	movlb	0	; () banked
 19454  0055BC  197D               	xorwf	UARTint@sas& (0+255),w,b
 19455  0055BE  A4D8               	btfss	status,2,c
 19456  0055C0  D00D               	goto	i1l10531
 19457                           
 19458                           ; BSR set to: 0
 19459                           ;UARTConfig.h: 14: putchUART(actualScreen);
 19460  0055C2  0100               	movlb	0	; () banked
 19461  0055C4  51B8               	movf	_actualScreen& (0+255),w,b
 19462  0055C6  EC49  F030         	call	_putchUART
 19463                           
 19464                           ;UARTConfig.h: 15: putchUART(menuSection);
 19465  0055CA  0101               	movlb	1	; () banked
 19466  0055CC  51B6               	movf	_menuSection& (0+255),w,b
 19467  0055CE  EC49  F030         	call	_putchUART
 19468                           
 19469                           ;UARTConfig.h: 16: putchUART(passSection);
 19470  0055D2  0100               	movlb	0	; () banked
 19471  0055D4  51C0               	movf	_passSection& (0+255),w,b
 19472  0055D6  EC49  F030         	call	_putchUART
 19473                           
 19474                           ;UARTConfig.h: 17: }else if(sas == 'B') {
 19475  0055DA  0012               	return	
 19476  0055DC                     i1l10531:
 19477  0055DC  0E42               	movlw	66
 19478  0055DE  0100               	movlb	0	; () banked
 19479  0055E0  197D               	xorwf	UARTint@sas& (0+255),w,b
 19480  0055E2  A4D8               	btfss	status,2,c
 19481  0055E4  D003               	goto	i1l10535
 19482                           
 19483                           ; BSR set to: 0
 19484                           ;UARTConfig.h: 18: saveSysParams();
 19485  0055E6  ECB8  F024         	call	i1_saveSysParams	;wreg free
 19486                           
 19487                           ;UARTConfig.h: 19: }else if(sas == 'C') {
 19488  0055EA  0012               	return	
 19489  0055EC                     i1l10535:
 19490  0055EC  0E43               	movlw	67
 19491  0055EE  0100               	movlb	0	; () banked
 19492  0055F0  197D               	xorwf	UARTint@sas& (0+255),w,b
 19493  0055F2  A4D8               	btfss	status,2,c
 19494  0055F4  D003               	goto	i1l10539
 19495                           
 19496                           ; BSR set to: 0
 19497                           ;UARTConfig.h: 20: sysParamInit();
 19498  0055F6  ECF9  F025         	call	_sysParamInit	;wreg free
 19499                           
 19500                           ;UARTConfig.h: 21: }else if(sas == 'D') {
 19501  0055FA  0012               	return	
 19502  0055FC                     i1l10539:
 19503  0055FC  0E44               	movlw	68
 19504  0055FE  0100               	movlb	0	; () banked
 19505  005600  197D               	xorwf	UARTint@sas& (0+255),w,b
 19506  005602  A4D8               	btfss	status,2,c
 19507  005604  0012               	return	
 19508                           
 19509                           ; BSR set to: 0
 19510                           ;UARTConfig.h: 22: putchUART(chanValdig[0]);
 19511  005606  0101               	movlb	1	; () banked
 19512  005608  519E               	movf	_chanValdig& (0+255),w,b
 19513  00560A  EC49  F030         	call	_putchUART
 19514                           
 19515                           ;UARTConfig.h: 23: putchUART(chanValdig[1]);
 19516  00560E  0101               	movlb	1	; () banked
 19517  005610  519F               	movf	(_chanValdig+1)& (0+255),w,b
 19518  005612  EC49  F030         	call	_putchUART
 19519                           
 19520                           ;UARTConfig.h: 24: putchUART(chanValdig[2]);
 19521  005616  0101               	movlb	1	; () banked
 19522  005618  51A0               	movf	(_chanValdig+2)& (0+255),w,b
 19523  00561A  EC49  F030         	call	_putchUART
 19524                           
 19525                           ;UARTConfig.h: 25: putchUART(chanValdig[3]);
 19526  00561E  0101               	movlb	1	; () banked
 19527  005620  51A1               	movf	(_chanValdig+3)& (0+255),w,b
 19528  005622  EC49  F030         	call	_putchUART
 19529                           
 19530                           ;UARTConfig.h: 26: putchUART(chanValdig[4]);
 19531  005626  0101               	movlb	1	; () banked
 19532  005628  51A2               	movf	(_chanValdig+4)& (0+255),w,b
 19533  00562A  EC49  F030         	call	_putchUART
 19534                           
 19535                           ;UARTConfig.h: 27: putchUART(chanValdig[5]);
 19536  00562E  0101               	movlb	1	; () banked
 19537  005630  51A3               	movf	(_chanValdig+5)& (0+255),w,b
 19538  005632  EC49  F030         	call	_putchUART
 19539                           
 19540                           ;UARTConfig.h: 28: }else if(sas == 'E') {
 19541  005636  0012               	return	
 19542  005638                     __end_of_UARTint:
 19543                           	opt stack 0
 19544                           pclatu	equ	0xFFB
 19545                           pclath	equ	0xFFA
 19546                           tblptru	equ	0xFF8
 19547                           tblptrh	equ	0xFF7
 19548                           tblptrl	equ	0xFF6
 19549                           tablat	equ	0xFF5
 19550                           prodh	equ	0xFF4
 19551                           prodl	equ	0xFF3
 19552                           intcon	equ	0xFF2
 19553                           postinc0	equ	0xFEE
 19554                           fsr0h	equ	0xFEA
 19555                           fsr0l	equ	0xFE9
 19556                           wreg	equ	0xFE8
 19557                           postdec1	equ	0xFE5
 19558                           fsr1h	equ	0xFE2
 19559                           fsr1l	equ	0xFE1
 19560                           bsr	equ	0xFE0
 19561                           indf2	equ	0xFDF
 19562                           postinc2	equ	0xFDE
 19563                           postdec2	equ	0xFDD
 19564                           plusw2	equ	0xFDB
 19565                           fsr2h	equ	0xFDA
 19566                           fsr2l	equ	0xFD9
 19567                           status	equ	0xFD8
 19568                           
 19569 ;; *************** function i1_saveSysParams *****************
 19570 ;; Defined at:
 19571 ;;		line 91 in file "source/sysParams.h"
 19572 ;; Parameters:    Size  Location     Type
 19573 ;;		None
 19574 ;; Auto vars:     Size  Location     Type
 19575 ;;		None
 19576 ;; Return value:  Size  Location     Type
 19577 ;;                  1    wreg      void 
 19578 ;; Registers used:
 19579 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19580 ;; Tracked objects:
 19581 ;;		On entry : 0/0
 19582 ;;		On exit  : 0/0
 19583 ;;		Unchanged: 0/0
 19584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19585 ;;      Params:         0       0       0       0       0       0       0
 19586 ;;      Locals:         0       0       0       0       0       0       0
 19587 ;;      Temps:          0       0       0       0       0       0       0
 19588 ;;      Totals:         0       0       0       0       0       0       0
 19589 ;;Total ram usage:        0 bytes
 19590 ;; Hardware stack levels used:    1
 19591 ;; Hardware stack levels required when called:    5
 19592 ;; This function calls:
 19593 ;;		i1_calcVars2ti
 19594 ;;		i1_writeEEPROM
 19595 ;; This function is called by:
 19596 ;;		_UARTint
 19597 ;; This function uses a non-reentrant model
 19598 ;;
 19599                           
 19600                           	psect	text76
 19601  004970                     __ptext76:
 19602                           	opt stack 0
 19603  004970                     i1_saveSysParams:
 19604                           	opt stack 13
 19605                           
 19606                           ;sysParams.h: 92: EECON1bits.WREN = 1;
 19607                           
 19608                           ;incstack = 0
 19609  004970  84A6               	bsf	4006,2,c	;volatile
 19610                           
 19611                           ;sysParams.h: 93: ie = INTCONbits.GIE;
 19612  004972  0E00               	movlw	0
 19613  004974  BEF2               	btfsc	intcon,7,c	;volatile
 19614  004976  0E01               	movlw	1
 19615  004978  0100               	movlb	0	; () banked
 19616  00497A  6FBF               	movwf	_ie& (0+255),b
 19617                           
 19618                           ; BSR set to: 0
 19619                           ;sysParams.h: 94: INTCONbits.GIE = 0;
 19620  00497C  9EF2               	bcf	intcon,7,c	;volatile
 19621                           
 19622                           ; BSR set to: 0
 19623                           ;sysParams.h: 96: fData.floatdat = tiXcorte;
 19624  00497E  C0C3  F0AB         	movff	_tiXcorte,_fData
 19625  004982  C0C4  F0AC         	movff	_tiXcorte+1,_fData+1
 19626  004986  C0C5  F0AD         	movff	_tiXcorte+2,_fData+2
 19627  00498A  C0C6  F0AE         	movff	_tiXcorte+3,_fData+3
 19628                           
 19629                           ; BSR set to: 0
 19630                           ;sysParams.h: 97: writeEEPROM(2, fData.floatMB);
 19631  00498E  C0AE  F060         	movff	_fData+3,i1writeEEPROM@data
 19632  004992  0E02               	movlw	2
 19633  004994  ECF9  F02F         	call	i1_writeEEPROM
 19634                           
 19635                           ;sysParams.h: 98: writeEEPROM(3, fData.floatUB);
 19636  004998  C0AD  F060         	movff	_fData+2,i1writeEEPROM@data
 19637  00499C  0E03               	movlw	3
 19638  00499E  ECF9  F02F         	call	i1_writeEEPROM
 19639                           
 19640                           ;sysParams.h: 99: writeEEPROM(4, fData.floatHB);
 19641  0049A2  C0AC  F060         	movff	_fData+1,i1writeEEPROM@data
 19642  0049A6  0E04               	movlw	4
 19643  0049A8  ECF9  F02F         	call	i1_writeEEPROM
 19644                           
 19645                           ;sysParams.h: 100: writeEEPROM(5, fData.floatLB);
 19646  0049AC  C0AB  F060         	movff	_fData,i1writeEEPROM@data
 19647  0049B0  0E05               	movlw	5
 19648  0049B2  ECF9  F02F         	call	i1_writeEEPROM
 19649                           
 19650                           ;sysParams.h: 101: i16Data.int16dat = numCortes;
 19651  0049B6  C0CB  F0AF         	movff	_numCortes,_i16Data
 19652  0049BA  C0CC  F0B0         	movff	_numCortes+1,_i16Data+1
 19653                           
 19654                           ;sysParams.h: 102: writeEEPROM(6, i16Data.int16HB);
 19655  0049BE  C0B0  F060         	movff	_i16Data+1,i1writeEEPROM@data
 19656  0049C2  0E06               	movlw	6
 19657  0049C4  ECF9  F02F         	call	i1_writeEEPROM
 19658                           
 19659                           ;sysParams.h: 103: writeEEPROM(7, i16Data.int16LB);
 19660  0049C8  C0AF  F060         	movff	_i16Data,i1writeEEPROM@data
 19661  0049CC  0E07               	movlw	7
 19662  0049CE  ECF9  F02F         	call	i1_writeEEPROM
 19663                           
 19664                           ;sysParams.h: 104: fData.floatdat = diamTubo;
 19665  0049D2  C186  F0AB         	movff	_diamTubo,_fData
 19666  0049D6  C187  F0AC         	movff	_diamTubo+1,_fData+1
 19667  0049DA  C188  F0AD         	movff	_diamTubo+2,_fData+2
 19668  0049DE  C189  F0AE         	movff	_diamTubo+3,_fData+3
 19669                           
 19670                           ;sysParams.h: 105: writeEEPROM(8, fData.floatMB);
 19671  0049E2  C0AE  F060         	movff	_fData+3,i1writeEEPROM@data
 19672  0049E6  0E08               	movlw	8
 19673  0049E8  ECF9  F02F         	call	i1_writeEEPROM
 19674                           
 19675                           ;sysParams.h: 106: writeEEPROM(9, fData.floatUB);
 19676  0049EC  C0AD  F060         	movff	_fData+2,i1writeEEPROM@data
 19677  0049F0  0E09               	movlw	9
 19678  0049F2  ECF9  F02F         	call	i1_writeEEPROM
 19679                           
 19680                           ;sysParams.h: 107: writeEEPROM(10, fData.floatHB);
 19681  0049F6  C0AC  F060         	movff	_fData+1,i1writeEEPROM@data
 19682  0049FA  0E0A               	movlw	10
 19683  0049FC  ECF9  F02F         	call	i1_writeEEPROM
 19684                           
 19685                           ;sysParams.h: 108: writeEEPROM(11, fData.floatLB);
 19686  004A00  C0AB  F060         	movff	_fData,i1writeEEPROM@data
 19687  004A04  0E0B               	movlw	11
 19688  004A06  ECF9  F02F         	call	i1_writeEEPROM
 19689                           
 19690                           ;sysParams.h: 114: fData.floatdat = velocidadMasa;
 19691  004A0A  C0C7  F0AB         	movff	_velocidadMasa,_fData
 19692  004A0E  C0C8  F0AC         	movff	_velocidadMasa+1,_fData+1
 19693  004A12  C0C9  F0AD         	movff	_velocidadMasa+2,_fData+2
 19694  004A16  C0CA  F0AE         	movff	_velocidadMasa+3,_fData+3
 19695                           
 19696                           ;sysParams.h: 115: writeEEPROM(16, fData.floatMB);
 19697  004A1A  C0AE  F060         	movff	_fData+3,i1writeEEPROM@data
 19698  004A1E  0E10               	movlw	16
 19699  004A20  ECF9  F02F         	call	i1_writeEEPROM
 19700                           
 19701                           ;sysParams.h: 116: writeEEPROM(17, fData.floatUB);
 19702  004A24  C0AD  F060         	movff	_fData+2,i1writeEEPROM@data
 19703  004A28  0E11               	movlw	17
 19704  004A2A  ECF9  F02F         	call	i1_writeEEPROM
 19705                           
 19706                           ;sysParams.h: 117: writeEEPROM(18, fData.floatHB);
 19707  004A2E  C0AC  F060         	movff	_fData+1,i1writeEEPROM@data
 19708  004A32  0E12               	movlw	18
 19709  004A34  ECF9  F02F         	call	i1_writeEEPROM
 19710                           
 19711                           ;sysParams.h: 118: writeEEPROM(19, fData.floatLB);
 19712  004A38  C0AB  F060         	movff	_fData,i1writeEEPROM@data
 19713  004A3C  0E13               	movlw	19
 19714  004A3E  ECF9  F02F         	call	i1_writeEEPROM
 19715                           
 19716                           ;sysParams.h: 119: EECON1bits.WREN = 0;
 19717  004A42  94A6               	bcf	4006,2,c	;volatile
 19718                           
 19719                           ;sysParams.h: 120: INTCONbits.GIE = ie;
 19720  004A44  0100               	movlb	0	; () banked
 19721  004A46  B1BF               	btfsc	_ie& (0+255),0,b
 19722  004A48  D002               	bra	i1u1373_25
 19723  004A4A  9EF2               	bcf	intcon,7,c	;volatile
 19724  004A4C  D001               	bra	i1u1373_26
 19725  004A4E                     i1u1373_25:
 19726  004A4E  8EF2               	bsf	intcon,7,c	;volatile
 19727  004A50                     i1u1373_26:
 19728                           
 19729                           ;sysParams.h: 121: calcVars2ti();
 19730  004A50  ECF4  F02C         	call	i1_calcVars2ti	;wreg free
 19731  004A54  0012               	return		;funcret
 19732  004A56                     __end_ofi1_saveSysParams:
 19733                           	opt stack 0
 19734                           pclatu	equ	0xFFB
 19735                           pclath	equ	0xFFA
 19736                           tblptru	equ	0xFF8
 19737                           tblptrh	equ	0xFF7
 19738                           tblptrl	equ	0xFF6
 19739                           tablat	equ	0xFF5
 19740                           prodh	equ	0xFF4
 19741                           prodl	equ	0xFF3
 19742                           intcon	equ	0xFF2
 19743                           postinc0	equ	0xFEE
 19744                           fsr0h	equ	0xFEA
 19745                           fsr0l	equ	0xFE9
 19746                           wreg	equ	0xFE8
 19747                           postdec1	equ	0xFE5
 19748                           fsr1h	equ	0xFE2
 19749                           fsr1l	equ	0xFE1
 19750                           bsr	equ	0xFE0
 19751                           indf2	equ	0xFDF
 19752                           postinc2	equ	0xFDE
 19753                           postdec2	equ	0xFDD
 19754                           plusw2	equ	0xFDB
 19755                           fsr2h	equ	0xFDA
 19756                           fsr2l	equ	0xFD9
 19757                           status	equ	0xFD8
 19758                           
 19759 ;; *************** function i1_calcVars2ti *****************
 19760 ;; Defined at:
 19761 ;;		line 67 in file "source/sysParams.h"
 19762 ;; Parameters:    Size  Location     Type
 19763 ;;		None
 19764 ;; Auto vars:     Size  Location     Type
 19765 ;;		None
 19766 ;; Return value:  Size  Location     Type
 19767 ;;                  1    wreg      void 
 19768 ;; Registers used:
 19769 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19770 ;; Tracked objects:
 19771 ;;		On entry : 0/0
 19772 ;;		On exit  : 0/0
 19773 ;;		Unchanged: 0/0
 19774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19775 ;;      Params:         0       0       0       0       0       0       0
 19776 ;;      Locals:         0       0       0       0       0       0       0
 19777 ;;      Temps:          0       0       0       0       0       0       0
 19778 ;;      Totals:         0       0       0       0       0       0       0
 19779 ;;Total ram usage:        0 bytes
 19780 ;; Hardware stack levels used:    1
 19781 ;; Hardware stack levels required when called:    4
 19782 ;; This function calls:
 19783 ;;		i1___fldiv
 19784 ;;		i1___flmul
 19785 ;; This function is called by:
 19786 ;;		i1_saveSysParams
 19787 ;; This function uses a non-reentrant model
 19788 ;;
 19789                           
 19790                           	psect	text77
 19791  0059E8                     __ptext77:
 19792                           	opt stack 0
 19793  0059E8                     i1_calcVars2ti:
 19794                           	opt stack 13
 19795                           
 19796                           ;sysParams.h: 75: tiXcorte = (float)kgXcorte / velocidadMasa;
 19797                           
 19798                           ;incstack = 0
 19799  0059E8  C18A  F060         	movff	_kgXcorte,i1___fldiv@b
 19800  0059EC  C18B  F061         	movff	_kgXcorte+1,i1___fldiv@b+1
 19801  0059F0  C18C  F062         	movff	_kgXcorte+2,i1___fldiv@b+2
 19802  0059F4  C18D  F063         	movff	_kgXcorte+3,i1___fldiv@b+3
 19803  0059F8  C0C7  F064         	movff	_velocidadMasa,i1___fldiv@a
 19804  0059FC  C0C8  F065         	movff	_velocidadMasa+1,i1___fldiv@a+1
 19805  005A00  C0C9  F066         	movff	_velocidadMasa+2,i1___fldiv@a+2
 19806  005A04  C0CA  F067         	movff	_velocidadMasa+3,i1___fldiv@a+3
 19807  005A08  ECDB  F011         	call	i1___fldiv	;wreg free
 19808  005A0C  C060  F0C3         	movff	?i1___fldiv,_tiXcorte
 19809  005A10  C061  F0C4         	movff	?i1___fldiv+1,_tiXcorte+1
 19810  005A14  C062  F0C5         	movff	?i1___fldiv+2,_tiXcorte+2
 19811  005A18  C063  F0C6         	movff	?i1___fldiv+3,_tiXcorte+3
 19812                           
 19813                           ;sysParams.h: 76: timsXcorte = (float)tiXcorte * 1000;
 19814  005A1C  C0C3  F060         	movff	_tiXcorte,i1___flmul@b
 19815  005A20  C0C4  F061         	movff	_tiXcorte+1,i1___flmul@b+1
 19816  005A24  C0C5  F062         	movff	_tiXcorte+2,i1___flmul@b+2
 19817  005A28  C0C6  F063         	movff	_tiXcorte+3,i1___flmul@b+3
 19818  005A2C  0E00               	movlw	0
 19819  005A2E  0100               	movlb	0	; () banked
 19820  005A30  6F64               	movwf	i1___flmul@a& (0+255),b
 19821  005A32  0E00               	movlw	0
 19822  005A34  6F65               	movwf	(i1___flmul@a+1)& (0+255),b
 19823  005A36  0E7A               	movlw	122
 19824  005A38  6F66               	movwf	(i1___flmul@a+2)& (0+255),b
 19825  005A3A  0E44               	movlw	68
 19826  005A3C  6F67               	movwf	(i1___flmul@a+3)& (0+255),b
 19827  005A3E  ECA8  F00D         	call	i1___flmul	;wreg free
 19828  005A42  C060  F047         	movff	?i1___flmul,_timsXcorte
 19829  005A46  C061  F048         	movff	?i1___flmul+1,_timsXcorte+1
 19830  005A4A  C062  F049         	movff	?i1___flmul+2,_timsXcorte+2
 19831  005A4E  C063  F04A         	movff	?i1___flmul+3,_timsXcorte+3
 19832  005A52  0012               	return		;funcret
 19833  005A54                     __end_ofi1_calcVars2ti:
 19834                           	opt stack 0
 19835                           pclatu	equ	0xFFB
 19836                           pclath	equ	0xFFA
 19837                           tblptru	equ	0xFF8
 19838                           tblptrh	equ	0xFF7
 19839                           tblptrl	equ	0xFF6
 19840                           tablat	equ	0xFF5
 19841                           prodh	equ	0xFF4
 19842                           prodl	equ	0xFF3
 19843                           intcon	equ	0xFF2
 19844                           postinc0	equ	0xFEE
 19845                           fsr0h	equ	0xFEA
 19846                           fsr0l	equ	0xFE9
 19847                           wreg	equ	0xFE8
 19848                           postdec1	equ	0xFE5
 19849                           fsr1h	equ	0xFE2
 19850                           fsr1l	equ	0xFE1
 19851                           bsr	equ	0xFE0
 19852                           indf2	equ	0xFDF
 19853                           postinc2	equ	0xFDE
 19854                           postdec2	equ	0xFDD
 19855                           plusw2	equ	0xFDB
 19856                           fsr2h	equ	0xFDA
 19857                           fsr2l	equ	0xFD9
 19858                           status	equ	0xFD8
 19859                           
 19860 ;; *************** function i1___fldiv *****************
 19861 ;; Defined at:
 19862 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 19863 ;; Parameters:    Size  Location     Type
 19864 ;;  b               4    0[BANK0 ] void 
 19865 ;;  a               4    4[BANK0 ] void 
 19866 ;; Auto vars:     Size  Location     Type
 19867 ;;  __fldiv         4   19[BANK0 ] unsigned long 
 19868 ;;  __fldiv         4   13[BANK0 ] unsigned long 
 19869 ;;  __fldiv         2   17[BANK0 ] int 
 19870 ;;  __fldiv         1   24[BANK0 ] unsigned char 
 19871 ;;  __fldiv         1   23[BANK0 ] unsigned char 
 19872 ;;  __fldiv         1   12[BANK0 ] unsigned char 
 19873 ;; Return value:  Size  Location     Type
 19874 ;;                  4    0[BANK0 ] unsigned char 
 19875 ;; Registers used:
 19876 ;;		wreg, status,2, status,0
 19877 ;; Tracked objects:
 19878 ;;		On entry : 0/0
 19879 ;;		On exit  : 0/0
 19880 ;;		Unchanged: 0/0
 19881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19882 ;;      Params:         0       8       0       0       0       0       0
 19883 ;;      Locals:         0      13       0       0       0       0       0
 19884 ;;      Temps:          0       4       0       0       0       0       0
 19885 ;;      Totals:         0      25       0       0       0       0       0
 19886 ;;Total ram usage:       25 bytes
 19887 ;; Hardware stack levels used:    1
 19888 ;; Hardware stack levels required when called:    3
 19889 ;; This function calls:
 19890 ;;		Nothing
 19891 ;; This function is called by:
 19892 ;;		i1_calcVars2ti
 19893 ;; This function uses a non-reentrant model
 19894 ;;
 19895                           
 19896                           	psect	text78
 19897  0023B6                     __ptext78:
 19898                           	opt stack 0
 19899  0023B6                     i1___fldiv:
 19900                           	opt stack 13
 19901                           
 19902                           ;incstack = 0
 19903  0023B6  0100               	movlb	0	; () banked
 19904  0023B8  5163               	movf	(i1___fldiv@b+3)& (0+255),w,b
 19905  0023BA  0B80               	andlw	128
 19906  0023BC  0100               	movlb	0	; () banked
 19907  0023BE  6F6C               	movwf	i1___fldiv@sign& (0+255),b
 19908  0023C0  0100               	movlb	0	; () banked
 19909  0023C2  5163               	movf	(i1___fldiv@b+3)& (0+255),w,b
 19910  0023C4  2563               	addwf	(i1___fldiv@b+3)& (0+255),w,b
 19911  0023C6  0100               	movlb	0	; () banked
 19912  0023C8  6F77               	movwf	i1___fldiv@bexp& (0+255),b
 19913                           
 19914                           ; BSR set to: 0
 19915  0023CA  0100               	movlb	0	; () banked
 19916  0023CC  AF62               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 19917  0023CE  D002               	goto	i1l9501
 19918                           
 19919                           ; BSR set to: 0
 19920  0023D0  0100               	movlb	0	; () banked
 19921  0023D2  8177               	bsf	i1___fldiv@bexp& (0+255),0,b
 19922  0023D4                     i1l9501:
 19923                           
 19924                           ; BSR set to: 0
 19925  0023D4  0100               	movlb	0	; () banked
 19926  0023D6  5177               	movf	i1___fldiv@bexp& (0+255),w,b
 19927  0023D8  0100               	movlb	0	; () banked
 19928  0023DA  B4D8               	btfsc	status,2,c
 19929  0023DC  D012               	goto	i1l9511
 19930                           
 19931                           ; BSR set to: 0
 19932  0023DE  0100               	movlb	0	; () banked
 19933  0023E0  2977               	incf	i1___fldiv@bexp& (0+255),w,b
 19934  0023E2  A4D8               	btfss	status,2,c
 19935  0023E4  D009               	goto	i1l9507
 19936                           
 19937                           ; BSR set to: 0
 19938  0023E6  0E00               	movlw	0
 19939  0023E8  0100               	movlb	0	; () banked
 19940  0023EA  6F60               	movwf	i1___fldiv@b& (0+255),b
 19941  0023EC  0E00               	movlw	0
 19942  0023EE  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 19943  0023F0  0E00               	movlw	0
 19944  0023F2  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 19945  0023F4  0E00               	movlw	0
 19946  0023F6  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 19947  0023F8                     i1l9507:
 19948                           
 19949                           ; BSR set to: 0
 19950  0023F8  0100               	movlb	0	; () banked
 19951  0023FA  8F62               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 19952                           
 19953                           ; BSR set to: 0
 19954  0023FC  0E00               	movlw	0
 19955  0023FE  0100               	movlb	0	; () banked
 19956  002400  D008               	goto	L14
 19957  002402                     i1l9511:
 19958                           
 19959                           ; BSR set to: 0
 19960  002402  0E00               	movlw	0
 19961  002404  0100               	movlb	0	; () banked
 19962  002406  6F60               	movwf	i1___fldiv@b& (0+255),b
 19963  002408  0E00               	movlw	0
 19964  00240A  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 19965  00240C  0E00               	movlw	0
 19966  00240E  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 19967  002410  0E00               	movlw	0
 19968  002412                     L14:
 19969  002412  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 19970                           
 19971                           ; BSR set to: 0
 19972                           
 19973                           ; BSR set to: 0
 19974  002414  0100               	movlb	0	; () banked
 19975  002416  5167               	movf	(i1___fldiv@a+3)& (0+255),w,b
 19976  002418  0B80               	andlw	128
 19977  00241A  0100               	movlb	0	; () banked
 19978  00241C  1B6C               	xorwf	i1___fldiv@sign& (0+255),f,b
 19979                           
 19980                           ; BSR set to: 0
 19981  00241E  0100               	movlb	0	; () banked
 19982  002420  5167               	movf	(i1___fldiv@a+3)& (0+255),w,b
 19983  002422  2567               	addwf	(i1___fldiv@a+3)& (0+255),w,b
 19984  002424  0100               	movlb	0	; () banked
 19985  002426  6F78               	movwf	i1___fldiv@aexp& (0+255),b
 19986                           
 19987                           ; BSR set to: 0
 19988  002428  0100               	movlb	0	; () banked
 19989  00242A  AF66               	btfss	(i1___fldiv@a+2)& (0+255),7,b
 19990  00242C  D002               	goto	i1l9521
 19991                           
 19992                           ; BSR set to: 0
 19993  00242E  0100               	movlb	0	; () banked
 19994  002430  8178               	bsf	i1___fldiv@aexp& (0+255),0,b
 19995  002432                     i1l9521:
 19996                           
 19997                           ; BSR set to: 0
 19998  002432  0100               	movlb	0	; () banked
 19999  002434  5178               	movf	i1___fldiv@aexp& (0+255),w,b
 20000  002436  0100               	movlb	0	; () banked
 20001  002438  B4D8               	btfsc	status,2,c
 20002  00243A  D012               	goto	i1l9531
 20003                           
 20004                           ; BSR set to: 0
 20005  00243C  0100               	movlb	0	; () banked
 20006  00243E  2978               	incf	i1___fldiv@aexp& (0+255),w,b
 20007  002440  A4D8               	btfss	status,2,c
 20008  002442  D009               	goto	i1l9527
 20009                           
 20010                           ; BSR set to: 0
 20011  002444  0E00               	movlw	0
 20012  002446  0100               	movlb	0	; () banked
 20013  002448  6F64               	movwf	i1___fldiv@a& (0+255),b
 20014  00244A  0E00               	movlw	0
 20015  00244C  6F65               	movwf	(i1___fldiv@a+1)& (0+255),b
 20016  00244E  0E00               	movlw	0
 20017  002450  6F66               	movwf	(i1___fldiv@a+2)& (0+255),b
 20018  002452  0E00               	movlw	0
 20019  002454  6F67               	movwf	(i1___fldiv@a+3)& (0+255),b
 20020  002456                     i1l9527:
 20021                           
 20022                           ; BSR set to: 0
 20023  002456  0100               	movlb	0	; () banked
 20024  002458  8F66               	bsf	(i1___fldiv@a+2)& (0+255),7,b
 20025                           
 20026                           ; BSR set to: 0
 20027  00245A  0E00               	movlw	0
 20028  00245C  0100               	movlb	0	; () banked
 20029  00245E  D008               	goto	L15
 20030  002460                     i1l9531:
 20031                           
 20032                           ; BSR set to: 0
 20033  002460  0E00               	movlw	0
 20034  002462  0100               	movlb	0	; () banked
 20035  002464  6F64               	movwf	i1___fldiv@a& (0+255),b
 20036  002466  0E00               	movlw	0
 20037  002468  6F65               	movwf	(i1___fldiv@a+1)& (0+255),b
 20038  00246A  0E00               	movlw	0
 20039  00246C  6F66               	movwf	(i1___fldiv@a+2)& (0+255),b
 20040  00246E  0E00               	movlw	0
 20041  002470                     L15:
 20042  002470  6F67               	movwf	(i1___fldiv@a+3)& (0+255),b
 20043                           
 20044                           ; BSR set to: 0
 20045                           
 20046                           ; BSR set to: 0
 20047  002472  0100               	movlb	0	; () banked
 20048  002474  5164               	movf	i1___fldiv@a& (0+255),w,b
 20049  002476  0100               	movlb	0	; () banked
 20050  002478  1165               	iorwf	(i1___fldiv@a+1)& (0+255),w,b
 20051  00247A  0100               	movlb	0	; () banked
 20052  00247C  1166               	iorwf	(i1___fldiv@a+2)& (0+255),w,b
 20053  00247E  0100               	movlb	0	; () banked
 20054  002480  1167               	iorwf	(i1___fldiv@a+3)& (0+255),w,b
 20055  002482  A4D8               	btfss	status,2,c
 20056  002484  D017               	goto	i1l9543
 20057                           
 20058                           ; BSR set to: 0
 20059  002486  0E00               	movlw	0
 20060  002488  0100               	movlb	0	; () banked
 20061  00248A  6F60               	movwf	i1___fldiv@b& (0+255),b
 20062  00248C  0E00               	movlw	0
 20063  00248E  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 20064  002490  0E00               	movlw	0
 20065  002492  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 20066  002494  0E00               	movlw	0
 20067  002496  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20068                           
 20069                           ; BSR set to: 0
 20070  002498  0100               	movlb	0	; () banked
 20071  00249A  0E80               	movlw	128
 20072  00249C  1362               	iorwf	(i1___fldiv@b+2)& (0+255),f,b
 20073  00249E  0E7F               	movlw	127
 20074  0024A0  1363               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 20075                           
 20076                           ; BSR set to: 0
 20077  0024A2  C060  F060         	movff	i1___fldiv@b,?i1___fldiv
 20078  0024A6  C061  F061         	movff	i1___fldiv@b+1,?i1___fldiv+1
 20079  0024AA  C062  F062         	movff	i1___fldiv@b+2,?i1___fldiv+2
 20080  0024AE  C063  F063         	movff	i1___fldiv@b+3,?i1___fldiv+3
 20081                           
 20082                           ; BSR set to: 0
 20083  0024B2  0012               	return	
 20084  0024B4                     i1l9543:
 20085                           
 20086                           ; BSR set to: 0
 20087  0024B4  0100               	movlb	0	; () banked
 20088  0024B6  5177               	movf	i1___fldiv@bexp& (0+255),w,b
 20089  0024B8  0100               	movlb	0	; () banked
 20090  0024BA  A4D8               	btfss	status,2,c
 20091  0024BC  D012               	goto	i1l9551
 20092                           
 20093                           ; BSR set to: 0
 20094  0024BE  0E00               	movlw	0
 20095  0024C0  0100               	movlb	0	; () banked
 20096  0024C2  6F60               	movwf	i1___fldiv@b& (0+255),b
 20097  0024C4  0E00               	movlw	0
 20098  0024C6  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 20099  0024C8  0E00               	movlw	0
 20100  0024CA  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 20101  0024CC  0E00               	movlw	0
 20102  0024CE  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20103                           
 20104                           ; BSR set to: 0
 20105  0024D0  C060  F060         	movff	i1___fldiv@b,?i1___fldiv
 20106  0024D4  C061  F061         	movff	i1___fldiv@b+1,?i1___fldiv+1
 20107  0024D8  C062  F062         	movff	i1___fldiv@b+2,?i1___fldiv+2
 20108  0024DC  C063  F063         	movff	i1___fldiv@b+3,?i1___fldiv+3
 20109                           
 20110                           ; BSR set to: 0
 20111  0024E0  0012               	return	
 20112  0024E2                     i1l9551:
 20113                           
 20114                           ; BSR set to: 0
 20115  0024E2  0100               	movlb	0	; () banked
 20116  0024E4  5178               	movf	i1___fldiv@aexp& (0+255),w,b
 20117  0024E6  0100               	movlb	0	; () banked
 20118  0024E8  6F68               	movwf	??i1___fldiv& (0+255),b
 20119  0024EA  6B69               	clrf	(??i1___fldiv+1)& (0+255),b
 20120  0024EC  0100               	movlb	0	; () banked
 20121  0024EE  1F68               	comf	??i1___fldiv& (0+255),f,b
 20122  0024F0  1F69               	comf	(??i1___fldiv+1)& (0+255),f,b
 20123  0024F2  4B68               	infsnz	??i1___fldiv& (0+255),f,b
 20124  0024F4  2B69               	incf	(??i1___fldiv+1)& (0+255),f,b
 20125  0024F6  0100               	movlb	0	; () banked
 20126  0024F8  5177               	movf	i1___fldiv@bexp& (0+255),w,b
 20127  0024FA  0100               	movlb	0	; () banked
 20128  0024FC  6F6A               	movwf	(??i1___fldiv+2)& (0+255),b
 20129  0024FE  6B6B               	clrf	(??i1___fldiv+3)& (0+255),b
 20130  002500  0100               	movlb	0	; () banked
 20131  002502  5168               	movf	??i1___fldiv& (0+255),w,b
 20132  002504  0100               	movlb	0	; () banked
 20133  002506  276A               	addwf	(??i1___fldiv+2)& (0+255),f,b
 20134  002508  0100               	movlb	0	; () banked
 20135  00250A  5169               	movf	(??i1___fldiv+1)& (0+255),w,b
 20136  00250C  0100               	movlb	0	; () banked
 20137  00250E  236B               	addwfc	(??i1___fldiv+3)& (0+255),f,b
 20138  002510  0E7F               	movlw	127
 20139  002512  0100               	movlb	0	; () banked
 20140  002514  256A               	addwf	(??i1___fldiv+2)& (0+255),w,b
 20141  002516  0100               	movlb	0	; () banked
 20142  002518  6F71               	movwf	i1___fldiv@new_exp& (0+255),b
 20143  00251A  0E00               	movlw	0
 20144  00251C  0100               	movlb	0	; () banked
 20145  00251E  216B               	addwfc	(??i1___fldiv+3)& (0+255),w,b
 20146  002520  0100               	movlb	0	; () banked
 20147  002522  6F72               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 20148                           
 20149                           ; BSR set to: 0
 20150  002524  C060  F06D         	movff	i1___fldiv@b,i1___fldiv@rem
 20151  002528  C061  F06E         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 20152  00252C  C062  F06F         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 20153  002530  C063  F070         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 20154                           
 20155                           ; BSR set to: 0
 20156  002534  0E00               	movlw	0
 20157  002536  0100               	movlb	0	; () banked
 20158  002538  6F60               	movwf	i1___fldiv@b& (0+255),b
 20159  00253A  0E00               	movlw	0
 20160  00253C  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 20161  00253E  0E00               	movlw	0
 20162  002540  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 20163  002542  0E00               	movlw	0
 20164  002544  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20165                           
 20166                           ; BSR set to: 0
 20167  002546  0E00               	movlw	0
 20168  002548  0100               	movlb	0	; () banked
 20169  00254A  6F73               	movwf	i1___fldiv@grs& (0+255),b
 20170  00254C  0E00               	movlw	0
 20171  00254E  6F74               	movwf	(i1___fldiv@grs+1)& (0+255),b
 20172  002550  0E00               	movlw	0
 20173  002552  6F75               	movwf	(i1___fldiv@grs+2)& (0+255),b
 20174  002554  0E00               	movlw	0
 20175  002556  6F76               	movwf	(i1___fldiv@grs+3)& (0+255),b
 20176                           
 20177                           ; BSR set to: 0
 20178  002558  0E00               	movlw	0
 20179  00255A  0100               	movlb	0	; () banked
 20180  00255C  6F78               	movwf	i1___fldiv@aexp& (0+255),b
 20181  00255E  D042               	goto	i1l1503
 20182  002560                     i1l9561:
 20183                           
 20184                           ; BSR set to: 0
 20185  002560  0100               	movlb	0	; () banked
 20186  002562  5178               	movf	i1___fldiv@aexp& (0+255),w,b
 20187  002564  0100               	movlb	0	; () banked
 20188  002566  B4D8               	btfsc	status,2,c
 20189  002568  D017               	goto	i1l9569
 20190                           
 20191                           ; BSR set to: 0
 20192  00256A  0100               	movlb	0	; () banked
 20193  00256C  90D8               	bcf	status,0,c
 20194  00256E  376D               	rlcf	i1___fldiv@rem& (0+255),f,b
 20195  002570  376E               	rlcf	(i1___fldiv@rem+1)& (0+255),f,b
 20196  002572  376F               	rlcf	(i1___fldiv@rem+2)& (0+255),f,b
 20197  002574  3770               	rlcf	(i1___fldiv@rem+3)& (0+255),f,b
 20198  002576  0100               	movlb	0	; () banked
 20199  002578  90D8               	bcf	status,0,c
 20200  00257A  3760               	rlcf	i1___fldiv@b& (0+255),f,b
 20201  00257C  3761               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 20202  00257E  3762               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 20203  002580  3763               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 20204                           
 20205                           ; BSR set to: 0
 20206  002582  0100               	movlb	0	; () banked
 20207  002584  AF76               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 20208  002586  D002               	goto	i1l1506
 20209                           
 20210                           ; BSR set to: 0
 20211  002588  0100               	movlb	0	; () banked
 20212  00258A  8160               	bsf	i1___fldiv@b& (0+255),0,b
 20213  00258C                     i1l1506:
 20214                           
 20215                           ; BSR set to: 0
 20216  00258C  0100               	movlb	0	; () banked
 20217  00258E  90D8               	bcf	status,0,c
 20218  002590  3773               	rlcf	i1___fldiv@grs& (0+255),f,b
 20219  002592  3774               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 20220  002594  3775               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 20221  002596  3776               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 20222  002598                     i1l9569:
 20223                           
 20224                           ; BSR set to: 0
 20225  002598  0100               	movlb	0	; () banked
 20226  00259A  5164               	movf	i1___fldiv@a& (0+255),w,b
 20227  00259C  0100               	movlb	0	; () banked
 20228  00259E  5D6D               	subwf	i1___fldiv@rem& (0+255),w,b
 20229  0025A0  0100               	movlb	0	; () banked
 20230  0025A2  5165               	movf	(i1___fldiv@a+1)& (0+255),w,b
 20231  0025A4  0100               	movlb	0	; () banked
 20232  0025A6  596E               	subwfb	(i1___fldiv@rem+1)& (0+255),w,b
 20233  0025A8  0100               	movlb	0	; () banked
 20234  0025AA  5166               	movf	(i1___fldiv@a+2)& (0+255),w,b
 20235  0025AC  0100               	movlb	0	; () banked
 20236  0025AE  596F               	subwfb	(i1___fldiv@rem+2)& (0+255),w,b
 20237  0025B0  0100               	movlb	0	; () banked
 20238  0025B2  5167               	movf	(i1___fldiv@a+3)& (0+255),w,b
 20239  0025B4  0100               	movlb	0	; () banked
 20240  0025B6  5970               	subwfb	(i1___fldiv@rem+3)& (0+255),w,b
 20241  0025B8  A0D8               	btfss	status,0,c
 20242  0025BA  D012               	goto	i1l9575
 20243                           
 20244                           ; BSR set to: 0
 20245  0025BC  0100               	movlb	0	; () banked
 20246  0025BE  8D76               	bsf	(i1___fldiv@grs+3)& (0+255),6,b
 20247                           
 20248                           ; BSR set to: 0
 20249  0025C0  0100               	movlb	0	; () banked
 20250  0025C2  5164               	movf	i1___fldiv@a& (0+255),w,b
 20251  0025C4  0100               	movlb	0	; () banked
 20252  0025C6  5F6D               	subwf	i1___fldiv@rem& (0+255),f,b
 20253  0025C8  0100               	movlb	0	; () banked
 20254  0025CA  5165               	movf	(i1___fldiv@a+1)& (0+255),w,b
 20255  0025CC  0100               	movlb	0	; () banked
 20256  0025CE  5B6E               	subwfb	(i1___fldiv@rem+1)& (0+255),f,b
 20257  0025D0  0100               	movlb	0	; () banked
 20258  0025D2  5166               	movf	(i1___fldiv@a+2)& (0+255),w,b
 20259  0025D4  0100               	movlb	0	; () banked
 20260  0025D6  5B6F               	subwfb	(i1___fldiv@rem+2)& (0+255),f,b
 20261  0025D8  0100               	movlb	0	; () banked
 20262  0025DA  5167               	movf	(i1___fldiv@a+3)& (0+255),w,b
 20263  0025DC  0100               	movlb	0	; () banked
 20264  0025DE  5B70               	subwfb	(i1___fldiv@rem+3)& (0+255),f,b
 20265  0025E0                     i1l9575:
 20266                           
 20267                           ; BSR set to: 0
 20268  0025E0  0100               	movlb	0	; () banked
 20269  0025E2  2B78               	incf	i1___fldiv@aexp& (0+255),f,b
 20270  0025E4                     i1l1503:
 20271                           
 20272                           ; BSR set to: 0
 20273  0025E4  0E19               	movlw	25
 20274  0025E6  0100               	movlb	0	; () banked
 20275  0025E8  6578               	cpfsgt	i1___fldiv@aexp& (0+255),b
 20276  0025EA  D7BA               	goto	i1l9561
 20277                           
 20278                           ; BSR set to: 0
 20279                           
 20280                           ; BSR set to: 0
 20281  0025EC  0100               	movlb	0	; () banked
 20282  0025EE  516D               	movf	i1___fldiv@rem& (0+255),w,b
 20283  0025F0  0100               	movlb	0	; () banked
 20284  0025F2  116E               	iorwf	(i1___fldiv@rem+1)& (0+255),w,b
 20285  0025F4  0100               	movlb	0	; () banked
 20286  0025F6  116F               	iorwf	(i1___fldiv@rem+2)& (0+255),w,b
 20287  0025F8  0100               	movlb	0	; () banked
 20288  0025FA  1170               	iorwf	(i1___fldiv@rem+3)& (0+255),w,b
 20289  0025FC  B4D8               	btfsc	status,2,c
 20290  0025FE  D018               	goto	i1l9587
 20291                           
 20292                           ; BSR set to: 0
 20293  002600  0100               	movlb	0	; () banked
 20294  002602  8173               	bsf	i1___fldiv@grs& (0+255),0,b
 20295                           
 20296                           ; BSR set to: 0
 20297  002604  D015               	goto	i1l9587
 20298  002606                     i1l9581:
 20299                           
 20300                           ; BSR set to: 0
 20301  002606  0100               	movlb	0	; () banked
 20302  002608  90D8               	bcf	status,0,c
 20303  00260A  3760               	rlcf	i1___fldiv@b& (0+255),f,b
 20304  00260C  3761               	rlcf	(i1___fldiv@b+1)& (0+255),f,b
 20305  00260E  3762               	rlcf	(i1___fldiv@b+2)& (0+255),f,b
 20306  002610  3763               	rlcf	(i1___fldiv@b+3)& (0+255),f,b
 20307                           
 20308                           ; BSR set to: 0
 20309  002612  0100               	movlb	0	; () banked
 20310  002614  AF76               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 20311  002616  D002               	goto	i1l1512
 20312                           
 20313                           ; BSR set to: 0
 20314  002618  0100               	movlb	0	; () banked
 20315  00261A  8160               	bsf	i1___fldiv@b& (0+255),0,b
 20316  00261C                     i1l1512:
 20317                           
 20318                           ; BSR set to: 0
 20319  00261C  0100               	movlb	0	; () banked
 20320  00261E  90D8               	bcf	status,0,c
 20321  002620  3773               	rlcf	i1___fldiv@grs& (0+255),f,b
 20322  002622  3774               	rlcf	(i1___fldiv@grs+1)& (0+255),f,b
 20323  002624  3775               	rlcf	(i1___fldiv@grs+2)& (0+255),f,b
 20324  002626  3776               	rlcf	(i1___fldiv@grs+3)& (0+255),f,b
 20325  002628  0100               	movlb	0	; () banked
 20326  00262A  0771               	decf	i1___fldiv@new_exp& (0+255),f,b
 20327  00262C  A0D8               	btfss	status,0,c
 20328  00262E  0772               	decf	(i1___fldiv@new_exp+1)& (0+255),f,b
 20329  002630                     i1l9587:
 20330                           
 20331                           ; BSR set to: 0
 20332  002630  0100               	movlb	0	; () banked
 20333  002632  AF62               	btfss	(i1___fldiv@b+2)& (0+255),7,b
 20334  002634  D7E8               	goto	i1l9581
 20335                           
 20336                           ; BSR set to: 0
 20337                           
 20338                           ; BSR set to: 0
 20339  002636  0E00               	movlw	0
 20340  002638  0100               	movlb	0	; () banked
 20341  00263A  6F78               	movwf	i1___fldiv@aexp& (0+255),b
 20342                           
 20343                           ; BSR set to: 0
 20344  00263C  0100               	movlb	0	; () banked
 20345  00263E  AF76               	btfss	(i1___fldiv@grs+3)& (0+255),7,b
 20346  002640  D024               	goto	i1l1514
 20347                           
 20348                           ; BSR set to: 0
 20349  002642  0EFF               	movlw	255
 20350  002644  0100               	movlb	0	; () banked
 20351  002646  1573               	andwf	i1___fldiv@grs& (0+255),w,b
 20352  002648  0100               	movlb	0	; () banked
 20353  00264A  6F68               	movwf	??i1___fldiv& (0+255),b
 20354  00264C  0EFF               	movlw	255
 20355  00264E  0100               	movlb	0	; () banked
 20356  002650  1574               	andwf	(i1___fldiv@grs+1)& (0+255),w,b
 20357  002652  0100               	movlb	0	; () banked
 20358  002654  6F69               	movwf	(??i1___fldiv+1)& (0+255),b
 20359  002656  0EFF               	movlw	255
 20360  002658  0100               	movlb	0	; () banked
 20361  00265A  1575               	andwf	(i1___fldiv@grs+2)& (0+255),w,b
 20362  00265C  0100               	movlb	0	; () banked
 20363  00265E  6F6A               	movwf	(??i1___fldiv+2)& (0+255),b
 20364  002660  0E7F               	movlw	127
 20365  002662  0100               	movlb	0	; () banked
 20366  002664  1576               	andwf	(i1___fldiv@grs+3)& (0+255),w,b
 20367  002666  0100               	movlb	0	; () banked
 20368  002668  6F6B               	movwf	(??i1___fldiv+3)& (0+255),b
 20369  00266A  0100               	movlb	0	; () banked
 20370  00266C  5168               	movf	??i1___fldiv& (0+255),w,b
 20371  00266E  0100               	movlb	0	; () banked
 20372  002670  1169               	iorwf	(??i1___fldiv+1)& (0+255),w,b
 20373  002672  0100               	movlb	0	; () banked
 20374  002674  116A               	iorwf	(??i1___fldiv+2)& (0+255),w,b
 20375  002676  0100               	movlb	0	; () banked
 20376  002678  116B               	iorwf	(??i1___fldiv+3)& (0+255),w,b
 20377  00267A  A4D8               	btfss	status,2,c
 20378  00267C  D003               	goto	i1l9597
 20379                           
 20380                           ; BSR set to: 0
 20381                           
 20382                           ; BSR set to: 0
 20383  00267E  0100               	movlb	0	; () banked
 20384  002680  A160               	btfss	i1___fldiv@b& (0+255),0,b
 20385  002682  D003               	goto	i1l1514
 20386  002684                     i1l9597:
 20387                           
 20388                           ; BSR set to: 0
 20389  002684  0E01               	movlw	1
 20390  002686  0100               	movlb	0	; () banked
 20391  002688  6F78               	movwf	i1___fldiv@aexp& (0+255),b
 20392  00268A                     i1l1514:
 20393                           
 20394                           ; BSR set to: 0
 20395  00268A  0100               	movlb	0	; () banked
 20396  00268C  5178               	movf	i1___fldiv@aexp& (0+255),w,b
 20397  00268E  0100               	movlb	0	; () banked
 20398  002690  B4D8               	btfsc	status,2,c
 20399  002692  D023               	goto	i1l9607
 20400                           
 20401                           ; BSR set to: 0
 20402  002694  0E01               	movlw	1
 20403  002696  0100               	movlb	0	; () banked
 20404  002698  2760               	addwf	i1___fldiv@b& (0+255),f,b
 20405  00269A  0E00               	movlw	0
 20406  00269C  2361               	addwfc	(i1___fldiv@b+1)& (0+255),f,b
 20407  00269E  2362               	addwfc	(i1___fldiv@b+2)& (0+255),f,b
 20408  0026A0  2363               	addwfc	(i1___fldiv@b+3)& (0+255),f,b
 20409                           
 20410                           ; BSR set to: 0
 20411  0026A2  0100               	movlb	0	; () banked
 20412  0026A4  A163               	btfss	(i1___fldiv@b+3)& (0+255),0,b
 20413  0026A6  D019               	goto	i1l9607
 20414                           
 20415                           ; BSR set to: 0
 20416  0026A8  C060  F068         	movff	i1___fldiv@b,??i1___fldiv
 20417  0026AC  C061  F069         	movff	i1___fldiv@b+1,??i1___fldiv+1
 20418  0026B0  C062  F06A         	movff	i1___fldiv@b+2,??i1___fldiv+2
 20419  0026B4  C063  F06B         	movff	i1___fldiv@b+3,??i1___fldiv+3
 20420  0026B8  0100               	movlb	0	; () banked
 20421  0026BA  356B               	rlcf	(??i1___fldiv+3)& (0+255),w,b
 20422  0026BC  336B               	rrcf	(??i1___fldiv+3)& (0+255),f,b
 20423  0026BE  336A               	rrcf	(??i1___fldiv+2)& (0+255),f,b
 20424  0026C0  3369               	rrcf	(??i1___fldiv+1)& (0+255),f,b
 20425  0026C2  3368               	rrcf	??i1___fldiv& (0+255),f,b
 20426  0026C4  C068  F060         	movff	??i1___fldiv,i1___fldiv@b
 20427  0026C8  C069  F061         	movff	??i1___fldiv+1,i1___fldiv@b+1
 20428  0026CC  C06A  F062         	movff	??i1___fldiv+2,i1___fldiv@b+2
 20429  0026D0  C06B  F063         	movff	??i1___fldiv+3,i1___fldiv@b+3
 20430                           
 20431                           ; BSR set to: 0
 20432  0026D4  0100               	movlb	0	; () banked
 20433  0026D6  4B71               	infsnz	i1___fldiv@new_exp& (0+255),f,b
 20434  0026D8  2B72               	incf	(i1___fldiv@new_exp+1)& (0+255),f,b
 20435  0026DA                     i1l9607:
 20436                           
 20437                           ; BSR set to: 0
 20438  0026DA  0100               	movlb	0	; () banked
 20439  0026DC  BF72               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 20440  0026DE  D014               	goto	i1l9611
 20441  0026E0  0100               	movlb	0	; () banked
 20442  0026E2  5172               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 20443  0026E4  E104               	bnz	i1u1277_20
 20444  0026E6  0100               	movlb	0	; () banked
 20445  0026E8  2971               	incf	i1___fldiv@new_exp& (0+255),w,b
 20446  0026EA  A0D8               	btfss	status,0,c
 20447  0026EC  D00D               	goto	i1l9611
 20448  0026EE                     i1u1277_20:
 20449                           
 20450                           ; BSR set to: 0
 20451  0026EE  0E00               	movlw	0
 20452  0026F0  0100               	movlb	0	; () banked
 20453  0026F2  6F72               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 20454  0026F4  6971               	setf	i1___fldiv@new_exp& (0+255),b
 20455  0026F6  0E00               	movlw	0
 20456  0026F8  0100               	movlb	0	; () banked
 20457  0026FA  6F60               	movwf	i1___fldiv@b& (0+255),b
 20458  0026FC  0E00               	movlw	0
 20459  0026FE  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 20460  002700  0E00               	movlw	0
 20461  002702  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 20462  002704  0E00               	movlw	0
 20463  002706  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20464  002708                     i1l9611:
 20465                           
 20466                           ; BSR set to: 0
 20467  002708  0100               	movlb	0	; () banked
 20468  00270A  BF72               	btfsc	(i1___fldiv@new_exp+1)& (0+255),7,b
 20469  00270C  D007               	goto	i1l9613
 20470  00270E  0100               	movlb	0	; () banked
 20471  002710  5172               	movf	(i1___fldiv@new_exp+1)& (0+255),w,b
 20472  002712  E115               	bnz	i1l9615
 20473  002714  0100               	movlb	0	; () banked
 20474  002716  0571               	decf	i1___fldiv@new_exp& (0+255),w,b
 20475  002718  B0D8               	btfsc	status,0,c
 20476  00271A  D011               	goto	i1l9615
 20477  00271C                     i1l9613:
 20478                           
 20479                           ; BSR set to: 0
 20480  00271C  0E00               	movlw	0
 20481  00271E  0100               	movlb	0	; () banked
 20482  002720  6F72               	movwf	(i1___fldiv@new_exp+1)& (0+255),b
 20483  002722  0E00               	movlw	0
 20484  002724  6F71               	movwf	i1___fldiv@new_exp& (0+255),b
 20485  002726  0E00               	movlw	0
 20486  002728  0100               	movlb	0	; () banked
 20487  00272A  6F60               	movwf	i1___fldiv@b& (0+255),b
 20488  00272C  0E00               	movlw	0
 20489  00272E  6F61               	movwf	(i1___fldiv@b+1)& (0+255),b
 20490  002730  0E00               	movlw	0
 20491  002732  6F62               	movwf	(i1___fldiv@b+2)& (0+255),b
 20492  002734  0E00               	movlw	0
 20493  002736  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20494  002738  0E00               	movlw	0
 20495  00273A  0100               	movlb	0	; () banked
 20496  00273C  6F6C               	movwf	i1___fldiv@sign& (0+255),b
 20497  00273E                     i1l9615:
 20498                           
 20499                           ; BSR set to: 0
 20500  00273E  C071  F077         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 20501                           
 20502                           ; BSR set to: 0
 20503  002742  0100               	movlb	0	; () banked
 20504  002744  A177               	btfss	i1___fldiv@bexp& (0+255),0,b
 20505  002746  D003               	goto	i1l9621
 20506                           
 20507                           ; BSR set to: 0
 20508  002748  0100               	movlb	0	; () banked
 20509  00274A  8F62               	bsf	(i1___fldiv@b+2)& (0+255),7,b
 20510  00274C  D002               	goto	i1l9623
 20511  00274E                     i1l9621:
 20512                           
 20513                           ; BSR set to: 0
 20514  00274E  0100               	movlb	0	; () banked
 20515  002750  9F62               	bcf	(i1___fldiv@b+2)& (0+255),7,b
 20516  002752                     i1l9623:
 20517                           
 20518                           ; BSR set to: 0
 20519  002752  0100               	movlb	0	; () banked
 20520  002754  90D8               	bcf	status,0,c
 20521  002756  3177               	rrcf	i1___fldiv@bexp& (0+255),w,b
 20522  002758  0100               	movlb	0	; () banked
 20523  00275A  6F63               	movwf	(i1___fldiv@b+3)& (0+255),b
 20524                           
 20525                           ; BSR set to: 0
 20526  00275C  0100               	movlb	0	; () banked
 20527  00275E  516C               	movf	i1___fldiv@sign& (0+255),w,b
 20528  002760  0100               	movlb	0	; () banked
 20529  002762  1363               	iorwf	(i1___fldiv@b+3)& (0+255),f,b
 20530                           
 20531                           ; BSR set to: 0
 20532  002764  C060  F060         	movff	i1___fldiv@b,?i1___fldiv
 20533  002768  C061  F061         	movff	i1___fldiv@b+1,?i1___fldiv+1
 20534  00276C  C062  F062         	movff	i1___fldiv@b+2,?i1___fldiv+2
 20535  002770  C063  F063         	movff	i1___fldiv@b+3,?i1___fldiv+3
 20536  002774  0012               	return	
 20537  002776                     __end_ofi1___fldiv:
 20538                           	opt stack 0
 20539                           pclatu	equ	0xFFB
 20540                           pclath	equ	0xFFA
 20541                           tblptru	equ	0xFF8
 20542                           tblptrh	equ	0xFF7
 20543                           tblptrl	equ	0xFF6
 20544                           tablat	equ	0xFF5
 20545                           prodh	equ	0xFF4
 20546                           prodl	equ	0xFF3
 20547                           intcon	equ	0xFF2
 20548                           postinc0	equ	0xFEE
 20549                           fsr0h	equ	0xFEA
 20550                           fsr0l	equ	0xFE9
 20551                           wreg	equ	0xFE8
 20552                           postdec1	equ	0xFE5
 20553                           fsr1h	equ	0xFE2
 20554                           fsr1l	equ	0xFE1
 20555                           bsr	equ	0xFE0
 20556                           indf2	equ	0xFDF
 20557                           postinc2	equ	0xFDE
 20558                           postdec2	equ	0xFDD
 20559                           plusw2	equ	0xFDB
 20560                           fsr2h	equ	0xFDA
 20561                           fsr2l	equ	0xFD9
 20562                           status	equ	0xFD8
 20563                           
 20564 ;; *************** function _sysParamInit *****************
 20565 ;; Defined at:
 20566 ;;		line 166 in file "source/sysParams.h"
 20567 ;; Parameters:    Size  Location     Type
 20568 ;;		None
 20569 ;; Auto vars:     Size  Location     Type
 20570 ;;		None
 20571 ;; Return value:  Size  Location     Type
 20572 ;;                  1    wreg      void 
 20573 ;; Registers used:
 20574 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20575 ;; Tracked objects:
 20576 ;;		On entry : 0/0
 20577 ;;		On exit  : 0/0
 20578 ;;		Unchanged: 0/0
 20579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20580 ;;      Params:         0       0       0       0       0       0       0
 20581 ;;      Locals:         0       0       0       0       0       0       0
 20582 ;;      Temps:          0       0       0       0       0       0       0
 20583 ;;      Totals:         0       0       0       0       0       0       0
 20584 ;;Total ram usage:        0 bytes
 20585 ;; Hardware stack levels used:    1
 20586 ;; Hardware stack levels required when called:    5
 20587 ;; This function calls:
 20588 ;;		_calcSysVars
 20589 ;;		_readEEPROM
 20590 ;; This function is called by:
 20591 ;;		_UARTint
 20592 ;; This function uses a non-reentrant model
 20593 ;;
 20594                           
 20595                           	psect	text79
 20596  004BF2                     __ptext79:
 20597                           	opt stack 0
 20598  004BF2                     _sysParamInit:
 20599                           	opt stack 13
 20600                           
 20601                           ;sysParams.h: 168: fData.floatMB = readEEPROM(2);
 20602                           
 20603                           ; BSR set to: 0
 20604                           ;incstack = 0
 20605  004BF2  0E02               	movlw	2
 20606  004BF4  EC22  F030         	call	_readEEPROM
 20607  004BF8  0100               	movlb	0	; () banked
 20608  004BFA  6FAE               	movwf	(_fData+3)& (0+255),b
 20609                           
 20610                           ;sysParams.h: 169: fData.floatUB = readEEPROM(3);
 20611  004BFC  0E03               	movlw	3
 20612  004BFE  EC22  F030         	call	_readEEPROM
 20613  004C02  0100               	movlb	0	; () banked
 20614  004C04  6FAD               	movwf	(_fData+2)& (0+255),b
 20615                           
 20616                           ;sysParams.h: 170: fData.floatHB = readEEPROM(4);
 20617  004C06  0E04               	movlw	4
 20618  004C08  EC22  F030         	call	_readEEPROM
 20619  004C0C  0100               	movlb	0	; () banked
 20620  004C0E  6FAC               	movwf	(_fData+1)& (0+255),b
 20621                           
 20622                           ;sysParams.h: 171: fData.floatLB = readEEPROM(5);
 20623  004C10  0E05               	movlw	5
 20624  004C12  EC22  F030         	call	_readEEPROM
 20625  004C16  0100               	movlb	0	; () banked
 20626  004C18  6FAB               	movwf	_fData& (0+255),b
 20627                           
 20628                           ; BSR set to: 0
 20629                           ;sysParams.h: 172: tiXcorte = fData.floatdat;
 20630  004C1A  C0AB  F0C3         	movff	_fData,_tiXcorte
 20631  004C1E  C0AC  F0C4         	movff	_fData+1,_tiXcorte+1
 20632  004C22  C0AD  F0C5         	movff	_fData+2,_tiXcorte+2
 20633  004C26  C0AE  F0C6         	movff	_fData+3,_tiXcorte+3
 20634                           
 20635                           ;sysParams.h: 173: i16Data.int16HB = readEEPROM(6);
 20636  004C2A  0E06               	movlw	6
 20637  004C2C  EC22  F030         	call	_readEEPROM
 20638  004C30  0100               	movlb	0	; () banked
 20639  004C32  6FB0               	movwf	(_i16Data+1)& (0+255),b
 20640                           
 20641                           ;sysParams.h: 174: i16Data.int16LB = readEEPROM(7);
 20642  004C34  0E07               	movlw	7
 20643  004C36  EC22  F030         	call	_readEEPROM
 20644  004C3A  0100               	movlb	0	; () banked
 20645  004C3C  6FAF               	movwf	_i16Data& (0+255),b
 20646                           
 20647                           ; BSR set to: 0
 20648                           ;sysParams.h: 175: numCortes = i16Data.int16dat;
 20649  004C3E  C0AF  F0CB         	movff	_i16Data,_numCortes
 20650  004C42  C0B0  F0CC         	movff	_i16Data+1,_numCortes+1
 20651                           
 20652                           ;sysParams.h: 176: fData.floatMB = readEEPROM(8);
 20653  004C46  0E08               	movlw	8
 20654  004C48  EC22  F030         	call	_readEEPROM
 20655  004C4C  0100               	movlb	0	; () banked
 20656  004C4E  6FAE               	movwf	(_fData+3)& (0+255),b
 20657                           
 20658                           ;sysParams.h: 177: fData.floatUB = readEEPROM(9);
 20659  004C50  0E09               	movlw	9
 20660  004C52  EC22  F030         	call	_readEEPROM
 20661  004C56  0100               	movlb	0	; () banked
 20662  004C58  6FAD               	movwf	(_fData+2)& (0+255),b
 20663                           
 20664                           ;sysParams.h: 178: fData.floatHB = readEEPROM(10);
 20665  004C5A  0E0A               	movlw	10
 20666  004C5C  EC22  F030         	call	_readEEPROM
 20667  004C60  0100               	movlb	0	; () banked
 20668  004C62  6FAC               	movwf	(_fData+1)& (0+255),b
 20669                           
 20670                           ;sysParams.h: 179: fData.floatLB = readEEPROM(11);
 20671  004C64  0E0B               	movlw	11
 20672  004C66  EC22  F030         	call	_readEEPROM
 20673  004C6A  0100               	movlb	0	; () banked
 20674  004C6C  6FAB               	movwf	_fData& (0+255),b
 20675                           
 20676                           ; BSR set to: 0
 20677                           ;sysParams.h: 180: diamTubo = fData.floatdat;
 20678  004C6E  C0AB  F186         	movff	_fData,_diamTubo
 20679  004C72  C0AC  F187         	movff	_fData+1,_diamTubo+1
 20680  004C76  C0AD  F188         	movff	_fData+2,_diamTubo+2
 20681  004C7A  C0AE  F189         	movff	_fData+3,_diamTubo+3
 20682                           
 20683                           ;sysParams.h: 186: fData.floatMB = readEEPROM(16);
 20684  004C7E  0E10               	movlw	16
 20685  004C80  EC22  F030         	call	_readEEPROM
 20686  004C84  0100               	movlb	0	; () banked
 20687  004C86  6FAE               	movwf	(_fData+3)& (0+255),b
 20688                           
 20689                           ;sysParams.h: 187: fData.floatUB = readEEPROM(17);
 20690  004C88  0E11               	movlw	17
 20691  004C8A  EC22  F030         	call	_readEEPROM
 20692  004C8E  0100               	movlb	0	; () banked
 20693  004C90  6FAD               	movwf	(_fData+2)& (0+255),b
 20694                           
 20695                           ;sysParams.h: 188: fData.floatHB = readEEPROM(18);
 20696  004C92  0E12               	movlw	18
 20697  004C94  EC22  F030         	call	_readEEPROM
 20698  004C98  0100               	movlb	0	; () banked
 20699  004C9A  6FAC               	movwf	(_fData+1)& (0+255),b
 20700                           
 20701                           ;sysParams.h: 189: fData.floatLB = readEEPROM(19);
 20702  004C9C  0E13               	movlw	19
 20703  004C9E  EC22  F030         	call	_readEEPROM
 20704  004CA2  0100               	movlb	0	; () banked
 20705  004CA4  6FAB               	movwf	_fData& (0+255),b
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;sysParams.h: 190: velocidadMasa = fData.floatdat;
 20709  004CA6  C0AB  F0C7         	movff	_fData,_velocidadMasa
 20710  004CAA  C0AC  F0C8         	movff	_fData+1,_velocidadMasa+1
 20711  004CAE  C0AD  F0C9         	movff	_fData+2,_velocidadMasa+2
 20712  004CB2  C0AE  F0CA         	movff	_fData+3,_velocidadMasa+3
 20713                           
 20714                           ; BSR set to: 0
 20715                           ;sysParams.h: 191: calcSysVars();
 20716  004CB6  EC1C  F02B         	call	_calcSysVars	;wreg free
 20717  004CBA  0012               	return		;funcret
 20718  004CBC                     __end_of_sysParamInit:
 20719                           	opt stack 0
 20720                           pclatu	equ	0xFFB
 20721                           pclath	equ	0xFFA
 20722                           tblptru	equ	0xFF8
 20723                           tblptrh	equ	0xFF7
 20724                           tblptrl	equ	0xFF6
 20725                           tablat	equ	0xFF5
 20726                           prodh	equ	0xFF4
 20727                           prodl	equ	0xFF3
 20728                           intcon	equ	0xFF2
 20729                           postinc0	equ	0xFEE
 20730                           fsr0h	equ	0xFEA
 20731                           fsr0l	equ	0xFE9
 20732                           wreg	equ	0xFE8
 20733                           postdec1	equ	0xFE5
 20734                           fsr1h	equ	0xFE2
 20735                           fsr1l	equ	0xFE1
 20736                           bsr	equ	0xFE0
 20737                           indf2	equ	0xFDF
 20738                           postinc2	equ	0xFDE
 20739                           postdec2	equ	0xFDD
 20740                           plusw2	equ	0xFDB
 20741                           fsr2h	equ	0xFDA
 20742                           fsr2l	equ	0xFD9
 20743                           status	equ	0xFD8
 20744                           
 20745 ;; *************** function _readEEPROM *****************
 20746 ;; Defined at:
 20747 ;;		line 42 in file "source/sysParams.h"
 20748 ;; Parameters:    Size  Location     Type
 20749 ;;  adr             1    wreg     unsigned char 
 20750 ;; Auto vars:     Size  Location     Type
 20751 ;;  adr             1    0[BANK0 ] unsigned char 
 20752 ;; Return value:  Size  Location     Type
 20753 ;;                  1    wreg      unsigned char 
 20754 ;; Registers used:
 20755 ;;		wreg, status,2
 20756 ;; Tracked objects:
 20757 ;;		On entry : 0/0
 20758 ;;		On exit  : 0/0
 20759 ;;		Unchanged: 0/0
 20760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20761 ;;      Params:         0       0       0       0       0       0       0
 20762 ;;      Locals:         0       1       0       0       0       0       0
 20763 ;;      Temps:          0       0       0       0       0       0       0
 20764 ;;      Totals:         0       1       0       0       0       0       0
 20765 ;;Total ram usage:        1 bytes
 20766 ;; Hardware stack levels used:    1
 20767 ;; Hardware stack levels required when called:    3
 20768 ;; This function calls:
 20769 ;;		Nothing
 20770 ;; This function is called by:
 20771 ;;		_sysParamInit
 20772 ;; This function uses a non-reentrant model
 20773 ;;
 20774                           
 20775                           	psect	text80
 20776  006044                     __ptext80:
 20777                           	opt stack 0
 20778  006044                     _readEEPROM:
 20779                           	opt stack 14
 20780                           
 20781                           ;incstack = 0
 20782                           ;readEEPROM@adr stored from wreg
 20783  006044  0100               	movlb	0	; () banked
 20784  006046  6F60               	movwf	readEEPROM@adr& (0+255),b
 20785                           
 20786                           ;sysParams.h: 43: EEADR = adr;
 20787  006048  C060  FFA9         	movff	readEEPROM@adr,4009	;volatile
 20788                           
 20789                           ;sysParams.h: 44: EECON1bits.EEPGD = 0;
 20790  00604C  9EA6               	bcf	4006,7,c	;volatile
 20791                           
 20792                           ;sysParams.h: 45: EECON1bits.CFGS = 0;
 20793  00604E  9CA6               	bcf	4006,6,c	;volatile
 20794                           
 20795                           ;sysParams.h: 46: EECON1bits.RD = 1;
 20796  006050  80A6               	bsf	4006,0,c	;volatile
 20797  006052                     i1l300:
 20798  006052  B0A6               	btfsc	4006,0,c	;volatile
 20799  006054  D7FE               	goto	i1l300
 20800                           
 20801                           ;sysParams.h: 48: return EEDATA;
 20802  006056  50A8               	movf	4008,w,c	;volatile
 20803  006058  0012               	return		;funcret
 20804  00605A                     __end_of_readEEPROM:
 20805                           	opt stack 0
 20806                           pclatu	equ	0xFFB
 20807                           pclath	equ	0xFFA
 20808                           tblptru	equ	0xFF8
 20809                           tblptrh	equ	0xFF7
 20810                           tblptrl	equ	0xFF6
 20811                           tablat	equ	0xFF5
 20812                           prodh	equ	0xFF4
 20813                           prodl	equ	0xFF3
 20814                           intcon	equ	0xFF2
 20815                           postinc0	equ	0xFEE
 20816                           fsr0h	equ	0xFEA
 20817                           fsr0l	equ	0xFE9
 20818                           wreg	equ	0xFE8
 20819                           postdec1	equ	0xFE5
 20820                           fsr1h	equ	0xFE2
 20821                           fsr1l	equ	0xFE1
 20822                           bsr	equ	0xFE0
 20823                           indf2	equ	0xFDF
 20824                           postinc2	equ	0xFDE
 20825                           postdec2	equ	0xFDD
 20826                           plusw2	equ	0xFDB
 20827                           fsr2h	equ	0xFDA
 20828                           fsr2l	equ	0xFD9
 20829                           status	equ	0xFD8
 20830                           
 20831 ;; *************** function _calcSysVars *****************
 20832 ;; Defined at:
 20833 ;;		line 56 in file "source/sysParams.h"
 20834 ;; Parameters:    Size  Location     Type
 20835 ;;		None
 20836 ;; Auto vars:     Size  Location     Type
 20837 ;;  temp            4   25[BANK0 ] float 
 20838 ;; Return value:  Size  Location     Type
 20839 ;;                  1    wreg      void 
 20840 ;; Registers used:
 20841 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20842 ;; Tracked objects:
 20843 ;;		On entry : 0/0
 20844 ;;		On exit  : 0/0
 20845 ;;		Unchanged: 0/0
 20846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20847 ;;      Params:         0       0       0       0       0       0       0
 20848 ;;      Locals:         0       4       0       0       0       0       0
 20849 ;;      Temps:          0       0       0       0       0       0       0
 20850 ;;      Totals:         0       4       0       0       0       0       0
 20851 ;;Total ram usage:        4 bytes
 20852 ;; Hardware stack levels used:    1
 20853 ;; Hardware stack levels required when called:    4
 20854 ;; This function calls:
 20855 ;;		i1___flmul
 20856 ;; This function is called by:
 20857 ;;		_sysParamInit
 20858 ;; This function uses a non-reentrant model
 20859 ;;
 20860                           
 20861                           	psect	text81
 20862  005638                     __ptext81:
 20863                           	opt stack 0
 20864  005638                     _calcSysVars:
 20865                           	opt stack 13
 20866                           
 20867                           ;sysParams.h: 57: float temp = 0;
 20868                           
 20869                           ;incstack = 0
 20870  005638  0E00               	movlw	0
 20871  00563A  0100               	movlb	0	; () banked
 20872  00563C  6F79               	movwf	calcSysVars@temp& (0+255),b
 20873  00563E  0E00               	movlw	0
 20874  005640  6F7A               	movwf	(calcSysVars@temp+1)& (0+255),b
 20875  005642  0E00               	movlw	0
 20876  005644  6F7B               	movwf	(calcSysVars@temp+2)& (0+255),b
 20877  005646  0E00               	movlw	0
 20878  005648  6F7C               	movwf	(calcSysVars@temp+3)& (0+255),b
 20879                           
 20880                           ; BSR set to: 0
 20881                           ;sysParams.h: 58: timsXcorte = (float)tiXcorte * 1000;
 20882  00564A  C0C3  F060         	movff	_tiXcorte,i1___flmul@b
 20883  00564E  C0C4  F061         	movff	_tiXcorte+1,i1___flmul@b+1
 20884  005652  C0C5  F062         	movff	_tiXcorte+2,i1___flmul@b+2
 20885  005656  C0C6  F063         	movff	_tiXcorte+3,i1___flmul@b+3
 20886  00565A  0E00               	movlw	0
 20887  00565C  0100               	movlb	0	; () banked
 20888  00565E  6F64               	movwf	i1___flmul@a& (0+255),b
 20889  005660  0E00               	movlw	0
 20890  005662  6F65               	movwf	(i1___flmul@a+1)& (0+255),b
 20891  005664  0E7A               	movlw	122
 20892  005666  6F66               	movwf	(i1___flmul@a+2)& (0+255),b
 20893  005668  0E44               	movlw	68
 20894  00566A  6F67               	movwf	(i1___flmul@a+3)& (0+255),b
 20895  00566C  ECA8  F00D         	call	i1___flmul	;wreg free
 20896  005670  C060  F047         	movff	?i1___flmul,_timsXcorte
 20897  005674  C061  F048         	movff	?i1___flmul+1,_timsXcorte+1
 20898  005678  C062  F049         	movff	?i1___flmul+2,_timsXcorte+2
 20899  00567C  C063  F04A         	movff	?i1___flmul+3,_timsXcorte+3
 20900                           
 20901                           ;sysParams.h: 64: kgXcorte = (float)velocidadMasa * tiXcorte;
 20902  005680  C0C7  F060         	movff	_velocidadMasa,i1___flmul@b
 20903  005684  C0C8  F061         	movff	_velocidadMasa+1,i1___flmul@b+1
 20904  005688  C0C9  F062         	movff	_velocidadMasa+2,i1___flmul@b+2
 20905  00568C  C0CA  F063         	movff	_velocidadMasa+3,i1___flmul@b+3
 20906  005690  C0C3  F064         	movff	_tiXcorte,i1___flmul@a
 20907  005694  C0C4  F065         	movff	_tiXcorte+1,i1___flmul@a+1
 20908  005698  C0C5  F066         	movff	_tiXcorte+2,i1___flmul@a+2
 20909  00569C  C0C6  F067         	movff	_tiXcorte+3,i1___flmul@a+3
 20910  0056A0  ECA8  F00D         	call	i1___flmul	;wreg free
 20911  0056A4  C060  F18A         	movff	?i1___flmul,_kgXcorte
 20912  0056A8  C061  F18B         	movff	?i1___flmul+1,_kgXcorte+1
 20913  0056AC  C062  F18C         	movff	?i1___flmul+2,_kgXcorte+2
 20914  0056B0  C063  F18D         	movff	?i1___flmul+3,_kgXcorte+3
 20915  0056B4  0012               	return		;funcret
 20916  0056B6                     __end_of_calcSysVars:
 20917                           	opt stack 0
 20918                           pclatu	equ	0xFFB
 20919                           pclath	equ	0xFFA
 20920                           tblptru	equ	0xFF8
 20921                           tblptrh	equ	0xFF7
 20922                           tblptrl	equ	0xFF6
 20923                           tablat	equ	0xFF5
 20924                           prodh	equ	0xFF4
 20925                           prodl	equ	0xFF3
 20926                           intcon	equ	0xFF2
 20927                           postinc0	equ	0xFEE
 20928                           fsr0h	equ	0xFEA
 20929                           fsr0l	equ	0xFE9
 20930                           wreg	equ	0xFE8
 20931                           postdec1	equ	0xFE5
 20932                           fsr1h	equ	0xFE2
 20933                           fsr1l	equ	0xFE1
 20934                           bsr	equ	0xFE0
 20935                           indf2	equ	0xFDF
 20936                           postinc2	equ	0xFDE
 20937                           postdec2	equ	0xFDD
 20938                           plusw2	equ	0xFDB
 20939                           fsr2h	equ	0xFDA
 20940                           fsr2l	equ	0xFD9
 20941                           status	equ	0xFD8
 20942                           
 20943 ;; *************** function i1___flmul *****************
 20944 ;; Defined at:
 20945 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 20946 ;; Parameters:    Size  Location     Type
 20947 ;;  b               4    0[BANK0 ] void 
 20948 ;;  a               4    4[BANK0 ] void 
 20949 ;; Auto vars:     Size  Location     Type
 20950 ;;  __flmul         4   19[BANK0 ] struct .
 20951 ;;  __flmul         4   14[BANK0 ] unsigned long 
 20952 ;;  __flmul         2   23[BANK0 ] struct .
 20953 ;;  __flmul         1   18[BANK0 ] unsigned char 
 20954 ;;  __flmul         1   13[BANK0 ] unsigned char 
 20955 ;;  __flmul         1   12[BANK0 ] unsigned char 
 20956 ;; Return value:  Size  Location     Type
 20957 ;;                  4    0[BANK0 ] unsigned char 
 20958 ;; Registers used:
 20959 ;;		wreg, status,2, status,0, prodl, prodh
 20960 ;; Tracked objects:
 20961 ;;		On entry : 0/0
 20962 ;;		On exit  : 0/0
 20963 ;;		Unchanged: 0/0
 20964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20965 ;;      Params:         0       8       0       0       0       0       0
 20966 ;;      Locals:         0      13       0       0       0       0       0
 20967 ;;      Temps:          0       4       0       0       0       0       0
 20968 ;;      Totals:         0      25       0       0       0       0       0
 20969 ;;Total ram usage:       25 bytes
 20970 ;; Hardware stack levels used:    1
 20971 ;; Hardware stack levels required when called:    3
 20972 ;; This function calls:
 20973 ;;		Nothing
 20974 ;; This function is called by:
 20975 ;;		_calcSysVars
 20976 ;;		i1_calcVars2ti
 20977 ;; This function uses a non-reentrant model
 20978 ;;
 20979                           
 20980                           	psect	text82
 20981  001B50                     __ptext82:
 20982                           	opt stack 0
 20983  001B50                     i1___flmul:
 20984                           	opt stack 13
 20985                           
 20986                           ;incstack = 0
 20987  001B50  0100               	movlb	0	; () banked
 20988  001B52  5163               	movf	(i1___flmul@b+3)& (0+255),w,b
 20989  001B54  0B80               	andlw	128
 20990  001B56  0100               	movlb	0	; () banked
 20991  001B58  6F6C               	movwf	i1___flmul@sign& (0+255),b
 20992  001B5A  0100               	movlb	0	; () banked
 20993  001B5C  5163               	movf	(i1___flmul@b+3)& (0+255),w,b
 20994  001B5E  2563               	addwf	(i1___flmul@b+3)& (0+255),w,b
 20995  001B60  0100               	movlb	0	; () banked
 20996  001B62  6F72               	movwf	i1___flmul@bexp& (0+255),b
 20997                           
 20998                           ; BSR set to: 0
 20999  001B64  0100               	movlb	0	; () banked
 21000  001B66  AF62               	btfss	(i1___flmul@b+2)& (0+255),7,b
 21001  001B68  D002               	goto	i1l9637
 21002                           
 21003                           ; BSR set to: 0
 21004  001B6A  0100               	movlb	0	; () banked
 21005  001B6C  8172               	bsf	i1___flmul@bexp& (0+255),0,b
 21006  001B6E                     i1l9637:
 21007                           
 21008                           ; BSR set to: 0
 21009  001B6E  0100               	movlb	0	; () banked
 21010  001B70  5172               	movf	i1___flmul@bexp& (0+255),w,b
 21011  001B72  0100               	movlb	0	; () banked
 21012  001B74  B4D8               	btfsc	status,2,c
 21013  001B76  D010               	goto	i1l9645
 21014                           
 21015                           ; BSR set to: 0
 21016  001B78  0100               	movlb	0	; () banked
 21017  001B7A  2972               	incf	i1___flmul@bexp& (0+255),w,b
 21018  001B7C  A4D8               	btfss	status,2,c
 21019  001B7E  D009               	goto	i1l9643
 21020                           
 21021                           ; BSR set to: 0
 21022  001B80  0E00               	movlw	0
 21023  001B82  0100               	movlb	0	; () banked
 21024  001B84  6F60               	movwf	i1___flmul@b& (0+255),b
 21025  001B86  0E00               	movlw	0
 21026  001B88  6F61               	movwf	(i1___flmul@b+1)& (0+255),b
 21027  001B8A  0E00               	movlw	0
 21028  001B8C  6F62               	movwf	(i1___flmul@b+2)& (0+255),b
 21029  001B8E  0E00               	movlw	0
 21030  001B90  6F63               	movwf	(i1___flmul@b+3)& (0+255),b
 21031  001B92                     i1l9643:
 21032                           
 21033                           ; BSR set to: 0
 21034  001B92  0100               	movlb	0	; () banked
 21035  001B94  8F62               	bsf	(i1___flmul@b+2)& (0+255),7,b
 21036  001B96  D009               	goto	i1l9647
 21037  001B98                     i1l9645:
 21038                           
 21039                           ; BSR set to: 0
 21040  001B98  0E00               	movlw	0
 21041  001B9A  0100               	movlb	0	; () banked
 21042  001B9C  6F60               	movwf	i1___flmul@b& (0+255),b
 21043  001B9E  0E00               	movlw	0
 21044  001BA0  6F61               	movwf	(i1___flmul@b+1)& (0+255),b
 21045  001BA2  0E00               	movlw	0
 21046  001BA4  6F62               	movwf	(i1___flmul@b+2)& (0+255),b
 21047  001BA6  0E00               	movlw	0
 21048  001BA8  6F63               	movwf	(i1___flmul@b+3)& (0+255),b
 21049  001BAA                     i1l9647:
 21050                           
 21051                           ; BSR set to: 0
 21052  001BAA  0100               	movlb	0	; () banked
 21053  001BAC  5167               	movf	(i1___flmul@a+3)& (0+255),w,b
 21054  001BAE  0B80               	andlw	128
 21055  001BB0  0100               	movlb	0	; () banked
 21056  001BB2  1B6C               	xorwf	i1___flmul@sign& (0+255),f,b
 21057                           
 21058                           ; BSR set to: 0
 21059  001BB4  0100               	movlb	0	; () banked
 21060  001BB6  5167               	movf	(i1___flmul@a+3)& (0+255),w,b
 21061  001BB8  2567               	addwf	(i1___flmul@a+3)& (0+255),w,b
 21062  001BBA  0100               	movlb	0	; () banked
 21063  001BBC  6F6D               	movwf	i1___flmul@aexp& (0+255),b
 21064                           
 21065                           ; BSR set to: 0
 21066  001BBE  0100               	movlb	0	; () banked
 21067  001BC0  AF66               	btfss	(i1___flmul@a+2)& (0+255),7,b
 21068  001BC2  D002               	goto	i1l9655
 21069                           
 21070                           ; BSR set to: 0
 21071  001BC4  0100               	movlb	0	; () banked
 21072  001BC6  816D               	bsf	i1___flmul@aexp& (0+255),0,b
 21073  001BC8                     i1l9655:
 21074                           
 21075                           ; BSR set to: 0
 21076  001BC8  0100               	movlb	0	; () banked
 21077  001BCA  516D               	movf	i1___flmul@aexp& (0+255),w,b
 21078  001BCC  0100               	movlb	0	; () banked
 21079  001BCE  B4D8               	btfsc	status,2,c
 21080  001BD0  D010               	goto	i1l9663
 21081                           
 21082                           ; BSR set to: 0
 21083  001BD2  0100               	movlb	0	; () banked
 21084  001BD4  296D               	incf	i1___flmul@aexp& (0+255),w,b
 21085  001BD6  A4D8               	btfss	status,2,c
 21086  001BD8  D009               	goto	i1l9661
 21087                           
 21088                           ; BSR set to: 0
 21089  001BDA  0E00               	movlw	0
 21090  001BDC  0100               	movlb	0	; () banked
 21091  001BDE  6F64               	movwf	i1___flmul@a& (0+255),b
 21092  001BE0  0E00               	movlw	0
 21093  001BE2  6F65               	movwf	(i1___flmul@a+1)& (0+255),b
 21094  001BE4  0E00               	movlw	0
 21095  001BE6  6F66               	movwf	(i1___flmul@a+2)& (0+255),b
 21096  001BE8  0E00               	movlw	0
 21097  001BEA  6F67               	movwf	(i1___flmul@a+3)& (0+255),b
 21098  001BEC                     i1l9661:
 21099                           
 21100                           ; BSR set to: 0
 21101  001BEC  0100               	movlb	0	; () banked
 21102  001BEE  8F66               	bsf	(i1___flmul@a+2)& (0+255),7,b
 21103  001BF0  D009               	goto	i1l1533
 21104  001BF2                     i1l9663:
 21105                           
 21106                           ; BSR set to: 0
 21107  001BF2  0E00               	movlw	0
 21108  001BF4  0100               	movlb	0	; () banked
 21109  001BF6  6F64               	movwf	i1___flmul@a& (0+255),b
 21110  001BF8  0E00               	movlw	0
 21111  001BFA  6F65               	movwf	(i1___flmul@a+1)& (0+255),b
 21112  001BFC  0E00               	movlw	0
 21113  001BFE  6F66               	movwf	(i1___flmul@a+2)& (0+255),b
 21114  001C00  0E00               	movlw	0
 21115  001C02  6F67               	movwf	(i1___flmul@a+3)& (0+255),b
 21116  001C04                     i1l1533:
 21117                           
 21118                           ; BSR set to: 0
 21119  001C04  0100               	movlb	0	; () banked
 21120  001C06  516D               	movf	i1___flmul@aexp& (0+255),w,b
 21121  001C08  0100               	movlb	0	; () banked
 21122  001C0A  B4D8               	btfsc	status,2,c
 21123  001C0C  D005               	goto	i1l9667
 21124                           
 21125                           ; BSR set to: 0
 21126  001C0E  0100               	movlb	0	; () banked
 21127  001C10  5172               	movf	i1___flmul@bexp& (0+255),w,b
 21128  001C12  0100               	movlb	0	; () banked
 21129  001C14  A4D8               	btfss	status,2,c
 21130  001C16  D00A               	goto	i1l9671
 21131  001C18                     i1l9667:
 21132                           
 21133                           ; BSR set to: 0
 21134  001C18  0E00               	movlw	0
 21135  001C1A  0100               	movlb	0	; () banked
 21136  001C1C  6F60               	movwf	?i1___flmul& (0+255),b
 21137  001C1E  0E00               	movlw	0
 21138  001C20  6F61               	movwf	(?i1___flmul+1)& (0+255),b
 21139  001C22  0E00               	movlw	0
 21140  001C24  6F62               	movwf	(?i1___flmul+2)& (0+255),b
 21141  001C26  0E00               	movlw	0
 21142  001C28  6F63               	movwf	(?i1___flmul+3)& (0+255),b
 21143                           
 21144                           ; BSR set to: 0
 21145  001C2A  0012               	return	
 21146  001C2C                     i1l9671:
 21147                           
 21148                           ; BSR set to: 0
 21149  001C2C  0100               	movlb	0	; () banked
 21150  001C2E  5166               	movf	(i1___flmul@a+2)& (0+255),w,b
 21151  001C30  0100               	movlb	0	; () banked
 21152  001C32  0360               	mulwf	i1___flmul@b& (0+255),b
 21153  001C34  CFF3 F077          	movff	prodl,i1___flmul@temp
 21154  001C38  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21155                           
 21156                           ; BSR set to: 0
 21157  001C3C  0100               	movlb	0	; () banked
 21158  001C3E  5177               	movf	i1___flmul@temp& (0+255),w,b
 21159  001C40  0100               	movlb	0	; () banked
 21160  001C42  6F6E               	movwf	i1___flmul@grs& (0+255),b
 21161  001C44  6B6F               	clrf	(i1___flmul@grs+1)& (0+255),b
 21162  001C46  6B70               	clrf	(i1___flmul@grs+2)& (0+255),b
 21163  001C48  6B71               	clrf	(i1___flmul@grs+3)& (0+255),b
 21164                           
 21165                           ; BSR set to: 0
 21166  001C4A  0100               	movlb	0	; () banked
 21167  001C4C  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21168  001C4E  0100               	movlb	0	; () banked
 21169  001C50  6F73               	movwf	i1___flmul@prod& (0+255),b
 21170  001C52  6B74               	clrf	(i1___flmul@prod+1)& (0+255),b
 21171  001C54  6B75               	clrf	(i1___flmul@prod+2)& (0+255),b
 21172  001C56  6B76               	clrf	(i1___flmul@prod+3)& (0+255),b
 21173  001C58  0100               	movlb	0	; () banked
 21174  001C5A  5165               	movf	(i1___flmul@a+1)& (0+255),w,b
 21175  001C5C  0100               	movlb	0	; () banked
 21176  001C5E  0361               	mulwf	(i1___flmul@b+1)& (0+255),b
 21177  001C60  CFF3 F077          	movff	prodl,i1___flmul@temp
 21178  001C64  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21179                           
 21180                           ; BSR set to: 0
 21181  001C68  0100               	movlb	0	; () banked
 21182  001C6A  5177               	movf	i1___flmul@temp& (0+255),w,b
 21183  001C6C  0100               	movlb	0	; () banked
 21184  001C6E  276E               	addwf	i1___flmul@grs& (0+255),f,b
 21185  001C70  0E00               	movlw	0
 21186  001C72  236F               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 21187  001C74  2370               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 21188  001C76  2371               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 21189                           
 21190                           ; BSR set to: 0
 21191  001C78  0100               	movlb	0	; () banked
 21192  001C7A  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21193  001C7C  0100               	movlb	0	; () banked
 21194  001C7E  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21195  001C80  0E00               	movlw	0
 21196  001C82  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21197  001C84  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21198  001C86  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21199  001C88  0100               	movlb	0	; () banked
 21200  001C8A  5164               	movf	i1___flmul@a& (0+255),w,b
 21201  001C8C  0100               	movlb	0	; () banked
 21202  001C8E  0362               	mulwf	(i1___flmul@b+2)& (0+255),b
 21203  001C90  CFF3 F077          	movff	prodl,i1___flmul@temp
 21204  001C94  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21205                           
 21206                           ; BSR set to: 0
 21207  001C98  0100               	movlb	0	; () banked
 21208  001C9A  5177               	movf	i1___flmul@temp& (0+255),w,b
 21209  001C9C  0100               	movlb	0	; () banked
 21210  001C9E  276E               	addwf	i1___flmul@grs& (0+255),f,b
 21211  001CA0  0E00               	movlw	0
 21212  001CA2  236F               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 21213  001CA4  2370               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 21214  001CA6  2371               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 21215                           
 21216                           ; BSR set to: 0
 21217  001CA8  0100               	movlb	0	; () banked
 21218  001CAA  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21219  001CAC  0100               	movlb	0	; () banked
 21220  001CAE  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21221  001CB0  0E00               	movlw	0
 21222  001CB2  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21223  001CB4  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21224  001CB6  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21225                           
 21226                           ; BSR set to: 0
 21227  001CB8  C070  F071         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21228  001CBC  C06F  F070         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21229  001CC0  C06E  F06F         	movff	i1___flmul@grs,i1___flmul@grs+1
 21230  001CC4  0100               	movlb	0	; () banked
 21231  001CC6  6B6E               	clrf	i1___flmul@grs& (0+255),b
 21232                           
 21233                           ; BSR set to: 0
 21234  001CC8  0100               	movlb	0	; () banked
 21235  001CCA  5164               	movf	i1___flmul@a& (0+255),w,b
 21236  001CCC  0100               	movlb	0	; () banked
 21237  001CCE  0361               	mulwf	(i1___flmul@b+1)& (0+255),b
 21238  001CD0  CFF3 F077          	movff	prodl,i1___flmul@temp
 21239  001CD4  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21240                           
 21241                           ; BSR set to: 0
 21242  001CD8  0100               	movlb	0	; () banked
 21243  001CDA  5177               	movf	i1___flmul@temp& (0+255),w,b
 21244  001CDC  0100               	movlb	0	; () banked
 21245  001CDE  276E               	addwf	i1___flmul@grs& (0+255),f,b
 21246  001CE0  0100               	movlb	0	; () banked
 21247  001CE2  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21248  001CE4  0100               	movlb	0	; () banked
 21249  001CE6  236F               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 21250  001CE8  0E00               	movlw	0
 21251  001CEA  0100               	movlb	0	; () banked
 21252  001CEC  2370               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 21253  001CEE  0E00               	movlw	0
 21254  001CF0  0100               	movlb	0	; () banked
 21255  001CF2  2371               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 21256                           
 21257                           ; BSR set to: 0
 21258  001CF4  0100               	movlb	0	; () banked
 21259  001CF6  5165               	movf	(i1___flmul@a+1)& (0+255),w,b
 21260  001CF8  0100               	movlb	0	; () banked
 21261  001CFA  0360               	mulwf	i1___flmul@b& (0+255),b
 21262  001CFC  CFF3 F077          	movff	prodl,i1___flmul@temp
 21263  001D00  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21264                           
 21265                           ; BSR set to: 0
 21266  001D04  0100               	movlb	0	; () banked
 21267  001D06  5177               	movf	i1___flmul@temp& (0+255),w,b
 21268  001D08  0100               	movlb	0	; () banked
 21269  001D0A  276E               	addwf	i1___flmul@grs& (0+255),f,b
 21270  001D0C  0100               	movlb	0	; () banked
 21271  001D0E  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21272  001D10  0100               	movlb	0	; () banked
 21273  001D12  236F               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 21274  001D14  0E00               	movlw	0
 21275  001D16  0100               	movlb	0	; () banked
 21276  001D18  2370               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 21277  001D1A  0E00               	movlw	0
 21278  001D1C  0100               	movlb	0	; () banked
 21279  001D1E  2371               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 21280                           
 21281                           ; BSR set to: 0
 21282  001D20  C070  F071         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21283  001D24  C06F  F070         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21284  001D28  C06E  F06F         	movff	i1___flmul@grs,i1___flmul@grs+1
 21285  001D2C  0100               	movlb	0	; () banked
 21286  001D2E  6B6E               	clrf	i1___flmul@grs& (0+255),b
 21287  001D30  0100               	movlb	0	; () banked
 21288  001D32  5164               	movf	i1___flmul@a& (0+255),w,b
 21289  001D34  0100               	movlb	0	; () banked
 21290  001D36  0360               	mulwf	i1___flmul@b& (0+255),b
 21291  001D38  CFF3 F077          	movff	prodl,i1___flmul@temp
 21292  001D3C  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21293                           
 21294                           ; BSR set to: 0
 21295  001D40  0100               	movlb	0	; () banked
 21296  001D42  5177               	movf	i1___flmul@temp& (0+255),w,b
 21297  001D44  0100               	movlb	0	; () banked
 21298  001D46  276E               	addwf	i1___flmul@grs& (0+255),f,b
 21299  001D48  0100               	movlb	0	; () banked
 21300  001D4A  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21301  001D4C  0100               	movlb	0	; () banked
 21302  001D4E  236F               	addwfc	(i1___flmul@grs+1)& (0+255),f,b
 21303  001D50  0E00               	movlw	0
 21304  001D52  0100               	movlb	0	; () banked
 21305  001D54  2370               	addwfc	(i1___flmul@grs+2)& (0+255),f,b
 21306  001D56  0E00               	movlw	0
 21307  001D58  0100               	movlb	0	; () banked
 21308  001D5A  2371               	addwfc	(i1___flmul@grs+3)& (0+255),f,b
 21309                           
 21310                           ; BSR set to: 0
 21311  001D5C  0100               	movlb	0	; () banked
 21312  001D5E  5166               	movf	(i1___flmul@a+2)& (0+255),w,b
 21313  001D60  0100               	movlb	0	; () banked
 21314  001D62  0361               	mulwf	(i1___flmul@b+1)& (0+255),b
 21315  001D64  CFF3 F077          	movff	prodl,i1___flmul@temp
 21316  001D68  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21317  001D6C  0100               	movlb	0	; () banked
 21318  001D6E  5177               	movf	i1___flmul@temp& (0+255),w,b
 21319  001D70  0100               	movlb	0	; () banked
 21320  001D72  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21321  001D74  0100               	movlb	0	; () banked
 21322  001D76  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21323  001D78  0100               	movlb	0	; () banked
 21324  001D7A  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21325  001D7C  0E00               	movlw	0
 21326  001D7E  0100               	movlb	0	; () banked
 21327  001D80  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21328  001D82  0E00               	movlw	0
 21329  001D84  0100               	movlb	0	; () banked
 21330  001D86  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21331                           
 21332                           ; BSR set to: 0
 21333  001D88  0100               	movlb	0	; () banked
 21334  001D8A  5165               	movf	(i1___flmul@a+1)& (0+255),w,b
 21335  001D8C  0100               	movlb	0	; () banked
 21336  001D8E  0362               	mulwf	(i1___flmul@b+2)& (0+255),b
 21337  001D90  CFF3 F077          	movff	prodl,i1___flmul@temp
 21338  001D94  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21339                           
 21340                           ; BSR set to: 0
 21341  001D98  0100               	movlb	0	; () banked
 21342  001D9A  5177               	movf	i1___flmul@temp& (0+255),w,b
 21343  001D9C  0100               	movlb	0	; () banked
 21344  001D9E  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21345  001DA0  0100               	movlb	0	; () banked
 21346  001DA2  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21347  001DA4  0100               	movlb	0	; () banked
 21348  001DA6  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21349  001DA8  0E00               	movlw	0
 21350  001DAA  0100               	movlb	0	; () banked
 21351  001DAC  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21352  001DAE  0E00               	movlw	0
 21353  001DB0  0100               	movlb	0	; () banked
 21354  001DB2  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21355  001DB4  0100               	movlb	0	; () banked
 21356  001DB6  5166               	movf	(i1___flmul@a+2)& (0+255),w,b
 21357  001DB8  0100               	movlb	0	; () banked
 21358  001DBA  0362               	mulwf	(i1___flmul@b+2)& (0+255),b
 21359  001DBC  CFF3 F077          	movff	prodl,i1___flmul@temp
 21360  001DC0  CFF4 F078          	movff	prodh,i1___flmul@temp+1
 21361                           
 21362                           ; BSR set to: 0
 21363  001DC4  0100               	movlb	0	; () banked
 21364  001DC6  5177               	movf	i1___flmul@temp& (0+255),w,b
 21365  001DC8  0100               	movlb	0	; () banked
 21366  001DCA  6F68               	movwf	??i1___flmul& (0+255),b
 21367  001DCC  0100               	movlb	0	; () banked
 21368  001DCE  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21369  001DD0  0100               	movlb	0	; () banked
 21370  001DD2  6F69               	movwf	(??i1___flmul+1)& (0+255),b
 21371  001DD4  0100               	movlb	0	; () banked
 21372  001DD6  6B6A               	clrf	(??i1___flmul+2)& (0+255),b
 21373  001DD8  0100               	movlb	0	; () banked
 21374  001DDA  6B6B               	clrf	(??i1___flmul+3)& (0+255),b
 21375  001DDC  C06A  F06B         	movff	??i1___flmul+2,??i1___flmul+3
 21376  001DE0  C069  F06A         	movff	??i1___flmul+1,??i1___flmul+2
 21377  001DE4  C068  F069         	movff	??i1___flmul,??i1___flmul+1
 21378  001DE8  0100               	movlb	0	; () banked
 21379  001DEA  6B68               	clrf	??i1___flmul& (0+255),b
 21380  001DEC  0100               	movlb	0	; () banked
 21381  001DEE  5168               	movf	??i1___flmul& (0+255),w,b
 21382  001DF0  0100               	movlb	0	; () banked
 21383  001DF2  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21384  001DF4  0100               	movlb	0	; () banked
 21385  001DF6  5169               	movf	(??i1___flmul+1)& (0+255),w,b
 21386  001DF8  0100               	movlb	0	; () banked
 21387  001DFA  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21388  001DFC  0100               	movlb	0	; () banked
 21389  001DFE  516A               	movf	(??i1___flmul+2)& (0+255),w,b
 21390  001E00  0100               	movlb	0	; () banked
 21391  001E02  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21392  001E04  0100               	movlb	0	; () banked
 21393  001E06  516B               	movf	(??i1___flmul+3)& (0+255),w,b
 21394  001E08  0100               	movlb	0	; () banked
 21395  001E0A  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21396                           
 21397                           ; BSR set to: 0
 21398  001E0C  C06E  F068         	movff	i1___flmul@grs,??i1___flmul
 21399  001E10  C06F  F069         	movff	i1___flmul@grs+1,??i1___flmul+1
 21400  001E14  C070  F06A         	movff	i1___flmul@grs+2,??i1___flmul+2
 21401  001E18  C071  F06B         	movff	i1___flmul@grs+3,??i1___flmul+3
 21402  001E1C  0E19               	movlw	25
 21403  001E1E  D006               	goto	i1u1288_20
 21404  001E20                     i1u1288_25:
 21405  001E20  0100               	movlb	0	; () banked
 21406  001E22  90D8               	bcf	status,0,c
 21407  001E24  336B               	rrcf	(??i1___flmul+3)& (0+255),f,b
 21408  001E26  336A               	rrcf	(??i1___flmul+2)& (0+255),f,b
 21409  001E28  3369               	rrcf	(??i1___flmul+1)& (0+255),f,b
 21410  001E2A  3368               	rrcf	??i1___flmul& (0+255),f,b
 21411  001E2C                     i1u1288_20:
 21412  001E2C  2EE8               	decfsz	wreg,f,c
 21413  001E2E  D7F8               	goto	i1u1288_25
 21414  001E30  0100               	movlb	0	; () banked
 21415  001E32  5168               	movf	??i1___flmul& (0+255),w,b
 21416  001E34  0100               	movlb	0	; () banked
 21417  001E36  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21418  001E38  0100               	movlb	0	; () banked
 21419  001E3A  5169               	movf	(??i1___flmul+1)& (0+255),w,b
 21420  001E3C  0100               	movlb	0	; () banked
 21421  001E3E  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21422  001E40  0100               	movlb	0	; () banked
 21423  001E42  516A               	movf	(??i1___flmul+2)& (0+255),w,b
 21424  001E44  0100               	movlb	0	; () banked
 21425  001E46  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21426  001E48  0100               	movlb	0	; () banked
 21427  001E4A  516B               	movf	(??i1___flmul+3)& (0+255),w,b
 21428  001E4C  0100               	movlb	0	; () banked
 21429  001E4E  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21430                           
 21431                           ; BSR set to: 0
 21432  001E50  C070  F071         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21433  001E54  C06F  F070         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21434  001E58  C06E  F06F         	movff	i1___flmul@grs,i1___flmul@grs+1
 21435  001E5C  0100               	movlb	0	; () banked
 21436  001E5E  6B6E               	clrf	i1___flmul@grs& (0+255),b
 21437                           
 21438                           ; BSR set to: 0
 21439  001E60  0100               	movlb	0	; () banked
 21440  001E62  516D               	movf	i1___flmul@aexp& (0+255),w,b
 21441  001E64  C072  F068         	movff	i1___flmul@bexp,??i1___flmul
 21442  001E68  0100               	movlb	0	; () banked
 21443  001E6A  6B69               	clrf	(??i1___flmul+1)& (0+255),b
 21444  001E6C  0100               	movlb	0	; () banked
 21445  001E6E  2768               	addwf	??i1___flmul& (0+255),f,b
 21446  001E70  0E00               	movlw	0
 21447  001E72  2369               	addwfc	(??i1___flmul+1)& (0+255),f,b
 21448  001E74  0E82               	movlw	130
 21449  001E76  0100               	movlb	0	; () banked
 21450  001E78  2568               	addwf	??i1___flmul& (0+255),w,b
 21451  001E7A  0100               	movlb	0	; () banked
 21452  001E7C  6F77               	movwf	i1___flmul@temp& (0+255),b
 21453  001E7E  0EFF               	movlw	255
 21454  001E80  0100               	movlb	0	; () banked
 21455  001E82  2169               	addwfc	(??i1___flmul+1)& (0+255),w,b
 21456  001E84  0100               	movlb	0	; () banked
 21457  001E86  6F78               	movwf	(i1___flmul@temp+1)& (0+255),b
 21458  001E88  D015               	goto	i1l9719
 21459  001E8A                     i1l9713:
 21460                           
 21461                           ; BSR set to: 0
 21462  001E8A  0100               	movlb	0	; () banked
 21463  001E8C  90D8               	bcf	status,0,c
 21464  001E8E  3773               	rlcf	i1___flmul@prod& (0+255),f,b
 21465  001E90  3774               	rlcf	(i1___flmul@prod+1)& (0+255),f,b
 21466  001E92  3775               	rlcf	(i1___flmul@prod+2)& (0+255),f,b
 21467  001E94  3776               	rlcf	(i1___flmul@prod+3)& (0+255),f,b
 21468                           
 21469                           ; BSR set to: 0
 21470  001E96  0100               	movlb	0	; () banked
 21471  001E98  AF71               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 21472  001E9A  D002               	goto	i1l1540
 21473                           
 21474                           ; BSR set to: 0
 21475  001E9C  0100               	movlb	0	; () banked
 21476  001E9E  8173               	bsf	i1___flmul@prod& (0+255),0,b
 21477  001EA0                     i1l1540:
 21478                           
 21479                           ; BSR set to: 0
 21480  001EA0  0100               	movlb	0	; () banked
 21481  001EA2  90D8               	bcf	status,0,c
 21482  001EA4  376E               	rlcf	i1___flmul@grs& (0+255),f,b
 21483  001EA6  376F               	rlcf	(i1___flmul@grs+1)& (0+255),f,b
 21484  001EA8  3770               	rlcf	(i1___flmul@grs+2)& (0+255),f,b
 21485  001EAA  3771               	rlcf	(i1___flmul@grs+3)& (0+255),f,b
 21486  001EAC  0100               	movlb	0	; () banked
 21487  001EAE  0777               	decf	i1___flmul@temp& (0+255),f,b
 21488  001EB0  A0D8               	btfss	status,0,c
 21489  001EB2  0778               	decf	(i1___flmul@temp+1)& (0+255),f,b
 21490  001EB4                     i1l9719:
 21491                           
 21492                           ; BSR set to: 0
 21493  001EB4  0100               	movlb	0	; () banked
 21494  001EB6  AF75               	btfss	(i1___flmul@prod+2)& (0+255),7,b
 21495  001EB8  D7E8               	goto	i1l9713
 21496                           
 21497                           ; BSR set to: 0
 21498                           
 21499                           ; BSR set to: 0
 21500  001EBA  0E00               	movlw	0
 21501  001EBC  0100               	movlb	0	; () banked
 21502  001EBE  6F6D               	movwf	i1___flmul@aexp& (0+255),b
 21503                           
 21504                           ; BSR set to: 0
 21505  001EC0  0100               	movlb	0	; () banked
 21506  001EC2  AF71               	btfss	(i1___flmul@grs+3)& (0+255),7,b
 21507  001EC4  D024               	goto	i1l1542
 21508                           
 21509                           ; BSR set to: 0
 21510  001EC6  0EFF               	movlw	255
 21511  001EC8  0100               	movlb	0	; () banked
 21512  001ECA  156E               	andwf	i1___flmul@grs& (0+255),w,b
 21513  001ECC  0100               	movlb	0	; () banked
 21514  001ECE  6F68               	movwf	??i1___flmul& (0+255),b
 21515  001ED0  0EFF               	movlw	255
 21516  001ED2  0100               	movlb	0	; () banked
 21517  001ED4  156F               	andwf	(i1___flmul@grs+1)& (0+255),w,b
 21518  001ED6  0100               	movlb	0	; () banked
 21519  001ED8  6F69               	movwf	(??i1___flmul+1)& (0+255),b
 21520  001EDA  0EFF               	movlw	255
 21521  001EDC  0100               	movlb	0	; () banked
 21522  001EDE  1570               	andwf	(i1___flmul@grs+2)& (0+255),w,b
 21523  001EE0  0100               	movlb	0	; () banked
 21524  001EE2  6F6A               	movwf	(??i1___flmul+2)& (0+255),b
 21525  001EE4  0E7F               	movlw	127
 21526  001EE6  0100               	movlb	0	; () banked
 21527  001EE8  1571               	andwf	(i1___flmul@grs+3)& (0+255),w,b
 21528  001EEA  0100               	movlb	0	; () banked
 21529  001EEC  6F6B               	movwf	(??i1___flmul+3)& (0+255),b
 21530  001EEE  0100               	movlb	0	; () banked
 21531  001EF0  5168               	movf	??i1___flmul& (0+255),w,b
 21532  001EF2  0100               	movlb	0	; () banked
 21533  001EF4  1169               	iorwf	(??i1___flmul+1)& (0+255),w,b
 21534  001EF6  0100               	movlb	0	; () banked
 21535  001EF8  116A               	iorwf	(??i1___flmul+2)& (0+255),w,b
 21536  001EFA  0100               	movlb	0	; () banked
 21537  001EFC  116B               	iorwf	(??i1___flmul+3)& (0+255),w,b
 21538  001EFE  A4D8               	btfss	status,2,c
 21539  001F00  D003               	goto	i1l9729
 21540                           
 21541                           ; BSR set to: 0
 21542                           
 21543                           ; BSR set to: 0
 21544  001F02  0100               	movlb	0	; () banked
 21545  001F04  A173               	btfss	i1___flmul@prod& (0+255),0,b
 21546  001F06  D003               	goto	i1l1542
 21547  001F08                     i1l9729:
 21548                           
 21549                           ; BSR set to: 0
 21550  001F08  0E01               	movlw	1
 21551  001F0A  0100               	movlb	0	; () banked
 21552  001F0C  6F6D               	movwf	i1___flmul@aexp& (0+255),b
 21553  001F0E                     i1l1542:
 21554                           
 21555                           ; BSR set to: 0
 21556  001F0E  0100               	movlb	0	; () banked
 21557  001F10  516D               	movf	i1___flmul@aexp& (0+255),w,b
 21558  001F12  0100               	movlb	0	; () banked
 21559  001F14  B4D8               	btfsc	status,2,c
 21560  001F16  D023               	goto	i1l9739
 21561                           
 21562                           ; BSR set to: 0
 21563  001F18  0E01               	movlw	1
 21564  001F1A  0100               	movlb	0	; () banked
 21565  001F1C  2773               	addwf	i1___flmul@prod& (0+255),f,b
 21566  001F1E  0E00               	movlw	0
 21567  001F20  2374               	addwfc	(i1___flmul@prod+1)& (0+255),f,b
 21568  001F22  2375               	addwfc	(i1___flmul@prod+2)& (0+255),f,b
 21569  001F24  2376               	addwfc	(i1___flmul@prod+3)& (0+255),f,b
 21570                           
 21571                           ; BSR set to: 0
 21572  001F26  0100               	movlb	0	; () banked
 21573  001F28  A176               	btfss	(i1___flmul@prod+3)& (0+255),0,b
 21574  001F2A  D019               	goto	i1l9739
 21575                           
 21576                           ; BSR set to: 0
 21577  001F2C  C073  F068         	movff	i1___flmul@prod,??i1___flmul
 21578  001F30  C074  F069         	movff	i1___flmul@prod+1,??i1___flmul+1
 21579  001F34  C075  F06A         	movff	i1___flmul@prod+2,??i1___flmul+2
 21580  001F38  C076  F06B         	movff	i1___flmul@prod+3,??i1___flmul+3
 21581  001F3C  0100               	movlb	0	; () banked
 21582  001F3E  356B               	rlcf	(??i1___flmul+3)& (0+255),w,b
 21583  001F40  336B               	rrcf	(??i1___flmul+3)& (0+255),f,b
 21584  001F42  336A               	rrcf	(??i1___flmul+2)& (0+255),f,b
 21585  001F44  3369               	rrcf	(??i1___flmul+1)& (0+255),f,b
 21586  001F46  3368               	rrcf	??i1___flmul& (0+255),f,b
 21587  001F48  C068  F073         	movff	??i1___flmul,i1___flmul@prod
 21588  001F4C  C069  F074         	movff	??i1___flmul+1,i1___flmul@prod+1
 21589  001F50  C06A  F075         	movff	??i1___flmul+2,i1___flmul@prod+2
 21590  001F54  C06B  F076         	movff	??i1___flmul+3,i1___flmul@prod+3
 21591                           
 21592                           ; BSR set to: 0
 21593  001F58  0100               	movlb	0	; () banked
 21594  001F5A  4B77               	infsnz	i1___flmul@temp& (0+255),f,b
 21595  001F5C  2B78               	incf	(i1___flmul@temp+1)& (0+255),f,b
 21596  001F5E                     i1l9739:
 21597                           
 21598                           ; BSR set to: 0
 21599  001F5E  0100               	movlb	0	; () banked
 21600  001F60  BF78               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 21601  001F62  D010               	goto	i1l9743
 21602  001F64  0100               	movlb	0	; () banked
 21603  001F66  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21604  001F68  E104               	bnz	i1u1296_20
 21605  001F6A  0100               	movlb	0	; () banked
 21606  001F6C  2977               	incf	i1___flmul@temp& (0+255),w,b
 21607  001F6E  A0D8               	btfss	status,0,c
 21608  001F70  D009               	goto	i1l9743
 21609  001F72                     i1u1296_20:
 21610                           
 21611                           ; BSR set to: 0
 21612  001F72  0E00               	movlw	0
 21613  001F74  0100               	movlb	0	; () banked
 21614  001F76  6F73               	movwf	i1___flmul@prod& (0+255),b
 21615  001F78  0E00               	movlw	0
 21616  001F7A  6F74               	movwf	(i1___flmul@prod+1)& (0+255),b
 21617  001F7C  0E80               	movlw	128
 21618  001F7E  6F75               	movwf	(i1___flmul@prod+2)& (0+255),b
 21619  001F80  0E7F               	movlw	127
 21620  001F82  D02B               	goto	L16
 21621  001F84                     i1l9743:
 21622                           
 21623                           ; BSR set to: 0
 21624  001F84  0100               	movlb	0	; () banked
 21625  001F86  BF78               	btfsc	(i1___flmul@temp+1)& (0+255),7,b
 21626  001F88  D007               	goto	i1l9745
 21627  001F8A  0100               	movlb	0	; () banked
 21628  001F8C  5178               	movf	(i1___flmul@temp+1)& (0+255),w,b
 21629  001F8E  E111               	bnz	i1l1550
 21630  001F90  0100               	movlb	0	; () banked
 21631  001F92  0577               	decf	i1___flmul@temp& (0+255),w,b
 21632  001F94  B0D8               	btfsc	status,0,c
 21633  001F96  D00D               	goto	i1l1550
 21634  001F98                     i1l9745:
 21635                           
 21636                           ; BSR set to: 0
 21637  001F98  0E00               	movlw	0
 21638  001F9A  0100               	movlb	0	; () banked
 21639  001F9C  6F73               	movwf	i1___flmul@prod& (0+255),b
 21640  001F9E  0E00               	movlw	0
 21641  001FA0  6F74               	movwf	(i1___flmul@prod+1)& (0+255),b
 21642  001FA2  0E00               	movlw	0
 21643  001FA4  6F75               	movwf	(i1___flmul@prod+2)& (0+255),b
 21644  001FA6  0E00               	movlw	0
 21645  001FA8  6F76               	movwf	(i1___flmul@prod+3)& (0+255),b
 21646  001FAA  0E00               	movlw	0
 21647  001FAC  0100               	movlb	0	; () banked
 21648  001FAE  6F6C               	movwf	i1___flmul@sign& (0+255),b
 21649  001FB0  D015               	goto	i1l9755
 21650  001FB2                     i1l1550:
 21651                           
 21652                           ; BSR set to: 0
 21653  001FB2  C077  F072         	movff	i1___flmul@temp,i1___flmul@bexp
 21654                           
 21655                           ; BSR set to: 0
 21656  001FB6  0EFF               	movlw	255
 21657  001FB8  0100               	movlb	0	; () banked
 21658  001FBA  1773               	andwf	i1___flmul@prod& (0+255),f,b
 21659  001FBC  0EFF               	movlw	255
 21660  001FBE  1774               	andwf	(i1___flmul@prod+1)& (0+255),f,b
 21661  001FC0  0E7F               	movlw	127
 21662  001FC2  1775               	andwf	(i1___flmul@prod+2)& (0+255),f,b
 21663  001FC4  0E00               	movlw	0
 21664  001FC6  1776               	andwf	(i1___flmul@prod+3)& (0+255),f,b
 21665                           
 21666                           ; BSR set to: 0
 21667  001FC8  0100               	movlb	0	; () banked
 21668  001FCA  A172               	btfss	i1___flmul@bexp& (0+255),0,b
 21669  001FCC  D002               	goto	i1l9753
 21670                           
 21671                           ; BSR set to: 0
 21672  001FCE  0100               	movlb	0	; () banked
 21673  001FD0  8F75               	bsf	(i1___flmul@prod+2)& (0+255),7,b
 21674  001FD2                     i1l9753:
 21675                           
 21676                           ; BSR set to: 0
 21677  001FD2  0100               	movlb	0	; () banked
 21678  001FD4  90D8               	bcf	status,0,c
 21679  001FD6  3172               	rrcf	i1___flmul@bexp& (0+255),w,b
 21680  001FD8  0100               	movlb	0	; () banked
 21681  001FDA                     L16:
 21682  001FDA  6F76               	movwf	(i1___flmul@prod+3)& (0+255),b
 21683  001FDC                     i1l9755:
 21684                           
 21685                           ; BSR set to: 0
 21686  001FDC  0100               	movlb	0	; () banked
 21687  001FDE  516C               	movf	i1___flmul@sign& (0+255),w,b
 21688  001FE0  0100               	movlb	0	; () banked
 21689  001FE2  1376               	iorwf	(i1___flmul@prod+3)& (0+255),f,b
 21690                           
 21691                           ; BSR set to: 0
 21692  001FE4  C073  F060         	movff	i1___flmul@prod,?i1___flmul
 21693  001FE8  C074  F061         	movff	i1___flmul@prod+1,?i1___flmul+1
 21694  001FEC  C075  F062         	movff	i1___flmul@prod+2,?i1___flmul+2
 21695  001FF0  C076  F063         	movff	i1___flmul@prod+3,?i1___flmul+3
 21696  001FF4  0012               	return	
 21697  001FF6                     __end_ofi1___flmul:
 21698                           	opt stack 0
 21699                           pclatu	equ	0xFFB
 21700                           pclath	equ	0xFFA
 21701                           tblptru	equ	0xFF8
 21702                           tblptrh	equ	0xFF7
 21703                           tblptrl	equ	0xFF6
 21704                           tablat	equ	0xFF5
 21705                           prodh	equ	0xFF4
 21706                           prodl	equ	0xFF3
 21707                           intcon	equ	0xFF2
 21708                           postinc0	equ	0xFEE
 21709                           fsr0h	equ	0xFEA
 21710                           fsr0l	equ	0xFE9
 21711                           wreg	equ	0xFE8
 21712                           postdec1	equ	0xFE5
 21713                           fsr1h	equ	0xFE2
 21714                           fsr1l	equ	0xFE1
 21715                           bsr	equ	0xFE0
 21716                           indf2	equ	0xFDF
 21717                           postinc2	equ	0xFDE
 21718                           postdec2	equ	0xFDD
 21719                           plusw2	equ	0xFDB
 21720                           fsr2h	equ	0xFDA
 21721                           fsr2l	equ	0xFD9
 21722                           status	equ	0xFD8
 21723                           
 21724 ;; *************** function _putchUART *****************
 21725 ;; Defined at:
 21726 ;;		line 63 in file "source/IOConfig.h"
 21727 ;; Parameters:    Size  Location     Type
 21728 ;;  val             1    wreg     unsigned char 
 21729 ;; Auto vars:     Size  Location     Type
 21730 ;;  val             1    0[BANK0 ] unsigned char 
 21731 ;; Return value:  Size  Location     Type
 21732 ;;                  1    wreg      void 
 21733 ;; Registers used:
 21734 ;;		wreg
 21735 ;; Tracked objects:
 21736 ;;		On entry : 0/0
 21737 ;;		On exit  : 0/0
 21738 ;;		Unchanged: 0/0
 21739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21740 ;;      Params:         0       0       0       0       0       0       0
 21741 ;;      Locals:         0       1       0       0       0       0       0
 21742 ;;      Temps:          0       0       0       0       0       0       0
 21743 ;;      Totals:         0       1       0       0       0       0       0
 21744 ;;Total ram usage:        1 bytes
 21745 ;; Hardware stack levels used:    1
 21746 ;; Hardware stack levels required when called:    3
 21747 ;; This function calls:
 21748 ;;		Nothing
 21749 ;; This function is called by:
 21750 ;;		_UARTint
 21751 ;; This function uses a non-reentrant model
 21752 ;;
 21753                           
 21754                           	psect	text83
 21755  006092                     __ptext83:
 21756                           	opt stack 0
 21757  006092                     _putchUART:
 21758                           	opt stack 15
 21759                           
 21760                           ; BSR set to: 0
 21761                           ;incstack = 0
 21762                           ;putchUART@val stored from wreg
 21763  006092  0100               	movlb	0	; () banked
 21764  006094  6F60               	movwf	putchUART@val& (0+255),b
 21765  006096                     i1l225:
 21766  006096  A2AC               	btfss	4012,1,c	;volatile
 21767  006098  D7FE               	goto	i1l225
 21768                           
 21769                           ;IOConfig.h: 65: TXREG1 = val;
 21770  00609A  C060  FFAD         	movff	putchUART@val,4013	;volatile
 21771  00609E  0012               	return		;funcret
 21772  0060A0                     __end_of_putchUART:
 21773                           	opt stack 0
 21774                           pclatu	equ	0xFFB
 21775                           pclath	equ	0xFFA
 21776                           tblptru	equ	0xFF8
 21777                           tblptrh	equ	0xFF7
 21778                           tblptrl	equ	0xFF6
 21779                           tablat	equ	0xFF5
 21780                           prodh	equ	0xFF4
 21781                           prodl	equ	0xFF3
 21782                           intcon	equ	0xFF2
 21783                           postinc0	equ	0xFEE
 21784                           fsr0h	equ	0xFEA
 21785                           fsr0l	equ	0xFE9
 21786                           wreg	equ	0xFE8
 21787                           postdec1	equ	0xFE5
 21788                           fsr1h	equ	0xFE2
 21789                           fsr1l	equ	0xFE1
 21790                           bsr	equ	0xFE0
 21791                           indf2	equ	0xFDF
 21792                           postinc2	equ	0xFDE
 21793                           postdec2	equ	0xFDD
 21794                           plusw2	equ	0xFDB
 21795                           fsr2h	equ	0xFDA
 21796                           fsr2l	equ	0xFD9
 21797                           status	equ	0xFD8
 21798                           
 21799 ;; *************** function _T2int *****************
 21800 ;; Defined at:
 21801 ;;		line 45 in file "source/PWMConfig.h"
 21802 ;; Parameters:    Size  Location     Type
 21803 ;;		None
 21804 ;; Auto vars:     Size  Location     Type
 21805 ;;		None
 21806 ;; Return value:  Size  Location     Type
 21807 ;;                  1    wreg      void 
 21808 ;; Registers used:
 21809 ;;		wreg, status,2, status,0, cstack
 21810 ;; Tracked objects:
 21811 ;;		On entry : 0/0
 21812 ;;		On exit  : 0/0
 21813 ;;		Unchanged: 0/0
 21814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21815 ;;      Params:         0       0       0       0       0       0       0
 21816 ;;      Locals:         0       0       0       0       0       0       0
 21817 ;;      Temps:          0       1       0       0       0       0       0
 21818 ;;      Totals:         0       1       0       0       0       0       0
 21819 ;;Total ram usage:        1 bytes
 21820 ;; Hardware stack levels used:    1
 21821 ;; Hardware stack levels required when called:    5
 21822 ;; This function calls:
 21823 ;;		_saveProcessState
 21824 ;;		i1_delay_ms
 21825 ;;		i1_setPWM2duty
 21826 ;; This function is called by:
 21827 ;;		_isr
 21828 ;; This function uses a non-reentrant model
 21829 ;;
 21830                           
 21831                           	psect	text84
 21832  003ABE                     __ptext84:
 21833                           	opt stack 0
 21834  003ABE                     _T2int:
 21835                           	opt stack 14
 21836                           
 21837                           ;PWMConfig.h: 46: if(PORTAbits.RA7 && !lastSttFC1) {
 21838                           
 21839                           ;incstack = 0
 21840  003ABE  AE80               	btfss	3968,7,c	;volatile
 21841  003AC0  D031               	goto	i1l492
 21842  003AC2  503F               	movf	_lastSttFC1,w,c
 21843  003AC4  A4D8               	btfss	status,2,c
 21844  003AC6  D02E               	goto	i1l492
 21845                           
 21846                           ;PWMConfig.h: 47: lastSttFC1 = 0;
 21847  003AC8  0E00               	movlw	0
 21848  003ACA  6E3F               	movwf	_lastSttFC1,c
 21849                           
 21850                           ;PWMConfig.h: 48: setPWM2duty(0);
 21851  003ACC  0E00               	movlw	0
 21852  003ACE  0100               	movlb	0	; () banked
 21853  003AD0  6F61               	movwf	(i1setPWM2duty@actuator+1)& (0+255),b
 21854  003AD2  0E00               	movlw	0
 21855  003AD4  6F60               	movwf	i1setPWM2duty@actuator& (0+255),b
 21856  003AD6  ECB9  F029         	call	i1_setPWM2duty	;wreg free
 21857                           
 21858                           ;PWMConfig.h: 49: bladeIsUP = 1;
 21859  003ADA  0E01               	movlw	1
 21860  003ADC  0100               	movlb	0	; () banked
 21861  003ADE  6FB9               	movwf	_bladeIsUP& (0+255),b
 21862                           
 21863                           ; BSR set to: 0
 21864                           ;PWMConfig.h: 50: processTimer = 0;
 21865  003AE0  0E00               	movlw	0
 21866  003AE2  6E2E               	movwf	_processTimer,c
 21867  003AE4  0E00               	movlw	0
 21868  003AE6  6E2F               	movwf	_processTimer+1,c
 21869  003AE8  0E00               	movlw	0
 21870  003AEA  6E30               	movwf	_processTimer+2,c
 21871  003AEC  0E00               	movlw	0
 21872  003AEE  6E31               	movwf	_processTimer+3,c
 21873                           
 21874                           ; BSR set to: 0
 21875                           ;PWMConfig.h: 55: if(processState >= numCortes) {
 21876  003AF0  0100               	movlb	0	; () banked
 21877  003AF2  51CB               	movf	_numCortes& (0+255),w,b
 21878  003AF4  5C35               	subwf	_processState,w,c
 21879  003AF6  5036               	movf	_processState+1,w,c
 21880  003AF8  0A80               	xorlw	128
 21881  003AFA  0100               	movlb	0	; () banked
 21882  003AFC  6F66               	movwf	??_T2int& (0+255),b
 21883  003AFE  0100               	movlb	0	; () banked
 21884  003B00  51CC               	movf	(_numCortes+1)& (0+255),w,b
 21885  003B02  0A80               	xorlw	128
 21886  003B04  0100               	movlb	0	; () banked
 21887  003B06  5966               	subwfb	??_T2int& (0+255),w,b
 21888  003B08  A0D8               	btfss	status,0,c
 21889  003B0A  D004               	goto	i1l10449
 21890                           
 21891                           ; BSR set to: 0
 21892                           ;PWMConfig.h: 56: ProcessStarted = 0;
 21893  003B0C  0E00               	movlw	0
 21894  003B0E  6E3A               	movwf	_ProcessStarted,c
 21895                           
 21896                           ; BSR set to: 0
 21897                           ;PWMConfig.h: 57: saveProcessState();
 21898  003B10  EC0C  F02F         	call	_saveProcessState	;wreg free
 21899  003B14                     i1l10449:
 21900                           
 21901                           ;PWMConfig.h: 58: }
 21902                           ;PWMConfig.h: 59: delay_ms(200);
 21903  003B14  0E00               	movlw	0
 21904  003B16  0100               	movlb	0	; () banked
 21905  003B18  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 21906  003B1A  0EC8               	movlw	200
 21907  003B1C  6F60               	movwf	i1delay_ms@del& (0+255),b
 21908  003B1E  EC43  F02E         	call	i1_delay_ms	;wreg free
 21909                           
 21910                           ;PWMConfig.h: 60: }else if(!PORTAbits.RA7 && lastSttFC1) {
 21911  003B22  D02F               	goto	i1l10477
 21912  003B24                     i1l492:
 21913  003B24  BE80               	btfsc	3968,7,c	;volatile
 21914  003B26  D00D               	goto	i1l10457
 21915  003B28  503F               	movf	_lastSttFC1,w,c
 21916  003B2A  B4D8               	btfsc	status,2,c
 21917  003B2C  D00A               	goto	i1l10457
 21918                           
 21919                           ;PWMConfig.h: 61: lastSttFC1 = 1;
 21920  003B2E  0E01               	movlw	1
 21921  003B30  6E3F               	movwf	_lastSttFC1,c
 21922                           
 21923                           ;PWMConfig.h: 65: delay_ms(50);
 21924  003B32  0E00               	movlw	0
 21925  003B34  0100               	movlb	0	; () banked
 21926  003B36  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 21927  003B38  0E32               	movlw	50
 21928  003B3A  6F60               	movwf	i1delay_ms@del& (0+255),b
 21929  003B3C  EC43  F02E         	call	i1_delay_ms	;wreg free
 21930                           
 21931                           ;PWMConfig.h: 66: }else if(PORTAbits.RA7 == lastSttFC1) {
 21932  003B40  D020               	goto	i1l10477
 21933  003B42                     i1l10457:
 21934  003B42  AE80               	btfss	3968,7,c	;volatile
 21935  003B44  D002               	goto	i1u1385_20
 21936  003B46  0E01               	movlw	1
 21937  003B48  D001               	goto	i1u1385_26
 21938  003B4A                     i1u1385_20:
 21939  003B4A  0E00               	movlw	0
 21940  003B4C                     i1u1385_26:
 21941  003B4C  183F               	xorwf	_lastSttFC1,w,c
 21942  003B4E  A4D8               	btfss	status,2,c
 21943  003B50  D018               	goto	i1l10477
 21944                           
 21945                           ;PWMConfig.h: 67: if(!PORTAbits.RA7) {
 21946  003B52  BE80               	btfsc	3968,7,c	;volatile
 21947  003B54  D003               	goto	i1l10463
 21948                           
 21949                           ;PWMConfig.h: 68: holdFC1cont = 0;
 21950  003B56  0E00               	movlw	0
 21951  003B58  6E3D               	movwf	_holdFC1cont,c
 21952                           
 21953                           ;PWMConfig.h: 70: }else {
 21954  003B5A  D013               	goto	i1l10477
 21955  003B5C                     i1l10463:
 21956                           
 21957                           ;PWMConfig.h: 71: if(!FC1securLock)
 21958  003B5C  5038               	movf	_FC1securLock,w,c
 21959  003B5E  B4D8               	btfsc	status,2,c
 21960                           
 21961                           ;PWMConfig.h: 72: holdFC1cont++;
 21962  003B60  2A3D               	incf	_holdFC1cont,f,c
 21963                           
 21964                           ;PWMConfig.h: 73: if(holdFC1cont > 9) {
 21965  003B62  0E09               	movlw	9
 21966  003B64  643D               	cpfsgt	_holdFC1cont,c
 21967  003B66  D006               	goto	i1l10475
 21968                           
 21969                           ;PWMConfig.h: 74: if(holdFC1cont < 26) {
 21970  003B68  0E1A               	movlw	26
 21971  003B6A  603D               	cpfslt	_holdFC1cont,c
 21972  003B6C  D001               	goto	i1l10473
 21973  003B6E  D002               	goto	i1l10475
 21974  003B70                     i1l10473:
 21975                           
 21976                           ;PWMConfig.h: 77: FC1securLock = 1;
 21977  003B70  0E01               	movlw	1
 21978  003B72  6E38               	movwf	_FC1securLock,c
 21979  003B74                     i1l10475:
 21980                           
 21981                           ;PWMConfig.h: 78: }
 21982                           ;PWMConfig.h: 79: delay_ms(200);
 21983  003B74  0E00               	movlw	0
 21984  003B76  0100               	movlb	0	; () banked
 21985  003B78  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 21986  003B7A  0EC8               	movlw	200
 21987  003B7C  6F60               	movwf	i1delay_ms@del& (0+255),b
 21988  003B7E  EC43  F02E         	call	i1_delay_ms	;wreg free
 21989  003B82                     i1l10477:
 21990                           
 21991                           ;PWMConfig.h: 80: }
 21992                           ;PWMConfig.h: 81: }
 21993                           ;PWMConfig.h: 82: if(PORTAbits.RA6 && !lastSttFC2) {
 21994  003B82  AC80               	btfss	3968,6,c	;volatile
 21995  003B84  D031               	goto	i1l504
 21996  003B86  5040               	movf	_lastSttFC2,w,c
 21997  003B88  A4D8               	btfss	status,2,c
 21998  003B8A  D02E               	goto	i1l504
 21999                           
 22000                           ;PWMConfig.h: 83: lastSttFC2 = 0;
 22001  003B8C  0E00               	movlw	0
 22002  003B8E  6E40               	movwf	_lastSttFC2,c
 22003                           
 22004                           ;PWMConfig.h: 84: setPWM2duty(0);
 22005  003B90  0E00               	movlw	0
 22006  003B92  0100               	movlb	0	; () banked
 22007  003B94  6F61               	movwf	(i1setPWM2duty@actuator+1)& (0+255),b
 22008  003B96  0E00               	movlw	0
 22009  003B98  6F60               	movwf	i1setPWM2duty@actuator& (0+255),b
 22010  003B9A  ECB9  F029         	call	i1_setPWM2duty	;wreg free
 22011                           
 22012                           ;PWMConfig.h: 85: bladeIsUP = 0;
 22013  003B9E  0E00               	movlw	0
 22014  003BA0  0100               	movlb	0	; () banked
 22015  003BA2  6FB9               	movwf	_bladeIsUP& (0+255),b
 22016                           
 22017                           ; BSR set to: 0
 22018                           ;PWMConfig.h: 86: processTimer = 0;
 22019  003BA4  0E00               	movlw	0
 22020  003BA6  6E2E               	movwf	_processTimer,c
 22021  003BA8  0E00               	movlw	0
 22022  003BAA  6E2F               	movwf	_processTimer+1,c
 22023  003BAC  0E00               	movlw	0
 22024  003BAE  6E30               	movwf	_processTimer+2,c
 22025  003BB0  0E00               	movlw	0
 22026  003BB2  6E31               	movwf	_processTimer+3,c
 22027                           
 22028                           ; BSR set to: 0
 22029                           ;PWMConfig.h: 91: processState++;
 22030  003BB4  4A35               	infsnz	_processState,f,c
 22031  003BB6  2A36               	incf	_processState+1,f,c
 22032                           
 22033                           ; BSR set to: 0
 22034                           ;PWMConfig.h: 92: saveProcessState();
 22035  003BB8  EC0C  F02F         	call	_saveProcessState	;wreg free
 22036                           
 22037                           ;PWMConfig.h: 93: if(processState >= numCortes) {
 22038  003BBC  0100               	movlb	0	; () banked
 22039  003BBE  51CB               	movf	_numCortes& (0+255),w,b
 22040  003BC0  5C35               	subwf	_processState,w,c
 22041  003BC2  5036               	movf	_processState+1,w,c
 22042  003BC4  0A80               	xorlw	128
 22043  003BC6  0100               	movlb	0	; () banked
 22044  003BC8  6F66               	movwf	??_T2int& (0+255),b
 22045  003BCA  0100               	movlb	0	; () banked
 22046  003BCC  51CC               	movf	(_numCortes+1)& (0+255),w,b
 22047  003BCE  0A80               	xorlw	128
 22048  003BD0  0100               	movlb	0	; () banked
 22049  003BD2  5966               	subwfb	??_T2int& (0+255),w,b
 22050  003BD4  B0D8               	btfsc	status,0,c
 22051                           
 22052                           ; BSR set to: 0
 22053                           ;PWMConfig.h: 94: LATCbits.LATC4 = 0;
 22054  003BD6  988B               	bcf	3979,4,c	;volatile
 22055                           
 22056                           ; BSR set to: 0
 22057                           ;PWMConfig.h: 99: }
 22058                           ;PWMConfig.h: 100: delay_ms(200);
 22059                           
 22060                           ; BSR set to: 0
 22061  003BD8  0E00               	movlw	0
 22062  003BDA  0100               	movlb	0	; () banked
 22063  003BDC  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 22064  003BDE  0EC8               	movlw	200
 22065  003BE0  6F60               	movwf	i1delay_ms@del& (0+255),b
 22066  003BE2  EC43  F02E         	call	i1_delay_ms	;wreg free
 22067                           
 22068                           ;PWMConfig.h: 101: }else if(!PORTAbits.RA6 && lastSttFC2) {
 22069  003BE6  0012               	return	
 22070  003BE8                     i1l504:
 22071  003BE8  BC80               	btfsc	3968,6,c	;volatile
 22072  003BEA  D00D               	goto	i1l10505
 22073  003BEC  5040               	movf	_lastSttFC2,w,c
 22074  003BEE  B4D8               	btfsc	status,2,c
 22075  003BF0  D00A               	goto	i1l10505
 22076                           
 22077                           ;PWMConfig.h: 102: lastSttFC2 = 1;
 22078  003BF2  0E01               	movlw	1
 22079  003BF4  6E40               	movwf	_lastSttFC2,c
 22080                           
 22081                           ;PWMConfig.h: 106: delay_ms(50);
 22082  003BF6  0E00               	movlw	0
 22083  003BF8  0100               	movlb	0	; () banked
 22084  003BFA  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 22085  003BFC  0E32               	movlw	50
 22086  003BFE  6F60               	movwf	i1delay_ms@del& (0+255),b
 22087  003C00  EC43  F02E         	call	i1_delay_ms	;wreg free
 22088                           
 22089                           ;PWMConfig.h: 107: }else if(PORTAbits.RA6 == lastSttFC2) {
 22090  003C04  0012               	return	
 22091  003C06                     i1l10505:
 22092  003C06  AC80               	btfss	3968,6,c	;volatile
 22093  003C08  D002               	goto	i1u1396_20
 22094  003C0A  0E01               	movlw	1
 22095  003C0C  D001               	goto	i1u1396_26
 22096  003C0E                     i1u1396_20:
 22097  003C0E  0E00               	movlw	0
 22098  003C10                     i1u1396_26:
 22099  003C10  1840               	xorwf	_lastSttFC2,w,c
 22100  003C12  A4D8               	btfss	status,2,c
 22101  003C14  0012               	return	
 22102                           
 22103                           ;PWMConfig.h: 108: if(!PORTAbits.RA6) {
 22104  003C16  BC80               	btfsc	3968,6,c	;volatile
 22105  003C18  D003               	goto	i1l10511
 22106                           
 22107                           ;PWMConfig.h: 109: holdFC2cont = 0;
 22108  003C1A  0E00               	movlw	0
 22109  003C1C  6E3E               	movwf	_holdFC2cont,c
 22110                           
 22111                           ;PWMConfig.h: 111: }else {
 22112  003C1E  0012               	return	
 22113  003C20                     i1l10511:
 22114                           
 22115                           ;PWMConfig.h: 112: if(!FC2securLock)
 22116  003C20  5039               	movf	_FC2securLock,w,c
 22117  003C22  B4D8               	btfsc	status,2,c
 22118                           
 22119                           ;PWMConfig.h: 113: holdFC2cont++;
 22120  003C24  2A3E               	incf	_holdFC2cont,f,c
 22121                           
 22122                           ;PWMConfig.h: 114: if(holdFC2cont > 9) {
 22123  003C26  0E09               	movlw	9
 22124  003C28  643E               	cpfsgt	_holdFC2cont,c
 22125  003C2A  D006               	goto	i1l10523
 22126                           
 22127                           ;PWMConfig.h: 115: if(holdFC2cont < 26) {
 22128  003C2C  0E1A               	movlw	26
 22129  003C2E  603E               	cpfslt	_holdFC2cont,c
 22130  003C30  D001               	goto	i1l10521
 22131  003C32  D002               	goto	i1l10523
 22132  003C34                     i1l10521:
 22133                           
 22134                           ;PWMConfig.h: 118: FC2securLock = 1;
 22135  003C34  0E01               	movlw	1
 22136  003C36  6E39               	movwf	_FC2securLock,c
 22137  003C38                     i1l10523:
 22138                           
 22139                           ;PWMConfig.h: 119: }
 22140                           ;PWMConfig.h: 120: delay_ms(200);
 22141  003C38  0E00               	movlw	0
 22142  003C3A  0100               	movlb	0	; () banked
 22143  003C3C  6F61               	movwf	(i1delay_ms@del+1)& (0+255),b
 22144  003C3E  0EC8               	movlw	200
 22145  003C40  6F60               	movwf	i1delay_ms@del& (0+255),b
 22146  003C42  EC43  F02E         	call	i1_delay_ms	;wreg free
 22147  003C46  0012               	return	
 22148  003C48                     __end_of_T2int:
 22149                           	opt stack 0
 22150                           pclatu	equ	0xFFB
 22151                           pclath	equ	0xFFA
 22152                           tblptru	equ	0xFF8
 22153                           tblptrh	equ	0xFF7
 22154                           tblptrl	equ	0xFF6
 22155                           tablat	equ	0xFF5
 22156                           prodh	equ	0xFF4
 22157                           prodl	equ	0xFF3
 22158                           intcon	equ	0xFF2
 22159                           postinc0	equ	0xFEE
 22160                           fsr0h	equ	0xFEA
 22161                           fsr0l	equ	0xFE9
 22162                           wreg	equ	0xFE8
 22163                           postdec1	equ	0xFE5
 22164                           fsr1h	equ	0xFE2
 22165                           fsr1l	equ	0xFE1
 22166                           bsr	equ	0xFE0
 22167                           indf2	equ	0xFDF
 22168                           postinc2	equ	0xFDE
 22169                           postdec2	equ	0xFDD
 22170                           plusw2	equ	0xFDB
 22171                           fsr2h	equ	0xFDA
 22172                           fsr2l	equ	0xFD9
 22173                           status	equ	0xFD8
 22174                           
 22175 ;; *************** function i1_setPWM2duty *****************
 22176 ;; Defined at:
 22177 ;;		line 33 in file "source/PWMConfig.h"
 22178 ;; Parameters:    Size  Location     Type
 22179 ;;  actuator        2    0[BANK0 ] short 
 22180 ;; Auto vars:     Size  Location     Type
 22181 ;;  setPWM2duty     2    4[BANK0 ] short 
 22182 ;; Return value:  Size  Location     Type
 22183 ;;                  1    wreg      void 
 22184 ;; Registers used:
 22185 ;;		wreg, status,2, status,0
 22186 ;; Tracked objects:
 22187 ;;		On entry : 0/0
 22188 ;;		On exit  : 0/0
 22189 ;;		Unchanged: 0/0
 22190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22191 ;;      Params:         0       2       0       0       0       0       0
 22192 ;;      Locals:         0       2       0       0       0       0       0
 22193 ;;      Temps:          0       2       0       0       0       0       0
 22194 ;;      Totals:         0       6       0       0       0       0       0
 22195 ;;Total ram usage:        6 bytes
 22196 ;; Hardware stack levels used:    1
 22197 ;; Hardware stack levels required when called:    3
 22198 ;; This function calls:
 22199 ;;		Nothing
 22200 ;; This function is called by:
 22201 ;;		_T2int
 22202 ;; This function uses a non-reentrant model
 22203 ;;
 22204                           
 22205                           	psect	text85
 22206  005372                     __ptext85:
 22207                           	opt stack 0
 22208  005372                     i1_setPWM2duty:
 22209                           	opt stack 15
 22210                           
 22211                           ;PWMConfig.h: 34: short act = 400;
 22212                           
 22213                           ;incstack = 0
 22214  005372  0E01               	movlw	1
 22215  005374  0100               	movlb	0	; () banked
 22216  005376  6F65               	movwf	(i1setPWM2duty@act+1)& (0+255),b
 22217  005378  0E90               	movlw	144
 22218  00537A  6F64               	movwf	i1setPWM2duty@act& (0+255),b
 22219                           
 22220                           ; BSR set to: 0
 22221                           ;PWMConfig.h: 35: if(actuator > 400)
 22222  00537C  0100               	movlb	0	; () banked
 22223  00537E  BF61               	btfsc	(i1setPWM2duty@actuator+1)& (0+255),7,b
 22224  005380  D00D               	goto	i1l10317
 22225  005382  0E91               	movlw	145
 22226  005384  0100               	movlb	0	; () banked
 22227  005386  5D60               	subwf	i1setPWM2duty@actuator& (0+255),w,b
 22228  005388  0E01               	movlw	1
 22229  00538A  0100               	movlb	0	; () banked
 22230  00538C  5961               	subwfb	(i1setPWM2duty@actuator+1)& (0+255),w,b
 22231  00538E  A0D8               	btfss	status,0,c
 22232  005390  D005               	goto	i1l10317
 22233                           
 22234                           ; BSR set to: 0
 22235                           ;PWMConfig.h: 36: act = 800;
 22236  005392  0E03               	movlw	3
 22237  005394  0100               	movlb	0	; () banked
 22238  005396  6F65               	movwf	(i1setPWM2duty@act+1)& (0+255),b
 22239  005398  0E20               	movlw	32
 22240  00539A  D00F               	goto	L17
 22241  00539C                     i1l10317:
 22242                           
 22243                           ; BSR set to: 0
 22244                           ;PWMConfig.h: 37: else if(actuator < -400)
 22245  00539C  0100               	movlb	0	; () banked
 22246  00539E  AF61               	btfss	(i1setPWM2duty@actuator+1)& (0+255),7,b
 22247  0053A0  D00E               	goto	i1l10321
 22248  0053A2  0E70               	movlw	112
 22249  0053A4  0100               	movlb	0	; () banked
 22250  0053A6  5D60               	subwf	i1setPWM2duty@actuator& (0+255),w,b
 22251  0053A8  0EFE               	movlw	254
 22252  0053AA  0100               	movlb	0	; () banked
 22253  0053AC  5961               	subwfb	(i1setPWM2duty@actuator+1)& (0+255),w,b
 22254  0053AE  B0D8               	btfsc	status,0,c
 22255  0053B0  D006               	goto	i1l10321
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;PWMConfig.h: 38: act = 0;
 22259  0053B2  0E00               	movlw	0
 22260  0053B4  0100               	movlb	0	; () banked
 22261  0053B6  6F65               	movwf	(i1setPWM2duty@act+1)& (0+255),b
 22262  0053B8  0E00               	movlw	0
 22263  0053BA                     L17:
 22264  0053BA  6F64               	movwf	i1setPWM2duty@act& (0+255),b
 22265  0053BC  D00A               	goto	i1l486
 22266  0053BE                     i1l10321:
 22267                           
 22268                           ; BSR set to: 0
 22269                           ;PWMConfig.h: 39: else
 22270                           ;PWMConfig.h: 40: act = actuator + 400;
 22271  0053BE  0E90               	movlw	144
 22272  0053C0  0100               	movlb	0	; () banked
 22273  0053C2  2560               	addwf	i1setPWM2duty@actuator& (0+255),w,b
 22274  0053C4  0100               	movlb	0	; () banked
 22275  0053C6  6F64               	movwf	i1setPWM2duty@act& (0+255),b
 22276  0053C8  0E01               	movlw	1
 22277  0053CA  0100               	movlb	0	; () banked
 22278  0053CC  2161               	addwfc	(i1setPWM2duty@actuator+1)& (0+255),w,b
 22279  0053CE  0100               	movlb	0	; () banked
 22280  0053D0  6F65               	movwf	(i1setPWM2duty@act+1)& (0+255),b
 22281  0053D2                     i1l486:
 22282                           
 22283                           ; BSR set to: 0
 22284                           ;PWMConfig.h: 41: CCP2CONbits.DC2B = act;
 22285  0053D2  C064  F062         	movff	i1setPWM2duty@act,??i1_setPWM2duty
 22286  0053D6  0100               	movlb	0	; () banked
 22287  0053D8  3B62               	swapf	??i1_setPWM2duty& (0+255),f,b
 22288  0053DA  5066               	movf	3942,w,c	;volatile
 22289  0053DC  0100               	movlb	0	; () banked
 22290  0053DE  1962               	xorwf	??i1_setPWM2duty& (0+255),w,b
 22291  0053E0  0BCF               	andlw	-49
 22292  0053E2  1962               	xorwf	??i1_setPWM2duty& (0+255),w,b
 22293  0053E4  6E66               	movwf	3942,c	;volatile
 22294                           
 22295                           ;PWMConfig.h: 42: CCPR2L = act>>2;
 22296  0053E6  C064  F062         	movff	i1setPWM2duty@act,??i1_setPWM2duty
 22297  0053EA  C065  F063         	movff	i1setPWM2duty@act+1,??i1_setPWM2duty+1
 22298  0053EE  0100               	movlb	0	; () banked
 22299  0053F0  3563               	rlcf	(??i1_setPWM2duty+1)& (0+255),w,b
 22300  0053F2  3363               	rrcf	(??i1_setPWM2duty+1)& (0+255),f,b
 22301  0053F4  3362               	rrcf	??i1_setPWM2duty& (0+255),f,b
 22302  0053F6  0100               	movlb	0	; () banked
 22303  0053F8  3563               	rlcf	(??i1_setPWM2duty+1)& (0+255),w,b
 22304  0053FA  3363               	rrcf	(??i1_setPWM2duty+1)& (0+255),f,b
 22305  0053FC  3362               	rrcf	??i1_setPWM2duty& (0+255),f,b
 22306  0053FE  0100               	movlb	0	; () banked
 22307  005400  5162               	movf	??i1_setPWM2duty& (0+255),w,b
 22308  005402  6E67               	movwf	3943,c	;volatile
 22309                           
 22310                           ; BSR set to: 0
 22311  005404  0012               	return		;funcret
 22312  005406                     __end_ofi1_setPWM2duty:
 22313                           	opt stack 0
 22314                           pclatu	equ	0xFFB
 22315                           pclath	equ	0xFFA
 22316                           tblptru	equ	0xFF8
 22317                           tblptrh	equ	0xFF7
 22318                           tblptrl	equ	0xFF6
 22319                           tablat	equ	0xFF5
 22320                           prodh	equ	0xFF4
 22321                           prodl	equ	0xFF3
 22322                           intcon	equ	0xFF2
 22323                           postinc0	equ	0xFEE
 22324                           fsr0h	equ	0xFEA
 22325                           fsr0l	equ	0xFE9
 22326                           wreg	equ	0xFE8
 22327                           postdec1	equ	0xFE5
 22328                           fsr1h	equ	0xFE2
 22329                           fsr1l	equ	0xFE1
 22330                           bsr	equ	0xFE0
 22331                           indf2	equ	0xFDF
 22332                           postinc2	equ	0xFDE
 22333                           postdec2	equ	0xFDD
 22334                           plusw2	equ	0xFDB
 22335                           fsr2h	equ	0xFDA
 22336                           fsr2l	equ	0xFD9
 22337                           status	equ	0xFD8
 22338                           
 22339 ;; *************** function i1_delay_ms *****************
 22340 ;; Defined at:
 22341 ;;		line 13 in file "source/../../delay.h"
 22342 ;; Parameters:    Size  Location     Type
 22343 ;;  del             2    0[BANK0 ] int 
 22344 ;; Auto vars:     Size  Location     Type
 22345 ;;  delay_ms        2    3[BANK0 ] int 
 22346 ;; Return value:  Size  Location     Type
 22347 ;;                  1    wreg      void 
 22348 ;; Registers used:
 22349 ;;		wreg, status,2, status,0
 22350 ;; Tracked objects:
 22351 ;;		On entry : 0/0
 22352 ;;		On exit  : 0/0
 22353 ;;		Unchanged: 0/0
 22354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22355 ;;      Params:         0       2       0       0       0       0       0
 22356 ;;      Locals:         0       2       0       0       0       0       0
 22357 ;;      Temps:          0       1       0       0       0       0       0
 22358 ;;      Totals:         0       5       0       0       0       0       0
 22359 ;;Total ram usage:        5 bytes
 22360 ;; Hardware stack levels used:    1
 22361 ;; Hardware stack levels required when called:    3
 22362 ;; This function calls:
 22363 ;;		Nothing
 22364 ;; This function is called by:
 22365 ;;		_T2int
 22366 ;; This function uses a non-reentrant model
 22367 ;;
 22368                           
 22369                           	psect	text86
 22370  005C86                     __ptext86:
 22371                           	opt stack 0
 22372  005C86                     i1_delay_ms:
 22373                           	opt stack 15
 22374                           
 22375                           ;delay.h: 14: for(int i = 1;i <= del;i++)
 22376                           
 22377                           ; BSR set to: 0
 22378                           ;incstack = 0
 22379  005C86  0E00               	movlw	0
 22380  005C88  0100               	movlb	0	; () banked
 22381  005C8A  6F64               	movwf	(i1delay_ms@i+1)& (0+255),b
 22382  005C8C  0E01               	movlw	1
 22383  005C8E  6F63               	movwf	i1delay_ms@i& (0+255),b
 22384  005C90  D00C               	goto	i1l100
 22385  005C92                     i1l10259:
 22386                           
 22387                           ; BSR set to: 0
 22388                           ;delay.h: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
 22389  005C92  0E06               	movlw	6
 22390  005C94  0100               	movlb	0	; () banked
 22391  005C96  6F62               	movwf	??i1_delay_ms& (0+255),b
 22392  005C98  0E30               	movlw	48
 22393  005C9A                     i1u1464_27:
 22394  005C9A  2EE8               	decfsz	wreg,f,c
 22395  005C9C  D7FE               	goto	i1u1464_27
 22396  005C9E  2F62               	decfsz	??i1_delay_ms& (0+255),f,b
 22397  005CA0  D7FC               	goto	i1u1464_27
 22398  005CA2  D000               	nop2	
 22399  005CA4  0100               	movlb	0	; () banked
 22400  005CA6  4B63               	infsnz	i1delay_ms@i& (0+255),f,b
 22401  005CA8  2B64               	incf	(i1delay_ms@i+1)& (0+255),f,b
 22402  005CAA                     i1l100:
 22403                           
 22404                           ; BSR set to: 0
 22405  005CAA  0100               	movlb	0	; () banked
 22406  005CAC  5163               	movf	i1delay_ms@i& (0+255),w,b
 22407  005CAE  0100               	movlb	0	; () banked
 22408  005CB0  5D60               	subwf	i1delay_ms@del& (0+255),w,b
 22409  005CB2  0100               	movlb	0	; () banked
 22410  005CB4  5161               	movf	(i1delay_ms@del+1)& (0+255),w,b
 22411  005CB6  0A80               	xorlw	128
 22412  005CB8  0100               	movlb	0	; () banked
 22413  005CBA  6F62               	movwf	??i1_delay_ms& (0+255),b
 22414  005CBC  0100               	movlb	0	; () banked
 22415  005CBE  5164               	movf	(i1delay_ms@i+1)& (0+255),w,b
 22416  005CC0  0A80               	xorlw	128
 22417  005CC2  0100               	movlb	0	; () banked
 22418  005CC4  5962               	subwfb	??i1_delay_ms& (0+255),w,b
 22419  005CC6  A0D8               	btfss	status,0,c
 22420  005CC8  0012               	return	
 22421  005CCA  D7E3               	goto	i1l10259
 22422  005CCC                     __end_ofi1_delay_ms:
 22423                           	opt stack 0
 22424                           pclatu	equ	0xFFB
 22425                           pclath	equ	0xFFA
 22426                           tblptru	equ	0xFF8
 22427                           tblptrh	equ	0xFF7
 22428                           tblptrl	equ	0xFF6
 22429                           tablat	equ	0xFF5
 22430                           prodh	equ	0xFF4
 22431                           prodl	equ	0xFF3
 22432                           intcon	equ	0xFF2
 22433                           postinc0	equ	0xFEE
 22434                           fsr0h	equ	0xFEA
 22435                           fsr0l	equ	0xFE9
 22436                           wreg	equ	0xFE8
 22437                           postdec1	equ	0xFE5
 22438                           fsr1h	equ	0xFE2
 22439                           fsr1l	equ	0xFE1
 22440                           bsr	equ	0xFE0
 22441                           indf2	equ	0xFDF
 22442                           postinc2	equ	0xFDE
 22443                           postdec2	equ	0xFDD
 22444                           plusw2	equ	0xFDB
 22445                           fsr2h	equ	0xFDA
 22446                           fsr2l	equ	0xFD9
 22447                           status	equ	0xFD8
 22448                           
 22449 ;; *************** function _saveProcessState *****************
 22450 ;; Defined at:
 22451 ;;		line 124 in file "source/sysParams.h"
 22452 ;; Parameters:    Size  Location     Type
 22453 ;;		None
 22454 ;; Auto vars:     Size  Location     Type
 22455 ;;		None
 22456 ;; Return value:  Size  Location     Type
 22457 ;;                  1    wreg      void 
 22458 ;; Registers used:
 22459 ;;		wreg, status,2, cstack
 22460 ;; Tracked objects:
 22461 ;;		On entry : 0/0
 22462 ;;		On exit  : 0/0
 22463 ;;		Unchanged: 0/0
 22464 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22465 ;;      Params:         0       0       0       0       0       0       0
 22466 ;;      Locals:         0       0       0       0       0       0       0
 22467 ;;      Temps:          0       0       0       0       0       0       0
 22468 ;;      Totals:         0       0       0       0       0       0       0
 22469 ;;Total ram usage:        0 bytes
 22470 ;; Hardware stack levels used:    1
 22471 ;; Hardware stack levels required when called:    4
 22472 ;; This function calls:
 22473 ;;		i1_writeEEPROM
 22474 ;; This function is called by:
 22475 ;;		_T2int
 22476 ;; This function uses a non-reentrant model
 22477 ;;
 22478                           
 22479                           	psect	text87
 22480  005E18                     __ptext87:
 22481                           	opt stack 0
 22482  005E18                     _saveProcessState:
 22483                           	opt stack 14
 22484                           
 22485                           ;sysParams.h: 125: EECON1bits.WREN = 1;
 22486                           
 22487                           ; BSR set to: 0
 22488                           ;incstack = 0
 22489  005E18  84A6               	bsf	4006,2,c	;volatile
 22490                           
 22491                           ;sysParams.h: 126: ie = INTCONbits.GIE;
 22492  005E1A  0E00               	movlw	0
 22493  005E1C  BEF2               	btfsc	intcon,7,c	;volatile
 22494  005E1E  0E01               	movlw	1
 22495  005E20  0100               	movlb	0	; () banked
 22496  005E22  6FBF               	movwf	_ie& (0+255),b
 22497                           
 22498                           ; BSR set to: 0
 22499                           ;sysParams.h: 127: INTCONbits.GIE = 0;
 22500  005E24  9EF2               	bcf	intcon,7,c	;volatile
 22501                           
 22502                           ; BSR set to: 0
 22503                           ;sysParams.h: 128: writeEEPROM(30, ProcessStarted);
 22504  005E26  C03A  F060         	movff	_ProcessStarted,i1writeEEPROM@data
 22505  005E2A  0E1E               	movlw	30
 22506  005E2C  ECF9  F02F         	call	i1_writeEEPROM
 22507                           
 22508                           ;sysParams.h: 129: writeEEPROM(31, processState);
 22509  005E30  C035  F060         	movff	_processState,i1writeEEPROM@data
 22510  005E34  0E1F               	movlw	31
 22511  005E36  ECF9  F02F         	call	i1_writeEEPROM
 22512                           
 22513                           ;sysParams.h: 130: EECON1bits.WREN = 0;
 22514  005E3A  94A6               	bcf	4006,2,c	;volatile
 22515                           
 22516                           ;sysParams.h: 131: INTCONbits.GIE = ie;
 22517  005E3C  0100               	movlb	0	; () banked
 22518  005E3E  B1BF               	btfsc	_ie& (0+255),0,b
 22519  005E40  D002               	bra	i1u1316_25
 22520  005E42  9EF2               	bcf	intcon,7,c	;volatile
 22521  005E44  D001               	bra	i1u1316_26
 22522  005E46                     i1u1316_25:
 22523  005E46  8EF2               	bsf	intcon,7,c	;volatile
 22524  005E48                     i1u1316_26:
 22525  005E48  0012               	return		;funcret
 22526  005E4A                     __end_of_saveProcessState:
 22527                           	opt stack 0
 22528                           pclatu	equ	0xFFB
 22529                           pclath	equ	0xFFA
 22530                           tblptru	equ	0xFF8
 22531                           tblptrh	equ	0xFF7
 22532                           tblptrl	equ	0xFF6
 22533                           tablat	equ	0xFF5
 22534                           prodh	equ	0xFF4
 22535                           prodl	equ	0xFF3
 22536                           intcon	equ	0xFF2
 22537                           postinc0	equ	0xFEE
 22538                           fsr0h	equ	0xFEA
 22539                           fsr0l	equ	0xFE9
 22540                           wreg	equ	0xFE8
 22541                           postdec1	equ	0xFE5
 22542                           fsr1h	equ	0xFE2
 22543                           fsr1l	equ	0xFE1
 22544                           bsr	equ	0xFE0
 22545                           indf2	equ	0xFDF
 22546                           postinc2	equ	0xFDE
 22547                           postdec2	equ	0xFDD
 22548                           plusw2	equ	0xFDB
 22549                           fsr2h	equ	0xFDA
 22550                           fsr2l	equ	0xFD9
 22551                           status	equ	0xFD8
 22552                           
 22553 ;; *************** function i1_writeEEPROM *****************
 22554 ;; Defined at:
 22555 ;;		line 31 in file "source/sysParams.h"
 22556 ;; Parameters:    Size  Location     Type
 22557 ;;  adr             1    wreg     unsigned char 
 22558 ;;  data            1    0[BANK0 ] unsigned char 
 22559 ;; Auto vars:     Size  Location     Type
 22560 ;;  adr             1    1[BANK0 ] unsigned char 
 22561 ;; Return value:  Size  Location     Type
 22562 ;;                  1    wreg      void 
 22563 ;; Registers used:
 22564 ;;		wreg, status,2
 22565 ;; Tracked objects:
 22566 ;;		On entry : 0/0
 22567 ;;		On exit  : 0/0
 22568 ;;		Unchanged: 0/0
 22569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22570 ;;      Params:         0       1       0       0       0       0       0
 22571 ;;      Locals:         0       1       0       0       0       0       0
 22572 ;;      Temps:          0       0       0       0       0       0       0
 22573 ;;      Totals:         0       2       0       0       0       0       0
 22574 ;;Total ram usage:        2 bytes
 22575 ;; Hardware stack levels used:    1
 22576 ;; Hardware stack levels required when called:    3
 22577 ;; This function calls:
 22578 ;;		Nothing
 22579 ;; This function is called by:
 22580 ;;		_saveProcessState
 22581 ;;		i1_saveSysParams
 22582 ;; This function uses a non-reentrant model
 22583 ;;
 22584                           
 22585                           	psect	text88
 22586  005FF2                     __ptext88:
 22587                           	opt stack 0
 22588  005FF2                     i1_writeEEPROM:
 22589                           	opt stack 14
 22590                           
 22591                           ;incstack = 0
 22592                           ;i1writeEEPROM@adr stored from wreg
 22593  005FF2  0100               	movlb	0	; () banked
 22594  005FF4  6F61               	movwf	i1writeEEPROM@adr& (0+255),b
 22595                           
 22596                           ;sysParams.h: 32: EEADR = adr;
 22597  005FF6  C061  FFA9         	movff	i1writeEEPROM@adr,4009	;volatile
 22598                           
 22599                           ;sysParams.h: 33: EEDATA = data;
 22600  005FFA  C060  FFA8         	movff	i1writeEEPROM@data,4008	;volatile
 22601                           
 22602                           ;sysParams.h: 34: EECON1bits.EEPGD = 0;
 22603  005FFE  9EA6               	bcf	4006,7,c	;volatile
 22604                           
 22605                           ;sysParams.h: 35: EECON1bits.CFGS = 0;
 22606  006000  9CA6               	bcf	4006,6,c	;volatile
 22607                           
 22608                           ;sysParams.h: 36: EECON2 = 0x55;
 22609  006002  0E55               	movlw	85
 22610  006004  6EA7               	movwf	4007,c	;volatile
 22611                           
 22612                           ;sysParams.h: 37: EECON2 = 0xAA;
 22613  006006  0EAA               	movlw	170
 22614  006008  6EA7               	movwf	4007,c	;volatile
 22615                           
 22616                           ;sysParams.h: 38: EECON1bits.WR = 1;
 22617  00600A  82A6               	bsf	4006,1,c	;volatile
 22618  00600C                     i1l294:
 22619  00600C  A2A6               	btfss	4006,1,c	;volatile
 22620  00600E  0012               	return	
 22621  006010  D7FD               	goto	i1l294
 22622  006012                     __end_ofi1_writeEEPROM:
 22623                           	opt stack 0
 22624                           pclatu	equ	0xFFB
 22625                           pclath	equ	0xFFA
 22626                           tblptru	equ	0xFF8
 22627                           tblptrh	equ	0xFF7
 22628                           tblptrl	equ	0xFF6
 22629                           tablat	equ	0xFF5
 22630                           prodh	equ	0xFF4
 22631                           prodl	equ	0xFF3
 22632                           intcon	equ	0xFF2
 22633                           postinc0	equ	0xFEE
 22634                           fsr0h	equ	0xFEA
 22635                           fsr0l	equ	0xFE9
 22636                           wreg	equ	0xFE8
 22637                           postdec1	equ	0xFE5
 22638                           fsr1h	equ	0xFE2
 22639                           fsr1l	equ	0xFE1
 22640                           bsr	equ	0xFE0
 22641                           indf2	equ	0xFDF
 22642                           postinc2	equ	0xFDE
 22643                           postdec2	equ	0xFDD
 22644                           plusw2	equ	0xFDB
 22645                           fsr2h	equ	0xFDA
 22646                           fsr2l	equ	0xFD9
 22647                           status	equ	0xFD8
 22648                           
 22649 ;; *************** function _hp_isr *****************
 22650 ;; Defined at:
 22651 ;;		line 14 in file "source/main.c"
 22652 ;; Parameters:    Size  Location     Type
 22653 ;;		None
 22654 ;; Auto vars:     Size  Location     Type
 22655 ;;		None
 22656 ;; Return value:  Size  Location     Type
 22657 ;;                  1    wreg      void 
 22658 ;; Registers used:
 22659 ;;		wreg, status,2, status,0, cstack
 22660 ;; Tracked objects:
 22661 ;;		On entry : 0/0
 22662 ;;		On exit  : 0/0
 22663 ;;		Unchanged: 0/0
 22664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22665 ;;      Params:         0       0       0       0       0       0       0
 22666 ;;      Locals:         0       0       0       0       0       0       0
 22667 ;;      Temps:         14       0       0       0       0       0       0
 22668 ;;      Totals:        14       0       0       0       0       0       0
 22669 ;;Total ram usage:       14 bytes
 22670 ;; Hardware stack levels used:    1
 22671 ;; Hardware stack levels required when called:    2
 22672 ;; This function calls:
 22673 ;;		_T4int
 22674 ;; This function is called by:
 22675 ;;		Interrupt level 2
 22676 ;; This function uses a non-reentrant model
 22677 ;;
 22678                           
 22679                           	psect	intcode
 22680  000008                     __pintcode:
 22681                           	opt stack 0
 22682  000008                     _hp_isr:
 22683                           	opt stack 13
 22684                           
 22685                           ;incstack = 0
 22686  000008  8251               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 22687  00000A  CFFA F01C          	movff	pclath,??_hp_isr
 22688  00000E  CFFB F01D          	movff	pclatu,??_hp_isr+1
 22689  000012  EFD5  F02B         	goto	int_func
 22690                           pclatu	equ	0xFFB
 22691                           pclath	equ	0xFFA
 22692                           tblptru	equ	0xFF8
 22693                           tblptrh	equ	0xFF7
 22694                           tblptrl	equ	0xFF6
 22695                           tablat	equ	0xFF5
 22696                           prodh	equ	0xFF4
 22697                           prodl	equ	0xFF3
 22698                           intcon	equ	0xFF2
 22699                           postinc0	equ	0xFEE
 22700                           fsr0h	equ	0xFEA
 22701                           fsr0l	equ	0xFE9
 22702                           wreg	equ	0xFE8
 22703                           postdec1	equ	0xFE5
 22704                           fsr1h	equ	0xFE2
 22705                           fsr1l	equ	0xFE1
 22706                           bsr	equ	0xFE0
 22707                           indf2	equ	0xFDF
 22708                           postinc2	equ	0xFDE
 22709                           postdec2	equ	0xFDD
 22710                           plusw2	equ	0xFDB
 22711                           fsr2h	equ	0xFDA
 22712                           fsr2l	equ	0xFD9
 22713                           status	equ	0xFD8
 22714                           
 22715                           	psect	intcode_body
 22716  0057AA                     __pintcode_body:
 22717                           	opt stack 13
 22718  0057AA                     int_func:
 22719                           	opt stack 13
 22720  0057AA  CFE9 F01E          	movff	fsr0l,??_hp_isr+2
 22721  0057AE  CFEA F01F          	movff	fsr0h,??_hp_isr+3
 22722  0057B2  CFE1 F020          	movff	fsr1l,??_hp_isr+4
 22723  0057B6  CFE2 F021          	movff	fsr1h,??_hp_isr+5
 22724  0057BA  CFD9 F022          	movff	fsr2l,??_hp_isr+6
 22725  0057BE  CFDA F023          	movff	fsr2h,??_hp_isr+7
 22726  0057C2  CFF3 F024          	movff	prodl,??_hp_isr+8
 22727  0057C6  CFF4 F025          	movff	prodh,??_hp_isr+9
 22728  0057CA  CFF6 F026          	movff	tblptrl,??_hp_isr+10
 22729  0057CE  CFF7 F027          	movff	tblptrh,??_hp_isr+11
 22730  0057D2  CFF8 F028          	movff	tblptru,??_hp_isr+12
 22731  0057D6  CFF5 F029          	movff	tablat,??_hp_isr+13
 22732                           
 22733                           ;main.c: 15: if(PIE5bits.TMR4IE && PIR5bits.TMR4IF) {
 22734  0057DA  B07D               	btfsc	3965,0,c	;volatile
 22735  0057DC  A07E               	btfss	3966,0,c	;volatile
 22736  0057DE  D003               	goto	i2l818
 22737                           
 22738                           ;main.c: 16: T4int();
 22739  0057E0  ECD2  F027         	call	_T4int	;wreg free
 22740                           
 22741                           ;main.c: 17: PIR5bits.TMR4IF = 0;
 22742  0057E4  907E               	bcf	3966,0,c	;volatile
 22743  0057E6                     i2l818:
 22744  0057E6  C029  FFF5         	movff	??_hp_isr+13,tablat
 22745  0057EA  C028  FFF8         	movff	??_hp_isr+12,tblptru
 22746  0057EE  C027  FFF7         	movff	??_hp_isr+11,tblptrh
 22747  0057F2  C026  FFF6         	movff	??_hp_isr+10,tblptrl
 22748  0057F6  C025  FFF4         	movff	??_hp_isr+9,prodh
 22749  0057FA  C024  FFF3         	movff	??_hp_isr+8,prodl
 22750  0057FE  C023  FFDA         	movff	??_hp_isr+7,fsr2h
 22751  005802  C022  FFD9         	movff	??_hp_isr+6,fsr2l
 22752  005806  C021  FFE2         	movff	??_hp_isr+5,fsr1h
 22753  00580A  C020  FFE1         	movff	??_hp_isr+4,fsr1l
 22754  00580E  C01F  FFEA         	movff	??_hp_isr+3,fsr0h
 22755  005812  C01E  FFE9         	movff	??_hp_isr+2,fsr0l
 22756  005816  C01D  FFFB         	movff	??_hp_isr+1,pclatu
 22757  00581A  C01C  FFFA         	movff	??_hp_isr,pclath
 22758  00581E  9251               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22759  005820  0011               	retfie		f
 22760  005822                     __end_of_hp_isr:
 22761                           	opt stack 0
 22762                           pclatu	equ	0xFFB
 22763                           pclath	equ	0xFFA
 22764                           tblptru	equ	0xFF8
 22765                           tblptrh	equ	0xFF7
 22766                           tblptrl	equ	0xFF6
 22767                           tablat	equ	0xFF5
 22768                           prodh	equ	0xFF4
 22769                           prodl	equ	0xFF3
 22770                           intcon	equ	0xFF2
 22771                           postinc0	equ	0xFEE
 22772                           fsr0h	equ	0xFEA
 22773                           fsr0l	equ	0xFE9
 22774                           wreg	equ	0xFE8
 22775                           postdec1	equ	0xFE5
 22776                           fsr1h	equ	0xFE2
 22777                           fsr1l	equ	0xFE1
 22778                           bsr	equ	0xFE0
 22779                           indf2	equ	0xFDF
 22780                           postinc2	equ	0xFDE
 22781                           postdec2	equ	0xFDD
 22782                           plusw2	equ	0xFDB
 22783                           fsr2h	equ	0xFDA
 22784                           fsr2l	equ	0xFD9
 22785                           status	equ	0xFD8
 22786                           
 22787 ;; *************** function _T4int *****************
 22788 ;; Defined at:
 22789 ;;		line 13 in file "source/T4Config.h"
 22790 ;; Parameters:    Size  Location     Type
 22791 ;;		None
 22792 ;; Auto vars:     Size  Location     Type
 22793 ;;		None
 22794 ;; Return value:  Size  Location     Type
 22795 ;;                  1    wreg      void 
 22796 ;; Registers used:
 22797 ;;		wreg, status,2, status,0, cstack
 22798 ;; Tracked objects:
 22799 ;;		On entry : 0/0
 22800 ;;		On exit  : 0/0
 22801 ;;		Unchanged: 0/0
 22802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22803 ;;      Params:         0       0       0       0       0       0       0
 22804 ;;      Locals:         0       0       0       0       0       0       0
 22805 ;;      Temps:          1       0       0       0       0       0       0
 22806 ;;      Totals:         1       0       0       0       0       0       0
 22807 ;;Total ram usage:        1 bytes
 22808 ;; Hardware stack levels used:    1
 22809 ;; Hardware stack levels required when called:    1
 22810 ;; This function calls:
 22811 ;;		i2___flge
 22812 ;;		i2___xxtofl
 22813 ;;		i2_setPWM2duty
 22814 ;; This function is called by:
 22815 ;;		_hp_isr
 22816 ;; This function uses a non-reentrant model
 22817 ;;
 22818                           
 22819                           	psect	text90
 22820  004FA4                     __ptext90:
 22821                           	opt stack 0
 22822  004FA4                     _T4int:
 22823                           	opt stack 13
 22824                           
 22825                           ;incstack = 0
 22826  004FA4  0004               	clrwdt		;# 
 22827                           
 22828                           ;T4Config.h: 15: processTimer++;
 22829  004FA6  0E01               	movlw	1
 22830  004FA8  262E               	addwf	_processTimer,f,c
 22831  004FAA  0E00               	movlw	0
 22832  004FAC  222F               	addwfc	_processTimer+1,f,c
 22833  004FAE  2230               	addwfc	_processTimer+2,f,c
 22834  004FB0  2231               	addwfc	_processTimer+3,f,c
 22835                           
 22836                           ;T4Config.h: 16: if(bladeIsUP) {
 22837  004FB2  0100               	movlb	0	; () banked
 22838  004FB4  51B9               	movf	_bladeIsUP& (0+255),w,b
 22839  004FB6  B4D8               	btfsc	status,2,c
 22840  004FB8  D036               	goto	i2l7789
 22841                           
 22842                           ; BSR set to: 0
 22843                           ;T4Config.h: 17: if(processTimer >= timsXcorte && ProcessStarted && processState < numCo
      +                          rtes) {
 22844  004FBA  C02E  F001         	movff	_processTimer,i2___xxtofl@val
 22845  004FBE  C02F  F002         	movff	_processTimer+1,i2___xxtofl@val+1
 22846  004FC2  C030  F003         	movff	_processTimer+2,i2___xxtofl@val+2
 22847  004FC6  C031  F004         	movff	_processTimer+3,i2___xxtofl@val+3
 22848  004FCA  0E01               	movlw	1
 22849  004FCC  ECE8  F01E         	call	i2___xxtofl
 22850  004FD0  C001  F00F         	movff	?i2___xxtofl,i2___flge@ff1
 22851  004FD4  C002  F010         	movff	?i2___xxtofl+1,i2___flge@ff1+1
 22852  004FD8  C003  F011         	movff	?i2___xxtofl+2,i2___flge@ff1+2
 22853  004FDC  C004  F012         	movff	?i2___xxtofl+3,i2___flge@ff1+3
 22854  004FE0  C047  F013         	movff	_timsXcorte,i2___flge@ff2
 22855  004FE4  C048  F014         	movff	_timsXcorte+1,i2___flge@ff2+1
 22856  004FE8  C049  F015         	movff	_timsXcorte+2,i2___flge@ff2+2
 22857  004FEC  C04A  F016         	movff	_timsXcorte+3,i2___flge@ff2+3
 22858  004FF0  EC26  F020         	call	i2___flge	;wreg free
 22859  004FF4  A0D8               	btfss	status,0,c
 22860  004FF6  0012               	return	
 22861  004FF8  503A               	movf	_ProcessStarted,w,c
 22862  004FFA  B4D8               	btfsc	status,2,c
 22863  004FFC  0012               	return	
 22864  004FFE  0100               	movlb	0	; () banked
 22865  005000  51CB               	movf	_numCortes& (0+255),w,b
 22866  005002  5C35               	subwf	_processState,w,c
 22867  005004  5036               	movf	_processState+1,w,c
 22868  005006  0A80               	xorlw	128
 22869  005008  6E1B               	movwf	??_T4int& (0+255),c
 22870  00500A  0100               	movlb	0	; () banked
 22871  00500C  51CC               	movf	(_numCortes+1)& (0+255),w,b
 22872  00500E  0A80               	xorlw	128
 22873  005010  581B               	subwfb	??_T4int& (0+255),w,c
 22874  005012  B0D8               	btfsc	status,0,c
 22875  005014  0012               	return	
 22876                           
 22877                           ; BSR set to: 0
 22878                           ;T4Config.h: 18: setPWM2duty(400);
 22879  005016  0E01               	movlw	1
 22880  005018  6E02               	movwf	i2setPWM2duty@actuator+1,c
 22881  00501A  0E90               	movlw	144
 22882  00501C  6E01               	movwf	i2setPWM2duty@actuator,c
 22883  00501E  EC86  F02C         	call	i2_setPWM2duty	;wreg free
 22884                           
 22885                           ;T4Config.h: 19: LATCbits.LATC4 = 1;
 22886  005022  888B               	bsf	3979,4,c	;volatile
 22887                           
 22888                           ;T4Config.h: 24: }
 22889                           ;T4Config.h: 25: }else {
 22890  005024  0012               	return	
 22891  005026                     i2l7789:
 22892                           
 22893                           ;T4Config.h: 26: if(processTimer >= timeDOWN && ProcessStarted) {
 22894  005026  5043               	movf	_timeDOWN,w,c
 22895  005028  5C2E               	subwf	_processTimer,w,c
 22896  00502A  5044               	movf	_timeDOWN+1,w,c
 22897  00502C  582F               	subwfb	_processTimer+1,w,c
 22898  00502E  5045               	movf	_timeDOWN+2,w,c
 22899  005030  5830               	subwfb	_processTimer+2,w,c
 22900  005032  5031               	movf	_processTimer+3,w,c
 22901  005034  0A80               	xorlw	128
 22902  005036  6E1B               	movwf	??_T4int& (0+255),c
 22903  005038  5046               	movf	_timeDOWN+3,w,c
 22904  00503A  0A80               	xorlw	128
 22905  00503C  581B               	subwfb	??_T4int& (0+255),w,c
 22906  00503E  A0D8               	btfss	status,0,c
 22907  005040  0012               	return	
 22908  005042  503A               	movf	_ProcessStarted,w,c
 22909  005044  B4D8               	btfsc	status,2,c
 22910  005046  0012               	return	
 22911                           
 22912                           ;T4Config.h: 27: setPWM2duty(-400);
 22913  005048  0EFE               	movlw	254
 22914  00504A  6E02               	movwf	i2setPWM2duty@actuator+1,c
 22915  00504C  0E70               	movlw	112
 22916  00504E  6E01               	movwf	i2setPWM2duty@actuator,c
 22917  005050  EC86  F02C         	call	i2_setPWM2duty	;wreg free
 22918  005054  0012               	return	
 22919  005056                     __end_of_T4int:
 22920                           	opt stack 0
 22921                           pclatu	equ	0xFFB
 22922                           pclath	equ	0xFFA
 22923                           tblptru	equ	0xFF8
 22924                           tblptrh	equ	0xFF7
 22925                           tblptrl	equ	0xFF6
 22926                           tablat	equ	0xFF5
 22927                           prodh	equ	0xFF4
 22928                           prodl	equ	0xFF3
 22929                           intcon	equ	0xFF2
 22930                           postinc0	equ	0xFEE
 22931                           fsr0h	equ	0xFEA
 22932                           fsr0l	equ	0xFE9
 22933                           wreg	equ	0xFE8
 22934                           postdec1	equ	0xFE5
 22935                           fsr1h	equ	0xFE2
 22936                           fsr1l	equ	0xFE1
 22937                           bsr	equ	0xFE0
 22938                           indf2	equ	0xFDF
 22939                           postinc2	equ	0xFDE
 22940                           postdec2	equ	0xFDD
 22941                           plusw2	equ	0xFDB
 22942                           fsr2h	equ	0xFDA
 22943                           fsr2l	equ	0xFD9
 22944                           status	equ	0xFD8
 22945                           
 22946 ;; *************** function i2_setPWM2duty *****************
 22947 ;; Defined at:
 22948 ;;		line 33 in file "source/PWMConfig.h"
 22949 ;; Parameters:    Size  Location     Type
 22950 ;;  actuator        2    0[COMRAM] short 
 22951 ;; Auto vars:     Size  Location     Type
 22952 ;;  setPWM2duty     2    4[COMRAM] short 
 22953 ;; Return value:  Size  Location     Type
 22954 ;;                  1    wreg      void 
 22955 ;; Registers used:
 22956 ;;		wreg, status,2, status,0
 22957 ;; Tracked objects:
 22958 ;;		On entry : 0/0
 22959 ;;		On exit  : 0/0
 22960 ;;		Unchanged: 0/0
 22961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22962 ;;      Params:         2       0       0       0       0       0       0
 22963 ;;      Locals:         2       0       0       0       0       0       0
 22964 ;;      Temps:          2       0       0       0       0       0       0
 22965 ;;      Totals:         6       0       0       0       0       0       0
 22966 ;;Total ram usage:        6 bytes
 22967 ;; Hardware stack levels used:    1
 22968 ;; This function calls:
 22969 ;;		Nothing
 22970 ;; This function is called by:
 22971 ;;		_T4int
 22972 ;; This function uses a non-reentrant model
 22973 ;;
 22974                           
 22975                           	psect	text91
 22976  00590C                     __ptext91:
 22977                           	opt stack 0
 22978  00590C                     i2_setPWM2duty:
 22979                           	opt stack 13
 22980                           
 22981                           ;PWMConfig.h: 34: short act = 400;
 22982                           
 22983                           ;incstack = 0
 22984  00590C  0E01               	movlw	1
 22985  00590E  6E06               	movwf	i2setPWM2duty@act+1,c
 22986  005910  0E90               	movlw	144
 22987  005912  6E05               	movwf	i2setPWM2duty@act,c
 22988                           
 22989                           ;PWMConfig.h: 35: if(actuator > 400)
 22990  005914  BE02               	btfsc	i2setPWM2duty@actuator+1,7,c
 22991  005916  D00A               	goto	i2l7391
 22992  005918  0E91               	movlw	145
 22993  00591A  5C01               	subwf	i2setPWM2duty@actuator,w,c
 22994  00591C  0E01               	movlw	1
 22995  00591E  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 22996  005920  A0D8               	btfss	status,0,c
 22997  005922  D004               	goto	i2l7391
 22998                           
 22999                           ;PWMConfig.h: 36: act = 800;
 23000  005924  0E03               	movlw	3
 23001  005926  6E06               	movwf	i2setPWM2duty@act+1,c
 23002  005928  0E20               	movlw	32
 23003  00592A  D00B               	goto	L18
 23004  00592C                     i2l7391:
 23005                           
 23006                           ;PWMConfig.h: 37: else if(actuator < -400)
 23007  00592C  AE02               	btfss	i2setPWM2duty@actuator+1,7,c
 23008  00592E  D00B               	goto	i2l7395
 23009  005930  0E70               	movlw	112
 23010  005932  5C01               	subwf	i2setPWM2duty@actuator,w,c
 23011  005934  0EFE               	movlw	254
 23012  005936  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 23013  005938  B0D8               	btfsc	status,0,c
 23014  00593A  D005               	goto	i2l7395
 23015                           
 23016                           ;PWMConfig.h: 38: act = 0;
 23017  00593C  0E00               	movlw	0
 23018  00593E  6E06               	movwf	i2setPWM2duty@act+1,c
 23019  005940  0E00               	movlw	0
 23020  005942                     L18:
 23021  005942  6E05               	movwf	i2setPWM2duty@act,c
 23022  005944  D006               	goto	i2l486
 23023  005946                     i2l7395:
 23024                           
 23025                           ;PWMConfig.h: 39: else
 23026                           ;PWMConfig.h: 40: act = actuator + 400;
 23027  005946  0E90               	movlw	144
 23028  005948  2401               	addwf	i2setPWM2duty@actuator,w,c
 23029  00594A  6E05               	movwf	i2setPWM2duty@act,c
 23030  00594C  0E01               	movlw	1
 23031  00594E  2002               	addwfc	i2setPWM2duty@actuator+1,w,c
 23032  005950  6E06               	movwf	i2setPWM2duty@act+1,c
 23033  005952                     i2l486:
 23034                           
 23035                           ;PWMConfig.h: 41: CCP2CONbits.DC2B = act;
 23036  005952  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 23037  005956  3A03               	swapf	??i2_setPWM2duty,f,c
 23038  005958  5066               	movf	3942,w,c	;volatile
 23039  00595A  1803               	xorwf	??i2_setPWM2duty,w,c
 23040  00595C  0BCF               	andlw	-49
 23041  00595E  1803               	xorwf	??i2_setPWM2duty,w,c
 23042  005960  6E66               	movwf	3942,c	;volatile
 23043                           
 23044                           ;PWMConfig.h: 42: CCPR2L = act>>2;
 23045  005962  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 23046  005966  C006  F004         	movff	i2setPWM2duty@act+1,??i2_setPWM2duty+1
 23047  00596A  3404               	rlcf	??i2_setPWM2duty+1,w,c
 23048  00596C  3204               	rrcf	??i2_setPWM2duty+1,f,c
 23049  00596E  3203               	rrcf	??i2_setPWM2duty,f,c
 23050  005970  3404               	rlcf	??i2_setPWM2duty+1,w,c
 23051  005972  3204               	rrcf	??i2_setPWM2duty+1,f,c
 23052  005974  3203               	rrcf	??i2_setPWM2duty,f,c
 23053  005976  5003               	movf	??i2_setPWM2duty,w,c
 23054  005978  6E67               	movwf	3943,c	;volatile
 23055  00597A  0012               	return		;funcret
 23056  00597C                     __end_ofi2_setPWM2duty:
 23057                           	opt stack 0
 23058                           pclatu	equ	0xFFB
 23059                           pclath	equ	0xFFA
 23060                           tblptru	equ	0xFF8
 23061                           tblptrh	equ	0xFF7
 23062                           tblptrl	equ	0xFF6
 23063                           tablat	equ	0xFF5
 23064                           prodh	equ	0xFF4
 23065                           prodl	equ	0xFF3
 23066                           intcon	equ	0xFF2
 23067                           postinc0	equ	0xFEE
 23068                           fsr0h	equ	0xFEA
 23069                           fsr0l	equ	0xFE9
 23070                           wreg	equ	0xFE8
 23071                           postdec1	equ	0xFE5
 23072                           fsr1h	equ	0xFE2
 23073                           fsr1l	equ	0xFE1
 23074                           bsr	equ	0xFE0
 23075                           indf2	equ	0xFDF
 23076                           postinc2	equ	0xFDE
 23077                           postdec2	equ	0xFDD
 23078                           plusw2	equ	0xFDB
 23079                           fsr2h	equ	0xFDA
 23080                           fsr2l	equ	0xFD9
 23081                           status	equ	0xFD8
 23082                           
 23083 ;; *************** function i2___xxtofl *****************
 23084 ;; Defined at:
 23085 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
 23086 ;; Parameters:    Size  Location     Type
 23087 ;;  sign            1    wreg     unsigned char 
 23088 ;;  val             4    0[COMRAM] long 
 23089 ;; Auto vars:     Size  Location     Type
 23090 ;;  sign            1    8[COMRAM] unsigned char 
 23091 ;;  __xxtofl        4   10[COMRAM] unsigned long 
 23092 ;;  __xxtofl        1    9[COMRAM] unsigned char 
 23093 ;; Return value:  Size  Location     Type
 23094 ;;                  4    0[COMRAM] unsigned char 
 23095 ;; Registers used:
 23096 ;;		wreg, status,2, status,0
 23097 ;; Tracked objects:
 23098 ;;		On entry : 0/0
 23099 ;;		On exit  : 0/0
 23100 ;;		Unchanged: 0/0
 23101 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23102 ;;      Params:         4       0       0       0       0       0       0
 23103 ;;      Locals:         6       0       0       0       0       0       0
 23104 ;;      Temps:          4       0       0       0       0       0       0
 23105 ;;      Totals:        14       0       0       0       0       0       0
 23106 ;;Total ram usage:       14 bytes
 23107 ;; Hardware stack levels used:    1
 23108 ;; This function calls:
 23109 ;;		Nothing
 23110 ;; This function is called by:
 23111 ;;		_T4int
 23112 ;; This function uses a non-reentrant model
 23113 ;;
 23114                           
 23115                           	psect	text92
 23116  003DD0                     __ptext92:
 23117                           	opt stack 0
 23118  003DD0                     i2___xxtofl:
 23119                           	opt stack 13
 23120                           
 23121                           ;incstack = 0
 23122                           ;i2___xxtofl@sign stored from wreg
 23123  003DD0  6E09               	movwf	i2___xxtofl@sign,c
 23124  003DD2  5009               	movf	i2___xxtofl@sign,w,c
 23125  003DD4  A4D8               	btfss	status,2,c
 23126  003DD6  AE04               	btfss	i2___xxtofl@val+3,7,c
 23127  003DD8  D01A               	goto	i2l1555
 23128  003DDA  C001  F005         	movff	i2___xxtofl@val,??i2___xxtofl
 23129  003DDE  C002  F006         	movff	i2___xxtofl@val+1,??i2___xxtofl+1
 23130  003DE2  C003  F007         	movff	i2___xxtofl@val+2,??i2___xxtofl+2
 23131  003DE6  C004  F008         	movff	i2___xxtofl@val+3,??i2___xxtofl+3
 23132  003DEA  1E05               	comf	??i2___xxtofl,f,c
 23133  003DEC  1E06               	comf	??i2___xxtofl+1,f,c
 23134  003DEE  1E07               	comf	??i2___xxtofl+2,f,c
 23135  003DF0  1E08               	comf	??i2___xxtofl+3,f,c
 23136  003DF2  2A05               	incf	??i2___xxtofl,f,c
 23137  003DF4  0E00               	movlw	0
 23138  003DF6  2206               	addwfc	??i2___xxtofl+1,f,c
 23139  003DF8  2207               	addwfc	??i2___xxtofl+2,f,c
 23140  003DFA  2208               	addwfc	??i2___xxtofl+3,f,c
 23141  003DFC  C005  F00B         	movff	??i2___xxtofl,i2___xxtofl@arg
 23142  003E00  C006  F00C         	movff	??i2___xxtofl+1,i2___xxtofl@arg+1
 23143  003E04  C007  F00D         	movff	??i2___xxtofl+2,i2___xxtofl@arg+2
 23144  003E08  C008  F00E         	movff	??i2___xxtofl+3,i2___xxtofl@arg+3
 23145  003E0C  D008               	goto	i2l7425
 23146  003E0E                     i2l1555:
 23147  003E0E  C001  F00B         	movff	i2___xxtofl@val,i2___xxtofl@arg
 23148  003E12  C002  F00C         	movff	i2___xxtofl@val+1,i2___xxtofl@arg+1
 23149  003E16  C003  F00D         	movff	i2___xxtofl@val+2,i2___xxtofl@arg+2
 23150  003E1A  C004  F00E         	movff	i2___xxtofl@val+3,i2___xxtofl@arg+3
 23151  003E1E                     i2l7425:
 23152  003E1E  5001               	movf	i2___xxtofl@val,w,c
 23153  003E20  1002               	iorwf	i2___xxtofl@val+1,w,c
 23154  003E22  1003               	iorwf	i2___xxtofl@val+2,w,c
 23155  003E24  1004               	iorwf	i2___xxtofl@val+3,w,c
 23156  003E26  A4D8               	btfss	status,2,c
 23157  003E28  D009               	goto	i2l7431
 23158  003E2A  0E00               	movlw	0
 23159  003E2C  6E01               	movwf	?i2___xxtofl,c
 23160  003E2E  0E00               	movlw	0
 23161  003E30  6E02               	movwf	?i2___xxtofl+1,c
 23162  003E32  0E00               	movlw	0
 23163  003E34  6E03               	movwf	?i2___xxtofl+2,c
 23164  003E36  0E00               	movlw	0
 23165  003E38  6E04               	movwf	?i2___xxtofl+3,c
 23166  003E3A  0012               	return	
 23167  003E3C                     i2l7431:
 23168  003E3C  0E96               	movlw	150
 23169  003E3E  6E0A               	movwf	i2___xxtofl@exp,c
 23170  003E40  D006               	goto	i2l7435
 23171  003E42                     i2l7433:
 23172  003E42  2A0A               	incf	i2___xxtofl@exp,f,c
 23173  003E44  90D8               	bcf	status,0,c
 23174  003E46  320E               	rrcf	i2___xxtofl@arg+3,f,c
 23175  003E48  320D               	rrcf	i2___xxtofl@arg+2,f,c
 23176  003E4A  320C               	rrcf	i2___xxtofl@arg+1,f,c
 23177  003E4C  320B               	rrcf	i2___xxtofl@arg,f,c
 23178  003E4E                     i2l7435:
 23179  003E4E  0E00               	movlw	0
 23180  003E50  140B               	andwf	i2___xxtofl@arg,w,c
 23181  003E52  6E05               	movwf	??i2___xxtofl& (0+255),c
 23182  003E54  0E00               	movlw	0
 23183  003E56  140C               	andwf	i2___xxtofl@arg+1,w,c
 23184  003E58  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 23185  003E5A  0E00               	movlw	0
 23186  003E5C  140D               	andwf	i2___xxtofl@arg+2,w,c
 23187  003E5E  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 23188  003E60  0EFE               	movlw	254
 23189  003E62  140E               	andwf	i2___xxtofl@arg+3,w,c
 23190  003E64  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 23191  003E66  5005               	movf	??i2___xxtofl,w,c
 23192  003E68  1006               	iorwf	??i2___xxtofl+1,w,c
 23193  003E6A  1007               	iorwf	??i2___xxtofl+2,w,c
 23194  003E6C  1008               	iorwf	??i2___xxtofl+3,w,c
 23195  003E6E  B4D8               	btfsc	status,2,c
 23196  003E70  D00D               	goto	i2l1562
 23197  003E72  D7E7               	goto	i2l7433
 23198  003E74                     i2l7437:
 23199  003E74  2A0A               	incf	i2___xxtofl@exp,f,c
 23200  003E76  0E01               	movlw	1
 23201  003E78  260B               	addwf	i2___xxtofl@arg,f,c
 23202  003E7A  0E00               	movlw	0
 23203  003E7C  220C               	addwfc	i2___xxtofl@arg+1,f,c
 23204  003E7E  220D               	addwfc	i2___xxtofl@arg+2,f,c
 23205  003E80  220E               	addwfc	i2___xxtofl@arg+3,f,c
 23206  003E82  90D8               	bcf	status,0,c
 23207  003E84  320E               	rrcf	i2___xxtofl@arg+3,f,c
 23208  003E86  320D               	rrcf	i2___xxtofl@arg+2,f,c
 23209  003E88  320C               	rrcf	i2___xxtofl@arg+1,f,c
 23210  003E8A  320B               	rrcf	i2___xxtofl@arg,f,c
 23211  003E8C                     i2l1562:
 23212  003E8C  0E00               	movlw	0
 23213  003E8E  140B               	andwf	i2___xxtofl@arg,w,c
 23214  003E90  6E05               	movwf	??i2___xxtofl& (0+255),c
 23215  003E92  0E00               	movlw	0
 23216  003E94  140C               	andwf	i2___xxtofl@arg+1,w,c
 23217  003E96  6E06               	movwf	(??i2___xxtofl+1)& (0+255),c
 23218  003E98  0E00               	movlw	0
 23219  003E9A  140D               	andwf	i2___xxtofl@arg+2,w,c
 23220  003E9C  6E07               	movwf	(??i2___xxtofl+2)& (0+255),c
 23221  003E9E  0EFF               	movlw	255
 23222  003EA0  140E               	andwf	i2___xxtofl@arg+3,w,c
 23223  003EA2  6E08               	movwf	(??i2___xxtofl+3)& (0+255),c
 23224  003EA4  5005               	movf	??i2___xxtofl,w,c
 23225  003EA6  1006               	iorwf	??i2___xxtofl+1,w,c
 23226  003EA8  1007               	iorwf	??i2___xxtofl+2,w,c
 23227  003EAA  1008               	iorwf	??i2___xxtofl+3,w,c
 23228  003EAC  B4D8               	btfsc	status,2,c
 23229  003EAE  D007               	goto	i2l7445
 23230  003EB0  D7E1               	goto	i2l7437
 23231  003EB2                     i2l7443:
 23232  003EB2  060A               	decf	i2___xxtofl@exp,f,c
 23233  003EB4  90D8               	bcf	status,0,c
 23234  003EB6  360B               	rlcf	i2___xxtofl@arg,f,c
 23235  003EB8  360C               	rlcf	i2___xxtofl@arg+1,f,c
 23236  003EBA  360D               	rlcf	i2___xxtofl@arg+2,f,c
 23237  003EBC  360E               	rlcf	i2___xxtofl@arg+3,f,c
 23238  003EBE                     i2l7445:
 23239  003EBE  BE0D               	btfsc	i2___xxtofl@arg+2,7,c
 23240  003EC0  D003               	goto	i2l1569
 23241  003EC2  0E02               	movlw	2
 23242  003EC4  600A               	cpfslt	i2___xxtofl@exp,c
 23243  003EC6  D7F5               	goto	i2l7443
 23244  003EC8                     i2l1569:
 23245  003EC8  B00A               	btfsc	i2___xxtofl@exp,0,c
 23246  003ECA  D008               	goto	i2l1570
 23247  003ECC  0EFF               	movlw	255
 23248  003ECE  160B               	andwf	i2___xxtofl@arg,f,c
 23249  003ED0  0EFF               	movlw	255
 23250  003ED2  160C               	andwf	i2___xxtofl@arg+1,f,c
 23251  003ED4  0E7F               	movlw	127
 23252  003ED6  160D               	andwf	i2___xxtofl@arg+2,f,c
 23253  003ED8  0EFF               	movlw	255
 23254  003EDA  160E               	andwf	i2___xxtofl@arg+3,f,c
 23255  003EDC                     i2l1570:
 23256  003EDC  90D8               	bcf	status,0,c
 23257  003EDE  320A               	rrcf	i2___xxtofl@exp,f,c
 23258  003EE0  C00A  F005         	movff	i2___xxtofl@exp,??i2___xxtofl
 23259  003EE4  6A06               	clrf	(??i2___xxtofl+1)& (0+255),c
 23260  003EE6  6A07               	clrf	(??i2___xxtofl+2)& (0+255),c
 23261  003EE8  6A08               	clrf	(??i2___xxtofl+3)& (0+255),c
 23262  003EEA  C005  F008         	movff	??i2___xxtofl,??i2___xxtofl+3
 23263  003EEE  6A07               	clrf	??i2___xxtofl+2,c
 23264  003EF0  6A06               	clrf	??i2___xxtofl+1,c
 23265  003EF2  6A05               	clrf	??i2___xxtofl,c
 23266  003EF4  5005               	movf	??i2___xxtofl,w,c
 23267  003EF6  120B               	iorwf	i2___xxtofl@arg,f,c
 23268  003EF8  5006               	movf	??i2___xxtofl+1,w,c
 23269  003EFA  120C               	iorwf	i2___xxtofl@arg+1,f,c
 23270  003EFC  5007               	movf	??i2___xxtofl+2,w,c
 23271  003EFE  120D               	iorwf	i2___xxtofl@arg+2,f,c
 23272  003F00  5008               	movf	??i2___xxtofl+3,w,c
 23273  003F02  120E               	iorwf	i2___xxtofl@arg+3,f,c
 23274  003F04  5009               	movf	i2___xxtofl@sign,w,c
 23275  003F06  A4D8               	btfss	status,2,c
 23276  003F08  AE04               	btfss	i2___xxtofl@val+3,7,c
 23277  003F0A  D001               	goto	i2l7457
 23278  003F0C  8E0E               	bsf	i2___xxtofl@arg+3,7,c
 23279  003F0E                     i2l7457:
 23280  003F0E  C00B  F001         	movff	i2___xxtofl@arg,?i2___xxtofl
 23281  003F12  C00C  F002         	movff	i2___xxtofl@arg+1,?i2___xxtofl+1
 23282  003F16  C00D  F003         	movff	i2___xxtofl@arg+2,?i2___xxtofl+2
 23283  003F1A  C00E  F004         	movff	i2___xxtofl@arg+3,?i2___xxtofl+3
 23284  003F1E  0012               	return	
 23285  003F20                     __end_ofi2___xxtofl:
 23286                           	opt stack 0
 23287                           pclatu	equ	0xFFB
 23288                           pclath	equ	0xFFA
 23289                           tblptru	equ	0xFF8
 23290                           tblptrh	equ	0xFF7
 23291                           tblptrl	equ	0xFF6
 23292                           tablat	equ	0xFF5
 23293                           prodh	equ	0xFF4
 23294                           prodl	equ	0xFF3
 23295                           intcon	equ	0xFF2
 23296                           postinc0	equ	0xFEE
 23297                           fsr0h	equ	0xFEA
 23298                           fsr0l	equ	0xFE9
 23299                           wreg	equ	0xFE8
 23300                           postdec1	equ	0xFE5
 23301                           fsr1h	equ	0xFE2
 23302                           fsr1l	equ	0xFE1
 23303                           bsr	equ	0xFE0
 23304                           indf2	equ	0xFDF
 23305                           postinc2	equ	0xFDE
 23306                           postdec2	equ	0xFDD
 23307                           plusw2	equ	0xFDB
 23308                           fsr2h	equ	0xFDA
 23309                           fsr2l	equ	0xFD9
 23310                           status	equ	0xFD8
 23311                           
 23312 ;; *************** function i2___flge *****************
 23313 ;; Defined at:
 23314 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 23315 ;; Parameters:    Size  Location     Type
 23316 ;;  ff1             4   14[COMRAM] unsigned char 
 23317 ;;  ff2             4   18[COMRAM] unsigned char 
 23318 ;; Auto vars:     Size  Location     Type
 23319 ;;		None
 23320 ;; Return value:  Size  Location     Type
 23321 ;;		None               void
 23322 ;; Registers used:
 23323 ;;		wreg, status,2, status,0
 23324 ;; Tracked objects:
 23325 ;;		On entry : 0/0
 23326 ;;		On exit  : 0/0
 23327 ;;		Unchanged: 0/0
 23328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 23329 ;;      Params:         8       0       0       0       0       0       0
 23330 ;;      Locals:         0       0       0       0       0       0       0
 23331 ;;      Temps:          4       0       0       0       0       0       0
 23332 ;;      Totals:        12       0       0       0       0       0       0
 23333 ;;Total ram usage:       12 bytes
 23334 ;; Hardware stack levels used:    1
 23335 ;; This function calls:
 23336 ;;		Nothing
 23337 ;; This function is called by:
 23338 ;;		_T4int
 23339 ;; This function uses a non-reentrant model
 23340 ;;
 23341                           
 23342                           	psect	text93
 23343  00404C                     __ptext93:
 23344                           	opt stack 0
 23345  00404C                     i2___flge:
 23346                           	opt stack 13
 23347                           
 23348                           ;incstack = 0
 23349  00404C  0E00               	movlw	0
 23350  00404E  140F               	andwf	i2___flge@ff1,w,c
 23351  004050  6E17               	movwf	??i2___flge& (0+255),c
 23352  004052  0E00               	movlw	0
 23353  004054  1410               	andwf	i2___flge@ff1+1,w,c
 23354  004056  6E18               	movwf	(??i2___flge+1)& (0+255),c
 23355  004058  0E80               	movlw	128
 23356  00405A  1411               	andwf	i2___flge@ff1+2,w,c
 23357  00405C  6E19               	movwf	(??i2___flge+2)& (0+255),c
 23358  00405E  0E7F               	movlw	127
 23359  004060  1412               	andwf	i2___flge@ff1+3,w,c
 23360  004062  6E1A               	movwf	(??i2___flge+3)& (0+255),c
 23361  004064  5017               	movf	??i2___flge,w,c
 23362  004066  1018               	iorwf	??i2___flge+1,w,c
 23363  004068  1019               	iorwf	??i2___flge+2,w,c
 23364  00406A  101A               	iorwf	??i2___flge+3,w,c
 23365  00406C  A4D8               	btfss	status,2,c
 23366  00406E  D008               	goto	i2l7401
 23367  004070  0E00               	movlw	0
 23368  004072  6E0F               	movwf	i2___flge@ff1,c
 23369  004074  0E00               	movlw	0
 23370  004076  6E10               	movwf	i2___flge@ff1+1,c
 23371  004078  0E00               	movlw	0
 23372  00407A  6E11               	movwf	i2___flge@ff1+2,c
 23373  00407C  0E00               	movlw	0
 23374  00407E  6E12               	movwf	i2___flge@ff1+3,c
 23375  004080                     i2l7401:
 23376  004080  0E00               	movlw	0
 23377  004082  1413               	andwf	i2___flge@ff2,w,c
 23378  004084  6E17               	movwf	??i2___flge& (0+255),c
 23379  004086  0E00               	movlw	0
 23380  004088  1414               	andwf	i2___flge@ff2+1,w,c
 23381  00408A  6E18               	movwf	(??i2___flge+1)& (0+255),c
 23382  00408C  0E80               	movlw	128
 23383  00408E  1415               	andwf	i2___flge@ff2+2,w,c
 23384  004090  6E19               	movwf	(??i2___flge+2)& (0+255),c
 23385  004092  0E7F               	movlw	127
 23386  004094  1416               	andwf	i2___flge@ff2+3,w,c
 23387  004096  6E1A               	movwf	(??i2___flge+3)& (0+255),c
 23388  004098  5017               	movf	??i2___flge,w,c
 23389  00409A  1018               	iorwf	??i2___flge+1,w,c
 23390  00409C  1019               	iorwf	??i2___flge+2,w,c
 23391  00409E  101A               	iorwf	??i2___flge+3,w,c
 23392  0040A0  A4D8               	btfss	status,2,c
 23393  0040A2  D008               	goto	i2l7405
 23394  0040A4  0E00               	movlw	0
 23395  0040A6  6E13               	movwf	i2___flge@ff2,c
 23396  0040A8  0E00               	movlw	0
 23397  0040AA  6E14               	movwf	i2___flge@ff2+1,c
 23398  0040AC  0E00               	movlw	0
 23399  0040AE  6E15               	movwf	i2___flge@ff2+2,c
 23400  0040B0  0E00               	movlw	0
 23401  0040B2  6E16               	movwf	i2___flge@ff2+3,c
 23402  0040B4                     i2l7405:
 23403  0040B4  AE12               	btfss	i2___flge@ff1+3,7,c
 23404  0040B6  D01D               	goto	i2l7409
 23405  0040B8  C00F  F017         	movff	i2___flge@ff1,??i2___flge
 23406  0040BC  C010  F018         	movff	i2___flge@ff1+1,??i2___flge+1
 23407  0040C0  C011  F019         	movff	i2___flge@ff1+2,??i2___flge+2
 23408  0040C4  C012  F01A         	movff	i2___flge@ff1+3,??i2___flge+3
 23409  0040C8  1E17               	comf	??i2___flge,f,c
 23410  0040CA  1E18               	comf	??i2___flge+1,f,c
 23411  0040CC  1E19               	comf	??i2___flge+2,f,c
 23412  0040CE  1E1A               	comf	??i2___flge+3,f,c
 23413  0040D0  2A17               	incf	??i2___flge,f,c
 23414  0040D2  0E00               	movlw	0
 23415  0040D4  2218               	addwfc	??i2___flge+1,f,c
 23416  0040D6  2219               	addwfc	??i2___flge+2,f,c
 23417  0040D8  221A               	addwfc	??i2___flge+3,f,c
 23418  0040DA  0E00               	movlw	0
 23419  0040DC  2417               	addwf	??i2___flge,w,c
 23420  0040DE  6E0F               	movwf	i2___flge@ff1,c
 23421  0040E0  0E00               	movlw	0
 23422  0040E2  2018               	addwfc	??i2___flge+1,w,c
 23423  0040E4  6E10               	movwf	i2___flge@ff1+1,c
 23424  0040E6  0E00               	movlw	0
 23425  0040E8  2019               	addwfc	??i2___flge+2,w,c
 23426  0040EA  6E11               	movwf	i2___flge@ff1+2,c
 23427  0040EC  0E80               	movlw	128
 23428  0040EE  201A               	addwfc	??i2___flge+3,w,c
 23429  0040F0  6E12               	movwf	i2___flge@ff1+3,c
 23430  0040F2                     i2l7409:
 23431  0040F2  AE16               	btfss	i2___flge@ff2+3,7,c
 23432  0040F4  D01D               	goto	i2l1184
 23433  0040F6  C013  F017         	movff	i2___flge@ff2,??i2___flge
 23434  0040FA  C014  F018         	movff	i2___flge@ff2+1,??i2___flge+1
 23435  0040FE  C015  F019         	movff	i2___flge@ff2+2,??i2___flge+2
 23436  004102  C016  F01A         	movff	i2___flge@ff2+3,??i2___flge+3
 23437  004106  1E17               	comf	??i2___flge,f,c
 23438  004108  1E18               	comf	??i2___flge+1,f,c
 23439  00410A  1E19               	comf	??i2___flge+2,f,c
 23440  00410C  1E1A               	comf	??i2___flge+3,f,c
 23441  00410E  2A17               	incf	??i2___flge,f,c
 23442  004110  0E00               	movlw	0
 23443  004112  2218               	addwfc	??i2___flge+1,f,c
 23444  004114  2219               	addwfc	??i2___flge+2,f,c
 23445  004116  221A               	addwfc	??i2___flge+3,f,c
 23446  004118  0E00               	movlw	0
 23447  00411A  2417               	addwf	??i2___flge,w,c
 23448  00411C  6E13               	movwf	i2___flge@ff2,c
 23449  00411E  0E00               	movlw	0
 23450  004120  2018               	addwfc	??i2___flge+1,w,c
 23451  004122  6E14               	movwf	i2___flge@ff2+1,c
 23452  004124  0E00               	movlw	0
 23453  004126  2019               	addwfc	??i2___flge+2,w,c
 23454  004128  6E15               	movwf	i2___flge@ff2+2,c
 23455  00412A  0E80               	movlw	128
 23456  00412C  201A               	addwfc	??i2___flge+3,w,c
 23457  00412E  6E16               	movwf	i2___flge@ff2+3,c
 23458  004130                     i2l1184:
 23459  004130  0E00               	movlw	0
 23460  004132  1A0F               	xorwf	i2___flge@ff1,f,c
 23461  004134  0E00               	movlw	0
 23462  004136  1A10               	xorwf	i2___flge@ff1+1,f,c
 23463  004138  0E00               	movlw	0
 23464  00413A  1A11               	xorwf	i2___flge@ff1+2,f,c
 23465  00413C  0E80               	movlw	128
 23466  00413E  1A12               	xorwf	i2___flge@ff1+3,f,c
 23467  004140  0E00               	movlw	0
 23468  004142  1A13               	xorwf	i2___flge@ff2,f,c
 23469  004144  0E00               	movlw	0
 23470  004146  1A14               	xorwf	i2___flge@ff2+1,f,c
 23471  004148  0E00               	movlw	0
 23472  00414A  1A15               	xorwf	i2___flge@ff2+2,f,c
 23473  00414C  0E80               	movlw	128
 23474  00414E  1A16               	xorwf	i2___flge@ff2+3,f,c
 23475  004150  5013               	movf	i2___flge@ff2,w,c
 23476  004152  5C0F               	subwf	i2___flge@ff1,w,c
 23477  004154  5014               	movf	i2___flge@ff2+1,w,c
 23478  004156  5810               	subwfb	i2___flge@ff1+1,w,c
 23479  004158  5015               	movf	i2___flge@ff2+2,w,c
 23480  00415A  5811               	subwfb	i2___flge@ff1+2,w,c
 23481  00415C  5016               	movf	i2___flge@ff2+3,w,c
 23482  00415E  5812               	subwfb	i2___flge@ff1+3,w,c
 23483  004160  B0D8               	btfsc	status,0,c
 23484  004162  D002               	goto	i2l7415
 23485  004164  90D8               	bcf	status,0,c
 23486  004166  0012               	return	
 23487  004168                     i2l7415:
 23488  004168  80D8               	bsf	status,0,c
 23489  00416A  0012               	return	
 23490  00416C                     __end_ofi2___flge:
 23491                           	opt stack 0
 23492                           pclatu	equ	0xFFB
 23493                           pclath	equ	0xFFA
 23494                           tblptru	equ	0xFF8
 23495                           tblptrh	equ	0xFF7
 23496                           tblptrl	equ	0xFF6
 23497                           tablat	equ	0xFF5
 23498                           prodh	equ	0xFF4
 23499                           prodl	equ	0xFF3
 23500                           intcon	equ	0xFF2
 23501                           postinc0	equ	0xFEE
 23502                           fsr0h	equ	0xFEA
 23503                           fsr0l	equ	0xFE9
 23504                           wreg	equ	0xFE8
 23505                           postdec1	equ	0xFE5
 23506                           fsr1h	equ	0xFE2
 23507                           fsr1l	equ	0xFE1
 23508                           bsr	equ	0xFE0
 23509                           indf2	equ	0xFDF
 23510                           postinc2	equ	0xFDE
 23511                           postdec2	equ	0xFDD
 23512                           plusw2	equ	0xFDB
 23513                           fsr2h	equ	0xFDA
 23514                           fsr2l	equ	0xFD9
 23515                           status	equ	0xFD8
 23516                           pclatu	equ	0xFFB
 23517                           pclath	equ	0xFFA
 23518                           tblptru	equ	0xFF8
 23519                           tblptrh	equ	0xFF7
 23520                           tblptrl	equ	0xFF6
 23521                           tablat	equ	0xFF5
 23522                           prodh	equ	0xFF4
 23523                           prodl	equ	0xFF3
 23524                           intcon	equ	0xFF2
 23525                           postinc0	equ	0xFEE
 23526                           fsr0h	equ	0xFEA
 23527                           fsr0l	equ	0xFE9
 23528                           wreg	equ	0xFE8
 23529                           postdec1	equ	0xFE5
 23530                           fsr1h	equ	0xFE2
 23531                           fsr1l	equ	0xFE1
 23532                           bsr	equ	0xFE0
 23533                           indf2	equ	0xFDF
 23534                           postinc2	equ	0xFDE
 23535                           postdec2	equ	0xFDD
 23536                           plusw2	equ	0xFDB
 23537                           fsr2h	equ	0xFDA
 23538                           fsr2l	equ	0xFD9
 23539                           status	equ	0xFD8
 23540                           
 23541                           	psect	rparam
 23542  0000                     pclatu	equ	0xFFB
 23543                           pclath	equ	0xFFA
 23544                           tblptru	equ	0xFF8
 23545                           tblptrh	equ	0xFF7
 23546                           tblptrl	equ	0xFF6
 23547                           tablat	equ	0xFF5
 23548                           prodh	equ	0xFF4
 23549                           prodl	equ	0xFF3
 23550                           intcon	equ	0xFF2
 23551                           postinc0	equ	0xFEE
 23552                           fsr0h	equ	0xFEA
 23553                           fsr0l	equ	0xFE9
 23554                           wreg	equ	0xFE8
 23555                           postdec1	equ	0xFE5
 23556                           fsr1h	equ	0xFE2
 23557                           fsr1l	equ	0xFE1
 23558                           bsr	equ	0xFE0
 23559                           indf2	equ	0xFDF
 23560                           postinc2	equ	0xFDE
 23561                           postdec2	equ	0xFDD
 23562                           plusw2	equ	0xFDB
 23563                           fsr2h	equ	0xFDA
 23564                           fsr2l	equ	0xFD9
 23565                           status	equ	0xFD8
 23566                           
 23567                           	psect	temp
 23568  000051                     btemp:
 23569                           	opt stack 0
 23570  000051                     	ds	1
 23571  0000                     int$flags	set	btemp
 23572                           pclatu	equ	0xFFB
 23573                           pclath	equ	0xFFA
 23574                           tblptru	equ	0xFF8
 23575                           tblptrh	equ	0xFF7
 23576                           tblptrl	equ	0xFF6
 23577                           tablat	equ	0xFF5
 23578                           prodh	equ	0xFF4
 23579                           prodl	equ	0xFF3
 23580                           intcon	equ	0xFF2
 23581                           postinc0	equ	0xFEE
 23582                           fsr0h	equ	0xFEA
 23583                           fsr0l	equ	0xFE9
 23584                           wreg	equ	0xFE8
 23585                           postdec1	equ	0xFE5
 23586                           fsr1h	equ	0xFE2
 23587                           fsr1l	equ	0xFE1
 23588                           bsr	equ	0xFE0
 23589                           indf2	equ	0xFDF
 23590                           postinc2	equ	0xFDE
 23591                           postdec2	equ	0xFDD
 23592                           plusw2	equ	0xFDB
 23593                           fsr2h	equ	0xFDA
 23594                           fsr2l	equ	0xFD9
 23595                           status	equ	0xFD8


Data Sizes:
    Strings     595
    Constant    144
    Data        70
    BSS         80
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     41      80
    BANK0           160     75     113
    BANK1           256    110     183
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_41(CODE[7]), STR_40(CODE[17]), STR_39(CODE[17]), STR_38(CODE[18]), 
		 -> STR_37(CODE[19]), STR_36(CODE[18]), STR_35(CODE[18]), STR_34(CODE[18]), 
		 -> STR_33(CODE[18]), STR_32(CODE[17]), STR_31(CODE[18]), STR_30(CODE[17]), 
		 -> STR_29(CODE[18]), STR_28(CODE[17]), STR_27(CODE[18]), STR_26(CODE[25]), 
		 -> STR_25(CODE[18]), STR_24(CODE[7]), STR_23(CODE[18]), STR_22(CODE[16]), 
		 -> STR_21(CODE[18]), STR_20(CODE[7]), STR_19(CODE[18]), STR_18(CODE[15]), 
		 -> STR_17(CODE[18]), STR_16(CODE[15]), STR_15(CODE[18]), STR_14(CODE[16]), 
		 -> STR_13(CODE[18]), STR_12(CODE[15]), STR_11(CODE[18]), STR_10(CODE[17]), 
		 -> STR_9(CODE[15]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[18]), 
		 -> STR_5(CODE[18]), STR_4(CODE[18]), STR_3(CODE[18]), STR_2(CODE[18]), 
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    None.

Critical Paths under _hp_isr in COMRAM

    _hp_isr->_T4int
    _T4int->i2___flge
    i2___flge->i2___xxtofl

Critical Paths under _main in BANK0

    _lcd_init->_lcd_send_byte
    _printf->___fltol
    _scale->___flmul
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_4bits
    _lcd_read_byte->_lcd_read_4bits
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    _pressUP->_chanValDigUP
    _desintegrator->___fltol
    ___fltol->___flmul
    _pressDOWN->_chanValDigDOWN
    _longPressENTER->_integrator
    _integrator->___fldiv
    _calcVars2ti->___fldiv
    _calcVars2ti->___flmul
    ___flmul->___awdiv
    ___fldiv->___xxtofl
    _PWM2Config->_setPWM2duty

Critical Paths under _isr in BANK0

    _isr->_UARTint
    i1_calcVars2ti->i1___fldiv
    i1_calcVars2ti->i1___flmul
    _sysParamInit->_calcSysVars
    _calcSysVars->i1___flmul
    _T2int->i1_setPWM2duty
    _saveProcessState->i1_writeEEPROM

Critical Paths under _hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _drawScreen->_drawSNquest
    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAutoCalibRM->_printf
    _drawValEditor->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf
    _printf->___flsub
    _scale->___flmul
    _fround->___flmul
    ___flsub->___fladd
    ___fladd->_fround
    _pressENTER->_desintegrator
    _desintegrator->___fltol
    ___fltol->_scale
    _longPressENTER->_integrator
    _integrator->___fldiv
    _calcVars2ti->___fldiv
    _calcVars2ti->___flmul

Critical Paths under _isr in BANK1

    None.

Critical Paths under _hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _hp_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _hp_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _hp_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _hp_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  586681
                       _EEPROMConfig
                         _PWM2Config
                         _UARTConfig
                     _buttonChecking
                        _clockConfig
                         _drawScreen
                    _interruptConfig
                           _ioConfig
                          _ioInitStt
                           _lcd_init
                      _saveSysParams
                        _setPWM2duty
                          _setPWM2on
                           _t4config
 ---------------------------------------------------------------------------------
 (1) _t4config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setPWM2on                                            1     1      0      22
                                             47 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     6      0    1879
                                             55 BANK0      6     6      0
                     _lcd_send_4bits
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ioInitStt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ioConfig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawScreen                                           0     0      0  546912
                         _drawAdvOFF
                          _drawAdvON
                    _drawAutoCalibRM
                        _drawBadPass
                        _drawChanVal
                           _drawMenu
                       _drawPassWord
                        _drawSNquest
 ---------------------------------------------------------------------------------
 (2) _drawSNquest                                          3     3      0   54377
                                            107 BANK1      3     3      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawPassWord                                         2     2      0   54253
                                            107 BANK1      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawMenu                                             1     1      0   59204
                                            107 BANK1      1     1      0
                         _lcd_gotoxy
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawChanVal                                          0     0      0  108308
                      _drawValEditor
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawBadPass                                          0     0      0   54154
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAutoCalibRM                                      0     0      0  108308
                      _drawValEditor
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drawValEditor                                        0     0      0   54154
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvON                                            0     0      0   54154
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvOFF                                           0     0      0   54154
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              54    36     18   50724
                                             54 BANK1     53    35     18
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4    9521
                                             13 BANK1      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0    4926
                                             60 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             2     2      0    4895
                                             58 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    3430
                                             55 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1403
                                             52 BANK0      3     2      1
                      _lcd_read_byte
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       5     5      0     272
                                             47 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _lcd_read_byte                                        2     2      0     114
                                             49 BANK0      2     2      0
                     _lcd_read_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_read_4bits                                       2     2      0      46
                                             47 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             47 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4    9242
                                             13 BANK1     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             47 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             53 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             47 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             47 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             47 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             60 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             47 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3697
                                             46 BANK1      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3364
                                             26 BANK1     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             47 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     812
                                             47 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _clockConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonChecking                                       0     0      0   28819
                           _delay_ms
                      _longPressDOWN
                     _longPressENTER
                     _longPressRETRO
                        _longPressUP
                          _pressDOWN
                         _pressENTER
                         _pressRETRO
                            _pressUP
                        _releaseDOWN
                       _releaseENTER
                       _releaseRETRO
                          _releaseUP
 ---------------------------------------------------------------------------------
 (2) _releaseUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseRETRO                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseENTER                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseDOWN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressUP                                              1     1      0       0
                                             52 BANK0      1     1      0
                       _chanValDigUP
 ---------------------------------------------------------------------------------
 (3) _chanValDigUP                                         5     5      0       0
                                             47 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _pressRETRO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressENTER                                           0     0      0   15989
                          _checkPass
                     _confirmEdition
                      _desintegrator
                        _setPWM2duty
 ---------------------------------------------------------------------------------
 (3) _desintegrator                                       20    20      0    7159
                                             30 BANK1     20    20      0
                            ___aldiv
                            ___flmul
                            ___fltol
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     645
                                             73 BANK0      2     2      0
                                             22 BANK1      8     4      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     599
                                             47 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) _checkPass                                            7     7      0     115
                                             47 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _pressDOWN                                            1     1      0       0
                                             52 BANK0      1     1      0
                     _chanValDigDOWN
 ---------------------------------------------------------------------------------
 (3) _chanValDigDOWN                                       5     5      0       0
                                             47 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _longPressUP                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressRETRO                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressENTER                                       0     0      0   11788
                     _confirmEdition
                         _integrator
 ---------------------------------------------------------------------------------
 (3) _integrator                                          12    12      0    3531
                                             73 BANK0      2     2      0
                                             13 BANK1     10    10      0
                            ___fldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     672
                                             47 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     558
                                             47 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _confirmEdition                                       1     1      0    8257
                                             73 BANK0      1     1      0
                      _saveSysParams
 ---------------------------------------------------------------------------------
 (1) _saveSysParams                                        0     0      0    8133
                        _calcVars2ti
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (2) _writeEEPROM                                          2     1      1    1016
                                             47 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (2) _calcVars2ti                                          0     0      0    7117
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (3) ___flmul                                             25    17      8    5020
                                             61 BANK0     12     4      8
                                              0 BANK1     13    13      0
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (3) ___fldiv                                             25    17      8    2097
                                             61 BANK0     12     4      8
                                              0 BANK1     13    13      0
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _longPressDOWN                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2    1042
                                             47 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UARTConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2Config                                           0     0      0     458
                        _setPWM2duty
                           _t2config
 ---------------------------------------------------------------------------------
 (2) _t2config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setPWM2duty                                          6     4      2     458
                                             47 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _EEPROMConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                17    17      0    8251
                                             30 BANK0     17    17      0
                              _T2int
                            _UARTint
 ---------------------------------------------------------------------------------
 (12) _UARTint                                             1     1      0    7114
                                             29 BANK0      1     1      0
                          _putchUART
                       _sysParamInit
                    i1_saveSysParams
 ---------------------------------------------------------------------------------
 (13) i1_saveSysParams                                     0     0      0    4569
                      i1_calcVars2ti
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (14) i1_calcVars2ti                                       0     0      0    3947
                          i1___fldiv
                          i1___flmul
 ---------------------------------------------------------------------------------
 (15) i1___fldiv                                          25    17      8    1625
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (13) _sysParamInit                                        0     0      0    2356
                        _calcSysVars
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (14) _readEEPROM                                          1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (14) _calcSysVars                                         4     4      0    2325
                                             25 BANK0      4     4      0
                          i1___flmul
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          25    17      8    2322
                                              0 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (13) _putchUART                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (12) _T2int                                               1     1      0    1137
                                              6 BANK0      1     1      0
                   _saveProcessState
                         i1_delay_ms
                      i1_setPWM2duty
 ---------------------------------------------------------------------------------
 (13) i1_setPWM2duty                                       6     4      2     237
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (13) i1_delay_ms                                          5     3      2     278
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (13) _saveProcessState                                    0     0      0     622
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (14) i1_writeEEPROM                                       2     1      1     622
                                              0 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _hp_isr                                             14    14      0     748
                                             27 COMRAM    14    14      0
                              _T4int
 ---------------------------------------------------------------------------------
 (17) _T4int                                               1     1      0     748
                                             26 COMRAM     1     1      0
                           i2___flge
                         i2___xxtofl
                      i2_setPWM2duty
 ---------------------------------------------------------------------------------
 (18) i2_setPWM2duty                                       6     4      2     166
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2___xxtofl                                         14    10      4     348
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (18) i2___flge                                           12     4      8     234
                                             14 COMRAM    12     4      8
                         i2___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMConfig
   _PWM2Config
     _setPWM2duty
     _t2config
   _UARTConfig
   _buttonChecking
     _delay_ms
     _longPressDOWN
     _longPressENTER
       _confirmEdition
         _saveSysParams
           _calcVars2ti
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
       _integrator
         ___fldiv
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
     _longPressRETRO
     _longPressUP
     _pressDOWN
       _chanValDigDOWN
     _pressENTER
       _checkPass
       _confirmEdition
         _saveSysParams
           _calcVars2ti
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
       _desintegrator
         ___aldiv
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lmul
       _setPWM2duty
     _pressRETRO
     _pressUP
       _chanValDigUP
     _releaseDOWN
     _releaseENTER
     _releaseRETRO
     _releaseUP
   _clockConfig
   _drawScreen
     _drawAdvOFF
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAdvON
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAutoCalibRM
       _drawValEditor
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _lcd_read_byte
                     _lcd_read_4bits
                   _lcd_send_4bits
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawBadPass
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawChanVal
       _drawValEditor
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _lcd_read_byte
                     _lcd_read_4bits
                   _lcd_send_4bits
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawMenu
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawPassWord
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawSNquest
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _interruptConfig
   _ioConfig
   _ioInitStt
   _lcd_init
     _lcd_send_4bits
     _lcd_send_byte
       _lcd_read_byte
         _lcd_read_4bits
       _lcd_send_4bits
   _saveSysParams
     _calcVars2ti
       ___fldiv
         ___xxtofl (ARG)
       ___flmul
         ___awdiv (ARG)
           ___awmod (ARG)
         ___awmod (ARG)
     _writeEEPROM
   _setPWM2duty
   _setPWM2on
   _t4config

 _isr (ROOT)
   _T2int
     _saveProcessState
       i1_writeEEPROM
     i1_delay_ms
     i1_setPWM2duty
   _UARTint
     _putchUART
     _sysParamInit
       _calcSysVars
         i1___flmul
       _readEEPROM
     i1_saveSysParams
       i1_calcVars2ti
         i1___fldiv
         i1___flmul
       i1_writeEEPROM

 _hp_isr (ROOT)
   _T4int
     i2___flge
       i2___xxtofl (ARG)
     i2___xxtofl
     i2_setPWM2duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     6E      B7       6       71.5%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     4B      71       4       70.6%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     29      50       1       85.1%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     178       9        0.0%
DATA                 0      0     178      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Sun Nov 06 12:58:40 2016

             ___fldiv@aexp 010C               ___fldiv@bexp 010B               ___fldiv@sign 0100  
          ?_lcd_send_4bits 0001            ??_desintegrator 011E                i1___fldiv@a 0064  
              i1___fldiv@b 0060           i2setPWM2duty@act 0005                         l91 5FB4  
           ?_lcd_send_byte 0094               ___awdiv@sign 009A                         _fd 00BA  
                       _ie 00BF              _holdRETROcont 00BD                i1___flmul@a 0064  
              i1___flmul@b 0060           ?i1_saveSysParams 0001                         _pi 018E  
                       bsr 000FE0            ?_confirmEdition 0001        ___wmul@multiplicand 0091  
   __size_ofi1_calcVars2ti 006C               __CFG_CP0$OFF 000000               __CFG_CP1$OFF 000000  
             __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000                drawMenu@adv 016B  
                      l100 5C64                        l413 43C0                        l431 4868  
                      l522 6026                        l294 5FEC                        l390 3086  
                      l704 33A8                        l384 300C                        l561 45F8  
                      l393 30E8                        l546 378E                        l802 2F48  
                      l651 5A82                        l564 4630                        l396 3142  
                      l486 533E                        l558 45C8                        l567 4668  
                      l399 31A4                        l680 323A                        l931 089C  
                      l684 3260                        l685 327C                        l686 3290  
                      l790 2E9C                        l766 2D44                        l687 32AC  
                      l793 2EBC                        l778 2DF0                        l897 0A2C  
             __CFG_CPB$OFF 000000      i1setPWM2duty@actuator 0060                        _PR2 000FBB  
                      _PR4 000F52               __CFG_CPD$OFF 000000                 i1_delay_ms 5C86  
                      _isr 0018    __end_of_interruptConfig 60D4               ___awmod@sign 0094  
               i2___xxtofl 3DD0                        prod 000FF3                        wreg 000FE8  
               _TXSTA1bits 000FAC               __CFG_IESO$ON 000000               drawSNquest@i 016B  
             ___flmul@aexp 0101               ___flmul@bexp 0106               ___flmul@sign 0100  
             ___flmul@temp 010B               ___flmul@prod 0107               __CFG_LVP$OFF 000000  
            i1___fldiv@grs 0073              i1___fldiv@rem 006D               ___fltol@exp1 00AA  
                     l1174 3DBE                       l1503 2224                       l1271 3858  
                     l1512 225C                       l1184 3A6E                       l1272 389C  
                     l1353 4EE0                       l1514 22CA                       l1506 21CC  
                     l1363 52CC                       l1540 19FA                       l1533 175E  
                     l1550 1B0C                       l1542 1A68                       l1278 391C  
                     l1447 13E2                       l1464 1556                       l1448 13D6  
                     l1473 15EA                       l1449 13A2                       l1570 357A  
                     l1562 3506                       l1555 345A                       l1569 3562  
                     l7101 472C                       l7013 44AA                       l7111 475A  
                     l7031 4530                       l7113 4760                       l7121 4776  
                     l7041 455E                       l7025 4512                       l7115 476A  
                     l7107 474E                       l7043 4564                       l7051 4578  
                     l7019 44C2                       l7117 4770                       l7045 456C  
                     l7037 4552                       l7071 58EC                       l7047 4572  
                     l7065 58D2                       l9001 435A                       l7145 5A88  
                     l8121 54AE                       l7163 5C16                       l7059 58B4  
                     l7083 46B0                       l9003 4364                       l7155 5AB4  
                     l7139 5A64                       l7069 58E4                       l8213 128E  
                     l9021 4E7A                       l8133 54EA                       l7095 470E  
                     l9007 4380                       l8303 1454                       l8231 12E6  
                     l8223 12BC                       l8207 127A                       l8127 54CC  
                     l8151 5CD2                       l6633 532A                       l8401 2042  
                     l7169 5C2E                       l7089 46C2                       l6641 554C  
                     l9017 4E64                       l9041 5276                       l8411 2072  
                     l6651 55AE                       l8331 159E                       l8307 1466  
                     l8219 12B2                       l9019 4E74                       l8139 5508  
                     l9203 02E8                       l9211 0306                       ?_isr 0001  
                     l6629 5308                       l8501 2348                       l8421 20A0  
                     l9061 3492                       l6645 559E                       l6637 5536  
                     l8325 1588                       l8341 15BE                       l8317 1536  
                     l8261 1322                       l9029 4ECE                       l9045 52BA  
                     l9037 5260                       l8173 56EA                       l8181 5712  
                     l9301 0704                       l9213 0344                       l9141 00D2  
                     l8511 238E                       l8503 235C                       l9063 349A  
                     l9055 346A                       l6647 55A6                       l8351 15E4  
                     l8335 15AA                       l8343 15C4                       l9039 5270  
                     l8159 5E5A                       l8175 56F8                       l8167 56BC  
                     l9311 077C                       l9207 0300                       l9151 011A  
                     l8513 2392                       l8505 237E                       l8441 2122  
                     l8433 20F4                       l8417 2096                       l9073 3544  
                     l9065 34AA                       l8361 1640                       l8273 13B6  
                     l8177 5706                       l8169 56CA                       l9313 0784  
                     l9305 0754                       l9145 00E8                       l8451 21A0  
                     l8603 19E4                       l9075 3554                       l9067 34E8  
                     l8275 13BC                       l8195 1244                       l9403 0B6A  
                     l9331 086A                       l9315 0798                       l9219 035E  
                     l9171 0214                       l8533 16EC                       l8381 1698  
                     l8373 1680                       l8365 1652                       l8189 1220  
                     l9421 0C18                       l9333 087E                       l9325 084E  
                     l9309 0776                       l9261 053C                       l9253 04B8  
                     l9245 0434                       l9229 03B0                       l9165 01B8  
                     l6783 5C4C                       l8471 2246                       l8391 2014  
                     l8551 1746                       l8535 16F2                       l8527 16C8  
                     l9087 35CC                       l8375 1684                       l8279 13C6  
                     l8199 124E                       l8711 51E2                       l8703 51BE  
                     l9423 0C22                       l9415 0BD6                       l9343 08C4  
                     l9327 085C                       l9319 07C0                       l9263 0552  
                     l9191 028A                       l9183 0252                       l9175 0224  
                     l9159 0190                       l8465 2220                       l8633 1ADE  
                     l8609 1A0E                       l8561 1786                       l8553 174C  
                     l8545 1722                       l8537 1704                       l8369 1674  
                     l8297 1444                       l8289 1406                       l8713 51EE  
                     l9433 0C70                       l9425 0C2E                       l9417 0BE0  
                     l9409 0B9E                       l9353 0A02                       l9337 08A0  
                     l9273 05D6                       l9257 04EA                       l9193 02A2  
                     l9177 022A                       l9169 01FE                       l8459 21D8  
                     l8643 1B2C                       l8635 1AF2                       l8619 1A62  
                     l9443 5834                       l8299 144A                       l8715 51F4  
                     l8723 5226                       l8707 51CE                       l9371 0A78  
                     l9355 0A10                       l9347 0926                       l9283 0640  
                     l9259 0500                       l9187 0278                       l8477 2270  
                     l8397 2038                       l8645 1B36                       l8629 1AB8  
                     l8557 1772                       l8821 3804                       l8805 5F78  
                     l9437 0CFA                       l9429 0C48                       l9381 0AC6  
                     l9269 05A4                       l9197 02B6                       l9189 0284  
                     l8487 22C4                       l9447 585A                       l9471 41DC  
                     l8911 3D74                       l8815 37CA                       l8671 4D0C  
                     l8727 523A                       l8719 5218                       l9383 0ACC  
                     l9375 0AA0                       l9359 0A1E                       l9287 06B8  
                     l9199 02D0                       l9439 0D10                       l8497 231A  
                     l9473 41EC                       l9465 41AE                       l8921 3DA4  
                     l8673 4D18                       l8665 4CEE                       l9289 06BE  
                     l9491 4274                       l9483 4246                       l9475 41F2  
                     l9459 4190                       l8923 3DB4                       l8915 3D88  
                     l8851 38D2                       l8691 4D70                       l8683 4D4E  
                     l8675 4D1E                       l8659 4CD8                       l8755 2CCE  
                     l8747 2BE2                       l9395 0B12                       l8941 397C  
                     l8861 3902                       l9487 4258                       l8871 3C6E  
                     l8863 3912                       l8855 38E6                       l8687 4D5C  
                     l8775 0F74                       l9399 0B3A                       l9841 3FFE  
                     l9833 3F64                       l9817 3686                       l8945 39CA  
                     l8793 11D6                       l8769 0EAE                       l8955 3ABA  
                     l8963 5D34                       l8891 3CE8                       l8787 1110  
                     l8779 0FA0                       l9845 45A2                       l9829 3F4E  
                     l8973 42AC                       l8949 3A1C                       l8877 3C94  
                     l9855 45DA                       l9791 2956                       l9783 2866  
                     STR_1 7EC1                       STR_2 7ED3                       l9865 460A  
                     l8993 432E                       l9953 3040                       STR_3 7F1B  
                     STR_4 7EE5                       l9875 4642                       l8899 3D3C  
                     l9795 29CC                       l9787 28DE                       l9779 27EE  
                     l9963 3080                       l9955 3052                       l9947 3006  
                     l9939 2FD8                       STR_5 7EF7                       STR_6 7F09  
                     l8989 431A                       STR_7 7F82                       STR_8 7E1F  
                     l9887 467A                       l8999 434A                       l9799 2A40  
                     l9991 3170                       l9975 30E2                       l9967 30B4  
                     STR_9 7FB4                       l9987 313C                       l9979 310E  
                     l9999 319E               printf@tmpval 0158                       u8400 453E  
                     u8600 473A                       u8390 453C                       u8590 4738  
             i2___flge@ff1 000F               i2___flge@ff2 0013              __CFG_FCMEN$ON 000000  
              lcd_putc@cha 009B            __end_of_UARTint 5638                       _main 5B22  
     __size_of_calcVars2ti 006C              i1___flmul@grs 006E           lcd_read_byte@low 0091  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 0051              __CFG_BORV$285 000000  
           ??_drawPassWord 00AB                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 00BE            ?_longPressENTER 0001  
          ___fldiv@new_exp 0105       __size_of_calcSysVars 007E            ?_longPressRETRO 0001  
            drawSNquest@tq 016D      __size_of_sysParamInit 00CA       __end_of_EEPROMConfig 60DA  
             ___param_bank 000010                _writeEEPROM 5FD2                      ??_isr 007E  
           i1___fldiv@aexp 0078             i1___fldiv@bexp 0077               _BAUDCON1bits 000FB8  
           i1___fldiv@sign 006C                      l10005 31D2                      l10023 4DE4  
                    l10103 484E                      l10201 33C0                      l10017 4DAE  
                    l10009 4D7C                      l10033 4E16                      l10211 33EC  
                    l10043 43E0                      l10213 33F4                      l10205 33D2  
                    l10127 3226                      l10039 43CA                      l10233 4F32  
                    l10137 3252                      l10153 32BE                      l10129 322E  
                    l10049 43FC                      l10081 47BE                      l10251 4F84  
                    l10243 4F5C                      l10227 4F14                      l10155 32E2  
                    l10411 5074                      l10403 5058                      l10237 4F44  
                    l10173 3324                      l10077 47A8                      l10421 5096  
                    l10413 507A                      l10405 5060                      l10341 5156  
                    l10333 5138                      l10191 338E                      l10175 3336  
                    l10159 32F4                      l10095 4818                      l10087 47DA  
                    l10423 509E                      l10415 5080                      l10407 5066  
                    l10351 517E                      l10185 3374                      l10601 2E10  
                    l10425 50A6                      l10417 5086                      l10409 506C  
                    l10329 512E                      l10187 337A                      l10611 2E42  
                    l10603 2E20                      l10099 4832                      l10419 508E  
                    l10347 5174                      l10197 33AE                      l10701 2FC2  
                    l10621 2E64                      l10429 50AC                      l10623 2E6A  
                    l10615 2E4E                      l10641 2ECC                      l10625 2E78  
                    l10561 2D64                      l10571 2D96                      l10563 2D74  
                    l10661 2F16                      l10653 2EFA                      l10581 2DB8  
                    l10663 2F24                      l10583 2DBE                      l10575 2DA2  
                    l10681 2F78                      l10649 2EEE                      l10585 2DCC  
                    l10659 2F10                      l10693 2FA6                      l10679 2F68  
                    l10689 2F9A                      l10699 2FBC                      l10799 5B62  
            ___fltol@sign1 00A9            __end_of___aldiv 4286            __end_of___fladd 16AA  
                    ?_main 0001            __end_of___fldiv 23B6            __end_of___awdiv 4D7A  
          __end_of___flneg 5D46                      _EEADR 000FA9                      STR_10 7F60  
                    STR_11 7E55                      STR_20 7FF0                      STR_12 7FC3  
                    STR_21 7E79                      STR_13 7E79                      STR_22 7FA4  
                    STR_14 7FA4                      STR_30 7F4F                      STR_23 7DFB  
                    STR_31 7E67                      STR_15 7DFB                      STR_24 7FF7  
                    STR_16 7FD2                      STR_32 7F71                      STR_40 7F2D  
                    STR_41 7FF0                      STR_33 7E8B                      STR_17 7E0D  
                    STR_25 7DE9                      STR_18 7FE1                      STR_34 7E9D  
                    STR_26 7DAB                      STR_19 7E55                      STR_35 7E43  
                    STR_27 7DD7                      STR_28 7F3E                      STR_36 7E31  
          __end_of___awmod 5244                      STR_29 7E67                      STR_37 7DC4  
                    STR_38 7EAF                      STR_39 7F93            __end_of___flmul 1B50  
          __end_of___flsub 5BB4            __end_of___fltol 4392            __end_of___lldiv 4EF2  
                    u10310 573E                      u10320 5750                      u11050 232E  
                    u10330 576A                      u10340 578A                      u10316 5740  
                    u10405 54F4                      u10406 54F6                      u11240 1ACC  
                    u11160 1986                      u10328 5754                      u10425 5512  
                    u10338 576E                      u10426 5514                      u10348 578E  
          ___awdiv@divisor 0097                      u11165 197A                      u11501 37E0  
                    u10365 54B8                      u10445 5CEA                      u10550 136C  
                    u10366 54BA                      u10446 5CEC                      u10560 1384  
          __end_of___llmod 52DE                      u10385 54D6                      u10570 1386  
                    u10386 54D8              lcd_init@F7567 004B                      u13060 3684  
                    u12260 0894                      u11710 42CC                      u14110 2D7C  
                    u11481 37A6                      u11715 42C0                      u13420 332E  
                    u14220 2E28                      u14116 2D7E                      u13430 3330  
                    u13450 334C                      u14330 2ED4                      u14226 2E2A  
                    u13700 4F9C                      u13460 334E                      u13710 4F9E  
                    u11935 4968                      u11936 496A                      u14440 2F80  
                    u14336 2ED6                      u13670 4F7C                      u14446 2F82  
                    u14607 5164                      u13680 4F7E                      u14617 56DE  
                    u14627 551C                      u14637 5C54                      u14587 511E  
                    u14597 5146                      i1l100 5CAA                      i1l300 6052  
                    i1l225 6096                      i1l504 3BE8                      i1l294 600C  
                    i1l492 3B24                      i1l486 53D2                      i1l823 0076  
              ?_UARTConfig 0001                      i2l486 5952                      i2l818 57E6  
          ___awdiv@counter 0099              __CFG_WDTPS$32 000000                      _T2int 3ABE  
                    _T4int 4FA4                ?_PWM2Config 0001              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000        ___lmul@multiplicand 0093  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000                      _fData 00AB             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           __CFG_EBTRB$OFF 000000                      _exp10 016E                      _flech 0197  
          __end_of_dpowers 7DAB                i1delay_ms@i 0063             i1___flmul@aexp 006D  
           i1___flmul@bexp 0072                      _selSN 00C1          lcd_read_byte@high 0092  
                    _scale 0D30            __end_of_isdigit 5F82         __CFG_MCLRE$EXTMCLR 000000  
           i1___flmul@sign 006C             i1___flmul@temp 0077            ??_drawValEditor 00AB  
           i1___flmul@prod 0073                      _putch 6076           __end_ofi2___flge 416C  
                    tablat 000FF5              drawPassWord@i 016B              i1_calcVars2ti 59E8  
          __end_of_pressUP 459C               _sysParamInit 4BF2                      plusw2 000FDB  
             ?_setPWM2duty 008F                      status 000FD8            ??_lcd_read_byte 0091  
       __size_ofi1___fldiv 03C0             __CFG_HFOFST$ON 000000         __size_ofi1___flmul 04A6  
             putchUART@val 0060               ?_longPressUP 0001            __initialization 5406  
    __end_ofi1_writeEEPROM 6012               __end_of_main 5B6C            ??_lcd_send_byte 0095  
    __end_of_saveSysParams 4970              lcd_gotoxy@pos 0098               ?_releaseDOWN 0001  
                   ??_main 00AB              __activetblptr 000002                ?i1_delay_ms 0060  
           __CFG_PLLCFG$ON 000000                     ?_T2int 0001                     ?_T4int 0001  
     __size_of__tdiv_to_l_ 019E                ?i2___xxtofl 0001           ?_interruptConfig 0001  
       desintegrator@temp2 012C         desintegrator@temp3 0128         desintegrator@tempL 0124  
     __size_of_clockConfig 0026      __size_of_chanValDigUP 00D0           __end_of_t2config 6044  
                ??_UARTint 007D           __end_of_t4config 5F58             setPWM2duty@act 0093  
         ___llmod@dividend 009C                     ?_scale 010D                     _EEDATA 000FA8  
                   _CCPR2L 000F67                     _EECON2 000FA7           ___awdiv@dividend 0095  
                   ?_putch 0001   __size_of_drawAutoCalibRM 0032             ?i1_calcVars2ti 0001  
                   i1l1503 25E4                     i1l1512 261C                     i1l1514 268A  
                   i1l1506 258C                     i1l1540 1EA0                     i1l1533 1C04  
                   i1l1550 1FB2                     i1l1542 1F0E                     i2l1184 4130  
                   i2l1570 3EDC                     i2l1562 3E8C                     i2l1555 3E0E  
                   i2l1569 3EC8                     i1l9501 23D4                     i1l9511 2402  
                   i1l9521 2432                     i1l9611 2708                     i1l9531 2460  
                   i1l9507 23F8                     i1l9621 274E                     i1l9613 271C  
                   i1l9623 2752                     i1l9615 273E                     i1l9607 26DA  
                   i1l9551 24E2                     i1l9543 24B4                     i1l9527 2456  
                   i2l7401 4080                     i1l9713 1E8A                     i1l9561 2560  
                   i1l9643 1B92                     i2l7405 40B4                     i1l9661 1BEC  
                   i1l9645 1B98                     i1l9637 1B6E                     i1l9581 2606  
                   i2l7415 4168                     i2l7431 3E3C                     i1l9743 1F84  
                   i1l9719 1EB4                     i1l9671 1C2C                     i1l9663 1BF2  
                   i1l9655 1BC8                     i1l9647 1BAA                     i1l9575 25E0  
                   i2l7409 40F2                     i2l7433 3E42                     i2l7425 3E1E  
                   i1l9753 1FD2                     i1l9745 1F98                     i1l9729 1F08  
                   i1l9569 2598                     i2l7443 3EB2                     i2l7435 3E4E  
                   i1l9755 1FDC                     i1l9739 1F5E                     i1l9667 1C18  
                   i1l9587 2630                     i2l7445 3EBE                     i2l7437 3E74  
                   i1l9597 2684                     i2l7391 592C                     i2l7457 3F0E  
                   i2l7395 5946                     i2l7789 5026                     _RCREG1 000FAE  
     __size_of_drawBadPass 002E                     _SPBRG1 000FAF                     _TXREG1 000FAD  
         __end_of___xxtofl 35DE       __size_of_drawChanVal 00BC           __end_of_delay_ms 5C86  
                   _UPisLP 003C             integrator@acum 010D           __end_of_ioConfig 5DE6  
      __size_of_UARTConfig 0038             integrator@temp 0111             __CFG_PWRTEN$ON 000000  
           __CFG_XINST$OFF 000000              _DOWNsecurLock 00B3        __size_of_PWM2Config 0066  
         __end_of__powers_ 7D83       __size_of_drawSNquest 00F0               _CCPTMRS0bits 000F49  
         __end_of_drawMenu 31F6           __end_of_lcd_init 51A2                     ___flge 392E  
         __end_of_lcd_putc 5730                     ___lmul 5822                  ??___aldiv 0097  
                ??___fladd 0122                     ___wmul 5D7E                  ??___fldiv 00A5  
                ??___awdiv 0099                  ??___flneg 0093             __CFG_STVREN$ON 000000  
                ??___awmod 0093                  ??___flmul 00A5                  ??___flsub 00A9  
                ??___fltol 011A                  ??___lldiv 0097                  ??___llmod 00A4  
                   _contra 01A8                     _hp_isr 0008                     _selKMT 0042  
                   _fround 2A4E                     clear_0 546C                     clear_1 5478  
                   clear_2 5484           ___awdiv@quotient 009B            ___awmod@divisor 0091  
             _chanValDigUP 4A56            ___awmod@counter 0093                     _printf 00C2  
        __end_ofi1___fldiv 2776          __end_ofi1___flmul 1FF6        _lcd_send_4bits$1675 008F  
      _lcd_send_4bits$1676 0090        _lcd_send_4bits$1677 0091        _lcd_send_4bits$1678 0092  
         ??_lcd_read_4bits 008F       __end_of_drawPassWord 4498               __pdataCOMRAM 0043  
                ??_isdigit 008F               __mediumconst 7D1A                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_pressUP 0094  
         ??_chanValDigDOWN 008F                 ___flge@ff1 008F                 ___flge@ff2 0093  
             ___xxtofl@arg 0099               ___xxtofl@exp 0098               ___xxtofl@val 008F  
               __accesstop 0060          ?_saveProcessState 0001    __end_of__initialization 548A  
          __CFG_PBADEN$OFF 000000      __size_of_EEPROMConfig 0006                 ___flneg@f1 008F  
              _UPsecurLock 00B7              ___rparam_used 000001         ??_saveProcessState 0062  
               ___fltol@f1 0116           ??_lcd_send_4bits 008F            writeEEPROM@data 008F  
      __size_ofi1_delay_ms 0046              __end_of_T2int 3C48              __end_of_T4int 5056  
         ??_confirmEdition 00A9        __size_ofi2___xxtofl 0150             __pcstackCOMRAM 0001  
              setPWM2on@on 008F               __pidataBANK0 6068               __pidataBANK1 5F04  
             _FC1securLock 0038         __size_of_checkPass 008E                integrator@i 0115  
            __end_of_scale 1202              __end_of_putch 6084               _FC2securLock 0039  
                ?i2___flge 000F               _actualScreen 00B8             lcd_gotoxy@fila 0097  
   __size_ofi1_setPWM2duty 0094                 __div_to_l_ 3C48                    ??_T2int 0066  
                  ??_T4int 001B         __size_of_ioInitStt 0008              ?_releaseENTER 0001  
       __size_of_drawAdvON 002E              ?_releaseRETRO 0001               _EEPROMConfig 60D4  
        lcd_gotoxy@address 0099            ??i1_calcVars2ti 0079            __div_to_l_@exp1 009C  
          __div_to_l_@cntr 009B                 _chanValdig 019E                    ??_scale 00A9  
          __div_to_l_@quot 0097                    ??_putch 009C           ??_longPressENTER 00AB  
               __pbssBANK0 00AB                 __pbssBANK1 0198           ??_longPressRETRO 008F  
            __div_to_l_@f1 008F              __div_to_l_@f2 0093          ??_drawAutoCalibRM 00AB  
     __size_of_setPWM2duty 0094             _RETROsecurLock 00B6         __size_of_setPWM2on 001A  
       __CFG_CCP2MX$PORTC1 000000               ?_writeEEPROM 008F             lcd_send_byte@n 0094  
                  ?___flge 008F                    ?___lmul 008F                    ?___wmul 008F  
       __size_of_releaseUP 000C         __CFG_CCP3MX$PORTB5 000000       __size_of_longPressUP 0074  
                ?_t2config 0001                    ?_hp_isr 0001                  ?_t4config 0001  
                  ?_fround 010D             ___lmul@product 0097      __end_of_desintegrator 3790  
                  ?_printf 0136                 ??i2___flge 0017                 _drawAdvOFF 5ED6  
       __size_of_pressDOWN 00FC      i2setPWM2duty@actuator 0001               ??_UARTConfig 008F  
     __size_of_releaseDOWN 000C             ??_releaseENTER 008F                    i1l10321 53BE  
                  i1l10317 539C                    i1l10511 3C20                    i1l10521 3C34  
                  i1l10505 3C06                    i1l10259 5C92                    i1l10523 3C38  
                  i1l10531 55DC                    i1l10463 3B5C                    i1l10535 55EC  
                  i1l10473 3B70                    i1l10457 3B42                    i1l10449 3B14  
                  i1l10475 3B74                    i1l10539 55FC                    i1l10477 3B82  
   __size_ofi2_setPWM2duty 0070                    i1l10767 006A             ??_releaseRETRO 008F  
             ??_PWM2Config 0095                  ?___xxtofl 008F            __CFG_WDTEN$SWON 000000  
                ?_delay_ms 008F   __size_ofi1_saveSysParams 00E6                 _drawScreen 5056  
               _lcd_gotoxy 5E4A                  ?_ioConfig 0001         __size_of_putchUART 000E  
   __size_of_longPressDOWN 002A                    _SPBRGH1 000FB0                    _UARTint 55B4  
                ?_drawMenu 0001                  ?_lcd_init 0001                    _i16Data 00AF  
            ??_calcVars2ti 00A9          __end_of_checkPass 55B4                  ?_lcd_putc 0001  
  __size_of_buttonChecking 02B2             _tempLastScreen 00C2              ??_calcSysVars 0079  
               _holdUPcont 00BE                 _readEEPROM 6044              i1_setPWM2duty 5372  
        __end_of_ioInitStt 60CC          __end_of__npowers_ 7D4F                    __Hparam 0000  
               _scale$2974 0111                 _lastSttFC1 003F                 _lastSttFC2 0040  
                  __Lparam 0000          __end_of_drawAdvON 5ED6         __end_of_UARTConfig 5D7E  
               checkPass@i 0094         __end_of_PWM2Config 5B22                    ___aldiv 416C  
          __size_of___flge 0190                    ___fladd 1202                    ___fldiv 1FF6  
                  ___awdiv 4CBC                    ___flneg 5D0E            __size_of___lmul 0076  
                  ___awmod 51A2                    ___flmul 16AA                    ___flsub 5B6C  
                  ___fltol 4286                    ___lldiv 4E36            __size_of___wmul 0036  
                  ___llmod 5244                 ??_t2config 008F                 ??_t4config 008F  
    __size_of_drawPassWord 0106            __size_of_hp_isr 581A                    __pcinit 5406  
          __size_of_fround 02D2                    __ramtop 0600                    __ptext0 5B22  
                  __ptext1 5F2E                    __ptext2 6012                    __ptext3 5100  
                  __ptext4 60C4                    __ptext5 5DB4                    __ptext6 60CC  
                  __ptext7 5056                    __ptext8 479A                    __ptext9 4392  
          __size_of_printf 0C6E              i1delay_ms@del 0060               ??i1_delay_ms 0062  
              ?__div_to_l_ 008F                    _dpowers 7D83                  _T2CONbits 000FBA  
               _integrator 3F20                    _isdigit 5F58               __size_of_isr 00A6  
             ??i2___xxtofl 0005                 ??___xxtofl 0093           ___awmod@dividend 008F  
         ___aldiv@dividend 008F                  _T4CONbits 000F51                 ??_delay_ms 0091  
        __end_of_setPWM2on 602C                 ??_ioConfig 008F                    _pressUP 4498  
                _ENTERisLP 00B4                    _questSN 00B1                 ??_drawMenu 00AB  
               ??_lcd_init 0097          __end_of_releaseUP 60AC             __pintcode_body 57AA  
               ??_lcd_putc 009A       end_of_initialization 548A      __end_of_drawValEditor 2A4E  
     lcd_send_byte@address 0096             ?i1_setPWM2duty 0060              __Lmediumconst 7D1A  
                i1u1316_25 5E46                  i1u1316_26 5E48                    int_func 57AA  
                i1u1277_20 26EE                  i1u1373_25 4A4E                  i1u1373_26 4A50  
                i1u1296_20 1F72                  i1u1288_20 1E2C                  i1u1288_25 1E20  
                i1u1464_27 5C9A                  i1u1385_20 3B4A                  i1u1385_26 3B4C  
                i1u1396_20 3C0E                  i1u1396_26 3C10              i2_setPWM2duty 590C  
           i2___xxtofl@arg 000B             i2___xxtofl@exp 000A          __end_of_pressDOWN 479A  
           i2___xxtofl@val 0001        __end_of_calcVars2ti 59E8      __end_of_lcd_read_byte 5BFA  
          ___lldiv@divisor 0093               _drawPassWord 4392            ___lldiv@counter 009B  
       __end_ofi1_delay_ms 5CCC            lcd_read_4bits@n 0090              _longPressDOWN 5F82  
      __end_of_calcSysVars 56B6           i1setPWM2duty@act 0064              readEEPROM@adr 0060  
                  printf@c 016A                    printf@f 0136         __end_ofi2___xxtofl 3F20  
        __end_of_putchUART 60A0           ___aldiv@quotient 0099                    postdec1 000FE5  
                  postdec2 000FDD                    postinc0 000FEE                    postinc2 000FDE  
               _pressENTER 31F6                 _pressRETRO 5A54                  _RETROisLP 003B  
           __tdiv_to_l_@f1 008F             __tdiv_to_l_@f2 0093      __end_of_lcd_send_byte 5D0E  
            ??__tdiv_to_l_ 0097                  _PORTAbits 000F80                  _PORTBbits 000F81  
              ?_drawAdvOFF 0001                 _timsXcorte 0047              ??_clockConfig 008F  
             _holdDOWNcont 00BB                ___fladd@grs 012D              ___xxtofl@sign 0097  
                _TRISAbits 000F92                  _TRISBbits 000F93                  _TRISCbits 000F94  
              ?_drawScreen 0001                ?_lcd_gotoxy 0097                  i1___fldiv 23B6  
                i1___flmul 1B50                ___fldiv@grs 0107                ___fldiv@rem 0101  
            ??_drawBadPass 00AB             _ProcessStarted 003A     __size_ofi1_writeEEPROM 0020  
            ??_drawChanVal 00AB     __size_of_saveSysParams 00E6   __size_of_interruptConfig 0008  
              ___flmul@grs 0102          ??i1_saveSysParams 0079             ?i2_setPWM2duty 0001  
              ?_readEEPROM 0001              ??_drawSNquest 00AB                printf@width 0162  
              _CCP2CONbits 000F66          confirmEdition@yes 00A9       __end_of_releaseENTER 6092  
      __size_of__div_to_l_ 0188       __end_of_releaseRETRO 60B8             ?_longPressDOWN 0001  
              _ECCP2ASbits 000F64             __end_of___flge 3ABE       __size_of_writeEEPROM 0020  
           __end_of___lmul 5898             __end_of___wmul 5DB4  __size_of_saveProcessState 0032  
            __pidataCOMRAM 605A             __end_of_hp_isr 5822             __end_of_fround 2D20  
      setPWM2duty@actuator 008F             __end_of_printf 0D30                ?_integrator 0001  
        __size_ofi2___flge 0120        start_initialization 5406        __end_of__tdiv_to_l_ 392E  
               ?i1___fldiv 0060                __end_of_isr 00BE                 ?i1___flmul 0060  
          _drawAutoCalibRM 5DE6        __end_of_clockConfig 5FD2                _calcVars2ti 597C  
          ??i1_setPWM2duty 0062             _buttonChecking 2D20          desintegrator@temp 0120  
              _calcSysVars 5638            ___llmod@divisor 00A0        __end_of_drawBadPass 5EA8  
          ___llmod@counter 00A4        __size_of_drawAdvOFF 002E               _lastSttENTER 00CE  
             _lastSttRETRO 00CF        __end_of_drawChanVal 4E36                   ??___flge 0097  
      __size_of_drawScreen 00AA                   ??___lmul 0097        __size_of_lcd_gotoxy 0030  
            i1_writeEEPROM 5FF2                   ??___wmul 0093        __end_of_drawSNquest 488A  
              ?_pressENTER 0001                _chanValChar 0198                ?_pressRETRO 0001  
              __pdataBANK0 00C3                __pdataBANK1 016E            lcd_send_4bits@n 0093  
                 ??_hp_isr 001C              _saveSysParams 488A                   ??_fround 00A9  
                 ??_printf 0148          __size_of_t2config 0018          __size_of_t4config 002A  
                ___fladd@a 011E                  ___fladd@b 011A                 fround@prec 0119  
      __size_of_readEEPROM 0016                  ___fldiv@a 00A1                  ___fldiv@b 009D  
                ___flmul@a 00A1                  ___flmul@b 009D                __pbssCOMRAM 002A  
                ___flsub@a 0132                  ___flsub@b 012E             writeEEPROM@adr 0090  
            __pcstackBANK0 0060              __pcstackBANK1 0100                  _calFactor 01A4  
   __end_of_buttonChecking 2FD2          __size_of___xxtofl 01CE                   ?_UARTint 0001  
             _isdigit$2475 0090          __size_of_delay_ms 0046          __size_of_ioConfig 0032  
    __end_ofi1_calcVars2ti 5A54            ??i2_setPWM2duty 0003              ?_sysParamInit 0001  
  __size_of_lcd_read_4bits 007A              ??_setPWM2duty 0091          __size_of_drawMenu 0224  
        __size_of_lcd_init 00A2          __size_of_lcd_putc 007A                  _bladeIsUP 00B9  
        i1___fldiv@new_exp 0071                  _checkPass 5526            ??_longPressDOWN 008F  
      __size_of_integrator 012C              ??_longPressUP 008F          ??_interruptConfig 008F  
           ?i1_writeEEPROM 0060    __size_of_chanValDigDOWN 00CC                  __pintcode 0008  
            __pmediumconst 7D1A                   ?___aldiv 008F                   ?___fladd 011A  
                 ?___fldiv 009D                   ?___awdiv 0095                   ?___flneg 008F  
                 ?___awmod 008F                   ?___flmul 009D                   ?___flsub 012E  
                 ?___fltol 0116                  _ioInitStt 60C4                   ?___lldiv 008F  
                 ?___llmod 009C                  __npowers_ 7D1B             ?_saveSysParams 0001  
                _drawAdvON 5EA8              ??_releaseDOWN 008F                __pintcodelo 0018  
         __CFG_PRICLKEN$ON 000000                __tdiv_to_l_ 3790    __size_of_lcd_send_4bits 008E  
  __end_of_drawAutoCalibRM 5E18               ??__div_to_l_ 0097    __size_of_confirmEdition 0102  
              _clockConfig 5FAC                   ?_isdigit 0001             __size_of_T2int 018A  
           __size_of_T4int 00B2                  _lastSttUP 00D0                   ?_pressUP 0001  
              ??i1___fldiv 0068                ??i1___flmul 0068            ?_buttonChecking 0001  
              _drawBadPass 5E7A             __size_of_scale 04D2             ??_sysParamInit 007D  
           __size_of_putch 000E        __size_of_pressENTER 021A                  _setPWM2on 6012  
    __size_of_releaseENTER 000E        __size_of_pressRETRO 0068                _drawChanVal 4D7A  
    __size_of_releaseRETRO 000C            ___aldiv@divisor 0093            ___aldiv@counter 0097  
            _tempNumCortes 004F             ___wmul@product 0093                   _LATBbits 000F8A  
                 _LATCbits 000F8B                  _releaseUP 60A0                 ?_checkPass 0001  
  lcd_init@LCD_INIT_STRING 0098                  delay_ms@i 0092     __size_of_desintegrator 01B2  
                 _DOWNisLP 0037                _drawSNquest 479A                   _IPR1bits 000F9F  
                 _PIE1bits 000F9D                   _IPR5bits 000F7F                   _PIE5bits 000F7D  
                _numCortes 00CB                   _PIR1bits 000F9E         __end_of__div_to_l_ 3DD0  
                 _PIR5bits 000F7E        __end_of_setPWM2duty 5372                _holdFC1cont 003D  
              _holdFC2cont 003E                   _RCONbits 000FD0                 UARTint@sas 007D  
  __size_of_longPressENTER 00B2                  _pressDOWN 469E    __size_of_longPressRETRO 0046  
               ?_ioInitStt 0001                 ?_drawAdvON 0001           _saveProcessState 5E18  
            ?_chanValDigUP 0001                  _putchUART 6092        __end_of_longPressUP 590C  
                 i2___flge 404C               ??_drawAdvOFF 00AB          ___wmul@multiplier 008F  
                lcd_init@i 009C                 printf@flag 0156                 printf@fval 0164  
               printf@prec 0168            i1_saveSysParams 4970               _releaseENTER 6084  
      __end_of_releaseDOWN 60C4               ??_drawScreen 00AB               _releaseRETRO 60AC  
             ??_lcd_gotoxy 0098          ___lmul@multiplier 008F                  copy_data0 541A  
                copy_data1 543A                  copy_data2 545A           __size_of_UARTint 0084  
               ?_setPWM2on 0001               ??_readEEPROM 0060                 ?_releaseUP 0001  
               _EECON1bits 000FA6            ??i1_writeEEPROM 0061         __end_of_drawAdvOFF 5F04  
                 __Hrparam 0000                _lastSttDOWN 00CD                   __Lrparam 0000  
       __CFG_BOREN$SBORDIS 000000            ??_saveSysParams 00A9                 ?_pressDOWN 0001  
        __CFG_P2BMX$PORTC0 000000         __end_of_drawScreen 5100         __end_of_lcd_gotoxy 5E7A  
         __size_of___aldiv 011A                   _t2config 602C           __size_of___fladd 04A8  
         __size_of___fldiv 03C0           __size_of___awdiv 00BE           __size_of___flneg 0038  
           ??_chanValDigUP 008F           __size_of___awmod 00A2           __size_of___flmul 04A6  
                 _t4config 5F2E           __size_of___flsub 0048           __size_of___fltol 010C  
         __size_of___lldiv 00BC           __size_of___llmod 009A                 ?_putchUART 0001  
              _fround$2972 0115                _fround$2973 0111              _desintegrator 35DE  
   __size_of_drawValEditor 02D8                 _ANSELAbits 000F38                 _ANSELCbits 000F3A  
           desintegrator@i 0130           ?_drawAutoCalibRM 0001               ??_integrator 00A9  
              _menuSection 01B6                   _chanValf 002A                   _chanVals 01B4  
                 ___xxtofl 3410         __end_of_readEEPROM 605A                   _diamTubo 0186  
         __size_of_isdigit 002A     __size_of_lcd_read_byte 0046                   _delay_ms 5C40  
            ?_EEPROMConfig 0001                   _ioConfig 5DB4                   __ptext10 2FD2  
                 __ptext11 4D7A                   __ptext20 56B6                   __ptext12 5E7A  
                 __ptext21 5E4A                   __ptext13 5DE6                   __ptext30 3790  
                 __ptext22 5CCC                   __ptext14 2776                   __ptext31 3C48  
                 __ptext23 5498                   __ptext15 5EA8                   __ptext40 2D20  
                 __ptext32 5D7E                   __ptext24 5BB4                   __ptext16 5ED6  
                 __ptext41 60A0                   __ptext33 5244                   __ptext25 5730  
                 __ptext17 00C2                   __ptext50 4286                   __ptext42 60AC  
                 __ptext34 4E36                   __ptext26 5F58                   __ptext18 0D30  
                 __ptext51 416C                   __ptext43 6084                   __ptext35 5B6C  
                 __ptext27 2A4E                   __ptext19 6076                   __ptext60 5822  
                 __ptext52 5526                   __ptext44 60B8                   __ptext36 1202  
                 __ptext28 51A2                   __ptext61 459C                   __ptext53 469E  
                 __ptext45 4498                   __ptext37 5D0E                   __ptext29 4CBC  
                 __ptext70 5ABC                   __ptext62 488A                   __ptext54 4B26  
                 __ptext46 4A56                   __ptext38 392E                   __ptext71 602C  
                 __ptext63 5FD2                   __ptext55 5898                   __ptext47 5A54  
                 __ptext39 5FAC                   __ptext80 6044                   __ptext72 52DE  
                 __ptext64 597C                   __ptext56 5BFA                   __ptext48 31F6  
                 __ptext81 5638                   __ptext73 60D4                   __ptext65 16AA  
                 __ptext57 4EF2                   __ptext49 35DE                   __ptext90 4FA4  
                 __ptext82 1B50                   __ptext66 1FF6                   __ptext58 3F20  
                 __ptext91 590C                   __ptext83 6092                   __ptext75 55B4  
                 __ptext67 5F82                   __ptext59 3410                   __ptext92 3DD0  
                 __ptext84 3ABE                   __ptext76 4970                   __ptext68 5C40  
                 __ptext93 404C                   __ptext85 5372                   __ptext77 59E8  
                 __ptext69 5D46                   __ptext86 5C86                   __ptext78 23B6  
                 __ptext87 5E18                   __ptext79 4BF2                   __ptext88 5FF2  
                 _kgXcorte 018A                   __powers_ 7D4F           __size_of_pressUP 0104  
                 _drawMenu 2FD2                   _lcd_init 5100                   _lcd_putc 56B6  
             ?_calcVars2ti 0001                _OSCCON2bits 000FD2             _lcd_read_4bits 5730  
   __size_of_lcd_send_byte 0042                _setPWM2duty 52DE          i1writeEEPROM@data 0060  
             ?_calcSysVars 0001              __size_of_main 004A                ??_checkPass 008F  
          calcSysVars@temp 0079                   _passChar 01B0                _passSection 00C0  
                 _tiXcorte 00C3                   _timeDOWN 0043              ??_writeEEPROM 0090  
           _chanValDigDOWN 4B26                _longPressUP 5898         __end_of_integrator 404C  
             _PSTR2CONbits 000F63               ??_pressENTER 00AB                   int$flags 0051  
              ??_ioInitStt 008F                   _questKMT 0032               ??_pressRETRO 008F  
              ??_drawAdvON 00AB    __end_ofi1_saveSysParams 4A56                  printf@len 0152  
                printf@exp 0160                  printf@val 015C       __end_of_sysParamInit 4CBC  
              _releaseDOWN 60B8             _lcd_send_4bits 5498            checkPass@passOK 0093  
           ?_desintegrator 0001                _introducido 01AC                delay_ms@del 008F  
           _confirmEdition 459C             _chanValSection 0196              _velocidadMasa 00C7  
              _OSCTUNEbits 000F9B                 _INTCONbits 000FF2             ??_EEPROMConfig 008F  
              _PWM2CONbits 000F65                   isdigit@c 0091               _tempkgXcorte 0192  
                 scale@scl 0115     __end_of_lcd_read_4bits 57AA            _interruptConfig 60CC  
                 intlevel1 0000                   intlevel2 0000                ??_setPWM2on 008F  
         __tdiv_to_l_@exp1 009F           __tdiv_to_l_@cntr 009E         __end_of_pressENTER 3410  
         __tdiv_to_l_@quot 009A            i2___xxtofl@sign 0009         __end_of_pressRETRO 5ABC  
    __end_ofi1_setPWM2duty 5406           ___lldiv@dividend 008F              _drawValEditor 2776  
              ??_releaseUP 008F     __end_of_chanValDigDOWN 4BF2                 _RCSTA1bits 000FAB  
         i1writeEEPROM@adr 0061                 _OSCCONbits 000FD3              _lcd_read_byte 5BB4  
       _screen_calibVelRes 0041             _longPressENTER 4EF2             _longPressRETRO 5BFA  
              ??_pressDOWN 0094                   printf@ap 0154                   printf@cp 0150  
   __end_of_lcd_send_4bits 5526     __end_of_confirmEdition 469E                   putch@val 009C  
              ??_putchUART 0060              _lcd_send_byte 5CCC        __end_of_writeEEPROM 5FF2  
             ?__tdiv_to_l_ 008F                _printf$2975 014C           ??_buttonChecking 00AB  
             ?_clockConfig 0001                 _UARTConfig 5D46               _processTimer 002E  
             _processState 0035           ___lldiv@quotient 0097                 _PWM2Config 5ABC  
             ___aldiv@sign 0098          __CFG_T3CMX$PORTC0 000000                 _WDTCONbits 000FD1  
            _holdENTERcont 00BC            ?_lcd_read_4bits 0001               ?_drawBadPass 0001  
            ___fladd@signs 012A               ?_drawChanVal 0001   __end_of_saveProcessState 5E4A  
     __end_of_chanValDigUP 4B26             _ENTERsecurLock 00B5             ?_drawValEditor 0001  
             ___fladd@aexp 012B               ___fladd@bexp 012C      __end_ofi2_setPWM2duty 597C  
        __CFG_FOSC$INTIO67 000000               ?_drawSNquest 0001            ?_chanValDigDOWN 0001  
   __end_of_longPressENTER 4FA4              ?_drawPassWord 0001             ?_lcd_read_byte 0001  
   __end_of_longPressRETRO 5C40      __end_of_longPressDOWN 5FAC  
