

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Tue Nov 01 00:17:51 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101  0000                     
   102                           	psect	idataCOMRAM
   103  005188                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _kgXcorte
   107  005188  CCCD               	dw	52429
   108  00518A  3DCC               	dw	15820
   109                           
   110                           ;initializer for _m3Xcorte
   111  00518C  CCCD               	dw	52429
   112  00518E  3DCC               	dw	15820
   113                           
   114                           ;initializer for _tiXcorte
   115  005190  0000               	dw	0
   116  005192  4000               	dw	16384
   117                           
   118                           ;initializer for _velocidadMasa
   119  005194  0000               	dw	0
   120  005196  4000               	dw	16384
   121                           
   122                           ;initializer for _lastSttDOWN
   123  005198  01                 	db	1
   124                           
   125                           ;initializer for _lastSttENTER
   126  005199  01                 	db	1
   127                           
   128                           ;initializer for _lastSttRETRO
   129  00519A  01                 	db	1
   130                           
   131                           ;initializer for _lastSttUP
   132  00519B  01                 	db	1
   133                           
   134                           	psect	idataBANK0
   135  005228                     __pidataBANK0:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _densidadMasa
   139  005228  0000               	dw	0
   140  00522A  3FC0               	dw	16320
   141                           
   142                           ;initializer for _diamTubo
   143  00522C  0000               	dw	0
   144  00522E  41A0               	dw	16800
   145                           
   146                           ;initializer for _numCortes
   147  005230  0001               	dw	1
   148                           
   149                           ;initializer for _tVarProceso
   150  005232  01                 	db	1
   151                           
   152                           	psect	idataBANK1
   153  0051B0                     __pidataBANK1:
   154                           	opt stack 0
   155                           
   156                           ;initializer for _contra
   157  0051B0  01                 	db	1
   158  0051B1  02                 	db	2
   159  0051B2  03                 	db	3
   160  0051B3  04                 	db	4
   161                           
   162                           ;initializer for _pi
   163  0051B4  0FDB               	dw	4059
   164  0051B6  4049               	dw	16457
   165                           
   166                           ;initializer for _tempkgXcorte
   167  0051B8  CCCD               	dw	52429
   168  0051BA  3DCC               	dw	15820
   169                           
   170                           ;initializer for lcd_init@F7567
   171  0051BC  28                 	db	40
   172  0051BD  0C                 	db	12
   173  0051BE  01                 	db	1
   174  0051BF  06                 	db	6
   175                           
   176                           ;initializer for _tempNumCortes
   177  0051C0  0001               	dw	1
   178                           
   179                           	psect	mediumconst
   180  007D52                     __pmediumconst:
   181                           	opt stack 0
   182  007D52  00                 	db	0
   183  007D53                     __npowers_:
   184                           	opt stack 0
   185  007D53  0000               	dw	0
   186  007D55  3F80               	dw	16256
   187  007D57  CCCD               	dw	52429
   188  007D59  3DCC               	dw	15820
   189  007D5B  D70A               	dw	55050
   190  007D5D  3C23               	dw	15395
   191  007D5F  126F               	dw	4719
   192  007D61  3A83               	dw	14979
   193  007D63  B717               	dw	46871
   194  007D65  38D1               	dw	14545
   195  007D67  C5AC               	dw	50604
   196  007D69  3727               	dw	14119
   197  007D6B  37BD               	dw	14269
   198  007D6D  3586               	dw	13702
   199  007D6F  BF95               	dw	49045
   200  007D71  33D6               	dw	13270
   201  007D73  CC77               	dw	52343
   202  007D75  322B               	dw	12843
   203  007D77  705F               	dw	28767
   204  007D79  3089               	dw	12425
   205  007D7B  E6FF               	dw	59135
   206  007D7D  2EDB               	dw	11995
   207  007D7F  E508               	dw	58632
   208  007D81  1E3C               	dw	7740
   209  007D83  4260               	dw	16992
   210  007D85  0DA2               	dw	3490
   211  007D87                     __end_of__npowers_:
   212                           	opt stack 0
   213  007D87                     __powers_:
   214                           	opt stack 0
   215  007D87  0000               	dw	0
   216  007D89  3F80               	dw	16256
   217  007D8B  0000               	dw	0
   218  007D8D  4120               	dw	16672
   219  007D8F  0000               	dw	0
   220  007D91  42C8               	dw	17096
   221  007D93  0000               	dw	0
   222  007D95  447A               	dw	17530
   223  007D97  4000               	dw	16384
   224  007D99  461C               	dw	17948
   225  007D9B  5000               	dw	20480
   226  007D9D  47C3               	dw	18371
   227  007D9F  2400               	dw	9216
   228  007DA1  4974               	dw	18804
   229  007DA3  9680               	dw	38528
   230  007DA5  4B18               	dw	19224
   231  007DA7  BC20               	dw	48160
   232  007DA9  4CBE               	dw	19646
   233  007DAB  6B28               	dw	27432
   234  007DAD  4E6E               	dw	20078
   235  007DAF  02F9               	dw	761
   236  007DB1  5015               	dw	20501
   237  007DB3  78EC               	dw	30956
   238  007DB5  60AD               	dw	24749
   239  007DB7  F2CA               	dw	62154
   240  007DB9  7149               	dw	29001
   241  007DBB                     __end_of__powers_:
   242                           	opt stack 0
   243  007DBB                     _dpowers:
   244                           	opt stack 0
   245  007DBB  0001               	dw	1
   246  007DBD  0000               	dw	0
   247  007DBF  000A               	dw	10
   248  007DC1  0000               	dw	0
   249  007DC3  0064               	dw	100
   250  007DC5  0000               	dw	0
   251  007DC7  03E8               	dw	1000
   252  007DC9  0000               	dw	0
   253  007DCB  2710               	dw	10000
   254  007DCD  0000               	dw	0
   255  007DCF  86A0               	dw	34464
   256  007DD1  0001               	dw	1
   257  007DD3  4240               	dw	16960
   258  007DD5  000F               	dw	15
   259  007DD7  9680               	dw	38528
   260  007DD9  0098               	dw	152
   261  007DDB  E100               	dw	57600
   262  007DDD  05F5               	dw	1525
   263  007DDF  CA00               	dw	51712
   264  007DE1  3B9A               	dw	15258
   265  007DE3                     __end_of_dpowers:
   266                           	opt stack 0
   267  0000                     _ANSELAbits	set	3896
   268  0000                     _ANSELCbits	set	3898
   269  0000                     _CCPTMRS0bits	set	3913
   270  0000                     _BAUDCON1bits	set	4024
   271  0000                     _CCP2CONbits	set	3942
   272  0000                     _CCPR2L	set	3943
   273  0000                     _ECCP2ASbits	set	3940
   274  0000                     _EEADR	set	4009
   275  0000                     _EECON1bits	set	4006
   276  0000                     _EECON2	set	4007
   277  0000                     _EEDATA	set	4008
   278  0000                     _INTCONbits	set	4082
   279  0000                     _IPR1bits	set	3999
   280  0000                     _LATBbits	set	3978
   281  0000                     _LATCbits	set	3979
   282  0000                     _OSCCON2bits	set	4050
   283  0000                     _OSCCONbits	set	4051
   284  0000                     _OSCTUNEbits	set	3995
   285  0000                     _PIE1bits	set	3997
   286  0000                     _PIR1bits	set	3998
   287  0000                     _PORTAbits	set	3968
   288  0000                     _PORTBbits	set	3969
   289  0000                     _PR2	set	4027
   290  0000                     _PSTR2CONbits	set	3939
   291  0000                     _PWM2CONbits	set	3941
   292  0000                     _RCONbits	set	4048
   293  0000                     _RCREG1	set	4014
   294  0000                     _RCSTA1bits	set	4011
   295  0000                     _SPBRG1	set	4015
   296  0000                     _SPBRGH1	set	4016
   297  0000                     _T2CONbits	set	4026
   298  0000                     _TRISAbits	set	3986
   299  0000                     _TRISBbits	set	3987
   300  0000                     _TRISCbits	set	3988
   301  0000                     _TXREG1	set	4013
   302  0000                     _TXSTA1bits	set	4012
   303  0000                     _WDTCONbits	set	4049
   304  007DE3                     STR_35:
   305  007DE3  20                 	db	32
   306  007DE4  20                 	db	32
   307  007DE5  20                 	db	32
   308  007DE6  20                 	db	32
   309  007DE7  25                 	db	37
   310  007DE8  63                 	db	99	;'c'
   311  007DE9  25                 	db	37
   312  007DEA  75                 	db	117	;'u'
   313  007DEB  25                 	db	37
   314  007DEC  63                 	db	99	;'c'
   315  007DED  25                 	db	37
   316  007DEE  75                 	db	117	;'u'
   317  007DEF  25                 	db	37
   318  007DF0  63                 	db	99	;'c'
   319  007DF1  25                 	db	37
   320  007DF2  75                 	db	117	;'u'
   321  007DF3  25                 	db	37
   322  007DF4  63                 	db	99	;'c'
   323  007DF5  25                 	db	37
   324  007DF6  75                 	db	117	;'u'
   325  007DF7  20                 	db	32
   326  007DF8  20                 	db	32
   327  007DF9  20                 	db	32
   328  007DFA  20                 	db	32
   329  007DFB  00                 	db	0
   330  007DFC                     STR_21:
   331  007DFC  20                 	db	32
   332  007DFD  25                 	db	37
   333  007DFE  63                 	db	99	;'c'
   334  007DFF  6B                 	db	107	;'k'
   335  007E00  67                 	db	103	;'g'
   336  007E01  20                 	db	32
   337  007E02  20                 	db	32
   338  007E03  25                 	db	37
   339  007E04  63                 	db	99	;'c'
   340  007E05  6D                 	db	109	;'m'
   341  007E06  33                 	db	51	;'3'
   342  007E07  20                 	db	32
   343  007E08  20                 	db	32
   344  007E09  25                 	db	37
   345  007E0A  63                 	db	99	;'c'
   346  007E0B  73                 	db	115	;'s'
   347  007E0C  65                 	db	101	;'e'
   348  007E0D  63                 	db	99	;'c'
   349  007E0E  20                 	db	32
   350  007E0F  00                 	db	0
   351  007E10                     STR_45:
   352  007E10  20                 	db	32
   353  007E11  20                 	db	32
   354  007E12  20                 	db	32
   355  007E13  25                 	db	37
   356  007E14  63                 	db	99	;'c'
   357  007E15  53                 	db	83	;'S'
   358  007E16  49                 	db	73	;'I'
   359  007E17  20                 	db	32
   360  007E18  20                 	db	32
   361  007E19  20                 	db	32
   362  007E1A  20                 	db	32
   363  007E1B  25                 	db	37
   364  007E1C  63                 	db	99	;'c'
   365  007E1D  4E                 	db	78	;'N'
   366  007E1E  4F                 	db	79	;'O'
   367  007E1F  20                 	db	32
   368  007E20  20                 	db	32
   369  007E21  20                 	db	32
   370  007E22  00                 	db	0
   371  007E23                     STR_36:
   372  007E23  43                 	db	67	;'C'
   373  007E24  6F                 	db	111	;'o'
   374  007E25  6E                 	db	110	;'n'
   375  007E26  74                 	db	116	;'t'
   376  007E27  72                 	db	114	;'r'
   377  007E28  61                 	db	97	;'a'
   378  007E29  73                 	db	115	;'s'
   379  007E2A  65                 	db	101	;'e'
   380  007E2B  6E                 	db	110	;'n'
   381  007E2C  61                 	db	97	;'a'
   382  007E2D  20                 	db	32
   383  007E2E  20                 	db	32
   384  007E2F  20                 	db	32
   385  007E30  20                 	db	32
   386  007E31  20                 	db	32
   387  007E32  20                 	db	32
   388  007E33  0A                 	db	10
   389  007E34  00                 	db	0
   390  007E35                     STR_34:
   391  007E35  43                 	db	67	;'C'
   392  007E36  6F                 	db	111	;'o'
   393  007E37  6E                 	db	110	;'n'
   394  007E38  74                 	db	116	;'t'
   395  007E39  72                 	db	114	;'r'
   396  007E3A  61                 	db	97	;'a'
   397  007E3B  73                 	db	115	;'s'
   398  007E3C  65                 	db	101	;'e'
   399  007E3D  6E                 	db	110	;'n'
   400  007E3E  61                 	db	97	;'a'
   401  007E3F  3A                 	db	58	;':'
   402  007E40  20                 	db	32
   403  007E41  20                 	db	32
   404  007E42  20                 	db	32
   405  007E43  20                 	db	32
   406  007E44  20                 	db	32
   407  007E45  0A                 	db	10
   408  007E46  00                 	db	0
   409  007E47                     STR_4:
   410  007E47  50                 	db	80	;'P'
   411  007E48  72                 	db	114	;'r'
   412  007E49  6F                 	db	111	;'o'
   413  007E4A  63                 	db	99	;'c'
   414  007E4B  65                 	db	101	;'e'
   415  007E4C  73                 	db	115	;'s'
   416  007E4D  6F                 	db	111	;'o'
   417  007E4E  20                 	db	32
   418  007E4F  65                 	db	101	;'e'
   419  007E50  6E                 	db	110	;'n'
   420  007E51  3A                 	db	58	;':'
   421  007E52  20                 	db	32
   422  007E53  20                 	db	32
   423  007E54  20                 	db	32
   424  007E55  20                 	db	32
   425  007E56  20                 	db	32
   426  007E57  0A                 	db	10
   427  007E58  00                 	db	0
   428  007E59                     STR_16:
   429  007E59  44                 	db	68	;'D'
   430  007E5A  65                 	db	101	;'e'
   431  007E5B  6E                 	db	110	;'n'
   432  007E5C  73                 	db	115	;'s'
   433  007E5D  69                 	db	105	;'i'
   434  007E5E  64                 	db	100	;'d'
   435  007E5F  61                 	db	97	;'a'
   436  007E60  64                 	db	100	;'d'
   437  007E61  20                 	db	32
   438  007E62  4D                 	db	77	;'M'
   439  007E63  61                 	db	97	;'a'
   440  007E64  73                 	db	115	;'s'
   441  007E65  61                 	db	97	;'a'
   442  007E66  3A                 	db	58	;':'
   443  007E67  20                 	db	32
   444  007E68  20                 	db	32
   445  007E69  0A                 	db	10
   446  007E6A  00                 	db	0
   447  007E6B                     STR_14:
   448  007E6B  44                 	db	68	;'D'
   449  007E6C  69                 	db	105	;'i'
   450  007E6D  61                 	db	97	;'a'
   451  007E6E  6D                 	db	109	;'m'
   452  007E6F  65                 	db	101	;'e'
   453  007E70  74                 	db	116	;'t'
   454  007E71  72                 	db	114	;'r'
   455  007E72  6F                 	db	111	;'o'
   456  007E73  20                 	db	32
   457  007E74  54                 	db	84	;'T'
   458  007E75  75                 	db	117	;'u'
   459  007E76  62                 	db	98	;'b'
   460  007E77  6F                 	db	111	;'o'
   461  007E78  3A                 	db	58	;':'
   462  007E79  20                 	db	32
   463  007E7A  20                 	db	32
   464  007E7B  0A                 	db	10
   465  007E7C  00                 	db	0
   466  007E7D                     STR_18:
   467  007E7D  56                 	db	86	;'V'
   468  007E7E  65                 	db	101	;'e'
   469  007E7F  6C                 	db	108	;'l'
   470  007E80  6F                 	db	111	;'o'
   471  007E81  63                 	db	99	;'c'
   472  007E82  69                 	db	105	;'i'
   473  007E83  64                 	db	100	;'d'
   474  007E84  61                 	db	97	;'a'
   475  007E85  64                 	db	100	;'d'
   476  007E86  20                 	db	32
   477  007E87  4D                 	db	77	;'M'
   478  007E88  61                 	db	97	;'a'
   479  007E89  73                 	db	115	;'s'
   480  007E8A  61                 	db	97	;'a'
   481  007E8B  3A                 	db	58	;':'
   482  007E8C  20                 	db	32
   483  007E8D  0A                 	db	10
   484  007E8E  00                 	db	0
   485  007E8F                     STR_1:
   486  007E8F  45                 	db	69	;'E'
   487  007E90  73                 	db	115	;'s'
   488  007E91  74                 	db	116	;'t'
   489  007E92  61                 	db	97	;'a'
   490  007E93  64                 	db	100	;'d'
   491  007E94  6F                 	db	111	;'o'
   492  007E95  20                 	db	32
   493  007E96  70                 	db	112	;'p'
   494  007E97  72                 	db	114	;'r'
   495  007E98  6F                 	db	111	;'o'
   496  007E99  63                 	db	99	;'c'
   497  007E9A  65                 	db	101	;'e'
   498  007E9B  73                 	db	115	;'s'
   499  007E9C  6F                 	db	111	;'o'
   500  007E9D  3A                 	db	58	;':'
   501  007E9E  20                 	db	32
   502  007E9F  0A                 	db	10
   503  007EA0  00                 	db	0
   504  007EA1                     STR_44:
   505  007EA1  47                 	db	71	;'G'
   506  007EA2  75                 	db	117	;'u'
   507  007EA3  61                 	db	97	;'a'
   508  007EA4  72                 	db	114	;'r'
   509  007EA5  64                 	db	100	;'d'
   510  007EA6  61                 	db	97	;'a'
   511  007EA7  72                 	db	114	;'r'
   512  007EA8  20                 	db	32
   513  007EA9  43                 	db	67	;'C'
   514  007EAA  61                 	db	97	;'a'
   515  007EAB  6D                 	db	109	;'m'
   516  007EAC  62                 	db	98	;'b'
   517  007EAD  69                 	db	105	;'i'
   518  007EAE  6F                 	db	111	;'o'
   519  007EAF  3F                 	db	63	;'?'
   520  007EB0  20                 	db	32
   521  007EB1  0A                 	db	10
   522  007EB2  00                 	db	0
   523  007EB3                     STR_8:
   524  007EB3  56                 	db	86	;'V'
   525  007EB4  61                 	db	97	;'a'
   526  007EB5  6C                 	db	108	;'l'
   527  007EB6  6F                 	db	111	;'o'
   528  007EB7  72                 	db	114	;'r'
   529  007EB8  20                 	db	32
   530  007EB9  70                 	db	112	;'p'
   531  007EBA  6F                 	db	111	;'o'
   532  007EBB  72                 	db	114	;'r'
   533  007EBC  20                 	db	32
   534  007EBD  43                 	db	67	;'C'
   535  007EBE  6F                 	db	111	;'o'
   536  007EBF  72                 	db	114	;'r'
   537  007EC0  74                 	db	116	;'t'
   538  007EC1  65                 	db	101	;'e'
   539  007EC2  3A                 	db	58	;':'
   540  007EC3  0A                 	db	10
   541  007EC4  00                 	db	0
   542  007EC5                     STR_38:
   543  007EC5  4D                 	db	77	;'M'
   544  007EC6  6F                 	db	111	;'o'
   545  007EC7  64                 	db	100	;'d'
   546  007EC8  6F                 	db	111	;'o'
   547  007EC9  20                 	db	32
   548  007ECA  43                 	db	67	;'C'
   549  007ECB  6F                 	db	111	;'o'
   550  007ECC  6E                 	db	110	;'n'
   551  007ECD  66                 	db	102	;'f'
   552  007ECE  69                 	db	105	;'i'
   553  007ECF  67                 	db	103	;'g'
   554  007ED0  75                 	db	117	;'u'
   555  007ED1  72                 	db	114	;'r'
   556  007ED2  61                 	db	97	;'a'
   557  007ED3  72                 	db	114	;'r'
   558  007ED4  3A                 	db	58	;':'
   559  007ED5  0A                 	db	10
   560  007ED6  00                 	db	0
   561  007ED7                     STR_12:
   562  007ED7  43                 	db	67	;'C'
   563  007ED8  61                 	db	97	;'a'
   564  007ED9  6E                 	db	110	;'n'
   565  007EDA  74                 	db	116	;'t'
   566  007EDB  69                 	db	105	;'i'
   567  007EDC  64                 	db	100	;'d'
   568  007EDD  61                 	db	97	;'a'
   569  007EDE  64                 	db	100	;'d'
   570  007EDF  20                 	db	32
   571  007EE0  43                 	db	67	;'C'
   572  007EE1  6F                 	db	111	;'o'
   573  007EE2  72                 	db	114	;'r'
   574  007EE3  74                 	db	116	;'t'
   575  007EE4  65                 	db	101	;'e'
   576  007EE5  73                 	db	115	;'s'
   577  007EE6  3A                 	db	58	;':'
   578  007EE7  0A                 	db	10
   579  007EE8  00                 	db	0
   580  007EE9                     STR_42:
   581  007EE9  49                 	db	73	;'I'
   582  007EEA  6E                 	db	110	;'n'
   583  007EEB  69                 	db	105	;'i'
   584  007EEC  63                 	db	99	;'c'
   585  007EED  69                 	db	105	;'i'
   586  007EEE  61                 	db	97	;'a'
   587  007EEF  72                 	db	114	;'r'
   588  007EF0  20                 	db	32
   589  007EF1  50                 	db	80	;'P'
   590  007EF2  72                 	db	114	;'r'
   591  007EF3  6F                 	db	111	;'o'
   592  007EF4  63                 	db	99	;'c'
   593  007EF5  65                 	db	101	;'e'
   594  007EF6  73                 	db	115	;'s'
   595  007EF7  6F                 	db	111	;'o'
   596  007EF8  3F                 	db	63	;'?'
   597  007EF9  0A                 	db	10
   598  007EFA  00                 	db	0
   599  007EFB                     STR_43:
   600  007EFB  44                 	db	68	;'D'
   601  007EFC  65                 	db	101	;'e'
   602  007EFD  74                 	db	116	;'t'
   603  007EFE  65                 	db	101	;'e'
   604  007EFF  6E                 	db	110	;'n'
   605  007F00  65                 	db	101	;'e'
   606  007F01  72                 	db	114	;'r'
   607  007F02  20                 	db	32
   608  007F03  50                 	db	80	;'P'
   609  007F04  72                 	db	114	;'r'
   610  007F05  6F                 	db	111	;'o'
   611  007F06  63                 	db	99	;'c'
   612  007F07  65                 	db	101	;'e'
   613  007F08  73                 	db	115	;'s'
   614  007F09  6F                 	db	111	;'o'
   615  007F0A  3F                 	db	63	;'?'
   616  007F0B  0A                 	db	10
   617  007F0C  00                 	db	0
   618  007F0D                     STR_5:
   619  007F0D  20                 	db	32
   620  007F0E  20                 	db	32
   621  007F0F  20                 	db	32
   622  007F10  20                 	db	32
   623  007F11  20                 	db	32
   624  007F12  20                 	db	32
   625  007F13  20                 	db	32
   626  007F14  6B                 	db	107	;'k'
   627  007F15  67                 	db	103	;'g'
   628  007F16  20                 	db	32
   629  007F17  20                 	db	32
   630  007F18  20                 	db	32
   631  007F19  20                 	db	32
   632  007F1A  20                 	db	32
   633  007F1B  20                 	db	32
   634  007F1C  20                 	db	32
   635  007F1D  20                 	db	32
   636  007F1E  00                 	db	0
   637  007F1F                     STR_6:
   638  007F1F  20                 	db	32
   639  007F20  20                 	db	32
   640  007F21  20                 	db	32
   641  007F22  20                 	db	32
   642  007F23  20                 	db	32
   643  007F24  20                 	db	32
   644  007F25  20                 	db	32
   645  007F26  6D                 	db	109	;'m'
   646  007F27  33                 	db	51	;'3'
   647  007F28  20                 	db	32
   648  007F29  20                 	db	32
   649  007F2A  20                 	db	32
   650  007F2B  20                 	db	32
   651  007F2C  20                 	db	32
   652  007F2D  20                 	db	32
   653  007F2E  20                 	db	32
   654  007F2F  00                 	db	0
   655  007F30                     STR_7:
   656  007F30  20                 	db	32
   657  007F31  20                 	db	32
   658  007F32  20                 	db	32
   659  007F33  20                 	db	32
   660  007F34  20                 	db	32
   661  007F35  20                 	db	32
   662  007F36  73                 	db	115	;'s'
   663  007F37  65                 	db	101	;'e'
   664  007F38  63                 	db	99	;'c'
   665  007F39  20                 	db	32
   666  007F3A  20                 	db	32
   667  007F3B  20                 	db	32
   668  007F3C  20                 	db	32
   669  007F3D  20                 	db	32
   670  007F3E  20                 	db	32
   671  007F3F  20                 	db	32
   672  007F40  00                 	db	0
   673  007F41                     STR_37:
   674  007F41  20                 	db	32
   675  007F42  20                 	db	32
   676  007F43  20                 	db	32
   677  007F44  20                 	db	32
   678  007F45  20                 	db	32
   679  007F46  45                 	db	69	;'E'
   680  007F47  72                 	db	114	;'r'
   681  007F48  72                 	db	114	;'r'
   682  007F49  6F                 	db	111	;'o'
   683  007F4A  6E                 	db	110	;'n'
   684  007F4B  65                 	db	101	;'e'
   685  007F4C  61                 	db	97	;'a'
   686  007F4D  20                 	db	32
   687  007F4E  20                 	db	32
   688  007F4F  20                 	db	32
   689  007F50  20                 	db	32
   690  007F51  00                 	db	0
   691  007F52                     STR_39:
   692  007F52  20                 	db	32
   693  007F53  20                 	db	32
   694  007F54  20                 	db	32
   695  007F55  20                 	db	32
   696  007F56  49                 	db	73	;'I'
   697  007F57  6E                 	db	110	;'n'
   698  007F58  69                 	db	105	;'i'
   699  007F59  63                 	db	99	;'c'
   700  007F5A  69                 	db	105	;'i'
   701  007F5B  61                 	db	97	;'a'
   702  007F5C  64                 	db	100	;'d'
   703  007F5D  6F                 	db	111	;'o'
   704  007F5E  20                 	db	32
   705  007F5F  20                 	db	32
   706  007F60  20                 	db	32
   707  007F61  20                 	db	32
   708  007F62  00                 	db	0
   709  007F63                     STR_3:
   710  007F63  20                 	db	32
   711  007F64  20                 	db	32
   712  007F65  20                 	db	32
   713  007F66  20                 	db	32
   714  007F67  44                 	db	68	;'D'
   715  007F68  65                 	db	101	;'e'
   716  007F69  74                 	db	116	;'t'
   717  007F6A  65                 	db	101	;'e'
   718  007F6B  6E                 	db	110	;'n'
   719  007F6C  69                 	db	105	;'i'
   720  007F6D  64                 	db	100	;'d'
   721  007F6E  6F                 	db	111	;'o'
   722  007F6F  20                 	db	32
   723  007F70  20                 	db	32
   724  007F71  20                 	db	32
   725  007F72  20                 	db	32
   726  007F73  00                 	db	0
   727  007F74                     STR_41:
   728  007F74  20                 	db	32
   729  007F75  20                 	db	32
   730  007F76  20                 	db	32
   731  007F77  46                 	db	70	;'F'
   732  007F78  69                 	db	105	;'i'
   733  007F79  6E                 	db	110	;'n'
   734  007F7A  61                 	db	97	;'a'
   735  007F7B  6C                 	db	108	;'l'
   736  007F7C  69                 	db	105	;'i'
   737  007F7D  7A                 	db	122	;'z'
   738  007F7E  61                 	db	97	;'a'
   739  007F7F  64                 	db	100	;'d'
   740  007F80  6F                 	db	111	;'o'
   741  007F81  20                 	db	32
   742  007F82  20                 	db	32
   743  007F83  20                 	db	32
   744  007F84  00                 	db	0
   745  007F85                     STR_13:
   746  007F85  20                 	db	32
   747  007F86  20                 	db	32
   748  007F87  20                 	db	32
   749  007F88  20                 	db	32
   750  007F89  20                 	db	32
   751  007F8A  20                 	db	32
   752  007F8B  25                 	db	37
   753  007F8C  64                 	db	100	;'d'
   754  007F8D  20                 	db	32
   755  007F8E  20                 	db	32
   756  007F8F  20                 	db	32
   757  007F90  20                 	db	32
   758  007F91  20                 	db	32
   759  007F92  20                 	db	32
   760  007F93  20                 	db	32
   761  007F94  00                 	db	0
   762  007F95                     STR_2:
   763  007F95  20                 	db	32
   764  007F96  20                 	db	32
   765  007F97  20                 	db	32
   766  007F98  25                 	db	37
   767  007F99  64                 	db	100	;'d'
   768  007F9A  20                 	db	32
   769  007F9B  2F                 	db	47
   770  007F9C  20                 	db	32
   771  007F9D  25                 	db	37
   772  007F9E  64                 	db	100	;'d'
   773  007F9F  20                 	db	32
   774  007FA0  20                 	db	32
   775  007FA1  20                 	db	32
   776  007FA2  20                 	db	32
   777  007FA3  00                 	db	0
   778  007FA4                     STR_10:
   779  007FA4  20                 	db	32
   780  007FA5  20                 	db	32
   781  007FA6  20                 	db	32
   782  007FA7  25                 	db	37
   783  007FA8  33                 	db	51	;'3'
   784  007FA9  2E                 	db	46
   785  007FAA  33                 	db	51	;'3'
   786  007FAB  66                 	db	102	;'f'
   787  007FAC  20                 	db	32
   788  007FAD  6D                 	db	109	;'m'
   789  007FAE  33                 	db	51	;'3'
   790  007FAF  20                 	db	32
   791  007FB0  20                 	db	32
   792  007FB1  20                 	db	32
   793  007FB2  00                 	db	0
   794  007FB3                     STR_9:
   795  007FB3  20                 	db	32
   796  007FB4  20                 	db	32
   797  007FB5  20                 	db	32
   798  007FB6  25                 	db	37
   799  007FB7  33                 	db	51	;'3'
   800  007FB8  2E                 	db	46
   801  007FB9  33                 	db	51	;'3'
   802  007FBA  66                 	db	102	;'f'
   803  007FBB  20                 	db	32
   804  007FBC  6B                 	db	107	;'k'
   805  007FBD  67                 	db	103	;'g'
   806  007FBE  20                 	db	32
   807  007FBF  20                 	db	32
   808  007FC0  20                 	db	32
   809  007FC1  00                 	db	0
   810  007FC2                     STR_15:
   811  007FC2  20                 	db	32
   812  007FC3  20                 	db	32
   813  007FC4  20                 	db	32
   814  007FC5  25                 	db	37
   815  007FC6  33                 	db	51	;'3'
   816  007FC7  2E                 	db	46
   817  007FC8  33                 	db	51	;'3'
   818  007FC9  66                 	db	102	;'f'
   819  007FCA  20                 	db	32
   820  007FCB  6D                 	db	109	;'m'
   821  007FCC  6D                 	db	109	;'m'
   822  007FCD  20                 	db	32
   823  007FCE  20                 	db	32
   824  007FCF  20                 	db	32
   825  007FD0  00                 	db	0
   826  007FD1                     STR_11:
   827  007FD1  20                 	db	32
   828  007FD2  20                 	db	32
   829  007FD3  20                 	db	32
   830  007FD4  25                 	db	37
   831  007FD5  33                 	db	51	;'3'
   832  007FD6  2E                 	db	46
   833  007FD7  33                 	db	51	;'3'
   834  007FD8  66                 	db	102	;'f'
   835  007FD9  20                 	db	32
   836  007FDA  73                 	db	115	;'s'
   837  007FDB  65                 	db	101	;'e'
   838  007FDC  63                 	db	99	;'c'
   839  007FDD  20                 	db	32
   840  007FDE  20                 	db	32
   841  007FDF  00                 	db	0
   842  007FE0                     STR_19:
   843  007FE0  20                 	db	32
   844  007FE1  20                 	db	32
   845  007FE2  20                 	db	32
   846  007FE3  25                 	db	37
   847  007FE4  33                 	db	51	;'3'
   848  007FE5  2E                 	db	46
   849  007FE6  33                 	db	51	;'3'
   850  007FE7  66                 	db	102	;'f'
   851  007FE8  20                 	db	32
   852  007FE9  6D                 	db	109	;'m'
   853  007FEA  2F                 	db	47
   854  007FEB  73                 	db	115	;'s'
   855  007FEC  20                 	db	32
   856  007FED  20                 	db	32
   857  007FEE  00                 	db	0
   858  007FEF                     STR_17:
   859  007FEF  20                 	db	32
   860  007FF0  20                 	db	32
   861  007FF1  25                 	db	37
   862  007FF2  33                 	db	51	;'3'
   863  007FF3  2E                 	db	46
   864  007FF4  33                 	db	51	;'3'
   865  007FF5  66                 	db	102	;'f'
   866  007FF6  20                 	db	32
   867  007FF7  6B                 	db	107	;'k'
   868  007FF8  67                 	db	103	;'g'
   869  007FF9  2F                 	db	47
   870  007FFA  6D                 	db	109	;'m'
   871  007FFB  33                 	db	51	;'3'
   872  007FFC  20                 	db	32
   873  007FFD  00                 	db	0
   874  0000                     
   875                           ; #config settings
   876  007FFE  00                 	db	0	; dummy byte at the end
   877  0000                     
   878                           	psect	cinit
   879  0047DE                     __pcinit:
   880                           	opt stack 0
   881  0047DE                     start_initialization:
   882                           	opt stack 0
   883  0047DE                     __initialization:
   884                           	opt stack 0
   885                           
   886                           ; Initialize objects allocated to BANK1 (18 bytes)
   887                           ; load TBLPTR registers with __pidataBANK1
   888  0047DE  0EB0               	movlw	low __pidataBANK1
   889  0047E0  6EF6               	movwf	tblptrl,c
   890  0047E2  0E51               	movlw	high __pidataBANK1
   891  0047E4  6EF7               	movwf	tblptrh,c
   892  0047E6  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   893  0047E8  6EF8               	movwf	tblptru,c
   894  0047EA  EE01  F04B         	lfsr	0,__pdataBANK1
   895  0047EE  EE10 F012          	lfsr	1,18
   896  0047F2                     copy_data0:
   897  0047F2  0009               	tblrd		*+
   898  0047F4  CFF5 FFEE          	movff	tablat,postinc0
   899  0047F8  50E5               	movf	postdec1,w,c
   900  0047FA  50E1               	movf	fsr1l,w,c
   901  0047FC  E1FA               	bnz	copy_data0
   902                           
   903                           ; Initialize objects allocated to BANK0 (11 bytes)
   904                           ; load TBLPTR registers with __pidataBANK0
   905  0047FE  0E28               	movlw	low __pidataBANK0
   906  004800  6EF6               	movwf	tblptrl,c
   907  004802  0E52               	movlw	high __pidataBANK0
   908  004804  6EF7               	movwf	tblptrh,c
   909  004806  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   910  004808  6EF8               	movwf	tblptru,c
   911  00480A  EE00  F0D9         	lfsr	0,__pdataBANK0
   912  00480E  EE10 F00B          	lfsr	1,11
   913  004812                     copy_data1:
   914  004812  0009               	tblrd		*+
   915  004814  CFF5 FFEE          	movff	tablat,postinc0
   916  004818  50E5               	movf	postdec1,w,c
   917  00481A  50E1               	movf	fsr1l,w,c
   918  00481C  E1FA               	bnz	copy_data1
   919                           
   920                           ; Initialize objects allocated to COMRAM (20 bytes)
   921                           ; load TBLPTR registers with __pidataCOMRAM
   922  00481E  0E88               	movlw	low __pidataCOMRAM
   923  004820  6EF6               	movwf	tblptrl,c
   924  004822  0E51               	movlw	high __pidataCOMRAM
   925  004824  6EF7               	movwf	tblptrh,c
   926  004826  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   927  004828  6EF8               	movwf	tblptru,c
   928  00482A  EE00  F02F         	lfsr	0,__pdataCOMRAM
   929  00482E  EE10 F014          	lfsr	1,20
   930  004832                     copy_data2:
   931  004832  0009               	tblrd		*+
   932  004834  CFF5 FFEE          	movff	tablat,postinc0
   933  004838  50E5               	movf	postdec1,w,c
   934  00483A  50E1               	movf	fsr1l,w,c
   935  00483C  E1FA               	bnz	copy_data2
   936                           
   937                           ; Clear objects allocated to BANK1 (26 bytes)
   938  00483E  EE01  F031         	lfsr	0,__pbssBANK1
   939  004842  0E1A               	movlw	26
   940  004844                     clear_0:
   941  004844  6AEE               	clrf	postinc0,c
   942  004846  06E8               	decf	wreg,f,c
   943  004848  E1FD               	bnz	clear_0
   944                           
   945                           ; Clear objects allocated to BANK0 (13 bytes)
   946  00484A  EE00  F0CC         	lfsr	0,__pbssBANK0
   947  00484E  0E0D               	movlw	13
   948  004850                     clear_1:
   949  004850  6AEE               	clrf	postinc0,c
   950  004852  06E8               	decf	wreg,f,c
   951  004854  E1FD               	bnz	clear_1
   952                           
   953                           ; Clear objects allocated to COMRAM (7 bytes)
   954  004856  EE00  F043         	lfsr	0,__pbssCOMRAM
   955  00485A  0E07               	movlw	7
   956  00485C                     clear_2:
   957  00485C  6AEE               	clrf	postinc0,c
   958  00485E  06E8               	decf	wreg,f,c
   959  004860  E1FD               	bnz	clear_2
   960  004862                     end_of_initialization:
   961                           	opt stack 0
   962  004862                     __end_of__initialization:
   963                           	opt stack 0
   964  004862  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   965  004864  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   966  004866  0E00               	movlw	low (__Lmediumconst shr (0+16))
   967  004868  6EF8               	movwf	tblptru,c
   968  00486A  0100               	movlb	0
   969  00486C  EF45  F028         	goto	_main	;jump to C main() function
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           postinc0	equ	0xFEE
   975                           wreg	equ	0xFE8
   976                           postdec1	equ	0xFE5
   977                           fsr1l	equ	0xFE1
   978                           
   979                           	psect	bssCOMRAM
   980  000043                     __pbssCOMRAM:
   981                           	opt stack 0
   982  000043                     _i16Data:
   983                           	opt stack 0
   984  000043                     	ds	2
   985  000045                     _DOWNisLP:
   986                           	opt stack 0
   987  000045                     	ds	1
   988  000046                     _UPisLP:
   989                           	opt stack 0
   990  000046                     	ds	1
   991  000047                     _holdDOWNcont:
   992                           	opt stack 0
   993  000047                     	ds	1
   994  000048                     _holdRETROcont:
   995                           	opt stack 0
   996  000048                     	ds	1
   997  000049                     _ie:
   998                           	opt stack 0
   999  000049                     	ds	1
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           
  1009                           	psect	dataCOMRAM
  1010  00002F                     __pdataCOMRAM:
  1011                           	opt stack 0
  1012  00002F                     _kgXcorte:
  1013                           	opt stack 0
  1014  00002F                     	ds	4
  1015  000033                     _m3Xcorte:
  1016                           	opt stack 0
  1017  000033                     	ds	4
  1018  000037                     _tiXcorte:
  1019                           	opt stack 0
  1020  000037                     	ds	4
  1021  00003B                     _velocidadMasa:
  1022                           	opt stack 0
  1023  00003B                     	ds	4
  1024  00003F                     _lastSttDOWN:
  1025                           	opt stack 0
  1026  00003F                     	ds	1
  1027  000040                     _lastSttENTER:
  1028                           	opt stack 0
  1029  000040                     	ds	1
  1030  000041                     _lastSttRETRO:
  1031                           	opt stack 0
  1032  000041                     	ds	1
  1033  000042                     _lastSttUP:
  1034                           	opt stack 0
  1035  000042                     	ds	1
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           
  1045                           	psect	bssBANK0
  1046  0000CC                     __pbssBANK0:
  1047                           	opt stack 0
  1048  0000CC                     _fData:
  1049                           	opt stack 0
  1050  0000CC                     	ds	4
  1051  0000D0                     _ProcessStarted:
  1052                           	opt stack 0
  1053  0000D0                     	ds	1
  1054  0000D1                     _actualScreen:
  1055                           	opt stack 0
  1056  0000D1                     	ds	1
  1057  0000D2                     _holdENTERcont:
  1058                           	opt stack 0
  1059  0000D2                     	ds	1
  1060  0000D3                     _holdUPcont:
  1061                           	opt stack 0
  1062  0000D3                     	ds	1
  1063  0000D4                     _menuSection:
  1064                           	opt stack 0
  1065  0000D4                     	ds	1
  1066  0000D5                     _passSection:
  1067                           	opt stack 0
  1068  0000D5                     	ds	1
  1069  0000D6                     _selKMT:
  1070                           	opt stack 0
  1071  0000D6                     	ds	1
  1072  0000D7                     _selSN:
  1073                           	opt stack 0
  1074  0000D7                     	ds	1
  1075  0000D8                     _tempLastScreen:
  1076                           	opt stack 0
  1077  0000D8                     	ds	1
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1l	equ	0xFE1
  1086                           
  1087                           	psect	dataBANK0
  1088  0000D9                     __pdataBANK0:
  1089                           	opt stack 0
  1090  0000D9                     _densidadMasa:
  1091                           	opt stack 0
  1092  0000D9                     	ds	4
  1093  0000DD                     _diamTubo:
  1094                           	opt stack 0
  1095  0000DD                     	ds	4
  1096  0000E1                     _numCortes:
  1097                           	opt stack 0
  1098  0000E1                     	ds	2
  1099  0000E3                     _tVarProceso:
  1100                           	opt stack 0
  1101  0000E3                     	ds	1
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	bssBANK1
  1112  000131                     __pbssBANK1:
  1113                           	opt stack 0
  1114  000131                     _calFactor:
  1115                           	opt stack 0
  1116  000131                     	ds	4
  1117  000135                     _introducido:
  1118                           	opt stack 0
  1119  000135                     	ds	4
  1120  000139                     _passChar:
  1121                           	opt stack 0
  1122  000139                     	ds	4
  1123  00013D                     _questKMT:
  1124                           	opt stack 0
  1125  00013D                     	ds	3
  1126  000140                     _proceso:
  1127                           	opt stack 0
  1128  000140                     	ds	2
  1129  000142                     _questSN:
  1130                           	opt stack 0
  1131  000142                     	ds	2
  1132  000144                     _DOWNsecurLock:
  1133                           	opt stack 0
  1134  000144                     	ds	1
  1135  000145                     _ENTERisLP:
  1136                           	opt stack 0
  1137  000145                     	ds	1
  1138  000146                     _ENTERsecurLock:
  1139                           	opt stack 0
  1140  000146                     	ds	1
  1141  000147                     _RETROisLP:
  1142                           	opt stack 0
  1143  000147                     	ds	1
  1144  000148                     _RETROsecurLock:
  1145                           	opt stack 0
  1146  000148                     	ds	1
  1147  000149                     _UPsecurLock:
  1148                           	opt stack 0
  1149  000149                     	ds	1
  1150  00014A                     _fd:
  1151                           	opt stack 0
  1152  00014A                     	ds	1
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec1	equ	0xFE5
  1160                           fsr1l	equ	0xFE1
  1161                           
  1162                           	psect	dataBANK1
  1163  00014B                     __pdataBANK1:
  1164                           	opt stack 0
  1165  00014B                     _contra:
  1166                           	opt stack 0
  1167  00014B                     	ds	4
  1168  00014F                     _pi:
  1169                           	opt stack 0
  1170  00014F                     	ds	4
  1171  000153                     _tempkgXcorte:
  1172                           	opt stack 0
  1173  000153                     	ds	4
  1174  000157                     lcd_init@F7567:
  1175                           	opt stack 0
  1176  000157                     	ds	4
  1177  00015B                     _tempNumCortes:
  1178                           	opt stack 0
  1179  00015B                     	ds	2
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           
  1189                           	psect	cstackBANK1
  1190  000100                     __pcstackBANK1:
  1191                           	opt stack 0
  1192  000100                     ?_printf:
  1193                           	opt stack 0
  1194  000100                     printf@f:
  1195                           	opt stack 0
  1196                           
  1197                           ; 2 bytes @ 0x0
  1198  000100                     	ds	18
  1199  000112                     _printf$2839:
  1200                           	opt stack 0
  1201                           
  1202                           ; 4 bytes @ 0x12
  1203  000112                     	ds	4
  1204  000116                     printf@cp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 2 bytes @ 0x16
  1208  000116                     	ds	2
  1209  000118                     printf@len:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0x18
  1213  000118                     	ds	2
  1214  00011A                     printf@ap:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x1A
  1218  00011A                     	ds	2
  1219  00011C                     printf@flag:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x1C
  1223  00011C                     	ds	2
  1224  00011E                     printf@tmpval:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x1E
  1228  00011E                     	ds	4
  1229  000122                     printf@val:
  1230                           	opt stack 0
  1231                           
  1232                           ; 4 bytes @ 0x22
  1233  000122                     	ds	4
  1234  000126                     printf@exp:
  1235                           	opt stack 0
  1236                           
  1237                           ; 2 bytes @ 0x26
  1238  000126                     	ds	2
  1239  000128                     printf@width:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x28
  1243  000128                     	ds	2
  1244  00012A                     printf@fval:
  1245                           	opt stack 0
  1246                           
  1247                           ; 4 bytes @ 0x2A
  1248  00012A                     	ds	4
  1249  00012E                     printf@prec:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x2E
  1253  00012E                     	ds	2
  1254  000130                     printf@c:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x30
  1258  000130                     	ds	1
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	cstackBANK0
  1269  000060                     __pcstackBANK0:
  1270                           	opt stack 0
  1271  000060                     i1calcSysVars@temp:
  1272                           	opt stack 0
  1273                           
  1274                           ; 4 bytes @ 0x0
  1275  000060                     	ds	4
  1276  000064                     ??_isr:
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279  000064                     	ds	17
  1280  000075                     ??_isdigit:
  1281  000075                     ??_lcd_read_4bits:
  1282  000075                     ??_checkPass:
  1283  000075                     ?___wmul:
  1284                           	opt stack 0
  1285  000075                     ?___awmod:
  1286                           	opt stack 0
  1287  000075                     ?__tdiv_to_l_:
  1288                           	opt stack 0
  1289  000075                     ?__div_to_l_:
  1290                           	opt stack 0
  1291  000075                     ?___fldiv:
  1292                           	opt stack 0
  1293  000075                     ?___flneg:
  1294                           	opt stack 0
  1295  000075                     ?___lldiv:
  1296                           	opt stack 0
  1297  000075                     ?___xxtofl:
  1298                           	opt stack 0
  1299  000075                     _lcd_send_4bits$1602:
  1300                           	opt stack 0
  1301  000075                     writeEEPROM@data:
  1302                           	opt stack 0
  1303  000075                     delay_ms@del:
  1304                           	opt stack 0
  1305  000075                     setPWM2duty@actuator:
  1306                           	opt stack 0
  1307  000075                     ___wmul@multiplier:
  1308                           	opt stack 0
  1309  000075                     ___awmod@dividend:
  1310                           	opt stack 0
  1311  000075                     __div_to_l_@f1:
  1312                           	opt stack 0
  1313  000075                     ___flge@ff1:
  1314                           	opt stack 0
  1315  000075                     ___flneg@f1:
  1316                           	opt stack 0
  1317  000075                     __tdiv_to_l_@f1:
  1318                           	opt stack 0
  1319  000075                     ___lldiv@dividend:
  1320                           	opt stack 0
  1321  000075                     ___fldiv@b:
  1322                           	opt stack 0
  1323  000075                     ___xxtofl@val:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x15
  1327  000075                     	ds	1
  1328  000076                     lcd_read_4bits@n:
  1329                           	opt stack 0
  1330  000076                     _lcd_send_4bits$1603:
  1331                           	opt stack 0
  1332  000076                     writeEEPROM@adr:
  1333                           	opt stack 0
  1334  000076                     _isdigit$2354:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x16
  1338  000076                     	ds	1
  1339  000077                     ??_delay_ms:
  1340  000077                     ??_setPWM2duty:
  1341  000077                     lcd_read_byte@low:
  1342                           	opt stack 0
  1343  000077                     _lcd_send_4bits$1604:
  1344                           	opt stack 0
  1345  000077                     isdigit@c:
  1346                           	opt stack 0
  1347  000077                     ___wmul@multiplicand:
  1348                           	opt stack 0
  1349  000077                     ___awmod@divisor:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x17
  1353  000077                     	ds	1
  1354  000078                     lcd_read_byte@high:
  1355                           	opt stack 0
  1356  000078                     _lcd_send_4bits$1605:
  1357                           	opt stack 0
  1358  000078                     delay_ms@i:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x18
  1362  000078                     	ds	1
  1363  000079                     ??___xxtofl:
  1364  000079                     lcd_send_4bits@n:
  1365                           	opt stack 0
  1366  000079                     checkPass@passOK:
  1367                           	opt stack 0
  1368  000079                     ___awmod@counter:
  1369                           	opt stack 0
  1370  000079                     setPWM2duty@act:
  1371                           	opt stack 0
  1372  000079                     ___wmul@product:
  1373                           	opt stack 0
  1374  000079                     __div_to_l_@f2:
  1375                           	opt stack 0
  1376  000079                     ___flge@ff2:
  1377                           	opt stack 0
  1378  000079                     __tdiv_to_l_@f2:
  1379                           	opt stack 0
  1380  000079                     ___lldiv@divisor:
  1381                           	opt stack 0
  1382  000079                     ___fldiv@a:
  1383                           	opt stack 0
  1384                           
  1385                           ; 4 bytes @ 0x19
  1386  000079                     	ds	1
  1387  00007A                     lcd_send_byte@n:
  1388                           	opt stack 0
  1389  00007A                     ___awmod@sign:
  1390                           	opt stack 0
  1391  00007A                     checkPass@i:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x1A
  1395  00007A                     	ds	1
  1396  00007B                     ??_lcd_send_byte:
  1397  00007B                     ?___awdiv:
  1398                           	opt stack 0
  1399  00007B                     ___awdiv@dividend:
  1400                           	opt stack 0
  1401                           
  1402                           ; 2 bytes @ 0x1B
  1403  00007B                     	ds	1
  1404  00007C                     lcd_send_byte@address:
  1405                           	opt stack 0
  1406                           
  1407                           ; 1 bytes @ 0x1C
  1408  00007C                     	ds	1
  1409  00007D                     ??__tdiv_to_l_:
  1410  00007D                     ??___fldiv:
  1411  00007D                     ??_lcd_init:
  1412  00007D                     ??___flge:
  1413  00007D                     lcd_gotoxy@fila:
  1414                           	opt stack 0
  1415  00007D                     ___xxtofl@sign:
  1416                           	opt stack 0
  1417  00007D                     ___awdiv@divisor:
  1418                           	opt stack 0
  1419  00007D                     __div_to_l_@quot:
  1420                           	opt stack 0
  1421  00007D                     ___lldiv@quotient:
  1422                           	opt stack 0
  1423                           
  1424                           ; 4 bytes @ 0x1D
  1425  00007D                     	ds	1
  1426  00007E                     lcd_gotoxy@pos:
  1427                           	opt stack 0
  1428  00007E                     ___xxtofl@exp:
  1429                           	opt stack 0
  1430  00007E                     lcd_init@LCD_INIT_STRING:
  1431                           	opt stack 0
  1432                           
  1433                           ; 4 bytes @ 0x1E
  1434  00007E                     	ds	1
  1435  00007F                     lcd_gotoxy@address:
  1436                           	opt stack 0
  1437  00007F                     ___awdiv@counter:
  1438                           	opt stack 0
  1439  00007F                     ___xxtofl@arg:
  1440                           	opt stack 0
  1441                           
  1442                           ; 4 bytes @ 0x1F
  1443  00007F                     	ds	1
  1444  000080                     ??_lcd_putc:
  1445  000080                     ___awdiv@sign:
  1446                           	opt stack 0
  1447  000080                     __tdiv_to_l_@quot:
  1448                           	opt stack 0
  1449                           
  1450                           ; 4 bytes @ 0x20
  1451  000080                     	ds	1
  1452  000081                     lcd_putc@cha:
  1453                           	opt stack 0
  1454  000081                     __div_to_l_@cntr:
  1455                           	opt stack 0
  1456  000081                     ___lldiv@counter:
  1457                           	opt stack 0
  1458  000081                     ___fldiv@sign:
  1459                           	opt stack 0
  1460  000081                     ___awdiv@quotient:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x21
  1464  000081                     	ds	1
  1465  000082                     ?___llmod:
  1466                           	opt stack 0
  1467  000082                     lcd_init@i:
  1468                           	opt stack 0
  1469  000082                     putch@val:
  1470                           	opt stack 0
  1471  000082                     __div_to_l_@exp1:
  1472                           	opt stack 0
  1473  000082                     ___llmod@dividend:
  1474                           	opt stack 0
  1475  000082                     ___fldiv@rem:
  1476                           	opt stack 0
  1477                           
  1478                           ; 4 bytes @ 0x22
  1479  000082                     	ds	1
  1480  000083                     ?___flmul:
  1481                           	opt stack 0
  1482  000083                     ___flmul@b:
  1483                           	opt stack 0
  1484                           
  1485                           ; 4 bytes @ 0x23
  1486  000083                     	ds	1
  1487  000084                     __tdiv_to_l_@cntr:
  1488                           	opt stack 0
  1489                           
  1490                           ; 1 bytes @ 0x24
  1491  000084                     	ds	1
  1492  000085                     __tdiv_to_l_@exp1:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x25
  1496  000085                     	ds	1
  1497  000086                     ___fldiv@new_exp:
  1498                           	opt stack 0
  1499  000086                     ___llmod@divisor:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x26
  1503  000086                     	ds	1
  1504  000087                     ___flmul@a:
  1505                           	opt stack 0
  1506                           
  1507                           ; 4 bytes @ 0x27
  1508  000087                     	ds	1
  1509  000088                     ___fldiv@grs:
  1510                           	opt stack 0
  1511                           
  1512                           ; 4 bytes @ 0x28
  1513  000088                     	ds	2
  1514  00008A                     ___llmod@counter:
  1515                           	opt stack 0
  1516                           
  1517                           ; 1 bytes @ 0x2A
  1518  00008A                     	ds	1
  1519  00008B                     ??___flmul:
  1520                           
  1521                           ; 1 bytes @ 0x2B
  1522  00008B                     	ds	1
  1523  00008C                     ___fldiv@bexp:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x2C
  1527  00008C                     	ds	1
  1528  00008D                     ___fldiv@aexp:
  1529                           	opt stack 0
  1530                           
  1531                           ; 1 bytes @ 0x2D
  1532  00008D                     	ds	2
  1533  00008F                     ___flmul@sign:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x2F
  1537  00008F                     	ds	1
  1538  000090                     ___flmul@aexp:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0x30
  1542  000090                     	ds	1
  1543  000091                     ___flmul@grs:
  1544                           	opt stack 0
  1545                           
  1546                           ; 4 bytes @ 0x31
  1547  000091                     	ds	4
  1548  000095                     ___flmul@bexp:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0x35
  1552  000095                     	ds	1
  1553  000096                     ___flmul@prod:
  1554                           	opt stack 0
  1555                           
  1556                           ; 4 bytes @ 0x36
  1557  000096                     	ds	4
  1558  00009A                     ___flmul@temp:
  1559                           	opt stack 0
  1560                           
  1561                           ; 2 bytes @ 0x3A
  1562  00009A                     	ds	2
  1563  00009C                     ?_fround:
  1564                           	opt stack 0
  1565  00009C                     ?_scale:
  1566                           	opt stack 0
  1567  00009C                     calcSysVars@temp:
  1568                           	opt stack 0
  1569                           
  1570                           ; 4 bytes @ 0x3C
  1571  00009C                     	ds	4
  1572  0000A0                     confirmEdition@yes:
  1573                           	opt stack 0
  1574  0000A0                     _fround$2837:
  1575                           	opt stack 0
  1576  0000A0                     _scale$2838:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x40
  1580  0000A0                     	ds	1
  1581  0000A1                     
  1582                           ; 1 bytes @ 0x41
  1583  0000A1                     	ds	3
  1584  0000A4                     scale@scl:
  1585                           	opt stack 0
  1586  0000A4                     _fround$2836:
  1587                           	opt stack 0
  1588                           
  1589                           ; 4 bytes @ 0x44
  1590  0000A4                     	ds	1
  1591  0000A5                     ?___fltol:
  1592                           	opt stack 0
  1593  0000A5                     ___fltol@f1:
  1594                           	opt stack 0
  1595                           
  1596                           ; 4 bytes @ 0x45
  1597  0000A5                     	ds	3
  1598  0000A8                     fround@prec:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x48
  1602  0000A8                     	ds	1
  1603  0000A9                     ??___fltol:
  1604  0000A9                     ?___fladd:
  1605                           	opt stack 0
  1606  0000A9                     ___fladd@b:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x49
  1610  0000A9                     	ds	4
  1611  0000AD                     ___fltol@sign1:
  1612                           	opt stack 0
  1613  0000AD                     ___fladd@a:
  1614                           	opt stack 0
  1615                           
  1616                           ; 4 bytes @ 0x4D
  1617  0000AD                     	ds	1
  1618  0000AE                     ___fltol@exp1:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x4E
  1622  0000AE                     	ds	3
  1623  0000B1                     ??___fladd:
  1624                           
  1625                           ; 1 bytes @ 0x51
  1626  0000B1                     	ds	8
  1627  0000B9                     ___fladd@signs:
  1628                           	opt stack 0
  1629                           
  1630                           ; 1 bytes @ 0x59
  1631  0000B9                     	ds	1
  1632  0000BA                     ___fladd@aexp:
  1633                           	opt stack 0
  1634                           
  1635                           ; 1 bytes @ 0x5A
  1636  0000BA                     	ds	1
  1637  0000BB                     ___fladd@bexp:
  1638                           	opt stack 0
  1639                           
  1640                           ; 1 bytes @ 0x5B
  1641  0000BB                     	ds	1
  1642  0000BC                     ___fladd@grs:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x5C
  1646  0000BC                     	ds	1
  1647  0000BD                     ?___flsub:
  1648                           	opt stack 0
  1649  0000BD                     ___flsub@b:
  1650                           	opt stack 0
  1651                           
  1652                           ; 4 bytes @ 0x5D
  1653  0000BD                     	ds	4
  1654  0000C1                     ___flsub@a:
  1655                           	opt stack 0
  1656                           
  1657                           ; 4 bytes @ 0x61
  1658  0000C1                     	ds	4
  1659  0000C5                     ??_printf:
  1660  0000C5                     
  1661                           ; 1 bytes @ 0x65
  1662  0000C5                     	ds	4
  1663  0000C9                     drawMenu@adv:
  1664                           	opt stack 0
  1665  0000C9                     drawSNquest@tq:
  1666                           	opt stack 0
  1667  0000C9                     drawChanVal@i:
  1668                           	opt stack 0
  1669  0000C9                     drawPassWord@i:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x69
  1673  0000C9                     	ds	1
  1674  0000CA                     drawSNquest@i:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x6A
  1678  0000CA                     	ds	2
  1679  0000CC                     tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           postdec1	equ	0xFE5
  1686                           fsr1l	equ	0xFE1
  1687                           
  1688                           ; 1 bytes @ 0x6C
  1689                           
  1690                           	psect	cstackCOMRAM
  1691  000001                     __pcstackCOMRAM:
  1692                           	opt stack 0
  1693  000001                     i2putchUART@val:
  1694                           	opt stack 0
  1695  000001                     i2setPWM2duty@actuator:
  1696                           	opt stack 0
  1697                           
  1698                           ; 2 bytes @ 0x0
  1699  000001                     	ds	2
  1700  000003                     ??i2_setPWM2duty:
  1701                           
  1702                           ; 1 bytes @ 0x2
  1703  000003                     	ds	2
  1704  000005                     i2setPWM2duty@act:
  1705                           	opt stack 0
  1706                           
  1707                           ; 2 bytes @ 0x4
  1708  000005                     	ds	2
  1709  000007                     ??_hp_isr:
  1710                           
  1711                           ; 1 bytes @ 0x6
  1712  000007                     	ds	14
  1713  000015                     ?i1___fldiv:
  1714                           	opt stack 0
  1715  000015                     ?i1___flmul:
  1716                           	opt stack 0
  1717  000015                     readEEPROM@adr:
  1718                           	opt stack 0
  1719  000015                     putchUART@val:
  1720                           	opt stack 0
  1721  000015                     i1writeEEPROM@data:
  1722                           	opt stack 0
  1723  000015                     i1___fldiv@b:
  1724                           	opt stack 0
  1725  000015                     i1___flmul@b:
  1726                           	opt stack 0
  1727                           
  1728                           ; 4 bytes @ 0x14
  1729  000015                     	ds	1
  1730  000016                     i1writeEEPROM@adr:
  1731                           	opt stack 0
  1732                           
  1733                           ; 1 bytes @ 0x15
  1734  000016                     	ds	3
  1735  000019                     i1___fldiv@a:
  1736                           	opt stack 0
  1737  000019                     i1___flmul@a:
  1738                           	opt stack 0
  1739                           
  1740                           ; 4 bytes @ 0x18
  1741  000019                     	ds	4
  1742  00001D                     ??i1___fldiv:
  1743  00001D                     ??i1___flmul:
  1744                           
  1745                           ; 1 bytes @ 0x1C
  1746  00001D                     	ds	4
  1747  000021                     i1___fldiv@sign:
  1748                           	opt stack 0
  1749  000021                     i1___flmul@sign:
  1750                           	opt stack 0
  1751                           
  1752                           ; 1 bytes @ 0x20
  1753  000021                     	ds	1
  1754  000022                     i1___flmul@aexp:
  1755                           	opt stack 0
  1756  000022                     i1___fldiv@rem:
  1757                           	opt stack 0
  1758                           
  1759                           ; 4 bytes @ 0x21
  1760  000022                     	ds	1
  1761  000023                     i1___flmul@grs:
  1762                           	opt stack 0
  1763                           
  1764                           ; 4 bytes @ 0x22
  1765  000023                     	ds	3
  1766  000026                     i1___fldiv@new_exp:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x25
  1770  000026                     	ds	1
  1771  000027                     i1___flmul@bexp:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x26
  1775  000027                     	ds	1
  1776  000028                     i1___fldiv@grs:
  1777                           	opt stack 0
  1778  000028                     i1___flmul@prod:
  1779                           	opt stack 0
  1780                           
  1781                           ; 4 bytes @ 0x27
  1782  000028                     	ds	4
  1783  00002C                     i1___fldiv@bexp:
  1784                           	opt stack 0
  1785  00002C                     i1___flmul@temp:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x2B
  1789  00002C                     	ds	1
  1790  00002D                     i1___fldiv@aexp:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x2C
  1794  00002D                     	ds	1
  1795  00002E                     UARTint@sas:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x2D
  1799  00002E                     	ds	1
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           
  1809 ;;
  1810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1811 ;;
  1812 ;; *************** function _main *****************
  1813 ;; Defined at:
  1814 ;;		line 27 in file "source/main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1828 ;;      Params:         0       0       0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0
  1831 ;;      Totals:         0       0       0       0       0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels required when called:   17
  1834 ;; This function calls:
  1835 ;;		_EEPROMConfig
  1836 ;;		_PWM2Config
  1837 ;;		_UARTConfig
  1838 ;;		_buttonChecking
  1839 ;;		_clockConfig
  1840 ;;		_drawScreen
  1841 ;;		_interruptConfig
  1842 ;;		_ioConfig
  1843 ;;		_ioInitStt
  1844 ;;		_lcd_init
  1845 ;; This function is called by:
  1846 ;;		Startup code after reset
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text0
  1851  00508A                     __ptext0:
  1852                           	opt stack 0
  1853  00508A                     _main:
  1854                           	opt stack 14
  1855                           
  1856                           ;main.c: 29: clockConfig();
  1857                           
  1858                           ;incstack = 0
  1859  00508A  EC85  F028         	call	_clockConfig	;wreg free
  1860                           
  1861                           ;main.c: 30: ioInitStt();
  1862  00508E  EC1A  F029         	call	_ioInitStt	;wreg free
  1863                           
  1864                           ;main.c: 31: EEPROMConfig();
  1865  005092  EC22  F029         	call	_EEPROMConfig	;wreg free
  1866                           
  1867                           ;main.c: 34: ioConfig();
  1868  005096  ECCF  F027         	call	_ioConfig	;wreg free
  1869                           
  1870                           ;main.c: 35: lcd_init();
  1871  00509A  ECB6  F022         	call	_lcd_init	;wreg free
  1872                           
  1873                           ;main.c: 36: PWM2Config();
  1874  00509E  EC32  F026         	call	_PWM2Config	;wreg free
  1875                           
  1876                           ;main.c: 37: UARTConfig();
  1877  0050A2  EC98  F027         	call	_UARTConfig	;wreg free
  1878                           
  1879                           ;main.c: 38: interruptConfig();
  1880  0050A6  EC1E  F029         	call	_interruptConfig	;wreg free
  1881  0050AA                     l721:
  1882  0050AA  0004               	clrwdt		;# 
  1883                           
  1884                           ;main.c: 42: drawScreen();
  1885  0050AC  EC38  F024         	call	_drawScreen	;wreg free
  1886                           
  1887                           ;main.c: 43: buttonChecking();
  1888  0050B0  ECAE  F015         	call	_buttonChecking	;wreg free
  1889  0050B4  D7FA               	goto	l721
  1890  0050B6                     __end_of_main:
  1891                           	opt stack 0
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901 ;; *************** function _lcd_init *****************
  1902 ;; Defined at:
  1903 ;;		line 179 in file "source/../../vclib_lcd.h"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  LCD_INIT_STR    4   30[BANK0 ] unsigned char [4]
  1908 ;;  i               1   34[BANK0 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1918 ;;      Params:         0       0       0       0       0       0       0
  1919 ;;      Locals:         0       5       0       0       0       0       0
  1920 ;;      Temps:          0       1       0       0       0       0       0
  1921 ;;      Totals:         0       6       0       0       0       0       0
  1922 ;;Total ram usage:        6 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:   11
  1925 ;; This function calls:
  1926 ;;		_lcd_send_4bits
  1927 ;;		_lcd_send_byte
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text1
  1934  00456C                     __ptext1:
  1935                           	opt stack 0
  1936  00456C                     _lcd_init:
  1937                           	opt stack 19
  1938                           
  1939                           ;vclib_lcd.h: 180: unsigned char i;
  1940                           ;vclib_lcd.h: 181: unsigned char LCD_INIT_STRING[4] = {0x20 | (2 << 2), 0xc, 1, 6};
  1941                           
  1942                           ;incstack = 0
  1943  00456C  C157  F07E         	movff	lcd_init@F7567,lcd_init@LCD_INIT_STRING
  1944  004570  C158  F07F         	movff	lcd_init@F7567+1,lcd_init@LCD_INIT_STRING+1
  1945  004574  C159  F080         	movff	lcd_init@F7567+2,lcd_init@LCD_INIT_STRING+2
  1946  004578  C15A  F081         	movff	lcd_init@F7567+3,lcd_init@LCD_INIT_STRING+3
  1947                           
  1948                           ;vclib_lcd.h: 184: PORTBbits.RB3 = 0;
  1949  00457C  9681               	bcf	3969,3,c	;volatile
  1950                           
  1951                           ;vclib_lcd.h: 185: PORTBbits.RB1 = 0;
  1952  00457E  9281               	bcf	3969,1,c	;volatile
  1953                           
  1954                           ;vclib_lcd.h: 186: PORTBbits.RB2 = 0;
  1955  004580  9481               	bcf	3969,2,c	;volatile
  1956                           
  1957                           ;vclib_lcd.h: 187: _delay((unsigned long)((15)*(16000000/4000.0)));
  1958  004582  0E4E               	movlw	78
  1959  004584  0100               	movlb	0	; () banked
  1960  004586  6F7D               	movwf	??_lcd_init& (0+255),b
  1961  004588  0EEB               	movlw	235
  1962  00458A                     u12327:
  1963  00458A  2EE8               	decfsz	wreg,f,c
  1964  00458C  D7FE               	goto	u12327
  1965  00458E  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  1966  004590  D7FC               	goto	u12327
  1967  004592  F000               	nop	
  1968                           
  1969                           ;vclib_lcd.h: 188: for (i = 1; i <= 3; ++i) {
  1970  004594  0E01               	movlw	1
  1971  004596  0100               	movlb	0	; () banked
  1972  004598  6F82               	movwf	lcd_init@i& (0+255),b
  1973  00459A                     l9332:
  1974                           
  1975                           ; BSR set to: 0
  1976  00459A  0E03               	movlw	3
  1977  00459C  0100               	movlb	0	; () banked
  1978  00459E  6582               	cpfsgt	lcd_init@i& (0+255),b
  1979  0045A0  D001               	goto	l9336
  1980  0045A2  D00F               	goto	l9344
  1981  0045A4                     l9336:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;vclib_lcd.h: 189: lcd_send_4bits(3);
  1985  0045A4  0E03               	movlw	3
  1986  0045A6  EC80  F024         	call	_lcd_send_4bits
  1987                           
  1988                           ;vclib_lcd.h: 190: _delay((unsigned long)((5)*(16000000/4000.0)));
  1989  0045AA  0E1A               	movlw	26
  1990  0045AC  0100               	movlb	0	; () banked
  1991  0045AE  6F7D               	movwf	??_lcd_init& (0+255),b
  1992  0045B0  0EF8               	movlw	248
  1993  0045B2                     u12337:
  1994  0045B2  2EE8               	decfsz	wreg,f,c
  1995  0045B4  D7FE               	goto	u12337
  1996  0045B6  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  1997  0045B8  D7FC               	goto	u12337
  1998  0045BA  D000               	nop2	
  1999  0045BC  0100               	movlb	0	; () banked
  2000  0045BE  2B82               	incf	lcd_init@i& (0+255),f,b
  2001  0045C0  D7EC               	goto	l9332
  2002  0045C2                     l9344:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;vclib_lcd.h: 191: }
  2006                           ;vclib_lcd.h: 192: lcd_send_4bits(2);
  2007  0045C2  0E02               	movlw	2
  2008  0045C4  EC80  F024         	call	_lcd_send_4bits
  2009                           
  2010                           ;vclib_lcd.h: 193: _delay((unsigned long)((5)*(16000000/4000.0)));
  2011  0045C8  0E1A               	movlw	26
  2012  0045CA  0100               	movlb	0	; () banked
  2013  0045CC  6F7D               	movwf	??_lcd_init& (0+255),b
  2014  0045CE  0EF8               	movlw	248
  2015  0045D0                     u12347:
  2016  0045D0  2EE8               	decfsz	wreg,f,c
  2017  0045D2  D7FE               	goto	u12347
  2018  0045D4  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  2019  0045D6  D7FC               	goto	u12347
  2020  0045D8  D000               	nop2	
  2021                           
  2022                           ;vclib_lcd.h: 194: for (i = 0; i <= 3; ++i)
  2023  0045DA  0E00               	movlw	0
  2024  0045DC  0100               	movlb	0	; () banked
  2025  0045DE  6F82               	movwf	lcd_init@i& (0+255),b
  2026  0045E0                     l9350:
  2027                           
  2028                           ; BSR set to: 0
  2029  0045E0  0E03               	movlw	3
  2030  0045E2  0100               	movlb	0	; () banked
  2031  0045E4  6582               	cpfsgt	lcd_init@i& (0+255),b
  2032  0045E6  D001               	goto	l9354
  2033  0045E8  0012               	return	
  2034  0045EA                     l9354:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;vclib_lcd.h: 195: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2038  0045EA  0100               	movlb	0	; () banked
  2039  0045EC  5182               	movf	lcd_init@i& (0+255),w,b
  2040  0045EE  0D01               	mullw	1
  2041  0045F0  0E7E               	movlw	low lcd_init@LCD_INIT_STRING
  2042  0045F2  24F3               	addwf	prodl,w,c
  2043  0045F4  6ED9               	movwf	fsr2l,c
  2044  0045F6  0E00               	movlw	high lcd_init@LCD_INIT_STRING
  2045  0045F8  20F4               	addwfc	prodh,w,c
  2046  0045FA  6EDA               	movwf	fsr2h,c
  2047  0045FC  50DF               	movf	indf2,w,c
  2048  0045FE  0100               	movlb	0	; () banked
  2049  004600  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  2050  004602  0E00               	movlw	0
  2051  004604  EC1C  F027         	call	_lcd_send_byte
  2052  004608  0100               	movlb	0	; () banked
  2053  00460A  2B82               	incf	lcd_init@i& (0+255),f,b
  2054  00460C  D7E9               	goto	l9350
  2055  00460E                     __end_of_lcd_init:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           postdec1	equ	0xFE5
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           
  2071 ;; *************** function _ioInitStt *****************
  2072 ;; Defined at:
  2073 ;;		line 80 in file "source/IOConfig.h"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		None
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2087 ;;      Params:         0       0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    8
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text2
  2102  005234                     __ptext2:
  2103                           	opt stack 0
  2104  005234                     _ioInitStt:
  2105                           	opt stack 22
  2106                           
  2107                           ;IOConfig.h: 81: LATCbits.LATC4 = 0;
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;incstack = 0
  2111  005234  988B               	bcf	3979,4,c	;volatile
  2112                           
  2113                           ;IOConfig.h: 82: LATBbits.LATB0 = 0;
  2114  005236  908A               	bcf	3978,0,c	;volatile
  2115                           
  2116                           ;IOConfig.h: 83: LATCbits.LATC5 = 0;
  2117  005238  9A8B               	bcf	3979,5,c	;volatile
  2118  00523A  0012               	return		;funcret
  2119  00523C                     __end_of_ioInitStt:
  2120                           	opt stack 0
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           
  2135 ;; *************** function _ioConfig *****************
  2136 ;; Defined at:
  2137 ;;		line 63 in file "source/IOConfig.h"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		None
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    8
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text3
  2166  004F9E                     __ptext3:
  2167                           	opt stack 0
  2168  004F9E                     _ioConfig:
  2169                           	opt stack 22
  2170                           
  2171                           ;IOConfig.h: 64: TRISBbits.TRISB1 = 0;
  2172                           
  2173                           ;incstack = 0
  2174  004F9E  9293               	bcf	3987,1,c	;volatile
  2175                           
  2176                           ;IOConfig.h: 65: TRISBbits.TRISB2 = 0;
  2177  004FA0  9493               	bcf	3987,2,c	;volatile
  2178                           
  2179                           ;IOConfig.h: 66: TRISBbits.TRISB3 = 0;
  2180  004FA2  9693               	bcf	3987,3,c	;volatile
  2181                           
  2182                           ;IOConfig.h: 67: TRISBbits.TRISB0 = 0;
  2183  004FA4  9093               	bcf	3987,0,c	;volatile
  2184                           
  2185                           ;IOConfig.h: 68: TRISCbits.TRISC5 = 0;
  2186  004FA6  9A94               	bcf	3988,5,c	;volatile
  2187                           
  2188                           ;IOConfig.h: 69: TRISAbits.TRISA7 = 1;
  2189  004FA8  8E92               	bsf	3986,7,c	;volatile
  2190                           
  2191                           ;IOConfig.h: 70: TRISAbits.TRISA6 = 1;
  2192  004FAA  8C92               	bsf	3986,6,c	;volatile
  2193                           
  2194                           ;IOConfig.h: 71: TRISCbits.TRISC2 = 1; ANSELCbits.ANSC2 = 0;
  2195  004FAC  8494               	bsf	3988,2,c	;volatile
  2196  004FAE  010F               	movlb	15	; () banked
  2197  004FB0  953A               	bcf	58,2,b	;volatile
  2198                           
  2199                           ;IOConfig.h: 72: TRISCbits.TRISC3 = 1; ANSELCbits.ANSC3 = 0;
  2200  004FB2  8694               	bsf	3988,3,c	;volatile
  2201  004FB4  010F               	movlb	15	; () banked
  2202  004FB6  973A               	bcf	58,3,b	;volatile
  2203                           
  2204                           ;IOConfig.h: 73: TRISAbits.TRISA2 = 1; ANSELAbits.ANSA2 = 0;
  2205  004FB8  8492               	bsf	3986,2,c	;volatile
  2206  004FBA  010F               	movlb	15	; () banked
  2207  004FBC  9538               	bcf	56,2,b	;volatile
  2208                           
  2209                           ;IOConfig.h: 74: TRISAbits.TRISA3 = 1; ANSELAbits.ANSA3 = 0;
  2210  004FBE  8692               	bsf	3986,3,c	;volatile
  2211  004FC0  010F               	movlb	15	; () banked
  2212  004FC2  9738               	bcf	56,3,b	;volatile
  2213                           
  2214                           ;IOConfig.h: 75: TRISAbits.TRISA4 = 1;
  2215  004FC4  8892               	bsf	3986,4,c	;volatile
  2216                           
  2217                           ;IOConfig.h: 76: TRISAbits.TRISA5 = 1; ANSELAbits.ANSA5 = 0;
  2218  004FC6  8A92               	bsf	3986,5,c	;volatile
  2219  004FC8  010F               	movlb	15	; () banked
  2220  004FCA  9B38               	bcf	56,5,b	;volatile
  2221                           
  2222                           ;IOConfig.h: 77: TRISCbits.TRISC4 = 0;
  2223  004FCC  9894               	bcf	3988,4,c	;volatile
  2224                           
  2225                           ; BSR set to: 15
  2226  004FCE  0012               	return		;funcret
  2227  004FD0                     __end_of_ioConfig:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postdec1	equ	0xFE5
  2238                           fsr1l	equ	0xFE1
  2239                           indf2	equ	0xFDF
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           
  2243 ;; *************** function _interruptConfig *****************
  2244 ;; Defined at:
  2245 ;;		line 90 in file "source/SYSConfig.h"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		None
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    8
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text4
  2274  00523C                     __ptext4:
  2275                           	opt stack 0
  2276  00523C                     _interruptConfig:
  2277                           	opt stack 22
  2278                           
  2279                           ;SYSConfig.h: 91: RCONbits.IPEN = 1;
  2280                           
  2281                           ; BSR set to: 15
  2282                           ;incstack = 0
  2283  00523C  8ED0               	bsf	4048,7,c	;volatile
  2284                           
  2285                           ;SYSConfig.h: 92: INTCONbits.PEIE = 1;
  2286  00523E  8CF2               	bsf	intcon,6,c	;volatile
  2287                           
  2288                           ;SYSConfig.h: 93: INTCONbits.GIE = 1;
  2289  005240  8EF2               	bsf	intcon,7,c	;volatile
  2290  005242  0012               	return		;funcret
  2291  005244                     __end_of_interruptConfig:
  2292                           	opt stack 0
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           postdec1	equ	0xFE5
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           
  2308 ;; *************** function _drawScreen *****************
  2309 ;; Defined at:
  2310 ;;		line 235 in file "source/screenDrawers.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:   16
  2331 ;; This function calls:
  2332 ;;		_drawAdvOFF
  2333 ;;		_drawAdvON
  2334 ;;		_drawBadPass
  2335 ;;		_drawChanVal
  2336 ;;		_drawMenu
  2337 ;;		_drawPassWord
  2338 ;;		_drawSNquest
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text5
  2345  004870                     __ptext5:
  2346                           	opt stack 0
  2347  004870                     _drawScreen:
  2348                           	opt stack 14
  2349                           
  2350                           ;screenDrawers.h: 236: switch (actualScreen) {
  2351                           
  2352                           ;incstack = 0
  2353  004870  D023               	goto	l9428
  2354  004872                     l9406:
  2355                           
  2356                           ;screenDrawers.h: 238: drawMenu(0);
  2357  004872  0E00               	movlw	0
  2358  004874  EC82  F00F         	call	_drawMenu
  2359                           
  2360                           ;screenDrawers.h: 239: break;
  2361  004878  0012               	return	
  2362  00487A                     l9408:
  2363                           
  2364                           ;screenDrawers.h: 241: drawPassWord();
  2365  00487A  EC8F  F020         	call	_drawPassWord	;wreg free
  2366                           
  2367                           ;screenDrawers.h: 242: break;
  2368  00487E  0012               	return	
  2369  004880                     l9410:
  2370                           
  2371                           ;screenDrawers.h: 244: drawBadPass();
  2372  004880  EC00  F028         	call	_drawBadPass	;wreg free
  2373                           
  2374                           ;screenDrawers.h: 245: break;
  2375  004884  0012               	return	
  2376  004886                     l9412:
  2377                           
  2378                           ;screenDrawers.h: 247: drawMenu(1);
  2379  004886  0E01               	movlw	1
  2380  004888  EC82  F00F         	call	_drawMenu
  2381                           
  2382                           ;screenDrawers.h: 248: break;
  2383  00488C  0012               	return	
  2384  00488E                     l9414:
  2385                           
  2386                           ;screenDrawers.h: 250: drawAdvON();
  2387  00488E  EC17  F028         	call	_drawAdvON	;wreg free
  2388                           
  2389                           ;screenDrawers.h: 251: break;
  2390  004892  0012               	return	
  2391  004894                     l9416:
  2392                           
  2393                           ;screenDrawers.h: 253: drawAdvOFF();
  2394  004894  EC2E  F028         	call	_drawAdvOFF	;wreg free
  2395                           
  2396                           ;screenDrawers.h: 257: break;
  2397                           
  2398                           ;screenDrawers.h: 255: }case (6): {
  2399                           
  2400                           ;screenDrawers.h: 254: break;
  2401  004898  0012               	return	
  2402  00489A                     l9418:
  2403                           
  2404                           ;screenDrawers.h: 259: drawChanVal();
  2405  00489A  ECDF  F016         	call	_drawChanVal	;wreg free
  2406                           
  2407                           ;screenDrawers.h: 260: break;
  2408  00489E  0012               	return	
  2409  0048A0                     l9420:
  2410                           
  2411                           ;screenDrawers.h: 262: drawSNquest(0);
  2412  0048A0  0E00               	movlw	0
  2413  0048A2  EC8F  F021         	call	_drawSNquest
  2414                           
  2415                           ;screenDrawers.h: 263: break;
  2416  0048A6  0012               	return	
  2417  0048A8                     l9422:
  2418                           
  2419                           ;screenDrawers.h: 265: drawSNquest(1);
  2420  0048A8  0E01               	movlw	1
  2421  0048AA  EC8F  F021         	call	_drawSNquest
  2422                           
  2423                           ;screenDrawers.h: 266: break;
  2424  0048AE  0012               	return	
  2425  0048B0                     l9424:
  2426                           
  2427                           ;screenDrawers.h: 268: drawSNquest(2);
  2428  0048B0  0E02               	movlw	2
  2429  0048B2  EC8F  F021         	call	_drawSNquest
  2430                           
  2431                           ;screenDrawers.h: 270: }
  2432                           ;screenDrawers.h: 271: }
  2433                           
  2434                           ;screenDrawers.h: 269: break;
  2435  0048B6  0012               	return	
  2436  0048B8                     l9428:
  2437  0048B8  0100               	movlb	0	; () banked
  2438  0048BA  51D1               	movf	_actualScreen& (0+255),w,b
  2439                           
  2440                           ; Switch size 1, requested type "space"
  2441                           ; Number of cases is 11, Range of values is 0 to 10
  2442                           ; switch strategies available:
  2443                           ; Name         Instructions Cycles
  2444                           ; simple_byte           34    18 (average)
  2445                           ;	Chosen strategy is simple_byte
  2446  0048BC  0A00               	xorlw	0	; case 0
  2447  0048BE  B4D8               	btfsc	status,2,c
  2448  0048C0  D7D8               	goto	l9406
  2449  0048C2  0A01               	xorlw	1	; case 1
  2450  0048C4  B4D8               	btfsc	status,2,c
  2451  0048C6  D7D9               	goto	l9408
  2452  0048C8  0A03               	xorlw	3	; case 2
  2453  0048CA  B4D8               	btfsc	status,2,c
  2454  0048CC  D7E9               	goto	l9420
  2455  0048CE  0A01               	xorlw	1	; case 3
  2456  0048D0  B4D8               	btfsc	status,2,c
  2457  0048D2  D7EA               	goto	l9422
  2458  0048D4  0A07               	xorlw	7	; case 4
  2459  0048D6  B4D8               	btfsc	status,2,c
  2460  0048D8  D7D6               	goto	l9412
  2461  0048DA  0A01               	xorlw	1	; case 5
  2462  0048DC  B4D8               	btfsc	status,2,c
  2463  0048DE  D7DD               	goto	l9418
  2464  0048E0  0A03               	xorlw	3	; case 6
  2465  0048E2  B4D8               	btfsc	status,2,c
  2466  0048E4  0012               	return	
  2467  0048E6  0A01               	xorlw	1	; case 7
  2468  0048E8  B4D8               	btfsc	status,2,c
  2469  0048EA  D7CA               	goto	l9410
  2470  0048EC  0A0F               	xorlw	15	; case 8
  2471  0048EE  B4D8               	btfsc	status,2,c
  2472  0048F0  D7CE               	goto	l9414
  2473  0048F2  0A01               	xorlw	1	; case 9
  2474  0048F4  B4D8               	btfsc	status,2,c
  2475  0048F6  D7CE               	goto	l9416
  2476  0048F8  0A03               	xorlw	3	; case 10
  2477  0048FA  A4D8               	btfss	status,2,c
  2478  0048FC  0012               	return	
  2479  0048FE  D7D8               	goto	l9424
  2480  004900                     __end_of_drawScreen:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           prodh	equ	0xFF4
  2487                           prodl	equ	0xFF3
  2488                           intcon	equ	0xFF2
  2489                           postinc0	equ	0xFEE
  2490                           wreg	equ	0xFE8
  2491                           postdec1	equ	0xFE5
  2492                           fsr1l	equ	0xFE1
  2493                           indf2	equ	0xFDF
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498 ;; *************** function _drawSNquest *****************
  2499 ;; Defined at:
  2500 ;;		line 220 in file "source/screenDrawers.h"
  2501 ;; Parameters:    Size  Location     Type
  2502 ;;  tq              1    wreg     unsigned char 
  2503 ;; Auto vars:     Size  Location     Type
  2504 ;;  tq              1  105[BANK0 ] unsigned char 
  2505 ;;  i               2  106[BANK0 ] int 
  2506 ;; Return value:  Size  Location     Type
  2507 ;;                  1    wreg      void 
  2508 ;; Registers used:
  2509 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2510 ;; Tracked objects:
  2511 ;;		On entry : 0/0
  2512 ;;		On exit  : 0/0
  2513 ;;		Unchanged: 0/0
  2514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2515 ;;      Params:         0       0       0       0       0       0       0
  2516 ;;      Locals:         0       3       0       0       0       0       0
  2517 ;;      Temps:          0       0       0       0       0       0       0
  2518 ;;      Totals:         0       3       0       0       0       0       0
  2519 ;;Total ram usage:        3 bytes
  2520 ;; Hardware stack levels used:    1
  2521 ;; Hardware stack levels required when called:   15
  2522 ;; This function calls:
  2523 ;;		_lcd_gotoxy
  2524 ;;		_printf
  2525 ;; This function is called by:
  2526 ;;		_drawScreen
  2527 ;; This function uses a non-reentrant model
  2528 ;;
  2529                           
  2530                           	psect	text6
  2531  00431E                     __ptext6:
  2532                           	opt stack 0
  2533  00431E                     _drawSNquest:
  2534                           	opt stack 14
  2535                           
  2536                           ;incstack = 0
  2537                           ;drawSNquest@tq stored from wreg
  2538  00431E  0100               	movlb	0	; () banked
  2539  004320  6FC9               	movwf	drawSNquest@tq& (0+255),b
  2540                           
  2541                           ;screenDrawers.h: 221: int i;
  2542                           ;screenDrawers.h: 222: for (i = 0; i < 2; i++)
  2543  004322  0E00               	movlw	0
  2544  004324  0100               	movlb	0	; () banked
  2545  004326  6FCB               	movwf	(drawSNquest@i+1)& (0+255),b
  2546  004328  0E00               	movlw	0
  2547  00432A  6FCA               	movwf	drawSNquest@i& (0+255),b
  2548  00432C                     l9174:
  2549                           
  2550                           ; BSR set to: 0
  2551  00432C  0100               	movlb	0	; () banked
  2552  00432E  BFCB               	btfsc	(drawSNquest@i+1)& (0+255),7,b
  2553  004330  D008               	goto	l9178
  2554  004332  0100               	movlb	0	; () banked
  2555  004334  51CB               	movf	(drawSNquest@i+1)& (0+255),w,b
  2556  004336  E113               	bnz	l9184
  2557  004338  0E02               	movlw	2
  2558  00433A  0100               	movlb	0	; () banked
  2559  00433C  5DCA               	subwf	drawSNquest@i& (0+255),w,b
  2560  00433E  B0D8               	btfsc	status,0,c
  2561  004340  D00E               	goto	l9184
  2562  004342                     l9178:
  2563                           
  2564                           ; BSR set to: 0
  2565                           ;screenDrawers.h: 223: questSN[i] = ' ';
  2566  004342  0E42               	movlw	low _questSN
  2567  004344  0100               	movlb	0	; () banked
  2568  004346  25CA               	addwf	drawSNquest@i& (0+255),w,b
  2569  004348  6ED9               	movwf	fsr2l,c
  2570  00434A  0E01               	movlw	high _questSN
  2571  00434C  0100               	movlb	0	; () banked
  2572  00434E  21CB               	addwfc	(drawSNquest@i+1)& (0+255),w,b
  2573  004350  6EDA               	movwf	fsr2h,c
  2574  004352  0E20               	movlw	32
  2575  004354  6EDF               	movwf	indf2,c
  2576                           
  2577                           ; BSR set to: 0
  2578  004356  0100               	movlb	0	; () banked
  2579  004358  4BCA               	infsnz	drawSNquest@i& (0+255),f,b
  2580  00435A  2BCB               	incf	(drawSNquest@i+1)& (0+255),f,b
  2581  00435C  D7E7               	goto	l9174
  2582  00435E                     l9184:
  2583                           
  2584                           ; BSR set to: 0
  2585                           ;screenDrawers.h: 224: questSN[selSN] = 0b01111110;
  2586  00435E  0100               	movlb	0	; () banked
  2587  004360  51D7               	movf	_selSN& (0+255),w,b
  2588  004362  0D01               	mullw	1
  2589  004364  0E42               	movlw	low _questSN
  2590  004366  24F3               	addwf	prodl,w,c
  2591  004368  6ED9               	movwf	fsr2l,c
  2592  00436A  0E01               	movlw	high _questSN
  2593  00436C  20F4               	addwfc	prodh,w,c
  2594  00436E  6EDA               	movwf	fsr2h,c
  2595  004370  0E7E               	movlw	126
  2596  004372  6EDF               	movwf	indf2,c
  2597                           
  2598                           ; BSR set to: 0
  2599                           ;screenDrawers.h: 225: lcd_gotoxy(1, 1);
  2600  004374  0E01               	movlw	1
  2601  004376  0100               	movlb	0	; () banked
  2602  004378  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2603  00437A  0E01               	movlw	1
  2604  00437C  ECE8  F027         	call	_lcd_gotoxy
  2605                           
  2606                           ;screenDrawers.h: 226: if (tq == 0)
  2607  004380  0100               	movlb	0	; () banked
  2608  004382  51C9               	movf	drawSNquest@tq& (0+255),w,b
  2609  004384  0100               	movlb	0	; () banked
  2610  004386  A4D8               	btfss	status,2,c
  2611  004388  D009               	goto	l9192
  2612                           
  2613                           ; BSR set to: 0
  2614                           ;screenDrawers.h: 227: printf("Iniciar Proceso?\n");
  2615  00438A  0EE9               	movlw	low STR_42
  2616  00438C  0101               	movlb	1	; () banked
  2617  00438E  6F00               	movwf	printf@f& (0+255),b
  2618  004390  0E7E               	movlw	high STR_42
  2619  004392  0101               	movlb	1	; () banked
  2620  004394  6F01               	movwf	(printf@f+1)& (0+255),b
  2621  004396  EC5B  F000         	call	_printf	;wreg free
  2622  00439A  D01A               	goto	l414
  2623  00439C                     l9192:
  2624                           
  2625                           ;screenDrawers.h: 228: else if(tq == 1)
  2626  00439C  0100               	movlb	0	; () banked
  2627  00439E  05C9               	decf	drawSNquest@tq& (0+255),w,b
  2628  0043A0  A4D8               	btfss	status,2,c
  2629  0043A2  D009               	goto	l9196
  2630                           
  2631                           ; BSR set to: 0
  2632                           ;screenDrawers.h: 229: printf("Detener Proceso?\n");
  2633  0043A4  0EFB               	movlw	low STR_43
  2634  0043A6  0101               	movlb	1	; () banked
  2635  0043A8  6F00               	movwf	printf@f& (0+255),b
  2636  0043AA  0E7E               	movlw	high STR_43
  2637  0043AC  0101               	movlb	1	; () banked
  2638  0043AE  6F01               	movwf	(printf@f+1)& (0+255),b
  2639  0043B0  EC5B  F000         	call	_printf	;wreg free
  2640  0043B4  D00D               	goto	l414
  2641  0043B6                     l9196:
  2642                           
  2643                           ;screenDrawers.h: 230: else if(tq == 2)
  2644  0043B6  0E02               	movlw	2
  2645  0043B8  0100               	movlb	0	; () banked
  2646  0043BA  19C9               	xorwf	drawSNquest@tq& (0+255),w,b
  2647  0043BC  A4D8               	btfss	status,2,c
  2648  0043BE  D008               	goto	l414
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;screenDrawers.h: 231: printf("Guardar Cambio? \n");
  2652  0043C0  0EA1               	movlw	low STR_44
  2653  0043C2  0101               	movlb	1	; () banked
  2654  0043C4  6F00               	movwf	printf@f& (0+255),b
  2655  0043C6  0E7E               	movlw	high STR_44
  2656  0043C8  0101               	movlb	1	; () banked
  2657  0043CA  6F01               	movwf	(printf@f+1)& (0+255),b
  2658  0043CC  EC5B  F000         	call	_printf	;wreg free
  2659  0043D0                     l414:
  2660                           
  2661                           ;screenDrawers.h: 232: printf("   %cSI    %cNO   ", questSN[0], questSN[1]);
  2662  0043D0  0E10               	movlw	low STR_45
  2663  0043D2  0101               	movlb	1	; () banked
  2664  0043D4  6F00               	movwf	printf@f& (0+255),b
  2665  0043D6  0E7E               	movlw	high STR_45
  2666  0043D8  0101               	movlb	1	; () banked
  2667  0043DA  6F01               	movwf	(printf@f+1)& (0+255),b
  2668  0043DC  C142  F102         	movff	_questSN,?_printf+2
  2669  0043E0  0101               	movlb	1	; () banked
  2670  0043E2  6B03               	clrf	(?_printf+3)& (0+255),b
  2671  0043E4  C143  F104         	movff	_questSN+1,?_printf+4
  2672  0043E8  0101               	movlb	1	; () banked
  2673  0043EA  6B05               	clrf	(?_printf+5)& (0+255),b
  2674  0043EC  EC5B  F000         	call	_printf	;wreg free
  2675  0043F0  0012               	return		;funcret
  2676  0043F2                     __end_of_drawSNquest:
  2677                           	opt stack 0
  2678                           tblptru	equ	0xFF8
  2679                           tblptrh	equ	0xFF7
  2680                           tblptrl	equ	0xFF6
  2681                           tablat	equ	0xFF5
  2682                           prodh	equ	0xFF4
  2683                           prodl	equ	0xFF3
  2684                           intcon	equ	0xFF2
  2685                           postinc0	equ	0xFEE
  2686                           wreg	equ	0xFE8
  2687                           postdec1	equ	0xFE5
  2688                           fsr1l	equ	0xFE1
  2689                           indf2	equ	0xFDF
  2690                           fsr2h	equ	0xFDA
  2691                           fsr2l	equ	0xFD9
  2692                           status	equ	0xFD8
  2693                           
  2694 ;; *************** function _drawPassWord *****************
  2695 ;; Defined at:
  2696 ;;		line 183 in file "source/screenDrawers.h"
  2697 ;; Parameters:    Size  Location     Type
  2698 ;;		None
  2699 ;; Auto vars:     Size  Location     Type
  2700 ;;  i               2  105[BANK0 ] int 
  2701 ;; Return value:  Size  Location     Type
  2702 ;;                  1    wreg      void 
  2703 ;; Registers used:
  2704 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2705 ;; Tracked objects:
  2706 ;;		On entry : 0/0
  2707 ;;		On exit  : 0/0
  2708 ;;		Unchanged: 0/0
  2709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2710 ;;      Params:         0       0       0       0       0       0       0
  2711 ;;      Locals:         0       2       0       0       0       0       0
  2712 ;;      Temps:          0       0       0       0       0       0       0
  2713 ;;      Totals:         0       2       0       0       0       0       0
  2714 ;;Total ram usage:        2 bytes
  2715 ;; Hardware stack levels used:    1
  2716 ;; Hardware stack levels required when called:   15
  2717 ;; This function calls:
  2718 ;;		_lcd_gotoxy
  2719 ;;		_printf
  2720 ;; This function is called by:
  2721 ;;		_drawScreen
  2722 ;; This function uses a non-reentrant model
  2723 ;;
  2724                           
  2725                           	psect	text7
  2726  00411E                     __ptext7:
  2727                           	opt stack 0
  2728  00411E                     _drawPassWord:
  2729                           	opt stack 14
  2730                           
  2731                           ;screenDrawers.h: 184: if (!fd) {
  2732                           
  2733                           ;incstack = 0
  2734  00411E  0101               	movlb	1	; () banked
  2735  004120  514A               	movf	_fd& (0+255),w,b
  2736  004122  0101               	movlb	1	; () banked
  2737  004124  A4D8               	btfss	status,2,c
  2738  004126  D012               	goto	l396
  2739                           
  2740                           ; BSR set to: 1
  2741                           ;screenDrawers.h: 185: passSection = 0;
  2742  004128  0E00               	movlw	0
  2743  00412A  0100               	movlb	0	; () banked
  2744  00412C  6FD5               	movwf	_passSection& (0+255),b
  2745                           
  2746                           ;screenDrawers.h: 186: introducido[0] = 0;
  2747  00412E  0E00               	movlw	0
  2748  004130  0101               	movlb	1	; () banked
  2749  004132  6F35               	movwf	_introducido& (0+255),b
  2750                           
  2751                           ;screenDrawers.h: 187: introducido[1] = 0;
  2752  004134  0E00               	movlw	0
  2753  004136  0101               	movlb	1	; () banked
  2754  004138  6F36               	movwf	(_introducido+1)& (0+255),b
  2755                           
  2756                           ;screenDrawers.h: 188: introducido[2] = 0;
  2757  00413A  0E00               	movlw	0
  2758  00413C  0101               	movlb	1	; () banked
  2759  00413E  6F37               	movwf	(_introducido+2)& (0+255),b
  2760                           
  2761                           ;screenDrawers.h: 189: introducido[3] = 0;
  2762  004140  0E00               	movlw	0
  2763  004142  0101               	movlb	1	; () banked
  2764  004144  6F38               	movwf	(_introducido+3)& (0+255),b
  2765                           
  2766                           ;screenDrawers.h: 190: fd = 1;
  2767  004146  0E01               	movlw	1
  2768  004148  0101               	movlb	1	; () banked
  2769  00414A  6F4A               	movwf	_fd& (0+255),b
  2770  00414C                     l396:
  2771                           
  2772                           ; BSR set to: 1
  2773                           ;screenDrawers.h: 191: }
  2774                           ;screenDrawers.h: 192: int i;
  2775                           ;screenDrawers.h: 193: for (i = 0; i < 4; i++)
  2776  00414C  0E00               	movlw	0
  2777  00414E  0100               	movlb	0	; () banked
  2778  004150  6FCA               	movwf	(drawPassWord@i+1)& (0+255),b
  2779  004152  0E00               	movlw	0
  2780  004154  6FC9               	movwf	drawPassWord@i& (0+255),b
  2781  004156                     l9136:
  2782                           
  2783                           ; BSR set to: 0
  2784  004156  0100               	movlb	0	; () banked
  2785  004158  BFCA               	btfsc	(drawPassWord@i+1)& (0+255),7,b
  2786  00415A  D008               	goto	l9140
  2787  00415C  0100               	movlb	0	; () banked
  2788  00415E  51CA               	movf	(drawPassWord@i+1)& (0+255),w,b
  2789  004160  E113               	bnz	l9146
  2790  004162  0E04               	movlw	4
  2791  004164  0100               	movlb	0	; () banked
  2792  004166  5DC9               	subwf	drawPassWord@i& (0+255),w,b
  2793  004168  B0D8               	btfsc	status,0,c
  2794  00416A  D00E               	goto	l9146
  2795  00416C                     l9140:
  2796                           
  2797                           ; BSR set to: 0
  2798                           ;screenDrawers.h: 194: passChar[i] = ' ';
  2799  00416C  0E39               	movlw	low _passChar
  2800  00416E  0100               	movlb	0	; () banked
  2801  004170  25C9               	addwf	drawPassWord@i& (0+255),w,b
  2802  004172  6ED9               	movwf	fsr2l,c
  2803  004174  0E01               	movlw	high _passChar
  2804  004176  0100               	movlb	0	; () banked
  2805  004178  21CA               	addwfc	(drawPassWord@i+1)& (0+255),w,b
  2806  00417A  6EDA               	movwf	fsr2h,c
  2807  00417C  0E20               	movlw	32
  2808  00417E  6EDF               	movwf	indf2,c
  2809                           
  2810                           ; BSR set to: 0
  2811  004180  0100               	movlb	0	; () banked
  2812  004182  4BC9               	infsnz	drawPassWord@i& (0+255),f,b
  2813  004184  2BCA               	incf	(drawPassWord@i+1)& (0+255),f,b
  2814  004186  D7E7               	goto	l9136
  2815  004188                     l9146:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;screenDrawers.h: 195: passChar[passSection] = 0b01111110;
  2819  004188  0100               	movlb	0	; () banked
  2820  00418A  51D5               	movf	_passSection& (0+255),w,b
  2821  00418C  0D01               	mullw	1
  2822  00418E  0E39               	movlw	low _passChar
  2823  004190  24F3               	addwf	prodl,w,c
  2824  004192  6ED9               	movwf	fsr2l,c
  2825  004194  0E01               	movlw	high _passChar
  2826  004196  20F4               	addwfc	prodh,w,c
  2827  004198  6EDA               	movwf	fsr2h,c
  2828  00419A  0E7E               	movlw	126
  2829  00419C  6EDF               	movwf	indf2,c
  2830                           
  2831                           ; BSR set to: 0
  2832                           ;screenDrawers.h: 196: lcd_gotoxy(1, 1);
  2833  00419E  0E01               	movlw	1
  2834  0041A0  0100               	movlb	0	; () banked
  2835  0041A2  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2836  0041A4  0E01               	movlw	1
  2837  0041A6  ECE8  F027         	call	_lcd_gotoxy
  2838                           
  2839                           ;screenDrawers.h: 197: printf("Contrasena:     \n");
  2840  0041AA  0E35               	movlw	low STR_34
  2841  0041AC  0101               	movlb	1	; () banked
  2842  0041AE  6F00               	movwf	printf@f& (0+255),b
  2843  0041B0  0E7E               	movlw	high STR_34
  2844  0041B2  0101               	movlb	1	; () banked
  2845  0041B4  6F01               	movwf	(printf@f+1)& (0+255),b
  2846  0041B6  EC5B  F000         	call	_printf	;wreg free
  2847                           
  2848                           ;screenDrawers.h: 198: printf("    %c%u%c%u%c%u%c%u    ", passChar[0], introducido[0], p
      +                          assChar[1], introducido[1],
  2849                           ;screenDrawers.h: 199: passChar[2], introducido[2], passChar[3], introducido[3]);
  2850  0041BA  0EE3               	movlw	low STR_35
  2851  0041BC  0101               	movlb	1	; () banked
  2852  0041BE  6F00               	movwf	printf@f& (0+255),b
  2853  0041C0  0E7D               	movlw	high STR_35
  2854  0041C2  0101               	movlb	1	; () banked
  2855  0041C4  6F01               	movwf	(printf@f+1)& (0+255),b
  2856  0041C6  C139  F102         	movff	_passChar,?_printf+2
  2857  0041CA  0101               	movlb	1	; () banked
  2858  0041CC  6B03               	clrf	(?_printf+3)& (0+255),b
  2859  0041CE  0101               	movlb	1	; () banked
  2860  0041D0  5135               	movf	_introducido& (0+255),w,b
  2861  0041D2  0101               	movlb	1	; () banked
  2862  0041D4  6F04               	movwf	(?_printf+4)& (0+255),b
  2863  0041D6  6B05               	clrf	(?_printf+5)& (0+255),b
  2864  0041D8  BF04               	btfsc	(?_printf+4)& (0+255),7,b
  2865  0041DA  0705               	decf	(?_printf+5)& (0+255),f,b
  2866  0041DC  C13A  F106         	movff	_passChar+1,?_printf+6
  2867  0041E0  0101               	movlb	1	; () banked
  2868  0041E2  6B07               	clrf	(?_printf+7)& (0+255),b
  2869  0041E4  0101               	movlb	1	; () banked
  2870  0041E6  5136               	movf	(_introducido+1)& (0+255),w,b
  2871  0041E8  0101               	movlb	1	; () banked
  2872  0041EA  6F08               	movwf	(?_printf+8)& (0+255),b
  2873  0041EC  6B09               	clrf	(?_printf+9)& (0+255),b
  2874  0041EE  BF08               	btfsc	(?_printf+8)& (0+255),7,b
  2875  0041F0  0709               	decf	(?_printf+9)& (0+255),f,b
  2876  0041F2  C13B  F10A         	movff	_passChar+2,?_printf+10
  2877  0041F6  0101               	movlb	1	; () banked
  2878  0041F8  6B0B               	clrf	(?_printf+11)& (0+255),b
  2879  0041FA  0101               	movlb	1	; () banked
  2880  0041FC  5137               	movf	(_introducido+2)& (0+255),w,b
  2881  0041FE  0101               	movlb	1	; () banked
  2882  004200  6F0C               	movwf	(?_printf+12)& (0+255),b
  2883  004202  6B0D               	clrf	(?_printf+13)& (0+255),b
  2884  004204  BF0C               	btfsc	(?_printf+12)& (0+255),7,b
  2885  004206  070D               	decf	(?_printf+13)& (0+255),f,b
  2886  004208  C13C  F10E         	movff	_passChar+3,?_printf+14
  2887  00420C  0101               	movlb	1	; () banked
  2888  00420E  6B0F               	clrf	(?_printf+15)& (0+255),b
  2889  004210  0101               	movlb	1	; () banked
  2890  004212  5138               	movf	(_introducido+3)& (0+255),w,b
  2891  004214  0101               	movlb	1	; () banked
  2892  004216  6F10               	movwf	(?_printf+16)& (0+255),b
  2893  004218  6B11               	clrf	(?_printf+17)& (0+255),b
  2894  00421A  BF10               	btfsc	(?_printf+16)& (0+255),7,b
  2895  00421C  0711               	decf	(?_printf+17)& (0+255),f,b
  2896  00421E  EC5B  F000         	call	_printf	;wreg free
  2897  004222  0012               	return		;funcret
  2898  004224                     __end_of_drawPassWord:
  2899                           	opt stack 0
  2900                           tblptru	equ	0xFF8
  2901                           tblptrh	equ	0xFF7
  2902                           tblptrl	equ	0xFF6
  2903                           tablat	equ	0xFF5
  2904                           prodh	equ	0xFF4
  2905                           prodl	equ	0xFF3
  2906                           intcon	equ	0xFF2
  2907                           postinc0	equ	0xFEE
  2908                           wreg	equ	0xFE8
  2909                           postdec1	equ	0xFE5
  2910                           fsr1l	equ	0xFE1
  2911                           indf2	equ	0xFDF
  2912                           fsr2h	equ	0xFDA
  2913                           fsr2l	equ	0xFD9
  2914                           status	equ	0xFD8
  2915                           
  2916 ;; *************** function _drawMenu *****************
  2917 ;; Defined at:
  2918 ;;		line 47 in file "source/screenDrawers.h"
  2919 ;; Parameters:    Size  Location     Type
  2920 ;;  adv             1    wreg     unsigned char 
  2921 ;; Auto vars:     Size  Location     Type
  2922 ;;  adv             1  105[BANK0 ] unsigned char 
  2923 ;; Return value:  Size  Location     Type
  2924 ;;                  1    wreg      void 
  2925 ;; Registers used:
  2926 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2927 ;; Tracked objects:
  2928 ;;		On entry : 0/0
  2929 ;;		On exit  : 0/0
  2930 ;;		Unchanged: 0/0
  2931 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2932 ;;      Params:         0       0       0       0       0       0       0
  2933 ;;      Locals:         0       1       0       0       0       0       0
  2934 ;;      Temps:          0       0       0       0       0       0       0
  2935 ;;      Totals:         0       1       0       0       0       0       0
  2936 ;;Total ram usage:        1 bytes
  2937 ;; Hardware stack levels used:    1
  2938 ;; Hardware stack levels required when called:   15
  2939 ;; This function calls:
  2940 ;;		_lcd_gotoxy
  2941 ;;		_lcd_putc
  2942 ;;		_printf
  2943 ;; This function is called by:
  2944 ;;		_drawScreen
  2945 ;; This function uses a non-reentrant model
  2946 ;;
  2947                           
  2948                           	psect	text8
  2949  001F04                     __ptext8:
  2950                           	opt stack 0
  2951  001F04                     _drawMenu:
  2952                           	opt stack 14
  2953                           
  2954                           ;incstack = 0
  2955                           ;drawMenu@adv stored from wreg
  2956  001F04  0100               	movlb	0	; () banked
  2957  001F06  6FC9               	movwf	drawMenu@adv& (0+255),b
  2958                           
  2959                           ;screenDrawers.h: 48: switch (menuSection) {
  2960  001F08  D1A6               	goto	l9064
  2961  001F0A                     l8954:
  2962                           
  2963                           ;screenDrawers.h: 50: lcd_gotoxy(1, 1);
  2964  001F0A  0E01               	movlw	1
  2965  001F0C  0100               	movlb	0	; () banked
  2966  001F0E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2967  001F10  0E01               	movlw	1
  2968  001F12  ECE8  F027         	call	_lcd_gotoxy
  2969                           
  2970                           ;screenDrawers.h: 51: printf("Estado proceso: \n");
  2971  001F16  0E8F               	movlw	low STR_1
  2972  001F18  0101               	movlb	1	; () banked
  2973  001F1A  6F00               	movwf	printf@f& (0+255),b
  2974  001F1C  0E7E               	movlw	high STR_1
  2975  001F1E  0101               	movlb	1	; () banked
  2976  001F20  6F01               	movwf	(printf@f+1)& (0+255),b
  2977  001F22  EC5B  F000         	call	_printf	;wreg free
  2978                           
  2979                           ;screenDrawers.h: 52: if (adv)
  2980  001F26  0100               	movlb	0	; () banked
  2981  001F28  51C9               	movf	drawMenu@adv& (0+255),w,b
  2982  001F2A  0100               	movlb	0	; () banked
  2983  001F2C  B4D8               	btfsc	status,2,c
  2984  001F2E  D004               	goto	l8962
  2985                           
  2986                           ; BSR set to: 0
  2987                           ;screenDrawers.h: 53: lcd_putc('A');
  2988  001F30  0E41               	movlw	65
  2989  001F32  EC0E  F025         	call	_lcd_putc
  2990  001F36  D003               	goto	l342
  2991  001F38                     l8962:
  2992                           
  2993                           ;screenDrawers.h: 54: else
  2994                           ;screenDrawers.h: 55: lcd_putc(' ');
  2995  001F38  0E20               	movlw	32
  2996  001F3A  EC0E  F025         	call	_lcd_putc
  2997  001F3E                     l342:
  2998                           
  2999                           ;screenDrawers.h: 56: lcd_gotoxy(2, 2);
  3000  001F3E  0E02               	movlw	2
  3001  001F40  0100               	movlb	0	; () banked
  3002  001F42  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3003  001F44  0E02               	movlw	2
  3004  001F46  ECE8  F027         	call	_lcd_gotoxy
  3005                           
  3006                           ;screenDrawers.h: 57: if (ProcessStarted)
  3007  001F4A  0100               	movlb	0	; () banked
  3008  001F4C  51D0               	movf	_ProcessStarted& (0+255),w,b
  3009  001F4E  B4D8               	btfsc	status,2,c
  3010  001F50  D011               	goto	l8968
  3011                           
  3012                           ; BSR set to: 0
  3013                           ;screenDrawers.h: 58: printf("   %d / %d    ", proceso, numCortes);
  3014  001F52  0E95               	movlw	low STR_2
  3015  001F54  0101               	movlb	1	; () banked
  3016  001F56  6F00               	movwf	printf@f& (0+255),b
  3017  001F58  0E7F               	movlw	high STR_2
  3018  001F5A  0101               	movlb	1	; () banked
  3019  001F5C  6F01               	movwf	(printf@f+1)& (0+255),b
  3020  001F5E  C140  F102         	movff	_proceso,?_printf+2
  3021  001F62  C141  F103         	movff	_proceso+1,?_printf+3
  3022  001F66  C0E1  F104         	movff	_numCortes,?_printf+4
  3023  001F6A  C0E2  F105         	movff	_numCortes+1,?_printf+5
  3024  001F6E  EC5B  F000         	call	_printf	;wreg free
  3025  001F72  0012               	return	
  3026  001F74                     l8968:
  3027                           
  3028                           ;screenDrawers.h: 59: else
  3029                           ;screenDrawers.h: 60: printf("    Detenido    ");
  3030  001F74  0E63               	movlw	low STR_3
  3031  001F76  0101               	movlb	1	; () banked
  3032  001F78  6F00               	movwf	printf@f& (0+255),b
  3033  001F7A  0E7F               	movlw	high STR_3
  3034  001F7C  0101               	movlb	1	; () banked
  3035  001F7E  6F01               	movwf	(printf@f+1)& (0+255),b
  3036  001F80  EC5B  F000         	call	_printf	;wreg free
  3037                           
  3038                           ;screenDrawers.h: 61: break;
  3039  001F84  0012               	return	
  3040  001F86                     l8970:
  3041                           
  3042                           ;screenDrawers.h: 63: lcd_gotoxy(1, 1);
  3043  001F86  0E01               	movlw	1
  3044  001F88  0100               	movlb	0	; () banked
  3045  001F8A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3046  001F8C  0E01               	movlw	1
  3047  001F8E  ECE8  F027         	call	_lcd_gotoxy
  3048                           
  3049                           ;screenDrawers.h: 64: printf("Proceso en:     \n");
  3050  001F92  0E47               	movlw	low STR_4
  3051  001F94  0101               	movlb	1	; () banked
  3052  001F96  6F00               	movwf	printf@f& (0+255),b
  3053  001F98  0E7E               	movlw	high STR_4
  3054  001F9A  0101               	movlb	1	; () banked
  3055  001F9C  6F01               	movwf	(printf@f+1)& (0+255),b
  3056  001F9E  EC5B  F000         	call	_printf	;wreg free
  3057                           
  3058                           ;screenDrawers.h: 65: if (adv)
  3059  001FA2  0100               	movlb	0	; () banked
  3060  001FA4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3061  001FA6  0100               	movlb	0	; () banked
  3062  001FA8  B4D8               	btfsc	status,2,c
  3063  001FAA  D004               	goto	l8978
  3064                           
  3065                           ; BSR set to: 0
  3066                           ;screenDrawers.h: 66: lcd_putc('A');
  3067  001FAC  0E41               	movlw	65
  3068  001FAE  EC0E  F025         	call	_lcd_putc
  3069  001FB2  D003               	goto	l348
  3070  001FB4                     l8978:
  3071                           
  3072                           ;screenDrawers.h: 67: else
  3073                           ;screenDrawers.h: 68: lcd_putc(' ');
  3074  001FB4  0E20               	movlw	32
  3075  001FB6  EC0E  F025         	call	_lcd_putc
  3076  001FBA                     l348:
  3077                           
  3078                           ;screenDrawers.h: 69: lcd_gotoxy(2, 2);
  3079  001FBA  0E02               	movlw	2
  3080  001FBC  0100               	movlb	0	; () banked
  3081  001FBE  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3082  001FC0  0E02               	movlw	2
  3083  001FC2  ECE8  F027         	call	_lcd_gotoxy
  3084                           
  3085                           ;screenDrawers.h: 70: if(tVarProceso == 0)
  3086  001FC6  0100               	movlb	0	; () banked
  3087  001FC8  51E3               	movf	_tVarProceso& (0+255),w,b
  3088  001FCA  A4D8               	btfss	status,2,c
  3089  001FCC  D009               	goto	l8984
  3090                           
  3091                           ; BSR set to: 0
  3092                           ;screenDrawers.h: 71: printf("       kg        ");
  3093  001FCE  0E0D               	movlw	low STR_5
  3094  001FD0  0101               	movlb	1	; () banked
  3095  001FD2  6F00               	movwf	printf@f& (0+255),b
  3096  001FD4  0E7F               	movlw	high STR_5
  3097  001FD6  0101               	movlb	1	; () banked
  3098  001FD8  6F01               	movwf	(printf@f+1)& (0+255),b
  3099  001FDA  EC5B  F000         	call	_printf	;wreg free
  3100  001FDE  0012               	return	
  3101  001FE0                     l8984:
  3102                           
  3103                           ;screenDrawers.h: 72: else if(tVarProceso == 1)
  3104  001FE0  0100               	movlb	0	; () banked
  3105  001FE2  05E3               	decf	_tVarProceso& (0+255),w,b
  3106  001FE4  A4D8               	btfss	status,2,c
  3107  001FE6  D009               	goto	l8988
  3108                           
  3109                           ; BSR set to: 0
  3110                           ;screenDrawers.h: 73: printf("       m3       ");
  3111  001FE8  0E1F               	movlw	low STR_6
  3112  001FEA  0101               	movlb	1	; () banked
  3113  001FEC  6F00               	movwf	printf@f& (0+255),b
  3114  001FEE  0E7F               	movlw	high STR_6
  3115  001FF0  0101               	movlb	1	; () banked
  3116  001FF2  6F01               	movwf	(printf@f+1)& (0+255),b
  3117  001FF4  EC5B  F000         	call	_printf	;wreg free
  3118  001FF8  0012               	return	
  3119  001FFA                     l8988:
  3120                           
  3121                           ;screenDrawers.h: 74: else if(tVarProceso == 2)
  3122  001FFA  0E02               	movlw	2
  3123  001FFC  0100               	movlb	0	; () banked
  3124  001FFE  19E3               	xorwf	_tVarProceso& (0+255),w,b
  3125  002000  A4D8               	btfss	status,2,c
  3126  002002  0012               	return	
  3127                           
  3128                           ; BSR set to: 0
  3129                           ;screenDrawers.h: 75: printf("      sec       ");
  3130  002004  0E30               	movlw	low STR_7
  3131  002006  0101               	movlb	1	; () banked
  3132  002008  6F00               	movwf	printf@f& (0+255),b
  3133  00200A  0E7F               	movlw	high STR_7
  3134  00200C  0101               	movlb	1	; () banked
  3135  00200E  6F01               	movwf	(printf@f+1)& (0+255),b
  3136  002010  EC5B  F000         	call	_printf	;wreg free
  3137                           
  3138                           ;screenDrawers.h: 76: break;
  3139  002014  0012               	return	
  3140  002016                     l8992:
  3141                           
  3142                           ;screenDrawers.h: 78: lcd_gotoxy(1, 1);
  3143  002016  0E01               	movlw	1
  3144  002018  0100               	movlb	0	; () banked
  3145  00201A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3146  00201C  0E01               	movlw	1
  3147  00201E  ECE8  F027         	call	_lcd_gotoxy
  3148                           
  3149                           ;screenDrawers.h: 79: printf("Valor por Corte:\n");
  3150  002022  0EB3               	movlw	low STR_8
  3151  002024  0101               	movlb	1	; () banked
  3152  002026  6F00               	movwf	printf@f& (0+255),b
  3153  002028  0E7E               	movlw	high STR_8
  3154  00202A  0101               	movlb	1	; () banked
  3155  00202C  6F01               	movwf	(printf@f+1)& (0+255),b
  3156  00202E  EC5B  F000         	call	_printf	;wreg free
  3157                           
  3158                           ;screenDrawers.h: 80: if (adv)
  3159  002032  0100               	movlb	0	; () banked
  3160  002034  51C9               	movf	drawMenu@adv& (0+255),w,b
  3161  002036  0100               	movlb	0	; () banked
  3162  002038  B4D8               	btfsc	status,2,c
  3163  00203A  D004               	goto	l9000
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;screenDrawers.h: 81: lcd_putc('A');
  3167  00203C  0E41               	movlw	65
  3168  00203E  EC0E  F025         	call	_lcd_putc
  3169  002042  D003               	goto	l356
  3170  002044                     l9000:
  3171                           
  3172                           ;screenDrawers.h: 82: else
  3173                           ;screenDrawers.h: 83: lcd_putc(' ');
  3174  002044  0E20               	movlw	32
  3175  002046  EC0E  F025         	call	_lcd_putc
  3176  00204A                     l356:
  3177                           
  3178                           ;screenDrawers.h: 84: lcd_gotoxy(2, 2);
  3179  00204A  0E02               	movlw	2
  3180  00204C  0100               	movlb	0	; () banked
  3181  00204E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3182  002050  0E02               	movlw	2
  3183  002052  ECE8  F027         	call	_lcd_gotoxy
  3184                           
  3185                           ;screenDrawers.h: 85: if(tVarProceso == 0)
  3186  002056  0100               	movlb	0	; () banked
  3187  002058  51E3               	movf	_tVarProceso& (0+255),w,b
  3188  00205A  A4D8               	btfss	status,2,c
  3189  00205C  D011               	goto	l9006
  3190                           
  3191                           ; BSR set to: 0
  3192                           ;screenDrawers.h: 86: printf("   %3.3f kg   ", kgXcorte);
  3193  00205E  0EB3               	movlw	low STR_9
  3194  002060  0101               	movlb	1	; () banked
  3195  002062  6F00               	movwf	printf@f& (0+255),b
  3196  002064  0E7F               	movlw	high STR_9
  3197  002066  0101               	movlb	1	; () banked
  3198  002068  6F01               	movwf	(printf@f+1)& (0+255),b
  3199  00206A  C02F  F102         	movff	_kgXcorte,?_printf+2
  3200  00206E  C030  F103         	movff	_kgXcorte+1,?_printf+3
  3201  002072  C031  F104         	movff	_kgXcorte+2,?_printf+4
  3202  002076  C032  F105         	movff	_kgXcorte+3,?_printf+5
  3203  00207A  EC5B  F000         	call	_printf	;wreg free
  3204  00207E  0012               	return	
  3205  002080                     l9006:
  3206                           
  3207                           ;screenDrawers.h: 87: else if(tVarProceso == 1)
  3208  002080  0100               	movlb	0	; () banked
  3209  002082  05E3               	decf	_tVarProceso& (0+255),w,b
  3210  002084  A4D8               	btfss	status,2,c
  3211  002086  D011               	goto	l9010
  3212                           
  3213                           ; BSR set to: 0
  3214                           ;screenDrawers.h: 88: printf("   %3.3f m3   ", m3Xcorte);
  3215  002088  0EA4               	movlw	low STR_10
  3216  00208A  0101               	movlb	1	; () banked
  3217  00208C  6F00               	movwf	printf@f& (0+255),b
  3218  00208E  0E7F               	movlw	high STR_10
  3219  002090  0101               	movlb	1	; () banked
  3220  002092  6F01               	movwf	(printf@f+1)& (0+255),b
  3221  002094  C033  F102         	movff	_m3Xcorte,?_printf+2
  3222  002098  C034  F103         	movff	_m3Xcorte+1,?_printf+3
  3223  00209C  C035  F104         	movff	_m3Xcorte+2,?_printf+4
  3224  0020A0  C036  F105         	movff	_m3Xcorte+3,?_printf+5
  3225  0020A4  EC5B  F000         	call	_printf	;wreg free
  3226  0020A8  0012               	return	
  3227  0020AA                     l9010:
  3228                           
  3229                           ;screenDrawers.h: 89: else if(tVarProceso == 2)
  3230  0020AA  0E02               	movlw	2
  3231  0020AC  0100               	movlb	0	; () banked
  3232  0020AE  19E3               	xorwf	_tVarProceso& (0+255),w,b
  3233  0020B0  A4D8               	btfss	status,2,c
  3234  0020B2  0012               	return	
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;screenDrawers.h: 90: printf("   %3.3f sec  ", tiXcorte);
  3238  0020B4  0ED1               	movlw	low STR_11
  3239  0020B6  0101               	movlb	1	; () banked
  3240  0020B8  6F00               	movwf	printf@f& (0+255),b
  3241  0020BA  0E7F               	movlw	high STR_11
  3242  0020BC  0101               	movlb	1	; () banked
  3243  0020BE  6F01               	movwf	(printf@f+1)& (0+255),b
  3244  0020C0  C037  F102         	movff	_tiXcorte,?_printf+2
  3245  0020C4  C038  F103         	movff	_tiXcorte+1,?_printf+3
  3246  0020C8  C039  F104         	movff	_tiXcorte+2,?_printf+4
  3247  0020CC  C03A  F105         	movff	_tiXcorte+3,?_printf+5
  3248  0020D0  EC5B  F000         	call	_printf	;wreg free
  3249                           
  3250                           ;screenDrawers.h: 91: break;
  3251  0020D4  0012               	return	
  3252  0020D6                     l9014:
  3253                           
  3254                           ;screenDrawers.h: 93: lcd_gotoxy(1, 1);
  3255  0020D6  0E01               	movlw	1
  3256  0020D8  0100               	movlb	0	; () banked
  3257  0020DA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3258  0020DC  0E01               	movlw	1
  3259  0020DE  ECE8  F027         	call	_lcd_gotoxy
  3260                           
  3261                           ;screenDrawers.h: 94: printf("Cantidad Cortes:\n");
  3262  0020E2  0ED7               	movlw	low STR_12
  3263  0020E4  0101               	movlb	1	; () banked
  3264  0020E6  6F00               	movwf	printf@f& (0+255),b
  3265  0020E8  0E7E               	movlw	high STR_12
  3266  0020EA  0101               	movlb	1	; () banked
  3267  0020EC  6F01               	movwf	(printf@f+1)& (0+255),b
  3268  0020EE  EC5B  F000         	call	_printf	;wreg free
  3269                           
  3270                           ;screenDrawers.h: 95: if (adv)
  3271  0020F2  0100               	movlb	0	; () banked
  3272  0020F4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3273  0020F6  0100               	movlb	0	; () banked
  3274  0020F8  B4D8               	btfsc	status,2,c
  3275  0020FA  D004               	goto	l9022
  3276                           
  3277                           ; BSR set to: 0
  3278                           ;screenDrawers.h: 96: lcd_putc('A');
  3279  0020FC  0E41               	movlw	65
  3280  0020FE  EC0E  F025         	call	_lcd_putc
  3281  002102  D003               	goto	l364
  3282  002104                     l9022:
  3283                           
  3284                           ;screenDrawers.h: 97: else
  3285                           ;screenDrawers.h: 98: lcd_putc(' ');
  3286  002104  0E20               	movlw	32
  3287  002106  EC0E  F025         	call	_lcd_putc
  3288  00210A                     l364:
  3289                           
  3290                           ;screenDrawers.h: 99: lcd_gotoxy(2, 2);
  3291  00210A  0E02               	movlw	2
  3292  00210C  0100               	movlb	0	; () banked
  3293  00210E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3294  002110  0E02               	movlw	2
  3295  002112  ECE8  F027         	call	_lcd_gotoxy
  3296                           
  3297                           ;screenDrawers.h: 100: printf("      %d       ", numCortes);
  3298  002116  0E85               	movlw	low STR_13
  3299  002118  0101               	movlb	1	; () banked
  3300  00211A  6F00               	movwf	printf@f& (0+255),b
  3301  00211C  0E7F               	movlw	high STR_13
  3302  00211E  0101               	movlb	1	; () banked
  3303  002120  6F01               	movwf	(printf@f+1)& (0+255),b
  3304  002122  C0E1  F102         	movff	_numCortes,?_printf+2
  3305  002126  C0E2  F103         	movff	_numCortes+1,?_printf+3
  3306  00212A  EC5B  F000         	call	_printf	;wreg free
  3307                           
  3308                           ;screenDrawers.h: 101: break;
  3309  00212E  0012               	return	
  3310  002130                     l9026:
  3311                           
  3312                           ;screenDrawers.h: 103: lcd_gotoxy(1, 1);
  3313  002130  0E01               	movlw	1
  3314  002132  0100               	movlb	0	; () banked
  3315  002134  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3316  002136  0E01               	movlw	1
  3317  002138  ECE8  F027         	call	_lcd_gotoxy
  3318                           
  3319                           ;screenDrawers.h: 104: printf("Diametro Tubo:  \n");
  3320  00213C  0E6B               	movlw	low STR_14
  3321  00213E  0101               	movlb	1	; () banked
  3322  002140  6F00               	movwf	printf@f& (0+255),b
  3323  002142  0E7E               	movlw	high STR_14
  3324  002144  0101               	movlb	1	; () banked
  3325  002146  6F01               	movwf	(printf@f+1)& (0+255),b
  3326  002148  EC5B  F000         	call	_printf	;wreg free
  3327                           
  3328                           ;screenDrawers.h: 105: if (adv)
  3329  00214C  0100               	movlb	0	; () banked
  3330  00214E  51C9               	movf	drawMenu@adv& (0+255),w,b
  3331  002150  0100               	movlb	0	; () banked
  3332  002152  B4D8               	btfsc	status,2,c
  3333  002154  D004               	goto	l9034
  3334                           
  3335                           ; BSR set to: 0
  3336                           ;screenDrawers.h: 106: lcd_putc('A');
  3337  002156  0E41               	movlw	65
  3338  002158  EC0E  F025         	call	_lcd_putc
  3339  00215C  D003               	goto	l367
  3340  00215E                     l9034:
  3341                           
  3342                           ;screenDrawers.h: 107: else
  3343                           ;screenDrawers.h: 108: lcd_putc(' ');
  3344  00215E  0E20               	movlw	32
  3345  002160  EC0E  F025         	call	_lcd_putc
  3346  002164                     l367:
  3347                           
  3348                           ;screenDrawers.h: 109: lcd_gotoxy(2, 2);
  3349  002164  0E02               	movlw	2
  3350  002166  0100               	movlb	0	; () banked
  3351  002168  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3352  00216A  0E02               	movlw	2
  3353  00216C  ECE8  F027         	call	_lcd_gotoxy
  3354                           
  3355                           ;screenDrawers.h: 110: printf("   %3.3f mm   ", diamTubo);
  3356  002170  0EC2               	movlw	low STR_15
  3357  002172  0101               	movlb	1	; () banked
  3358  002174  6F00               	movwf	printf@f& (0+255),b
  3359  002176  0E7F               	movlw	high STR_15
  3360  002178  0101               	movlb	1	; () banked
  3361  00217A  6F01               	movwf	(printf@f+1)& (0+255),b
  3362  00217C  C0DD  F102         	movff	_diamTubo,?_printf+2
  3363  002180  C0DE  F103         	movff	_diamTubo+1,?_printf+3
  3364  002184  C0DF  F104         	movff	_diamTubo+2,?_printf+4
  3365  002188  C0E0  F105         	movff	_diamTubo+3,?_printf+5
  3366  00218C  EC5B  F000         	call	_printf	;wreg free
  3367                           
  3368                           ;screenDrawers.h: 111: break;
  3369  002190  0012               	return	
  3370  002192                     l9038:
  3371                           
  3372                           ;screenDrawers.h: 113: lcd_gotoxy(1, 1);
  3373  002192  0E01               	movlw	1
  3374  002194  0100               	movlb	0	; () banked
  3375  002196  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3376  002198  0E01               	movlw	1
  3377  00219A  ECE8  F027         	call	_lcd_gotoxy
  3378                           
  3379                           ;screenDrawers.h: 114: printf("Densidad Masa:  \n");
  3380  00219E  0E59               	movlw	low STR_16
  3381  0021A0  0101               	movlb	1	; () banked
  3382  0021A2  6F00               	movwf	printf@f& (0+255),b
  3383  0021A4  0E7E               	movlw	high STR_16
  3384  0021A6  0101               	movlb	1	; () banked
  3385  0021A8  6F01               	movwf	(printf@f+1)& (0+255),b
  3386  0021AA  EC5B  F000         	call	_printf	;wreg free
  3387                           
  3388                           ;screenDrawers.h: 115: if (adv)
  3389  0021AE  0100               	movlb	0	; () banked
  3390  0021B0  51C9               	movf	drawMenu@adv& (0+255),w,b
  3391  0021B2  0100               	movlb	0	; () banked
  3392  0021B4  B4D8               	btfsc	status,2,c
  3393  0021B6  D004               	goto	l9046
  3394                           
  3395                           ; BSR set to: 0
  3396                           ;screenDrawers.h: 116: lcd_putc('A');
  3397  0021B8  0E41               	movlw	65
  3398  0021BA  EC0E  F025         	call	_lcd_putc
  3399  0021BE  D003               	goto	l370
  3400  0021C0                     l9046:
  3401                           
  3402                           ;screenDrawers.h: 117: else
  3403                           ;screenDrawers.h: 118: lcd_putc(' ');
  3404  0021C0  0E20               	movlw	32
  3405  0021C2  EC0E  F025         	call	_lcd_putc
  3406  0021C6                     l370:
  3407                           
  3408                           ;screenDrawers.h: 119: lcd_gotoxy(2, 2);
  3409  0021C6  0E02               	movlw	2
  3410  0021C8  0100               	movlb	0	; () banked
  3411  0021CA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3412  0021CC  0E02               	movlw	2
  3413  0021CE  ECE8  F027         	call	_lcd_gotoxy
  3414                           
  3415                           ;screenDrawers.h: 120: printf("  %3.3f kg/m3 ", densidadMasa);
  3416  0021D2  0EEF               	movlw	low STR_17
  3417  0021D4  0101               	movlb	1	; () banked
  3418  0021D6  6F00               	movwf	printf@f& (0+255),b
  3419  0021D8  0E7F               	movlw	high STR_17
  3420  0021DA  0101               	movlb	1	; () banked
  3421  0021DC  6F01               	movwf	(printf@f+1)& (0+255),b
  3422  0021DE  C0D9  F102         	movff	_densidadMasa,?_printf+2
  3423  0021E2  C0DA  F103         	movff	_densidadMasa+1,?_printf+3
  3424  0021E6  C0DB  F104         	movff	_densidadMasa+2,?_printf+4
  3425  0021EA  C0DC  F105         	movff	_densidadMasa+3,?_printf+5
  3426  0021EE  EC5B  F000         	call	_printf	;wreg free
  3427                           
  3428                           ;screenDrawers.h: 121: break;
  3429  0021F2  0012               	return	
  3430  0021F4                     l9050:
  3431                           
  3432                           ;screenDrawers.h: 123: lcd_gotoxy(1, 1);
  3433  0021F4  0E01               	movlw	1
  3434  0021F6  0100               	movlb	0	; () banked
  3435  0021F8  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3436  0021FA  0E01               	movlw	1
  3437  0021FC  ECE8  F027         	call	_lcd_gotoxy
  3438                           
  3439                           ;screenDrawers.h: 124: printf("Velocidad Masa: \n");
  3440  002200  0E7D               	movlw	low STR_18
  3441  002202  0101               	movlb	1	; () banked
  3442  002204  6F00               	movwf	printf@f& (0+255),b
  3443  002206  0E7E               	movlw	high STR_18
  3444  002208  0101               	movlb	1	; () banked
  3445  00220A  6F01               	movwf	(printf@f+1)& (0+255),b
  3446  00220C  EC5B  F000         	call	_printf	;wreg free
  3447                           
  3448                           ;screenDrawers.h: 125: if (adv)
  3449  002210  0100               	movlb	0	; () banked
  3450  002212  51C9               	movf	drawMenu@adv& (0+255),w,b
  3451  002214  0100               	movlb	0	; () banked
  3452  002216  B4D8               	btfsc	status,2,c
  3453  002218  D004               	goto	l9058
  3454                           
  3455                           ; BSR set to: 0
  3456                           ;screenDrawers.h: 126: lcd_putc('A');
  3457  00221A  0E41               	movlw	65
  3458  00221C  EC0E  F025         	call	_lcd_putc
  3459  002220  D003               	goto	l373
  3460  002222                     l9058:
  3461                           
  3462                           ;screenDrawers.h: 127: else
  3463                           ;screenDrawers.h: 128: lcd_putc(' ');
  3464  002222  0E20               	movlw	32
  3465  002224  EC0E  F025         	call	_lcd_putc
  3466  002228                     l373:
  3467                           
  3468                           ;screenDrawers.h: 129: lcd_gotoxy(2, 2);
  3469  002228  0E02               	movlw	2
  3470  00222A  0100               	movlb	0	; () banked
  3471  00222C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3472  00222E  0E02               	movlw	2
  3473  002230  ECE8  F027         	call	_lcd_gotoxy
  3474                           
  3475                           ;screenDrawers.h: 130: printf("   %3.3f m/s  ", velocidadMasa);
  3476  002234  0EE0               	movlw	low STR_19
  3477  002236  0101               	movlb	1	; () banked
  3478  002238  6F00               	movwf	printf@f& (0+255),b
  3479  00223A  0E7F               	movlw	high STR_19
  3480  00223C  0101               	movlb	1	; () banked
  3481  00223E  6F01               	movwf	(printf@f+1)& (0+255),b
  3482  002240  C03B  F102         	movff	_velocidadMasa,?_printf+2
  3483  002244  C03C  F103         	movff	_velocidadMasa+1,?_printf+3
  3484  002248  C03D  F104         	movff	_velocidadMasa+2,?_printf+4
  3485  00224C  C03E  F105         	movff	_velocidadMasa+3,?_printf+5
  3486  002250  EC5B  F000         	call	_printf	;wreg free
  3487                           
  3488                           ;screenDrawers.h: 132: }
  3489                           ;screenDrawers.h: 133: }
  3490                           
  3491                           ;screenDrawers.h: 131: break;
  3492  002254  0012               	return	
  3493  002256                     l9064:
  3494  002256  0100               	movlb	0	; () banked
  3495  002258  51D4               	movf	_menuSection& (0+255),w,b
  3496                           
  3497                           ; Switch size 1, requested type "space"
  3498                           ; Number of cases is 7, Range of values is 0 to 6
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte           22    12 (average)
  3502                           ;	Chosen strategy is simple_byte
  3503  00225A  0A00               	xorlw	0	; case 0
  3504  00225C  B4D8               	btfsc	status,2,c
  3505  00225E  D655               	goto	l8954
  3506  002260  0A01               	xorlw	1	; case 1
  3507  002262  B4D8               	btfsc	status,2,c
  3508  002264  D690               	goto	l8970
  3509  002266  0A03               	xorlw	3	; case 2
  3510  002268  B4D8               	btfsc	status,2,c
  3511  00226A  D6D5               	goto	l8992
  3512  00226C  0A01               	xorlw	1	; case 3
  3513  00226E  B4D8               	btfsc	status,2,c
  3514  002270  D732               	goto	l9014
  3515  002272  0A07               	xorlw	7	; case 4
  3516  002274  B4D8               	btfsc	status,2,c
  3517  002276  D75C               	goto	l9026
  3518  002278  0A01               	xorlw	1	; case 5
  3519  00227A  B4D8               	btfsc	status,2,c
  3520  00227C  D78A               	goto	l9038
  3521  00227E  0A03               	xorlw	3	; case 6
  3522  002280  A4D8               	btfss	status,2,c
  3523  002282  0012               	return	
  3524  002284  D7B7               	goto	l9050
  3525  002286                     __end_of_drawMenu:
  3526                           	opt stack 0
  3527                           tblptru	equ	0xFF8
  3528                           tblptrh	equ	0xFF7
  3529                           tblptrl	equ	0xFF6
  3530                           tablat	equ	0xFF5
  3531                           prodh	equ	0xFF4
  3532                           prodl	equ	0xFF3
  3533                           intcon	equ	0xFF2
  3534                           postinc0	equ	0xFEE
  3535                           wreg	equ	0xFE8
  3536                           postdec1	equ	0xFE5
  3537                           fsr1l	equ	0xFE1
  3538                           indf2	equ	0xFDF
  3539                           fsr2h	equ	0xFDA
  3540                           fsr2l	equ	0xFD9
  3541                           status	equ	0xFD8
  3542                           
  3543 ;; *************** function _drawChanVal *****************
  3544 ;; Defined at:
  3545 ;;		line 136 in file "source/screenDrawers.h"
  3546 ;; Parameters:    Size  Location     Type
  3547 ;;		None
  3548 ;; Auto vars:     Size  Location     Type
  3549 ;;  i               2  105[BANK0 ] int 
  3550 ;; Return value:  Size  Location     Type
  3551 ;;                  1    wreg      void 
  3552 ;; Registers used:
  3553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3554 ;; Tracked objects:
  3555 ;;		On entry : 0/0
  3556 ;;		On exit  : 0/0
  3557 ;;		Unchanged: 0/0
  3558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3559 ;;      Params:         0       0       0       0       0       0       0
  3560 ;;      Locals:         0       2       0       0       0       0       0
  3561 ;;      Temps:          0       0       0       0       0       0       0
  3562 ;;      Totals:         0       2       0       0       0       0       0
  3563 ;;Total ram usage:        2 bytes
  3564 ;; Hardware stack levels used:    1
  3565 ;; Hardware stack levels required when called:   15
  3566 ;; This function calls:
  3567 ;;		_lcd_gotoxy
  3568 ;;		_printf
  3569 ;; This function is called by:
  3570 ;;		_drawScreen
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574                           	psect	text9
  3575  002DBE                     __ptext9:
  3576                           	opt stack 0
  3577  002DBE                     _drawChanVal:
  3578                           	opt stack 14
  3579                           
  3580                           ;screenDrawers.h: 137: switch (menuSection) {
  3581                           
  3582                           ;incstack = 0
  3583  002DBE  D112               	goto	l9130
  3584  002DC0                     l9068:
  3585                           
  3586                           ;screenDrawers.h: 141: int i;
  3587                           ;screenDrawers.h: 142: for (i = 0; i < 4; i++)
  3588  002DC0  0E00               	movlw	0
  3589  002DC2  0100               	movlb	0	; () banked
  3590  002DC4  6FCA               	movwf	(drawChanVal@i+1)& (0+255),b
  3591  002DC6  0E00               	movlw	0
  3592  002DC8  6FC9               	movwf	drawChanVal@i& (0+255),b
  3593  002DCA                     l9070:
  3594                           
  3595                           ; BSR set to: 0
  3596  002DCA  0100               	movlb	0	; () banked
  3597  002DCC  BFCA               	btfsc	(drawChanVal@i+1)& (0+255),7,b
  3598  002DCE  D008               	goto	l9074
  3599  002DD0  0100               	movlb	0	; () banked
  3600  002DD2  51CA               	movf	(drawChanVal@i+1)& (0+255),w,b
  3601  002DD4  E113               	bnz	l9080
  3602  002DD6  0E04               	movlw	4
  3603  002DD8  0100               	movlb	0	; () banked
  3604  002DDA  5DC9               	subwf	drawChanVal@i& (0+255),w,b
  3605  002DDC  B0D8               	btfsc	status,0,c
  3606  002DDE  D00E               	goto	l9080
  3607  002DE0                     l9074:
  3608                           
  3609                           ; BSR set to: 0
  3610                           ;screenDrawers.h: 143: questKMT[i] = ' ';
  3611  002DE0  0E3D               	movlw	low _questKMT
  3612  002DE2  0100               	movlb	0	; () banked
  3613  002DE4  25C9               	addwf	drawChanVal@i& (0+255),w,b
  3614  002DE6  6ED9               	movwf	fsr2l,c
  3615  002DE8  0E01               	movlw	high _questKMT
  3616  002DEA  0100               	movlb	0	; () banked
  3617  002DEC  21CA               	addwfc	(drawChanVal@i+1)& (0+255),w,b
  3618  002DEE  6EDA               	movwf	fsr2h,c
  3619  002DF0  0E20               	movlw	32
  3620  002DF2  6EDF               	movwf	indf2,c
  3621                           
  3622                           ; BSR set to: 0
  3623  002DF4  0100               	movlb	0	; () banked
  3624  002DF6  4BC9               	infsnz	drawChanVal@i& (0+255),f,b
  3625  002DF8  2BCA               	incf	(drawChanVal@i+1)& (0+255),f,b
  3626  002DFA  D7E7               	goto	l9070
  3627  002DFC                     l9080:
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;screenDrawers.h: 144: questKMT[selKMT] = 0b01111110;
  3631  002DFC  0100               	movlb	0	; () banked
  3632  002DFE  51D6               	movf	_selKMT& (0+255),w,b
  3633  002E00  0D01               	mullw	1
  3634  002E02  0E3D               	movlw	low _questKMT
  3635  002E04  24F3               	addwf	prodl,w,c
  3636  002E06  6ED9               	movwf	fsr2l,c
  3637  002E08  0E01               	movlw	high _questKMT
  3638  002E0A  20F4               	addwfc	prodh,w,c
  3639  002E0C  6EDA               	movwf	fsr2h,c
  3640  002E0E  0E7E               	movlw	126
  3641  002E10  6EDF               	movwf	indf2,c
  3642                           
  3643                           ; BSR set to: 0
  3644                           ;screenDrawers.h: 145: lcd_gotoxy(1, 1);
  3645  002E12  0E01               	movlw	1
  3646  002E14  0100               	movlb	0	; () banked
  3647  002E16  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3648  002E18  0E01               	movlw	1
  3649  002E1A  ECE8  F027         	call	_lcd_gotoxy
  3650                           
  3651                           ;screenDrawers.h: 146: printf("Proceso en:     \n");
  3652  002E1E  0E47               	movlw	low STR_4
  3653  002E20  0101               	movlb	1	; () banked
  3654  002E22  6F00               	movwf	printf@f& (0+255),b
  3655  002E24  0E7E               	movlw	high STR_4
  3656  002E26  0101               	movlb	1	; () banked
  3657  002E28  6F01               	movwf	(printf@f+1)& (0+255),b
  3658  002E2A  EC5B  F000         	call	_printf	;wreg free
  3659                           
  3660                           ;screenDrawers.h: 147: printf(" %ckg  %cm3  %csec ", questKMT[0], questKMT[1], questKMT[
      +                          2]);
  3661  002E2E  0EFC               	movlw	low STR_21
  3662  002E30  0101               	movlb	1	; () banked
  3663  002E32  6F00               	movwf	printf@f& (0+255),b
  3664  002E34  0E7D               	movlw	high STR_21
  3665  002E36  0101               	movlb	1	; () banked
  3666  002E38  6F01               	movwf	(printf@f+1)& (0+255),b
  3667  002E3A  C13D  F102         	movff	_questKMT,?_printf+2
  3668  002E3E  0101               	movlb	1	; () banked
  3669  002E40  6B03               	clrf	(?_printf+3)& (0+255),b
  3670  002E42  C13E  F104         	movff	_questKMT+1,?_printf+4
  3671  002E46  0101               	movlb	1	; () banked
  3672  002E48  6B05               	clrf	(?_printf+5)& (0+255),b
  3673  002E4A  C13F  F106         	movff	_questKMT+2,?_printf+6
  3674  002E4E  0101               	movlb	1	; () banked
  3675  002E50  6B07               	clrf	(?_printf+7)& (0+255),b
  3676  002E52  EC5B  F000         	call	_printf	;wreg free
  3677                           
  3678                           ;screenDrawers.h: 148: break;
  3679  002E56  0012               	return	
  3680  002E58                     l9088:
  3681                           
  3682                           ;screenDrawers.h: 150: lcd_gotoxy(1, 1);
  3683  002E58  0E01               	movlw	1
  3684  002E5A  0100               	movlb	0	; () banked
  3685  002E5C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3686  002E5E  0E01               	movlw	1
  3687  002E60  ECE8  F027         	call	_lcd_gotoxy
  3688                           
  3689                           ;screenDrawers.h: 151: printf("Valor por Corte:\n");
  3690  002E64  0EB3               	movlw	low STR_8
  3691  002E66  0101               	movlb	1	; () banked
  3692  002E68  6F00               	movwf	printf@f& (0+255),b
  3693  002E6A  0E7E               	movlw	high STR_8
  3694  002E6C  0101               	movlb	1	; () banked
  3695  002E6E  6F01               	movwf	(printf@f+1)& (0+255),b
  3696  002E70  EC5B  F000         	call	_printf	;wreg free
  3697                           
  3698                           ;screenDrawers.h: 152: if(tVarProceso == 0)
  3699  002E74  0100               	movlb	0	; () banked
  3700  002E76  51E3               	movf	_tVarProceso& (0+255),w,b
  3701  002E78  A4D8               	btfss	status,2,c
  3702  002E7A  D011               	goto	l9096
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;screenDrawers.h: 153: printf("   %3.3f kg   ", kgXcorte);
  3706  002E7C  0EB3               	movlw	low STR_9
  3707  002E7E  0101               	movlb	1	; () banked
  3708  002E80  6F00               	movwf	printf@f& (0+255),b
  3709  002E82  0E7F               	movlw	high STR_9
  3710  002E84  0101               	movlb	1	; () banked
  3711  002E86  6F01               	movwf	(printf@f+1)& (0+255),b
  3712  002E88  C02F  F102         	movff	_kgXcorte,?_printf+2
  3713  002E8C  C030  F103         	movff	_kgXcorte+1,?_printf+3
  3714  002E90  C031  F104         	movff	_kgXcorte+2,?_printf+4
  3715  002E94  C032  F105         	movff	_kgXcorte+3,?_printf+5
  3716  002E98  EC5B  F000         	call	_printf	;wreg free
  3717  002E9C  0012               	return	
  3718  002E9E                     l9096:
  3719                           
  3720                           ;screenDrawers.h: 154: else if(tVarProceso == 1)
  3721  002E9E  0100               	movlb	0	; () banked
  3722  002EA0  05E3               	decf	_tVarProceso& (0+255),w,b
  3723  002EA2  A4D8               	btfss	status,2,c
  3724  002EA4  D011               	goto	l9100
  3725                           
  3726                           ; BSR set to: 0
  3727                           ;screenDrawers.h: 155: printf("   %3.3f m3   ", m3Xcorte);
  3728  002EA6  0EA4               	movlw	low STR_10
  3729  002EA8  0101               	movlb	1	; () banked
  3730  002EAA  6F00               	movwf	printf@f& (0+255),b
  3731  002EAC  0E7F               	movlw	high STR_10
  3732  002EAE  0101               	movlb	1	; () banked
  3733  002EB0  6F01               	movwf	(printf@f+1)& (0+255),b
  3734  002EB2  C033  F102         	movff	_m3Xcorte,?_printf+2
  3735  002EB6  C034  F103         	movff	_m3Xcorte+1,?_printf+3
  3736  002EBA  C035  F104         	movff	_m3Xcorte+2,?_printf+4
  3737  002EBE  C036  F105         	movff	_m3Xcorte+3,?_printf+5
  3738  002EC2  EC5B  F000         	call	_printf	;wreg free
  3739  002EC6  0012               	return	
  3740  002EC8                     l9100:
  3741                           
  3742                           ;screenDrawers.h: 156: else if(tVarProceso == 2)
  3743  002EC8  0E02               	movlw	2
  3744  002ECA  0100               	movlb	0	; () banked
  3745  002ECC  19E3               	xorwf	_tVarProceso& (0+255),w,b
  3746  002ECE  A4D8               	btfss	status,2,c
  3747  002ED0  0012               	return	
  3748                           
  3749                           ; BSR set to: 0
  3750                           ;screenDrawers.h: 157: printf("   %3.3f sec  ", tiXcorte);
  3751  002ED2  0ED1               	movlw	low STR_11
  3752  002ED4  0101               	movlb	1	; () banked
  3753  002ED6  6F00               	movwf	printf@f& (0+255),b
  3754  002ED8  0E7F               	movlw	high STR_11
  3755  002EDA  0101               	movlb	1	; () banked
  3756  002EDC  6F01               	movwf	(printf@f+1)& (0+255),b
  3757  002EDE  C037  F102         	movff	_tiXcorte,?_printf+2
  3758  002EE2  C038  F103         	movff	_tiXcorte+1,?_printf+3
  3759  002EE6  C039  F104         	movff	_tiXcorte+2,?_printf+4
  3760  002EEA  C03A  F105         	movff	_tiXcorte+3,?_printf+5
  3761  002EEE  EC5B  F000         	call	_printf	;wreg free
  3762                           
  3763                           ;screenDrawers.h: 158: break;
  3764  002EF2  0012               	return	
  3765  002EF4                     l9104:
  3766                           
  3767                           ;screenDrawers.h: 160: lcd_gotoxy(1, 1);
  3768  002EF4  0E01               	movlw	1
  3769  002EF6  0100               	movlb	0	; () banked
  3770  002EF8  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3771  002EFA  0E01               	movlw	1
  3772  002EFC  ECE8  F027         	call	_lcd_gotoxy
  3773                           
  3774                           ;screenDrawers.h: 161: printf("Cantidad Cortes:\n");
  3775  002F00  0ED7               	movlw	low STR_12
  3776  002F02  0101               	movlb	1	; () banked
  3777  002F04  6F00               	movwf	printf@f& (0+255),b
  3778  002F06  0E7E               	movlw	high STR_12
  3779  002F08  0101               	movlb	1	; () banked
  3780  002F0A  6F01               	movwf	(printf@f+1)& (0+255),b
  3781  002F0C  EC5B  F000         	call	_printf	;wreg free
  3782                           
  3783                           ;screenDrawers.h: 162: printf("      %d       ", numCortes);
  3784  002F10  0E85               	movlw	low STR_13
  3785  002F12  0101               	movlb	1	; () banked
  3786  002F14  6F00               	movwf	printf@f& (0+255),b
  3787  002F16  0E7F               	movlw	high STR_13
  3788  002F18  0101               	movlb	1	; () banked
  3789  002F1A  6F01               	movwf	(printf@f+1)& (0+255),b
  3790  002F1C  C0E1  F102         	movff	_numCortes,?_printf+2
  3791  002F20  C0E2  F103         	movff	_numCortes+1,?_printf+3
  3792  002F24  EC5B  F000         	call	_printf	;wreg free
  3793                           
  3794                           ;screenDrawers.h: 163: break;
  3795  002F28  0012               	return	
  3796  002F2A                     l9110:
  3797                           
  3798                           ;screenDrawers.h: 165: lcd_gotoxy(1, 1);
  3799  002F2A  0E01               	movlw	1
  3800  002F2C  0100               	movlb	0	; () banked
  3801  002F2E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3802  002F30  0E01               	movlw	1
  3803  002F32  ECE8  F027         	call	_lcd_gotoxy
  3804                           
  3805                           ;screenDrawers.h: 166: printf("Diametro Tubo:  \n");
  3806  002F36  0E6B               	movlw	low STR_14
  3807  002F38  0101               	movlb	1	; () banked
  3808  002F3A  6F00               	movwf	printf@f& (0+255),b
  3809  002F3C  0E7E               	movlw	high STR_14
  3810  002F3E  0101               	movlb	1	; () banked
  3811  002F40  6F01               	movwf	(printf@f+1)& (0+255),b
  3812  002F42  EC5B  F000         	call	_printf	;wreg free
  3813                           
  3814                           ;screenDrawers.h: 167: printf("   %3.3f mm   ", diamTubo);
  3815  002F46  0EC2               	movlw	low STR_15
  3816  002F48  0101               	movlb	1	; () banked
  3817  002F4A  6F00               	movwf	printf@f& (0+255),b
  3818  002F4C  0E7F               	movlw	high STR_15
  3819  002F4E  0101               	movlb	1	; () banked
  3820  002F50  6F01               	movwf	(printf@f+1)& (0+255),b
  3821  002F52  C0DD  F102         	movff	_diamTubo,?_printf+2
  3822  002F56  C0DE  F103         	movff	_diamTubo+1,?_printf+3
  3823  002F5A  C0DF  F104         	movff	_diamTubo+2,?_printf+4
  3824  002F5E  C0E0  F105         	movff	_diamTubo+3,?_printf+5
  3825  002F62  EC5B  F000         	call	_printf	;wreg free
  3826                           
  3827                           ;screenDrawers.h: 168: break;
  3828  002F66  0012               	return	
  3829  002F68                     l9116:
  3830                           
  3831                           ;screenDrawers.h: 170: lcd_gotoxy(1, 1);
  3832  002F68  0E01               	movlw	1
  3833  002F6A  0100               	movlb	0	; () banked
  3834  002F6C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3835  002F6E  0E01               	movlw	1
  3836  002F70  ECE8  F027         	call	_lcd_gotoxy
  3837                           
  3838                           ;screenDrawers.h: 171: printf("Densidad Masa:  \n");
  3839  002F74  0E59               	movlw	low STR_16
  3840  002F76  0101               	movlb	1	; () banked
  3841  002F78  6F00               	movwf	printf@f& (0+255),b
  3842  002F7A  0E7E               	movlw	high STR_16
  3843  002F7C  0101               	movlb	1	; () banked
  3844  002F7E  6F01               	movwf	(printf@f+1)& (0+255),b
  3845  002F80  EC5B  F000         	call	_printf	;wreg free
  3846                           
  3847                           ;screenDrawers.h: 172: printf("  %3.3f kg/m3 ", densidadMasa);
  3848  002F84  0EEF               	movlw	low STR_17
  3849  002F86  0101               	movlb	1	; () banked
  3850  002F88  6F00               	movwf	printf@f& (0+255),b
  3851  002F8A  0E7F               	movlw	high STR_17
  3852  002F8C  0101               	movlb	1	; () banked
  3853  002F8E  6F01               	movwf	(printf@f+1)& (0+255),b
  3854  002F90  C0D9  F102         	movff	_densidadMasa,?_printf+2
  3855  002F94  C0DA  F103         	movff	_densidadMasa+1,?_printf+3
  3856  002F98  C0DB  F104         	movff	_densidadMasa+2,?_printf+4
  3857  002F9C  C0DC  F105         	movff	_densidadMasa+3,?_printf+5
  3858  002FA0  EC5B  F000         	call	_printf	;wreg free
  3859                           
  3860                           ;screenDrawers.h: 173: break;
  3861  002FA4  0012               	return	
  3862  002FA6                     l9122:
  3863                           
  3864                           ;screenDrawers.h: 175: lcd_gotoxy(1, 1);
  3865  002FA6  0E01               	movlw	1
  3866  002FA8  0100               	movlb	0	; () banked
  3867  002FAA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3868  002FAC  0E01               	movlw	1
  3869  002FAE  ECE8  F027         	call	_lcd_gotoxy
  3870                           
  3871                           ;screenDrawers.h: 176: printf("Velocidad Masa: \n");
  3872  002FB2  0E7D               	movlw	low STR_18
  3873  002FB4  0101               	movlb	1	; () banked
  3874  002FB6  6F00               	movwf	printf@f& (0+255),b
  3875  002FB8  0E7E               	movlw	high STR_18
  3876  002FBA  0101               	movlb	1	; () banked
  3877  002FBC  6F01               	movwf	(printf@f+1)& (0+255),b
  3878  002FBE  EC5B  F000         	call	_printf	;wreg free
  3879                           
  3880                           ;screenDrawers.h: 177: printf("   %3.3f m/s  ", velocidadMasa);
  3881  002FC2  0EE0               	movlw	low STR_19
  3882  002FC4  0101               	movlb	1	; () banked
  3883  002FC6  6F00               	movwf	printf@f& (0+255),b
  3884  002FC8  0E7F               	movlw	high STR_19
  3885  002FCA  0101               	movlb	1	; () banked
  3886  002FCC  6F01               	movwf	(printf@f+1)& (0+255),b
  3887  002FCE  C03B  F102         	movff	_velocidadMasa,?_printf+2
  3888  002FD2  C03C  F103         	movff	_velocidadMasa+1,?_printf+3
  3889  002FD6  C03D  F104         	movff	_velocidadMasa+2,?_printf+4
  3890  002FDA  C03E  F105         	movff	_velocidadMasa+3,?_printf+5
  3891  002FDE  EC5B  F000         	call	_printf	;wreg free
  3892                           
  3893                           ;screenDrawers.h: 179: }
  3894                           ;screenDrawers.h: 180: }
  3895                           
  3896                           ;screenDrawers.h: 178: break;
  3897  002FE2  0012               	return	
  3898  002FE4                     l9130:
  3899  002FE4  0100               	movlb	0	; () banked
  3900  002FE6  51D4               	movf	_menuSection& (0+255),w,b
  3901                           
  3902                           ; Switch size 1, requested type "space"
  3903                           ; Number of cases is 7, Range of values is 0 to 6
  3904                           ; switch strategies available:
  3905                           ; Name         Instructions Cycles
  3906                           ; simple_byte           22    12 (average)
  3907                           ;	Chosen strategy is simple_byte
  3908  002FE8  0A00               	xorlw	0	; case 0
  3909  002FEA  B4D8               	btfsc	status,2,c
  3910  002FEC  0012               	return	
  3911  002FEE  0A01               	xorlw	1	; case 1
  3912  002FF0  B4D8               	btfsc	status,2,c
  3913  002FF2  D6E6               	goto	l9068
  3914  002FF4  0A03               	xorlw	3	; case 2
  3915  002FF6  B4D8               	btfsc	status,2,c
  3916  002FF8  D72F               	goto	l9088
  3917  002FFA  0A01               	xorlw	1	; case 3
  3918  002FFC  B4D8               	btfsc	status,2,c
  3919  002FFE  D77A               	goto	l9104
  3920  003000  0A07               	xorlw	7	; case 4
  3921  003002  B4D8               	btfsc	status,2,c
  3922  003004  D792               	goto	l9110
  3923  003006  0A01               	xorlw	1	; case 5
  3924  003008  B4D8               	btfsc	status,2,c
  3925  00300A  D7AE               	goto	l9116
  3926  00300C  0A03               	xorlw	3	; case 6
  3927  00300E  A4D8               	btfss	status,2,c
  3928  003010  0012               	return	
  3929  003012  D7C9               	goto	l9122
  3930  003014                     __end_of_drawChanVal:
  3931                           	opt stack 0
  3932                           tblptru	equ	0xFF8
  3933                           tblptrh	equ	0xFF7
  3934                           tblptrl	equ	0xFF6
  3935                           tablat	equ	0xFF5
  3936                           prodh	equ	0xFF4
  3937                           prodl	equ	0xFF3
  3938                           intcon	equ	0xFF2
  3939                           postinc0	equ	0xFEE
  3940                           wreg	equ	0xFE8
  3941                           postdec1	equ	0xFE5
  3942                           fsr1l	equ	0xFE1
  3943                           indf2	equ	0xFDF
  3944                           fsr2h	equ	0xFDA
  3945                           fsr2l	equ	0xFD9
  3946                           status	equ	0xFD8
  3947                           
  3948 ;; *************** function _drawBadPass *****************
  3949 ;; Defined at:
  3950 ;;		line 202 in file "source/screenDrawers.h"
  3951 ;; Parameters:    Size  Location     Type
  3952 ;;		None
  3953 ;; Auto vars:     Size  Location     Type
  3954 ;;		None
  3955 ;; Return value:  Size  Location     Type
  3956 ;;                  1    wreg      void 
  3957 ;; Registers used:
  3958 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3959 ;; Tracked objects:
  3960 ;;		On entry : 0/0
  3961 ;;		On exit  : 0/0
  3962 ;;		Unchanged: 0/0
  3963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3964 ;;      Params:         0       0       0       0       0       0       0
  3965 ;;      Locals:         0       0       0       0       0       0       0
  3966 ;;      Temps:          0       0       0       0       0       0       0
  3967 ;;      Totals:         0       0       0       0       0       0       0
  3968 ;;Total ram usage:        0 bytes
  3969 ;; Hardware stack levels used:    1
  3970 ;; Hardware stack levels required when called:   15
  3971 ;; This function calls:
  3972 ;;		_lcd_gotoxy
  3973 ;;		_printf
  3974 ;; This function is called by:
  3975 ;;		_drawScreen
  3976 ;; This function uses a non-reentrant model
  3977 ;;
  3978                           
  3979                           	psect	text10
  3980  005000                     __ptext10:
  3981                           	opt stack 0
  3982  005000                     _drawBadPass:
  3983                           	opt stack 14
  3984                           
  3985                           ;screenDrawers.h: 203: lcd_gotoxy(1, 1);
  3986                           
  3987                           ;incstack = 0
  3988  005000  0E01               	movlw	1
  3989  005002  0100               	movlb	0	; () banked
  3990  005004  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3991  005006  0E01               	movlw	1
  3992  005008  ECE8  F027         	call	_lcd_gotoxy
  3993                           
  3994                           ;screenDrawers.h: 204: printf("Contrasena      \n");
  3995  00500C  0E23               	movlw	low STR_36
  3996  00500E  0101               	movlb	1	; () banked
  3997  005010  6F00               	movwf	printf@f& (0+255),b
  3998  005012  0E7E               	movlw	high STR_36
  3999  005014  0101               	movlb	1	; () banked
  4000  005016  6F01               	movwf	(printf@f+1)& (0+255),b
  4001  005018  EC5B  F000         	call	_printf	;wreg free
  4002                           
  4003                           ;screenDrawers.h: 205: printf("     Erronea    ");
  4004  00501C  0E41               	movlw	low STR_37
  4005  00501E  0101               	movlb	1	; () banked
  4006  005020  6F00               	movwf	printf@f& (0+255),b
  4007  005022  0E7F               	movlw	high STR_37
  4008  005024  0101               	movlb	1	; () banked
  4009  005026  6F01               	movwf	(printf@f+1)& (0+255),b
  4010  005028  EC5B  F000         	call	_printf	;wreg free
  4011  00502C  0012               	return		;funcret
  4012  00502E                     __end_of_drawBadPass:
  4013                           	opt stack 0
  4014                           tblptru	equ	0xFF8
  4015                           tblptrh	equ	0xFF7
  4016                           tblptrl	equ	0xFF6
  4017                           tablat	equ	0xFF5
  4018                           prodh	equ	0xFF4
  4019                           prodl	equ	0xFF3
  4020                           intcon	equ	0xFF2
  4021                           postinc0	equ	0xFEE
  4022                           wreg	equ	0xFE8
  4023                           postdec1	equ	0xFE5
  4024                           fsr1l	equ	0xFE1
  4025                           indf2	equ	0xFDF
  4026                           fsr2h	equ	0xFDA
  4027                           fsr2l	equ	0xFD9
  4028                           status	equ	0xFD8
  4029                           
  4030 ;; *************** function _drawAdvON *****************
  4031 ;; Defined at:
  4032 ;;		line 208 in file "source/screenDrawers.h"
  4033 ;; Parameters:    Size  Location     Type
  4034 ;;		None
  4035 ;; Auto vars:     Size  Location     Type
  4036 ;;		None
  4037 ;; Return value:  Size  Location     Type
  4038 ;;                  1    wreg      void 
  4039 ;; Registers used:
  4040 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4041 ;; Tracked objects:
  4042 ;;		On entry : 0/0
  4043 ;;		On exit  : 0/0
  4044 ;;		Unchanged: 0/0
  4045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4046 ;;      Params:         0       0       0       0       0       0       0
  4047 ;;      Locals:         0       0       0       0       0       0       0
  4048 ;;      Temps:          0       0       0       0       0       0       0
  4049 ;;      Totals:         0       0       0       0       0       0       0
  4050 ;;Total ram usage:        0 bytes
  4051 ;; Hardware stack levels used:    1
  4052 ;; Hardware stack levels required when called:   15
  4053 ;; This function calls:
  4054 ;;		_lcd_gotoxy
  4055 ;;		_printf
  4056 ;; This function is called by:
  4057 ;;		_drawScreen
  4058 ;; This function uses a non-reentrant model
  4059 ;;
  4060                           
  4061                           	psect	text11
  4062  00502E                     __ptext11:
  4063                           	opt stack 0
  4064  00502E                     _drawAdvON:
  4065                           	opt stack 14
  4066                           
  4067                           ;screenDrawers.h: 209: lcd_gotoxy(1, 1);
  4068                           
  4069                           ;incstack = 0
  4070  00502E  0E01               	movlw	1
  4071  005030  0100               	movlb	0	; () banked
  4072  005032  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4073  005034  0E01               	movlw	1
  4074  005036  ECE8  F027         	call	_lcd_gotoxy
  4075                           
  4076                           ;screenDrawers.h: 210: printf("Modo Configurar:\n");
  4077  00503A  0EC5               	movlw	low STR_38
  4078  00503C  0101               	movlb	1	; () banked
  4079  00503E  6F00               	movwf	printf@f& (0+255),b
  4080  005040  0E7E               	movlw	high STR_38
  4081  005042  0101               	movlb	1	; () banked
  4082  005044  6F01               	movwf	(printf@f+1)& (0+255),b
  4083  005046  EC5B  F000         	call	_printf	;wreg free
  4084                           
  4085                           ;screenDrawers.h: 211: printf("    Iniciado    ");
  4086  00504A  0E52               	movlw	low STR_39
  4087  00504C  0101               	movlb	1	; () banked
  4088  00504E  6F00               	movwf	printf@f& (0+255),b
  4089  005050  0E7F               	movlw	high STR_39
  4090  005052  0101               	movlb	1	; () banked
  4091  005054  6F01               	movwf	(printf@f+1)& (0+255),b
  4092  005056  EC5B  F000         	call	_printf	;wreg free
  4093  00505A  0012               	return		;funcret
  4094  00505C                     __end_of_drawAdvON:
  4095                           	opt stack 0
  4096                           tblptru	equ	0xFF8
  4097                           tblptrh	equ	0xFF7
  4098                           tblptrl	equ	0xFF6
  4099                           tablat	equ	0xFF5
  4100                           prodh	equ	0xFF4
  4101                           prodl	equ	0xFF3
  4102                           intcon	equ	0xFF2
  4103                           postinc0	equ	0xFEE
  4104                           wreg	equ	0xFE8
  4105                           postdec1	equ	0xFE5
  4106                           fsr1l	equ	0xFE1
  4107                           indf2	equ	0xFDF
  4108                           fsr2h	equ	0xFDA
  4109                           fsr2l	equ	0xFD9
  4110                           status	equ	0xFD8
  4111                           
  4112 ;; *************** function _drawAdvOFF *****************
  4113 ;; Defined at:
  4114 ;;		line 214 in file "source/screenDrawers.h"
  4115 ;; Parameters:    Size  Location     Type
  4116 ;;		None
  4117 ;; Auto vars:     Size  Location     Type
  4118 ;;		None
  4119 ;; Return value:  Size  Location     Type
  4120 ;;                  1    wreg      void 
  4121 ;; Registers used:
  4122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4123 ;; Tracked objects:
  4124 ;;		On entry : 0/0
  4125 ;;		On exit  : 0/0
  4126 ;;		Unchanged: 0/0
  4127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4128 ;;      Params:         0       0       0       0       0       0       0
  4129 ;;      Locals:         0       0       0       0       0       0       0
  4130 ;;      Temps:          0       0       0       0       0       0       0
  4131 ;;      Totals:         0       0       0       0       0       0       0
  4132 ;;Total ram usage:        0 bytes
  4133 ;; Hardware stack levels used:    1
  4134 ;; Hardware stack levels required when called:   15
  4135 ;; This function calls:
  4136 ;;		_lcd_gotoxy
  4137 ;;		_printf
  4138 ;; This function is called by:
  4139 ;;		_drawScreen
  4140 ;; This function uses a non-reentrant model
  4141 ;;
  4142                           
  4143                           	psect	text12
  4144  00505C                     __ptext12:
  4145                           	opt stack 0
  4146  00505C                     _drawAdvOFF:
  4147                           	opt stack 14
  4148                           
  4149                           ;screenDrawers.h: 215: lcd_gotoxy(1, 1);
  4150                           
  4151                           ;incstack = 0
  4152  00505C  0E01               	movlw	1
  4153  00505E  0100               	movlb	0	; () banked
  4154  005060  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4155  005062  0E01               	movlw	1
  4156  005064  ECE8  F027         	call	_lcd_gotoxy
  4157                           
  4158                           ;screenDrawers.h: 216: printf("Modo Configurar:\n");
  4159  005068  0EC5               	movlw	low STR_38
  4160  00506A  0101               	movlb	1	; () banked
  4161  00506C  6F00               	movwf	printf@f& (0+255),b
  4162  00506E  0E7E               	movlw	high STR_38
  4163  005070  0101               	movlb	1	; () banked
  4164  005072  6F01               	movwf	(printf@f+1)& (0+255),b
  4165  005074  EC5B  F000         	call	_printf	;wreg free
  4166                           
  4167                           ;screenDrawers.h: 217: printf("   Finalizado   ");
  4168  005078  0E74               	movlw	low STR_41
  4169  00507A  0101               	movlb	1	; () banked
  4170  00507C  6F00               	movwf	printf@f& (0+255),b
  4171  00507E  0E7F               	movlw	high STR_41
  4172  005080  0101               	movlb	1	; () banked
  4173  005082  6F01               	movwf	(printf@f+1)& (0+255),b
  4174  005084  EC5B  F000         	call	_printf	;wreg free
  4175  005088  0012               	return		;funcret
  4176  00508A                     __end_of_drawAdvOFF:
  4177                           	opt stack 0
  4178                           tblptru	equ	0xFF8
  4179                           tblptrh	equ	0xFF7
  4180                           tblptrl	equ	0xFF6
  4181                           tablat	equ	0xFF5
  4182                           prodh	equ	0xFF4
  4183                           prodl	equ	0xFF3
  4184                           intcon	equ	0xFF2
  4185                           postinc0	equ	0xFEE
  4186                           wreg	equ	0xFE8
  4187                           postdec1	equ	0xFE5
  4188                           fsr1l	equ	0xFE1
  4189                           indf2	equ	0xFDF
  4190                           fsr2h	equ	0xFDA
  4191                           fsr2l	equ	0xFD9
  4192                           status	equ	0xFD8
  4193                           
  4194 ;; *************** function _printf *****************
  4195 ;; Defined at:
  4196 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4197 ;; Parameters:    Size  Location     Type
  4198 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  4199 ;;		 -> STR_45(19), STR_44(18), STR_43(18), STR_42(18), 
  4200 ;;		 -> STR_41(17), STR_40(18), STR_39(17), STR_38(18), 
  4201 ;;		 -> STR_37(17), STR_36(18), STR_35(25), STR_34(18), 
  4202 ;;		 -> STR_33(15), STR_32(18), STR_31(15), STR_30(18), 
  4203 ;;		 -> STR_29(15), STR_28(18), STR_27(16), STR_26(18), 
  4204 ;;		 -> STR_25(15), STR_24(15), STR_23(15), STR_22(18), 
  4205 ;;		 -> STR_21(20), STR_20(18), STR_19(15), STR_18(18), 
  4206 ;;		 -> STR_17(15), STR_16(18), STR_15(15), STR_14(18), 
  4207 ;;		 -> STR_13(16), STR_12(18), STR_11(15), STR_10(15), 
  4208 ;;		 -> STR_9(15), STR_8(18), STR_7(17), STR_6(17), 
  4209 ;;		 -> STR_5(18), STR_4(18), STR_3(17), STR_2(15), 
  4210 ;;		 -> STR_1(18), 
  4211 ;; Auto vars:     Size  Location     Type
  4212 ;;  fval            4   42[BANK1 ] PTR const unsigned char 
  4213 ;;  val             4   34[BANK1 ] unsigned long 
  4214 ;;  tmpval          4   30[BANK1 ] struct .
  4215 ;;  prec            2   46[BANK1 ] int 
  4216 ;;  width           2   40[BANK1 ] int 
  4217 ;;  exp             2   38[BANK1 ] int 
  4218 ;;  flag            2   28[BANK1 ] unsigned short 
  4219 ;;  ap              2   26[BANK1 ] PTR void [1]
  4220 ;;		 -> ?_printf(2), 
  4221 ;;  len             2   24[BANK1 ] unsigned int 
  4222 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  4223 ;;		 -> printf@c(1), 
  4224 ;;  c               1   48[BANK1 ] char 
  4225 ;;  d               1    0        unsigned char 
  4226 ;; Return value:  Size  Location     Type
  4227 ;;                  2    0[BANK1 ] int 
  4228 ;; Registers used:
  4229 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4230 ;; Tracked objects:
  4231 ;;		On entry : 0/0
  4232 ;;		On exit  : 0/0
  4233 ;;		Unchanged: 0/0
  4234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4235 ;;      Params:         0       0      18       0       0       0       0
  4236 ;;      Locals:         0       0      31       0       0       0       0
  4237 ;;      Temps:          0       4       0       0       0       0       0
  4238 ;;      Totals:         0       4      49       0       0       0       0
  4239 ;;Total ram usage:       53 bytes
  4240 ;; Hardware stack levels used:    1
  4241 ;; Hardware stack levels required when called:   14
  4242 ;; This function calls:
  4243 ;;		___awdiv
  4244 ;;		___fladd
  4245 ;;		___flge
  4246 ;;		___flmul
  4247 ;;		___flneg
  4248 ;;		___flsub
  4249 ;;		___fltol
  4250 ;;		___lldiv
  4251 ;;		___llmod
  4252 ;;		___wmul
  4253 ;;		___xxtofl
  4254 ;;		__div_to_l_
  4255 ;;		__tdiv_to_l_
  4256 ;;		_fround
  4257 ;;		_isdigit
  4258 ;;		_putch
  4259 ;;		_scale
  4260 ;; This function is called by:
  4261 ;;		_drawMenu
  4262 ;;		_drawChanVal
  4263 ;;		_drawPassWord
  4264 ;;		_drawBadPass
  4265 ;;		_drawAdvON
  4266 ;;		_drawAdvOFF
  4267 ;;		_drawSNquest
  4268 ;; This function uses a non-reentrant model
  4269 ;;
  4270                           
  4271                           	psect	text13
  4272  0000B6                     __ptext13:
  4273                           	opt stack 0
  4274  0000B6                     _printf:
  4275                           	opt stack 14
  4276                           
  4277                           ;doprnt.c: 466: va_list ap;
  4278                           ;doprnt.c: 499: signed char c;
  4279                           ;doprnt.c: 501: int width;
  4280                           ;doprnt.c: 504: int prec;
  4281                           ;doprnt.c: 508: unsigned short flag;
  4282                           ;doprnt.c: 515: char d;
  4283                           ;doprnt.c: 516: double fval;
  4284                           ;doprnt.c: 517: int exp;
  4285                           ;doprnt.c: 523: union {
  4286                           ;doprnt.c: 524: unsigned long vd;
  4287                           ;doprnt.c: 525: double integ;
  4288                           ;doprnt.c: 526: } tmpval;
  4289                           ;doprnt.c: 528: unsigned long val;
  4290                           ;doprnt.c: 529: unsigned len;
  4291                           ;doprnt.c: 530: const char * cp;
  4292                           ;doprnt.c: 533: *ap = __va_start();
  4293                           
  4294                           ;incstack = 0
  4295  0000B6  0E02               	movlw	low (?_printf+2)
  4296  0000B8  0101               	movlb	1	; () banked
  4297  0000BA  6F1A               	movwf	printf@ap& (0+255),b
  4298  0000BC  0E01               	movlw	high (?_printf+2)
  4299  0000BE  0101               	movlb	1	; () banked
  4300  0000C0  6F1B               	movwf	(printf@ap+1)& (0+255),b
  4301                           
  4302                           ;doprnt.c: 536: while(c = *f++) {
  4303  0000C2  EF82  F006         	goto	l8866
  4304  0000C6                     l8568:
  4305                           
  4306                           ; BSR set to: 1
  4307                           ;doprnt.c: 538: if(c != '%')
  4308  0000C6  0E25               	movlw	37
  4309  0000C8  0101               	movlb	1	; () banked
  4310  0000CA  1930               	xorwf	printf@c& (0+255),w,b
  4311  0000CC  B4D8               	btfsc	status,2,c
  4312  0000CE  D006               	goto	l8572
  4313                           
  4314                           ; BSR set to: 1
  4315                           ;doprnt.c: 540: {
  4316                           ;doprnt.c: 541: (putch(c) );
  4317  0000D0  0101               	movlb	1	; () banked
  4318  0000D2  5130               	movf	printf@c& (0+255),w,b
  4319  0000D4  ECE1  F028         	call	_putch
  4320                           
  4321                           ;doprnt.c: 542: continue;
  4322  0000D8  EF82  F006         	goto	l8866
  4323  0000DC                     l8572:
  4324                           
  4325                           ;doprnt.c: 543: }
  4326                           ;doprnt.c: 546: width = 0;
  4327  0000DC  0E00               	movlw	0
  4328  0000DE  0101               	movlb	1	; () banked
  4329  0000E0  6F29               	movwf	(printf@width+1)& (0+255),b
  4330  0000E2  0E00               	movlw	0
  4331  0000E4  6F28               	movwf	printf@width& (0+255),b
  4332                           
  4333                           ;doprnt.c: 548: flag = 0;
  4334  0000E6  0E00               	movlw	0
  4335  0000E8  0101               	movlb	1	; () banked
  4336  0000EA  6F1D               	movwf	(printf@flag+1)& (0+255),b
  4337  0000EC  0E00               	movlw	0
  4338  0000EE  6F1C               	movwf	printf@flag& (0+255),b
  4339                           
  4340                           ; BSR set to: 1
  4341                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4342  0000F0  C100  FFF6         	movff	printf@f,tblptrl
  4343  0000F4  C101  FFF7         	movff	printf@f+1,tblptrh
  4344  0000F8                     	if	0	;tblptru may be non-zero
  4345  0000F8                     	endif
  4346  0000F8                     	if	0	;tblptru may be non-zero
  4347  0000F8                     	endif
  4348  0000F8  0008               	tblrd		*
  4349  0000FA  50F5               	movf	tablat,w,c
  4350  0000FC  EC5B  F028         	call	_isdigit
  4351  000100  A0D8               	btfss	status,0,c
  4352  000102  D040               	goto	l8586
  4353                           
  4354                           ;doprnt.c: 598: width = 0;
  4355  000104  0E00               	movlw	0
  4356  000106  0101               	movlb	1	; () banked
  4357  000108  6F29               	movwf	(printf@width+1)& (0+255),b
  4358  00010A  0E00               	movlw	0
  4359  00010C  6F28               	movwf	printf@width& (0+255),b
  4360  00010E                     l8578:
  4361                           
  4362                           ;doprnt.c: 600: width *= 10;
  4363  00010E  C128  F075         	movff	printf@width,___wmul@multiplier
  4364  000112  C129  F076         	movff	printf@width+1,___wmul@multiplier+1
  4365  000116  0E00               	movlw	0
  4366  000118  0100               	movlb	0	; () banked
  4367  00011A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4368  00011C  0E0A               	movlw	10
  4369  00011E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4370  000120  ECB4  F027         	call	___wmul	;wreg free
  4371  000124  C075  F128         	movff	?___wmul,printf@width
  4372  000128  C076  F129         	movff	?___wmul+1,printf@width+1
  4373                           
  4374                           ;doprnt.c: 601: width += *f++ - '0';
  4375  00012C  0ED0               	movlw	208
  4376  00012E  0100               	movlb	0	; () banked
  4377  000130  6FC5               	movwf	??_printf& (0+255),b
  4378  000132  0EFF               	movlw	255
  4379  000134  0100               	movlb	0	; () banked
  4380  000136  6FC6               	movwf	(??_printf+1)& (0+255),b
  4381  000138  C100  FFF6         	movff	printf@f,tblptrl
  4382  00013C  C101  FFF7         	movff	printf@f+1,tblptrh
  4383  000140                     	if	0	;tblptru may be non-zero
  4384  000140                     	endif
  4385  000140                     	if	0	;tblptru may be non-zero
  4386  000140                     	endif
  4387  000140  0008               	tblrd		*
  4388  000142  50F5               	movf	tablat,w,c
  4389  000144  0100               	movlb	0	; () banked
  4390  000146  6FC7               	movwf	(??_printf+2)& (0+255),b
  4391  000148  6BC8               	clrf	(??_printf+3)& (0+255),b
  4392  00014A  0100               	movlb	0	; () banked
  4393  00014C  51C5               	movf	??_printf& (0+255),w,b
  4394  00014E  0100               	movlb	0	; () banked
  4395  000150  27C7               	addwf	(??_printf+2)& (0+255),f,b
  4396  000152  0100               	movlb	0	; () banked
  4397  000154  51C6               	movf	(??_printf+1)& (0+255),w,b
  4398  000156  0100               	movlb	0	; () banked
  4399  000158  23C8               	addwfc	(??_printf+3)& (0+255),f,b
  4400  00015A  0100               	movlb	0	; () banked
  4401  00015C  51C7               	movf	(??_printf+2)& (0+255),w,b
  4402  00015E  0101               	movlb	1	; () banked
  4403  000160  2728               	addwf	printf@width& (0+255),f,b
  4404  000162  0100               	movlb	0	; () banked
  4405  000164  51C8               	movf	(??_printf+3)& (0+255),w,b
  4406  000166  0101               	movlb	1	; () banked
  4407  000168  2329               	addwfc	(printf@width+1)& (0+255),f,b
  4408                           
  4409                           ; BSR set to: 1
  4410  00016A  0101               	movlb	1	; () banked
  4411  00016C  4B00               	infsnz	printf@f& (0+255),f,b
  4412  00016E  2B01               	incf	(printf@f+1)& (0+255),f,b
  4413                           
  4414                           ; BSR set to: 1
  4415                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4416  000170  C100  FFF6         	movff	printf@f,tblptrl
  4417  000174  C101  FFF7         	movff	printf@f+1,tblptrh
  4418  000178                     	if	0	;tblptru may be non-zero
  4419  000178                     	endif
  4420  000178                     	if	0	;tblptru may be non-zero
  4421  000178                     	endif
  4422  000178  0008               	tblrd		*
  4423  00017A  50F5               	movf	tablat,w,c
  4424  00017C  EC5B  F028         	call	_isdigit
  4425  000180  B0D8               	btfsc	status,0,c
  4426  000182  D7C5               	goto	l8578
  4427  000184                     l8586:
  4428                           
  4429                           ;doprnt.c: 608: }
  4430                           ;doprnt.c: 611: if(*f == '.') {
  4431  000184  C100  FFF6         	movff	printf@f,tblptrl
  4432  000188  C101  FFF7         	movff	printf@f+1,tblptrh
  4433  00018C                     	if	0	;tblptru may be non-zero
  4434  00018C                     	endif
  4435  00018C                     	if	0	;tblptru may be non-zero
  4436  00018C                     	endif
  4437  00018C  0008               	tblrd		*
  4438  00018E  50F5               	movf	tablat,w,c
  4439  000190  0A2E               	xorlw	46
  4440  000192  A4D8               	btfss	status,2,c
  4441  000194  D039               	goto	l8598
  4442                           
  4443                           ;doprnt.c: 612: flag |= 0x4000;
  4444  000196  0101               	movlb	1	; () banked
  4445  000198  8D1D               	bsf	(printf@flag+1)& (0+255),6,b
  4446                           
  4447                           ;doprnt.c: 613: f++;
  4448  00019A  0101               	movlb	1	; () banked
  4449  00019C  4B00               	infsnz	printf@f& (0+255),f,b
  4450  00019E  2B01               	incf	(printf@f+1)& (0+255),f,b
  4451                           
  4452                           ; BSR set to: 1
  4453                           ;doprnt.c: 620: {
  4454                           ;doprnt.c: 621: prec = 0;
  4455  0001A0  0E00               	movlw	0
  4456  0001A2  0101               	movlb	1	; () banked
  4457  0001A4  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4458  0001A6  0E00               	movlw	0
  4459  0001A8  6F2E               	movwf	printf@prec& (0+255),b
  4460                           
  4461                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4462  0001AA  D023               	goto	l8596
  4463  0001AC                     l8592:
  4464                           
  4465                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4466  0001AC  C12E  F075         	movff	printf@prec,___wmul@multiplier
  4467  0001B0  C12F  F076         	movff	printf@prec+1,___wmul@multiplier+1
  4468  0001B4  0E00               	movlw	0
  4469  0001B6  0100               	movlb	0	; () banked
  4470  0001B8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4471  0001BA  0E0A               	movlw	10
  4472  0001BC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4473  0001BE  ECB4  F027         	call	___wmul	;wreg free
  4474  0001C2  C100  FFF6         	movff	printf@f,tblptrl
  4475  0001C6  C101  FFF7         	movff	printf@f+1,tblptrh
  4476  0001CA                     	if	0	;tblptru may be non-zero
  4477  0001CA                     	endif
  4478  0001CA                     	if	0	;tblptru may be non-zero
  4479  0001CA                     	endif
  4480  0001CA  0008               	tblrd		*
  4481  0001CC  50F5               	movf	tablat,w,c
  4482  0001CE  0100               	movlb	0	; () banked
  4483  0001D0  2775               	addwf	?___wmul& (0+255),f,b
  4484  0001D2  0E00               	movlw	0
  4485  0001D4  0100               	movlb	0	; () banked
  4486  0001D6  2376               	addwfc	(?___wmul+1)& (0+255),f,b
  4487  0001D8  0ED0               	movlw	208
  4488  0001DA  0100               	movlb	0	; () banked
  4489  0001DC  2575               	addwf	?___wmul& (0+255),w,b
  4490  0001DE  0101               	movlb	1	; () banked
  4491  0001E0  6F2E               	movwf	printf@prec& (0+255),b
  4492  0001E2  0EFF               	movlw	255
  4493  0001E4  0100               	movlb	0	; () banked
  4494  0001E6  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  4495  0001E8  0101               	movlb	1	; () banked
  4496  0001EA  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4497                           
  4498                           ; BSR set to: 1
  4499  0001EC  0101               	movlb	1	; () banked
  4500  0001EE  4B00               	infsnz	printf@f& (0+255),f,b
  4501  0001F0  2B01               	incf	(printf@f+1)& (0+255),f,b
  4502  0001F2                     l8596:
  4503                           
  4504                           ; BSR set to: 1
  4505  0001F2  C100  FFF6         	movff	printf@f,tblptrl
  4506  0001F6  C101  FFF7         	movff	printf@f+1,tblptrh
  4507  0001FA                     	if	0	;tblptru may be non-zero
  4508  0001FA                     	endif
  4509  0001FA                     	if	0	;tblptru may be non-zero
  4510  0001FA                     	endif
  4511  0001FA  0008               	tblrd		*
  4512  0001FC  50F5               	movf	tablat,w,c
  4513  0001FE  EC5B  F028         	call	_isdigit
  4514  000202  A0D8               	btfss	status,0,c
  4515  000204  D07A               	goto	l8638
  4516  000206  D7D2               	goto	l8592
  4517  000208                     l8598:
  4518                           
  4519                           ;doprnt.c: 626: prec = 0;
  4520  000208  0E00               	movlw	0
  4521  00020A  0101               	movlb	1	; () banked
  4522  00020C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4523  00020E  0E00               	movlw	0
  4524  000210  6F2E               	movwf	printf@prec& (0+255),b
  4525                           
  4526                           ; BSR set to: 1
  4527                           ;doprnt.c: 628: flag |= 0x1000;
  4528  000212  0101               	movlb	1	; () banked
  4529  000214  891D               	bsf	(printf@flag+1)& (0+255),4,b
  4530                           
  4531                           ; BSR set to: 1
  4532                           ;doprnt.c: 630: }
  4533                           ;doprnt.c: 635: switch(c = *f++) {
  4534  000216  D071               	goto	l8638
  4535  000218                     l8602:
  4536                           
  4537                           ; BSR set to: 1
  4538                           ;doprnt.c: 663: flag |= 0x400;
  4539  000218  0101               	movlb	1	; () banked
  4540  00021A  851D               	bsf	(printf@flag+1)& (0+255),2,b
  4541                           
  4542                           ; BSR set to: 1
  4543                           ;doprnt.c: 698: case 'i':
  4544                           ;doprnt.c: 699: break;
  4545                           
  4546                           ; BSR set to: 1
  4547                           
  4548                           ;doprnt.c: 697: case 'd':
  4549                           
  4550                           ;doprnt.c: 664: break;
  4551  00021C  D08D               	goto	l8640
  4552  00021E                     l8604:
  4553                           
  4554                           ; BSR set to: 1
  4555                           ;doprnt.c: 753: if(prec && prec < len)
  4556  00021E  0101               	movlb	1	; () banked
  4557  000220  512E               	movf	printf@prec& (0+255),w,b
  4558  000222  0101               	movlb	1	; () banked
  4559  000224  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  4560  000226  B4D8               	btfsc	status,2,c
  4561  000228  D00E               	goto	l8610
  4562                           
  4563                           ; BSR set to: 1
  4564  00022A  0101               	movlb	1	; () banked
  4565  00022C  5118               	movf	printf@len& (0+255),w,b
  4566  00022E  0101               	movlb	1	; () banked
  4567  000230  5D2E               	subwf	printf@prec& (0+255),w,b
  4568  000232  0101               	movlb	1	; () banked
  4569  000234  5119               	movf	(printf@len+1)& (0+255),w,b
  4570  000236  0101               	movlb	1	; () banked
  4571  000238  592F               	subwfb	(printf@prec+1)& (0+255),w,b
  4572  00023A  B0D8               	btfsc	status,0,c
  4573  00023C  D004               	goto	l8610
  4574                           
  4575                           ; BSR set to: 1
  4576                           ;doprnt.c: 754: len = prec;
  4577  00023E  C12E  F118         	movff	printf@prec,printf@len
  4578  000242  C12F  F119         	movff	printf@prec+1,printf@len+1
  4579  000246                     l8610:
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;doprnt.c: 757: if(width > len)
  4583  000246  0101               	movlb	1	; () banked
  4584  000248  5128               	movf	printf@width& (0+255),w,b
  4585  00024A  0101               	movlb	1	; () banked
  4586  00024C  5D18               	subwf	printf@len& (0+255),w,b
  4587  00024E  0101               	movlb	1	; () banked
  4588  000250  5129               	movf	(printf@width+1)& (0+255),w,b
  4589  000252  0101               	movlb	1	; () banked
  4590  000254  5919               	subwfb	(printf@len+1)& (0+255),w,b
  4591  000256  B0D8               	btfsc	status,0,c
  4592  000258  D009               	goto	l8614
  4593                           
  4594                           ; BSR set to: 1
  4595                           ;doprnt.c: 758: width -= len;
  4596  00025A  0101               	movlb	1	; () banked
  4597  00025C  5118               	movf	printf@len& (0+255),w,b
  4598  00025E  0101               	movlb	1	; () banked
  4599  000260  5F28               	subwf	printf@width& (0+255),f,b
  4600  000262  0101               	movlb	1	; () banked
  4601  000264  5119               	movf	(printf@len+1)& (0+255),w,b
  4602  000266  0101               	movlb	1	; () banked
  4603  000268  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  4604  00026A  D009               	goto	l8618
  4605  00026C                     l8614:
  4606                           
  4607                           ; BSR set to: 1
  4608                           ;doprnt.c: 759: else
  4609                           ;doprnt.c: 760: width = 0;
  4610  00026C  0E00               	movlw	0
  4611  00026E  0101               	movlb	1	; () banked
  4612  000270  6F29               	movwf	(printf@width+1)& (0+255),b
  4613  000272  0E00               	movlw	0
  4614  000274  6F28               	movwf	printf@width& (0+255),b
  4615                           
  4616                           ; BSR set to: 1
  4617                           ;doprnt.c: 764: while(width--)
  4618  000276  D003               	goto	l8618
  4619  000278                     l8616:
  4620                           
  4621                           ; BSR set to: 1
  4622                           ;doprnt.c: 765: (putch(' ') );
  4623  000278  0E20               	movlw	32
  4624  00027A  ECE1  F028         	call	_putch
  4625  00027E                     l8618:
  4626  00027E  0101               	movlb	1	; () banked
  4627  000280  0728               	decf	printf@width& (0+255),f,b
  4628  000282  A0D8               	btfss	status,0,c
  4629  000284  0729               	decf	(printf@width+1)& (0+255),f,b
  4630  000286  0101               	movlb	1	; () banked
  4631  000288  2928               	incf	printf@width& (0+255),w,b
  4632  00028A  E1F6               	bnz	l8616
  4633  00028C  0101               	movlb	1	; () banked
  4634  00028E  2929               	incf	(printf@width+1)& (0+255),w,b
  4635  000290  B4D8               	btfsc	status,2,c
  4636  000292  D00B               	goto	l8624
  4637  000294  D7F1               	goto	l8616
  4638  000296                     l8620:
  4639                           
  4640                           ; BSR set to: 1
  4641                           ;doprnt.c: 768: (putch(*cp++) );
  4642  000296  C116  FFD9         	movff	printf@cp,fsr2l
  4643  00029A  C117  FFDA         	movff	printf@cp+1,fsr2h
  4644  00029E  50DF               	movf	indf2,w,c
  4645  0002A0  ECE1  F028         	call	_putch
  4646  0002A4  0101               	movlb	1	; () banked
  4647  0002A6  4B16               	infsnz	printf@cp& (0+255),f,b
  4648  0002A8  2B17               	incf	(printf@cp+1)& (0+255),f,b
  4649  0002AA                     l8624:
  4650                           
  4651                           ; BSR set to: 1
  4652  0002AA  0101               	movlb	1	; () banked
  4653  0002AC  0718               	decf	printf@len& (0+255),f,b
  4654  0002AE  A0D8               	btfss	status,0,c
  4655  0002B0  0719               	decf	(printf@len+1)& (0+255),f,b
  4656  0002B2  0101               	movlb	1	; () banked
  4657  0002B4  2918               	incf	printf@len& (0+255),w,b
  4658  0002B6  E1EF               	bnz	l8620
  4659  0002B8  0101               	movlb	1	; () banked
  4660  0002BA  2919               	incf	(printf@len+1)& (0+255),w,b
  4661  0002BC  B4D8               	btfsc	status,2,c
  4662  0002BE  EF82  F006         	goto	l8866
  4663  0002C2  D7E9               	goto	l8620
  4664  0002C4                     l8626:
  4665                           
  4666                           ; BSR set to: 1
  4667                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4668  0002C4  C11A  FFD9         	movff	printf@ap,fsr2l
  4669  0002C8  C11B  FFDA         	movff	printf@ap+1,fsr2h
  4670  0002CC  50DF               	movf	indf2,w,c
  4671  0002CE  0101               	movlb	1	; () banked
  4672  0002D0  6F30               	movwf	printf@c& (0+255),b
  4673                           
  4674                           ; BSR set to: 1
  4675  0002D2  0E02               	movlw	2
  4676  0002D4  0101               	movlb	1	; () banked
  4677  0002D6  271A               	addwf	printf@ap& (0+255),f,b
  4678  0002D8  0E00               	movlw	0
  4679  0002DA  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  4680  0002DC                     l8630:
  4681                           
  4682                           ; BSR set to: 1
  4683                           ;doprnt.c: 805: cp = (char *)&c;
  4684  0002DC  0E30               	movlw	low printf@c
  4685  0002DE  0101               	movlb	1	; () banked
  4686  0002E0  6F16               	movwf	printf@cp& (0+255),b
  4687  0002E2  0E01               	movlw	high printf@c
  4688  0002E4  0101               	movlb	1	; () banked
  4689  0002E6  6F17               	movwf	(printf@cp+1)& (0+255),b
  4690                           
  4691                           ; BSR set to: 1
  4692                           ;doprnt.c: 806: len = 1;
  4693  0002E8  0E00               	movlw	0
  4694  0002EA  0101               	movlb	1	; () banked
  4695  0002EC  6F19               	movwf	(printf@len+1)& (0+255),b
  4696  0002EE  0E01               	movlw	1
  4697  0002F0  6F18               	movwf	printf@len& (0+255),b
  4698                           
  4699                           ;doprnt.c: 807: goto dostring;
  4700  0002F2  D795               	goto	l8604
  4701  0002F4                     l8634:
  4702                           
  4703                           ; BSR set to: 1
  4704                           ;doprnt.c: 818: flag |= 0x40;
  4705  0002F4  0101               	movlb	1	; () banked
  4706  0002F6  8D1C               	bsf	printf@flag& (0+255),6,b
  4707                           
  4708                           ; BSR set to: 1
  4709                           ;doprnt.c: 822: }
  4710                           
  4711                           ;doprnt.c: 819: break;
  4712  0002F8  D01F               	goto	l8640
  4713  0002FA                     l8638:
  4714  0002FA  C100  FFF6         	movff	printf@f,tblptrl
  4715  0002FE  C101  FFF7         	movff	printf@f+1,tblptrh
  4716  000302  0101               	movlb	1	; () banked
  4717  000304  4B00               	infsnz	printf@f& (0+255),f,b
  4718  000306  2B01               	incf	(printf@f+1)& (0+255),f,b
  4719  000308                     	if	0	;tblptru may be non-zero
  4720  000308                     	endif
  4721  000308                     	if	0	;tblptru may be non-zero
  4722  000308                     	endif
  4723  000308  0008               	tblrd		*
  4724  00030A  CFF5 F130          	movff	tablat,printf@c
  4725  00030E  0101               	movlb	1	; () banked
  4726  000310  5130               	movf	printf@c& (0+255),w,b
  4727                           
  4728                           ; Switch size 1, requested type "space"
  4729                           ; Number of cases is 6, Range of values is 0 to 117
  4730                           ; switch strategies available:
  4731                           ; Name         Instructions Cycles
  4732                           ; simple_byte           19    10 (average)
  4733                           ;	Chosen strategy is simple_byte
  4734  000312  0A00               	xorlw	0	; case 0
  4735  000314  B4D8               	btfsc	status,2,c
  4736  000316  0012               	return	
  4737  000318  0A63               	xorlw	99	; case 99
  4738  00031A  B4D8               	btfsc	status,2,c
  4739  00031C  D7D3               	goto	l8626
  4740  00031E  0A07               	xorlw	7	; case 100
  4741  000320  B4D8               	btfsc	status,2,c
  4742  000322  D00A               	goto	l8640
  4743  000324  0A02               	xorlw	2	; case 102
  4744  000326  B4D8               	btfsc	status,2,c
  4745  000328  D777               	goto	l8602
  4746  00032A  0A0F               	xorlw	15	; case 105
  4747  00032C  B4D8               	btfsc	status,2,c
  4748  00032E  D004               	goto	l8640
  4749  000330  0A1C               	xorlw	28	; case 117
  4750  000332  B4D8               	btfsc	status,2,c
  4751  000334  D7DF               	goto	l8634
  4752  000336  D7D2               	goto	l8630
  4753  000338                     l8640:
  4754                           
  4755                           ; BSR set to: 1
  4756                           ;doprnt.c: 825: if(flag & (0x700)) {
  4757  000338  0E07               	movlw	7
  4758  00033A  0101               	movlb	1	; () banked
  4759  00033C  151D               	andwf	(printf@flag+1)& (0+255),w,b
  4760  00033E  B4D8               	btfsc	status,2,c
  4761  000340  D36F               	goto	l792
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;doprnt.c: 827: if(flag & 0x1000)
  4765  000342  0101               	movlb	1	; () banked
  4766  000344  A91D               	btfss	(printf@flag+1)& (0+255),4,b
  4767  000346  D005               	goto	l8646
  4768                           
  4769                           ; BSR set to: 1
  4770                           ;doprnt.c: 829: prec = 6;
  4771  000348  0E00               	movlw	0
  4772  00034A  0101               	movlb	1	; () banked
  4773  00034C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4774  00034E  0E06               	movlw	6
  4775  000350  6F2E               	movwf	printf@prec& (0+255),b
  4776  000352                     l8646:
  4777                           
  4778                           ; BSR set to: 1
  4779                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4780  000352  C11A  FFD9         	movff	printf@ap,fsr2l
  4781  000356  C11B  FFDA         	movff	printf@ap+1,fsr2h
  4782  00035A  CFDE F12A          	movff	postinc2,printf@fval
  4783  00035E  CFDE F12B          	movff	postinc2,printf@fval+1
  4784  000362  CFDE F12C          	movff	postinc2,printf@fval+2
  4785  000366  CFDE F12D          	movff	postinc2,printf@fval+3
  4786                           
  4787                           ; BSR set to: 1
  4788  00036A  0E04               	movlw	4
  4789  00036C  0101               	movlb	1	; () banked
  4790  00036E  271A               	addwf	printf@ap& (0+255),f,b
  4791  000370  0E00               	movlw	0
  4792  000372  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  4793                           
  4794                           ; BSR set to: 1
  4795                           ;doprnt.c: 831: if(fval < 0.0) {
  4796  000374  0101               	movlb	1	; () banked
  4797  000376  AF2D               	btfss	(printf@fval+3)& (0+255),7,b
  4798  000378  D015               	goto	l8656
  4799                           
  4800                           ; BSR set to: 1
  4801                           ;doprnt.c: 832: fval = -fval;
  4802  00037A  C12A  F075         	movff	printf@fval,___flneg@f1
  4803  00037E  C12B  F076         	movff	printf@fval+1,___flneg@f1+1
  4804  000382  C12C  F077         	movff	printf@fval+2,___flneg@f1+2
  4805  000386  C12D  F078         	movff	printf@fval+3,___flneg@f1+3
  4806  00038A  EC7C  F027         	call	___flneg	;wreg free
  4807  00038E  C075  F12A         	movff	?___flneg,printf@fval
  4808  000392  C076  F12B         	movff	?___flneg+1,printf@fval+1
  4809  000396  C077  F12C         	movff	?___flneg+2,printf@fval+2
  4810  00039A  C078  F12D         	movff	?___flneg+3,printf@fval+3
  4811                           
  4812                           ;doprnt.c: 833: flag |= 0x03;
  4813  00039E  0E03               	movlw	3
  4814  0003A0  0101               	movlb	1	; () banked
  4815  0003A2  131C               	iorwf	printf@flag& (0+255),f,b
  4816  0003A4                     l8656:
  4817                           
  4818                           ; BSR set to: 1
  4819                           ;doprnt.c: 834: }
  4820                           ;doprnt.c: 835: exp = 0;
  4821  0003A4  0E00               	movlw	0
  4822  0003A6  0101               	movlb	1	; () banked
  4823  0003A8  6F27               	movwf	(printf@exp+1)& (0+255),b
  4824  0003AA  0E00               	movlw	0
  4825  0003AC  6F26               	movwf	printf@exp& (0+255),b
  4826                           
  4827                           ; BSR set to: 1
  4828                           ;doprnt.c: 836: if( fval!=0) {
  4829  0003AE  0101               	movlb	1	; () banked
  4830  0003B0  512A               	movf	printf@fval& (0+255),w,b
  4831  0003B2  0101               	movlb	1	; () banked
  4832  0003B4  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  4833  0003B6  0101               	movlb	1	; () banked
  4834  0003B8  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  4835  0003BA  0101               	movlb	1	; () banked
  4836  0003BC  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  4837  0003BE  B4D8               	btfsc	status,2,c
  4838  0003C0  D08E               	goto	l8684
  4839                           
  4840                           ; BSR set to: 1
  4841                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4842  0003C2  0101               	movlb	1	; () banked
  4843  0003C4  352C               	rlcf	(printf@fval+2)& (0+255),w,b
  4844  0003C6  352D               	rlcf	(printf@fval+3)& (0+255),w,b
  4845  0003C8  0F82               	addlw	130
  4846  0003CA  0101               	movlb	1	; () banked
  4847  0003CC  6F26               	movwf	printf@exp& (0+255),b
  4848  0003CE  0101               	movlb	1	; () banked
  4849  0003D0  6B27               	clrf	(printf@exp+1)& (0+255),b
  4850  0003D2  0EFF               	movlw	255
  4851  0003D4  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  4852                           
  4853                           ; BSR set to: 1
  4854                           ;doprnt.c: 838: exp--;
  4855  0003D6  0101               	movlb	1	; () banked
  4856  0003D8  0726               	decf	printf@exp& (0+255),f,b
  4857  0003DA  A0D8               	btfss	status,0,c
  4858  0003DC  0727               	decf	(printf@exp+1)& (0+255),f,b
  4859                           
  4860                           ; BSR set to: 1
  4861                           ;doprnt.c: 839: exp *= 3;
  4862  0003DE  C126  F075         	movff	printf@exp,___wmul@multiplier
  4863  0003E2  C127  F076         	movff	printf@exp+1,___wmul@multiplier+1
  4864  0003E6  0E00               	movlw	0
  4865  0003E8  0100               	movlb	0	; () banked
  4866  0003EA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4867  0003EC  0E03               	movlw	3
  4868  0003EE  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4869  0003F0  ECB4  F027         	call	___wmul	;wreg free
  4870  0003F4  C075  F126         	movff	?___wmul,printf@exp
  4871  0003F8  C076  F127         	movff	?___wmul+1,printf@exp+1
  4872                           
  4873                           ;doprnt.c: 840: exp /= 10;
  4874  0003FC  C126  F07B         	movff	printf@exp,___awdiv@dividend
  4875  000400  C127  F07C         	movff	printf@exp+1,___awdiv@dividend+1
  4876  000404  0E00               	movlw	0
  4877  000406  0100               	movlb	0	; () banked
  4878  000408  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  4879  00040A  0E0A               	movlw	10
  4880  00040C  6F7D               	movwf	___awdiv@divisor& (0+255),b
  4881  00040E  ECF9  F021         	call	___awdiv	;wreg free
  4882  000412  C07B  F126         	movff	?___awdiv,printf@exp
  4883  000416  C07C  F127         	movff	?___awdiv+1,printf@exp+1
  4884                           
  4885                           ;doprnt.c: 841: if(exp < 0)
  4886  00041A  0101               	movlb	1	; () banked
  4887  00041C  AF27               	btfss	(printf@exp+1)& (0+255),7,b
  4888  00041E  D004               	goto	l8672
  4889                           
  4890                           ; BSR set to: 1
  4891                           ;doprnt.c: 842: exp--;
  4892  000420  0101               	movlb	1	; () banked
  4893  000422  0726               	decf	printf@exp& (0+255),f,b
  4894  000424  A0D8               	btfss	status,0,c
  4895  000426  0727               	decf	(printf@exp+1)& (0+255),f,b
  4896  000428                     l8672:
  4897                           
  4898                           ; BSR set to: 1
  4899                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  4900  000428  0101               	movlb	1	; () banked
  4901  00042A  5126               	movf	printf@exp& (0+255),w,b
  4902  00042C  0800               	sublw	0
  4903  00042E  EC92  F006         	call	_scale
  4904  000432  C09C  F11E         	movff	?_scale,printf@tmpval
  4905  000436  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  4906  00043A  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  4907  00043E  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  4908                           
  4909                           ;doprnt.c: 847: tmpval.integ *= fval;
  4910  000442  C11E  F083         	movff	printf@tmpval,___flmul@b
  4911  000446  C11F  F084         	movff	printf@tmpval+1,___flmul@b+1
  4912  00044A  C120  F085         	movff	printf@tmpval+2,___flmul@b+2
  4913  00044E  C121  F086         	movff	printf@tmpval+3,___flmul@b+3
  4914  000452  C12A  F087         	movff	printf@fval,___flmul@a
  4915  000456  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  4916  00045A  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  4917  00045E  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  4918  000462  EC4F  F00B         	call	___flmul	;wreg free
  4919  000466  C083  F11E         	movff	?___flmul,printf@tmpval
  4920  00046A  C084  F11F         	movff	?___flmul+1,printf@tmpval+1
  4921  00046E  C085  F120         	movff	?___flmul+2,printf@tmpval+2
  4922  000472  C086  F121         	movff	?___flmul+3,printf@tmpval+3
  4923                           
  4924                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  4925  000476  C11E  F075         	movff	printf@tmpval,___flge@ff1
  4926  00047A  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  4927  00047E  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  4928  000482  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  4929  000486  0E00               	movlw	0
  4930  000488  0100               	movlb	0	; () banked
  4931  00048A  6F79               	movwf	___flge@ff2& (0+255),b
  4932  00048C  0E00               	movlw	0
  4933  00048E  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  4934  000490  0E80               	movlw	128
  4935  000492  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  4936  000494  0E3F               	movlw	63
  4937  000496  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  4938  000498  ECC0  F019         	call	___flge	;wreg free
  4939  00049C  0100               	movlb	0	; () banked
  4940  00049E  B0D8               	btfsc	status,0,c
  4941  0004A0  D005               	goto	l8680
  4942                           
  4943                           ; BSR set to: 0
  4944                           ;doprnt.c: 849: exp--;
  4945  0004A2  0101               	movlb	1	; () banked
  4946  0004A4  0726               	decf	printf@exp& (0+255),f,b
  4947  0004A6  A0D8               	btfss	status,0,c
  4948  0004A8  0727               	decf	(printf@exp+1)& (0+255),f,b
  4949  0004AA  D019               	goto	l8684
  4950  0004AC                     l8680:
  4951                           
  4952                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  4953  0004AC  C11E  F075         	movff	printf@tmpval,___flge@ff1
  4954  0004B0  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  4955  0004B4  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  4956  0004B8  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  4957  0004BC  0E00               	movlw	0
  4958  0004BE  0100               	movlb	0	; () banked
  4959  0004C0  6F79               	movwf	___flge@ff2& (0+255),b
  4960  0004C2  0E00               	movlw	0
  4961  0004C4  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  4962  0004C6  0E20               	movlw	32
  4963  0004C8  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  4964  0004CA  0E41               	movlw	65
  4965  0004CC  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  4966  0004CE  ECC0  F019         	call	___flge	;wreg free
  4967  0004D2  0100               	movlb	0	; () banked
  4968  0004D4  A0D8               	btfss	status,0,c
  4969  0004D6  D003               	goto	l8684
  4970                           
  4971                           ; BSR set to: 0
  4972                           ;doprnt.c: 851: exp++;
  4973  0004D8  0101               	movlb	1	; () banked
  4974  0004DA  4B26               	infsnz	printf@exp& (0+255),f,b
  4975  0004DC  2B27               	incf	(printf@exp+1)& (0+255),f,b
  4976  0004DE                     l8684:
  4977                           
  4978                           ;doprnt.c: 852: }
  4979                           ;doprnt.c: 1112: if(prec <= 12)
  4980  0004DE  0101               	movlb	1	; () banked
  4981  0004E0  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  4982  0004E2  D008               	goto	l8686
  4983  0004E4  0101               	movlb	1	; () banked
  4984  0004E6  512F               	movf	(printf@prec+1)& (0+255),w,b
  4985  0004E8  E123               	bnz	l8688
  4986  0004EA  0E0D               	movlw	13
  4987  0004EC  0101               	movlb	1	; () banked
  4988  0004EE  5D2E               	subwf	printf@prec& (0+255),w,b
  4989  0004F0  B0D8               	btfsc	status,0,c
  4990  0004F2  D01E               	goto	l8688
  4991  0004F4                     l8686:
  4992                           
  4993                           ; BSR set to: 1
  4994                           ;doprnt.c: 1113: fval += fround(prec);
  4995  0004F4  C12A  F0A9         	movff	printf@fval,___fladd@b
  4996  0004F8  C12B  F0AA         	movff	printf@fval+1,___fladd@b+1
  4997  0004FC  C12C  F0AB         	movff	printf@fval+2,___fladd@b+2
  4998  000500  C12D  F0AC         	movff	printf@fval+3,___fladd@b+3
  4999  000504  0101               	movlb	1	; () banked
  5000  000506  512E               	movf	printf@prec& (0+255),w,b
  5001  000508  ECEB  F012         	call	_fround
  5002  00050C  C09C  F0AD         	movff	?_fround,___fladd@a
  5003  000510  C09D  F0AE         	movff	?_fround+1,___fladd@a+1
  5004  000514  C09E  F0AF         	movff	?_fround+2,___fladd@a+2
  5005  000518  C09F  F0B0         	movff	?_fround+3,___fladd@a+3
  5006  00051C  ECFB  F008         	call	___fladd	;wreg free
  5007  000520  C0A9  F12A         	movff	?___fladd,printf@fval
  5008  000524  C0AA  F12B         	movff	?___fladd+1,printf@fval+1
  5009  000528  C0AB  F12C         	movff	?___fladd+2,printf@fval+2
  5010  00052C  C0AC  F12D         	movff	?___fladd+3,printf@fval+3
  5011  000530                     l8688:
  5012                           
  5013                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5014  000530  0101               	movlb	1	; () banked
  5015  000532  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5016  000534  D008               	goto	l8690
  5017  000536  0101               	movlb	1	; () banked
  5018  000538  5127               	movf	(printf@exp+1)& (0+255),w,b
  5019  00053A  E12E               	bnz	l8696
  5020  00053C  0E0A               	movlw	10
  5021  00053E  0101               	movlb	1	; () banked
  5022  000540  5D26               	subwf	printf@exp& (0+255),w,b
  5023  000542  B0D8               	btfsc	status,0,c
  5024  000544  D029               	goto	l8696
  5025  000546                     l8690:
  5026                           
  5027                           ; BSR set to: 1
  5028  000546  0101               	movlb	1	; () banked
  5029  000548  512A               	movf	printf@fval& (0+255),w,b
  5030  00054A  0101               	movlb	1	; () banked
  5031  00054C  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  5032  00054E  0101               	movlb	1	; () banked
  5033  000550  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  5034  000552  0101               	movlb	1	; () banked
  5035  000554  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  5036  000556  B4D8               	btfsc	status,2,c
  5037  000558  D06D               	goto	l8710
  5038                           
  5039                           ; BSR set to: 1
  5040  00055A  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5041  00055E  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5042  000562  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5043  000566  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5044  00056A  EC00  F01F         	call	___fltol	;wreg free
  5045  00056E  0100               	movlb	0	; () banked
  5046  000570  51A5               	movf	?___fltol& (0+255),w,b
  5047  000572  0100               	movlb	0	; () banked
  5048  000574  11A6               	iorwf	(?___fltol+1)& (0+255),w,b
  5049  000576  0100               	movlb	0	; () banked
  5050  000578  11A7               	iorwf	(?___fltol+2)& (0+255),w,b
  5051  00057A  0100               	movlb	0	; () banked
  5052  00057C  11A8               	iorwf	(?___fltol+3)& (0+255),w,b
  5053  00057E  A4D8               	btfss	status,2,c
  5054  000580  D059               	goto	l8710
  5055                           
  5056                           ; BSR set to: 0
  5057  000582  0101               	movlb	1	; () banked
  5058  000584  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5059  000586  D056               	goto	l8710
  5060  000588  0101               	movlb	1	; () banked
  5061  00058A  5127               	movf	(printf@exp+1)& (0+255),w,b
  5062  00058C  E105               	bnz	l8696
  5063  00058E  0E02               	movlw	2
  5064  000590  0101               	movlb	1	; () banked
  5065  000592  5D26               	subwf	printf@exp& (0+255),w,b
  5066  000594  A0D8               	btfss	status,0,c
  5067  000596  D04E               	goto	l8710
  5068  000598                     l8696:
  5069                           
  5070                           ; BSR set to: 1
  5071                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5072  000598  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5073  00059C  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5074  0005A0  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5075  0005A4  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5076  0005A8  0E5F               	movlw	95
  5077  0005AA  0100               	movlb	0	; () banked
  5078  0005AC  6F79               	movwf	___flge@ff2& (0+255),b
  5079  0005AE  0E70               	movlw	112
  5080  0005B0  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5081  0005B2  0E89               	movlw	137
  5082  0005B4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5083  0005B6  0E40               	movlw	64
  5084  0005B8  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5085  0005BA  ECC0  F019         	call	___flge	;wreg free
  5086  0005BE  0100               	movlb	0	; () banked
  5087  0005C0  B0D8               	btfsc	status,0,c
  5088  0005C2  D003               	goto	l8700
  5089                           
  5090                           ; BSR set to: 0
  5091                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5092  0005C4  0101               	movlb	1	; () banked
  5093  0005C6  0EF7               	movlw	247
  5094  0005C8  D002               	goto	L1
  5095  0005CA                     l8700:
  5096                           
  5097                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5098  0005CA  0101               	movlb	1	; () banked
  5099  0005CC  0EF8               	movlw	248
  5100  0005CE                     L1:
  5101  0005CE  2726               	addwf	printf@exp& (0+255),f,b
  5102  0005D0  0EFF               	movlw	255
  5103  0005D2  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  5104                           
  5105                           ; BSR set to: 1
  5106                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5107                           
  5108                           ; BSR set to: 1
  5109  0005D4  0101               	movlb	1	; () banked
  5110  0005D6  5126               	movf	printf@exp& (0+255),w,b
  5111  0005D8  EC92  F006         	call	_scale
  5112  0005DC  C09C  F11E         	movff	?_scale,printf@tmpval
  5113  0005E0  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  5114  0005E4  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  5115  0005E8  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  5116  0005EC  C12A  F075         	movff	printf@fval,__div_to_l_@f1
  5117  0005F0  C12B  F076         	movff	printf@fval+1,__div_to_l_@f1+1
  5118  0005F4  C12C  F077         	movff	printf@fval+2,__div_to_l_@f1+2
  5119  0005F8  C12D  F078         	movff	printf@fval+3,__div_to_l_@f1+3
  5120  0005FC  C11E  F079         	movff	printf@tmpval,__div_to_l_@f2
  5121  000600  C11F  F07A         	movff	printf@tmpval+1,__div_to_l_@f2+1
  5122  000604  C120  F07B         	movff	printf@tmpval+2,__div_to_l_@f2+2
  5123  000608  C121  F07C         	movff	printf@tmpval+3,__div_to_l_@f2+3
  5124  00060C  EC88  F01A         	call	__div_to_l_	;wreg free
  5125  000610  C075  F122         	movff	?__div_to_l_,printf@val
  5126  000614  C076  F123         	movff	?__div_to_l_+1,printf@val+1
  5127  000618  C077  F124         	movff	?__div_to_l_+2,printf@val+2
  5128  00061C  C078  F125         	movff	?__div_to_l_+3,printf@val+3
  5129                           
  5130                           ;doprnt.c: 1129: fval = 0.0;
  5131  000620  0E00               	movlw	0
  5132  000622  0101               	movlb	1	; () banked
  5133  000624  6F2A               	movwf	printf@fval& (0+255),b
  5134  000626  0E00               	movlw	0
  5135  000628  6F2B               	movwf	(printf@fval+1)& (0+255),b
  5136  00062A  0E00               	movlw	0
  5137  00062C  6F2C               	movwf	(printf@fval+2)& (0+255),b
  5138  00062E  0E00               	movlw	0
  5139  000630  6F2D               	movwf	(printf@fval+3)& (0+255),b
  5140                           
  5141                           ;doprnt.c: 1130: } else {
  5142  000632  D03C               	goto	l8714
  5143  000634                     l8710:
  5144                           
  5145                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5146  000634  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5147  000638  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5148  00063C  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5149  000640  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5150  000644  EC00  F01F         	call	___fltol	;wreg free
  5151  000648  C0A5  F122         	movff	?___fltol,printf@val
  5152  00064C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  5153  000650  C0A7  F124         	movff	?___fltol+2,printf@val+2
  5154  000654  C0A8  F125         	movff	?___fltol+3,printf@val+3
  5155                           
  5156                           ;doprnt.c: 1132: fval -= (double)val;
  5157  000658  C12A  F0BD         	movff	printf@fval,___flsub@b
  5158  00065C  C12B  F0BE         	movff	printf@fval+1,___flsub@b+1
  5159  000660  C12C  F0BF         	movff	printf@fval+2,___flsub@b+2
  5160  000664  C12D  F0C0         	movff	printf@fval+3,___flsub@b+3
  5161  000668  C122  F075         	movff	printf@val,___xxtofl@val
  5162  00066C  C123  F076         	movff	printf@val+1,___xxtofl@val+1
  5163  000670  C124  F077         	movff	printf@val+2,___xxtofl@val+2
  5164  000674  C125  F078         	movff	printf@val+3,___xxtofl@val+3
  5165  000678  0E00               	movlw	0
  5166  00067A  EC0A  F018         	call	___xxtofl
  5167  00067E  C075  F0C1         	movff	?___xxtofl,___flsub@a
  5168  000682  C076  F0C2         	movff	?___xxtofl+1,___flsub@a+1
  5169  000686  C077  F0C3         	movff	?___xxtofl+2,___flsub@a+2
  5170  00068A  C078  F0C4         	movff	?___xxtofl+3,___flsub@a+3
  5171  00068E  EC8F  F026         	call	___flsub	;wreg free
  5172  000692  C0BD  F12A         	movff	?___flsub,printf@fval
  5173  000696  C0BE  F12B         	movff	?___flsub+1,printf@fval+1
  5174  00069A  C0BF  F12C         	movff	?___flsub+2,printf@fval+2
  5175  00069E  C0C0  F12D         	movff	?___flsub+3,printf@fval+3
  5176                           
  5177                           ;doprnt.c: 1133: exp = 0;
  5178  0006A2  0E00               	movlw	0
  5179  0006A4  0101               	movlb	1	; () banked
  5180  0006A6  6F27               	movwf	(printf@exp+1)& (0+255),b
  5181  0006A8  0E00               	movlw	0
  5182  0006AA  6F26               	movwf	printf@exp& (0+255),b
  5183  0006AC                     l8714:
  5184                           
  5185                           ; BSR set to: 1
  5186                           ;doprnt.c: 1134: }
  5187                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5188  0006AC  0E01               	movlw	1
  5189  0006AE  0101               	movlb	1	; () banked
  5190  0006B0  6F30               	movwf	printf@c& (0+255),b
  5191  0006B2                     l8716:
  5192                           
  5193                           ; BSR set to: 1
  5194  0006B2  0E0A               	movlw	10
  5195  0006B4  0101               	movlb	1	; () banked
  5196  0006B6  1930               	xorwf	printf@c& (0+255),w,b
  5197  0006B8  B4D8               	btfsc	status,2,c
  5198  0006BA  D01E               	goto	l8728
  5199                           
  5200                           ; BSR set to: 1
  5201                           ;doprnt.c: 1137: if(val < dpowers[c])
  5202                           
  5203                           ; BSR set to: 1
  5204                           
  5205                           ; BSR set to: 1
  5206  0006BC  0101               	movlb	1	; () banked
  5207  0006BE  5130               	movf	printf@c& (0+255),w,b
  5208  0006C0  0D04               	mullw	4
  5209  0006C2  0EBB               	movlw	low _dpowers
  5210  0006C4  24F3               	addwf	prodl,w,c
  5211  0006C6  6EF6               	movwf	tblptrl,c
  5212  0006C8  0E7D               	movlw	high _dpowers
  5213  0006CA  20F4               	addwfc	prodh,w,c
  5214  0006CC  6EF7               	movwf	tblptrh,c
  5215  0006CE                     	if	0	;There are less than 3 active tblptr bytes
  5216  0006CE                     	endif
  5217  0006CE  0009               	tblrd		*+
  5218  0006D0  50F5               	movf	tablat,w,c
  5219  0006D2  0101               	movlb	1	; () banked
  5220  0006D4  5D22               	subwf	printf@val& (0+255),w,b
  5221  0006D6  0009               	tblrd		*+
  5222  0006D8  50F5               	movf	tablat,w,c
  5223  0006DA  0101               	movlb	1	; () banked
  5224  0006DC  5923               	subwfb	(printf@val+1)& (0+255),w,b
  5225  0006DE  0009               	tblrd		*+
  5226  0006E0  50F5               	movf	tablat,w,c
  5227  0006E2  0101               	movlb	1	; () banked
  5228  0006E4  5924               	subwfb	(printf@val+2)& (0+255),w,b
  5229  0006E6  0009               	tblrd		*+
  5230  0006E8  50F5               	movf	tablat,w,c
  5231  0006EA  0101               	movlb	1	; () banked
  5232  0006EC  5925               	subwfb	(printf@val+3)& (0+255),w,b
  5233  0006EE  A0D8               	btfss	status,0,c
  5234  0006F0  D003               	goto	l8728
  5235                           
  5236                           ; BSR set to: 1
  5237                           
  5238                           ; BSR set to: 1
  5239                           
  5240                           ; BSR set to: 1
  5241                           ;doprnt.c: 1138: break;
  5242  0006F2  0101               	movlb	1	; () banked
  5243  0006F4  2B30               	incf	printf@c& (0+255),f,b
  5244  0006F6  D7DD               	goto	l8716
  5245  0006F8                     l8728:
  5246                           
  5247                           ; BSR set to: 1
  5248                           ;doprnt.c: 1142: width -= prec + c + exp;
  5249  0006F8  C130  F0C5         	movff	printf@c,??_printf
  5250  0006FC  0100               	movlb	0	; () banked
  5251  0006FE  6BC6               	clrf	(??_printf+1)& (0+255),b
  5252  000700  BFC5               	btfsc	??_printf& (0+255),7,b
  5253  000702  07C6               	decf	(??_printf+1)& (0+255),f,b
  5254  000704  0101               	movlb	1	; () banked
  5255  000706  512E               	movf	printf@prec& (0+255),w,b
  5256  000708  0100               	movlb	0	; () banked
  5257  00070A  27C5               	addwf	??_printf& (0+255),f,b
  5258  00070C  0101               	movlb	1	; () banked
  5259  00070E  512F               	movf	(printf@prec+1)& (0+255),w,b
  5260  000710  0100               	movlb	0	; () banked
  5261  000712  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5262  000714  0101               	movlb	1	; () banked
  5263  000716  5126               	movf	printf@exp& (0+255),w,b
  5264  000718  0100               	movlb	0	; () banked
  5265  00071A  27C5               	addwf	??_printf& (0+255),f,b
  5266  00071C  0101               	movlb	1	; () banked
  5267  00071E  5127               	movf	(printf@exp+1)& (0+255),w,b
  5268  000720  0100               	movlb	0	; () banked
  5269  000722  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5270  000724  0100               	movlb	0	; () banked
  5271  000726  51C5               	movf	??_printf& (0+255),w,b
  5272  000728  0101               	movlb	1	; () banked
  5273  00072A  5F28               	subwf	printf@width& (0+255),f,b
  5274  00072C  0100               	movlb	0	; () banked
  5275  00072E  51C6               	movf	(??_printf+1)& (0+255),w,b
  5276  000730  0101               	movlb	1	; () banked
  5277  000732  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  5278                           
  5279                           ;doprnt.c: 1143: if(
  5280                           ;doprnt.c: 1147: prec)
  5281  000734  0101               	movlb	1	; () banked
  5282  000736  512E               	movf	printf@prec& (0+255),w,b
  5283  000738  0101               	movlb	1	; () banked
  5284  00073A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5285  00073C  B4D8               	btfsc	status,2,c
  5286  00073E  D004               	goto	l8732
  5287                           
  5288                           ; BSR set to: 1
  5289                           ;doprnt.c: 1148: width--;
  5290  000740  0101               	movlb	1	; () banked
  5291  000742  0728               	decf	printf@width& (0+255),f,b
  5292  000744  A0D8               	btfss	status,0,c
  5293  000746  0729               	decf	(printf@width+1)& (0+255),f,b
  5294  000748                     l8732:
  5295                           
  5296                           ; BSR set to: 1
  5297                           ;doprnt.c: 1149: if(flag & 0x03)
  5298  000748  0E03               	movlw	3
  5299  00074A  0101               	movlb	1	; () banked
  5300  00074C  151C               	andwf	printf@flag& (0+255),w,b
  5301  00074E  0100               	movlb	0	; () banked
  5302  000750  6FC5               	movwf	??_printf& (0+255),b
  5303  000752  0E00               	movlw	0
  5304  000754  0101               	movlb	1	; () banked
  5305  000756  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5306  000758  0100               	movlb	0	; () banked
  5307  00075A  6FC6               	movwf	(??_printf+1)& (0+255),b
  5308  00075C  0100               	movlb	0	; () banked
  5309  00075E  51C5               	movf	??_printf& (0+255),w,b
  5310  000760  0100               	movlb	0	; () banked
  5311  000762  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5312  000764  B4D8               	btfsc	status,2,c
  5313  000766  D008               	goto	l8740
  5314  000768  D003               	goto	l8738
  5315  00076A                     l8736:
  5316                           
  5317                           ; BSR set to: 1
  5318                           ;doprnt.c: 1181: (putch(' ') );
  5319  00076A  0E20               	movlw	32
  5320  00076C  ECE1  F028         	call	_putch
  5321  000770                     l8738:
  5322                           
  5323                           ;doprnt.c: 1182: width--;
  5324  000770  0101               	movlb	1	; () banked
  5325  000772  0728               	decf	printf@width& (0+255),f,b
  5326  000774  A0D8               	btfss	status,0,c
  5327  000776  0729               	decf	(printf@width+1)& (0+255),f,b
  5328  000778                     l8740:
  5329  000778  0101               	movlb	1	; () banked
  5330  00077A  BF29               	btfsc	(printf@width+1)& (0+255),7,b
  5331  00077C  D007               	goto	l8742
  5332  00077E  0101               	movlb	1	; () banked
  5333  000780  5129               	movf	(printf@width+1)& (0+255),w,b
  5334  000782  E1F3               	bnz	l8736
  5335  000784  0101               	movlb	1	; () banked
  5336  000786  0528               	decf	printf@width& (0+255),w,b
  5337  000788  B0D8               	btfsc	status,0,c
  5338  00078A  D7EF               	goto	l8736
  5339  00078C                     l8742:
  5340                           
  5341                           ; BSR set to: 1
  5342                           ;doprnt.c: 1183: }
  5343                           ;doprnt.c: 1188: if(flag & 0x03)
  5344  00078C  0E03               	movlw	3
  5345  00078E  0101               	movlb	1	; () banked
  5346  000790  151C               	andwf	printf@flag& (0+255),w,b
  5347  000792  0100               	movlb	0	; () banked
  5348  000794  6FC5               	movwf	??_printf& (0+255),b
  5349  000796  0E00               	movlw	0
  5350  000798  0101               	movlb	1	; () banked
  5351  00079A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5352  00079C  0100               	movlb	0	; () banked
  5353  00079E  6FC6               	movwf	(??_printf+1)& (0+255),b
  5354  0007A0  0100               	movlb	0	; () banked
  5355  0007A2  51C5               	movf	??_printf& (0+255),w,b
  5356  0007A4  0100               	movlb	0	; () banked
  5357  0007A6  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5358  0007A8  B4D8               	btfsc	status,2,c
  5359  0007AA  D04B               	goto	l8752
  5360                           
  5361                           ; BSR set to: 0
  5362                           ;doprnt.c: 1190: (putch('-') );
  5363  0007AC  0E2D               	movlw	45
  5364  0007AE  ECE1  F028         	call	_putch
  5365                           
  5366                           ;doprnt.c: 1195: }
  5367                           ;doprnt.c: 1196: while(c--) {
  5368  0007B2  D047               	goto	l8752
  5369  0007B4                     l8746:
  5370                           
  5371                           ;doprnt.c: 1200: {
  5372                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5373  0007B4  C122  F075         	movff	printf@val,___lldiv@dividend
  5374  0007B8  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  5375  0007BC  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  5376  0007C0  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  5377  0007C4  0101               	movlb	1	; () banked
  5378  0007C6  5130               	movf	printf@c& (0+255),w,b
  5379  0007C8  0D04               	mullw	4
  5380  0007CA  0EBB               	movlw	low _dpowers
  5381  0007CC  24F3               	addwf	prodl,w,c
  5382  0007CE  6EF6               	movwf	tblptrl,c
  5383  0007D0  0E7D               	movlw	high _dpowers
  5384  0007D2  20F4               	addwfc	prodh,w,c
  5385  0007D4  6EF7               	movwf	tblptrh,c
  5386  0007D6                     	if	0	;There are less than 3 active tblptr bytes
  5387  0007D6                     	endif
  5388  0007D6  0009               	tblrd		*+
  5389  0007D8  CFF5 F079          	movff	tablat,___lldiv@divisor
  5390  0007DC  0009               	tblrd		*+
  5391  0007DE  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  5392  0007E2  0009               	tblrd		*+
  5393  0007E4  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  5394  0007E8  000A               	tblrd		*-
  5395  0007EA  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  5396  0007EE  EC58  F022         	call	___lldiv	;wreg free
  5397  0007F2  C075  F11E         	movff	?___lldiv,printf@tmpval
  5398  0007F6  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  5399  0007FA  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  5400  0007FE  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  5401                           
  5402                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5403  000802  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  5404  000806  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  5405  00080A  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  5406  00080E  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  5407  000812  0E0A               	movlw	10
  5408  000814  0100               	movlb	0	; () banked
  5409  000816  6F86               	movwf	___llmod@divisor& (0+255),b
  5410  000818  0E00               	movlw	0
  5411  00081A  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  5412  00081C  0E00               	movlw	0
  5413  00081E  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  5414  000820  0E00               	movlw	0
  5415  000822  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  5416  000824  EC58  F023         	call	___llmod	;wreg free
  5417  000828  C082  F11E         	movff	?___llmod,printf@tmpval
  5418  00082C  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  5419  000830  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  5420  000834  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  5421                           
  5422                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5423  000838  0101               	movlb	1	; () banked
  5424  00083A  511E               	movf	printf@tmpval& (0+255),w,b
  5425  00083C  0F30               	addlw	48
  5426  00083E  ECE1  F028         	call	_putch
  5427  000842                     l8752:
  5428  000842  0101               	movlb	1	; () banked
  5429  000844  0730               	decf	printf@c& (0+255),f,b
  5430  000846  0101               	movlb	1	; () banked
  5431  000848  2930               	incf	printf@c& (0+255),w,b
  5432  00084A  B4D8               	btfsc	status,2,c
  5433  00084C  D008               	goto	l8758
  5434  00084E  D7B2               	goto	l8746
  5435  000850                     l8754:
  5436                           
  5437                           ; BSR set to: 1
  5438                           ;doprnt.c: 1208: (putch('0') );
  5439  000850  0E30               	movlw	48
  5440  000852  ECE1  F028         	call	_putch
  5441                           
  5442                           ;doprnt.c: 1209: exp--;
  5443  000856  0101               	movlb	1	; () banked
  5444  000858  0726               	decf	printf@exp& (0+255),f,b
  5445  00085A  A0D8               	btfss	status,0,c
  5446  00085C  0727               	decf	(printf@exp+1)& (0+255),f,b
  5447  00085E                     l8758:
  5448                           
  5449                           ; BSR set to: 1
  5450  00085E  0101               	movlb	1	; () banked
  5451  000860  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5452  000862  D007               	goto	l8760
  5453  000864  0101               	movlb	1	; () banked
  5454  000866  5127               	movf	(printf@exp+1)& (0+255),w,b
  5455  000868  E1F3               	bnz	l8754
  5456  00086A  0101               	movlb	1	; () banked
  5457  00086C  0526               	decf	printf@exp& (0+255),w,b
  5458  00086E  B0D8               	btfsc	status,0,c
  5459  000870  D7EF               	goto	l8754
  5460  000872                     l8760:
  5461                           
  5462                           ; BSR set to: 1
  5463                           ;doprnt.c: 1210: }
  5464                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5465  000872  0101               	movlb	1	; () banked
  5466  000874  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  5467  000876  D00C               	goto	l826
  5468  000878  0101               	movlb	1	; () banked
  5469  00087A  512F               	movf	(printf@prec+1)& (0+255),w,b
  5470  00087C  E105               	bnz	u10980
  5471  00087E  0E09               	movlw	9
  5472  000880  0101               	movlb	1	; () banked
  5473  000882  5D2E               	subwf	printf@prec& (0+255),w,b
  5474  000884  A0D8               	btfss	status,0,c
  5475  000886  D004               	goto	l826
  5476  000888                     u10980:
  5477                           
  5478                           ; BSR set to: 1
  5479                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5480  000888  0E08               	movlw	8
  5481  00088A  0101               	movlb	1	; () banked
  5482  00088C  6F30               	movwf	printf@c& (0+255),b
  5483  00088E  D002               	goto	l8764
  5484  000890                     l826:
  5485                           
  5486                           ; BSR set to: 1
  5487                           ;doprnt.c: 1213: else
  5488                           ;doprnt.c: 1214: c = prec;
  5489  000890  C12E  F130         	movff	printf@prec,printf@c
  5490  000894                     l8764:
  5491                           
  5492                           ; BSR set to: 1
  5493                           ;doprnt.c: 1215: prec -= c;
  5494  000894  0101               	movlb	1	; () banked
  5495  000896  5130               	movf	printf@c& (0+255),w,b
  5496  000898  0101               	movlb	1	; () banked
  5497  00089A  5F2E               	subwf	printf@prec& (0+255),f,b
  5498  00089C  0E00               	movlw	0
  5499  00089E  0101               	movlb	1	; () banked
  5500  0008A0  BF30               	btfsc	printf@c& (0+255),7,b
  5501  0008A2  0EFF               	movlw	255
  5502  0008A4  0101               	movlb	1	; () banked
  5503  0008A6  5B2F               	subwfb	(printf@prec+1)& (0+255),f,b
  5504                           
  5505                           ; BSR set to: 1
  5506                           ;doprnt.c: 1219: if(c)
  5507  0008A8  0101               	movlb	1	; () banked
  5508  0008AA  5130               	movf	printf@c& (0+255),w,b
  5509  0008AC  0101               	movlb	1	; () banked
  5510  0008AE  B4D8               	btfsc	status,2,c
  5511  0008B0  D003               	goto	l8770
  5512                           
  5513                           ; BSR set to: 1
  5514                           ;doprnt.c: 1221: (putch('.') );
  5515  0008B2  0E2E               	movlw	46
  5516  0008B4  ECE1  F028         	call	_putch
  5517  0008B8                     l8770:
  5518                           
  5519                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5520  0008B8  0101               	movlb	1	; () banked
  5521  0008BA  5130               	movf	printf@c& (0+255),w,b
  5522  0008BC  EC92  F006         	call	_scale
  5523  0008C0  C09C  F112         	movff	?_scale,_printf$2839
  5524  0008C4  C09D  F113         	movff	?_scale+1,_printf$2839+1
  5525  0008C8  C09E  F114         	movff	?_scale+2,_printf$2839+2
  5526  0008CC  C09F  F115         	movff	?_scale+3,_printf$2839+3
  5527                           
  5528                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5529  0008D0  C12A  F087         	movff	printf@fval,___flmul@a
  5530  0008D4  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  5531  0008D8  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  5532  0008DC  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  5533  0008E0  C112  F083         	movff	_printf$2839,___flmul@b
  5534  0008E4  C113  F084         	movff	_printf$2839+1,___flmul@b+1
  5535  0008E8  C114  F085         	movff	_printf$2839+2,___flmul@b+2
  5536  0008EC  C115  F086         	movff	_printf$2839+3,___flmul@b+3
  5537  0008F0  EC4F  F00B         	call	___flmul	;wreg free
  5538  0008F4  C083  F0A5         	movff	?___flmul,___fltol@f1
  5539  0008F8  C084  F0A6         	movff	?___flmul+1,___fltol@f1+1
  5540  0008FC  C085  F0A7         	movff	?___flmul+2,___fltol@f1+2
  5541  000900  C086  F0A8         	movff	?___flmul+3,___fltol@f1+3
  5542  000904  EC00  F01F         	call	___fltol	;wreg free
  5543  000908  C0A5  F122         	movff	?___fltol,printf@val
  5544  00090C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  5545  000910  C0A7  F124         	movff	?___fltol+2,printf@val+2
  5546  000914  C0A8  F125         	movff	?___fltol+3,printf@val+3
  5547                           
  5548                           ;doprnt.c: 1228: while(c--) {
  5549  000918  D06E               	goto	l8780
  5550  00091A                     l8774:
  5551                           
  5552                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5553  00091A  C122  F075         	movff	printf@val,___lldiv@dividend
  5554  00091E  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  5555  000922  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  5556  000926  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  5557  00092A  0101               	movlb	1	; () banked
  5558  00092C  5130               	movf	printf@c& (0+255),w,b
  5559  00092E  0D04               	mullw	4
  5560  000930  0EBB               	movlw	low _dpowers
  5561  000932  24F3               	addwf	prodl,w,c
  5562  000934  6EF6               	movwf	tblptrl,c
  5563  000936  0E7D               	movlw	high _dpowers
  5564  000938  20F4               	addwfc	prodh,w,c
  5565  00093A  6EF7               	movwf	tblptrh,c
  5566  00093C                     	if	0	;There are less than 3 active tblptr bytes
  5567  00093C                     	endif
  5568  00093C  0009               	tblrd		*+
  5569  00093E  CFF5 F079          	movff	tablat,___lldiv@divisor
  5570  000942  0009               	tblrd		*+
  5571  000944  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  5572  000948  0009               	tblrd		*+
  5573  00094A  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  5574  00094E  000A               	tblrd		*-
  5575  000950  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  5576  000954  EC58  F022         	call	___lldiv	;wreg free
  5577  000958  C075  F11E         	movff	?___lldiv,printf@tmpval
  5578  00095C  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  5579  000960  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  5580  000964  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  5581                           
  5582                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5583  000968  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  5584  00096C  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  5585  000970  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  5586  000974  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  5587  000978  0E0A               	movlw	10
  5588  00097A  0100               	movlb	0	; () banked
  5589  00097C  6F86               	movwf	___llmod@divisor& (0+255),b
  5590  00097E  0E00               	movlw	0
  5591  000980  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  5592  000982  0E00               	movlw	0
  5593  000984  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  5594  000986  0E00               	movlw	0
  5595  000988  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  5596  00098A  EC58  F023         	call	___llmod	;wreg free
  5597  00098E  C082  F11E         	movff	?___llmod,printf@tmpval
  5598  000992  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  5599  000996  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  5600  00099A  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  5601                           
  5602                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5603  00099E  0101               	movlb	1	; () banked
  5604  0009A0  511E               	movf	printf@tmpval& (0+255),w,b
  5605  0009A2  0F30               	addlw	48
  5606  0009A4  ECE1  F028         	call	_putch
  5607                           
  5608                           ;doprnt.c: 1232: val %= dpowers[c];
  5609  0009A8  C122  F082         	movff	printf@val,___llmod@dividend
  5610  0009AC  C123  F083         	movff	printf@val+1,___llmod@dividend+1
  5611  0009B0  C124  F084         	movff	printf@val+2,___llmod@dividend+2
  5612  0009B4  C125  F085         	movff	printf@val+3,___llmod@dividend+3
  5613  0009B8  0101               	movlb	1	; () banked
  5614  0009BA  5130               	movf	printf@c& (0+255),w,b
  5615  0009BC  0D04               	mullw	4
  5616  0009BE  0EBB               	movlw	low _dpowers
  5617  0009C0  24F3               	addwf	prodl,w,c
  5618  0009C2  6EF6               	movwf	tblptrl,c
  5619  0009C4  0E7D               	movlw	high _dpowers
  5620  0009C6  20F4               	addwfc	prodh,w,c
  5621  0009C8  6EF7               	movwf	tblptrh,c
  5622  0009CA                     	if	0	;There are less than 3 active tblptr bytes
  5623  0009CA                     	endif
  5624  0009CA  0009               	tblrd		*+
  5625  0009CC  CFF5 F086          	movff	tablat,___llmod@divisor
  5626  0009D0  0009               	tblrd		*+
  5627  0009D2  CFF5 F087          	movff	tablat,___llmod@divisor+1
  5628  0009D6  0009               	tblrd		*+
  5629  0009D8  CFF5 F088          	movff	tablat,___llmod@divisor+2
  5630  0009DC  000A               	tblrd		*-
  5631  0009DE  CFF5 F089          	movff	tablat,___llmod@divisor+3
  5632  0009E2  EC58  F023         	call	___llmod	;wreg free
  5633  0009E6  C082  F122         	movff	?___llmod,printf@val
  5634  0009EA  C083  F123         	movff	?___llmod+1,printf@val+1
  5635  0009EE  C084  F124         	movff	?___llmod+2,printf@val+2
  5636  0009F2  C085  F125         	movff	?___llmod+3,printf@val+3
  5637  0009F6                     l8780:
  5638  0009F6  0101               	movlb	1	; () banked
  5639  0009F8  0730               	decf	printf@c& (0+255),f,b
  5640  0009FA  0101               	movlb	1	; () banked
  5641  0009FC  2930               	incf	printf@c& (0+255),w,b
  5642  0009FE  B4D8               	btfsc	status,2,c
  5643  000A00  D008               	goto	l8786
  5644  000A02  D78B               	goto	l8774
  5645  000A04                     l8782:
  5646                           
  5647                           ; BSR set to: 1
  5648                           ;doprnt.c: 1236: (putch('0') );
  5649  000A04  0E30               	movlw	48
  5650  000A06  ECE1  F028         	call	_putch
  5651                           
  5652                           ;doprnt.c: 1237: prec--;
  5653  000A0A  0101               	movlb	1	; () banked
  5654  000A0C  072E               	decf	printf@prec& (0+255),f,b
  5655  000A0E  A0D8               	btfss	status,0,c
  5656  000A10  072F               	decf	(printf@prec+1)& (0+255),f,b
  5657  000A12                     l8786:
  5658                           
  5659                           ; BSR set to: 1
  5660  000A12  0101               	movlb	1	; () banked
  5661  000A14  512E               	movf	printf@prec& (0+255),w,b
  5662  000A16  0101               	movlb	1	; () banked
  5663  000A18  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5664  000A1A  B4D8               	btfsc	status,2,c
  5665  000A1C  D173               	goto	l8866
  5666  000A1E  D7F2               	goto	l8782
  5667  000A20                     l792:
  5668                           
  5669                           ; BSR set to: 1
  5670                           ;doprnt.c: 1246: }
  5671                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  5672  000A20  0101               	movlb	1	; () banked
  5673  000A22  BD1C               	btfsc	printf@flag& (0+255),6,b
  5674  000A24  D023               	goto	l8798
  5675                           
  5676                           ; BSR set to: 1
  5677                           ;doprnt.c: 1253: {
  5678                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5679  000A26  C11A  FFD9         	movff	printf@ap,fsr2l
  5680  000A2A  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5681  000A2E  CFDE F122          	movff	postinc2,printf@val
  5682  000A32  CFDD F123          	movff	postdec2,printf@val+1
  5683  000A36  0101               	movlb	1	; () banked
  5684  000A38  0E00               	movlw	0
  5685  000A3A  BF23               	btfsc	(printf@val+1)& (0+255),7,b
  5686  000A3C  0EFF               	movlw	-1
  5687  000A3E  6F24               	movwf	(printf@val+2)& (0+255),b
  5688  000A40  6F25               	movwf	(printf@val+3)& (0+255),b
  5689                           
  5690                           ; BSR set to: 1
  5691  000A42  0E02               	movlw	2
  5692  000A44  0101               	movlb	1	; () banked
  5693  000A46  271A               	addwf	printf@ap& (0+255),f,b
  5694  000A48  0E00               	movlw	0
  5695  000A4A  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5696                           
  5697                           ; BSR set to: 1
  5698                           ;doprnt.c: 1261: if((long)val < 0) {
  5699  000A4C  0101               	movlb	1	; () banked
  5700  000A4E  AF25               	btfss	(printf@val+3)& (0+255),7,b
  5701  000A50  D021               	goto	l8802
  5702                           
  5703                           ; BSR set to: 1
  5704                           ;doprnt.c: 1262: flag |= 0x03;
  5705  000A52  0E03               	movlw	3
  5706  000A54  0101               	movlb	1	; () banked
  5707  000A56  131C               	iorwf	printf@flag& (0+255),f,b
  5708                           
  5709                           ; BSR set to: 1
  5710                           ;doprnt.c: 1263: val = -val;
  5711  000A58  0101               	movlb	1	; () banked
  5712  000A5A  1F25               	comf	(printf@val+3)& (0+255),f,b
  5713  000A5C  1F24               	comf	(printf@val+2)& (0+255),f,b
  5714  000A5E  1F23               	comf	(printf@val+1)& (0+255),f,b
  5715  000A60  6D22               	negf	printf@val& (0+255),b
  5716  000A62  0E00               	movlw	0
  5717  000A64  2323               	addwfc	(printf@val+1)& (0+255),f,b
  5718  000A66  2324               	addwfc	(printf@val+2)& (0+255),f,b
  5719  000A68  2325               	addwfc	(printf@val+3)& (0+255),f,b
  5720                           
  5721                           ; BSR set to: 1
  5722                           ;doprnt.c: 1264: }
  5723                           ;doprnt.c: 1266: }
  5724  000A6A  D014               	goto	l8802
  5725  000A6C                     l8798:
  5726                           
  5727                           ; BSR set to: 1
  5728                           ;doprnt.c: 1268: else
  5729                           ;doprnt.c: 1273: {
  5730                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5731  000A6C  C11A  FFD9         	movff	printf@ap,fsr2l
  5732  000A70  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5733  000A74  CFDE F0C5          	movff	postinc2,??_printf
  5734  000A78  CFDD F0C6          	movff	postdec2,??_printf+1
  5735  000A7C  C0C5  F122         	movff	??_printf,printf@val
  5736  000A80  C0C6  F123         	movff	??_printf+1,printf@val+1
  5737  000A84  0101               	movlb	1	; () banked
  5738  000A86  6B24               	clrf	(printf@val+2)& (0+255),b
  5739  000A88  6B25               	clrf	(printf@val+3)& (0+255),b
  5740                           
  5741                           ; BSR set to: 1
  5742  000A8A  0E02               	movlw	2
  5743  000A8C  0101               	movlb	1	; () banked
  5744  000A8E  271A               	addwf	printf@ap& (0+255),f,b
  5745  000A90  0E00               	movlw	0
  5746  000A92  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5747  000A94                     l8802:
  5748                           
  5749                           ; BSR set to: 1
  5750                           ;doprnt.c: 1287: }
  5751                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5752  000A94  0101               	movlb	1	; () banked
  5753  000A96  512E               	movf	printf@prec& (0+255),w,b
  5754  000A98  0101               	movlb	1	; () banked
  5755  000A9A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5756  000A9C  A4D8               	btfss	status,2,c
  5757  000A9E  D00D               	goto	l8808
  5758                           
  5759                           ; BSR set to: 1
  5760  000AA0  0101               	movlb	1	; () banked
  5761  000AA2  5122               	movf	printf@val& (0+255),w,b
  5762  000AA4  0101               	movlb	1	; () banked
  5763  000AA6  1123               	iorwf	(printf@val+1)& (0+255),w,b
  5764  000AA8  0101               	movlb	1	; () banked
  5765  000AAA  1124               	iorwf	(printf@val+2)& (0+255),w,b
  5766  000AAC  0101               	movlb	1	; () banked
  5767  000AAE  1125               	iorwf	(printf@val+3)& (0+255),w,b
  5768  000AB0  A4D8               	btfss	status,2,c
  5769  000AB2  D003               	goto	l8808
  5770                           
  5771                           ; BSR set to: 1
  5772                           ;doprnt.c: 1291: prec++;
  5773  000AB4  0101               	movlb	1	; () banked
  5774  000AB6  4B2E               	infsnz	printf@prec& (0+255),f,b
  5775  000AB8  2B2F               	incf	(printf@prec+1)& (0+255),f,b
  5776  000ABA                     l8808:
  5777                           
  5778                           ; BSR set to: 1
  5779                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5780  000ABA  0E01               	movlw	1
  5781  000ABC  0101               	movlb	1	; () banked
  5782  000ABE  6F30               	movwf	printf@c& (0+255),b
  5783  000AC0                     l8810:
  5784                           
  5785                           ; BSR set to: 1
  5786  000AC0  0E0A               	movlw	10
  5787  000AC2  0101               	movlb	1	; () banked
  5788  000AC4  1930               	xorwf	printf@c& (0+255),w,b
  5789  000AC6  B4D8               	btfsc	status,2,c
  5790  000AC8  D01E               	goto	l8822
  5791                           
  5792                           ; BSR set to: 1
  5793                           ;doprnt.c: 1306: if(val < dpowers[c])
  5794                           
  5795                           ; BSR set to: 1
  5796                           
  5797                           ; BSR set to: 1
  5798  000ACA  0101               	movlb	1	; () banked
  5799  000ACC  5130               	movf	printf@c& (0+255),w,b
  5800  000ACE  0D04               	mullw	4
  5801  000AD0  0EBB               	movlw	low _dpowers
  5802  000AD2  24F3               	addwf	prodl,w,c
  5803  000AD4  6EF6               	movwf	tblptrl,c
  5804  000AD6  0E7D               	movlw	high _dpowers
  5805  000AD8  20F4               	addwfc	prodh,w,c
  5806  000ADA  6EF7               	movwf	tblptrh,c
  5807  000ADC                     	if	0	;There are less than 3 active tblptr bytes
  5808  000ADC                     	endif
  5809  000ADC  0009               	tblrd		*+
  5810  000ADE  50F5               	movf	tablat,w,c
  5811  000AE0  0101               	movlb	1	; () banked
  5812  000AE2  5D22               	subwf	printf@val& (0+255),w,b
  5813  000AE4  0009               	tblrd		*+
  5814  000AE6  50F5               	movf	tablat,w,c
  5815  000AE8  0101               	movlb	1	; () banked
  5816  000AEA  5923               	subwfb	(printf@val+1)& (0+255),w,b
  5817  000AEC  0009               	tblrd		*+
  5818  000AEE  50F5               	movf	tablat,w,c
  5819  000AF0  0101               	movlb	1	; () banked
  5820  000AF2  5924               	subwfb	(printf@val+2)& (0+255),w,b
  5821  000AF4  0009               	tblrd		*+
  5822  000AF6  50F5               	movf	tablat,w,c
  5823  000AF8  0101               	movlb	1	; () banked
  5824  000AFA  5925               	subwfb	(printf@val+3)& (0+255),w,b
  5825  000AFC  A0D8               	btfss	status,0,c
  5826  000AFE  D003               	goto	l8822
  5827                           
  5828                           ; BSR set to: 1
  5829                           
  5830                           ; BSR set to: 1
  5831                           
  5832                           ; BSR set to: 1
  5833                           ;doprnt.c: 1307: break;
  5834  000B00  0101               	movlb	1	; () banked
  5835  000B02  2B30               	incf	printf@c& (0+255),f,b
  5836  000B04  D7DD               	goto	l8810
  5837  000B06                     l8822:
  5838                           
  5839                           ; BSR set to: 1
  5840                           ;doprnt.c: 1339: if(c < prec)
  5841  000B06  0E80               	movlw	128
  5842  000B08  0101               	movlb	1	; () banked
  5843  000B0A  BF30               	btfsc	printf@c& (0+255),7,b
  5844  000B0C  0E7F               	movlw	127
  5845  000B0E  0100               	movlb	0	; () banked
  5846  000B10  6FC5               	movwf	??_printf& (0+255),b
  5847  000B12  0101               	movlb	1	; () banked
  5848  000B14  512E               	movf	printf@prec& (0+255),w,b
  5849  000B16  0101               	movlb	1	; () banked
  5850  000B18  5D30               	subwf	printf@c& (0+255),w,b
  5851  000B1A  0101               	movlb	1	; () banked
  5852  000B1C  512F               	movf	(printf@prec+1)& (0+255),w,b
  5853  000B1E  0A80               	xorlw	128
  5854  000B20  0100               	movlb	0	; () banked
  5855  000B22  59C5               	subwfb	??_printf& (0+255),w,b
  5856  000B24  B0D8               	btfsc	status,0,c
  5857  000B26  D003               	goto	l8826
  5858                           
  5859                           ; BSR set to: 0
  5860                           ;doprnt.c: 1340: c = prec;
  5861  000B28  C12E  F130         	movff	printf@prec,printf@c
  5862  000B2C  D018               	goto	l8830
  5863  000B2E                     l8826:
  5864                           
  5865                           ; BSR set to: 0
  5866                           ;doprnt.c: 1341: else if(prec < c)
  5867  000B2E  0101               	movlb	1	; () banked
  5868  000B30  512F               	movf	(printf@prec+1)& (0+255),w,b
  5869  000B32  0A80               	xorlw	128
  5870  000B34  0100               	movlb	0	; () banked
  5871  000B36  6FC5               	movwf	??_printf& (0+255),b
  5872  000B38  0101               	movlb	1	; () banked
  5873  000B3A  5130               	movf	printf@c& (0+255),w,b
  5874  000B3C  0101               	movlb	1	; () banked
  5875  000B3E  5D2E               	subwf	printf@prec& (0+255),w,b
  5876  000B40  0E80               	movlw	128
  5877  000B42  0101               	movlb	1	; () banked
  5878  000B44  BF30               	btfsc	printf@c& (0+255),7,b
  5879  000B46  0E7F               	movlw	127
  5880  000B48  0100               	movlb	0	; () banked
  5881  000B4A  59C5               	subwfb	??_printf& (0+255),w,b
  5882  000B4C  B0D8               	btfsc	status,0,c
  5883  000B4E  D007               	goto	l8830
  5884                           
  5885                           ; BSR set to: 0
  5886                           ;doprnt.c: 1342: prec = c;
  5887  000B50  0101               	movlb	1	; () banked
  5888  000B52  5130               	movf	printf@c& (0+255),w,b
  5889  000B54  0101               	movlb	1	; () banked
  5890  000B56  6F2E               	movwf	printf@prec& (0+255),b
  5891  000B58  6B2F               	clrf	(printf@prec+1)& (0+255),b
  5892  000B5A  BF2E               	btfsc	printf@prec& (0+255),7,b
  5893  000B5C  072F               	decf	(printf@prec+1)& (0+255),f,b
  5894  000B5E                     l8830:
  5895                           
  5896                           ;doprnt.c: 1345: if(width && flag & 0x03)
  5897  000B5E  0101               	movlb	1	; () banked
  5898  000B60  5128               	movf	printf@width& (0+255),w,b
  5899  000B62  0101               	movlb	1	; () banked
  5900  000B64  1129               	iorwf	(printf@width+1)& (0+255),w,b
  5901  000B66  B4D8               	btfsc	status,2,c
  5902  000B68  D014               	goto	l8836
  5903                           
  5904                           ; BSR set to: 1
  5905  000B6A  0E03               	movlw	3
  5906  000B6C  0101               	movlb	1	; () banked
  5907  000B6E  151C               	andwf	printf@flag& (0+255),w,b
  5908  000B70  0100               	movlb	0	; () banked
  5909  000B72  6FC5               	movwf	??_printf& (0+255),b
  5910  000B74  0E00               	movlw	0
  5911  000B76  0101               	movlb	1	; () banked
  5912  000B78  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5913  000B7A  0100               	movlb	0	; () banked
  5914  000B7C  6FC6               	movwf	(??_printf+1)& (0+255),b
  5915  000B7E  0100               	movlb	0	; () banked
  5916  000B80  51C5               	movf	??_printf& (0+255),w,b
  5917  000B82  0100               	movlb	0	; () banked
  5918  000B84  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5919  000B86  B4D8               	btfsc	status,2,c
  5920  000B88  D004               	goto	l8836
  5921                           
  5922                           ; BSR set to: 0
  5923                           ;doprnt.c: 1346: width--;
  5924  000B8A  0101               	movlb	1	; () banked
  5925  000B8C  0728               	decf	printf@width& (0+255),f,b
  5926  000B8E  A0D8               	btfss	status,0,c
  5927  000B90  0729               	decf	(printf@width+1)& (0+255),f,b
  5928  000B92                     l8836:
  5929                           
  5930                           ;doprnt.c: 1348: if(flag & 0x4000) {
  5931  000B92  0101               	movlb	1	; () banked
  5932  000B94  AD1D               	btfss	(printf@flag+1)& (0+255),6,b
  5933  000B96  D01E               	goto	l8844
  5934                           
  5935                           ; BSR set to: 1
  5936                           ;doprnt.c: 1349: if(width > prec)
  5937  000B98  0101               	movlb	1	; () banked
  5938  000B9A  5128               	movf	printf@width& (0+255),w,b
  5939  000B9C  0101               	movlb	1	; () banked
  5940  000B9E  5D2E               	subwf	printf@prec& (0+255),w,b
  5941  000BA0  0101               	movlb	1	; () banked
  5942  000BA2  512F               	movf	(printf@prec+1)& (0+255),w,b
  5943  000BA4  0A80               	xorlw	128
  5944  000BA6  0100               	movlb	0	; () banked
  5945  000BA8  6FC5               	movwf	??_printf& (0+255),b
  5946  000BAA  0101               	movlb	1	; () banked
  5947  000BAC  5129               	movf	(printf@width+1)& (0+255),w,b
  5948  000BAE  0A80               	xorlw	128
  5949  000BB0  0100               	movlb	0	; () banked
  5950  000BB2  59C5               	subwfb	??_printf& (0+255),w,b
  5951  000BB4  B0D8               	btfsc	status,0,c
  5952  000BB6  D009               	goto	l8842
  5953                           
  5954                           ; BSR set to: 0
  5955                           ;doprnt.c: 1350: width -= prec;
  5956  000BB8  0101               	movlb	1	; () banked
  5957  000BBA  512E               	movf	printf@prec& (0+255),w,b
  5958  000BBC  0101               	movlb	1	; () banked
  5959  000BBE  5F28               	subwf	printf@width& (0+255),f,b
  5960  000BC0  0101               	movlb	1	; () banked
  5961  000BC2  512F               	movf	(printf@prec+1)& (0+255),w,b
  5962  000BC4  0101               	movlb	1	; () banked
  5963  000BC6  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  5964  000BC8  D005               	goto	l8844
  5965  000BCA                     l8842:
  5966                           
  5967                           ;doprnt.c: 1351: else
  5968                           ;doprnt.c: 1352: width = 0;
  5969  000BCA  0E00               	movlw	0
  5970  000BCC  0101               	movlb	1	; () banked
  5971  000BCE  6F29               	movwf	(printf@width+1)& (0+255),b
  5972  000BD0  0E00               	movlw	0
  5973  000BD2  6F28               	movwf	printf@width& (0+255),b
  5974  000BD4                     l8844:
  5975                           
  5976                           ; BSR set to: 1
  5977                           ;doprnt.c: 1353: }
  5978                           ;doprnt.c: 1381: if(width > c)
  5979  000BD4  0E80               	movlw	128
  5980  000BD6  0101               	movlb	1	; () banked
  5981  000BD8  BF30               	btfsc	printf@c& (0+255),7,b
  5982  000BDA  0E7F               	movlw	127
  5983  000BDC  0100               	movlb	0	; () banked
  5984  000BDE  6FC5               	movwf	??_printf& (0+255),b
  5985  000BE0  0101               	movlb	1	; () banked
  5986  000BE2  5128               	movf	printf@width& (0+255),w,b
  5987  000BE4  0101               	movlb	1	; () banked
  5988  000BE6  5D30               	subwf	printf@c& (0+255),w,b
  5989  000BE8  0101               	movlb	1	; () banked
  5990  000BEA  5129               	movf	(printf@width+1)& (0+255),w,b
  5991  000BEC  0A80               	xorlw	128
  5992  000BEE  0100               	movlb	0	; () banked
  5993  000BF0  59C5               	subwfb	??_printf& (0+255),w,b
  5994  000BF2  B0D8               	btfsc	status,0,c
  5995  000BF4  D00B               	goto	l8848
  5996                           
  5997                           ; BSR set to: 0
  5998                           ;doprnt.c: 1382: width -= c;
  5999  000BF6  0101               	movlb	1	; () banked
  6000  000BF8  5130               	movf	printf@c& (0+255),w,b
  6001  000BFA  0101               	movlb	1	; () banked
  6002  000BFC  5F28               	subwf	printf@width& (0+255),f,b
  6003  000BFE  0E00               	movlw	0
  6004  000C00  0101               	movlb	1	; () banked
  6005  000C02  BF30               	btfsc	printf@c& (0+255),7,b
  6006  000C04  0EFF               	movlw	255
  6007  000C06  0101               	movlb	1	; () banked
  6008  000C08  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  6009  000C0A  D005               	goto	l8850
  6010  000C0C                     l8848:
  6011                           
  6012                           ;doprnt.c: 1383: else
  6013                           ;doprnt.c: 1384: width = 0;
  6014  000C0C  0E00               	movlw	0
  6015  000C0E  0101               	movlb	1	; () banked
  6016  000C10  6F29               	movwf	(printf@width+1)& (0+255),b
  6017  000C12  0E00               	movlw	0
  6018  000C14  6F28               	movwf	printf@width& (0+255),b
  6019  000C16                     l8850:
  6020                           
  6021                           ; BSR set to: 1
  6022                           ;doprnt.c: 1422: {
  6023                           ;doprnt.c: 1424: if(width
  6024                           ;doprnt.c: 1428: )
  6025  000C16  0101               	movlb	1	; () banked
  6026  000C18  5128               	movf	printf@width& (0+255),w,b
  6027  000C1A  0101               	movlb	1	; () banked
  6028  000C1C  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6029  000C1E  B4D8               	btfsc	status,2,c
  6030  000C20  D00D               	goto	l8856
  6031  000C22                     l8852:
  6032                           
  6033                           ; BSR set to: 1
  6034                           ;doprnt.c: 1430: (putch(' ') );
  6035  000C22  0E20               	movlw	32
  6036  000C24  ECE1  F028         	call	_putch
  6037                           
  6038                           ;doprnt.c: 1431: while(--width);
  6039  000C28  0101               	movlb	1	; () banked
  6040  000C2A  0728               	decf	printf@width& (0+255),f,b
  6041  000C2C  A0D8               	btfss	status,0,c
  6042  000C2E  0729               	decf	(printf@width+1)& (0+255),f,b
  6043  000C30  0101               	movlb	1	; () banked
  6044  000C32  5128               	movf	printf@width& (0+255),w,b
  6045  000C34  0101               	movlb	1	; () banked
  6046  000C36  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6047  000C38  A4D8               	btfss	status,2,c
  6048  000C3A  D7F3               	goto	l8852
  6049  000C3C                     l8856:
  6050                           
  6051                           ; BSR set to: 1
  6052                           ;doprnt.c: 1438: if(flag & 0x03)
  6053  000C3C  0E03               	movlw	3
  6054  000C3E  0101               	movlb	1	; () banked
  6055  000C40  151C               	andwf	printf@flag& (0+255),w,b
  6056  000C42  0100               	movlb	0	; () banked
  6057  000C44  6FC5               	movwf	??_printf& (0+255),b
  6058  000C46  0E00               	movlw	0
  6059  000C48  0101               	movlb	1	; () banked
  6060  000C4A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6061  000C4C  0100               	movlb	0	; () banked
  6062  000C4E  6FC6               	movwf	(??_printf+1)& (0+255),b
  6063  000C50  0100               	movlb	0	; () banked
  6064  000C52  51C5               	movf	??_printf& (0+255),w,b
  6065  000C54  0100               	movlb	0	; () banked
  6066  000C56  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  6067  000C58  B4D8               	btfsc	status,2,c
  6068  000C5A  D049               	goto	l8864
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;doprnt.c: 1439: (putch('-') );
  6072  000C5C  0E2D               	movlw	45
  6073  000C5E  ECE1  F028         	call	_putch
  6074                           
  6075                           ;doprnt.c: 1469: }
  6076                           ;doprnt.c: 1474: while(prec--) {
  6077  000C62  D045               	goto	l8864
  6078  000C64                     l8860:
  6079                           
  6080                           ;doprnt.c: 1478: {
  6081                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6082  000C64  C12E  F0C5         	movff	printf@prec,??_printf
  6083  000C68  C12F  F0C6         	movff	printf@prec+1,??_printf+1
  6084  000C6C  0100               	movlb	0	; () banked
  6085  000C6E  90D8               	bcf	status,0,c
  6086  000C70  37C5               	rlcf	??_printf& (0+255),f,b
  6087  000C72  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6088  000C74  0100               	movlb	0	; () banked
  6089  000C76  90D8               	bcf	status,0,c
  6090  000C78  37C5               	rlcf	??_printf& (0+255),f,b
  6091  000C7A  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6092  000C7C  0EBB               	movlw	low _dpowers
  6093  000C7E  0100               	movlb	0	; () banked
  6094  000C80  25C5               	addwf	??_printf& (0+255),w,b
  6095  000C82  6EF6               	movwf	tblptrl,c
  6096  000C84  0E7D               	movlw	high _dpowers
  6097  000C86  21C6               	addwfc	(??_printf+1)& (0+255),w,b
  6098  000C88  6EF7               	movwf	tblptrh,c
  6099  000C8A                     	if	0	;There are less than 3 active tblptr bytes
  6100  000C8A                     	endif
  6101  000C8A  0009               	tblrd		*+
  6102  000C8C  CFF5 F079          	movff	tablat,___lldiv@divisor
  6103  000C90  0009               	tblrd		*+
  6104  000C92  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  6105  000C96  0009               	tblrd		*+
  6106  000C98  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  6107  000C9C  000A               	tblrd		*-
  6108  000C9E  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  6109  000CA2  C122  F075         	movff	printf@val,___lldiv@dividend
  6110  000CA6  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  6111  000CAA  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  6112  000CAE  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  6113  000CB2  EC58  F022         	call	___lldiv	;wreg free
  6114  000CB6  C075  F082         	movff	?___lldiv,___llmod@dividend
  6115  000CBA  C076  F083         	movff	?___lldiv+1,___llmod@dividend+1
  6116  000CBE  C077  F084         	movff	?___lldiv+2,___llmod@dividend+2
  6117  000CC2  C078  F085         	movff	?___lldiv+3,___llmod@dividend+3
  6118  000CC6  0E0A               	movlw	10
  6119  000CC8  0100               	movlb	0	; () banked
  6120  000CCA  6F86               	movwf	___llmod@divisor& (0+255),b
  6121  000CCC  0E00               	movlw	0
  6122  000CCE  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  6123  000CD0  0E00               	movlw	0
  6124  000CD2  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  6125  000CD4  0E00               	movlw	0
  6126  000CD6  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  6127  000CD8  EC58  F023         	call	___llmod	;wreg free
  6128  000CDC  0100               	movlb	0	; () banked
  6129  000CDE  5182               	movf	?___llmod& (0+255),w,b
  6130  000CE0  0F30               	addlw	48
  6131  000CE2  0101               	movlb	1	; () banked
  6132  000CE4  6F30               	movwf	printf@c& (0+255),b
  6133                           
  6134                           ; BSR set to: 1
  6135                           ;doprnt.c: 1523: }
  6136                           ;doprnt.c: 1524: (putch(c) );
  6137  000CE6  0101               	movlb	1	; () banked
  6138  000CE8  5130               	movf	printf@c& (0+255),w,b
  6139  000CEA  ECE1  F028         	call	_putch
  6140  000CEE                     l8864:
  6141  000CEE  0101               	movlb	1	; () banked
  6142  000CF0  072E               	decf	printf@prec& (0+255),f,b
  6143  000CF2  A0D8               	btfss	status,0,c
  6144  000CF4  072F               	decf	(printf@prec+1)& (0+255),f,b
  6145  000CF6  0101               	movlb	1	; () banked
  6146  000CF8  292E               	incf	printf@prec& (0+255),w,b
  6147  000CFA  E1B4               	bnz	l8860
  6148  000CFC  0101               	movlb	1	; () banked
  6149  000CFE  292F               	incf	(printf@prec+1)& (0+255),w,b
  6150  000D00  A4D8               	btfss	status,2,c
  6151  000D02  D7B0               	goto	l8860
  6152  000D04                     l8866:
  6153  000D04  C100  FFF6         	movff	printf@f,tblptrl
  6154  000D08  C101  FFF7         	movff	printf@f+1,tblptrh
  6155  000D0C  0101               	movlb	1	; () banked
  6156  000D0E  4B00               	infsnz	printf@f& (0+255),f,b
  6157  000D10  2B01               	incf	(printf@f+1)& (0+255),f,b
  6158  000D12                     	if	0	;tblptru may be non-zero
  6159  000D12                     	endif
  6160  000D12                     	if	0	;tblptru may be non-zero
  6161  000D12                     	endif
  6162  000D12  0008               	tblrd		*
  6163  000D14  CFF5 F130          	movff	tablat,printf@c
  6164  000D18  0101               	movlb	1	; () banked
  6165  000D1A  5130               	movf	printf@c& (0+255),w,b
  6166  000D1C  B4D8               	btfsc	status,2,c
  6167  000D1E  0012               	return	
  6168  000D20  EF63  F000         	goto	l8568
  6169  000D24                     __end_of_printf:
  6170                           	opt stack 0
  6171                           tblptru	equ	0xFF8
  6172                           tblptrh	equ	0xFF7
  6173                           tblptrl	equ	0xFF6
  6174                           tablat	equ	0xFF5
  6175                           prodh	equ	0xFF4
  6176                           prodl	equ	0xFF3
  6177                           intcon	equ	0xFF2
  6178                           postinc0	equ	0xFEE
  6179                           wreg	equ	0xFE8
  6180                           postdec1	equ	0xFE5
  6181                           fsr1l	equ	0xFE1
  6182                           indf2	equ	0xFDF
  6183                           postinc2	equ	0xFDE
  6184                           postdec2	equ	0xFDD
  6185                           fsr2h	equ	0xFDA
  6186                           fsr2l	equ	0xFD9
  6187                           status	equ	0xFD8
  6188                           
  6189 ;; *************** function _scale *****************
  6190 ;; Defined at:
  6191 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6192 ;; Parameters:    Size  Location     Type
  6193 ;;  scl             1    wreg     char 
  6194 ;; Auto vars:     Size  Location     Type
  6195 ;;  scl             1   68[BANK0 ] char 
  6196 ;; Return value:  Size  Location     Type
  6197 ;;                  4   60[BANK0 ] char 
  6198 ;; Registers used:
  6199 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6200 ;; Tracked objects:
  6201 ;;		On entry : 0/0
  6202 ;;		On exit  : 0/0
  6203 ;;		Unchanged: 0/0
  6204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6205 ;;      Params:         0       4       0       0       0       0       0
  6206 ;;      Locals:         0       5       0       0       0       0       0
  6207 ;;      Temps:          0       0       0       0       0       0       0
  6208 ;;      Totals:         0       9       0       0       0       0       0
  6209 ;;Total ram usage:        9 bytes
  6210 ;; Hardware stack levels used:    1
  6211 ;; Hardware stack levels required when called:    9
  6212 ;; This function calls:
  6213 ;;		___awdiv
  6214 ;;		___awmod
  6215 ;;		___flmul
  6216 ;; This function is called by:
  6217 ;;		_printf
  6218 ;; This function uses a non-reentrant model
  6219 ;;
  6220                           
  6221                           	psect	text14
  6222  000D24                     __ptext14:
  6223                           	opt stack 0
  6224  000D24                     _scale:
  6225                           	opt stack 18
  6226                           
  6227                           ; BSR set to: 1
  6228                           ;incstack = 0
  6229                           ;scale@scl stored from wreg
  6230  000D24  0100               	movlb	0	; () banked
  6231  000D26  6FA4               	movwf	scale@scl& (0+255),b
  6232                           
  6233                           ;doprnt.c: 428: if(scl < 0) {
  6234  000D28  0100               	movlb	0	; () banked
  6235  000D2A  AFA4               	btfss	scale@scl& (0+255),7,b
  6236  000D2C  D133               	goto	l7988
  6237                           
  6238                           ; BSR set to: 0
  6239                           ;doprnt.c: 429: scl = -scl;
  6240  000D2E  0100               	movlb	0	; () banked
  6241  000D30  6DA4               	negf	scale@scl& (0+255),b
  6242                           
  6243                           ;doprnt.c: 430: if(scl>=110)
  6244  000D32  0100               	movlb	0	; () banked
  6245  000D34  51A4               	movf	scale@scl& (0+255),w,b
  6246  000D36  0A80               	xorlw	128
  6247  000D38  0F12               	addlw	-238
  6248  000D3A  A0D8               	btfss	status,0,c
  6249  000D3C  D0B2               	goto	l7978
  6250                           
  6251                           ; BSR set to: 0
  6252                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6253  000D3E  0E00               	movlw	0
  6254  000D40  0100               	movlb	0	; () banked
  6255  000D42  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6256  000D44  0E0A               	movlw	10
  6257  000D46  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6258  000D48  0E00               	movlw	0
  6259  000D4A  0100               	movlb	0	; () banked
  6260  000D4C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6261  000D4E  0E64               	movlw	100
  6262  000D50  6F77               	movwf	___awmod@divisor& (0+255),b
  6263  000D52  0100               	movlb	0	; () banked
  6264  000D54  51A4               	movf	scale@scl& (0+255),w,b
  6265  000D56  0100               	movlb	0	; () banked
  6266  000D58  6F75               	movwf	___awmod@dividend& (0+255),b
  6267  000D5A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6268  000D5C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6269  000D5E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6270  000D60  EC07  F023         	call	___awmod	;wreg free
  6271  000D64  C075  F07B         	movff	?___awmod,___awdiv@dividend
  6272  000D68  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  6273  000D6C  ECF9  F021         	call	___awdiv	;wreg free
  6274  000D70  0100               	movlb	0	; () banked
  6275  000D72  90D8               	bcf	status,0,c
  6276  000D74  377B               	rlcf	?___awdiv& (0+255),f,b
  6277  000D76  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6278  000D78  0100               	movlb	0	; () banked
  6279  000D7A  90D8               	bcf	status,0,c
  6280  000D7C  377B               	rlcf	?___awdiv& (0+255),f,b
  6281  000D7E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6282  000D80  0E24               	movlw	36
  6283  000D82  0100               	movlb	0	; () banked
  6284  000D84  277B               	addwf	?___awdiv& (0+255),f,b
  6285  000D86  0E00               	movlw	0
  6286  000D88  0100               	movlb	0	; () banked
  6287  000D8A  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6288  000D8C  0E53               	movlw	low __npowers_
  6289  000D8E  0100               	movlb	0	; () banked
  6290  000D90  257B               	addwf	?___awdiv& (0+255),w,b
  6291  000D92  6EF6               	movwf	tblptrl,c
  6292  000D94  0E7D               	movlw	high __npowers_
  6293  000D96  0100               	movlb	0	; () banked
  6294  000D98  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6295  000D9A  6EF7               	movwf	tblptrh,c
  6296  000D9C                     	if	0	;There are less than 3 active tblptr bytes
  6297  000D9C                     	endif
  6298  000D9C  0009               	tblrd		*+
  6299  000D9E  CFF5 F087          	movff	tablat,___flmul@a
  6300  000DA2  0009               	tblrd		*+
  6301  000DA4  CFF5 F088          	movff	tablat,___flmul@a+1
  6302  000DA8  0009               	tblrd		*+
  6303  000DAA  CFF5 F089          	movff	tablat,___flmul@a+2
  6304  000DAE  000A               	tblrd		*-
  6305  000DB0  CFF5 F08A          	movff	tablat,___flmul@a+3
  6306  000DB4  0E00               	movlw	0
  6307  000DB6  0100               	movlb	0	; () banked
  6308  000DB8  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6309  000DBA  0E64               	movlw	100
  6310  000DBC  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6311  000DBE  0100               	movlb	0	; () banked
  6312  000DC0  51A4               	movf	scale@scl& (0+255),w,b
  6313  000DC2  0100               	movlb	0	; () banked
  6314  000DC4  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6315  000DC6  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6316  000DC8  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6317  000DCA  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6318  000DCC  ECF9  F021         	call	___awdiv	;wreg free
  6319  000DD0  0100               	movlb	0	; () banked
  6320  000DD2  90D8               	bcf	status,0,c
  6321  000DD4  377B               	rlcf	?___awdiv& (0+255),f,b
  6322  000DD6  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6323  000DD8  0100               	movlb	0	; () banked
  6324  000DDA  90D8               	bcf	status,0,c
  6325  000DDC  377B               	rlcf	?___awdiv& (0+255),f,b
  6326  000DDE  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6327  000DE0  0E48               	movlw	72
  6328  000DE2  0100               	movlb	0	; () banked
  6329  000DE4  277B               	addwf	?___awdiv& (0+255),f,b
  6330  000DE6  0E00               	movlw	0
  6331  000DE8  0100               	movlb	0	; () banked
  6332  000DEA  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6333  000DEC  0E53               	movlw	low __npowers_
  6334  000DEE  0100               	movlb	0	; () banked
  6335  000DF0  257B               	addwf	?___awdiv& (0+255),w,b
  6336  000DF2  6EF6               	movwf	tblptrl,c
  6337  000DF4  0E7D               	movlw	high __npowers_
  6338  000DF6  0100               	movlb	0	; () banked
  6339  000DF8  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6340  000DFA  6EF7               	movwf	tblptrh,c
  6341  000DFC                     	if	0	;There are less than 3 active tblptr bytes
  6342  000DFC                     	endif
  6343  000DFC  0009               	tblrd		*+
  6344  000DFE  CFF5 F083          	movff	tablat,___flmul@b
  6345  000E02  0009               	tblrd		*+
  6346  000E04  CFF5 F084          	movff	tablat,___flmul@b+1
  6347  000E08  0009               	tblrd		*+
  6348  000E0A  CFF5 F085          	movff	tablat,___flmul@b+2
  6349  000E0E  000A               	tblrd		*-
  6350  000E10  CFF5 F086          	movff	tablat,___flmul@b+3
  6351  000E14  EC4F  F00B         	call	___flmul	;wreg free
  6352  000E18  C083  F0A0         	movff	?___flmul,_scale$2838
  6353  000E1C  C084  F0A1         	movff	?___flmul+1,_scale$2838+1
  6354  000E20  C085  F0A2         	movff	?___flmul+2,_scale$2838+2
  6355  000E24  C086  F0A3         	movff	?___flmul+3,_scale$2838+3
  6356                           
  6357                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6358  000E28  C0A0  F083         	movff	_scale$2838,___flmul@b
  6359  000E2C  C0A1  F084         	movff	_scale$2838+1,___flmul@b+1
  6360  000E30  C0A2  F085         	movff	_scale$2838+2,___flmul@b+2
  6361  000E34  C0A3  F086         	movff	_scale$2838+3,___flmul@b+3
  6362  000E38  0E00               	movlw	0
  6363  000E3A  0100               	movlb	0	; () banked
  6364  000E3C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6365  000E3E  0E0A               	movlw	10
  6366  000E40  6F77               	movwf	___awmod@divisor& (0+255),b
  6367  000E42  0100               	movlb	0	; () banked
  6368  000E44  51A4               	movf	scale@scl& (0+255),w,b
  6369  000E46  0100               	movlb	0	; () banked
  6370  000E48  6F75               	movwf	___awmod@dividend& (0+255),b
  6371  000E4A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6372  000E4C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6373  000E4E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6374  000E50  EC07  F023         	call	___awmod	;wreg free
  6375  000E54  0100               	movlb	0	; () banked
  6376  000E56  90D8               	bcf	status,0,c
  6377  000E58  3775               	rlcf	?___awmod& (0+255),f,b
  6378  000E5A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6379  000E5C  0100               	movlb	0	; () banked
  6380  000E5E  90D8               	bcf	status,0,c
  6381  000E60  3775               	rlcf	?___awmod& (0+255),f,b
  6382  000E62  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6383  000E64  0E53               	movlw	low __npowers_
  6384  000E66  0100               	movlb	0	; () banked
  6385  000E68  2575               	addwf	?___awmod& (0+255),w,b
  6386  000E6A  6EF6               	movwf	tblptrl,c
  6387  000E6C  0E7D               	movlw	high __npowers_
  6388  000E6E  0100               	movlb	0	; () banked
  6389  000E70  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6390  000E72  6EF7               	movwf	tblptrh,c
  6391  000E74                     	if	0	;There are less than 3 active tblptr bytes
  6392  000E74                     	endif
  6393  000E74  0009               	tblrd		*+
  6394  000E76  CFF5 F087          	movff	tablat,___flmul@a
  6395  000E7A  0009               	tblrd		*+
  6396  000E7C  CFF5 F088          	movff	tablat,___flmul@a+1
  6397  000E80  0009               	tblrd		*+
  6398  000E82  CFF5 F089          	movff	tablat,___flmul@a+2
  6399  000E86  000A               	tblrd		*-
  6400  000E88  CFF5 F08A          	movff	tablat,___flmul@a+3
  6401  000E8C  EC4F  F00B         	call	___flmul	;wreg free
  6402  000E90  C083  F09C         	movff	?___flmul,?_scale
  6403  000E94  C084  F09D         	movff	?___flmul+1,?_scale+1
  6404  000E98  C085  F09E         	movff	?___flmul+2,?_scale+2
  6405  000E9C  C086  F09F         	movff	?___flmul+3,?_scale+3
  6406  000EA0  0012               	return	
  6407  000EA2                     l7978:
  6408                           
  6409                           ;doprnt.c: 432: else if(scl > 10)
  6410  000EA2  0100               	movlb	0	; () banked
  6411  000EA4  51A4               	movf	scale@scl& (0+255),w,b
  6412  000EA6  0A80               	xorlw	128
  6413  000EA8  0F75               	addlw	-139
  6414  000EAA  A0D8               	btfss	status,0,c
  6415  000EAC  D05D               	goto	l7984
  6416                           
  6417                           ; BSR set to: 0
  6418                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6419  000EAE  0E00               	movlw	0
  6420  000EB0  0100               	movlb	0	; () banked
  6421  000EB2  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6422  000EB4  0E0A               	movlw	10
  6423  000EB6  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6424  000EB8  0100               	movlb	0	; () banked
  6425  000EBA  51A4               	movf	scale@scl& (0+255),w,b
  6426  000EBC  0100               	movlb	0	; () banked
  6427  000EBE  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6428  000EC0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6429  000EC2  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6430  000EC4  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6431  000EC6  ECF9  F021         	call	___awdiv	;wreg free
  6432  000ECA  0100               	movlb	0	; () banked
  6433  000ECC  90D8               	bcf	status,0,c
  6434  000ECE  377B               	rlcf	?___awdiv& (0+255),f,b
  6435  000ED0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6436  000ED2  0100               	movlb	0	; () banked
  6437  000ED4  90D8               	bcf	status,0,c
  6438  000ED6  377B               	rlcf	?___awdiv& (0+255),f,b
  6439  000ED8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6440  000EDA  0E24               	movlw	36
  6441  000EDC  0100               	movlb	0	; () banked
  6442  000EDE  277B               	addwf	?___awdiv& (0+255),f,b
  6443  000EE0  0E00               	movlw	0
  6444  000EE2  0100               	movlb	0	; () banked
  6445  000EE4  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6446  000EE6  0E53               	movlw	low __npowers_
  6447  000EE8  0100               	movlb	0	; () banked
  6448  000EEA  257B               	addwf	?___awdiv& (0+255),w,b
  6449  000EEC  6EF6               	movwf	tblptrl,c
  6450  000EEE  0E7D               	movlw	high __npowers_
  6451  000EF0  0100               	movlb	0	; () banked
  6452  000EF2  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6453  000EF4  6EF7               	movwf	tblptrh,c
  6454  000EF6                     	if	0	;There are less than 3 active tblptr bytes
  6455  000EF6                     	endif
  6456  000EF6  0009               	tblrd		*+
  6457  000EF8  CFF5 F083          	movff	tablat,___flmul@b
  6458  000EFC  0009               	tblrd		*+
  6459  000EFE  CFF5 F084          	movff	tablat,___flmul@b+1
  6460  000F02  0009               	tblrd		*+
  6461  000F04  CFF5 F085          	movff	tablat,___flmul@b+2
  6462  000F08  000A               	tblrd		*-
  6463  000F0A  CFF5 F086          	movff	tablat,___flmul@b+3
  6464  000F0E  0E00               	movlw	0
  6465  000F10  0100               	movlb	0	; () banked
  6466  000F12  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6467  000F14  0E0A               	movlw	10
  6468  000F16  6F77               	movwf	___awmod@divisor& (0+255),b
  6469  000F18  0100               	movlb	0	; () banked
  6470  000F1A  51A4               	movf	scale@scl& (0+255),w,b
  6471  000F1C  0100               	movlb	0	; () banked
  6472  000F1E  6F75               	movwf	___awmod@dividend& (0+255),b
  6473  000F20  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6474  000F22  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6475  000F24  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6476  000F26  EC07  F023         	call	___awmod	;wreg free
  6477  000F2A  0100               	movlb	0	; () banked
  6478  000F2C  90D8               	bcf	status,0,c
  6479  000F2E  3775               	rlcf	?___awmod& (0+255),f,b
  6480  000F30  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6481  000F32  0100               	movlb	0	; () banked
  6482  000F34  90D8               	bcf	status,0,c
  6483  000F36  3775               	rlcf	?___awmod& (0+255),f,b
  6484  000F38  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6485  000F3A  0E53               	movlw	low __npowers_
  6486  000F3C  0100               	movlb	0	; () banked
  6487  000F3E  2575               	addwf	?___awmod& (0+255),w,b
  6488  000F40  6EF6               	movwf	tblptrl,c
  6489  000F42  0E7D               	movlw	high __npowers_
  6490  000F44  0100               	movlb	0	; () banked
  6491  000F46  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6492  000F48  6EF7               	movwf	tblptrh,c
  6493  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  6494  000F4A                     	endif
  6495  000F4A  0009               	tblrd		*+
  6496  000F4C  CFF5 F087          	movff	tablat,___flmul@a
  6497  000F50  0009               	tblrd		*+
  6498  000F52  CFF5 F088          	movff	tablat,___flmul@a+1
  6499  000F56  0009               	tblrd		*+
  6500  000F58  CFF5 F089          	movff	tablat,___flmul@a+2
  6501  000F5C  000A               	tblrd		*-
  6502  000F5E  CFF5 F08A          	movff	tablat,___flmul@a+3
  6503  000F62  EC4F  F00B         	call	___flmul	;wreg free
  6504  000F66  D794               	goto	L2
  6505  000F68                     l7984:
  6506                           
  6507                           ;doprnt.c: 434: return _npowers_[scl];
  6508  000F68  0100               	movlb	0	; () banked
  6509  000F6A  51A4               	movf	scale@scl& (0+255),w,b
  6510  000F6C  0D04               	mullw	4
  6511  000F6E  0E53               	movlw	low __npowers_
  6512  000F70  24F3               	addwf	prodl,w,c
  6513  000F72  6EF6               	movwf	tblptrl,c
  6514  000F74  0E7D               	movlw	high __npowers_
  6515  000F76  20F4               	addwfc	prodh,w,c
  6516  000F78  6EF7               	movwf	tblptrh,c
  6517  000F7A                     	if	0	;There are less than 3 active tblptr bytes
  6518  000F7A                     	endif
  6519  000F7A  0009               	tblrd		*+
  6520  000F7C  CFF5 F09C          	movff	tablat,?_scale
  6521  000F80  0009               	tblrd		*+
  6522  000F82  CFF5 F09D          	movff	tablat,?_scale+1
  6523  000F86  0009               	tblrd		*+
  6524  000F88  CFF5 F09E          	movff	tablat,?_scale+2
  6525  000F8C  000A               	tblrd		*-
  6526  000F8E  CFF5 F09F          	movff	tablat,?_scale+3
  6527                           
  6528                           ; BSR set to: 0
  6529  000F92  0012               	return	
  6530  000F94                     l7988:
  6531                           
  6532                           ; BSR set to: 0
  6533                           ;doprnt.c: 435: }
  6534                           ;doprnt.c: 436: if(scl>=110)
  6535  000F94  0100               	movlb	0	; () banked
  6536  000F96  51A4               	movf	scale@scl& (0+255),w,b
  6537  000F98  0A80               	xorlw	128
  6538  000F9A  0F12               	addlw	-238
  6539  000F9C  A0D8               	btfss	status,0,c
  6540  000F9E  D0B2               	goto	l7996
  6541                           
  6542                           ; BSR set to: 0
  6543                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6544  000FA0  0E00               	movlw	0
  6545  000FA2  0100               	movlb	0	; () banked
  6546  000FA4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6547  000FA6  0E0A               	movlw	10
  6548  000FA8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6549  000FAA  0E00               	movlw	0
  6550  000FAC  0100               	movlb	0	; () banked
  6551  000FAE  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6552  000FB0  0E64               	movlw	100
  6553  000FB2  6F77               	movwf	___awmod@divisor& (0+255),b
  6554  000FB4  0100               	movlb	0	; () banked
  6555  000FB6  51A4               	movf	scale@scl& (0+255),w,b
  6556  000FB8  0100               	movlb	0	; () banked
  6557  000FBA  6F75               	movwf	___awmod@dividend& (0+255),b
  6558  000FBC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6559  000FBE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6560  000FC0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6561  000FC2  EC07  F023         	call	___awmod	;wreg free
  6562  000FC6  C075  F07B         	movff	?___awmod,___awdiv@dividend
  6563  000FCA  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  6564  000FCE  ECF9  F021         	call	___awdiv	;wreg free
  6565  000FD2  0100               	movlb	0	; () banked
  6566  000FD4  90D8               	bcf	status,0,c
  6567  000FD6  377B               	rlcf	?___awdiv& (0+255),f,b
  6568  000FD8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6569  000FDA  0100               	movlb	0	; () banked
  6570  000FDC  90D8               	bcf	status,0,c
  6571  000FDE  377B               	rlcf	?___awdiv& (0+255),f,b
  6572  000FE0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6573  000FE2  0E24               	movlw	36
  6574  000FE4  0100               	movlb	0	; () banked
  6575  000FE6  277B               	addwf	?___awdiv& (0+255),f,b
  6576  000FE8  0E00               	movlw	0
  6577  000FEA  0100               	movlb	0	; () banked
  6578  000FEC  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6579  000FEE  0E87               	movlw	low __powers_
  6580  000FF0  0100               	movlb	0	; () banked
  6581  000FF2  257B               	addwf	?___awdiv& (0+255),w,b
  6582  000FF4  6EF6               	movwf	tblptrl,c
  6583  000FF6  0E7D               	movlw	high __powers_
  6584  000FF8  0100               	movlb	0	; () banked
  6585  000FFA  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6586  000FFC  6EF7               	movwf	tblptrh,c
  6587  000FFE                     	if	0	;There are less than 3 active tblptr bytes
  6588  000FFE                     	endif
  6589  000FFE  0009               	tblrd		*+
  6590  001000  CFF5 F087          	movff	tablat,___flmul@a
  6591  001004  0009               	tblrd		*+
  6592  001006  CFF5 F088          	movff	tablat,___flmul@a+1
  6593  00100A  0009               	tblrd		*+
  6594  00100C  CFF5 F089          	movff	tablat,___flmul@a+2
  6595  001010  000A               	tblrd		*-
  6596  001012  CFF5 F08A          	movff	tablat,___flmul@a+3
  6597  001016  0E00               	movlw	0
  6598  001018  0100               	movlb	0	; () banked
  6599  00101A  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6600  00101C  0E64               	movlw	100
  6601  00101E  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6602  001020  0100               	movlb	0	; () banked
  6603  001022  51A4               	movf	scale@scl& (0+255),w,b
  6604  001024  0100               	movlb	0	; () banked
  6605  001026  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6606  001028  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6607  00102A  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6608  00102C  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6609  00102E  ECF9  F021         	call	___awdiv	;wreg free
  6610  001032  0100               	movlb	0	; () banked
  6611  001034  90D8               	bcf	status,0,c
  6612  001036  377B               	rlcf	?___awdiv& (0+255),f,b
  6613  001038  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6614  00103A  0100               	movlb	0	; () banked
  6615  00103C  90D8               	bcf	status,0,c
  6616  00103E  377B               	rlcf	?___awdiv& (0+255),f,b
  6617  001040  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6618  001042  0E48               	movlw	72
  6619  001044  0100               	movlb	0	; () banked
  6620  001046  277B               	addwf	?___awdiv& (0+255),f,b
  6621  001048  0E00               	movlw	0
  6622  00104A  0100               	movlb	0	; () banked
  6623  00104C  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6624  00104E  0E87               	movlw	low __powers_
  6625  001050  0100               	movlb	0	; () banked
  6626  001052  257B               	addwf	?___awdiv& (0+255),w,b
  6627  001054  6EF6               	movwf	tblptrl,c
  6628  001056  0E7D               	movlw	high __powers_
  6629  001058  0100               	movlb	0	; () banked
  6630  00105A  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6631  00105C  6EF7               	movwf	tblptrh,c
  6632  00105E                     	if	0	;There are less than 3 active tblptr bytes
  6633  00105E                     	endif
  6634  00105E  0009               	tblrd		*+
  6635  001060  CFF5 F083          	movff	tablat,___flmul@b
  6636  001064  0009               	tblrd		*+
  6637  001066  CFF5 F084          	movff	tablat,___flmul@b+1
  6638  00106A  0009               	tblrd		*+
  6639  00106C  CFF5 F085          	movff	tablat,___flmul@b+2
  6640  001070  000A               	tblrd		*-
  6641  001072  CFF5 F086          	movff	tablat,___flmul@b+3
  6642  001076  EC4F  F00B         	call	___flmul	;wreg free
  6643  00107A  C083  F0A0         	movff	?___flmul,_scale$2838
  6644  00107E  C084  F0A1         	movff	?___flmul+1,_scale$2838+1
  6645  001082  C085  F0A2         	movff	?___flmul+2,_scale$2838+2
  6646  001086  C086  F0A3         	movff	?___flmul+3,_scale$2838+3
  6647                           
  6648                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6649  00108A  C0A0  F083         	movff	_scale$2838,___flmul@b
  6650  00108E  C0A1  F084         	movff	_scale$2838+1,___flmul@b+1
  6651  001092  C0A2  F085         	movff	_scale$2838+2,___flmul@b+2
  6652  001096  C0A3  F086         	movff	_scale$2838+3,___flmul@b+3
  6653  00109A  0E00               	movlw	0
  6654  00109C  0100               	movlb	0	; () banked
  6655  00109E  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6656  0010A0  0E0A               	movlw	10
  6657  0010A2  6F77               	movwf	___awmod@divisor& (0+255),b
  6658  0010A4  0100               	movlb	0	; () banked
  6659  0010A6  51A4               	movf	scale@scl& (0+255),w,b
  6660  0010A8  0100               	movlb	0	; () banked
  6661  0010AA  6F75               	movwf	___awmod@dividend& (0+255),b
  6662  0010AC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6663  0010AE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6664  0010B0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6665  0010B2  EC07  F023         	call	___awmod	;wreg free
  6666  0010B6  0100               	movlb	0	; () banked
  6667  0010B8  90D8               	bcf	status,0,c
  6668  0010BA  3775               	rlcf	?___awmod& (0+255),f,b
  6669  0010BC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6670  0010BE  0100               	movlb	0	; () banked
  6671  0010C0  90D8               	bcf	status,0,c
  6672  0010C2  3775               	rlcf	?___awmod& (0+255),f,b
  6673  0010C4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6674  0010C6  0E87               	movlw	low __powers_
  6675  0010C8  0100               	movlb	0	; () banked
  6676  0010CA  2575               	addwf	?___awmod& (0+255),w,b
  6677  0010CC  6EF6               	movwf	tblptrl,c
  6678  0010CE  0E7D               	movlw	high __powers_
  6679  0010D0  0100               	movlb	0	; () banked
  6680  0010D2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6681  0010D4  6EF7               	movwf	tblptrh,c
  6682  0010D6                     	if	0	;There are less than 3 active tblptr bytes
  6683  0010D6                     	endif
  6684  0010D6  0009               	tblrd		*+
  6685  0010D8  CFF5 F087          	movff	tablat,___flmul@a
  6686  0010DC  0009               	tblrd		*+
  6687  0010DE  CFF5 F088          	movff	tablat,___flmul@a+1
  6688  0010E2  0009               	tblrd		*+
  6689  0010E4  CFF5 F089          	movff	tablat,___flmul@a+2
  6690  0010E8  000A               	tblrd		*-
  6691  0010EA  CFF5 F08A          	movff	tablat,___flmul@a+3
  6692  0010EE  EC4F  F00B         	call	___flmul	;wreg free
  6693  0010F2  C083  F09C         	movff	?___flmul,?_scale
  6694  0010F6  C084  F09D         	movff	?___flmul+1,?_scale+1
  6695  0010FA  C085  F09E         	movff	?___flmul+2,?_scale+2
  6696  0010FE  C086  F09F         	movff	?___flmul+3,?_scale+3
  6697  001102  0012               	return	
  6698  001104                     l7996:
  6699                           
  6700                           ;doprnt.c: 438: else if(scl > 10)
  6701  001104  0100               	movlb	0	; () banked
  6702  001106  51A4               	movf	scale@scl& (0+255),w,b
  6703  001108  0A80               	xorlw	128
  6704  00110A  0F75               	addlw	-139
  6705  00110C  A0D8               	btfss	status,0,c
  6706  00110E  D05D               	goto	l8002
  6707                           
  6708                           ; BSR set to: 0
  6709                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6710  001110  0E00               	movlw	0
  6711  001112  0100               	movlb	0	; () banked
  6712  001114  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6713  001116  0E0A               	movlw	10
  6714  001118  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6715  00111A  0100               	movlb	0	; () banked
  6716  00111C  51A4               	movf	scale@scl& (0+255),w,b
  6717  00111E  0100               	movlb	0	; () banked
  6718  001120  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6719  001122  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6720  001124  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6721  001126  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6722  001128  ECF9  F021         	call	___awdiv	;wreg free
  6723  00112C  0100               	movlb	0	; () banked
  6724  00112E  90D8               	bcf	status,0,c
  6725  001130  377B               	rlcf	?___awdiv& (0+255),f,b
  6726  001132  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6727  001134  0100               	movlb	0	; () banked
  6728  001136  90D8               	bcf	status,0,c
  6729  001138  377B               	rlcf	?___awdiv& (0+255),f,b
  6730  00113A  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6731  00113C  0E24               	movlw	36
  6732  00113E  0100               	movlb	0	; () banked
  6733  001140  277B               	addwf	?___awdiv& (0+255),f,b
  6734  001142  0E00               	movlw	0
  6735  001144  0100               	movlb	0	; () banked
  6736  001146  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6737  001148  0E87               	movlw	low __powers_
  6738  00114A  0100               	movlb	0	; () banked
  6739  00114C  257B               	addwf	?___awdiv& (0+255),w,b
  6740  00114E  6EF6               	movwf	tblptrl,c
  6741  001150  0E7D               	movlw	high __powers_
  6742  001152  0100               	movlb	0	; () banked
  6743  001154  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6744  001156  6EF7               	movwf	tblptrh,c
  6745  001158                     	if	0	;There are less than 3 active tblptr bytes
  6746  001158                     	endif
  6747  001158  0009               	tblrd		*+
  6748  00115A  CFF5 F083          	movff	tablat,___flmul@b
  6749  00115E  0009               	tblrd		*+
  6750  001160  CFF5 F084          	movff	tablat,___flmul@b+1
  6751  001164  0009               	tblrd		*+
  6752  001166  CFF5 F085          	movff	tablat,___flmul@b+2
  6753  00116A  000A               	tblrd		*-
  6754  00116C  CFF5 F086          	movff	tablat,___flmul@b+3
  6755  001170  0E00               	movlw	0
  6756  001172  0100               	movlb	0	; () banked
  6757  001174  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6758  001176  0E0A               	movlw	10
  6759  001178  6F77               	movwf	___awmod@divisor& (0+255),b
  6760  00117A  0100               	movlb	0	; () banked
  6761  00117C  51A4               	movf	scale@scl& (0+255),w,b
  6762  00117E  0100               	movlb	0	; () banked
  6763  001180  6F75               	movwf	___awmod@dividend& (0+255),b
  6764  001182  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6765  001184  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6766  001186  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6767  001188  EC07  F023         	call	___awmod	;wreg free
  6768  00118C  0100               	movlb	0	; () banked
  6769  00118E  90D8               	bcf	status,0,c
  6770  001190  3775               	rlcf	?___awmod& (0+255),f,b
  6771  001192  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6772  001194  0100               	movlb	0	; () banked
  6773  001196  90D8               	bcf	status,0,c
  6774  001198  3775               	rlcf	?___awmod& (0+255),f,b
  6775  00119A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6776  00119C  0E87               	movlw	low __powers_
  6777  00119E  0100               	movlb	0	; () banked
  6778  0011A0  2575               	addwf	?___awmod& (0+255),w,b
  6779  0011A2  6EF6               	movwf	tblptrl,c
  6780  0011A4  0E7D               	movlw	high __powers_
  6781  0011A6  0100               	movlb	0	; () banked
  6782  0011A8  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6783  0011AA  6EF7               	movwf	tblptrh,c
  6784  0011AC                     	if	0	;There are less than 3 active tblptr bytes
  6785  0011AC                     	endif
  6786  0011AC  0009               	tblrd		*+
  6787  0011AE  CFF5 F087          	movff	tablat,___flmul@a
  6788  0011B2  0009               	tblrd		*+
  6789  0011B4  CFF5 F088          	movff	tablat,___flmul@a+1
  6790  0011B8  0009               	tblrd		*+
  6791  0011BA  CFF5 F089          	movff	tablat,___flmul@a+2
  6792  0011BE  000A               	tblrd		*-
  6793  0011C0  CFF5 F08A          	movff	tablat,___flmul@a+3
  6794  0011C4  EC4F  F00B         	call	___flmul	;wreg free
  6795  0011C8  D794               	goto	L3
  6796  0011CA                     l8002:
  6797                           
  6798                           ;doprnt.c: 440: return _powers_[scl];
  6799  0011CA  0100               	movlb	0	; () banked
  6800  0011CC  51A4               	movf	scale@scl& (0+255),w,b
  6801  0011CE  0D04               	mullw	4
  6802  0011D0  0E87               	movlw	low __powers_
  6803  0011D2  24F3               	addwf	prodl,w,c
  6804  0011D4  6EF6               	movwf	tblptrl,c
  6805  0011D6  0E7D               	movlw	high __powers_
  6806  0011D8  20F4               	addwfc	prodh,w,c
  6807  0011DA  6EF7               	movwf	tblptrh,c
  6808  0011DC                     	if	0	;There are less than 3 active tblptr bytes
  6809  0011DC                     	endif
  6810  0011DC  0009               	tblrd		*+
  6811  0011DE  CFF5 F09C          	movff	tablat,?_scale
  6812  0011E2  0009               	tblrd		*+
  6813  0011E4  CFF5 F09D          	movff	tablat,?_scale+1
  6814  0011E8  0009               	tblrd		*+
  6815  0011EA  CFF5 F09E          	movff	tablat,?_scale+2
  6816  0011EE  000A               	tblrd		*-
  6817  0011F0  CFF5 F09F          	movff	tablat,?_scale+3
  6818  0011F4  0012               	return	
  6819  0011F6                     __end_of_scale:
  6820                           	opt stack 0
  6821                           tblptru	equ	0xFF8
  6822                           tblptrh	equ	0xFF7
  6823                           tblptrl	equ	0xFF6
  6824                           tablat	equ	0xFF5
  6825                           prodh	equ	0xFF4
  6826                           prodl	equ	0xFF3
  6827                           intcon	equ	0xFF2
  6828                           postinc0	equ	0xFEE
  6829                           wreg	equ	0xFE8
  6830                           postdec1	equ	0xFE5
  6831                           fsr1l	equ	0xFE1
  6832                           indf2	equ	0xFDF
  6833                           postinc2	equ	0xFDE
  6834                           postdec2	equ	0xFDD
  6835                           fsr2h	equ	0xFDA
  6836                           fsr2l	equ	0xFD9
  6837                           status	equ	0xFD8
  6838                           
  6839 ;; *************** function _putch *****************
  6840 ;; Defined at:
  6841 ;;		line 59 in file "source/IOConfig.h"
  6842 ;; Parameters:    Size  Location     Type
  6843 ;;  val             1    wreg     unsigned char 
  6844 ;; Auto vars:     Size  Location     Type
  6845 ;;  val             1   34[BANK0 ] unsigned char 
  6846 ;; Return value:  Size  Location     Type
  6847 ;;                  1    wreg      void 
  6848 ;; Registers used:
  6849 ;;		wreg, status,2, status,0, cstack
  6850 ;; Tracked objects:
  6851 ;;		On entry : 0/0
  6852 ;;		On exit  : 0/0
  6853 ;;		Unchanged: 0/0
  6854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6855 ;;      Params:         0       0       0       0       0       0       0
  6856 ;;      Locals:         0       1       0       0       0       0       0
  6857 ;;      Temps:          0       0       0       0       0       0       0
  6858 ;;      Totals:         0       1       0       0       0       0       0
  6859 ;;Total ram usage:        1 bytes
  6860 ;; Hardware stack levels used:    1
  6861 ;; Hardware stack levels required when called:   13
  6862 ;; This function calls:
  6863 ;;		_lcd_putc
  6864 ;; This function is called by:
  6865 ;;		_printf
  6866 ;;		_send_float
  6867 ;;		_send_int32
  6868 ;;		_send_int16
  6869 ;;		_send_float_vt
  6870 ;;		_send_int32_vt
  6871 ;;		_send_int16_vt
  6872 ;; This function uses a non-reentrant model
  6873 ;;
  6874                           
  6875                           	psect	text15
  6876  0051C2                     __ptext15:
  6877                           	opt stack 0
  6878  0051C2                     _putch:
  6879                           	opt stack 14
  6880                           
  6881                           ;incstack = 0
  6882                           ;putch@val stored from wreg
  6883  0051C2  0100               	movlb	0	; () banked
  6884  0051C4  6F82               	movwf	putch@val& (0+255),b
  6885                           
  6886                           ;IOConfig.h: 60: lcd_putc(val);
  6887  0051C6  0100               	movlb	0	; () banked
  6888  0051C8  5182               	movf	putch@val& (0+255),w,b
  6889  0051CA  EC0E  F025         	call	_lcd_putc
  6890  0051CE  0012               	return		;funcret
  6891  0051D0                     __end_of_putch:
  6892                           	opt stack 0
  6893                           tblptru	equ	0xFF8
  6894                           tblptrh	equ	0xFF7
  6895                           tblptrl	equ	0xFF6
  6896                           tablat	equ	0xFF5
  6897                           prodh	equ	0xFF4
  6898                           prodl	equ	0xFF3
  6899                           intcon	equ	0xFF2
  6900                           postinc0	equ	0xFEE
  6901                           wreg	equ	0xFE8
  6902                           postdec1	equ	0xFE5
  6903                           fsr1l	equ	0xFE1
  6904                           indf2	equ	0xFDF
  6905                           postinc2	equ	0xFDE
  6906                           postdec2	equ	0xFDD
  6907                           fsr2h	equ	0xFDA
  6908                           fsr2l	equ	0xFD9
  6909                           status	equ	0xFD8
  6910                           
  6911 ;; *************** function _lcd_putc *****************
  6912 ;; Defined at:
  6913 ;;		line 212 in file "source/../../vclib_lcd.h"
  6914 ;; Parameters:    Size  Location     Type
  6915 ;;  cha             1    wreg     unsigned char 
  6916 ;; Auto vars:     Size  Location     Type
  6917 ;;  cha             1   33[BANK0 ] unsigned char 
  6918 ;; Return value:  Size  Location     Type
  6919 ;;                  1    wreg      void 
  6920 ;; Registers used:
  6921 ;;		wreg, status,2, status,0, cstack
  6922 ;; Tracked objects:
  6923 ;;		On entry : 0/0
  6924 ;;		On exit  : 0/0
  6925 ;;		Unchanged: 0/0
  6926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6927 ;;      Params:         0       0       0       0       0       0       0
  6928 ;;      Locals:         0       1       0       0       0       0       0
  6929 ;;      Temps:          0       1       0       0       0       0       0
  6930 ;;      Totals:         0       2       0       0       0       0       0
  6931 ;;Total ram usage:        2 bytes
  6932 ;; Hardware stack levels used:    1
  6933 ;; Hardware stack levels required when called:   12
  6934 ;; This function calls:
  6935 ;;		_lcd_gotoxy
  6936 ;;		_lcd_send_byte
  6937 ;; This function is called by:
  6938 ;;		_putch
  6939 ;;		_drawMenu
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           
  6943                           	psect	text16
  6944  004A1C                     __ptext16:
  6945                           	opt stack 0
  6946  004A1C                     _lcd_putc:
  6947                           	opt stack 14
  6948                           
  6949                           ;incstack = 0
  6950                           ;lcd_putc@cha stored from wreg
  6951  004A1C  0100               	movlb	0	; () banked
  6952  004A1E  6F81               	movwf	lcd_putc@cha& (0+255),b
  6953                           
  6954                           ;vclib_lcd.h: 213: switch (cha) {
  6955  004A20  D02B               	goto	l7586
  6956  004A22                     l7572:
  6957  004A22  0E01               	movlw	1
  6958  004A24  0100               	movlb	0	; () banked
  6959  004A26  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  6960  004A28  0E01               	movlw	1
  6961  004A2A  ECE8  F027         	call	_lcd_gotoxy
  6962                           
  6963                           ;vclib_lcd.h: 215: break;
  6964  004A2E  0012               	return	
  6965  004A30                     l7574:
  6966  004A30  0E01               	movlw	1
  6967  004A32  0100               	movlb	0	; () banked
  6968  004A34  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  6969  004A36  0E00               	movlw	0
  6970  004A38  EC1C  F027         	call	_lcd_send_byte
  6971                           
  6972                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
  6973  004A3C  0E0B               	movlw	11
  6974  004A3E  0100               	movlb	0	; () banked
  6975  004A40  6F80               	movwf	??_lcd_putc& (0+255),b
  6976  004A42  0E62               	movlw	98
  6977  004A44                     u12357:
  6978  004A44  2EE8               	decfsz	wreg,f,c
  6979  004A46  D7FE               	goto	u12357
  6980  004A48  2F80               	decfsz	??_lcd_putc& (0+255),f,b
  6981  004A4A  D7FC               	goto	u12357
  6982  004A4C  D000               	nop2	
  6983                           
  6984                           ;vclib_lcd.h: 223: break;
  6985  004A4E  0012               	return	
  6986  004A50                     l7578:
  6987  004A50  0E02               	movlw	2
  6988  004A52  0100               	movlb	0	; () banked
  6989  004A54  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  6990  004A56  0E01               	movlw	1
  6991  004A58  ECE8  F027         	call	_lcd_gotoxy
  6992                           
  6993                           ;vclib_lcd.h: 236: break;
  6994  004A5C  0012               	return	
  6995  004A5E                     l7580:
  6996  004A5E  0E10               	movlw	16
  6997  004A60  0100               	movlb	0	; () banked
  6998  004A62  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  6999  004A64  0E00               	movlw	0
  7000  004A66  EC1C  F027         	call	_lcd_send_byte
  7001                           
  7002                           ;vclib_lcd.h: 240: break;
  7003  004A6A  0012               	return	
  7004  004A6C                     l7582:
  7005  004A6C  C081  F07A         	movff	lcd_putc@cha,lcd_send_byte@n
  7006  004A70  0E01               	movlw	1
  7007  004A72  EC1C  F027         	call	_lcd_send_byte
  7008                           
  7009                           ;vclib_lcd.h: 253: }
  7010                           
  7011                           ;vclib_lcd.h: 251: break;
  7012  004A76  0012               	return	
  7013  004A78                     l7586:
  7014  004A78  0100               	movlb	0	; () banked
  7015  004A7A  5181               	movf	lcd_putc@cha& (0+255),w,b
  7016                           
  7017                           ; Switch size 1, requested type "space"
  7018                           ; Number of cases is 4, Range of values is 7 to 12
  7019                           ; switch strategies available:
  7020                           ; Name         Instructions Cycles
  7021                           ; simple_byte           13     7 (average)
  7022                           ;	Chosen strategy is simple_byte
  7023  004A7C  0A07               	xorlw	7	; case 7
  7024  004A7E  B4D8               	btfsc	status,2,c
  7025  004A80  D7D0               	goto	l7572
  7026  004A82  0A0F               	xorlw	15	; case 8
  7027  004A84  B4D8               	btfsc	status,2,c
  7028  004A86  D7EB               	goto	l7580
  7029  004A88  0A02               	xorlw	2	; case 10
  7030  004A8A  B4D8               	btfsc	status,2,c
  7031  004A8C  D7E1               	goto	l7578
  7032  004A8E  0A06               	xorlw	6	; case 12
  7033  004A90  B4D8               	btfsc	status,2,c
  7034  004A92  D7CE               	goto	l7574
  7035  004A94  D7EB               	goto	l7582
  7036  004A96                     __end_of_lcd_putc:
  7037                           	opt stack 0
  7038                           tblptru	equ	0xFF8
  7039                           tblptrh	equ	0xFF7
  7040                           tblptrl	equ	0xFF6
  7041                           tablat	equ	0xFF5
  7042                           prodh	equ	0xFF4
  7043                           prodl	equ	0xFF3
  7044                           intcon	equ	0xFF2
  7045                           postinc0	equ	0xFEE
  7046                           wreg	equ	0xFE8
  7047                           postdec1	equ	0xFE5
  7048                           fsr1l	equ	0xFE1
  7049                           indf2	equ	0xFDF
  7050                           postinc2	equ	0xFDE
  7051                           postdec2	equ	0xFDD
  7052                           fsr2h	equ	0xFDA
  7053                           fsr2l	equ	0xFD9
  7054                           status	equ	0xFD8
  7055                           
  7056 ;; *************** function _lcd_gotoxy *****************
  7057 ;; Defined at:
  7058 ;;		line 198 in file "source/../../vclib_lcd.h"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  pos             1    wreg     unsigned char 
  7061 ;;  fila            1   29[BANK0 ] unsigned char 
  7062 ;; Auto vars:     Size  Location     Type
  7063 ;;  pos             1   30[BANK0 ] unsigned char 
  7064 ;;  address         1   31[BANK0 ] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  1    wreg      void 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7074 ;;      Params:         0       1       0       0       0       0       0
  7075 ;;      Locals:         0       2       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0
  7077 ;;      Totals:         0       3       0       0       0       0       0
  7078 ;;Total ram usage:        3 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:   11
  7081 ;; This function calls:
  7082 ;;		_lcd_send_byte
  7083 ;; This function is called by:
  7084 ;;		_lcd_putc
  7085 ;;		_drawMenu
  7086 ;;		_drawChanVal
  7087 ;;		_drawPassWord
  7088 ;;		_drawBadPass
  7089 ;;		_drawAdvON
  7090 ;;		_drawAdvOFF
  7091 ;;		_drawSNquest
  7092 ;;		_lcd_getc
  7093 ;; This function uses a non-reentrant model
  7094 ;;
  7095                           
  7096                           	psect	text17
  7097  004FD0                     __ptext17:
  7098                           	opt stack 0
  7099  004FD0                     _lcd_gotoxy:
  7100                           	opt stack 14
  7101                           
  7102                           ;incstack = 0
  7103                           ;lcd_gotoxy@pos stored from wreg
  7104  004FD0  0100               	movlb	0	; () banked
  7105  004FD2  6F7E               	movwf	lcd_gotoxy@pos& (0+255),b
  7106                           
  7107                           ;vclib_lcd.h: 199: unsigned char address;
  7108                           ;vclib_lcd.h: 200: if (fila != 1)
  7109  004FD4  0100               	movlb	0	; () banked
  7110  004FD6  057D               	decf	lcd_gotoxy@fila& (0+255),w,b
  7111  004FD8  B4D8               	btfsc	status,2,c
  7112  004FDA  D002               	goto	l7434
  7113                           
  7114                           ; BSR set to: 0
  7115                           ;vclib_lcd.h: 201: address = 0x40;
  7116  004FDC  0E40               	movlw	64
  7117  004FDE  D001               	goto	L4
  7118  004FE0                     l7434:
  7119                           
  7120                           ; BSR set to: 0
  7121                           ;vclib_lcd.h: 202: else
  7122                           ;vclib_lcd.h: 203: address = 0;
  7123  004FE0  0E00               	movlw	0
  7124  004FE2                     L4:
  7125  004FE2  0100               	movlb	0	; () banked
  7126  004FE4  6F7F               	movwf	lcd_gotoxy@address& (0+255),b
  7127                           
  7128                           ; BSR set to: 0
  7129                           ;vclib_lcd.h: 204: address += pos - 1;
  7130                           
  7131                           ; BSR set to: 0
  7132  004FE6  0100               	movlb	0	; () banked
  7133  004FE8  057E               	decf	lcd_gotoxy@pos& (0+255),w,b
  7134  004FEA  0100               	movlb	0	; () banked
  7135  004FEC  277F               	addwf	lcd_gotoxy@address& (0+255),f,b
  7136                           
  7137                           ; BSR set to: 0
  7138                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
  7139  004FEE  0100               	movlb	0	; () banked
  7140  004FF0  517F               	movf	lcd_gotoxy@address& (0+255),w,b
  7141  004FF2  0980               	iorlw	128
  7142  004FF4  0100               	movlb	0	; () banked
  7143  004FF6  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7144  004FF8  0E00               	movlw	0
  7145  004FFA  EC1C  F027         	call	_lcd_send_byte
  7146  004FFE  0012               	return		;funcret
  7147  005000                     __end_of_lcd_gotoxy:
  7148                           	opt stack 0
  7149                           tblptru	equ	0xFF8
  7150                           tblptrh	equ	0xFF7
  7151                           tblptrl	equ	0xFF6
  7152                           tablat	equ	0xFF5
  7153                           prodh	equ	0xFF4
  7154                           prodl	equ	0xFF3
  7155                           intcon	equ	0xFF2
  7156                           postinc0	equ	0xFEE
  7157                           wreg	equ	0xFE8
  7158                           postdec1	equ	0xFE5
  7159                           fsr1l	equ	0xFE1
  7160                           indf2	equ	0xFDF
  7161                           postinc2	equ	0xFDE
  7162                           postdec2	equ	0xFDD
  7163                           fsr2h	equ	0xFDA
  7164                           fsr2l	equ	0xFD9
  7165                           status	equ	0xFD8
  7166                           
  7167 ;; *************** function _lcd_send_byte *****************
  7168 ;; Defined at:
  7169 ;;		line 163 in file "source/../../vclib_lcd.h"
  7170 ;; Parameters:    Size  Location     Type
  7171 ;;  address         1    wreg     unsigned char 
  7172 ;;  n               1   26[BANK0 ] unsigned char 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;  address         1   28[BANK0 ] unsigned char 
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      void 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0, cstack
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7184 ;;      Params:         0       1       0       0       0       0       0
  7185 ;;      Locals:         0       1       0       0       0       0       0
  7186 ;;      Temps:          0       1       0       0       0       0       0
  7187 ;;      Totals:         0       3       0       0       0       0       0
  7188 ;;Total ram usage:        3 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; Hardware stack levels required when called:   10
  7191 ;; This function calls:
  7192 ;;		_lcd_read_byte
  7193 ;;		_lcd_send_4bits
  7194 ;; This function is called by:
  7195 ;;		_lcd_init
  7196 ;;		_lcd_gotoxy
  7197 ;;		_lcd_putc
  7198 ;;		_lcd_set_cgram_char
  7199 ;;		_lcd_cursor_en
  7200 ;;		_lcd_clear
  7201 ;;		_lcd_shift_right
  7202 ;;		_lcd_shift_left
  7203 ;; This function uses a non-reentrant model
  7204 ;;
  7205                           
  7206                           	psect	text18
  7207  004E38                     __ptext18:
  7208                           	opt stack 0
  7209  004E38                     _lcd_send_byte:
  7210                           	opt stack 19
  7211                           
  7212                           ;incstack = 0
  7213                           ;lcd_send_byte@address stored from wreg
  7214  004E38  0100               	movlb	0	; () banked
  7215  004E3A  6F7C               	movwf	lcd_send_byte@address& (0+255),b
  7216                           
  7217                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
  7218  004E3C  9281               	bcf	3969,1,c	;volatile
  7219  004E3E                     l7426:
  7220  004E3E  ECB3  F026         	call	_lcd_read_byte	;wreg free
  7221  004E42  0100               	movlb	0	; () banked
  7222  004E44  6F7B               	movwf	??_lcd_send_byte& (0+255),b
  7223  004E46  0100               	movlb	0	; () banked
  7224  004E48  BF7B               	btfsc	??_lcd_send_byte& (0+255),7,b
  7225  004E4A  D7F9               	goto	l7426
  7226                           
  7227                           ; BSR set to: 0
  7228                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
  7229  004E4C  0100               	movlb	0	; () banked
  7230  004E4E  B17C               	btfsc	lcd_send_byte@address& (0+255),0,b
  7231  004E50  D002               	bra	u8975
  7232  004E52  9281               	bcf	3969,1,c	;volatile
  7233  004E54  D001               	bra	u8976
  7234  004E56                     u8975:
  7235  004E56  8281               	bsf	3969,1,c	;volatile
  7236  004E58                     u8976:
  7237                           
  7238                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7239  004E58  D000               	nop2		;2 cycle nop
  7240  004E5A  D000               	nop2		;2 cycle nop
  7241                           
  7242                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
  7243  004E5C  9481               	bcf	3969,2,c	;volatile
  7244                           
  7245                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7246  004E5E  D000               	nop2		;2 cycle nop
  7247  004E60  D000               	nop2		;2 cycle nop
  7248                           
  7249                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
  7250  004E62  9681               	bcf	3969,3,c	;volatile
  7251                           
  7252                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
  7253  004E64  0100               	movlb	0	; () banked
  7254  004E66  397A               	swapf	lcd_send_byte@n& (0+255),w,b
  7255  004E68  0B0F               	andlw	15
  7256  004E6A  EC80  F024         	call	_lcd_send_4bits
  7257                           
  7258                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
  7259  004E6E  0100               	movlb	0	; () banked
  7260  004E70  517A               	movf	lcd_send_byte@n& (0+255),w,b
  7261  004E72  0B0F               	andlw	15
  7262  004E74  EC80  F024         	call	_lcd_send_4bits
  7263  004E78  0012               	return		;funcret
  7264  004E7A                     __end_of_lcd_send_byte:
  7265                           	opt stack 0
  7266                           tblptru	equ	0xFF8
  7267                           tblptrh	equ	0xFF7
  7268                           tblptrl	equ	0xFF6
  7269                           tablat	equ	0xFF5
  7270                           prodh	equ	0xFF4
  7271                           prodl	equ	0xFF3
  7272                           intcon	equ	0xFF2
  7273                           postinc0	equ	0xFEE
  7274                           wreg	equ	0xFE8
  7275                           postdec1	equ	0xFE5
  7276                           fsr1l	equ	0xFE1
  7277                           indf2	equ	0xFDF
  7278                           postinc2	equ	0xFDE
  7279                           postdec2	equ	0xFDD
  7280                           fsr2h	equ	0xFDA
  7281                           fsr2l	equ	0xFD9
  7282                           status	equ	0xFD8
  7283                           
  7284 ;; *************** function _lcd_send_4bits *****************
  7285 ;; Defined at:
  7286 ;;		line 151 in file "source/../../vclib_lcd.h"
  7287 ;; Parameters:    Size  Location     Type
  7288 ;;  n               1    wreg     unsigned char 
  7289 ;; Auto vars:     Size  Location     Type
  7290 ;;  n               1   25[BANK0 ] unsigned char 
  7291 ;; Return value:  Size  Location     Type
  7292 ;;                  1    wreg      void 
  7293 ;; Registers used:
  7294 ;;		wreg, status,2, cstack
  7295 ;; Tracked objects:
  7296 ;;		On entry : 0/0
  7297 ;;		On exit  : 0/0
  7298 ;;		Unchanged: 0/0
  7299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7300 ;;      Params:         0       0       0       0       0       0       0
  7301 ;;      Locals:         0       5       0       0       0       0       0
  7302 ;;      Temps:          0       0       0       0       0       0       0
  7303 ;;      Totals:         0       5       0       0       0       0       0
  7304 ;;Total ram usage:        5 bytes
  7305 ;; Hardware stack levels used:    1
  7306 ;; Hardware stack levels required when called:    8
  7307 ;; This function calls:
  7308 ;;		Nothing
  7309 ;; This function is called by:
  7310 ;;		_lcd_send_byte
  7311 ;;		_lcd_init
  7312 ;; This function uses a non-reentrant model
  7313 ;;
  7314                           
  7315                           	psect	text19
  7316  004900                     __ptext19:
  7317                           	opt stack 0
  7318  004900                     _lcd_send_4bits:
  7319                           	opt stack 20
  7320                           
  7321                           ;incstack = 0
  7322                           ;lcd_send_4bits@n stored from wreg
  7323  004900  0100               	movlb	0	; () banked
  7324  004902  6F79               	movwf	lcd_send_4bits@n& (0+255),b
  7325                           
  7326                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
  7327  004904  0E01               	movlw	1
  7328  004906  0100               	movlb	0	; () banked
  7329  004908  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7330                           
  7331                           ; BSR set to: 0
  7332  00490A  0100               	movlb	0	; () banked
  7333  00490C  B179               	btfsc	lcd_send_4bits@n& (0+255),0,b
  7334  00490E  D003               	goto	l7396
  7335                           
  7336                           ; BSR set to: 0
  7337  004910  0E00               	movlw	0
  7338  004912  0100               	movlb	0	; () banked
  7339  004914  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7340  004916                     l7396:
  7341                           
  7342                           ; BSR set to: 0
  7343  004916  0100               	movlb	0	; () banked
  7344  004918  B175               	btfsc	_lcd_send_4bits$1602& (0+255),0,b
  7345  00491A  D002               	bra	u8895
  7346  00491C  9881               	bcf	3969,4,c	;volatile
  7347  00491E  D001               	bra	u8896
  7348  004920                     u8895:
  7349  004920  8881               	bsf	3969,4,c	;volatile
  7350  004922                     u8896:
  7351                           
  7352                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
  7353  004922  0E01               	movlw	1
  7354  004924  0100               	movlb	0	; () banked
  7355  004926  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7356                           
  7357                           ; BSR set to: 0
  7358  004928  0100               	movlb	0	; () banked
  7359  00492A  B379               	btfsc	lcd_send_4bits@n& (0+255),1,b
  7360  00492C  D003               	goto	l7402
  7361                           
  7362                           ; BSR set to: 0
  7363  00492E  0E00               	movlw	0
  7364  004930  0100               	movlb	0	; () banked
  7365  004932  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7366  004934                     l7402:
  7367                           
  7368                           ; BSR set to: 0
  7369  004934  0100               	movlb	0	; () banked
  7370  004936  B176               	btfsc	_lcd_send_4bits$1603& (0+255),0,b
  7371  004938  D002               	bra	u8915
  7372  00493A  9A81               	bcf	3969,5,c	;volatile
  7373  00493C  D001               	bra	u8916
  7374  00493E                     u8915:
  7375  00493E  8A81               	bsf	3969,5,c	;volatile
  7376  004940                     u8916:
  7377                           
  7378                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
  7379  004940  0E01               	movlw	1
  7380  004942  0100               	movlb	0	; () banked
  7381  004944  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7382                           
  7383                           ; BSR set to: 0
  7384  004946  0100               	movlb	0	; () banked
  7385  004948  B579               	btfsc	lcd_send_4bits@n& (0+255),2,b
  7386  00494A  D003               	goto	l7408
  7387                           
  7388                           ; BSR set to: 0
  7389  00494C  0E00               	movlw	0
  7390  00494E  0100               	movlb	0	; () banked
  7391  004950  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7392  004952                     l7408:
  7393                           
  7394                           ; BSR set to: 0
  7395  004952  0100               	movlb	0	; () banked
  7396  004954  B177               	btfsc	_lcd_send_4bits$1604& (0+255),0,b
  7397  004956  D002               	bra	u8935
  7398  004958  9C81               	bcf	3969,6,c	;volatile
  7399  00495A  D001               	bra	u8936
  7400  00495C                     u8935:
  7401  00495C  8C81               	bsf	3969,6,c	;volatile
  7402  00495E                     u8936:
  7403                           
  7404                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
  7405  00495E  0E01               	movlw	1
  7406  004960  0100               	movlb	0	; () banked
  7407  004962  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7408                           
  7409                           ; BSR set to: 0
  7410  004964  0100               	movlb	0	; () banked
  7411  004966  B779               	btfsc	lcd_send_4bits@n& (0+255),3,b
  7412  004968  D003               	goto	l7414
  7413                           
  7414                           ; BSR set to: 0
  7415  00496A  0E00               	movlw	0
  7416  00496C  0100               	movlb	0	; () banked
  7417  00496E  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7418  004970                     l7414:
  7419                           
  7420                           ; BSR set to: 0
  7421  004970  0100               	movlb	0	; () banked
  7422  004972  B178               	btfsc	_lcd_send_4bits$1605& (0+255),0,b
  7423  004974  D002               	bra	u8955
  7424  004976  9E81               	bcf	3969,7,c	;volatile
  7425  004978  D001               	bra	u8956
  7426  00497A                     u8955:
  7427  00497A  8E81               	bsf	3969,7,c	;volatile
  7428  00497C                     u8956:
  7429                           
  7430                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7431  00497C  D000               	nop2		;2 cycle nop
  7432  00497E  D000               	nop2		;2 cycle nop
  7433                           
  7434                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
  7435  004980  8681               	bsf	3969,3,c	;volatile
  7436                           
  7437                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
  7438  004982  0E02               	movlw	2
  7439  004984                     u12367:
  7440  004984  2EE8               	decfsz	wreg,f,c
  7441  004986  D7FE               	goto	u12367
  7442  004988  D000               	nop2		;nop
  7443                           
  7444                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
  7445  00498A  9681               	bcf	3969,3,c	;volatile
  7446  00498C  0012               	return		;funcret
  7447  00498E                     __end_of_lcd_send_4bits:
  7448                           	opt stack 0
  7449                           tblptru	equ	0xFF8
  7450                           tblptrh	equ	0xFF7
  7451                           tblptrl	equ	0xFF6
  7452                           tablat	equ	0xFF5
  7453                           prodh	equ	0xFF4
  7454                           prodl	equ	0xFF3
  7455                           intcon	equ	0xFF2
  7456                           postinc0	equ	0xFEE
  7457                           wreg	equ	0xFE8
  7458                           postdec1	equ	0xFE5
  7459                           fsr1l	equ	0xFE1
  7460                           indf2	equ	0xFDF
  7461                           postinc2	equ	0xFDE
  7462                           postdec2	equ	0xFDD
  7463                           fsr2h	equ	0xFDA
  7464                           fsr2l	equ	0xFD9
  7465                           status	equ	0xFD8
  7466                           
  7467 ;; *************** function _lcd_read_byte *****************
  7468 ;; Defined at:
  7469 ;;		line 127 in file "source/../../vclib_lcd.h"
  7470 ;; Parameters:    Size  Location     Type
  7471 ;;		None
  7472 ;; Auto vars:     Size  Location     Type
  7473 ;;  high            1   24[BANK0 ] unsigned char 
  7474 ;;  low             1   23[BANK0 ] unsigned char 
  7475 ;; Return value:  Size  Location     Type
  7476 ;;                  1    wreg      unsigned char 
  7477 ;; Registers used:
  7478 ;;		wreg, status,2, status,0, cstack
  7479 ;; Tracked objects:
  7480 ;;		On entry : 0/0
  7481 ;;		On exit  : 0/0
  7482 ;;		Unchanged: 0/0
  7483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7484 ;;      Params:         0       0       0       0       0       0       0
  7485 ;;      Locals:         0       2       0       0       0       0       0
  7486 ;;      Temps:          0       0       0       0       0       0       0
  7487 ;;      Totals:         0       2       0       0       0       0       0
  7488 ;;Total ram usage:        2 bytes
  7489 ;; Hardware stack levels used:    1
  7490 ;; Hardware stack levels required when called:    9
  7491 ;; This function calls:
  7492 ;;		_lcd_read_4bits
  7493 ;; This function is called by:
  7494 ;;		_lcd_send_byte
  7495 ;;		_lcd_getc
  7496 ;; This function uses a non-reentrant model
  7497 ;;
  7498                           
  7499                           	psect	text20
  7500  004D66                     __ptext20:
  7501                           	opt stack 0
  7502  004D66                     _lcd_read_byte:
  7503                           	opt stack 19
  7504                           
  7505                           ;vclib_lcd.h: 128: unsigned char low, high;
  7506                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
  7507                           
  7508                           ;incstack = 0
  7509  004D66  8893               	bsf	3987,4,c	;volatile
  7510                           
  7511                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
  7512  004D68  8A93               	bsf	3987,5,c	;volatile
  7513                           
  7514                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
  7515  004D6A  8C93               	bsf	3987,6,c	;volatile
  7516                           
  7517                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
  7518  004D6C  8E93               	bsf	3987,7,c	;volatile
  7519                           
  7520                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
  7521  004D6E  8481               	bsf	3969,2,c	;volatile
  7522                           
  7523                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7524  004D70  D000               	nop2		;2 cycle nop
  7525  004D72  D000               	nop2		;2 cycle nop
  7526                           
  7527                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
  7528  004D74  8681               	bsf	3969,3,c	;volatile
  7529                           
  7530                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7531  004D76  D000               	nop2		;2 cycle nop
  7532  004D78  D000               	nop2		;2 cycle nop
  7533                           
  7534                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
  7535  004D7A  EC4B  F025         	call	_lcd_read_4bits	;wreg free
  7536  004D7E  0100               	movlb	0	; () banked
  7537  004D80  6F78               	movwf	lcd_read_byte@high& (0+255),b
  7538                           
  7539                           ; BSR set to: 0
  7540                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
  7541  004D82  9681               	bcf	3969,3,c	;volatile
  7542                           
  7543                           ; BSR set to: 0
  7544                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7545  004D84  D000               	nop2		;2 cycle nop
  7546  004D86  D000               	nop2		;2 cycle nop
  7547                           
  7548                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
  7549  004D88  8681               	bsf	3969,3,c	;volatile
  7550                           
  7551                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7552  004D8A  D000               	nop2		;2 cycle nop
  7553  004D8C  D000               	nop2		;2 cycle nop
  7554                           
  7555                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
  7556  004D8E  EC4B  F025         	call	_lcd_read_4bits	;wreg free
  7557  004D92  0100               	movlb	0	; () banked
  7558  004D94  6F77               	movwf	lcd_read_byte@low& (0+255),b
  7559                           
  7560                           ; BSR set to: 0
  7561                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
  7562  004D96  9681               	bcf	3969,3,c	;volatile
  7563                           
  7564                           ; BSR set to: 0
  7565                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
  7566  004D98  9893               	bcf	3987,4,c	;volatile
  7567                           
  7568                           ; BSR set to: 0
  7569                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
  7570  004D9A  9A93               	bcf	3987,5,c	;volatile
  7571                           
  7572                           ; BSR set to: 0
  7573                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
  7574  004D9C  9C93               	bcf	3987,6,c	;volatile
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
  7578  004D9E  9E93               	bcf	3987,7,c	;volatile
  7579                           
  7580                           ; BSR set to: 0
  7581                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
  7582  004DA0  0100               	movlb	0	; () banked
  7583  004DA2  3978               	swapf	lcd_read_byte@high& (0+255),w,b
  7584  004DA4  0BF0               	andlw	240
  7585  004DA6  0100               	movlb	0	; () banked
  7586  004DA8  1177               	iorwf	lcd_read_byte@low& (0+255),w,b
  7587  004DAA  0012               	return	
  7588  004DAC                     __end_of_lcd_read_byte:
  7589                           	opt stack 0
  7590                           tblptru	equ	0xFF8
  7591                           tblptrh	equ	0xFF7
  7592                           tblptrl	equ	0xFF6
  7593                           tablat	equ	0xFF5
  7594                           prodh	equ	0xFF4
  7595                           prodl	equ	0xFF3
  7596                           intcon	equ	0xFF2
  7597                           postinc0	equ	0xFEE
  7598                           wreg	equ	0xFE8
  7599                           postdec1	equ	0xFE5
  7600                           fsr1l	equ	0xFE1
  7601                           indf2	equ	0xFDF
  7602                           postinc2	equ	0xFDE
  7603                           postdec2	equ	0xFDD
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function _lcd_read_4bits *****************
  7609 ;; Defined at:
  7610 ;;		line 117 in file "source/../../vclib_lcd.h"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;		None
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;  n               1   22[BANK0 ] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      unsigned char 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7624 ;;      Params:         0       0       0       0       0       0       0
  7625 ;;      Locals:         0       1       0       0       0       0       0
  7626 ;;      Temps:          0       1       0       0       0       0       0
  7627 ;;      Totals:         0       2       0       0       0       0       0
  7628 ;;Total ram usage:        2 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:    8
  7631 ;; This function calls:
  7632 ;;		Nothing
  7633 ;; This function is called by:
  7634 ;;		_lcd_read_byte
  7635 ;; This function uses a non-reentrant model
  7636 ;;
  7637                           
  7638                           	psect	text21
  7639  004A96                     __ptext21:
  7640                           	opt stack 0
  7641  004A96                     _lcd_read_4bits:
  7642                           	opt stack 19
  7643                           
  7644                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
  7645                           
  7646                           ; BSR set to: 0
  7647                           ;incstack = 0
  7648  004A96  0E00               	movlw	0
  7649  004A98  0100               	movlb	0	; () banked
  7650  004A9A  6F76               	movwf	lcd_read_4bits@n& (0+255),b
  7651                           
  7652                           ; BSR set to: 0
  7653                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
  7654  004A9C  A881               	btfss	3969,4,c	;volatile
  7655  004A9E  D002               	goto	u8840
  7656  004AA0  0E01               	movlw	1
  7657  004AA2  D001               	goto	u8846
  7658  004AA4                     u8840:
  7659  004AA4  0E00               	movlw	0
  7660  004AA6                     u8846:
  7661  004AA6  0100               	movlb	0	; () banked
  7662  004AA8  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7663                           
  7664                           ; BSR set to: 0
  7665                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
  7666  004AAA  AA81               	btfss	3969,5,c	;volatile
  7667  004AAC  D004               	goto	u8850
  7668  004AAE  0100               	movlb	0	; () banked
  7669  004AB0  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7670  004AB2  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7671  004AB4  D002               	goto	u8858
  7672  004AB6                     u8850:
  7673  004AB6  0100               	movlb	0	; () banked
  7674  004AB8  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7675  004ABA                     u8858:
  7676  004ABA  0100               	movlb	0	; () banked
  7677  004ABC  90D8               	bcf	status,0,c
  7678  004ABE  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7679  004AC0  0100               	movlb	0	; () banked
  7680  004AC2  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7681                           
  7682                           ; BSR set to: 0
  7683                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
  7684  004AC4  AC81               	btfss	3969,6,c	;volatile
  7685  004AC6  D004               	goto	u8860
  7686  004AC8  0100               	movlb	0	; () banked
  7687  004ACA  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7688  004ACC  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7689  004ACE  D002               	goto	u8868
  7690  004AD0                     u8860:
  7691  004AD0  0100               	movlb	0	; () banked
  7692  004AD2  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7693  004AD4                     u8868:
  7694  004AD4  0100               	movlb	0	; () banked
  7695  004AD6  90D8               	bcf	status,0,c
  7696  004AD8  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7697  004ADA  0100               	movlb	0	; () banked
  7698  004ADC  90D8               	bcf	status,0,c
  7699  004ADE  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7700  004AE0  0100               	movlb	0	; () banked
  7701  004AE2  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7702                           
  7703                           ; BSR set to: 0
  7704                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
  7705  004AE4  AE81               	btfss	3969,7,c	;volatile
  7706  004AE6  D004               	goto	u8870
  7707  004AE8  0100               	movlb	0	; () banked
  7708  004AEA  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7709  004AEC  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7710  004AEE  D002               	goto	u8878
  7711  004AF0                     u8870:
  7712  004AF0  0100               	movlb	0	; () banked
  7713  004AF2  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7714  004AF4                     u8878:
  7715  004AF4  0100               	movlb	0	; () banked
  7716  004AF6  90D8               	bcf	status,0,c
  7717  004AF8  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7718  004AFA  0100               	movlb	0	; () banked
  7719  004AFC  90D8               	bcf	status,0,c
  7720  004AFE  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7721  004B00  0100               	movlb	0	; () banked
  7722  004B02  90D8               	bcf	status,0,c
  7723  004B04  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7724  004B06  0100               	movlb	0	; () banked
  7725  004B08  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7726                           
  7727                           ;vclib_lcd.h: 124: return (n);
  7728  004B0A  0100               	movlb	0	; () banked
  7729  004B0C  5176               	movf	lcd_read_4bits@n& (0+255),w,b
  7730  004B0E  0012               	return	
  7731  004B10                     __end_of_lcd_read_4bits:
  7732                           	opt stack 0
  7733                           tblptru	equ	0xFF8
  7734                           tblptrh	equ	0xFF7
  7735                           tblptrl	equ	0xFF6
  7736                           tablat	equ	0xFF5
  7737                           prodh	equ	0xFF4
  7738                           prodl	equ	0xFF3
  7739                           intcon	equ	0xFF2
  7740                           postinc0	equ	0xFEE
  7741                           wreg	equ	0xFE8
  7742                           postdec1	equ	0xFE5
  7743                           fsr1l	equ	0xFE1
  7744                           indf2	equ	0xFDF
  7745                           postinc2	equ	0xFDE
  7746                           postdec2	equ	0xFDD
  7747                           fsr2h	equ	0xFDA
  7748                           fsr2l	equ	0xFD9
  7749                           status	equ	0xFD8
  7750                           
  7751 ;; *************** function _isdigit *****************
  7752 ;; Defined at:
  7753 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  7754 ;; Parameters:    Size  Location     Type
  7755 ;;  c               1    wreg     unsigned char 
  7756 ;; Auto vars:     Size  Location     Type
  7757 ;;  c               1   23[BANK0 ] unsigned char 
  7758 ;; Return value:  Size  Location     Type
  7759 ;;		None               void
  7760 ;; Registers used:
  7761 ;;		wreg, status,2, status,0
  7762 ;; Tracked objects:
  7763 ;;		On entry : 0/0
  7764 ;;		On exit  : 0/0
  7765 ;;		Unchanged: 0/0
  7766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7767 ;;      Params:         0       0       0       0       0       0       0
  7768 ;;      Locals:         0       2       0       0       0       0       0
  7769 ;;      Temps:          0       1       0       0       0       0       0
  7770 ;;      Totals:         0       3       0       0       0       0       0
  7771 ;;Total ram usage:        3 bytes
  7772 ;; Hardware stack levels used:    1
  7773 ;; Hardware stack levels required when called:    8
  7774 ;; This function calls:
  7775 ;;		Nothing
  7776 ;; This function is called by:
  7777 ;;		_printf
  7778 ;; This function uses a non-reentrant model
  7779 ;;
  7780                           
  7781                           	psect	text22
  7782  0050B6                     __ptext22:
  7783                           	opt stack 0
  7784  0050B6                     _isdigit:
  7785                           	opt stack 19
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;incstack = 0
  7789                           ;isdigit@c stored from wreg
  7790  0050B6  0100               	movlb	0	; () banked
  7791  0050B8  6F77               	movwf	isdigit@c& (0+255),b
  7792  0050BA  0E00               	movlw	0
  7793  0050BC  0100               	movlb	0	; () banked
  7794  0050BE  6F76               	movwf	_isdigit$2354& (0+255),b
  7795                           
  7796                           ; BSR set to: 0
  7797  0050C0  0E3A               	movlw	58
  7798  0050C2  0100               	movlb	0	; () banked
  7799  0050C4  6177               	cpfslt	isdigit@c& (0+255),b
  7800  0050C6  D007               	goto	l8014
  7801                           
  7802                           ; BSR set to: 0
  7803  0050C8  0E2F               	movlw	47
  7804  0050CA  0100               	movlb	0	; () banked
  7805  0050CC  6577               	cpfsgt	isdigit@c& (0+255),b
  7806  0050CE  D003               	goto	l8014
  7807                           
  7808                           ; BSR set to: 0
  7809  0050D0  0E01               	movlw	1
  7810  0050D2  0100               	movlb	0	; () banked
  7811  0050D4  6F76               	movwf	_isdigit$2354& (0+255),b
  7812  0050D6                     l8014:
  7813                           
  7814                           ; BSR set to: 0
  7815  0050D6  C076  F075         	movff	_isdigit$2354,??_isdigit
  7816  0050DA  0100               	movlb	0	; () banked
  7817  0050DC  3175               	rrcf	??_isdigit& (0+255),w,b
  7818  0050DE  0012               	return	
  7819  0050E0                     __end_of_isdigit:
  7820                           	opt stack 0
  7821                           tblptru	equ	0xFF8
  7822                           tblptrh	equ	0xFF7
  7823                           tblptrl	equ	0xFF6
  7824                           tablat	equ	0xFF5
  7825                           prodh	equ	0xFF4
  7826                           prodl	equ	0xFF3
  7827                           intcon	equ	0xFF2
  7828                           postinc0	equ	0xFEE
  7829                           wreg	equ	0xFE8
  7830                           postdec1	equ	0xFE5
  7831                           fsr1l	equ	0xFE1
  7832                           indf2	equ	0xFDF
  7833                           postinc2	equ	0xFDE
  7834                           postdec2	equ	0xFDD
  7835                           fsr2h	equ	0xFDA
  7836                           fsr2l	equ	0xFD9
  7837                           status	equ	0xFD8
  7838                           
  7839 ;; *************** function _fround *****************
  7840 ;; Defined at:
  7841 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  7842 ;; Parameters:    Size  Location     Type
  7843 ;;  prec            1    wreg     unsigned char 
  7844 ;; Auto vars:     Size  Location     Type
  7845 ;;  prec            1   72[BANK0 ] unsigned char 
  7846 ;; Return value:  Size  Location     Type
  7847 ;;                  4   60[BANK0 ] unsigned char 
  7848 ;; Registers used:
  7849 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7850 ;; Tracked objects:
  7851 ;;		On entry : 0/0
  7852 ;;		On exit  : 0/0
  7853 ;;		Unchanged: 0/0
  7854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7855 ;;      Params:         0       4       0       0       0       0       0
  7856 ;;      Locals:         0       9       0       0       0       0       0
  7857 ;;      Temps:          0       0       0       0       0       0       0
  7858 ;;      Totals:         0      13       0       0       0       0       0
  7859 ;;Total ram usage:       13 bytes
  7860 ;; Hardware stack levels used:    1
  7861 ;; Hardware stack levels required when called:    9
  7862 ;; This function calls:
  7863 ;;		___awdiv
  7864 ;;		___awmod
  7865 ;;		___flmul
  7866 ;; This function is called by:
  7867 ;;		_printf
  7868 ;; This function uses a non-reentrant model
  7869 ;;
  7870                           
  7871                           	psect	text23
  7872  0025D6                     __ptext23:
  7873                           	opt stack 0
  7874  0025D6                     _fround:
  7875                           	opt stack 18
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;incstack = 0
  7879                           ;fround@prec stored from wreg
  7880  0025D6  0100               	movlb	0	; () banked
  7881  0025D8  6FA8               	movwf	fround@prec& (0+255),b
  7882                           
  7883                           ;doprnt.c: 413: if(prec>=110)
  7884  0025DA  0E6D               	movlw	109
  7885  0025DC  0100               	movlb	0	; () banked
  7886  0025DE  65A8               	cpfsgt	fround@prec& (0+255),b
  7887  0025E0  D0C4               	goto	l7956
  7888                           
  7889                           ; BSR set to: 0
  7890                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7891  0025E2  0E00               	movlw	0
  7892  0025E4  0100               	movlb	0	; () banked
  7893  0025E6  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7894  0025E8  0E0A               	movlw	10
  7895  0025EA  6F7D               	movwf	___awdiv@divisor& (0+255),b
  7896  0025EC  0E00               	movlw	0
  7897  0025EE  0100               	movlb	0	; () banked
  7898  0025F0  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7899  0025F2  0E64               	movlw	100
  7900  0025F4  6F77               	movwf	___awmod@divisor& (0+255),b
  7901  0025F6  C0A8  F075         	movff	fround@prec,___awmod@dividend
  7902  0025FA  0100               	movlb	0	; () banked
  7903  0025FC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7904  0025FE  EC07  F023         	call	___awmod	;wreg free
  7905  002602  C075  F07B         	movff	?___awmod,___awdiv@dividend
  7906  002606  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  7907  00260A  ECF9  F021         	call	___awdiv	;wreg free
  7908  00260E  0100               	movlb	0	; () banked
  7909  002610  90D8               	bcf	status,0,c
  7910  002612  377B               	rlcf	?___awdiv& (0+255),f,b
  7911  002614  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7912  002616  0100               	movlb	0	; () banked
  7913  002618  90D8               	bcf	status,0,c
  7914  00261A  377B               	rlcf	?___awdiv& (0+255),f,b
  7915  00261C  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7916  00261E  0E24               	movlw	36
  7917  002620  0100               	movlb	0	; () banked
  7918  002622  277B               	addwf	?___awdiv& (0+255),f,b
  7919  002624  0E00               	movlw	0
  7920  002626  0100               	movlb	0	; () banked
  7921  002628  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  7922  00262A  0E53               	movlw	low __npowers_
  7923  00262C  0100               	movlb	0	; () banked
  7924  00262E  257B               	addwf	?___awdiv& (0+255),w,b
  7925  002630  6EF6               	movwf	tblptrl,c
  7926  002632  0E7D               	movlw	high __npowers_
  7927  002634  0100               	movlb	0	; () banked
  7928  002636  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7929  002638  6EF7               	movwf	tblptrh,c
  7930  00263A                     	if	0	;There are less than 3 active tblptr bytes
  7931  00263A                     	endif
  7932  00263A  0009               	tblrd		*+
  7933  00263C  CFF5 F087          	movff	tablat,___flmul@a
  7934  002640  0009               	tblrd		*+
  7935  002642  CFF5 F088          	movff	tablat,___flmul@a+1
  7936  002646  0009               	tblrd		*+
  7937  002648  CFF5 F089          	movff	tablat,___flmul@a+2
  7938  00264C  000A               	tblrd		*-
  7939  00264E  CFF5 F08A          	movff	tablat,___flmul@a+3
  7940  002652  0E00               	movlw	0
  7941  002654  0100               	movlb	0	; () banked
  7942  002656  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7943  002658  0E64               	movlw	100
  7944  00265A  6F7D               	movwf	___awdiv@divisor& (0+255),b
  7945  00265C  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  7946  002660  0100               	movlb	0	; () banked
  7947  002662  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  7948  002664  ECF9  F021         	call	___awdiv	;wreg free
  7949  002668  0100               	movlb	0	; () banked
  7950  00266A  90D8               	bcf	status,0,c
  7951  00266C  377B               	rlcf	?___awdiv& (0+255),f,b
  7952  00266E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7953  002670  0100               	movlb	0	; () banked
  7954  002672  90D8               	bcf	status,0,c
  7955  002674  377B               	rlcf	?___awdiv& (0+255),f,b
  7956  002676  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7957  002678  0E48               	movlw	72
  7958  00267A  0100               	movlb	0	; () banked
  7959  00267C  277B               	addwf	?___awdiv& (0+255),f,b
  7960  00267E  0E00               	movlw	0
  7961  002680  0100               	movlb	0	; () banked
  7962  002682  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  7963  002684  0E53               	movlw	low __npowers_
  7964  002686  0100               	movlb	0	; () banked
  7965  002688  257B               	addwf	?___awdiv& (0+255),w,b
  7966  00268A  6EF6               	movwf	tblptrl,c
  7967  00268C  0E7D               	movlw	high __npowers_
  7968  00268E  0100               	movlb	0	; () banked
  7969  002690  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7970  002692  6EF7               	movwf	tblptrh,c
  7971  002694                     	if	0	;There are less than 3 active tblptr bytes
  7972  002694                     	endif
  7973  002694  0009               	tblrd		*+
  7974  002696  CFF5 F083          	movff	tablat,___flmul@b
  7975  00269A  0009               	tblrd		*+
  7976  00269C  CFF5 F084          	movff	tablat,___flmul@b+1
  7977  0026A0  0009               	tblrd		*+
  7978  0026A2  CFF5 F085          	movff	tablat,___flmul@b+2
  7979  0026A6  000A               	tblrd		*-
  7980  0026A8  CFF5 F086          	movff	tablat,___flmul@b+3
  7981  0026AC  EC4F  F00B         	call	___flmul	;wreg free
  7982  0026B0  C083  F0A4         	movff	?___flmul,_fround$2836
  7983  0026B4  C084  F0A5         	movff	?___flmul+1,_fround$2836+1
  7984  0026B8  C085  F0A6         	movff	?___flmul+2,_fround$2836+2
  7985  0026BC  C086  F0A7         	movff	?___flmul+3,_fround$2836+3
  7986                           
  7987                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  7988  0026C0  0E00               	movlw	0
  7989  0026C2  0100               	movlb	0	; () banked
  7990  0026C4  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7991  0026C6  0E0A               	movlw	10
  7992  0026C8  6F77               	movwf	___awmod@divisor& (0+255),b
  7993  0026CA  C0A8  F075         	movff	fround@prec,___awmod@dividend
  7994  0026CE  0100               	movlb	0	; () banked
  7995  0026D0  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7996  0026D2  EC07  F023         	call	___awmod	;wreg free
  7997  0026D6  0100               	movlb	0	; () banked
  7998  0026D8  90D8               	bcf	status,0,c
  7999  0026DA  3775               	rlcf	?___awmod& (0+255),f,b
  8000  0026DC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8001  0026DE  0100               	movlb	0	; () banked
  8002  0026E0  90D8               	bcf	status,0,c
  8003  0026E2  3775               	rlcf	?___awmod& (0+255),f,b
  8004  0026E4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8005  0026E6  0E53               	movlw	low __npowers_
  8006  0026E8  0100               	movlb	0	; () banked
  8007  0026EA  2575               	addwf	?___awmod& (0+255),w,b
  8008  0026EC  6EF6               	movwf	tblptrl,c
  8009  0026EE  0E7D               	movlw	high __npowers_
  8010  0026F0  0100               	movlb	0	; () banked
  8011  0026F2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8012  0026F4  6EF7               	movwf	tblptrh,c
  8013  0026F6                     	if	0	;There are less than 3 active tblptr bytes
  8014  0026F6                     	endif
  8015  0026F6  0009               	tblrd		*+
  8016  0026F8  CFF5 F087          	movff	tablat,___flmul@a
  8017  0026FC  0009               	tblrd		*+
  8018  0026FE  CFF5 F088          	movff	tablat,___flmul@a+1
  8019  002702  0009               	tblrd		*+
  8020  002704  CFF5 F089          	movff	tablat,___flmul@a+2
  8021  002708  000A               	tblrd		*-
  8022  00270A  CFF5 F08A          	movff	tablat,___flmul@a+3
  8023  00270E  C0A4  F083         	movff	_fround$2836,___flmul@b
  8024  002712  C0A5  F084         	movff	_fround$2836+1,___flmul@b+1
  8025  002716  C0A6  F085         	movff	_fround$2836+2,___flmul@b+2
  8026  00271A  C0A7  F086         	movff	_fround$2836+3,___flmul@b+3
  8027  00271E  EC4F  F00B         	call	___flmul	;wreg free
  8028  002722  C083  F0A0         	movff	?___flmul,_fround$2837
  8029  002726  C084  F0A1         	movff	?___flmul+1,_fround$2837+1
  8030  00272A  C085  F0A2         	movff	?___flmul+2,_fround$2837+2
  8031  00272E  C086  F0A3         	movff	?___flmul+3,_fround$2837+3
  8032                           
  8033                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8034  002732  C0A0  F083         	movff	_fround$2837,___flmul@b
  8035  002736  C0A1  F084         	movff	_fround$2837+1,___flmul@b+1
  8036  00273A  C0A2  F085         	movff	_fround$2837+2,___flmul@b+2
  8037  00273E  C0A3  F086         	movff	_fround$2837+3,___flmul@b+3
  8038  002742  0E00               	movlw	0
  8039  002744  0100               	movlb	0	; () banked
  8040  002746  6F87               	movwf	___flmul@a& (0+255),b
  8041  002748  0E00               	movlw	0
  8042  00274A  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8043  00274C  0E00               	movlw	0
  8044  00274E  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8045  002750  0E3F               	movlw	63
  8046  002752  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8047  002754  EC4F  F00B         	call	___flmul	;wreg free
  8048  002758  C083  F09C         	movff	?___flmul,?_fround
  8049  00275C  C084  F09D         	movff	?___flmul+1,?_fround+1
  8050  002760  C085  F09E         	movff	?___flmul+2,?_fround+2
  8051  002764  C086  F09F         	movff	?___flmul+3,?_fround+3
  8052  002768  0012               	return	
  8053  00276A                     l7956:
  8054                           
  8055                           ;doprnt.c: 415: else if(prec > 10)
  8056  00276A  0E0A               	movlw	10
  8057  00276C  0100               	movlb	0	; () banked
  8058  00276E  65A8               	cpfsgt	fround@prec& (0+255),b
  8059  002770  D072               	goto	l7964
  8060                           
  8061                           ; BSR set to: 0
  8062                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8063  002772  0E00               	movlw	0
  8064  002774  0100               	movlb	0	; () banked
  8065  002776  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8066  002778  0E0A               	movlw	10
  8067  00277A  6F77               	movwf	___awmod@divisor& (0+255),b
  8068  00277C  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8069  002780  0100               	movlb	0	; () banked
  8070  002782  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8071  002784  EC07  F023         	call	___awmod	;wreg free
  8072  002788  0100               	movlb	0	; () banked
  8073  00278A  90D8               	bcf	status,0,c
  8074  00278C  3775               	rlcf	?___awmod& (0+255),f,b
  8075  00278E  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8076  002790  0100               	movlb	0	; () banked
  8077  002792  90D8               	bcf	status,0,c
  8078  002794  3775               	rlcf	?___awmod& (0+255),f,b
  8079  002796  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8080  002798  0E53               	movlw	low __npowers_
  8081  00279A  0100               	movlb	0	; () banked
  8082  00279C  2575               	addwf	?___awmod& (0+255),w,b
  8083  00279E  6EF6               	movwf	tblptrl,c
  8084  0027A0  0E7D               	movlw	high __npowers_
  8085  0027A2  0100               	movlb	0	; () banked
  8086  0027A4  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8087  0027A6  6EF7               	movwf	tblptrh,c
  8088  0027A8                     	if	0	;There are less than 3 active tblptr bytes
  8089  0027A8                     	endif
  8090  0027A8  0009               	tblrd		*+
  8091  0027AA  CFF5 F087          	movff	tablat,___flmul@a
  8092  0027AE  0009               	tblrd		*+
  8093  0027B0  CFF5 F088          	movff	tablat,___flmul@a+1
  8094  0027B4  0009               	tblrd		*+
  8095  0027B6  CFF5 F089          	movff	tablat,___flmul@a+2
  8096  0027BA  000A               	tblrd		*-
  8097  0027BC  CFF5 F08A          	movff	tablat,___flmul@a+3
  8098  0027C0  0E00               	movlw	0
  8099  0027C2  0100               	movlb	0	; () banked
  8100  0027C4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8101  0027C6  0E0A               	movlw	10
  8102  0027C8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8103  0027CA  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  8104  0027CE  0100               	movlb	0	; () banked
  8105  0027D0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  8106  0027D2  ECF9  F021         	call	___awdiv	;wreg free
  8107  0027D6  0100               	movlb	0	; () banked
  8108  0027D8  90D8               	bcf	status,0,c
  8109  0027DA  377B               	rlcf	?___awdiv& (0+255),f,b
  8110  0027DC  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8111  0027DE  0100               	movlb	0	; () banked
  8112  0027E0  90D8               	bcf	status,0,c
  8113  0027E2  377B               	rlcf	?___awdiv& (0+255),f,b
  8114  0027E4  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8115  0027E6  0E24               	movlw	36
  8116  0027E8  0100               	movlb	0	; () banked
  8117  0027EA  277B               	addwf	?___awdiv& (0+255),f,b
  8118  0027EC  0E00               	movlw	0
  8119  0027EE  0100               	movlb	0	; () banked
  8120  0027F0  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8121  0027F2  0E53               	movlw	low __npowers_
  8122  0027F4  0100               	movlb	0	; () banked
  8123  0027F6  257B               	addwf	?___awdiv& (0+255),w,b
  8124  0027F8  6EF6               	movwf	tblptrl,c
  8125  0027FA  0E7D               	movlw	high __npowers_
  8126  0027FC  0100               	movlb	0	; () banked
  8127  0027FE  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8128  002800  6EF7               	movwf	tblptrh,c
  8129  002802                     	if	0	;There are less than 3 active tblptr bytes
  8130  002802                     	endif
  8131  002802  0009               	tblrd		*+
  8132  002804  CFF5 F083          	movff	tablat,___flmul@b
  8133  002808  0009               	tblrd		*+
  8134  00280A  CFF5 F084          	movff	tablat,___flmul@b+1
  8135  00280E  0009               	tblrd		*+
  8136  002810  CFF5 F085          	movff	tablat,___flmul@b+2
  8137  002814  000A               	tblrd		*-
  8138  002816  CFF5 F086          	movff	tablat,___flmul@b+3
  8139  00281A  EC4F  F00B         	call	___flmul	;wreg free
  8140  00281E  C083  F0A4         	movff	?___flmul,_fround$2836
  8141  002822  C084  F0A5         	movff	?___flmul+1,_fround$2836+1
  8142  002826  C085  F0A6         	movff	?___flmul+2,_fround$2836+2
  8143  00282A  C086  F0A7         	movff	?___flmul+3,_fround$2836+3
  8144                           
  8145                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8146  00282E  C0A4  F083         	movff	_fround$2836,___flmul@b
  8147  002832  C0A5  F084         	movff	_fround$2836+1,___flmul@b+1
  8148  002836  C0A6  F085         	movff	_fround$2836+2,___flmul@b+2
  8149  00283A  C0A7  F086         	movff	_fround$2836+3,___flmul@b+3
  8150  00283E  0E00               	movlw	0
  8151  002840  0100               	movlb	0	; () banked
  8152  002842  6F87               	movwf	___flmul@a& (0+255),b
  8153  002844  0E00               	movlw	0
  8154  002846  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8155  002848  0E00               	movlw	0
  8156  00284A  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8157  00284C  0E3F               	movlw	63
  8158  00284E  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8159  002850  EC4F  F00B         	call	___flmul	;wreg free
  8160  002854  D781               	goto	L5
  8161  002856                     l7964:
  8162                           
  8163                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8164  002856  0100               	movlb	0	; () banked
  8165  002858  51A8               	movf	fround@prec& (0+255),w,b
  8166  00285A  0D04               	mullw	4
  8167  00285C  0E53               	movlw	low __npowers_
  8168  00285E  24F3               	addwf	prodl,w,c
  8169  002860  6EF6               	movwf	tblptrl,c
  8170  002862  0E7D               	movlw	high __npowers_
  8171  002864  20F4               	addwfc	prodh,w,c
  8172  002866  6EF7               	movwf	tblptrh,c
  8173  002868                     	if	0	;There are less than 3 active tblptr bytes
  8174  002868                     	endif
  8175  002868  0009               	tblrd		*+
  8176  00286A  CFF5 F083          	movff	tablat,___flmul@b
  8177  00286E  0009               	tblrd		*+
  8178  002870  CFF5 F084          	movff	tablat,___flmul@b+1
  8179  002874  0009               	tblrd		*+
  8180  002876  CFF5 F085          	movff	tablat,___flmul@b+2
  8181  00287A  000A               	tblrd		*-
  8182  00287C  CFF5 F086          	movff	tablat,___flmul@b+3
  8183  002880  0E00               	movlw	0
  8184  002882  0100               	movlb	0	; () banked
  8185  002884  6F87               	movwf	___flmul@a& (0+255),b
  8186  002886  0E00               	movlw	0
  8187  002888  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8188  00288A  0E00               	movlw	0
  8189  00288C  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8190  00288E  0E3F               	movlw	63
  8191  002890  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8192  002892  EC4F  F00B         	call	___flmul	;wreg free
  8193  002896  C083  F09C         	movff	?___flmul,?_fround
  8194  00289A  C084  F09D         	movff	?___flmul+1,?_fround+1
  8195  00289E  C085  F09E         	movff	?___flmul+2,?_fround+2
  8196  0028A2  C086  F09F         	movff	?___flmul+3,?_fround+3
  8197  0028A6  0012               	return	
  8198  0028A8                     __end_of_fround:
  8199                           	opt stack 0
  8200                           tblptru	equ	0xFF8
  8201                           tblptrh	equ	0xFF7
  8202                           tblptrl	equ	0xFF6
  8203                           tablat	equ	0xFF5
  8204                           prodh	equ	0xFF4
  8205                           prodl	equ	0xFF3
  8206                           intcon	equ	0xFF2
  8207                           postinc0	equ	0xFEE
  8208                           wreg	equ	0xFE8
  8209                           postdec1	equ	0xFE5
  8210                           fsr1l	equ	0xFE1
  8211                           indf2	equ	0xFDF
  8212                           postinc2	equ	0xFDE
  8213                           postdec2	equ	0xFDD
  8214                           fsr2h	equ	0xFDA
  8215                           fsr2l	equ	0xFD9
  8216                           status	equ	0xFD8
  8217                           
  8218 ;; *************** function ___awmod *****************
  8219 ;; Defined at:
  8220 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8221 ;; Parameters:    Size  Location     Type
  8222 ;;  dividend        2   21[BANK0 ] int 
  8223 ;;  divisor         2   23[BANK0 ] int 
  8224 ;; Auto vars:     Size  Location     Type
  8225 ;;  sign            1   26[BANK0 ] unsigned char 
  8226 ;;  counter         1   25[BANK0 ] unsigned char 
  8227 ;; Return value:  Size  Location     Type
  8228 ;;                  2   21[BANK0 ] int 
  8229 ;; Registers used:
  8230 ;;		wreg, status,2, status,0
  8231 ;; Tracked objects:
  8232 ;;		On entry : 0/0
  8233 ;;		On exit  : 0/0
  8234 ;;		Unchanged: 0/0
  8235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8236 ;;      Params:         0       4       0       0       0       0       0
  8237 ;;      Locals:         0       2       0       0       0       0       0
  8238 ;;      Temps:          0       0       0       0       0       0       0
  8239 ;;      Totals:         0       6       0       0       0       0       0
  8240 ;;Total ram usage:        6 bytes
  8241 ;; Hardware stack levels used:    1
  8242 ;; Hardware stack levels required when called:    8
  8243 ;; This function calls:
  8244 ;;		Nothing
  8245 ;; This function is called by:
  8246 ;;		_fround
  8247 ;;		_scale
  8248 ;; This function uses a non-reentrant model
  8249 ;;
  8250                           
  8251                           	psect	text24
  8252  00460E                     __ptext24:
  8253                           	opt stack 0
  8254  00460E                     ___awmod:
  8255                           	opt stack 18
  8256                           
  8257                           ;incstack = 0
  8258  00460E  0E00               	movlw	0
  8259  004610  0100               	movlb	0	; () banked
  8260  004612  6F7A               	movwf	___awmod@sign& (0+255),b
  8261                           
  8262                           ; BSR set to: 0
  8263  004614  0100               	movlb	0	; () banked
  8264  004616  AF76               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8265  004618  D008               	goto	l7856
  8266                           
  8267                           ; BSR set to: 0
  8268  00461A  0100               	movlb	0	; () banked
  8269  00461C  6D75               	negf	___awmod@dividend& (0+255),b
  8270  00461E  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8271  004620  B0D8               	btfsc	status,0,c
  8272  004622  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8273                           
  8274                           ; BSR set to: 0
  8275  004624  0E01               	movlw	1
  8276  004626  0100               	movlb	0	; () banked
  8277  004628  6F7A               	movwf	___awmod@sign& (0+255),b
  8278  00462A                     l7856:
  8279                           
  8280                           ; BSR set to: 0
  8281  00462A  0100               	movlb	0	; () banked
  8282  00462C  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8283  00462E  D005               	goto	l7860
  8284                           
  8285                           ; BSR set to: 0
  8286  004630  0100               	movlb	0	; () banked
  8287  004632  6D77               	negf	___awmod@divisor& (0+255),b
  8288  004634  1F78               	comf	(___awmod@divisor+1)& (0+255),f,b
  8289  004636  B0D8               	btfsc	status,0,c
  8290  004638  2B78               	incf	(___awmod@divisor+1)& (0+255),f,b
  8291  00463A                     l7860:
  8292                           
  8293                           ; BSR set to: 0
  8294  00463A  0100               	movlb	0	; () banked
  8295  00463C  5177               	movf	___awmod@divisor& (0+255),w,b
  8296  00463E  0100               	movlb	0	; () banked
  8297  004640  1178               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8298  004642  B4D8               	btfsc	status,2,c
  8299  004644  D026               	goto	l7876
  8300                           
  8301                           ; BSR set to: 0
  8302  004646  0E01               	movlw	1
  8303  004648  0100               	movlb	0	; () banked
  8304  00464A  6F79               	movwf	___awmod@counter& (0+255),b
  8305  00464C  D006               	goto	l7866
  8306  00464E                     l7864:
  8307                           
  8308                           ; BSR set to: 0
  8309  00464E  0100               	movlb	0	; () banked
  8310  004650  90D8               	bcf	status,0,c
  8311  004652  3777               	rlcf	___awmod@divisor& (0+255),f,b
  8312  004654  3778               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8313  004656  0100               	movlb	0	; () banked
  8314  004658  2B79               	incf	___awmod@counter& (0+255),f,b
  8315  00465A                     l7866:
  8316                           
  8317                           ; BSR set to: 0
  8318  00465A  0100               	movlb	0	; () banked
  8319  00465C  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8320  00465E  D7F7               	goto	l7864
  8321  004660                     l7868:
  8322                           
  8323                           ; BSR set to: 0
  8324  004660  0100               	movlb	0	; () banked
  8325  004662  5177               	movf	___awmod@divisor& (0+255),w,b
  8326  004664  0100               	movlb	0	; () banked
  8327  004666  5D75               	subwf	___awmod@dividend& (0+255),w,b
  8328  004668  0100               	movlb	0	; () banked
  8329  00466A  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8330  00466C  0100               	movlb	0	; () banked
  8331  00466E  5976               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8332  004670  A0D8               	btfss	status,0,c
  8333  004672  D008               	goto	l7872
  8334                           
  8335                           ; BSR set to: 0
  8336  004674  0100               	movlb	0	; () banked
  8337  004676  5177               	movf	___awmod@divisor& (0+255),w,b
  8338  004678  0100               	movlb	0	; () banked
  8339  00467A  5F75               	subwf	___awmod@dividend& (0+255),f,b
  8340  00467C  0100               	movlb	0	; () banked
  8341  00467E  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8342  004680  0100               	movlb	0	; () banked
  8343  004682  5B76               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8344  004684                     l7872:
  8345                           
  8346                           ; BSR set to: 0
  8347  004684  0100               	movlb	0	; () banked
  8348  004686  90D8               	bcf	status,0,c
  8349  004688  3378               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8350  00468A  3377               	rrcf	___awmod@divisor& (0+255),f,b
  8351                           
  8352                           ; BSR set to: 0
  8353  00468C  0100               	movlb	0	; () banked
  8354  00468E  2F79               	decfsz	___awmod@counter& (0+255),f,b
  8355  004690  D7E7               	goto	l7868
  8356  004692                     l7876:
  8357                           
  8358                           ; BSR set to: 0
  8359  004692  0100               	movlb	0	; () banked
  8360  004694  517A               	movf	___awmod@sign& (0+255),w,b
  8361  004696  0100               	movlb	0	; () banked
  8362  004698  B4D8               	btfsc	status,2,c
  8363  00469A  D005               	goto	l7880
  8364                           
  8365                           ; BSR set to: 0
  8366  00469C  0100               	movlb	0	; () banked
  8367  00469E  6D75               	negf	___awmod@dividend& (0+255),b
  8368  0046A0  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8369  0046A2  B0D8               	btfsc	status,0,c
  8370  0046A4  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8371  0046A6                     l7880:
  8372                           
  8373                           ; BSR set to: 0
  8374  0046A6  C075  F075         	movff	___awmod@dividend,?___awmod
  8375  0046AA  C076  F076         	movff	___awmod@dividend+1,?___awmod+1
  8376  0046AE  0012               	return	
  8377  0046B0                     __end_of___awmod:
  8378                           	opt stack 0
  8379                           tblptru	equ	0xFF8
  8380                           tblptrh	equ	0xFF7
  8381                           tblptrl	equ	0xFF6
  8382                           tablat	equ	0xFF5
  8383                           prodh	equ	0xFF4
  8384                           prodl	equ	0xFF3
  8385                           intcon	equ	0xFF2
  8386                           postinc0	equ	0xFEE
  8387                           wreg	equ	0xFE8
  8388                           postdec1	equ	0xFE5
  8389                           fsr1l	equ	0xFE1
  8390                           indf2	equ	0xFDF
  8391                           postinc2	equ	0xFDE
  8392                           postdec2	equ	0xFDD
  8393                           fsr2h	equ	0xFDA
  8394                           fsr2l	equ	0xFD9
  8395                           status	equ	0xFD8
  8396                           
  8397 ;; *************** function ___awdiv *****************
  8398 ;; Defined at:
  8399 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8400 ;; Parameters:    Size  Location     Type
  8401 ;;  dividend        2   27[BANK0 ] int 
  8402 ;;  divisor         2   29[BANK0 ] int 
  8403 ;; Auto vars:     Size  Location     Type
  8404 ;;  quotient        2   33[BANK0 ] int 
  8405 ;;  sign            1   32[BANK0 ] unsigned char 
  8406 ;;  counter         1   31[BANK0 ] unsigned char 
  8407 ;; Return value:  Size  Location     Type
  8408 ;;                  2   27[BANK0 ] int 
  8409 ;; Registers used:
  8410 ;;		wreg, status,2, status,0
  8411 ;; Tracked objects:
  8412 ;;		On entry : 0/0
  8413 ;;		On exit  : 0/0
  8414 ;;		Unchanged: 0/0
  8415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8416 ;;      Params:         0       4       0       0       0       0       0
  8417 ;;      Locals:         0       4       0       0       0       0       0
  8418 ;;      Temps:          0       0       0       0       0       0       0
  8419 ;;      Totals:         0       8       0       0       0       0       0
  8420 ;;Total ram usage:        8 bytes
  8421 ;; Hardware stack levels used:    1
  8422 ;; Hardware stack levels required when called:    8
  8423 ;; This function calls:
  8424 ;;		Nothing
  8425 ;; This function is called by:
  8426 ;;		_fround
  8427 ;;		_scale
  8428 ;;		_printf
  8429 ;; This function uses a non-reentrant model
  8430 ;;
  8431                           
  8432                           	psect	text25
  8433  0043F2                     __ptext25:
  8434                           	opt stack 0
  8435  0043F2                     ___awdiv:
  8436                           	opt stack 18
  8437                           
  8438                           ; BSR set to: 0
  8439                           ;incstack = 0
  8440  0043F2  0E00               	movlw	0
  8441  0043F4  0100               	movlb	0	; () banked
  8442  0043F6  6F80               	movwf	___awdiv@sign& (0+255),b
  8443                           
  8444                           ; BSR set to: 0
  8445  0043F8  0100               	movlb	0	; () banked
  8446  0043FA  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8447  0043FC  D008               	goto	l7812
  8448                           
  8449                           ; BSR set to: 0
  8450  0043FE  0100               	movlb	0	; () banked
  8451  004400  6D7D               	negf	___awdiv@divisor& (0+255),b
  8452  004402  1F7E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8453  004404  B0D8               	btfsc	status,0,c
  8454  004406  2B7E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8455                           
  8456                           ; BSR set to: 0
  8457  004408  0E01               	movlw	1
  8458  00440A  0100               	movlb	0	; () banked
  8459  00440C  6F80               	movwf	___awdiv@sign& (0+255),b
  8460  00440E                     l7812:
  8461                           
  8462                           ; BSR set to: 0
  8463  00440E  0100               	movlb	0	; () banked
  8464  004410  AF7C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8465  004412  D008               	goto	l7818
  8466                           
  8467                           ; BSR set to: 0
  8468  004414  0100               	movlb	0	; () banked
  8469  004416  6D7B               	negf	___awdiv@dividend& (0+255),b
  8470  004418  1F7C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8471  00441A  B0D8               	btfsc	status,0,c
  8472  00441C  2B7C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8473                           
  8474                           ; BSR set to: 0
  8475  00441E  0E01               	movlw	1
  8476  004420  0100               	movlb	0	; () banked
  8477  004422  1B80               	xorwf	___awdiv@sign& (0+255),f,b
  8478  004424                     l7818:
  8479                           
  8480                           ; BSR set to: 0
  8481  004424  0E00               	movlw	0
  8482  004426  0100               	movlb	0	; () banked
  8483  004428  6F82               	movwf	(___awdiv@quotient+1)& (0+255),b
  8484  00442A  0E00               	movlw	0
  8485  00442C  6F81               	movwf	___awdiv@quotient& (0+255),b
  8486                           
  8487                           ; BSR set to: 0
  8488  00442E  0100               	movlb	0	; () banked
  8489  004430  517D               	movf	___awdiv@divisor& (0+255),w,b
  8490  004432  0100               	movlb	0	; () banked
  8491  004434  117E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8492  004436  B4D8               	btfsc	status,2,c
  8493  004438  D02C               	goto	l7840
  8494                           
  8495                           ; BSR set to: 0
  8496  00443A  0E01               	movlw	1
  8497  00443C  0100               	movlb	0	; () banked
  8498  00443E  6F7F               	movwf	___awdiv@counter& (0+255),b
  8499  004440  D006               	goto	l7826
  8500  004442                     l7824:
  8501                           
  8502                           ; BSR set to: 0
  8503  004442  0100               	movlb	0	; () banked
  8504  004444  90D8               	bcf	status,0,c
  8505  004446  377D               	rlcf	___awdiv@divisor& (0+255),f,b
  8506  004448  377E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8507  00444A  0100               	movlb	0	; () banked
  8508  00444C  2B7F               	incf	___awdiv@counter& (0+255),f,b
  8509  00444E                     l7826:
  8510                           
  8511                           ; BSR set to: 0
  8512  00444E  0100               	movlb	0	; () banked
  8513  004450  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8514  004452  D7F7               	goto	l7824
  8515  004454                     l7828:
  8516                           
  8517                           ; BSR set to: 0
  8518  004454  0100               	movlb	0	; () banked
  8519  004456  90D8               	bcf	status,0,c
  8520  004458  3781               	rlcf	___awdiv@quotient& (0+255),f,b
  8521  00445A  3782               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8522                           
  8523                           ; BSR set to: 0
  8524  00445C  0100               	movlb	0	; () banked
  8525  00445E  517D               	movf	___awdiv@divisor& (0+255),w,b
  8526  004460  0100               	movlb	0	; () banked
  8527  004462  5D7B               	subwf	___awdiv@dividend& (0+255),w,b
  8528  004464  0100               	movlb	0	; () banked
  8529  004466  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8530  004468  0100               	movlb	0	; () banked
  8531  00446A  597C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8532  00446C  A0D8               	btfss	status,0,c
  8533  00446E  D00A               	goto	l7836
  8534                           
  8535                           ; BSR set to: 0
  8536  004470  0100               	movlb	0	; () banked
  8537  004472  517D               	movf	___awdiv@divisor& (0+255),w,b
  8538  004474  0100               	movlb	0	; () banked
  8539  004476  5F7B               	subwf	___awdiv@dividend& (0+255),f,b
  8540  004478  0100               	movlb	0	; () banked
  8541  00447A  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8542  00447C  0100               	movlb	0	; () banked
  8543  00447E  5B7C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8544                           
  8545                           ; BSR set to: 0
  8546  004480  0100               	movlb	0	; () banked
  8547  004482  8181               	bsf	___awdiv@quotient& (0+255),0,b
  8548  004484                     l7836:
  8549                           
  8550                           ; BSR set to: 0
  8551  004484  0100               	movlb	0	; () banked
  8552  004486  90D8               	bcf	status,0,c
  8553  004488  337E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8554  00448A  337D               	rrcf	___awdiv@divisor& (0+255),f,b
  8555                           
  8556                           ; BSR set to: 0
  8557  00448C  0100               	movlb	0	; () banked
  8558  00448E  2F7F               	decfsz	___awdiv@counter& (0+255),f,b
  8559  004490  D7E1               	goto	l7828
  8560  004492                     l7840:
  8561                           
  8562                           ; BSR set to: 0
  8563  004492  0100               	movlb	0	; () banked
  8564  004494  5180               	movf	___awdiv@sign& (0+255),w,b
  8565  004496  0100               	movlb	0	; () banked
  8566  004498  B4D8               	btfsc	status,2,c
  8567  00449A  D005               	goto	l7844
  8568                           
  8569                           ; BSR set to: 0
  8570  00449C  0100               	movlb	0	; () banked
  8571  00449E  6D81               	negf	___awdiv@quotient& (0+255),b
  8572  0044A0  1F82               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8573  0044A2  B0D8               	btfsc	status,0,c
  8574  0044A4  2B82               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8575  0044A6                     l7844:
  8576                           
  8577                           ; BSR set to: 0
  8578  0044A6  C081  F07B         	movff	___awdiv@quotient,?___awdiv
  8579  0044AA  C082  F07C         	movff	___awdiv@quotient+1,?___awdiv+1
  8580  0044AE  0012               	return	
  8581  0044B0                     __end_of___awdiv:
  8582                           	opt stack 0
  8583                           tblptru	equ	0xFF8
  8584                           tblptrh	equ	0xFF7
  8585                           tblptrl	equ	0xFF6
  8586                           tablat	equ	0xFF5
  8587                           prodh	equ	0xFF4
  8588                           prodl	equ	0xFF3
  8589                           intcon	equ	0xFF2
  8590                           postinc0	equ	0xFEE
  8591                           wreg	equ	0xFE8
  8592                           postdec1	equ	0xFE5
  8593                           fsr1l	equ	0xFE1
  8594                           indf2	equ	0xFDF
  8595                           postinc2	equ	0xFDE
  8596                           postdec2	equ	0xFDD
  8597                           fsr2h	equ	0xFDA
  8598                           fsr2l	equ	0xFD9
  8599                           status	equ	0xFD8
  8600                           
  8601 ;; *************** function __tdiv_to_l_ *****************
  8602 ;; Defined at:
  8603 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  8604 ;; Parameters:    Size  Location     Type
  8605 ;;  f1              4   21[BANK0 ] float 
  8606 ;;  f2              4   25[BANK0 ] float 
  8607 ;; Auto vars:     Size  Location     Type
  8608 ;;  quot            4   32[BANK0 ] unsigned long 
  8609 ;;  exp1            1   37[BANK0 ] unsigned char 
  8610 ;;  cntr            1   36[BANK0 ] unsigned char 
  8611 ;; Return value:  Size  Location     Type
  8612 ;;                  4   21[BANK0 ] unsigned long 
  8613 ;; Registers used:
  8614 ;;		wreg, status,2, status,0
  8615 ;; Tracked objects:
  8616 ;;		On entry : 0/0
  8617 ;;		On exit  : 0/0
  8618 ;;		Unchanged: 0/0
  8619 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8620 ;;      Params:         0       8       0       0       0       0       0
  8621 ;;      Locals:         0       6       0       0       0       0       0
  8622 ;;      Temps:          0       3       0       0       0       0       0
  8623 ;;      Totals:         0      17       0       0       0       0       0
  8624 ;;Total ram usage:       17 bytes
  8625 ;; Hardware stack levels used:    1
  8626 ;; Hardware stack levels required when called:    8
  8627 ;; This function calls:
  8628 ;;		Nothing
  8629 ;; This function is called by:
  8630 ;;		_printf
  8631 ;; This function uses a non-reentrant model
  8632 ;;
  8633                           
  8634                           	psect	text26
  8635  0031E2                     __ptext26:
  8636                           	opt stack 0
  8637  0031E2                     __tdiv_to_l_:
  8638                           	opt stack 19
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;incstack = 0
  8642  0031E2  C077  F07D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8643  0031E6  0100               	movlb	0	; () banked
  8644  0031E8  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8645  0031EA  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8646  0031EC  0100               	movlb	0	; () banked
  8647  0031EE  3576               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8648  0031F0  0100               	movlb	0	; () banked
  8649  0031F2  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8650  0031F4  E301               	bnc	u9791
  8651  0031F6  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8652  0031F8                     u9791:
  8653  0031F8  0100               	movlb	0	; () banked
  8654  0031FA  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  8655  0031FC  0100               	movlb	0	; () banked
  8656  0031FE  6F85               	movwf	__tdiv_to_l_@exp1& (0+255),b
  8657  003200  0100               	movlb	0	; () banked
  8658  003202  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8659  003204  A4D8               	btfss	status,2,c
  8660  003206  D00A               	goto	l8024
  8661                           
  8662                           ; BSR set to: 0
  8663  003208  0E00               	movlw	0
  8664  00320A  0100               	movlb	0	; () banked
  8665  00320C  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8666  00320E  0E00               	movlw	0
  8667  003210  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8668  003212  0E00               	movlw	0
  8669  003214  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8670  003216  0E00               	movlw	0
  8671  003218  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8672                           
  8673                           ; BSR set to: 0
  8674  00321A  0012               	return	
  8675  00321C                     l8024:
  8676                           
  8677                           ; BSR set to: 0
  8678  00321C  C07B  F07D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  8679  003220  0100               	movlb	0	; () banked
  8680  003222  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8681  003224  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8682  003226  0100               	movlb	0	; () banked
  8683  003228  357A               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8684  00322A  0100               	movlb	0	; () banked
  8685  00322C  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8686  00322E  E301               	bnc	u9811
  8687  003230  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8688  003232                     u9811:
  8689  003232  0100               	movlb	0	; () banked
  8690  003234  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  8691  003236  0100               	movlb	0	; () banked
  8692  003238  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8693  00323A  0100               	movlb	0	; () banked
  8694  00323C  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8695  00323E  A4D8               	btfss	status,2,c
  8696  003240  D00A               	goto	l8030
  8697                           
  8698                           ; BSR set to: 0
  8699  003242  0E00               	movlw	0
  8700  003244  0100               	movlb	0	; () banked
  8701  003246  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8702  003248  0E00               	movlw	0
  8703  00324A  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8704  00324C  0E00               	movlw	0
  8705  00324E  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8706  003250  0E00               	movlw	0
  8707  003252  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8708                           
  8709                           ; BSR set to: 0
  8710  003254  0012               	return	
  8711  003256                     l8030:
  8712                           
  8713                           ; BSR set to: 0
  8714  003256  0100               	movlb	0	; () banked
  8715  003258  8F76               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  8716                           
  8717                           ; BSR set to: 0
  8718  00325A  0EFF               	movlw	255
  8719  00325C  0100               	movlb	0	; () banked
  8720  00325E  1775               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  8721  003260  0EFF               	movlw	255
  8722  003262  0100               	movlb	0	; () banked
  8723  003264  1776               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8724  003266  0E00               	movlw	0
  8725  003268  0100               	movlb	0	; () banked
  8726  00326A  1777               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8727  00326C  0100               	movlb	0	; () banked
  8728  00326E  8F7A               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  8729                           
  8730                           ; BSR set to: 0
  8731  003270  0EFF               	movlw	255
  8732  003272  0100               	movlb	0	; () banked
  8733  003274  1779               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  8734  003276  0EFF               	movlw	255
  8735  003278  0100               	movlb	0	; () banked
  8736  00327A  177A               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  8737  00327C  0E00               	movlw	0
  8738  00327E  0100               	movlb	0	; () banked
  8739  003280  177B               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  8740                           
  8741                           ; BSR set to: 0
  8742  003282  0E00               	movlw	0
  8743  003284  0100               	movlb	0	; () banked
  8744  003286  6F80               	movwf	__tdiv_to_l_@quot& (0+255),b
  8745  003288  0E00               	movlw	0
  8746  00328A  6F81               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  8747  00328C  0E00               	movlw	0
  8748  00328E  6F82               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  8749  003290  0E00               	movlw	0
  8750  003292  6F83               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  8751                           
  8752                           ; BSR set to: 0
  8753  003294  0E7F               	movlw	127
  8754  003296  0100               	movlb	0	; () banked
  8755  003298  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8756                           
  8757                           ; BSR set to: 0
  8758  00329A  0100               	movlb	0	; () banked
  8759  00329C  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8760  00329E  0F98               	addlw	152
  8761  0032A0  0100               	movlb	0	; () banked
  8762  0032A2  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8763                           
  8764                           ; BSR set to: 0
  8765  0032A4  0E18               	movlw	24
  8766  0032A6  0100               	movlb	0	; () banked
  8767  0032A8  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8768  0032AA                     l1166:
  8769                           
  8770                           ; BSR set to: 0
  8771  0032AA  0100               	movlb	0	; () banked
  8772  0032AC  90D8               	bcf	status,0,c
  8773  0032AE  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8774  0032B0  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8775  0032B2  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8776  0032B4  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8777                           
  8778                           ; BSR set to: 0
  8779  0032B6  0100               	movlb	0	; () banked
  8780  0032B8  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8781  0032BA  0100               	movlb	0	; () banked
  8782  0032BC  5D75               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  8783  0032BE  0100               	movlb	0	; () banked
  8784  0032C0  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8785  0032C2  0100               	movlb	0	; () banked
  8786  0032C4  5976               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8787  0032C6  0100               	movlb	0	; () banked
  8788  0032C8  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8789  0032CA  0100               	movlb	0	; () banked
  8790  0032CC  5977               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  8791  0032CE  A0D8               	btfss	status,0,c
  8792  0032D0  D00E               	goto	l1167
  8793                           
  8794                           ; BSR set to: 0
  8795  0032D2  0100               	movlb	0	; () banked
  8796  0032D4  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8797  0032D6  0100               	movlb	0	; () banked
  8798  0032D8  5F75               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  8799  0032DA  0100               	movlb	0	; () banked
  8800  0032DC  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8801  0032DE  0100               	movlb	0	; () banked
  8802  0032E0  5B76               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8803  0032E2  0100               	movlb	0	; () banked
  8804  0032E4  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8805  0032E6  0100               	movlb	0	; () banked
  8806  0032E8  5B77               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8807                           
  8808                           ; BSR set to: 0
  8809  0032EA  0100               	movlb	0	; () banked
  8810  0032EC  8180               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  8811  0032EE                     l1167:
  8812                           
  8813                           ; BSR set to: 0
  8814  0032EE  0100               	movlb	0	; () banked
  8815  0032F0  90D8               	bcf	status,0,c
  8816  0032F2  3775               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  8817  0032F4  3776               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8818  0032F6  3777               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8819                           
  8820                           ; BSR set to: 0
  8821  0032F8  0100               	movlb	0	; () banked
  8822  0032FA  2F84               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  8823  0032FC  D7D6               	goto	l1166
  8824                           
  8825                           ; BSR set to: 0
  8826                           
  8827                           ; BSR set to: 0
  8828  0032FE  0100               	movlb	0	; () banked
  8829  003300  AF85               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  8830  003302  D01A               	goto	l8064
  8831                           
  8832                           ; BSR set to: 0
  8833  003304  0100               	movlb	0	; () banked
  8834  003306  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8835  003308  0A80               	xorlw	128
  8836  00330A  0F97               	addlw	151
  8837  00330C  B0D8               	btfsc	status,0,c
  8838  00330E  D00A               	goto	l8060
  8839                           
  8840                           ; BSR set to: 0
  8841  003310  0E00               	movlw	0
  8842  003312  0100               	movlb	0	; () banked
  8843  003314  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8844  003316  0E00               	movlw	0
  8845  003318  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8846  00331A  0E00               	movlw	0
  8847  00331C  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8848  00331E  0E00               	movlw	0
  8849  003320  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8850                           
  8851                           ; BSR set to: 0
  8852  003322  0012               	return	
  8853  003324                     l8060:
  8854                           
  8855                           ; BSR set to: 0
  8856  003324  0100               	movlb	0	; () banked
  8857  003326  90D8               	bcf	status,0,c
  8858  003328  3383               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8859  00332A  3382               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8860  00332C  3381               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8861  00332E  3380               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  8862                           
  8863                           ; BSR set to: 0
  8864  003330  0100               	movlb	0	; () banked
  8865  003332  3F85               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  8866  003334  D7F7               	goto	l8060
  8867                           
  8868                           ; BSR set to: 0
  8869  003336  D01B               	goto	l1173
  8870  003338                     l8064:
  8871                           
  8872                           ; BSR set to: 0
  8873  003338  0E17               	movlw	23
  8874  00333A  0100               	movlb	0	; () banked
  8875  00333C  6585               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  8876  00333E  D012               	goto	l8072
  8877                           
  8878                           ; BSR set to: 0
  8879  003340  0E00               	movlw	0
  8880  003342  0100               	movlb	0	; () banked
  8881  003344  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8882  003346  0E00               	movlw	0
  8883  003348  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8884  00334A  0E00               	movlw	0
  8885  00334C  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8886  00334E  0E00               	movlw	0
  8887  003350  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8888                           
  8889                           ; BSR set to: 0
  8890  003352  0012               	return	
  8891  003354                     l8070:
  8892                           
  8893                           ; BSR set to: 0
  8894  003354  0100               	movlb	0	; () banked
  8895  003356  90D8               	bcf	status,0,c
  8896  003358  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8897  00335A  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8898  00335C  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8899  00335E  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8900  003360  0100               	movlb	0	; () banked
  8901  003362  0785               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  8902  003364                     l8072:
  8903                           
  8904                           ; BSR set to: 0
  8905  003364  0100               	movlb	0	; () banked
  8906  003366  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8907  003368  0100               	movlb	0	; () banked
  8908  00336A  A4D8               	btfss	status,2,c
  8909  00336C  D7F3               	goto	l8070
  8910  00336E                     l1173:
  8911                           
  8912                           ; BSR set to: 0
  8913  00336E  C080  F075         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  8914  003372  C081  F076         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  8915  003376  C082  F077         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  8916  00337A  C083  F078         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  8917                           
  8918                           ; BSR set to: 0
  8919  00337E  0012               	return		;funcret
  8920  003380                     __end_of__tdiv_to_l_:
  8921                           	opt stack 0
  8922                           tblptru	equ	0xFF8
  8923                           tblptrh	equ	0xFF7
  8924                           tblptrl	equ	0xFF6
  8925                           tablat	equ	0xFF5
  8926                           prodh	equ	0xFF4
  8927                           prodl	equ	0xFF3
  8928                           intcon	equ	0xFF2
  8929                           postinc0	equ	0xFEE
  8930                           wreg	equ	0xFE8
  8931                           postdec1	equ	0xFE5
  8932                           fsr1l	equ	0xFE1
  8933                           indf2	equ	0xFDF
  8934                           postinc2	equ	0xFDE
  8935                           postdec2	equ	0xFDD
  8936                           fsr2h	equ	0xFDA
  8937                           fsr2l	equ	0xFD9
  8938                           status	equ	0xFD8
  8939                           
  8940 ;; *************** function __div_to_l_ *****************
  8941 ;; Defined at:
  8942 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  8943 ;; Parameters:    Size  Location     Type
  8944 ;;  f1              4   21[BANK0 ] unsigned long 
  8945 ;;  f2              4   25[BANK0 ] unsigned long 
  8946 ;; Auto vars:     Size  Location     Type
  8947 ;;  quot            4   29[BANK0 ] unsigned long 
  8948 ;;  exp1            1   34[BANK0 ] unsigned char 
  8949 ;;  cntr            1   33[BANK0 ] unsigned char 
  8950 ;; Return value:  Size  Location     Type
  8951 ;;                  4   21[BANK0 ] unsigned long 
  8952 ;; Registers used:
  8953 ;;		wreg, status,2, status,0
  8954 ;; Tracked objects:
  8955 ;;		On entry : 0/0
  8956 ;;		On exit  : 0/0
  8957 ;;		Unchanged: 0/0
  8958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8959 ;;      Params:         0       8       0       0       0       0       0
  8960 ;;      Locals:         0       6       0       0       0       0       0
  8961 ;;      Temps:          0       0       0       0       0       0       0
  8962 ;;      Totals:         0      14       0       0       0       0       0
  8963 ;;Total ram usage:       14 bytes
  8964 ;; Hardware stack levels used:    1
  8965 ;; Hardware stack levels required when called:    8
  8966 ;; This function calls:
  8967 ;;		Nothing
  8968 ;; This function is called by:
  8969 ;;		_printf
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text27
  8974  003510                     __ptext27:
  8975                           	opt stack 0
  8976  003510                     __div_to_l_:
  8977                           	opt stack 19
  8978                           
  8979                           ; BSR set to: 0
  8980                           ;incstack = 0
  8981  003510  0100               	movlb	0	; () banked
  8982  003512  3577               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  8983  003514  3578               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  8984  003516  0100               	movlb	0	; () banked
  8985  003518  6F82               	movwf	__div_to_l_@exp1& (0+255),b
  8986  00351A  0100               	movlb	0	; () banked
  8987  00351C  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  8988  00351E  A4D8               	btfss	status,2,c
  8989  003520  D00A               	goto	l8080
  8990                           
  8991                           ; BSR set to: 0
  8992  003522  0E00               	movlw	0
  8993  003524  0100               	movlb	0	; () banked
  8994  003526  6F75               	movwf	?__div_to_l_& (0+255),b
  8995  003528  0E00               	movlw	0
  8996  00352A  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  8997  00352C  0E00               	movlw	0
  8998  00352E  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  8999  003530  0E00               	movlw	0
  9000  003532  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9001                           
  9002                           ; BSR set to: 0
  9003  003534  0012               	return	
  9004  003536                     l8080:
  9005                           
  9006                           ; BSR set to: 0
  9007  003536  0100               	movlb	0	; () banked
  9008  003538  357B               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9009  00353A  357C               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9010  00353C  0100               	movlb	0	; () banked
  9011  00353E  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9012  003540  0100               	movlb	0	; () banked
  9013  003542  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9014  003544  A4D8               	btfss	status,2,c
  9015  003546  D00A               	goto	l8086
  9016                           
  9017                           ; BSR set to: 0
  9018  003548  0E00               	movlw	0
  9019  00354A  0100               	movlb	0	; () banked
  9020  00354C  6F75               	movwf	?__div_to_l_& (0+255),b
  9021  00354E  0E00               	movlw	0
  9022  003550  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9023  003552  0E00               	movlw	0
  9024  003554  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9025  003556  0E00               	movlw	0
  9026  003558  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9027                           
  9028                           ; BSR set to: 0
  9029  00355A  0012               	return	
  9030  00355C                     l8086:
  9031                           
  9032                           ; BSR set to: 0
  9033  00355C  0100               	movlb	0	; () banked
  9034  00355E  8F77               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9035                           
  9036                           ; BSR set to: 0
  9037  003560  0EFF               	movlw	255
  9038  003562  0100               	movlb	0	; () banked
  9039  003564  1775               	andwf	__div_to_l_@f1& (0+255),f,b
  9040  003566  0EFF               	movlw	255
  9041  003568  1776               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9042  00356A  0EFF               	movlw	255
  9043  00356C  1777               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9044  00356E  0E00               	movlw	0
  9045  003570  1778               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9046                           
  9047                           ; BSR set to: 0
  9048  003572  0100               	movlb	0	; () banked
  9049  003574  8F7B               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9050  003576  0EFF               	movlw	255
  9051  003578  0100               	movlb	0	; () banked
  9052  00357A  1779               	andwf	__div_to_l_@f2& (0+255),f,b
  9053  00357C  0EFF               	movlw	255
  9054  00357E  177A               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9055  003580  0EFF               	movlw	255
  9056  003582  177B               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9057  003584  0E00               	movlw	0
  9058  003586  177C               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9059                           
  9060                           ; BSR set to: 0
  9061  003588  0E00               	movlw	0
  9062  00358A  0100               	movlb	0	; () banked
  9063  00358C  6F7D               	movwf	__div_to_l_@quot& (0+255),b
  9064  00358E  0E00               	movlw	0
  9065  003590  6F7E               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9066  003592  0E00               	movlw	0
  9067  003594  6F7F               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9068  003596  0E00               	movlw	0
  9069  003598  6F80               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9070                           
  9071                           ; BSR set to: 0
  9072  00359A  0E7F               	movlw	127
  9073  00359C  0100               	movlb	0	; () banked
  9074  00359E  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9075                           
  9076                           ; BSR set to: 0
  9077  0035A0  0100               	movlb	0	; () banked
  9078  0035A2  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9079  0035A4  0FA0               	addlw	160
  9080  0035A6  0100               	movlb	0	; () banked
  9081  0035A8  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9082                           
  9083                           ; BSR set to: 0
  9084  0035AA  0E20               	movlw	32
  9085  0035AC  0100               	movlb	0	; () banked
  9086  0035AE  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9087  0035B0                     l8100:
  9088                           
  9089                           ; BSR set to: 0
  9090  0035B0  0100               	movlb	0	; () banked
  9091  0035B2  90D8               	bcf	status,0,c
  9092  0035B4  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9093  0035B6  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9094  0035B8  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9095  0035BA  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9096                           
  9097                           ; BSR set to: 0
  9098  0035BC  0100               	movlb	0	; () banked
  9099  0035BE  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9100  0035C0  0100               	movlb	0	; () banked
  9101  0035C2  5D75               	subwf	__div_to_l_@f1& (0+255),w,b
  9102  0035C4  0100               	movlb	0	; () banked
  9103  0035C6  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9104  0035C8  0100               	movlb	0	; () banked
  9105  0035CA  5976               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9106  0035CC  0100               	movlb	0	; () banked
  9107  0035CE  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9108  0035D0  0100               	movlb	0	; () banked
  9109  0035D2  5977               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9110  0035D4  0100               	movlb	0	; () banked
  9111  0035D6  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9112  0035D8  0100               	movlb	0	; () banked
  9113  0035DA  5978               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9114  0035DC  A0D8               	btfss	status,0,c
  9115  0035DE  D012               	goto	l8108
  9116                           
  9117                           ; BSR set to: 0
  9118  0035E0  0100               	movlb	0	; () banked
  9119  0035E2  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9120  0035E4  0100               	movlb	0	; () banked
  9121  0035E6  5F75               	subwf	__div_to_l_@f1& (0+255),f,b
  9122  0035E8  0100               	movlb	0	; () banked
  9123  0035EA  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9124  0035EC  0100               	movlb	0	; () banked
  9125  0035EE  5B76               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9126  0035F0  0100               	movlb	0	; () banked
  9127  0035F2  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9128  0035F4  0100               	movlb	0	; () banked
  9129  0035F6  5B77               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9130  0035F8  0100               	movlb	0	; () banked
  9131  0035FA  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9132  0035FC  0100               	movlb	0	; () banked
  9133  0035FE  5B78               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9134                           
  9135                           ; BSR set to: 0
  9136  003600  0100               	movlb	0	; () banked
  9137  003602  817D               	bsf	__div_to_l_@quot& (0+255),0,b
  9138  003604                     l8108:
  9139                           
  9140                           ; BSR set to: 0
  9141  003604  0100               	movlb	0	; () banked
  9142  003606  90D8               	bcf	status,0,c
  9143  003608  3775               	rlcf	__div_to_l_@f1& (0+255),f,b
  9144  00360A  3776               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9145  00360C  3777               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9146  00360E  3778               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9147                           
  9148                           ; BSR set to: 0
  9149  003610  0100               	movlb	0	; () banked
  9150  003612  2F81               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9151  003614  D7CD               	goto	l8100
  9152                           
  9153                           ; BSR set to: 0
  9154                           
  9155                           ; BSR set to: 0
  9156  003616  0100               	movlb	0	; () banked
  9157  003618  AF82               	btfss	__div_to_l_@exp1& (0+255),7,b
  9158  00361A  D01A               	goto	l8124
  9159                           
  9160                           ; BSR set to: 0
  9161  00361C  0100               	movlb	0	; () banked
  9162  00361E  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9163  003620  0A80               	xorlw	128
  9164  003622  0F9F               	addlw	159
  9165  003624  B0D8               	btfsc	status,0,c
  9166  003626  D00A               	goto	l8120
  9167                           
  9168                           ; BSR set to: 0
  9169  003628  0E00               	movlw	0
  9170  00362A  0100               	movlb	0	; () banked
  9171  00362C  6F75               	movwf	?__div_to_l_& (0+255),b
  9172  00362E  0E00               	movlw	0
  9173  003630  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9174  003632  0E00               	movlw	0
  9175  003634  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9176  003636  0E00               	movlw	0
  9177  003638  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9178                           
  9179                           ; BSR set to: 0
  9180  00363A  0012               	return	
  9181  00363C                     l8120:
  9182                           
  9183                           ; BSR set to: 0
  9184  00363C  0100               	movlb	0	; () banked
  9185  00363E  90D8               	bcf	status,0,c
  9186  003640  3380               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9187  003642  337F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9188  003644  337E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9189  003646  337D               	rrcf	__div_to_l_@quot& (0+255),f,b
  9190                           
  9191                           ; BSR set to: 0
  9192  003648  0100               	movlb	0	; () banked
  9193  00364A  3F82               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9194  00364C  D7F7               	goto	l8120
  9195                           
  9196                           ; BSR set to: 0
  9197  00364E  D01B               	goto	l1069
  9198  003650                     l8124:
  9199                           
  9200                           ; BSR set to: 0
  9201  003650  0E1F               	movlw	31
  9202  003652  0100               	movlb	0	; () banked
  9203  003654  6582               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9204  003656  D012               	goto	l8132
  9205                           
  9206                           ; BSR set to: 0
  9207  003658  0E00               	movlw	0
  9208  00365A  0100               	movlb	0	; () banked
  9209  00365C  6F75               	movwf	?__div_to_l_& (0+255),b
  9210  00365E  0E00               	movlw	0
  9211  003660  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9212  003662  0E00               	movlw	0
  9213  003664  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9214  003666  0E00               	movlw	0
  9215  003668  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9216                           
  9217                           ; BSR set to: 0
  9218  00366A  0012               	return	
  9219  00366C                     l8130:
  9220                           
  9221                           ; BSR set to: 0
  9222  00366C  0100               	movlb	0	; () banked
  9223  00366E  90D8               	bcf	status,0,c
  9224  003670  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9225  003672  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9226  003674  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9227  003676  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9228  003678  0100               	movlb	0	; () banked
  9229  00367A  0782               	decf	__div_to_l_@exp1& (0+255),f,b
  9230  00367C                     l8132:
  9231                           
  9232                           ; BSR set to: 0
  9233  00367C  0100               	movlb	0	; () banked
  9234  00367E  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9235  003680  0100               	movlb	0	; () banked
  9236  003682  A4D8               	btfss	status,2,c
  9237  003684  D7F3               	goto	l8130
  9238  003686                     l1069:
  9239                           
  9240                           ; BSR set to: 0
  9241  003686  C07D  F075         	movff	__div_to_l_@quot,?__div_to_l_
  9242  00368A  C07E  F076         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9243  00368E  C07F  F077         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9244  003692  C080  F078         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9245                           
  9246                           ; BSR set to: 0
  9247  003696  0012               	return		;funcret
  9248  003698                     __end_of__div_to_l_:
  9249                           	opt stack 0
  9250                           tblptru	equ	0xFF8
  9251                           tblptrh	equ	0xFF7
  9252                           tblptrl	equ	0xFF6
  9253                           tablat	equ	0xFF5
  9254                           prodh	equ	0xFF4
  9255                           prodl	equ	0xFF3
  9256                           intcon	equ	0xFF2
  9257                           postinc0	equ	0xFEE
  9258                           wreg	equ	0xFE8
  9259                           postdec1	equ	0xFE5
  9260                           fsr1l	equ	0xFE1
  9261                           indf2	equ	0xFDF
  9262                           postinc2	equ	0xFDE
  9263                           postdec2	equ	0xFDD
  9264                           fsr2h	equ	0xFDA
  9265                           fsr2l	equ	0xFD9
  9266                           status	equ	0xFD8
  9267                           
  9268 ;; *************** function ___xxtofl *****************
  9269 ;; Defined at:
  9270 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
  9271 ;; Parameters:    Size  Location     Type
  9272 ;;  sign            1    wreg     unsigned char 
  9273 ;;  val             4   21[BANK0 ] long 
  9274 ;; Auto vars:     Size  Location     Type
  9275 ;;  sign            1   29[BANK0 ] unsigned char 
  9276 ;;  arg             4   31[BANK0 ] unsigned long 
  9277 ;;  exp             1   30[BANK0 ] unsigned char 
  9278 ;; Return value:  Size  Location     Type
  9279 ;;                  4   21[BANK0 ] unsigned char 
  9280 ;; Registers used:
  9281 ;;		wreg, status,2, status,0
  9282 ;; Tracked objects:
  9283 ;;		On entry : 0/0
  9284 ;;		On exit  : 0/0
  9285 ;;		Unchanged: 0/0
  9286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9287 ;;      Params:         0       4       0       0       0       0       0
  9288 ;;      Locals:         0       6       0       0       0       0       0
  9289 ;;      Temps:          0       4       0       0       0       0       0
  9290 ;;      Totals:         0      14       0       0       0       0       0
  9291 ;;Total ram usage:       14 bytes
  9292 ;; Hardware stack levels used:    1
  9293 ;; Hardware stack levels required when called:    8
  9294 ;; This function calls:
  9295 ;;		Nothing
  9296 ;; This function is called by:
  9297 ;;		_printf
  9298 ;;		_preAutoCal
  9299 ;; This function uses a non-reentrant model
  9300 ;;
  9301                           
  9302                           	psect	text28
  9303  003014                     __ptext28:
  9304                           	opt stack 0
  9305  003014                     ___xxtofl:
  9306                           	opt stack 19
  9307                           
  9308                           ; BSR set to: 0
  9309                           ;incstack = 0
  9310                           ;___xxtofl@sign stored from wreg
  9311  003014  0100               	movlb	0	; () banked
  9312  003016  6F7D               	movwf	___xxtofl@sign& (0+255),b
  9313  003018  0100               	movlb	0	; () banked
  9314  00301A  517D               	movf	___xxtofl@sign& (0+255),w,b
  9315  00301C  0100               	movlb	0	; () banked
  9316  00301E  B4D8               	btfsc	status,2,c
  9317  003020  D01E               	goto	l1450
  9318                           
  9319                           ; BSR set to: 0
  9320  003022  0100               	movlb	0	; () banked
  9321  003024  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9322  003026  D01B               	goto	l1450
  9323                           
  9324                           ; BSR set to: 0
  9325  003028  C075  F079         	movff	___xxtofl@val,??___xxtofl
  9326  00302C  C076  F07A         	movff	___xxtofl@val+1,??___xxtofl+1
  9327  003030  C077  F07B         	movff	___xxtofl@val+2,??___xxtofl+2
  9328  003034  C078  F07C         	movff	___xxtofl@val+3,??___xxtofl+3
  9329  003038  0100               	movlb	0	; () banked
  9330  00303A  1F79               	comf	??___xxtofl& (0+255),f,b
  9331  00303C  1F7A               	comf	(??___xxtofl+1)& (0+255),f,b
  9332  00303E  1F7B               	comf	(??___xxtofl+2)& (0+255),f,b
  9333  003040  1F7C               	comf	(??___xxtofl+3)& (0+255),f,b
  9334  003042  2B79               	incf	??___xxtofl& (0+255),f,b
  9335  003044  0E00               	movlw	0
  9336  003046  237A               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9337  003048  237B               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9338  00304A  237C               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9339  00304C  C079  F07F         	movff	??___xxtofl,___xxtofl@arg
  9340  003050  C07A  F080         	movff	??___xxtofl+1,___xxtofl@arg+1
  9341  003054  C07B  F081         	movff	??___xxtofl+2,___xxtofl@arg+2
  9342  003058  C07C  F082         	movff	??___xxtofl+3,___xxtofl@arg+3
  9343  00305C  D008               	goto	l8264
  9344  00305E                     l1450:
  9345                           
  9346                           ; BSR set to: 0
  9347  00305E  C075  F07F         	movff	___xxtofl@val,___xxtofl@arg
  9348  003062  C076  F080         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9349  003066  C077  F081         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9350  00306A  C078  F082         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9351  00306E                     l8264:
  9352                           
  9353                           ; BSR set to: 0
  9354  00306E  0100               	movlb	0	; () banked
  9355  003070  5175               	movf	___xxtofl@val& (0+255),w,b
  9356  003072  0100               	movlb	0	; () banked
  9357  003074  1176               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9358  003076  0100               	movlb	0	; () banked
  9359  003078  1177               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9360  00307A  0100               	movlb	0	; () banked
  9361  00307C  1178               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9362  00307E  A4D8               	btfss	status,2,c
  9363  003080  D00A               	goto	l8270
  9364                           
  9365                           ; BSR set to: 0
  9366  003082  0E00               	movlw	0
  9367  003084  0100               	movlb	0	; () banked
  9368  003086  6F75               	movwf	?___xxtofl& (0+255),b
  9369  003088  0E00               	movlw	0
  9370  00308A  6F76               	movwf	(?___xxtofl+1)& (0+255),b
  9371  00308C  0E00               	movlw	0
  9372  00308E  6F77               	movwf	(?___xxtofl+2)& (0+255),b
  9373  003090  0E00               	movlw	0
  9374  003092  6F78               	movwf	(?___xxtofl+3)& (0+255),b
  9375                           
  9376                           ; BSR set to: 0
  9377  003094  0012               	return	
  9378  003096                     l8270:
  9379                           
  9380                           ; BSR set to: 0
  9381  003096  0E96               	movlw	150
  9382  003098  0100               	movlb	0	; () banked
  9383  00309A  6F7E               	movwf	___xxtofl@exp& (0+255),b
  9384  00309C  D008               	goto	l8274
  9385  00309E                     l8272:
  9386                           
  9387                           ; BSR set to: 0
  9388  00309E  0100               	movlb	0	; () banked
  9389  0030A0  2B7E               	incf	___xxtofl@exp& (0+255),f,b
  9390  0030A2  0100               	movlb	0	; () banked
  9391  0030A4  90D8               	bcf	status,0,c
  9392  0030A6  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9393  0030A8  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9394  0030AA  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9395  0030AC  337F               	rrcf	___xxtofl@arg& (0+255),f,b
  9396  0030AE                     l8274:
  9397                           
  9398                           ; BSR set to: 0
  9399  0030AE  0E00               	movlw	0
  9400  0030B0  0100               	movlb	0	; () banked
  9401  0030B2  157F               	andwf	___xxtofl@arg& (0+255),w,b
  9402  0030B4  0100               	movlb	0	; () banked
  9403  0030B6  6F79               	movwf	??___xxtofl& (0+255),b
  9404  0030B8  0E00               	movlw	0
  9405  0030BA  0100               	movlb	0	; () banked
  9406  0030BC  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9407  0030BE  0100               	movlb	0	; () banked
  9408  0030C0  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
  9409  0030C2  0E00               	movlw	0
  9410  0030C4  0100               	movlb	0	; () banked
  9411  0030C6  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9412  0030C8  0100               	movlb	0	; () banked
  9413  0030CA  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
  9414  0030CC  0EFE               	movlw	254
  9415  0030CE  0100               	movlb	0	; () banked
  9416  0030D0  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9417  0030D2  0100               	movlb	0	; () banked
  9418  0030D4  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
  9419  0030D6  0100               	movlb	0	; () banked
  9420  0030D8  5179               	movf	??___xxtofl& (0+255),w,b
  9421  0030DA  0100               	movlb	0	; () banked
  9422  0030DC  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9423  0030DE  0100               	movlb	0	; () banked
  9424  0030E0  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9425  0030E2  0100               	movlb	0	; () banked
  9426  0030E4  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9427  0030E6  B4D8               	btfsc	status,2,c
  9428  0030E8  D010               	goto	l1457
  9429  0030EA  D7D9               	goto	l8272
  9430  0030EC                     l8276:
  9431                           
  9432                           ; BSR set to: 0
  9433  0030EC  0100               	movlb	0	; () banked
  9434  0030EE  2B7E               	incf	___xxtofl@exp& (0+255),f,b
  9435                           
  9436                           ; BSR set to: 0
  9437  0030F0  0E01               	movlw	1
  9438  0030F2  0100               	movlb	0	; () banked
  9439  0030F4  277F               	addwf	___xxtofl@arg& (0+255),f,b
  9440  0030F6  0E00               	movlw	0
  9441  0030F8  2380               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9442  0030FA  2381               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9443  0030FC  2382               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9444                           
  9445                           ; BSR set to: 0
  9446  0030FE  0100               	movlb	0	; () banked
  9447  003100  90D8               	bcf	status,0,c
  9448  003102  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9449  003104  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9450  003106  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9451  003108  337F               	rrcf	___xxtofl@arg& (0+255),f,b
  9452  00310A                     l1457:
  9453                           
  9454                           ; BSR set to: 0
  9455  00310A  0E00               	movlw	0
  9456  00310C  0100               	movlb	0	; () banked
  9457  00310E  157F               	andwf	___xxtofl@arg& (0+255),w,b
  9458  003110  0100               	movlb	0	; () banked
  9459  003112  6F79               	movwf	??___xxtofl& (0+255),b
  9460  003114  0E00               	movlw	0
  9461  003116  0100               	movlb	0	; () banked
  9462  003118  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9463  00311A  0100               	movlb	0	; () banked
  9464  00311C  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
  9465  00311E  0E00               	movlw	0
  9466  003120  0100               	movlb	0	; () banked
  9467  003122  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9468  003124  0100               	movlb	0	; () banked
  9469  003126  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
  9470  003128  0EFF               	movlw	255
  9471  00312A  0100               	movlb	0	; () banked
  9472  00312C  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9473  00312E  0100               	movlb	0	; () banked
  9474  003130  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
  9475  003132  0100               	movlb	0	; () banked
  9476  003134  5179               	movf	??___xxtofl& (0+255),w,b
  9477  003136  0100               	movlb	0	; () banked
  9478  003138  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9479  00313A  0100               	movlb	0	; () banked
  9480  00313C  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9481  00313E  0100               	movlb	0	; () banked
  9482  003140  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9483  003142  B4D8               	btfsc	status,2,c
  9484  003144  D009               	goto	l8284
  9485  003146  D7D2               	goto	l8276
  9486  003148                     l8282:
  9487                           
  9488                           ; BSR set to: 0
  9489  003148  0100               	movlb	0	; () banked
  9490  00314A  077E               	decf	___xxtofl@exp& (0+255),f,b
  9491  00314C  0100               	movlb	0	; () banked
  9492  00314E  90D8               	bcf	status,0,c
  9493  003150  377F               	rlcf	___xxtofl@arg& (0+255),f,b
  9494  003152  3780               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9495  003154  3781               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9496  003156  3782               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9497  003158                     l8284:
  9498                           
  9499                           ; BSR set to: 0
  9500  003158  0100               	movlb	0	; () banked
  9501  00315A  BF81               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9502  00315C  D004               	goto	l1464
  9503                           
  9504                           ; BSR set to: 0
  9505  00315E  0E02               	movlw	2
  9506  003160  0100               	movlb	0	; () banked
  9507  003162  617E               	cpfslt	___xxtofl@exp& (0+255),b
  9508  003164  D7F1               	goto	l8282
  9509  003166                     l1464:
  9510                           
  9511                           ; BSR set to: 0
  9512  003166  0100               	movlb	0	; () banked
  9513  003168  B17E               	btfsc	___xxtofl@exp& (0+255),0,b
  9514  00316A  D009               	goto	l1465
  9515                           
  9516                           ; BSR set to: 0
  9517  00316C  0EFF               	movlw	255
  9518  00316E  0100               	movlb	0	; () banked
  9519  003170  177F               	andwf	___xxtofl@arg& (0+255),f,b
  9520  003172  0EFF               	movlw	255
  9521  003174  1780               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  9522  003176  0E7F               	movlw	127
  9523  003178  1781               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  9524  00317A  0EFF               	movlw	255
  9525  00317C  1782               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  9526  00317E                     l1465:
  9527                           
  9528                           ; BSR set to: 0
  9529  00317E  0100               	movlb	0	; () banked
  9530  003180  90D8               	bcf	status,0,c
  9531  003182  337E               	rrcf	___xxtofl@exp& (0+255),f,b
  9532  003184  C07E  F079         	movff	___xxtofl@exp,??___xxtofl
  9533  003188  0100               	movlb	0	; () banked
  9534  00318A  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
  9535  00318C  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
  9536  00318E  6B7C               	clrf	(??___xxtofl+3)& (0+255),b
  9537  003190  C079  F07C         	movff	??___xxtofl,??___xxtofl+3
  9538  003194  0100               	movlb	0	; () banked
  9539  003196  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
  9540  003198  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
  9541  00319A  6B79               	clrf	??___xxtofl& (0+255),b
  9542  00319C  0100               	movlb	0	; () banked
  9543  00319E  5179               	movf	??___xxtofl& (0+255),w,b
  9544  0031A0  0100               	movlb	0	; () banked
  9545  0031A2  137F               	iorwf	___xxtofl@arg& (0+255),f,b
  9546  0031A4  0100               	movlb	0	; () banked
  9547  0031A6  517A               	movf	(??___xxtofl+1)& (0+255),w,b
  9548  0031A8  0100               	movlb	0	; () banked
  9549  0031AA  1380               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9550  0031AC  0100               	movlb	0	; () banked
  9551  0031AE  517B               	movf	(??___xxtofl+2)& (0+255),w,b
  9552  0031B0  0100               	movlb	0	; () banked
  9553  0031B2  1381               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9554  0031B4  0100               	movlb	0	; () banked
  9555  0031B6  517C               	movf	(??___xxtofl+3)& (0+255),w,b
  9556  0031B8  0100               	movlb	0	; () banked
  9557  0031BA  1382               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9558                           
  9559                           ; BSR set to: 0
  9560  0031BC  0100               	movlb	0	; () banked
  9561  0031BE  517D               	movf	___xxtofl@sign& (0+255),w,b
  9562  0031C0  0100               	movlb	0	; () banked
  9563  0031C2  B4D8               	btfsc	status,2,c
  9564  0031C4  D005               	goto	l8296
  9565                           
  9566                           ; BSR set to: 0
  9567  0031C6  0100               	movlb	0	; () banked
  9568  0031C8  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9569  0031CA  D002               	goto	l8296
  9570                           
  9571                           ; BSR set to: 0
  9572  0031CC  0100               	movlb	0	; () banked
  9573  0031CE  8F82               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9574  0031D0                     l8296:
  9575                           
  9576                           ; BSR set to: 0
  9577  0031D0  C07F  F075         	movff	___xxtofl@arg,?___xxtofl
  9578  0031D4  C080  F076         	movff	___xxtofl@arg+1,?___xxtofl+1
  9579  0031D8  C081  F077         	movff	___xxtofl@arg+2,?___xxtofl+2
  9580  0031DC  C082  F078         	movff	___xxtofl@arg+3,?___xxtofl+3
  9581  0031E0  0012               	return	
  9582  0031E2                     __end_of___xxtofl:
  9583                           	opt stack 0
  9584                           tblptru	equ	0xFF8
  9585                           tblptrh	equ	0xFF7
  9586                           tblptrl	equ	0xFF6
  9587                           tablat	equ	0xFF5
  9588                           prodh	equ	0xFF4
  9589                           prodl	equ	0xFF3
  9590                           intcon	equ	0xFF2
  9591                           postinc0	equ	0xFEE
  9592                           wreg	equ	0xFE8
  9593                           postdec1	equ	0xFE5
  9594                           fsr1l	equ	0xFE1
  9595                           indf2	equ	0xFDF
  9596                           postinc2	equ	0xFDE
  9597                           postdec2	equ	0xFDD
  9598                           fsr2h	equ	0xFDA
  9599                           fsr2l	equ	0xFD9
  9600                           status	equ	0xFD8
  9601                           
  9602 ;; *************** function ___wmul *****************
  9603 ;; Defined at:
  9604 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9605 ;; Parameters:    Size  Location     Type
  9606 ;;  multiplier      2   21[BANK0 ] unsigned int 
  9607 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  9608 ;; Auto vars:     Size  Location     Type
  9609 ;;  product         2   25[BANK0 ] unsigned int 
  9610 ;; Return value:  Size  Location     Type
  9611 ;;                  2   21[BANK0 ] unsigned int 
  9612 ;; Registers used:
  9613 ;;		wreg, status,2, status,0, prodl, prodh
  9614 ;; Tracked objects:
  9615 ;;		On entry : 0/0
  9616 ;;		On exit  : 0/0
  9617 ;;		Unchanged: 0/0
  9618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9619 ;;      Params:         0       4       0       0       0       0       0
  9620 ;;      Locals:         0       2       0       0       0       0       0
  9621 ;;      Temps:          0       0       0       0       0       0       0
  9622 ;;      Totals:         0       6       0       0       0       0       0
  9623 ;;Total ram usage:        6 bytes
  9624 ;; Hardware stack levels used:    1
  9625 ;; Hardware stack levels required when called:    8
  9626 ;; This function calls:
  9627 ;;		Nothing
  9628 ;; This function is called by:
  9629 ;;		_printf
  9630 ;; This function uses a non-reentrant model
  9631 ;;
  9632                           
  9633                           	psect	text29
  9634  004F68                     __ptext29:
  9635                           	opt stack 0
  9636  004F68                     ___wmul:
  9637                           	opt stack 19
  9638                           
  9639                           ; BSR set to: 0
  9640                           ;incstack = 0
  9641  004F68  0100               	movlb	0	; () banked
  9642  004F6A  5175               	movf	___wmul@multiplier& (0+255),w,b
  9643  004F6C  0100               	movlb	0	; () banked
  9644  004F6E  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9645  004F70  CFF3 F079          	movff	prodl,___wmul@product
  9646  004F74  CFF4 F07A          	movff	prodh,___wmul@product+1
  9647  004F78  0100               	movlb	0	; () banked
  9648  004F7A  5175               	movf	___wmul@multiplier& (0+255),w,b
  9649  004F7C  0100               	movlb	0	; () banked
  9650  004F7E  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9651  004F80  50F3               	movf	prodl,w,c
  9652  004F82  0100               	movlb	0	; () banked
  9653  004F84  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9654  004F86  0100               	movlb	0	; () banked
  9655  004F88  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9656  004F8A  0100               	movlb	0	; () banked
  9657  004F8C  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9658  004F8E  50F3               	movf	prodl,w,c
  9659  004F90  0100               	movlb	0	; () banked
  9660  004F92  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9661                           
  9662                           ; BSR set to: 0
  9663  004F94  C079  F075         	movff	___wmul@product,?___wmul
  9664  004F98  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  9665  004F9C  0012               	return	
  9666  004F9E                     __end_of___wmul:
  9667                           	opt stack 0
  9668                           tblptru	equ	0xFF8
  9669                           tblptrh	equ	0xFF7
  9670                           tblptrl	equ	0xFF6
  9671                           tablat	equ	0xFF5
  9672                           prodh	equ	0xFF4
  9673                           prodl	equ	0xFF3
  9674                           intcon	equ	0xFF2
  9675                           postinc0	equ	0xFEE
  9676                           wreg	equ	0xFE8
  9677                           postdec1	equ	0xFE5
  9678                           fsr1l	equ	0xFE1
  9679                           indf2	equ	0xFDF
  9680                           postinc2	equ	0xFDE
  9681                           postdec2	equ	0xFDD
  9682                           fsr2h	equ	0xFDA
  9683                           fsr2l	equ	0xFD9
  9684                           status	equ	0xFD8
  9685                           
  9686 ;; *************** function ___llmod *****************
  9687 ;; Defined at:
  9688 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  9689 ;; Parameters:    Size  Location     Type
  9690 ;;  dividend        4   34[BANK0 ] unsigned long 
  9691 ;;  divisor         4   38[BANK0 ] unsigned long 
  9692 ;; Auto vars:     Size  Location     Type
  9693 ;;  counter         1   42[BANK0 ] unsigned char 
  9694 ;; Return value:  Size  Location     Type
  9695 ;;                  4   34[BANK0 ] unsigned long 
  9696 ;; Registers used:
  9697 ;;		wreg, status,2, status,0
  9698 ;; Tracked objects:
  9699 ;;		On entry : 0/0
  9700 ;;		On exit  : 0/0
  9701 ;;		Unchanged: 0/0
  9702 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9703 ;;      Params:         0       8       0       0       0       0       0
  9704 ;;      Locals:         0       1       0       0       0       0       0
  9705 ;;      Temps:          0       0       0       0       0       0       0
  9706 ;;      Totals:         0       9       0       0       0       0       0
  9707 ;;Total ram usage:        9 bytes
  9708 ;; Hardware stack levels used:    1
  9709 ;; Hardware stack levels required when called:    8
  9710 ;; This function calls:
  9711 ;;		Nothing
  9712 ;; This function is called by:
  9713 ;;		_printf
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text30
  9718  0046B0                     __ptext30:
  9719                           	opt stack 0
  9720  0046B0                     ___llmod:
  9721                           	opt stack 19
  9722                           
  9723                           ; BSR set to: 0
  9724                           ;incstack = 0
  9725  0046B0  0100               	movlb	0	; () banked
  9726  0046B2  5186               	movf	___llmod@divisor& (0+255),w,b
  9727  0046B4  0100               	movlb	0	; () banked
  9728  0046B6  1187               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9729  0046B8  0100               	movlb	0	; () banked
  9730  0046BA  1188               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9731  0046BC  0100               	movlb	0	; () banked
  9732  0046BE  1189               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9733  0046C0  B4D8               	btfsc	status,2,c
  9734  0046C2  D03A               	goto	l1258
  9735                           
  9736                           ; BSR set to: 0
  9737  0046C4  0E01               	movlw	1
  9738  0046C6  0100               	movlb	0	; () banked
  9739  0046C8  6F8A               	movwf	___llmod@counter& (0+255),b
  9740  0046CA  D008               	goto	l8248
  9741  0046CC                     l8246:
  9742                           
  9743                           ; BSR set to: 0
  9744  0046CC  0100               	movlb	0	; () banked
  9745  0046CE  90D8               	bcf	status,0,c
  9746  0046D0  3786               	rlcf	___llmod@divisor& (0+255),f,b
  9747  0046D2  3787               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9748  0046D4  3788               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9749  0046D6  3789               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9750  0046D8  0100               	movlb	0	; () banked
  9751  0046DA  2B8A               	incf	___llmod@counter& (0+255),f,b
  9752  0046DC                     l8248:
  9753                           
  9754                           ; BSR set to: 0
  9755  0046DC  0100               	movlb	0	; () banked
  9756  0046DE  AF89               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9757  0046E0  D7F5               	goto	l8246
  9758  0046E2                     l8250:
  9759                           
  9760                           ; BSR set to: 0
  9761  0046E2  0100               	movlb	0	; () banked
  9762  0046E4  5186               	movf	___llmod@divisor& (0+255),w,b
  9763  0046E6  0100               	movlb	0	; () banked
  9764  0046E8  5D82               	subwf	___llmod@dividend& (0+255),w,b
  9765  0046EA  0100               	movlb	0	; () banked
  9766  0046EC  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
  9767  0046EE  0100               	movlb	0	; () banked
  9768  0046F0  5983               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9769  0046F2  0100               	movlb	0	; () banked
  9770  0046F4  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
  9771  0046F6  0100               	movlb	0	; () banked
  9772  0046F8  5984               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9773  0046FA  0100               	movlb	0	; () banked
  9774  0046FC  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
  9775  0046FE  0100               	movlb	0	; () banked
  9776  004700  5985               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9777  004702  A0D8               	btfss	status,0,c
  9778  004704  D010               	goto	l8254
  9779                           
  9780                           ; BSR set to: 0
  9781  004706  0100               	movlb	0	; () banked
  9782  004708  5186               	movf	___llmod@divisor& (0+255),w,b
  9783  00470A  0100               	movlb	0	; () banked
  9784  00470C  5F82               	subwf	___llmod@dividend& (0+255),f,b
  9785  00470E  0100               	movlb	0	; () banked
  9786  004710  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
  9787  004712  0100               	movlb	0	; () banked
  9788  004714  5B83               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9789  004716  0100               	movlb	0	; () banked
  9790  004718  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
  9791  00471A  0100               	movlb	0	; () banked
  9792  00471C  5B84               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9793  00471E  0100               	movlb	0	; () banked
  9794  004720  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
  9795  004722  0100               	movlb	0	; () banked
  9796  004724  5B85               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9797  004726                     l8254:
  9798                           
  9799                           ; BSR set to: 0
  9800  004726  0100               	movlb	0	; () banked
  9801  004728  90D8               	bcf	status,0,c
  9802  00472A  3389               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9803  00472C  3388               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9804  00472E  3387               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9805  004730  3386               	rrcf	___llmod@divisor& (0+255),f,b
  9806                           
  9807                           ; BSR set to: 0
  9808  004732  0100               	movlb	0	; () banked
  9809  004734  2F8A               	decfsz	___llmod@counter& (0+255),f,b
  9810  004736  D7D5               	goto	l8250
  9811  004738                     l1258:
  9812                           
  9813                           ; BSR set to: 0
  9814  004738  C082  F082         	movff	___llmod@dividend,?___llmod
  9815  00473C  C083  F083         	movff	___llmod@dividend+1,?___llmod+1
  9816  004740  C084  F084         	movff	___llmod@dividend+2,?___llmod+2
  9817  004744  C085  F085         	movff	___llmod@dividend+3,?___llmod+3
  9818                           
  9819                           ; BSR set to: 0
  9820  004748  0012               	return		;funcret
  9821  00474A                     __end_of___llmod:
  9822                           	opt stack 0
  9823                           tblptru	equ	0xFF8
  9824                           tblptrh	equ	0xFF7
  9825                           tblptrl	equ	0xFF6
  9826                           tablat	equ	0xFF5
  9827                           prodh	equ	0xFF4
  9828                           prodl	equ	0xFF3
  9829                           intcon	equ	0xFF2
  9830                           postinc0	equ	0xFEE
  9831                           wreg	equ	0xFE8
  9832                           postdec1	equ	0xFE5
  9833                           fsr1l	equ	0xFE1
  9834                           indf2	equ	0xFDF
  9835                           postinc2	equ	0xFDE
  9836                           postdec2	equ	0xFDD
  9837                           fsr2h	equ	0xFDA
  9838                           fsr2l	equ	0xFD9
  9839                           status	equ	0xFD8
  9840                           
  9841 ;; *************** function ___lldiv *****************
  9842 ;; Defined at:
  9843 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  9844 ;; Parameters:    Size  Location     Type
  9845 ;;  dividend        4   21[BANK0 ] unsigned long 
  9846 ;;  divisor         4   25[BANK0 ] unsigned long 
  9847 ;; Auto vars:     Size  Location     Type
  9848 ;;  quotient        4   29[BANK0 ] unsigned long 
  9849 ;;  counter         1   33[BANK0 ] unsigned char 
  9850 ;; Return value:  Size  Location     Type
  9851 ;;                  4   21[BANK0 ] unsigned long 
  9852 ;; Registers used:
  9853 ;;		wreg, status,2, status,0
  9854 ;; Tracked objects:
  9855 ;;		On entry : 0/0
  9856 ;;		On exit  : 0/0
  9857 ;;		Unchanged: 0/0
  9858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9859 ;;      Params:         0       8       0       0       0       0       0
  9860 ;;      Locals:         0       5       0       0       0       0       0
  9861 ;;      Temps:          0       0       0       0       0       0       0
  9862 ;;      Totals:         0      13       0       0       0       0       0
  9863 ;;Total ram usage:       13 bytes
  9864 ;; Hardware stack levels used:    1
  9865 ;; Hardware stack levels required when called:    8
  9866 ;; This function calls:
  9867 ;;		Nothing
  9868 ;; This function is called by:
  9869 ;;		_printf
  9870 ;; This function uses a non-reentrant model
  9871 ;;
  9872                           
  9873                           	psect	text31
  9874  0044B0                     __ptext31:
  9875                           	opt stack 0
  9876  0044B0                     ___lldiv:
  9877                           	opt stack 19
  9878                           
  9879                           ; BSR set to: 0
  9880                           ;incstack = 0
  9881  0044B0  0E00               	movlw	0
  9882  0044B2  0100               	movlb	0	; () banked
  9883  0044B4  6F7D               	movwf	___lldiv@quotient& (0+255),b
  9884  0044B6  0E00               	movlw	0
  9885  0044B8  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
  9886  0044BA  0E00               	movlw	0
  9887  0044BC  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
  9888  0044BE  0E00               	movlw	0
  9889  0044C0  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
  9890                           
  9891                           ; BSR set to: 0
  9892  0044C2  0100               	movlb	0	; () banked
  9893  0044C4  5179               	movf	___lldiv@divisor& (0+255),w,b
  9894  0044C6  0100               	movlb	0	; () banked
  9895  0044C8  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
  9896  0044CA  0100               	movlb	0	; () banked
  9897  0044CC  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
  9898  0044CE  0100               	movlb	0	; () banked
  9899  0044D0  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
  9900  0044D2  B4D8               	btfsc	status,2,c
  9901  0044D4  D042               	goto	l1248
  9902                           
  9903                           ; BSR set to: 0
  9904  0044D6  0E01               	movlw	1
  9905  0044D8  0100               	movlb	0	; () banked
  9906  0044DA  6F81               	movwf	___lldiv@counter& (0+255),b
  9907  0044DC  D008               	goto	l8228
  9908  0044DE                     l8226:
  9909                           
  9910                           ; BSR set to: 0
  9911  0044DE  0100               	movlb	0	; () banked
  9912  0044E0  90D8               	bcf	status,0,c
  9913  0044E2  3779               	rlcf	___lldiv@divisor& (0+255),f,b
  9914  0044E4  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
  9915  0044E6  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
  9916  0044E8  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
  9917  0044EA  0100               	movlb	0	; () banked
  9918  0044EC  2B81               	incf	___lldiv@counter& (0+255),f,b
  9919  0044EE                     l8228:
  9920                           
  9921                           ; BSR set to: 0
  9922  0044EE  0100               	movlb	0	; () banked
  9923  0044F0  AF7C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
  9924  0044F2  D7F5               	goto	l8226
  9925  0044F4                     l8230:
  9926                           
  9927                           ; BSR set to: 0
  9928  0044F4  0100               	movlb	0	; () banked
  9929  0044F6  90D8               	bcf	status,0,c
  9930  0044F8  377D               	rlcf	___lldiv@quotient& (0+255),f,b
  9931  0044FA  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
  9932  0044FC  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
  9933  0044FE  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
  9934                           
  9935                           ; BSR set to: 0
  9936  004500  0100               	movlb	0	; () banked
  9937  004502  5179               	movf	___lldiv@divisor& (0+255),w,b
  9938  004504  0100               	movlb	0	; () banked
  9939  004506  5D75               	subwf	___lldiv@dividend& (0+255),w,b
  9940  004508  0100               	movlb	0	; () banked
  9941  00450A  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9942  00450C  0100               	movlb	0	; () banked
  9943  00450E  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
  9944  004510  0100               	movlb	0	; () banked
  9945  004512  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9946  004514  0100               	movlb	0	; () banked
  9947  004516  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
  9948  004518  0100               	movlb	0	; () banked
  9949  00451A  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9950  00451C  0100               	movlb	0	; () banked
  9951  00451E  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
  9952  004520  A0D8               	btfss	status,0,c
  9953  004522  D012               	goto	l8238
  9954                           
  9955                           ; BSR set to: 0
  9956  004524  0100               	movlb	0	; () banked
  9957  004526  5179               	movf	___lldiv@divisor& (0+255),w,b
  9958  004528  0100               	movlb	0	; () banked
  9959  00452A  5F75               	subwf	___lldiv@dividend& (0+255),f,b
  9960  00452C  0100               	movlb	0	; () banked
  9961  00452E  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
  9962  004530  0100               	movlb	0	; () banked
  9963  004532  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
  9964  004534  0100               	movlb	0	; () banked
  9965  004536  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
  9966  004538  0100               	movlb	0	; () banked
  9967  00453A  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
  9968  00453C  0100               	movlb	0	; () banked
  9969  00453E  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
  9970  004540  0100               	movlb	0	; () banked
  9971  004542  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
  9972                           
  9973                           ; BSR set to: 0
  9974  004544  0100               	movlb	0	; () banked
  9975  004546  817D               	bsf	___lldiv@quotient& (0+255),0,b
  9976  004548                     l8238:
  9977                           
  9978                           ; BSR set to: 0
  9979  004548  0100               	movlb	0	; () banked
  9980  00454A  90D8               	bcf	status,0,c
  9981  00454C  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
  9982  00454E  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
  9983  004550  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
  9984  004552  3379               	rrcf	___lldiv@divisor& (0+255),f,b
  9985                           
  9986                           ; BSR set to: 0
  9987  004554  0100               	movlb	0	; () banked
  9988  004556  2F81               	decfsz	___lldiv@counter& (0+255),f,b
  9989  004558  D7CD               	goto	l8230
  9990  00455A                     l1248:
  9991                           
  9992                           ; BSR set to: 0
  9993  00455A  C07D  F075         	movff	___lldiv@quotient,?___lldiv
  9994  00455E  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
  9995  004562  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
  9996  004566  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
  9997                           
  9998                           ; BSR set to: 0
  9999  00456A  0012               	return		;funcret
 10000  00456C                     __end_of___lldiv:
 10001                           	opt stack 0
 10002                           tblptru	equ	0xFF8
 10003                           tblptrh	equ	0xFF7
 10004                           tblptrl	equ	0xFF6
 10005                           tablat	equ	0xFF5
 10006                           prodh	equ	0xFF4
 10007                           prodl	equ	0xFF3
 10008                           intcon	equ	0xFF2
 10009                           postinc0	equ	0xFEE
 10010                           wreg	equ	0xFE8
 10011                           postdec1	equ	0xFE5
 10012                           fsr1l	equ	0xFE1
 10013                           indf2	equ	0xFDF
 10014                           postinc2	equ	0xFDE
 10015                           postdec2	equ	0xFDD
 10016                           fsr2h	equ	0xFDA
 10017                           fsr2l	equ	0xFD9
 10018                           status	equ	0xFD8
 10019                           
 10020 ;; *************** function ___fltol *****************
 10021 ;; Defined at:
 10022 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fltol.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  f1              4   69[BANK0 ] unsigned long 
 10025 ;; Auto vars:     Size  Location     Type
 10026 ;;  exp1            1   78[BANK0 ] unsigned char 
 10027 ;;  sign1           1   77[BANK0 ] unsigned char 
 10028 ;; Return value:  Size  Location     Type
 10029 ;;                  4   69[BANK0 ] long 
 10030 ;; Registers used:
 10031 ;;		wreg, status,2, status,0
 10032 ;; Tracked objects:
 10033 ;;		On entry : 0/0
 10034 ;;		On exit  : 0/0
 10035 ;;		Unchanged: 0/0
 10036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10037 ;;      Params:         0       4       0       0       0       0       0
 10038 ;;      Locals:         0       2       0       0       0       0       0
 10039 ;;      Temps:          0       4       0       0       0       0       0
 10040 ;;      Totals:         0      10       0       0       0       0       0
 10041 ;;Total ram usage:       10 bytes
 10042 ;; Hardware stack levels used:    1
 10043 ;; Hardware stack levels required when called:    8
 10044 ;; This function calls:
 10045 ;;		Nothing
 10046 ;; This function is called by:
 10047 ;;		_printf
 10048 ;; This function uses a non-reentrant model
 10049 ;;
 10050                           
 10051                           	psect	text32
 10052  003E00                     __ptext32:
 10053                           	opt stack 0
 10054  003E00                     ___fltol:
 10055                           	opt stack 19
 10056                           
 10057                           ; BSR set to: 0
 10058                           ;incstack = 0
 10059  003E00  0100               	movlb	0	; () banked
 10060  003E02  35A7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10061  003E04  35A8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10062  003E06  0100               	movlb	0	; () banked
 10063  003E08  6FAE               	movwf	___fltol@exp1& (0+255),b
 10064  003E0A  0100               	movlb	0	; () banked
 10065  003E0C  51AE               	movf	___fltol@exp1& (0+255),w,b
 10066  003E0E  A4D8               	btfss	status,2,c
 10067  003E10  D00A               	goto	l8182
 10068                           
 10069                           ; BSR set to: 0
 10070  003E12  0E00               	movlw	0
 10071  003E14  0100               	movlb	0	; () banked
 10072  003E16  6FA5               	movwf	?___fltol& (0+255),b
 10073  003E18  0E00               	movlw	0
 10074  003E1A  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10075  003E1C  0E00               	movlw	0
 10076  003E1E  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10077  003E20  0E00               	movlw	0
 10078  003E22  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10079                           
 10080                           ; BSR set to: 0
 10081  003E24  0012               	return	
 10082  003E26                     l8182:
 10083                           
 10084                           ; BSR set to: 0
 10085  003E26  C0A5  F0A9         	movff	___fltol@f1,??___fltol
 10086  003E2A  C0A6  F0AA         	movff	___fltol@f1+1,??___fltol+1
 10087  003E2E  C0A7  F0AB         	movff	___fltol@f1+2,??___fltol+2
 10088  003E32  C0A8  F0AC         	movff	___fltol@f1+3,??___fltol+3
 10089  003E36  0E20               	movlw	32
 10090  003E38  D006               	goto	u10020
 10091  003E3A                     u10025:
 10092  003E3A  0100               	movlb	0	; () banked
 10093  003E3C  90D8               	bcf	status,0,c
 10094  003E3E  33AC               	rrcf	(??___fltol+3)& (0+255),f,b
 10095  003E40  33AB               	rrcf	(??___fltol+2)& (0+255),f,b
 10096  003E42  33AA               	rrcf	(??___fltol+1)& (0+255),f,b
 10097  003E44  33A9               	rrcf	??___fltol& (0+255),f,b
 10098  003E46                     u10020:
 10099  003E46  2EE8               	decfsz	wreg,f,c
 10100  003E48  D7F8               	goto	u10025
 10101  003E4A  0100               	movlb	0	; () banked
 10102  003E4C  51A9               	movf	??___fltol& (0+255),w,b
 10103  003E4E  0100               	movlb	0	; () banked
 10104  003E50  6FAD               	movwf	___fltol@sign1& (0+255),b
 10105                           
 10106                           ; BSR set to: 0
 10107  003E52  0100               	movlb	0	; () banked
 10108  003E54  8FA7               	bsf	(___fltol@f1+2)& (0+255),7,b
 10109                           
 10110                           ; BSR set to: 0
 10111  003E56  0EFF               	movlw	255
 10112  003E58  0100               	movlb	0	; () banked
 10113  003E5A  17A5               	andwf	___fltol@f1& (0+255),f,b
 10114  003E5C  0EFF               	movlw	255
 10115  003E5E  17A6               	andwf	(___fltol@f1+1)& (0+255),f,b
 10116  003E60  0EFF               	movlw	255
 10117  003E62  17A7               	andwf	(___fltol@f1+2)& (0+255),f,b
 10118  003E64  0E00               	movlw	0
 10119  003E66  17A8               	andwf	(___fltol@f1+3)& (0+255),f,b
 10120                           
 10121                           ; BSR set to: 0
 10122  003E68  0E96               	movlw	150
 10123  003E6A  0100               	movlb	0	; () banked
 10124  003E6C  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 10125                           
 10126                           ; BSR set to: 0
 10127  003E6E  0100               	movlb	0	; () banked
 10128  003E70  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 10129  003E72  D01A               	goto	l8202
 10130                           
 10131                           ; BSR set to: 0
 10132  003E74  0100               	movlb	0	; () banked
 10133  003E76  51AE               	movf	___fltol@exp1& (0+255),w,b
 10134  003E78  0A80               	xorlw	128
 10135  003E7A  0F97               	addlw	151
 10136  003E7C  B0D8               	btfsc	status,0,c
 10137  003E7E  D00A               	goto	l8198
 10138                           
 10139                           ; BSR set to: 0
 10140  003E80  0E00               	movlw	0
 10141  003E82  0100               	movlb	0	; () banked
 10142  003E84  6FA5               	movwf	?___fltol& (0+255),b
 10143  003E86  0E00               	movlw	0
 10144  003E88  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10145  003E8A  0E00               	movlw	0
 10146  003E8C  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10147  003E8E  0E00               	movlw	0
 10148  003E90  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10149                           
 10150                           ; BSR set to: 0
 10151  003E92  0012               	return	
 10152  003E94                     l8198:
 10153                           
 10154                           ; BSR set to: 0
 10155  003E94  0100               	movlb	0	; () banked
 10156  003E96  90D8               	bcf	status,0,c
 10157  003E98  33A8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10158  003E9A  33A7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10159  003E9C  33A6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10160  003E9E  33A5               	rrcf	___fltol@f1& (0+255),f,b
 10161                           
 10162                           ; BSR set to: 0
 10163  003EA0  0100               	movlb	0	; () banked
 10164  003EA2  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 10165  003EA4  D7F7               	goto	l8198
 10166                           
 10167                           ; BSR set to: 0
 10168  003EA6  D01B               	goto	l8212
 10169  003EA8                     l8202:
 10170                           
 10171                           ; BSR set to: 0
 10172  003EA8  0E1F               	movlw	31
 10173  003EAA  0100               	movlb	0	; () banked
 10174  003EAC  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 10175  003EAE  D012               	goto	l8210
 10176                           
 10177                           ; BSR set to: 0
 10178  003EB0  0E00               	movlw	0
 10179  003EB2  0100               	movlb	0	; () banked
 10180  003EB4  6FA5               	movwf	?___fltol& (0+255),b
 10181  003EB6  0E00               	movlw	0
 10182  003EB8  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10183  003EBA  0E00               	movlw	0
 10184  003EBC  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10185  003EBE  0E00               	movlw	0
 10186  003EC0  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10187                           
 10188                           ; BSR set to: 0
 10189  003EC2  0012               	return	
 10190  003EC4                     l8208:
 10191                           
 10192                           ; BSR set to: 0
 10193  003EC4  0100               	movlb	0	; () banked
 10194  003EC6  90D8               	bcf	status,0,c
 10195  003EC8  37A5               	rlcf	___fltol@f1& (0+255),f,b
 10196  003ECA  37A6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10197  003ECC  37A7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10198  003ECE  37A8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10199  003ED0  0100               	movlb	0	; () banked
 10200  003ED2  07AE               	decf	___fltol@exp1& (0+255),f,b
 10201  003ED4                     l8210:
 10202                           
 10203                           ; BSR set to: 0
 10204  003ED4  0100               	movlb	0	; () banked
 10205  003ED6  51AE               	movf	___fltol@exp1& (0+255),w,b
 10206  003ED8  0100               	movlb	0	; () banked
 10207  003EDA  A4D8               	btfss	status,2,c
 10208  003EDC  D7F3               	goto	l8208
 10209  003EDE                     l8212:
 10210                           
 10211                           ; BSR set to: 0
 10212  003EDE  0100               	movlb	0	; () banked
 10213  003EE0  51AD               	movf	___fltol@sign1& (0+255),w,b
 10214  003EE2  0100               	movlb	0	; () banked
 10215  003EE4  B4D8               	btfsc	status,2,c
 10216  003EE6  D009               	goto	l8216
 10217                           
 10218                           ; BSR set to: 0
 10219  003EE8  0100               	movlb	0	; () banked
 10220  003EEA  1FA8               	comf	(___fltol@f1+3)& (0+255),f,b
 10221  003EEC  1FA7               	comf	(___fltol@f1+2)& (0+255),f,b
 10222  003EEE  1FA6               	comf	(___fltol@f1+1)& (0+255),f,b
 10223  003EF0  6DA5               	negf	___fltol@f1& (0+255),b
 10224  003EF2  0E00               	movlw	0
 10225  003EF4  23A6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10226  003EF6  23A7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10227  003EF8  23A8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10228  003EFA                     l8216:
 10229                           
 10230                           ; BSR set to: 0
 10231  003EFA  C0A5  F0A5         	movff	___fltol@f1,?___fltol
 10232  003EFE  C0A6  F0A6         	movff	___fltol@f1+1,?___fltol+1
 10233  003F02  C0A7  F0A7         	movff	___fltol@f1+2,?___fltol+2
 10234  003F06  C0A8  F0A8         	movff	___fltol@f1+3,?___fltol+3
 10235  003F0A  0012               	return	
 10236  003F0C                     __end_of___fltol:
 10237                           	opt stack 0
 10238                           tblptru	equ	0xFF8
 10239                           tblptrh	equ	0xFF7
 10240                           tblptrl	equ	0xFF6
 10241                           tablat	equ	0xFF5
 10242                           prodh	equ	0xFF4
 10243                           prodl	equ	0xFF3
 10244                           intcon	equ	0xFF2
 10245                           postinc0	equ	0xFEE
 10246                           wreg	equ	0xFE8
 10247                           postdec1	equ	0xFE5
 10248                           fsr1l	equ	0xFE1
 10249                           indf2	equ	0xFDF
 10250                           postinc2	equ	0xFDE
 10251                           postdec2	equ	0xFDD
 10252                           fsr2h	equ	0xFDA
 10253                           fsr2l	equ	0xFD9
 10254                           status	equ	0xFD8
 10255                           
 10256 ;; *************** function ___flsub *****************
 10257 ;; Defined at:
 10258 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10259 ;; Parameters:    Size  Location     Type
 10260 ;;  b               4   93[BANK0 ] long 
 10261 ;;  a               4   97[BANK0 ] long 
 10262 ;; Auto vars:     Size  Location     Type
 10263 ;;		None
 10264 ;; Return value:  Size  Location     Type
 10265 ;;                  4   93[BANK0 ] long 
 10266 ;; Registers used:
 10267 ;;		wreg, status,2, status,0, cstack
 10268 ;; Tracked objects:
 10269 ;;		On entry : 0/0
 10270 ;;		On exit  : 0/0
 10271 ;;		Unchanged: 0/0
 10272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10273 ;;      Params:         0       8       0       0       0       0       0
 10274 ;;      Locals:         0       0       0       0       0       0       0
 10275 ;;      Temps:          0       0       0       0       0       0       0
 10276 ;;      Totals:         0       8       0       0       0       0       0
 10277 ;;Total ram usage:        8 bytes
 10278 ;; Hardware stack levels used:    1
 10279 ;; Hardware stack levels required when called:    9
 10280 ;; This function calls:
 10281 ;;		___fladd
 10282 ;; This function is called by:
 10283 ;;		_printf
 10284 ;; This function uses a non-reentrant model
 10285 ;;
 10286                           
 10287                           	psect	text33
 10288  004D1E                     __ptext33:
 10289                           	opt stack 0
 10290  004D1E                     ___flsub:
 10291                           	opt stack 18
 10292                           
 10293                           ; BSR set to: 0
 10294                           ;incstack = 0
 10295  004D1E  0E00               	movlw	0
 10296  004D20  0100               	movlb	0	; () banked
 10297  004D22  1BC1               	xorwf	___flsub@a& (0+255),f,b
 10298  004D24  0E00               	movlw	0
 10299  004D26  1BC2               	xorwf	(___flsub@a+1)& (0+255),f,b
 10300  004D28  0E00               	movlw	0
 10301  004D2A  1BC3               	xorwf	(___flsub@a+2)& (0+255),f,b
 10302  004D2C  0E80               	movlw	128
 10303  004D2E  1BC4               	xorwf	(___flsub@a+3)& (0+255),f,b
 10304                           
 10305                           ; BSR set to: 0
 10306  004D30  C0BD  F0A9         	movff	___flsub@b,___fladd@b
 10307  004D34  C0BE  F0AA         	movff	___flsub@b+1,___fladd@b+1
 10308  004D38  C0BF  F0AB         	movff	___flsub@b+2,___fladd@b+2
 10309  004D3C  C0C0  F0AC         	movff	___flsub@b+3,___fladd@b+3
 10310  004D40  C0C1  F0AD         	movff	___flsub@a,___fladd@a
 10311  004D44  C0C2  F0AE         	movff	___flsub@a+1,___fladd@a+1
 10312  004D48  C0C3  F0AF         	movff	___flsub@a+2,___fladd@a+2
 10313  004D4C  C0C4  F0B0         	movff	___flsub@a+3,___fladd@a+3
 10314  004D50  ECFB  F008         	call	___fladd	;wreg free
 10315  004D54  C0A9  F0BD         	movff	?___fladd,?___flsub
 10316  004D58  C0AA  F0BE         	movff	?___fladd+1,?___flsub+1
 10317  004D5C  C0AB  F0BF         	movff	?___fladd+2,?___flsub+2
 10318  004D60  C0AC  F0C0         	movff	?___fladd+3,?___flsub+3
 10319  004D64  0012               	return	
 10320  004D66                     __end_of___flsub:
 10321                           	opt stack 0
 10322                           tblptru	equ	0xFF8
 10323                           tblptrh	equ	0xFF7
 10324                           tblptrl	equ	0xFF6
 10325                           tablat	equ	0xFF5
 10326                           prodh	equ	0xFF4
 10327                           prodl	equ	0xFF3
 10328                           intcon	equ	0xFF2
 10329                           postinc0	equ	0xFEE
 10330                           wreg	equ	0xFE8
 10331                           postdec1	equ	0xFE5
 10332                           fsr1l	equ	0xFE1
 10333                           indf2	equ	0xFDF
 10334                           postinc2	equ	0xFDE
 10335                           postdec2	equ	0xFDD
 10336                           fsr2h	equ	0xFDA
 10337                           fsr2l	equ	0xFD9
 10338                           status	equ	0xFD8
 10339                           
 10340 ;; *************** function ___fladd *****************
 10341 ;; Defined at:
 10342 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10343 ;; Parameters:    Size  Location     Type
 10344 ;;  b               4   73[BANK0 ] long 
 10345 ;;  a               4   77[BANK0 ] long 
 10346 ;; Auto vars:     Size  Location     Type
 10347 ;;  grs             1   92[BANK0 ] unsigned char 
 10348 ;;  bexp            1   91[BANK0 ] unsigned char 
 10349 ;;  aexp            1   90[BANK0 ] unsigned char 
 10350 ;;  signs           1   89[BANK0 ] unsigned char 
 10351 ;; Return value:  Size  Location     Type
 10352 ;;                  4   73[BANK0 ] unsigned char 
 10353 ;; Registers used:
 10354 ;;		wreg, status,2, status,0
 10355 ;; Tracked objects:
 10356 ;;		On entry : 0/0
 10357 ;;		On exit  : 0/0
 10358 ;;		Unchanged: 0/0
 10359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10360 ;;      Params:         0       8       0       0       0       0       0
 10361 ;;      Locals:         0       4       0       0       0       0       0
 10362 ;;      Temps:          0       8       0       0       0       0       0
 10363 ;;      Totals:         0      20       0       0       0       0       0
 10364 ;;Total ram usage:       20 bytes
 10365 ;; Hardware stack levels used:    1
 10366 ;; Hardware stack levels required when called:    8
 10367 ;; This function calls:
 10368 ;;		Nothing
 10369 ;; This function is called by:
 10370 ;;		_printf
 10371 ;;		___flsub
 10372 ;; This function uses a non-reentrant model
 10373 ;;
 10374                           
 10375                           	psect	text34
 10376  0011F6                     __ptext34:
 10377                           	opt stack 0
 10378  0011F6                     ___fladd:
 10379                           	opt stack 18
 10380                           
 10381                           ;incstack = 0
 10382  0011F6  0100               	movlb	0	; () banked
 10383  0011F8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10384  0011FA  0B80               	andlw	128
 10385  0011FC  0100               	movlb	0	; () banked
 10386  0011FE  6FB9               	movwf	___fladd@signs& (0+255),b
 10387  001200  0100               	movlb	0	; () banked
 10388  001202  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10389  001204  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
 10390  001206  0100               	movlb	0	; () banked
 10391  001208  6FBB               	movwf	___fladd@bexp& (0+255),b
 10392                           
 10393                           ; BSR set to: 0
 10394  00120A  0100               	movlb	0	; () banked
 10395  00120C  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 10396  00120E  D002               	goto	l7608
 10397                           
 10398                           ; BSR set to: 0
 10399  001210  0100               	movlb	0	; () banked
 10400  001212  81BB               	bsf	___fladd@bexp& (0+255),0,b
 10401  001214                     l7608:
 10402                           
 10403                           ; BSR set to: 0
 10404  001214  0100               	movlb	0	; () banked
 10405  001216  51BB               	movf	___fladd@bexp& (0+255),w,b
 10406  001218  0100               	movlb	0	; () banked
 10407  00121A  B4D8               	btfsc	status,2,c
 10408  00121C  D012               	goto	l7618
 10409                           
 10410                           ; BSR set to: 0
 10411  00121E  0100               	movlb	0	; () banked
 10412  001220  29BB               	incf	___fladd@bexp& (0+255),w,b
 10413  001222  A4D8               	btfss	status,2,c
 10414  001224  D009               	goto	l7614
 10415                           
 10416                           ; BSR set to: 0
 10417  001226  0E00               	movlw	0
 10418  001228  0100               	movlb	0	; () banked
 10419  00122A  6FA9               	movwf	___fladd@b& (0+255),b
 10420  00122C  0E00               	movlw	0
 10421  00122E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10422  001230  0E00               	movlw	0
 10423  001232  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10424  001234  0E00               	movlw	0
 10425  001236  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10426  001238                     l7614:
 10427                           
 10428                           ; BSR set to: 0
 10429  001238  0100               	movlb	0	; () banked
 10430  00123A  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 10431                           
 10432                           ; BSR set to: 0
 10433  00123C  0E00               	movlw	0
 10434  00123E  0100               	movlb	0	; () banked
 10435  001240  D008               	goto	L6
 10436  001242                     l7618:
 10437                           
 10438                           ; BSR set to: 0
 10439  001242  0E00               	movlw	0
 10440  001244  0100               	movlb	0	; () banked
 10441  001246  6FA9               	movwf	___fladd@b& (0+255),b
 10442  001248  0E00               	movlw	0
 10443  00124A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10444  00124C  0E00               	movlw	0
 10445  00124E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10446  001250  0E00               	movlw	0
 10447  001252                     L6:
 10448  001252  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10449                           
 10450                           ; BSR set to: 0
 10451                           
 10452                           ; BSR set to: 0
 10453  001254  0100               	movlb	0	; () banked
 10454  001256  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10455  001258  0B80               	andlw	128
 10456  00125A  0100               	movlb	0	; () banked
 10457  00125C  6FBA               	movwf	___fladd@aexp& (0+255),b
 10458                           
 10459                           ; BSR set to: 0
 10460  00125E  0100               	movlb	0	; () banked
 10461  001260  51B9               	movf	___fladd@signs& (0+255),w,b
 10462  001262  0100               	movlb	0	; () banked
 10463  001264  19BA               	xorwf	___fladd@aexp& (0+255),w,b
 10464  001266  B4D8               	btfsc	status,2,c
 10465  001268  D002               	goto	l7626
 10466                           
 10467                           ; BSR set to: 0
 10468  00126A  0100               	movlb	0	; () banked
 10469  00126C  8DB9               	bsf	___fladd@signs& (0+255),6,b
 10470  00126E                     l7626:
 10471                           
 10472                           ; BSR set to: 0
 10473  00126E  0100               	movlb	0	; () banked
 10474  001270  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10475  001272  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
 10476  001274  0100               	movlb	0	; () banked
 10477  001276  6FBA               	movwf	___fladd@aexp& (0+255),b
 10478                           
 10479                           ; BSR set to: 0
 10480  001278  0100               	movlb	0	; () banked
 10481  00127A  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
 10482  00127C  D002               	goto	l7632
 10483                           
 10484                           ; BSR set to: 0
 10485  00127E  0100               	movlb	0	; () banked
 10486  001280  81BA               	bsf	___fladd@aexp& (0+255),0,b
 10487  001282                     l7632:
 10488                           
 10489                           ; BSR set to: 0
 10490  001282  0100               	movlb	0	; () banked
 10491  001284  51BA               	movf	___fladd@aexp& (0+255),w,b
 10492  001286  0100               	movlb	0	; () banked
 10493  001288  B4D8               	btfsc	status,2,c
 10494  00128A  D012               	goto	l7642
 10495                           
 10496                           ; BSR set to: 0
 10497  00128C  0100               	movlb	0	; () banked
 10498  00128E  29BA               	incf	___fladd@aexp& (0+255),w,b
 10499  001290  A4D8               	btfss	status,2,c
 10500  001292  D009               	goto	l7638
 10501                           
 10502                           ; BSR set to: 0
 10503  001294  0E00               	movlw	0
 10504  001296  0100               	movlb	0	; () banked
 10505  001298  6FAD               	movwf	___fladd@a& (0+255),b
 10506  00129A  0E00               	movlw	0
 10507  00129C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10508  00129E  0E00               	movlw	0
 10509  0012A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10510  0012A2  0E00               	movlw	0
 10511  0012A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10512  0012A6                     l7638:
 10513                           
 10514                           ; BSR set to: 0
 10515  0012A6  0100               	movlb	0	; () banked
 10516  0012A8  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
 10517                           
 10518                           ; BSR set to: 0
 10519  0012AA  0E00               	movlw	0
 10520  0012AC  0100               	movlb	0	; () banked
 10521  0012AE  D008               	goto	L7
 10522  0012B0                     l7642:
 10523                           
 10524                           ; BSR set to: 0
 10525  0012B0  0E00               	movlw	0
 10526  0012B2  0100               	movlb	0	; () banked
 10527  0012B4  6FAD               	movwf	___fladd@a& (0+255),b
 10528  0012B6  0E00               	movlw	0
 10529  0012B8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10530  0012BA  0E00               	movlw	0
 10531  0012BC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10532  0012BE  0E00               	movlw	0
 10533  0012C0                     L7:
 10534  0012C0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10535                           
 10536                           ; BSR set to: 0
 10537                           
 10538                           ; BSR set to: 0
 10539  0012C2  0100               	movlb	0	; () banked
 10540  0012C4  51BB               	movf	___fladd@bexp& (0+255),w,b
 10541  0012C6  0100               	movlb	0	; () banked
 10542  0012C8  5DBA               	subwf	___fladd@aexp& (0+255),w,b
 10543  0012CA  B0D8               	btfsc	status,0,c
 10544  0012CC  D024               	goto	l7680
 10545                           
 10546                           ; BSR set to: 0
 10547  0012CE  0100               	movlb	0	; () banked
 10548  0012D0  ADB9               	btfss	___fladd@signs& (0+255),6,b
 10549  0012D2  D003               	goto	l7650
 10550                           
 10551                           ; BSR set to: 0
 10552  0012D4  0E80               	movlw	128
 10553  0012D6  0100               	movlb	0	; () banked
 10554  0012D8  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 10555  0012DA                     l7650:
 10556                           
 10557                           ; BSR set to: 0
 10558  0012DA  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
 10559                           
 10560                           ; BSR set to: 0
 10561  0012DE  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10562                           
 10563                           ; BSR set to: 0
 10564  0012E2  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
 10565                           
 10566                           ; BSR set to: 0
 10567  0012E6  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
 10568                           
 10569                           ; BSR set to: 0
 10570  0012EA  C0AD  F0A9         	movff	___fladd@a,___fladd@b
 10571                           
 10572                           ; BSR set to: 0
 10573  0012EE  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
 10574                           
 10575                           ; BSR set to: 0
 10576  0012F2  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
 10577                           
 10578                           ; BSR set to: 0
 10579  0012F6  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
 10580                           
 10581                           ; BSR set to: 0
 10582  0012FA  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
 10583                           
 10584                           ; BSR set to: 0
 10585  0012FE  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
 10586                           
 10587                           ; BSR set to: 0
 10588  001302  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
 10589                           
 10590                           ; BSR set to: 0
 10591  001306  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
 10592                           
 10593                           ; BSR set to: 0
 10594  00130A  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
 10595                           
 10596                           ; BSR set to: 0
 10597  00130E  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
 10598                           
 10599                           ; BSR set to: 0
 10600  001312  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
 10601  001316                     l7680:
 10602                           
 10603                           ; BSR set to: 0
 10604  001316  0E00               	movlw	0
 10605  001318  0100               	movlb	0	; () banked
 10606  00131A  6FBC               	movwf	___fladd@grs& (0+255),b
 10607                           
 10608                           ; BSR set to: 0
 10609  00131C  0100               	movlb	0	; () banked
 10610  00131E  51BB               	movf	___fladd@bexp& (0+255),w,b
 10611  001320  0100               	movlb	0	; () banked
 10612  001322  6FB1               	movwf	??___fladd& (0+255),b
 10613  001324  6BB2               	clrf	(??___fladd+1)& (0+255),b
 10614  001326  0100               	movlb	0	; () banked
 10615  001328  1FB1               	comf	??___fladd& (0+255),f,b
 10616  00132A  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10617  00132C  4BB1               	infsnz	??___fladd& (0+255),f,b
 10618  00132E  2BB2               	incf	(??___fladd+1)& (0+255),f,b
 10619  001330  0100               	movlb	0	; () banked
 10620  001332  51BA               	movf	___fladd@aexp& (0+255),w,b
 10621  001334  0100               	movlb	0	; () banked
 10622  001336  6FB3               	movwf	(??___fladd+2)& (0+255),b
 10623  001338  6BB4               	clrf	(??___fladd+3)& (0+255),b
 10624  00133A  0100               	movlb	0	; () banked
 10625  00133C  51B1               	movf	??___fladd& (0+255),w,b
 10626  00133E  0100               	movlb	0	; () banked
 10627  001340  27B3               	addwf	(??___fladd+2)& (0+255),f,b
 10628  001342  0100               	movlb	0	; () banked
 10629  001344  51B2               	movf	(??___fladd+1)& (0+255),w,b
 10630  001346  0100               	movlb	0	; () banked
 10631  001348  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10632  00134A  0100               	movlb	0	; () banked
 10633  00134C  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
 10634  00134E  D03D               	goto	l1343
 10635  001350  0100               	movlb	0	; () banked
 10636  001352  51B4               	movf	(??___fladd+3)& (0+255),w,b
 10637  001354  E105               	bnz	u9270
 10638  001356  0E1A               	movlw	26
 10639  001358  0100               	movlb	0	; () banked
 10640  00135A  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
 10641  00135C  A0D8               	btfss	status,0,c
 10642  00135E  D035               	goto	l1343
 10643  001360                     u9270:
 10644                           
 10645                           ; BSR set to: 0
 10646  001360  0100               	movlb	0	; () banked
 10647  001362  51A9               	movf	___fladd@b& (0+255),w,b
 10648  001364  0100               	movlb	0	; () banked
 10649  001366  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 10650  001368  0100               	movlb	0	; () banked
 10651  00136A  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 10652  00136C  0100               	movlb	0	; () banked
 10653  00136E  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 10654  001370  B4D8               	btfsc	status,2,c
 10655  001372  D002               	goto	u9280
 10656  001374  0E01               	movlw	1
 10657  001376  D001               	goto	u9290
 10658  001378                     u9280:
 10659  001378  0E00               	movlw	0
 10660  00137A                     u9290:
 10661  00137A  0100               	movlb	0	; () banked
 10662  00137C  6FBC               	movwf	___fladd@grs& (0+255),b
 10663                           
 10664                           ; BSR set to: 0
 10665  00137E  0E00               	movlw	0
 10666  001380  0100               	movlb	0	; () banked
 10667  001382  6FA9               	movwf	___fladd@b& (0+255),b
 10668  001384  0E00               	movlw	0
 10669  001386  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10670  001388  0E00               	movlw	0
 10671  00138A  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10672  00138C  0E00               	movlw	0
 10673  00138E  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10674                           
 10675                           ; BSR set to: 0
 10676  001390  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10677  001394  D020               	goto	l1342
 10678  001396                     l1344:
 10679                           
 10680                           ; BSR set to: 0
 10681  001396  0100               	movlb	0	; () banked
 10682  001398  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10683  00139A  D007               	goto	l7692
 10684                           
 10685                           ; BSR set to: 0
 10686  00139C  0100               	movlb	0	; () banked
 10687  00139E  90D8               	bcf	status,0,c
 10688  0013A0  31BC               	rrcf	___fladd@grs& (0+255),w,b
 10689  0013A2  0901               	iorlw	1
 10690  0013A4  0100               	movlb	0	; () banked
 10691  0013A6  6FBC               	movwf	___fladd@grs& (0+255),b
 10692  0013A8  D003               	goto	l7694
 10693  0013AA                     l7692:
 10694                           
 10695                           ; BSR set to: 0
 10696  0013AA  0100               	movlb	0	; () banked
 10697  0013AC  90D8               	bcf	status,0,c
 10698  0013AE  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10699  0013B0                     l7694:
 10700                           
 10701                           ; BSR set to: 0
 10702  0013B0  0100               	movlb	0	; () banked
 10703  0013B2  A1A9               	btfss	___fladd@b& (0+255),0,b
 10704  0013B4  D002               	goto	l7698
 10705                           
 10706                           ; BSR set to: 0
 10707  0013B6  0100               	movlb	0	; () banked
 10708  0013B8  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10709  0013BA                     l7698:
 10710                           
 10711                           ; BSR set to: 0
 10712  0013BA  0100               	movlb	0	; () banked
 10713  0013BC  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10714  0013BE  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10715  0013C0  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10716  0013C2  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10717  0013C4  33A9               	rrcf	___fladd@b& (0+255),f,b
 10718                           
 10719                           ; BSR set to: 0
 10720  0013C6  0100               	movlb	0	; () banked
 10721  0013C8  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10722  0013CA                     l1343:
 10723                           
 10724                           ; BSR set to: 0
 10725  0013CA  0100               	movlb	0	; () banked
 10726  0013CC  51BA               	movf	___fladd@aexp& (0+255),w,b
 10727  0013CE  0100               	movlb	0	; () banked
 10728  0013D0  5DBB               	subwf	___fladd@bexp& (0+255),w,b
 10729  0013D2  A0D8               	btfss	status,0,c
 10730  0013D4  D7E0               	goto	l1344
 10731  0013D6                     l1342:
 10732                           
 10733                           ; BSR set to: 0
 10734  0013D6  0100               	movlb	0	; () banked
 10735  0013D8  BDB9               	btfsc	___fladd@signs& (0+255),6,b
 10736  0013DA  D03F               	goto	l7726
 10737                           
 10738                           ; BSR set to: 0
 10739  0013DC  0100               	movlb	0	; () banked
 10740  0013DE  51BB               	movf	___fladd@bexp& (0+255),w,b
 10741  0013E0  0100               	movlb	0	; () banked
 10742  0013E2  A4D8               	btfss	status,2,c
 10743  0013E4  D00A               	goto	l7708
 10744                           
 10745                           ; BSR set to: 0
 10746  0013E6  0E00               	movlw	0
 10747  0013E8  0100               	movlb	0	; () banked
 10748  0013EA  6FA9               	movwf	?___fladd& (0+255),b
 10749  0013EC  0E00               	movlw	0
 10750  0013EE  6FAA               	movwf	(?___fladd+1)& (0+255),b
 10751  0013F0  0E00               	movlw	0
 10752  0013F2  6FAB               	movwf	(?___fladd+2)& (0+255),b
 10753  0013F4  0E00               	movlw	0
 10754  0013F6  6FAC               	movwf	(?___fladd+3)& (0+255),b
 10755                           
 10756                           ; BSR set to: 0
 10757  0013F8  0012               	return	
 10758  0013FA                     l7708:
 10759                           
 10760                           ; BSR set to: 0
 10761  0013FA  0100               	movlb	0	; () banked
 10762  0013FC  51AD               	movf	___fladd@a& (0+255),w,b
 10763  0013FE  0100               	movlb	0	; () banked
 10764  001400  27A9               	addwf	___fladd@b& (0+255),f,b
 10765  001402  0100               	movlb	0	; () banked
 10766  001404  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10767  001406  0100               	movlb	0	; () banked
 10768  001408  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 10769  00140A  0100               	movlb	0	; () banked
 10770  00140C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10771  00140E  0100               	movlb	0	; () banked
 10772  001410  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 10773  001412  0100               	movlb	0	; () banked
 10774  001414  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10775  001416  0100               	movlb	0	; () banked
 10776  001418  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 10777                           
 10778                           ; BSR set to: 0
 10779  00141A  0100               	movlb	0	; () banked
 10780  00141C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 10781  00141E  D0CC               	goto	l7762
 10782                           
 10783                           ; BSR set to: 0
 10784  001420  0100               	movlb	0	; () banked
 10785  001422  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10786  001424  D009               	goto	l7716
 10787                           
 10788                           ; BSR set to: 0
 10789  001426  0100               	movlb	0	; () banked
 10790  001428  90D8               	bcf	status,0,c
 10791  00142A  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10792  00142C  0100               	movlb	0	; () banked
 10793  00142E  51BC               	movf	___fladd@grs& (0+255),w,b
 10794  001430  0901               	iorlw	1
 10795  001432  0100               	movlb	0	; () banked
 10796  001434  6FBC               	movwf	___fladd@grs& (0+255),b
 10797  001436  D003               	goto	l7718
 10798  001438                     l7716:
 10799                           
 10800                           ; BSR set to: 0
 10801  001438  0100               	movlb	0	; () banked
 10802  00143A  90D8               	bcf	status,0,c
 10803  00143C  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10804  00143E                     l7718:
 10805                           
 10806                           ; BSR set to: 0
 10807  00143E  0100               	movlb	0	; () banked
 10808  001440  A1A9               	btfss	___fladd@b& (0+255),0,b
 10809  001442  D002               	goto	l7722
 10810                           
 10811                           ; BSR set to: 0
 10812  001444  0100               	movlb	0	; () banked
 10813  001446  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10814  001448                     l7722:
 10815                           
 10816                           ; BSR set to: 0
 10817  001448  0100               	movlb	0	; () banked
 10818  00144A  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10819  00144C  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10820  00144E  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10821  001450  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10822  001452  33A9               	rrcf	___fladd@b& (0+255),f,b
 10823                           
 10824                           ; BSR set to: 0
 10825  001454  0100               	movlb	0	; () banked
 10826  001456  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10827                           
 10828                           ; BSR set to: 0
 10829  001458  D0AF               	goto	l7762
 10830  00145A                     l7726:
 10831                           
 10832                           ; BSR set to: 0
 10833  00145A  0100               	movlb	0	; () banked
 10834  00145C  51AD               	movf	___fladd@a& (0+255),w,b
 10835  00145E  0100               	movlb	0	; () banked
 10836  001460  5DA9               	subwf	___fladd@b& (0+255),w,b
 10837  001462  0100               	movlb	0	; () banked
 10838  001464  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10839  001466  0100               	movlb	0	; () banked
 10840  001468  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
 10841  00146A  0100               	movlb	0	; () banked
 10842  00146C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10843  00146E  0100               	movlb	0	; () banked
 10844  001470  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
 10845  001472  0100               	movlb	0	; () banked
 10846  001474  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10847  001476  0A80               	xorlw	128
 10848  001478  0100               	movlb	0	; () banked
 10849  00147A  6FB1               	movwf	??___fladd& (0+255),b
 10850  00147C  0100               	movlb	0	; () banked
 10851  00147E  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10852  001480  0A80               	xorlw	128
 10853  001482  0100               	movlb	0	; () banked
 10854  001484  59B1               	subwfb	??___fladd& (0+255),w,b
 10855  001486  B0D8               	btfsc	status,0,c
 10856  001488  D050               	goto	l7736
 10857                           
 10858                           ; BSR set to: 0
 10859  00148A  C0A9  F0B1         	movff	___fladd@b,??___fladd
 10860  00148E  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 10861  001492  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 10862  001496  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 10863  00149A  0100               	movlb	0	; () banked
 10864  00149C  1FB1               	comf	??___fladd& (0+255),f,b
 10865  00149E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10866  0014A0  1FB3               	comf	(??___fladd+2)& (0+255),f,b
 10867  0014A2  1FB4               	comf	(??___fladd+3)& (0+255),f,b
 10868  0014A4  2BB1               	incf	??___fladd& (0+255),f,b
 10869  0014A6  0E00               	movlw	0
 10870  0014A8  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
 10871  0014AA  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
 10872  0014AC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10873  0014AE  0100               	movlb	0	; () banked
 10874  0014B0  51AD               	movf	___fladd@a& (0+255),w,b
 10875  0014B2  0100               	movlb	0	; () banked
 10876  0014B4  25B1               	addwf	??___fladd& (0+255),w,b
 10877  0014B6  0100               	movlb	0	; () banked
 10878  0014B8  6FB5               	movwf	(??___fladd+4)& (0+255),b
 10879  0014BA  0100               	movlb	0	; () banked
 10880  0014BC  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10881  0014BE  0100               	movlb	0	; () banked
 10882  0014C0  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
 10883  0014C2  0100               	movlb	0	; () banked
 10884  0014C4  6FB6               	movwf	(??___fladd+5)& (0+255),b
 10885  0014C6  0100               	movlb	0	; () banked
 10886  0014C8  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10887  0014CA  0100               	movlb	0	; () banked
 10888  0014CC  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
 10889  0014CE  0100               	movlb	0	; () banked
 10890  0014D0  6FB7               	movwf	(??___fladd+6)& (0+255),b
 10891  0014D2  0100               	movlb	0	; () banked
 10892  0014D4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10893  0014D6  0100               	movlb	0	; () banked
 10894  0014D8  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
 10895  0014DA  0100               	movlb	0	; () banked
 10896  0014DC  6FB8               	movwf	(??___fladd+7)& (0+255),b
 10897  0014DE  0EFF               	movlw	255
 10898  0014E0  0100               	movlb	0	; () banked
 10899  0014E2  25B5               	addwf	(??___fladd+4)& (0+255),w,b
 10900  0014E4  0100               	movlb	0	; () banked
 10901  0014E6  6FA9               	movwf	___fladd@b& (0+255),b
 10902  0014E8  0EFF               	movlw	255
 10903  0014EA  0100               	movlb	0	; () banked
 10904  0014EC  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
 10905  0014EE  0100               	movlb	0	; () banked
 10906  0014F0  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10907  0014F2  0EFF               	movlw	255
 10908  0014F4  0100               	movlb	0	; () banked
 10909  0014F6  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
 10910  0014F8  0100               	movlb	0	; () banked
 10911  0014FA  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10912  0014FC  0EFF               	movlw	255
 10913  0014FE  0100               	movlb	0	; () banked
 10914  001500  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
 10915  001502  0100               	movlb	0	; () banked
 10916  001504  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10917  001506  0E80               	movlw	128
 10918  001508  0100               	movlb	0	; () banked
 10919  00150A  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 10920                           
 10921                           ; BSR set to: 0
 10922  00150C  0100               	movlb	0	; () banked
 10923  00150E  6DBC               	negf	___fladd@grs& (0+255),b
 10924                           
 10925                           ; BSR set to: 0
 10926  001510  0100               	movlb	0	; () banked
 10927  001512  51BC               	movf	___fladd@grs& (0+255),w,b
 10928  001514  0100               	movlb	0	; () banked
 10929  001516  A4D8               	btfss	status,2,c
 10930  001518  D018               	goto	l1359
 10931                           
 10932                           ; BSR set to: 0
 10933  00151A  0E01               	movlw	1
 10934  00151C  0100               	movlb	0	; () banked
 10935  00151E  27A9               	addwf	___fladd@b& (0+255),f,b
 10936  001520  0E00               	movlw	0
 10937  001522  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 10938  001524  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 10939  001526  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 10940                           
 10941                           ; BSR set to: 0
 10942  001528  D010               	goto	l1359
 10943  00152A                     l7736:
 10944                           
 10945                           ; BSR set to: 0
 10946  00152A  0100               	movlb	0	; () banked
 10947  00152C  51AD               	movf	___fladd@a& (0+255),w,b
 10948  00152E  0100               	movlb	0	; () banked
 10949  001530  5FA9               	subwf	___fladd@b& (0+255),f,b
 10950  001532  0100               	movlb	0	; () banked
 10951  001534  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10952  001536  0100               	movlb	0	; () banked
 10953  001538  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
 10954  00153A  0100               	movlb	0	; () banked
 10955  00153C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10956  00153E  0100               	movlb	0	; () banked
 10957  001540  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
 10958  001542  0100               	movlb	0	; () banked
 10959  001544  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10960  001546  0100               	movlb	0	; () banked
 10961  001548  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
 10962  00154A                     l1359:
 10963                           
 10964                           ; BSR set to: 0
 10965  00154A  0100               	movlb	0	; () banked
 10966  00154C  51A9               	movf	___fladd@b& (0+255),w,b
 10967  00154E  0100               	movlb	0	; () banked
 10968  001550  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 10969  001552  0100               	movlb	0	; () banked
 10970  001554  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 10971  001556  0100               	movlb	0	; () banked
 10972  001558  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 10973  00155A  A4D8               	btfss	status,2,c
 10974  00155C  D02A               	goto	l7760
 10975                           
 10976                           ; BSR set to: 0
 10977  00155E  0100               	movlb	0	; () banked
 10978  001560  51BC               	movf	___fladd@grs& (0+255),w,b
 10979  001562  0100               	movlb	0	; () banked
 10980  001564  A4D8               	btfss	status,2,c
 10981  001566  D025               	goto	l7760
 10982                           
 10983                           ; BSR set to: 0
 10984  001568  0E00               	movlw	0
 10985  00156A  0100               	movlb	0	; () banked
 10986  00156C  6FA9               	movwf	?___fladd& (0+255),b
 10987  00156E  0E00               	movlw	0
 10988  001570  6FAA               	movwf	(?___fladd+1)& (0+255),b
 10989  001572  0E00               	movlw	0
 10990  001574  6FAB               	movwf	(?___fladd+2)& (0+255),b
 10991  001576  0E00               	movlw	0
 10992  001578  6FAC               	movwf	(?___fladd+3)& (0+255),b
 10993                           
 10994                           ; BSR set to: 0
 10995  00157A  0012               	return	
 10996  00157C                     l7744:
 10997                           
 10998                           ; BSR set to: 0
 10999  00157C  0100               	movlb	0	; () banked
 11000  00157E  90D8               	bcf	status,0,c
 11001  001580  37A9               	rlcf	___fladd@b& (0+255),f,b
 11002  001582  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
 11003  001584  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
 11004  001586  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
 11005                           
 11006                           ; BSR set to: 0
 11007  001588  0100               	movlb	0	; () banked
 11008  00158A  AFBC               	btfss	___fladd@grs& (0+255),7,b
 11009  00158C  D002               	goto	l7750
 11010                           
 11011                           ; BSR set to: 0
 11012  00158E  0100               	movlb	0	; () banked
 11013  001590  81A9               	bsf	___fladd@b& (0+255),0,b
 11014  001592                     l7750:
 11015                           
 11016                           ; BSR set to: 0
 11017  001592  0100               	movlb	0	; () banked
 11018  001594  A1BC               	btfss	___fladd@grs& (0+255),0,b
 11019  001596  D003               	goto	l7754
 11020                           
 11021                           ; BSR set to: 0
 11022  001598  80D8               	bsf	status,0,c
 11023  00159A  0100               	movlb	0	; () banked
 11024  00159C  D002               	goto	L8
 11025  00159E                     l7754:
 11026                           
 11027                           ; BSR set to: 0
 11028  00159E  0100               	movlb	0	; () banked
 11029  0015A0  90D8               	bcf	status,0,c
 11030  0015A2                     L8:
 11031  0015A2  37BC               	rlcf	___fladd@grs& (0+255),f,b
 11032                           
 11033                           ; BSR set to: 0
 11034                           
 11035                           ; BSR set to: 0
 11036  0015A4  0100               	movlb	0	; () banked
 11037  0015A6  51BB               	movf	___fladd@bexp& (0+255),w,b
 11038  0015A8  0100               	movlb	0	; () banked
 11039  0015AA  B4D8               	btfsc	status,2,c
 11040  0015AC  D002               	goto	l7760
 11041                           
 11042                           ; BSR set to: 0
 11043  0015AE  0100               	movlb	0	; () banked
 11044  0015B0  07BB               	decf	___fladd@bexp& (0+255),f,b
 11045  0015B2                     l7760:
 11046                           
 11047                           ; BSR set to: 0
 11048  0015B2  0100               	movlb	0	; () banked
 11049  0015B4  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 11050  0015B6  D7E2               	goto	l7744
 11051  0015B8                     l7762:
 11052                           
 11053                           ; BSR set to: 0
 11054  0015B8  0E00               	movlw	0
 11055  0015BA  0100               	movlb	0	; () banked
 11056  0015BC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11057                           
 11058                           ; BSR set to: 0
 11059  0015BE  0100               	movlb	0	; () banked
 11060  0015C0  AFBC               	btfss	___fladd@grs& (0+255),7,b
 11061  0015C2  D00D               	goto	l1368
 11062                           
 11063                           ; BSR set to: 0
 11064  0015C4  C0BC  F0B1         	movff	___fladd@grs,??___fladd
 11065  0015C8  0E7F               	movlw	127
 11066  0015CA  0100               	movlb	0	; () banked
 11067  0015CC  17B1               	andwf	??___fladd& (0+255),f,b
 11068  0015CE  A4D8               	btfss	status,2,c
 11069  0015D0  D003               	goto	l7770
 11070                           
 11071                           ; BSR set to: 0
 11072                           
 11073                           ; BSR set to: 0
 11074  0015D2  0100               	movlb	0	; () banked
 11075  0015D4  A1A9               	btfss	___fladd@b& (0+255),0,b
 11076  0015D6  D003               	goto	l1368
 11077  0015D8                     l7770:
 11078                           
 11079                           ; BSR set to: 0
 11080  0015D8  0E01               	movlw	1
 11081  0015DA  0100               	movlb	0	; () banked
 11082  0015DC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11083  0015DE                     l1368:
 11084                           
 11085                           ; BSR set to: 0
 11086  0015DE  0100               	movlb	0	; () banked
 11087  0015E0  51BA               	movf	___fladd@aexp& (0+255),w,b
 11088  0015E2  0100               	movlb	0	; () banked
 11089  0015E4  B4D8               	btfsc	status,2,c
 11090  0015E6  D026               	goto	l7780
 11091                           
 11092                           ; BSR set to: 0
 11093  0015E8  0E01               	movlw	1
 11094  0015EA  0100               	movlb	0	; () banked
 11095  0015EC  27A9               	addwf	___fladd@b& (0+255),f,b
 11096  0015EE  0E00               	movlw	0
 11097  0015F0  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 11098  0015F2  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 11099  0015F4  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 11100                           
 11101                           ; BSR set to: 0
 11102  0015F6  0100               	movlb	0	; () banked
 11103  0015F8  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 11104  0015FA  D01C               	goto	l7780
 11105                           
 11106                           ; BSR set to: 0
 11107  0015FC  C0A9  F0B1         	movff	___fladd@b,??___fladd
 11108  001600  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 11109  001604  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 11110  001608  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 11111  00160C  0100               	movlb	0	; () banked
 11112  00160E  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
 11113  001610  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
 11114  001612  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
 11115  001614  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
 11116  001616  33B1               	rrcf	??___fladd& (0+255),f,b
 11117  001618  C0B1  F0A9         	movff	??___fladd,___fladd@b
 11118  00161C  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
 11119  001620  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
 11120  001624  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
 11121  001628  0100               	movlb	0	; () banked
 11122  00162A  29BB               	incf	___fladd@bexp& (0+255),w,b
 11123  00162C  B4D8               	btfsc	status,2,c
 11124  00162E  D002               	goto	l7780
 11125                           
 11126                           ; BSR set to: 0
 11127  001630  0100               	movlb	0	; () banked
 11128  001632  2BBB               	incf	___fladd@bexp& (0+255),f,b
 11129  001634                     l7780:
 11130                           
 11131                           ; BSR set to: 0
 11132  001634  0100               	movlb	0	; () banked
 11133  001636  29BB               	incf	___fladd@bexp& (0+255),w,b
 11134  001638  B4D8               	btfsc	status,2,c
 11135  00163A  D005               	goto	l7784
 11136                           
 11137                           ; BSR set to: 0
 11138  00163C  0100               	movlb	0	; () banked
 11139  00163E  51BB               	movf	___fladd@bexp& (0+255),w,b
 11140  001640  0100               	movlb	0	; () banked
 11141  001642  A4D8               	btfss	status,2,c
 11142  001644  D011               	goto	l7788
 11143  001646                     l7784:
 11144                           
 11145                           ; BSR set to: 0
 11146  001646  0E00               	movlw	0
 11147  001648  0100               	movlb	0	; () banked
 11148  00164A  6FA9               	movwf	___fladd@b& (0+255),b
 11149  00164C  0E00               	movlw	0
 11150  00164E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 11151  001650  0E00               	movlw	0
 11152  001652  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 11153  001654  0E00               	movlw	0
 11154  001656  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11155  001658  0100               	movlb	0	; () banked
 11156  00165A  51BB               	movf	___fladd@bexp& (0+255),w,b
 11157  00165C  0100               	movlb	0	; () banked
 11158  00165E  A4D8               	btfss	status,2,c
 11159  001660  D003               	goto	l7788
 11160                           
 11161                           ; BSR set to: 0
 11162  001662  0E00               	movlw	0
 11163  001664  0100               	movlb	0	; () banked
 11164  001666  6FB9               	movwf	___fladd@signs& (0+255),b
 11165  001668                     l7788:
 11166                           
 11167                           ; BSR set to: 0
 11168  001668  0100               	movlb	0	; () banked
 11169  00166A  A1BB               	btfss	___fladd@bexp& (0+255),0,b
 11170  00166C  D003               	goto	l7792
 11171                           
 11172                           ; BSR set to: 0
 11173  00166E  0100               	movlb	0	; () banked
 11174  001670  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 11175  001672  D002               	goto	l7794
 11176  001674                     l7792:
 11177                           
 11178                           ; BSR set to: 0
 11179  001674  0100               	movlb	0	; () banked
 11180  001676  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
 11181  001678                     l7794:
 11182                           
 11183                           ; BSR set to: 0
 11184  001678  0100               	movlb	0	; () banked
 11185  00167A  90D8               	bcf	status,0,c
 11186  00167C  31BB               	rrcf	___fladd@bexp& (0+255),w,b
 11187  00167E  0100               	movlb	0	; () banked
 11188  001680  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11189                           
 11190                           ; BSR set to: 0
 11191  001682  0100               	movlb	0	; () banked
 11192  001684  AFB9               	btfss	___fladd@signs& (0+255),7,b
 11193  001686  D002               	goto	l7800
 11194                           
 11195                           ; BSR set to: 0
 11196  001688  0100               	movlb	0	; () banked
 11197  00168A  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
 11198  00168C                     l7800:
 11199                           
 11200                           ; BSR set to: 0
 11201  00168C  C0A9  F0A9         	movff	___fladd@b,?___fladd
 11202  001690  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
 11203  001694  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
 11204  001698  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
 11205  00169C  0012               	return	
 11206  00169E                     __end_of___fladd:
 11207                           	opt stack 0
 11208                           tblptru	equ	0xFF8
 11209                           tblptrh	equ	0xFF7
 11210                           tblptrl	equ	0xFF6
 11211                           tablat	equ	0xFF5
 11212                           prodh	equ	0xFF4
 11213                           prodl	equ	0xFF3
 11214                           intcon	equ	0xFF2
 11215                           postinc0	equ	0xFEE
 11216                           wreg	equ	0xFE8
 11217                           postdec1	equ	0xFE5
 11218                           fsr1l	equ	0xFE1
 11219                           indf2	equ	0xFDF
 11220                           postinc2	equ	0xFDE
 11221                           postdec2	equ	0xFDD
 11222                           fsr2h	equ	0xFDA
 11223                           fsr2l	equ	0xFD9
 11224                           status	equ	0xFD8
 11225                           
 11226 ;; *************** function ___flneg *****************
 11227 ;; Defined at:
 11228 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flneg.c"
 11229 ;; Parameters:    Size  Location     Type
 11230 ;;  f1              4   21[BANK0 ] unsigned char 
 11231 ;; Auto vars:     Size  Location     Type
 11232 ;;		None
 11233 ;; Return value:  Size  Location     Type
 11234 ;;                  4   21[BANK0 ] unsigned char 
 11235 ;; Registers used:
 11236 ;;		wreg, status,2, status,0
 11237 ;; Tracked objects:
 11238 ;;		On entry : 0/0
 11239 ;;		On exit  : 0/0
 11240 ;;		Unchanged: 0/0
 11241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11242 ;;      Params:         0       4       0       0       0       0       0
 11243 ;;      Locals:         0       0       0       0       0       0       0
 11244 ;;      Temps:          0       0       0       0       0       0       0
 11245 ;;      Totals:         0       4       0       0       0       0       0
 11246 ;;Total ram usage:        4 bytes
 11247 ;; Hardware stack levels used:    1
 11248 ;; Hardware stack levels required when called:    8
 11249 ;; This function calls:
 11250 ;;		Nothing
 11251 ;; This function is called by:
 11252 ;;		_printf
 11253 ;; This function uses a non-reentrant model
 11254 ;;
 11255                           
 11256                           	psect	text35
 11257  004EF8                     __ptext35:
 11258                           	opt stack 0
 11259  004EF8                     ___flneg:
 11260                           	opt stack 19
 11261                           
 11262                           ; BSR set to: 0
 11263                           ;incstack = 0
 11264  004EF8  0100               	movlb	0	; () banked
 11265  004EFA  5175               	movf	___flneg@f1& (0+255),w,b
 11266  004EFC  0100               	movlb	0	; () banked
 11267  004EFE  1176               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11268  004F00  0100               	movlb	0	; () banked
 11269  004F02  1177               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11270  004F04  0100               	movlb	0	; () banked
 11271  004F06  1178               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11272  004F08  B4D8               	btfsc	status,2,c
 11273  004F0A  D009               	goto	l8172
 11274                           
 11275                           ; BSR set to: 0
 11276  004F0C  0E00               	movlw	0
 11277  004F0E  0100               	movlb	0	; () banked
 11278  004F10  1B75               	xorwf	___flneg@f1& (0+255),f,b
 11279  004F12  0E00               	movlw	0
 11280  004F14  1B76               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11281  004F16  0E00               	movlw	0
 11282  004F18  1B77               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11283  004F1A  0E80               	movlw	128
 11284  004F1C  1B78               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11285  004F1E                     l8172:
 11286                           
 11287                           ; BSR set to: 0
 11288  004F1E  C075  F075         	movff	___flneg@f1,?___flneg
 11289  004F22  C076  F076         	movff	___flneg@f1+1,?___flneg+1
 11290  004F26  C077  F077         	movff	___flneg@f1+2,?___flneg+2
 11291  004F2A  C078  F078         	movff	___flneg@f1+3,?___flneg+3
 11292  004F2E  0012               	return	
 11293  004F30                     __end_of___flneg:
 11294                           	opt stack 0
 11295                           tblptru	equ	0xFF8
 11296                           tblptrh	equ	0xFF7
 11297                           tblptrl	equ	0xFF6
 11298                           tablat	equ	0xFF5
 11299                           prodh	equ	0xFF4
 11300                           prodl	equ	0xFF3
 11301                           intcon	equ	0xFF2
 11302                           postinc0	equ	0xFEE
 11303                           wreg	equ	0xFE8
 11304                           postdec1	equ	0xFE5
 11305                           fsr1l	equ	0xFE1
 11306                           indf2	equ	0xFDF
 11307                           postinc2	equ	0xFDE
 11308                           postdec2	equ	0xFDD
 11309                           fsr2h	equ	0xFDA
 11310                           fsr2l	equ	0xFD9
 11311                           status	equ	0xFD8
 11312                           
 11313 ;; *************** function ___flge *****************
 11314 ;; Defined at:
 11315 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 11316 ;; Parameters:    Size  Location     Type
 11317 ;;  ff1             4   21[BANK0 ] unsigned char 
 11318 ;;  ff2             4   25[BANK0 ] unsigned char 
 11319 ;; Auto vars:     Size  Location     Type
 11320 ;;		None
 11321 ;; Return value:  Size  Location     Type
 11322 ;;		None               void
 11323 ;; Registers used:
 11324 ;;		wreg, status,2, status,0
 11325 ;; Tracked objects:
 11326 ;;		On entry : 0/0
 11327 ;;		On exit  : 0/0
 11328 ;;		Unchanged: 0/0
 11329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11330 ;;      Params:         0       8       0       0       0       0       0
 11331 ;;      Locals:         0       0       0       0       0       0       0
 11332 ;;      Temps:          0       4       0       0       0       0       0
 11333 ;;      Totals:         0      12       0       0       0       0       0
 11334 ;;Total ram usage:       12 bytes
 11335 ;; Hardware stack levels used:    1
 11336 ;; Hardware stack levels required when called:    8
 11337 ;; This function calls:
 11338 ;;		Nothing
 11339 ;; This function is called by:
 11340 ;;		_printf
 11341 ;; This function uses a non-reentrant model
 11342 ;;
 11343                           
 11344                           	psect	text36
 11345  003380                     __ptext36:
 11346                           	opt stack 0
 11347  003380                     ___flge:
 11348                           	opt stack 19
 11349                           
 11350                           ; BSR set to: 0
 11351                           ;incstack = 0
 11352  003380  0E00               	movlw	0
 11353  003382  0100               	movlb	0	; () banked
 11354  003384  1575               	andwf	___flge@ff1& (0+255),w,b
 11355  003386  0100               	movlb	0	; () banked
 11356  003388  6F7D               	movwf	??___flge& (0+255),b
 11357  00338A  0E00               	movlw	0
 11358  00338C  0100               	movlb	0	; () banked
 11359  00338E  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
 11360  003390  0100               	movlb	0	; () banked
 11361  003392  6F7E               	movwf	(??___flge+1)& (0+255),b
 11362  003394  0E80               	movlw	128
 11363  003396  0100               	movlb	0	; () banked
 11364  003398  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
 11365  00339A  0100               	movlb	0	; () banked
 11366  00339C  6F7F               	movwf	(??___flge+2)& (0+255),b
 11367  00339E  0E7F               	movlw	127
 11368  0033A0  0100               	movlb	0	; () banked
 11369  0033A2  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
 11370  0033A4  0100               	movlb	0	; () banked
 11371  0033A6  6F80               	movwf	(??___flge+3)& (0+255),b
 11372  0033A8  0100               	movlb	0	; () banked
 11373  0033AA  517D               	movf	??___flge& (0+255),w,b
 11374  0033AC  0100               	movlb	0	; () banked
 11375  0033AE  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11376  0033B0  0100               	movlb	0	; () banked
 11377  0033B2  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11378  0033B4  0100               	movlb	0	; () banked
 11379  0033B6  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11380  0033B8  A4D8               	btfss	status,2,c
 11381  0033BA  D009               	goto	l8150
 11382                           
 11383                           ; BSR set to: 0
 11384  0033BC  0E00               	movlw	0
 11385  0033BE  0100               	movlb	0	; () banked
 11386  0033C0  6F75               	movwf	___flge@ff1& (0+255),b
 11387  0033C2  0E00               	movlw	0
 11388  0033C4  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11389  0033C6  0E00               	movlw	0
 11390  0033C8  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11391  0033CA  0E00               	movlw	0
 11392  0033CC  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11393  0033CE                     l8150:
 11394                           
 11395                           ; BSR set to: 0
 11396  0033CE  0E00               	movlw	0
 11397  0033D0  0100               	movlb	0	; () banked
 11398  0033D2  1579               	andwf	___flge@ff2& (0+255),w,b
 11399  0033D4  0100               	movlb	0	; () banked
 11400  0033D6  6F7D               	movwf	??___flge& (0+255),b
 11401  0033D8  0E00               	movlw	0
 11402  0033DA  0100               	movlb	0	; () banked
 11403  0033DC  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
 11404  0033DE  0100               	movlb	0	; () banked
 11405  0033E0  6F7E               	movwf	(??___flge+1)& (0+255),b
 11406  0033E2  0E80               	movlw	128
 11407  0033E4  0100               	movlb	0	; () banked
 11408  0033E6  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
 11409  0033E8  0100               	movlb	0	; () banked
 11410  0033EA  6F7F               	movwf	(??___flge+2)& (0+255),b
 11411  0033EC  0E7F               	movlw	127
 11412  0033EE  0100               	movlb	0	; () banked
 11413  0033F0  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
 11414  0033F2  0100               	movlb	0	; () banked
 11415  0033F4  6F80               	movwf	(??___flge+3)& (0+255),b
 11416  0033F6  0100               	movlb	0	; () banked
 11417  0033F8  517D               	movf	??___flge& (0+255),w,b
 11418  0033FA  0100               	movlb	0	; () banked
 11419  0033FC  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11420  0033FE  0100               	movlb	0	; () banked
 11421  003400  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11422  003402  0100               	movlb	0	; () banked
 11423  003404  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11424  003406  A4D8               	btfss	status,2,c
 11425  003408  D009               	goto	l8154
 11426                           
 11427                           ; BSR set to: 0
 11428  00340A  0E00               	movlw	0
 11429  00340C  0100               	movlb	0	; () banked
 11430  00340E  6F79               	movwf	___flge@ff2& (0+255),b
 11431  003410  0E00               	movlw	0
 11432  003412  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11433  003414  0E00               	movlw	0
 11434  003416  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11435  003418  0E00               	movlw	0
 11436  00341A  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11437  00341C                     l8154:
 11438                           
 11439                           ; BSR set to: 0
 11440  00341C  0100               	movlb	0	; () banked
 11441  00341E  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
 11442  003420  D026               	goto	l8158
 11443                           
 11444                           ; BSR set to: 0
 11445  003422  C075  F07D         	movff	___flge@ff1,??___flge
 11446  003426  C076  F07E         	movff	___flge@ff1+1,??___flge+1
 11447  00342A  C077  F07F         	movff	___flge@ff1+2,??___flge+2
 11448  00342E  C078  F080         	movff	___flge@ff1+3,??___flge+3
 11449  003432  0100               	movlb	0	; () banked
 11450  003434  1F7D               	comf	??___flge& (0+255),f,b
 11451  003436  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11452  003438  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11453  00343A  1F80               	comf	(??___flge+3)& (0+255),f,b
 11454  00343C  2B7D               	incf	??___flge& (0+255),f,b
 11455  00343E  0E00               	movlw	0
 11456  003440  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11457  003442  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11458  003444  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11459  003446  0E00               	movlw	0
 11460  003448  0100               	movlb	0	; () banked
 11461  00344A  257D               	addwf	??___flge& (0+255),w,b
 11462  00344C  0100               	movlb	0	; () banked
 11463  00344E  6F75               	movwf	___flge@ff1& (0+255),b
 11464  003450  0E00               	movlw	0
 11465  003452  0100               	movlb	0	; () banked
 11466  003454  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11467  003456  0100               	movlb	0	; () banked
 11468  003458  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11469  00345A  0E00               	movlw	0
 11470  00345C  0100               	movlb	0	; () banked
 11471  00345E  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11472  003460  0100               	movlb	0	; () banked
 11473  003462  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11474  003464  0E80               	movlw	128
 11475  003466  0100               	movlb	0	; () banked
 11476  003468  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11477  00346A  0100               	movlb	0	; () banked
 11478  00346C  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11479  00346E                     l8158:
 11480                           
 11481                           ; BSR set to: 0
 11482  00346E  0100               	movlb	0	; () banked
 11483  003470  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
 11484  003472  D026               	goto	l1079
 11485                           
 11486                           ; BSR set to: 0
 11487  003474  C079  F07D         	movff	___flge@ff2,??___flge
 11488  003478  C07A  F07E         	movff	___flge@ff2+1,??___flge+1
 11489  00347C  C07B  F07F         	movff	___flge@ff2+2,??___flge+2
 11490  003480  C07C  F080         	movff	___flge@ff2+3,??___flge+3
 11491  003484  0100               	movlb	0	; () banked
 11492  003486  1F7D               	comf	??___flge& (0+255),f,b
 11493  003488  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11494  00348A  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11495  00348C  1F80               	comf	(??___flge+3)& (0+255),f,b
 11496  00348E  2B7D               	incf	??___flge& (0+255),f,b
 11497  003490  0E00               	movlw	0
 11498  003492  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11499  003494  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11500  003496  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11501  003498  0E00               	movlw	0
 11502  00349A  0100               	movlb	0	; () banked
 11503  00349C  257D               	addwf	??___flge& (0+255),w,b
 11504  00349E  0100               	movlb	0	; () banked
 11505  0034A0  6F79               	movwf	___flge@ff2& (0+255),b
 11506  0034A2  0E00               	movlw	0
 11507  0034A4  0100               	movlb	0	; () banked
 11508  0034A6  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11509  0034A8  0100               	movlb	0	; () banked
 11510  0034AA  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11511  0034AC  0E00               	movlw	0
 11512  0034AE  0100               	movlb	0	; () banked
 11513  0034B0  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11514  0034B2  0100               	movlb	0	; () banked
 11515  0034B4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11516  0034B6  0E80               	movlw	128
 11517  0034B8  0100               	movlb	0	; () banked
 11518  0034BA  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11519  0034BC  0100               	movlb	0	; () banked
 11520  0034BE  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11521  0034C0                     l1079:
 11522                           
 11523                           ; BSR set to: 0
 11524  0034C0  0E00               	movlw	0
 11525  0034C2  0100               	movlb	0	; () banked
 11526  0034C4  1B75               	xorwf	___flge@ff1& (0+255),f,b
 11527  0034C6  0E00               	movlw	0
 11528  0034C8  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11529  0034CA  0E00               	movlw	0
 11530  0034CC  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11531  0034CE  0E80               	movlw	128
 11532  0034D0  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11533  0034D2  0E00               	movlw	0
 11534  0034D4  0100               	movlb	0	; () banked
 11535  0034D6  1B79               	xorwf	___flge@ff2& (0+255),f,b
 11536  0034D8  0E00               	movlw	0
 11537  0034DA  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11538  0034DC  0E00               	movlw	0
 11539  0034DE  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11540  0034E0  0E80               	movlw	128
 11541  0034E2  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11542  0034E4  0100               	movlb	0	; () banked
 11543  0034E6  5179               	movf	___flge@ff2& (0+255),w,b
 11544  0034E8  0100               	movlb	0	; () banked
 11545  0034EA  5D75               	subwf	___flge@ff1& (0+255),w,b
 11546  0034EC  0100               	movlb	0	; () banked
 11547  0034EE  517A               	movf	(___flge@ff2+1)& (0+255),w,b
 11548  0034F0  0100               	movlb	0	; () banked
 11549  0034F2  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11550  0034F4  0100               	movlb	0	; () banked
 11551  0034F6  517B               	movf	(___flge@ff2+2)& (0+255),w,b
 11552  0034F8  0100               	movlb	0	; () banked
 11553  0034FA  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11554  0034FC  0100               	movlb	0	; () banked
 11555  0034FE  517C               	movf	(___flge@ff2+3)& (0+255),w,b
 11556  003500  0100               	movlb	0	; () banked
 11557  003502  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11558  003504  B0D8               	btfsc	status,0,c
 11559  003506  D002               	goto	l8164
 11560                           
 11561                           ; BSR set to: 0
 11562  003508  90D8               	bcf	status,0,c
 11563  00350A  0012               	return	
 11564  00350C                     l8164:
 11565                           
 11566                           ; BSR set to: 0
 11567  00350C  80D8               	bsf	status,0,c
 11568                           
 11569                           ; BSR set to: 0
 11570  00350E  0012               	return	
 11571  003510                     __end_of___flge:
 11572                           	opt stack 0
 11573                           tblptru	equ	0xFF8
 11574                           tblptrh	equ	0xFF7
 11575                           tblptrl	equ	0xFF6
 11576                           tablat	equ	0xFF5
 11577                           prodh	equ	0xFF4
 11578                           prodl	equ	0xFF3
 11579                           intcon	equ	0xFF2
 11580                           postinc0	equ	0xFEE
 11581                           wreg	equ	0xFE8
 11582                           postdec1	equ	0xFE5
 11583                           fsr1l	equ	0xFE1
 11584                           indf2	equ	0xFDF
 11585                           postinc2	equ	0xFDE
 11586                           postdec2	equ	0xFDD
 11587                           fsr2h	equ	0xFDA
 11588                           fsr2l	equ	0xFD9
 11589                           status	equ	0xFD8
 11590                           
 11591 ;; *************** function _clockConfig *****************
 11592 ;; Defined at:
 11593 ;;		line 76 in file "source/SYSConfig.h"
 11594 ;; Parameters:    Size  Location     Type
 11595 ;;		None
 11596 ;; Auto vars:     Size  Location     Type
 11597 ;;		None
 11598 ;; Return value:  Size  Location     Type
 11599 ;;                  1    wreg      void 
 11600 ;; Registers used:
 11601 ;;		wreg, status,2
 11602 ;; Tracked objects:
 11603 ;;		On entry : 0/0
 11604 ;;		On exit  : 0/0
 11605 ;;		Unchanged: 0/0
 11606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11607 ;;      Params:         0       0       0       0       0       0       0
 11608 ;;      Locals:         0       0       0       0       0       0       0
 11609 ;;      Temps:          0       0       0       0       0       0       0
 11610 ;;      Totals:         0       0       0       0       0       0       0
 11611 ;;Total ram usage:        0 bytes
 11612 ;; Hardware stack levels used:    1
 11613 ;; Hardware stack levels required when called:    8
 11614 ;; This function calls:
 11615 ;;		Nothing
 11616 ;; This function is called by:
 11617 ;;		_main
 11618 ;; This function uses a non-reentrant model
 11619 ;;
 11620                           
 11621                           	psect	text37
 11622  00510A                     __ptext37:
 11623                           	opt stack 0
 11624  00510A                     _clockConfig:
 11625                           	opt stack 22
 11626                           
 11627                           ;SYSConfig.h: 77: OSCCONbits.IDLEN = 1;
 11628                           
 11629                           ; BSR set to: 0
 11630                           ;incstack = 0
 11631  00510A  8ED3               	bsf	4051,7,c	;volatile
 11632                           
 11633                           ;SYSConfig.h: 78: OSCCONbits.IRCF = 0b111;
 11634  00510C  88D3               	bsf	4051,4,c	;volatile
 11635  00510E  8AD3               	bsf	4051,5,c	;volatile
 11636  005110  8CD3               	bsf	4051,6,c	;volatile
 11637  005112                     l81:
 11638  005112  A4D3               	btfss	4051,2,c	;volatile
 11639  005114  D7FE               	goto	l81
 11640                           
 11641                           ;SYSConfig.h: 80: OSCCONbits.SCS = 0b11;
 11642  005116  0E03               	movlw	3
 11643  005118  12D3               	iorwf	4051,f,c	;volatile
 11644                           
 11645                           ;SYSConfig.h: 81: OSCCON2bits.MFIOSEL = 0;
 11646  00511A  98D2               	bcf	4050,4,c	;volatile
 11647                           
 11648                           ;SYSConfig.h: 82: OSCCON2bits.SOSCGO = 0;
 11649  00511C  96D2               	bcf	4050,3,c	;volatile
 11650                           
 11651                           ;SYSConfig.h: 83: OSCTUNEbits.INTSRC = 0;
 11652  00511E  9E9B               	bcf	3995,7,c	;volatile
 11653                           
 11654                           ;SYSConfig.h: 84: OSCTUNEbits.TUN = 0b011111;
 11655  005120  809B               	bsf	3995,0,c	;volatile
 11656  005122  829B               	bsf	3995,1,c	;volatile
 11657  005124  849B               	bsf	3995,2,c	;volatile
 11658  005126  869B               	bsf	3995,3,c	;volatile
 11659  005128  889B               	bsf	3995,4,c	;volatile
 11660  00512A  9A9B               	bcf	3995,5,c	;volatile
 11661                           
 11662                           ;SYSConfig.h: 85: OSCTUNEbits.PLLEN = 1;
 11663  00512C  8C9B               	bsf	3995,6,c	;volatile
 11664                           
 11665                           ;SYSConfig.h: 87: WDTCONbits.SWDTEN = 1;
 11666  00512E  80D1               	bsf	4049,0,c	;volatile
 11667  005130  0012               	return		;funcret
 11668  005132                     __end_of_clockConfig:
 11669                           	opt stack 0
 11670                           tblptru	equ	0xFF8
 11671                           tblptrh	equ	0xFF7
 11672                           tblptrl	equ	0xFF6
 11673                           tablat	equ	0xFF5
 11674                           prodh	equ	0xFF4
 11675                           prodl	equ	0xFF3
 11676                           intcon	equ	0xFF2
 11677                           postinc0	equ	0xFEE
 11678                           wreg	equ	0xFE8
 11679                           postdec1	equ	0xFE5
 11680                           fsr1l	equ	0xFE1
 11681                           indf2	equ	0xFDF
 11682                           postinc2	equ	0xFDE
 11683                           postdec2	equ	0xFDD
 11684                           fsr2h	equ	0xFDA
 11685                           fsr2l	equ	0xFD9
 11686                           status	equ	0xFD8
 11687                           
 11688 ;; *************** function _buttonChecking *****************
 11689 ;; Defined at:
 11690 ;;		line 9 in file "source/ButtonController.h"
 11691 ;; Parameters:    Size  Location     Type
 11692 ;;		None
 11693 ;; Auto vars:     Size  Location     Type
 11694 ;;		None
 11695 ;; Return value:  Size  Location     Type
 11696 ;;                  1    wreg      void 
 11697 ;; Registers used:
 11698 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11699 ;; Tracked objects:
 11700 ;;		On entry : 0/0
 11701 ;;		On exit  : 0/0
 11702 ;;		Unchanged: 0/0
 11703 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11704 ;;      Params:         0       0       0       0       0       0       0
 11705 ;;      Locals:         0       0       0       0       0       0       0
 11706 ;;      Temps:          0       0       0       0       0       0       0
 11707 ;;      Totals:         0       0       0       0       0       0       0
 11708 ;;Total ram usage:        0 bytes
 11709 ;; Hardware stack levels used:    1
 11710 ;; Hardware stack levels required when called:   13
 11711 ;; This function calls:
 11712 ;;		_delay_ms
 11713 ;;		_longPressDOWN
 11714 ;;		_longPressENTER
 11715 ;;		_longPressRETRO
 11716 ;;		_longPressUP
 11717 ;;		_pressDOWN
 11718 ;;		_pressENTER
 11719 ;;		_pressRETRO
 11720 ;;		_pressUP
 11721 ;;		_releaseDOWN
 11722 ;;		_releaseENTER
 11723 ;;		_releaseRETRO
 11724 ;;		_releaseUP
 11725 ;; This function is called by:
 11726 ;;		_main
 11727 ;; This function uses a non-reentrant model
 11728 ;;
 11729                           
 11730                           	psect	text38
 11731  002B5C                     __ptext38:
 11732                           	opt stack 0
 11733  002B5C                     _buttonChecking:
 11734                           	opt stack 17
 11735                           
 11736                           ;ButtonController.h: 10: if(!PORTAbits.RA2 && lastSttUP) {
 11737                           
 11738                           ;incstack = 0
 11739  002B5C  B480               	btfsc	3968,2,c	;volatile
 11740  002B5E  D00D               	goto	l662
 11741  002B60  5042               	movf	_lastSttUP,w,c
 11742  002B62  B4D8               	btfsc	status,2,c
 11743  002B64  D00A               	goto	l662
 11744                           
 11745                           ;ButtonController.h: 11: lastSttUP = 0;
 11746  002B66  0E00               	movlw	0
 11747  002B68  6E42               	movwf	_lastSttUP,c
 11748                           
 11749                           ;ButtonController.h: 12: delay_ms(200);
 11750  002B6A  0E00               	movlw	0
 11751  002B6C  0100               	movlb	0	; () banked
 11752  002B6E  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11753  002B70  0EC8               	movlw	200
 11754  002B72  6F75               	movwf	delay_ms@del& (0+255),b
 11755  002B74  ECF9  F026         	call	_delay_ms	;wreg free
 11756                           
 11757                           ;ButtonController.h: 13: }else if(PORTAbits.RA2 && !lastSttUP) {
 11758  002B78  D040               	goto	l9484
 11759  002B7A                     l662:
 11760  002B7A  A480               	btfss	3968,2,c	;volatile
 11761  002B7C  D013               	goto	l9462
 11762  002B7E  5042               	movf	_lastSttUP,w,c
 11763  002B80  A4D8               	btfss	status,2,c
 11764  002B82  D010               	goto	l9462
 11765                           
 11766                           ;ButtonController.h: 14: lastSttUP = 1;
 11767  002B84  0E01               	movlw	1
 11768  002B86  6E42               	movwf	_lastSttUP,c
 11769                           
 11770                           ;ButtonController.h: 15: if(holdUPcont < 10)
 11771  002B88  0E0A               	movlw	10
 11772  002B8A  0100               	movlb	0	; () banked
 11773  002B8C  61D3               	cpfslt	_holdUPcont& (0+255),b
 11774  002B8E  D002               	goto	l9460
 11775                           
 11776                           ; BSR set to: 0
 11777                           ;ButtonController.h: 16: pressUP();
 11778  002B90  EC86  F01F         	call	_pressUP	;wreg free
 11779  002B94                     l9460:
 11780                           
 11781                           ;ButtonController.h: 17: delay_ms(50);
 11782  002B94  0E00               	movlw	0
 11783  002B96  0100               	movlb	0	; () banked
 11784  002B98  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11785  002B9A  0E32               	movlw	50
 11786  002B9C  6F75               	movwf	delay_ms@del& (0+255),b
 11787  002B9E  ECF9  F026         	call	_delay_ms	;wreg free
 11788                           
 11789                           ;ButtonController.h: 18: }else if(PORTAbits.RA2 == lastSttUP) {
 11790  002BA2  D02B               	goto	l9484
 11791  002BA4                     l9462:
 11792  002BA4  A480               	btfss	3968,2,c	;volatile
 11793  002BA6  D002               	goto	u11850
 11794  002BA8  0E01               	movlw	1
 11795  002BAA  D001               	goto	u11856
 11796  002BAC                     u11850:
 11797  002BAC  0E00               	movlw	0
 11798  002BAE                     u11856:
 11799  002BAE  1842               	xorwf	_lastSttUP,w,c
 11800  002BB0  A4D8               	btfss	status,2,c
 11801  002BB2  D023               	goto	l9484
 11802                           
 11803                           ;ButtonController.h: 19: if(PORTAbits.RA2) {
 11804  002BB4  A480               	btfss	3968,2,c	;volatile
 11805  002BB6  D006               	goto	l9470
 11806                           
 11807                           ;ButtonController.h: 20: holdUPcont = 0;
 11808  002BB8  0E00               	movlw	0
 11809  002BBA  0100               	movlb	0	; () banked
 11810  002BBC  6FD3               	movwf	_holdUPcont& (0+255),b
 11811                           
 11812                           ; BSR set to: 0
 11813                           ;ButtonController.h: 21: releaseUP();
 11814  002BBE  ECF6  F028         	call	_releaseUP	;wreg free
 11815                           
 11816                           ;ButtonController.h: 22: }
 11817  002BC2  D01B               	goto	l9484
 11818  002BC4                     l9470:
 11819                           
 11820                           ;ButtonController.h: 23: else {
 11821                           ;ButtonController.h: 24: if(!UPsecurLock)
 11822  002BC4  0101               	movlb	1	; () banked
 11823  002BC6  5149               	movf	_UPsecurLock& (0+255),w,b
 11824  002BC8  A4D8               	btfss	status,2,c
 11825  002BCA  D002               	goto	l9474
 11826                           
 11827                           ; BSR set to: 1
 11828                           ;ButtonController.h: 25: holdUPcont++;
 11829  002BCC  0100               	movlb	0	; () banked
 11830  002BCE  2BD3               	incf	_holdUPcont& (0+255),f,b
 11831  002BD0                     l9474:
 11832                           
 11833                           ;ButtonController.h: 26: if(holdUPcont > 9) {
 11834  002BD0  0E09               	movlw	9
 11835  002BD2  0100               	movlb	0	; () banked
 11836  002BD4  65D3               	cpfsgt	_holdUPcont& (0+255),b
 11837  002BD6  D00A               	goto	l9482
 11838                           
 11839                           ; BSR set to: 0
 11840                           ;ButtonController.h: 27: if(holdUPcont < 26)
 11841  002BD8  0E1A               	movlw	26
 11842  002BDA  0100               	movlb	0	; () banked
 11843  002BDC  61D3               	cpfslt	_holdUPcont& (0+255),b
 11844  002BDE  D003               	goto	l9480
 11845                           
 11846                           ; BSR set to: 0
 11847                           ;ButtonController.h: 28: longPressUP();
 11848  002BE0  EC65  F026         	call	_longPressUP	;wreg free
 11849  002BE4  D003               	goto	l9482
 11850  002BE6                     l9480:
 11851                           
 11852                           ;ButtonController.h: 29: else
 11853                           ;ButtonController.h: 30: UPsecurLock = 1;
 11854  002BE6  0E01               	movlw	1
 11855  002BE8  0101               	movlb	1	; () banked
 11856  002BEA  6F49               	movwf	_UPsecurLock& (0+255),b
 11857  002BEC                     l9482:
 11858                           
 11859                           ;ButtonController.h: 31: }
 11860                           ;ButtonController.h: 32: delay_ms(200);
 11861  002BEC  0E00               	movlw	0
 11862  002BEE  0100               	movlb	0	; () banked
 11863  002BF0  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11864  002BF2  0EC8               	movlw	200
 11865  002BF4  6F75               	movwf	delay_ms@del& (0+255),b
 11866  002BF6  ECF9  F026         	call	_delay_ms	;wreg free
 11867  002BFA                     l9484:
 11868                           
 11869                           ;ButtonController.h: 33: }
 11870                           ;ButtonController.h: 34: }
 11871                           ;ButtonController.h: 35: if(!PORTAbits.RA3 && lastSttDOWN) {
 11872  002BFA  B680               	btfsc	3968,3,c	;volatile
 11873  002BFC  D00D               	goto	l674
 11874  002BFE  503F               	movf	_lastSttDOWN,w,c
 11875  002C00  B4D8               	btfsc	status,2,c
 11876  002C02  D00A               	goto	l674
 11877                           
 11878                           ;ButtonController.h: 36: lastSttDOWN = 0;
 11879  002C04  0E00               	movlw	0
 11880  002C06  6E3F               	movwf	_lastSttDOWN,c
 11881                           
 11882                           ;ButtonController.h: 37: delay_ms(200);
 11883  002C08  0E00               	movlw	0
 11884  002C0A  0100               	movlb	0	; () banked
 11885  002C0C  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11886  002C0E  0EC8               	movlw	200
 11887  002C10  6F75               	movwf	delay_ms@del& (0+255),b
 11888  002C12  ECF9  F026         	call	_delay_ms	;wreg free
 11889                           
 11890                           ;ButtonController.h: 38: }else if(PORTAbits.RA3 && !lastSttDOWN) {
 11891  002C16  D03A               	goto	l9524
 11892  002C18                     l674:
 11893  002C18  A680               	btfss	3968,3,c	;volatile
 11894  002C1A  D012               	goto	l9502
 11895  002C1C  503F               	movf	_lastSttDOWN,w,c
 11896  002C1E  A4D8               	btfss	status,2,c
 11897  002C20  D00F               	goto	l9502
 11898                           
 11899                           ;ButtonController.h: 39: lastSttDOWN = 1;
 11900  002C22  0E01               	movlw	1
 11901  002C24  6E3F               	movwf	_lastSttDOWN,c
 11902                           
 11903                           ;ButtonController.h: 40: if(holdDOWNcont < 10)
 11904  002C26  0E0A               	movlw	10
 11905  002C28  6047               	cpfslt	_holdDOWNcont,c
 11906  002C2A  D002               	goto	l9500
 11907                           
 11908                           ;ButtonController.h: 41: pressDOWN();
 11909  002C2C  EC12  F021         	call	_pressDOWN	;wreg free
 11910  002C30                     l9500:
 11911                           
 11912                           ;ButtonController.h: 42: delay_ms(50);
 11913  002C30  0E00               	movlw	0
 11914  002C32  0100               	movlb	0	; () banked
 11915  002C34  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11916  002C36  0E32               	movlw	50
 11917  002C38  6F75               	movwf	delay_ms@del& (0+255),b
 11918  002C3A  ECF9  F026         	call	_delay_ms	;wreg free
 11919                           
 11920                           ;ButtonController.h: 43: }else if(PORTAbits.RA3 == lastSttDOWN) {
 11921  002C3E  D026               	goto	l9524
 11922  002C40                     l9502:
 11923  002C40  A680               	btfss	3968,3,c	;volatile
 11924  002C42  D002               	goto	u11960
 11925  002C44  0E01               	movlw	1
 11926  002C46  D001               	goto	u11966
 11927  002C48                     u11960:
 11928  002C48  0E00               	movlw	0
 11929  002C4A                     u11966:
 11930  002C4A  183F               	xorwf	_lastSttDOWN,w,c
 11931  002C4C  A4D8               	btfss	status,2,c
 11932  002C4E  D01E               	goto	l9524
 11933                           
 11934                           ;ButtonController.h: 44: if(PORTAbits.RA3) {
 11935  002C50  A680               	btfss	3968,3,c	;volatile
 11936  002C52  D005               	goto	l9510
 11937                           
 11938                           ;ButtonController.h: 45: holdDOWNcont = 0;
 11939  002C54  0E00               	movlw	0
 11940  002C56  6E47               	movwf	_holdDOWNcont,c
 11941                           
 11942                           ;ButtonController.h: 46: releaseDOWN();
 11943  002C58  ECFC  F028         	call	_releaseDOWN	;wreg free
 11944                           
 11945                           ;ButtonController.h: 47: }
 11946  002C5C  D017               	goto	l9524
 11947  002C5E                     l9510:
 11948                           
 11949                           ;ButtonController.h: 48: else {
 11950                           ;ButtonController.h: 49: if(!DOWNsecurLock)
 11951  002C5E  0101               	movlb	1	; () banked
 11952  002C60  5144               	movf	_DOWNsecurLock& (0+255),w,b
 11953  002C62  B4D8               	btfsc	status,2,c
 11954                           
 11955                           ; BSR set to: 1
 11956                           ;ButtonController.h: 50: holdDOWNcont++;
 11957  002C64  2A47               	incf	_holdDOWNcont,f,c
 11958                           
 11959                           ; BSR set to: 1
 11960                           ;ButtonController.h: 51: if(holdDOWNcont > 9) {
 11961                           
 11962                           ; BSR set to: 1
 11963  002C66  0E09               	movlw	9
 11964  002C68  6447               	cpfsgt	_holdDOWNcont,c
 11965  002C6A  D009               	goto	l9522
 11966                           
 11967                           ; BSR set to: 1
 11968                           ;ButtonController.h: 52: if(holdDOWNcont < 26)
 11969  002C6C  0E1A               	movlw	26
 11970  002C6E  6047               	cpfslt	_holdDOWNcont,c
 11971  002C70  D003               	goto	l9520
 11972                           
 11973                           ; BSR set to: 1
 11974                           ;ButtonController.h: 53: longPressDOWN();
 11975  002C72  EC02  F029         	call	_longPressDOWN	;wreg free
 11976  002C76  D003               	goto	l9522
 11977  002C78                     l9520:
 11978                           
 11979                           ;ButtonController.h: 54: else
 11980                           ;ButtonController.h: 55: DOWNsecurLock = 1;
 11981  002C78  0E01               	movlw	1
 11982  002C7A  0101               	movlb	1	; () banked
 11983  002C7C  6F44               	movwf	_DOWNsecurLock& (0+255),b
 11984  002C7E                     l9522:
 11985                           
 11986                           ;ButtonController.h: 56: }
 11987                           ;ButtonController.h: 57: delay_ms(200);
 11988  002C7E  0E00               	movlw	0
 11989  002C80  0100               	movlb	0	; () banked
 11990  002C82  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11991  002C84  0EC8               	movlw	200
 11992  002C86  6F75               	movwf	delay_ms@del& (0+255),b
 11993  002C88  ECF9  F026         	call	_delay_ms	;wreg free
 11994  002C8C                     l9524:
 11995                           
 11996                           ;ButtonController.h: 58: }
 11997                           ;ButtonController.h: 59: }
 11998                           ;ButtonController.h: 60: if(!PORTAbits.RA4 && lastSttRETRO) {
 11999  002C8C  B880               	btfsc	3968,4,c	;volatile
 12000  002C8E  D00D               	goto	l686
 12001  002C90  5041               	movf	_lastSttRETRO,w,c
 12002  002C92  B4D8               	btfsc	status,2,c
 12003  002C94  D00A               	goto	l686
 12004                           
 12005                           ;ButtonController.h: 61: lastSttRETRO = 0;
 12006  002C96  0E00               	movlw	0
 12007  002C98  6E41               	movwf	_lastSttRETRO,c
 12008                           
 12009                           ;ButtonController.h: 62: delay_ms(200);
 12010  002C9A  0E00               	movlw	0
 12011  002C9C  0100               	movlb	0	; () banked
 12012  002C9E  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12013  002CA0  0EC8               	movlw	200
 12014  002CA2  6F75               	movwf	delay_ms@del& (0+255),b
 12015  002CA4  ECF9  F026         	call	_delay_ms	;wreg free
 12016                           
 12017                           ;ButtonController.h: 63: }else if(PORTAbits.RA4 && !lastSttRETRO) {
 12018  002CA8  D03A               	goto	l9562
 12019  002CAA                     l686:
 12020  002CAA  A880               	btfss	3968,4,c	;volatile
 12021  002CAC  D012               	goto	l9540
 12022  002CAE  5041               	movf	_lastSttRETRO,w,c
 12023  002CB0  A4D8               	btfss	status,2,c
 12024  002CB2  D00F               	goto	l9540
 12025                           
 12026                           ;ButtonController.h: 64: lastSttRETRO = 1;
 12027  002CB4  0E01               	movlw	1
 12028  002CB6  6E41               	movwf	_lastSttRETRO,c
 12029                           
 12030                           ;ButtonController.h: 65: if(holdRETROcont < 10)
 12031  002CB8  0E0A               	movlw	10
 12032  002CBA  6048               	cpfslt	_holdRETROcont,c
 12033  002CBC  D002               	goto	l689
 12034                           
 12035                           ;ButtonController.h: 66: pressRETRO();
 12036  002CBE  ECD6  F026         	call	_pressRETRO	;wreg free
 12037  002CC2                     l689:
 12038                           
 12039                           ;ButtonController.h: 67: delay_ms(50);
 12040  002CC2  0E00               	movlw	0
 12041  002CC4  0100               	movlb	0	; () banked
 12042  002CC6  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12043  002CC8  0E32               	movlw	50
 12044  002CCA  6F75               	movwf	delay_ms@del& (0+255),b
 12045  002CCC  ECF9  F026         	call	_delay_ms	;wreg free
 12046                           
 12047                           ;ButtonController.h: 68: }else if(PORTAbits.RA4 == lastSttRETRO) {
 12048  002CD0  D026               	goto	l9562
 12049  002CD2                     l9540:
 12050  002CD2  A880               	btfss	3968,4,c	;volatile
 12051  002CD4  D002               	goto	u12070
 12052  002CD6  0E01               	movlw	1
 12053  002CD8  D001               	goto	u12076
 12054  002CDA                     u12070:
 12055  002CDA  0E00               	movlw	0
 12056  002CDC                     u12076:
 12057  002CDC  1841               	xorwf	_lastSttRETRO,w,c
 12058  002CDE  A4D8               	btfss	status,2,c
 12059  002CE0  D01E               	goto	l9562
 12060                           
 12061                           ;ButtonController.h: 69: if(PORTAbits.RA4) {
 12062  002CE2  A880               	btfss	3968,4,c	;volatile
 12063  002CE4  D005               	goto	l9548
 12064                           
 12065                           ;ButtonController.h: 70: holdRETROcont = 0;
 12066  002CE6  0E00               	movlw	0
 12067  002CE8  6E48               	movwf	_holdRETROcont,c
 12068                           
 12069                           ;ButtonController.h: 71: releaseRETRO();
 12070  002CEA  ECE8  F028         	call	_releaseRETRO	;wreg free
 12071                           
 12072                           ;ButtonController.h: 72: }
 12073  002CEE  D017               	goto	l9562
 12074  002CF0                     l9548:
 12075                           
 12076                           ;ButtonController.h: 73: else {
 12077                           ;ButtonController.h: 74: if(!RETROsecurLock)
 12078  002CF0  0101               	movlb	1	; () banked
 12079  002CF2  5148               	movf	_RETROsecurLock& (0+255),w,b
 12080  002CF4  B4D8               	btfsc	status,2,c
 12081                           
 12082                           ; BSR set to: 1
 12083                           ;ButtonController.h: 75: holdRETROcont++;
 12084  002CF6  2A48               	incf	_holdRETROcont,f,c
 12085                           
 12086                           ; BSR set to: 1
 12087                           ;ButtonController.h: 76: if(holdRETROcont > 9) {
 12088                           
 12089                           ; BSR set to: 1
 12090  002CF8  0E09               	movlw	9
 12091  002CFA  6448               	cpfsgt	_holdRETROcont,c
 12092  002CFC  D009               	goto	l9560
 12093                           
 12094                           ; BSR set to: 1
 12095                           ;ButtonController.h: 77: if(holdRETROcont < 26)
 12096  002CFE  0E1A               	movlw	26
 12097  002D00  6048               	cpfslt	_holdRETROcont,c
 12098  002D02  D003               	goto	l9558
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;ButtonController.h: 78: longPressRETRO();
 12102  002D04  EC5E  F027         	call	_longPressRETRO	;wreg free
 12103  002D08  D003               	goto	l9560
 12104  002D0A                     l9558:
 12105                           
 12106                           ;ButtonController.h: 79: else
 12107                           ;ButtonController.h: 80: RETROsecurLock = 1;
 12108  002D0A  0E01               	movlw	1
 12109  002D0C  0101               	movlb	1	; () banked
 12110  002D0E  6F48               	movwf	_RETROsecurLock& (0+255),b
 12111  002D10                     l9560:
 12112                           
 12113                           ;ButtonController.h: 81: }
 12114                           ;ButtonController.h: 82: delay_ms(200);
 12115  002D10  0E00               	movlw	0
 12116  002D12  0100               	movlb	0	; () banked
 12117  002D14  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12118  002D16  0EC8               	movlw	200
 12119  002D18  6F75               	movwf	delay_ms@del& (0+255),b
 12120  002D1A  ECF9  F026         	call	_delay_ms	;wreg free
 12121  002D1E                     l9562:
 12122                           
 12123                           ;ButtonController.h: 83: }
 12124                           ;ButtonController.h: 84: }
 12125                           ;ButtonController.h: 85: if(!PORTAbits.RA5 && lastSttENTER) {
 12126  002D1E  BA80               	btfsc	3968,5,c	;volatile
 12127  002D20  D00D               	goto	l698
 12128  002D22  5040               	movf	_lastSttENTER,w,c
 12129  002D24  B4D8               	btfsc	status,2,c
 12130  002D26  D00A               	goto	l698
 12131                           
 12132                           ;ButtonController.h: 86: lastSttENTER = 0;
 12133  002D28  0E00               	movlw	0
 12134  002D2A  6E40               	movwf	_lastSttENTER,c
 12135                           
 12136                           ;ButtonController.h: 87: delay_ms(200);
 12137  002D2C  0E00               	movlw	0
 12138  002D2E  0100               	movlb	0	; () banked
 12139  002D30  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12140  002D32  0EC8               	movlw	200
 12141  002D34  6F75               	movwf	delay_ms@del& (0+255),b
 12142  002D36  ECF9  F026         	call	_delay_ms	;wreg free
 12143                           
 12144                           ;ButtonController.h: 88: }else if(PORTAbits.RA5 && !lastSttENTER) {
 12145  002D3A  0012               	return	
 12146  002D3C                     l698:
 12147  002D3C  AA80               	btfss	3968,5,c	;volatile
 12148  002D3E  D013               	goto	l9580
 12149  002D40  5040               	movf	_lastSttENTER,w,c
 12150  002D42  A4D8               	btfss	status,2,c
 12151  002D44  D010               	goto	l9580
 12152                           
 12153                           ;ButtonController.h: 89: lastSttENTER = 1;
 12154  002D46  0E01               	movlw	1
 12155  002D48  6E40               	movwf	_lastSttENTER,c
 12156                           
 12157                           ;ButtonController.h: 90: if(holdENTERcont < 10)
 12158  002D4A  0E0A               	movlw	10
 12159  002D4C  0100               	movlb	0	; () banked
 12160  002D4E  61D2               	cpfslt	_holdENTERcont& (0+255),b
 12161  002D50  D002               	goto	l9578
 12162                           
 12163                           ; BSR set to: 0
 12164                           ;ButtonController.h: 91: pressENTER();
 12165  002D52  EC4C  F01B         	call	_pressENTER	;wreg free
 12166  002D56                     l9578:
 12167                           
 12168                           ;ButtonController.h: 92: delay_ms(50);
 12169  002D56  0E00               	movlw	0
 12170  002D58  0100               	movlb	0	; () banked
 12171  002D5A  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12172  002D5C  0E32               	movlw	50
 12173  002D5E  6F75               	movwf	delay_ms@del& (0+255),b
 12174  002D60  ECF9  F026         	call	_delay_ms	;wreg free
 12175                           
 12176                           ;ButtonController.h: 93: }else if(PORTAbits.RA5 == lastSttENTER) {
 12177  002D64  0012               	return	
 12178  002D66                     l9580:
 12179  002D66  AA80               	btfss	3968,5,c	;volatile
 12180  002D68  D002               	goto	u12180
 12181  002D6A  0E01               	movlw	1
 12182  002D6C  D001               	goto	u12186
 12183  002D6E                     u12180:
 12184  002D6E  0E00               	movlw	0
 12185  002D70                     u12186:
 12186  002D70  1840               	xorwf	_lastSttENTER,w,c
 12187  002D72  A4D8               	btfss	status,2,c
 12188  002D74  0012               	return	
 12189                           
 12190                           ;ButtonController.h: 94: if(PORTAbits.RA5) {
 12191  002D76  AA80               	btfss	3968,5,c	;volatile
 12192  002D78  D006               	goto	l9588
 12193                           
 12194                           ;ButtonController.h: 95: holdENTERcont = 0;
 12195  002D7A  0E00               	movlw	0
 12196  002D7C  0100               	movlb	0	; () banked
 12197  002D7E  6FD2               	movwf	_holdENTERcont& (0+255),b
 12198                           
 12199                           ; BSR set to: 0
 12200                           ;ButtonController.h: 96: releaseENTER();
 12201  002D80  ECEF  F028         	call	_releaseENTER	;wreg free
 12202                           
 12203                           ;ButtonController.h: 97: }
 12204  002D84  0012               	return	
 12205  002D86                     l9588:
 12206                           
 12207                           ;ButtonController.h: 98: else {
 12208                           ;ButtonController.h: 99: if(!ENTERsecurLock)
 12209  002D86  0101               	movlb	1	; () banked
 12210  002D88  5146               	movf	_ENTERsecurLock& (0+255),w,b
 12211  002D8A  A4D8               	btfss	status,2,c
 12212  002D8C  D002               	goto	l9592
 12213                           
 12214                           ; BSR set to: 1
 12215                           ;ButtonController.h: 100: holdENTERcont++;
 12216  002D8E  0100               	movlb	0	; () banked
 12217  002D90  2BD2               	incf	_holdENTERcont& (0+255),f,b
 12218  002D92                     l9592:
 12219                           
 12220                           ;ButtonController.h: 101: if(holdENTERcont > 9) {
 12221  002D92  0E09               	movlw	9
 12222  002D94  0100               	movlb	0	; () banked
 12223  002D96  65D2               	cpfsgt	_holdENTERcont& (0+255),b
 12224  002D98  D00A               	goto	l9600
 12225                           
 12226                           ; BSR set to: 0
 12227                           ;ButtonController.h: 102: if(holdENTERcont < 26)
 12228  002D9A  0E1A               	movlw	26
 12229  002D9C  0100               	movlb	0	; () banked
 12230  002D9E  61D2               	cpfslt	_holdENTERcont& (0+255),b
 12231  002DA0  D003               	goto	l9598
 12232                           
 12233                           ; BSR set to: 0
 12234                           ;ButtonController.h: 103: longPressENTER();
 12235  002DA2  ECFC  F025         	call	_longPressENTER	;wreg free
 12236  002DA6  D003               	goto	l9600
 12237  002DA8                     l9598:
 12238                           
 12239                           ;ButtonController.h: 104: else
 12240                           ;ButtonController.h: 105: ENTERsecurLock = 1;
 12241  002DA8  0E01               	movlw	1
 12242  002DAA  0101               	movlb	1	; () banked
 12243  002DAC  6F46               	movwf	_ENTERsecurLock& (0+255),b
 12244  002DAE                     l9600:
 12245                           
 12246                           ;ButtonController.h: 106: }
 12247                           ;ButtonController.h: 107: delay_ms(200);
 12248  002DAE  0E00               	movlw	0
 12249  002DB0  0100               	movlb	0	; () banked
 12250  002DB2  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12251  002DB4  0EC8               	movlw	200
 12252  002DB6  6F75               	movwf	delay_ms@del& (0+255),b
 12253  002DB8  ECF9  F026         	call	_delay_ms	;wreg free
 12254  002DBC  0012               	return	
 12255  002DBE                     __end_of_buttonChecking:
 12256                           	opt stack 0
 12257                           tblptru	equ	0xFF8
 12258                           tblptrh	equ	0xFF7
 12259                           tblptrl	equ	0xFF6
 12260                           tablat	equ	0xFF5
 12261                           prodh	equ	0xFF4
 12262                           prodl	equ	0xFF3
 12263                           intcon	equ	0xFF2
 12264                           postinc0	equ	0xFEE
 12265                           wreg	equ	0xFE8
 12266                           postdec1	equ	0xFE5
 12267                           fsr1l	equ	0xFE1
 12268                           indf2	equ	0xFDF
 12269                           postinc2	equ	0xFDE
 12270                           postdec2	equ	0xFDD
 12271                           fsr2h	equ	0xFDA
 12272                           fsr2l	equ	0xFD9
 12273                           status	equ	0xFD8
 12274                           
 12275 ;; *************** function _releaseUP *****************
 12276 ;; Defined at:
 12277 ;;		line 160 in file "source/DisplayProtocol.h"
 12278 ;; Parameters:    Size  Location     Type
 12279 ;;		None
 12280 ;; Auto vars:     Size  Location     Type
 12281 ;;		None
 12282 ;; Return value:  Size  Location     Type
 12283 ;;                  1    wreg      void 
 12284 ;; Registers used:
 12285 ;;		wreg, status,2
 12286 ;; Tracked objects:
 12287 ;;		On entry : 0/0
 12288 ;;		On exit  : 0/0
 12289 ;;		Unchanged: 0/0
 12290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12291 ;;      Params:         0       0       0       0       0       0       0
 12292 ;;      Locals:         0       0       0       0       0       0       0
 12293 ;;      Temps:          0       0       0       0       0       0       0
 12294 ;;      Totals:         0       0       0       0       0       0       0
 12295 ;;Total ram usage:        0 bytes
 12296 ;; Hardware stack levels used:    1
 12297 ;; Hardware stack levels required when called:    8
 12298 ;; This function calls:
 12299 ;;		Nothing
 12300 ;; This function is called by:
 12301 ;;		_buttonChecking
 12302 ;; This function uses a non-reentrant model
 12303 ;;
 12304                           
 12305                           	psect	text39
 12306  0051EC                     __ptext39:
 12307                           	opt stack 0
 12308  0051EC                     _releaseUP:
 12309                           	opt stack 21
 12310                           
 12311                           ;DisplayProtocol.h: 161: UPisLP = 0;
 12312                           
 12313                           ;incstack = 0
 12314  0051EC  0E00               	movlw	0
 12315  0051EE  6E46               	movwf	_UPisLP,c
 12316                           
 12317                           ;DisplayProtocol.h: 162: UPsecurLock = 0;
 12318  0051F0  0E00               	movlw	0
 12319  0051F2  0101               	movlb	1	; () banked
 12320  0051F4  6F49               	movwf	_UPsecurLock& (0+255),b
 12321                           
 12322                           ; BSR set to: 1
 12323  0051F6  0012               	return		;funcret
 12324  0051F8                     __end_of_releaseUP:
 12325                           	opt stack 0
 12326                           tblptru	equ	0xFF8
 12327                           tblptrh	equ	0xFF7
 12328                           tblptrl	equ	0xFF6
 12329                           tablat	equ	0xFF5
 12330                           prodh	equ	0xFF4
 12331                           prodl	equ	0xFF3
 12332                           intcon	equ	0xFF2
 12333                           postinc0	equ	0xFEE
 12334                           wreg	equ	0xFE8
 12335                           postdec1	equ	0xFE5
 12336                           fsr1l	equ	0xFE1
 12337                           indf2	equ	0xFDF
 12338                           postinc2	equ	0xFDE
 12339                           postdec2	equ	0xFDD
 12340                           fsr2h	equ	0xFDA
 12341                           fsr2l	equ	0xFD9
 12342                           status	equ	0xFD8
 12343                           
 12344 ;; *************** function _releaseRETRO *****************
 12345 ;; Defined at:
 12346 ;;		line 243 in file "source/DisplayProtocol.h"
 12347 ;; Parameters:    Size  Location     Type
 12348 ;;		None
 12349 ;; Auto vars:     Size  Location     Type
 12350 ;;		None
 12351 ;; Return value:  Size  Location     Type
 12352 ;;                  1    wreg      void 
 12353 ;; Registers used:
 12354 ;;		wreg, status,2
 12355 ;; Tracked objects:
 12356 ;;		On entry : 0/0
 12357 ;;		On exit  : 0/0
 12358 ;;		Unchanged: 0/0
 12359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12360 ;;      Params:         0       0       0       0       0       0       0
 12361 ;;      Locals:         0       0       0       0       0       0       0
 12362 ;;      Temps:          0       0       0       0       0       0       0
 12363 ;;      Totals:         0       0       0       0       0       0       0
 12364 ;;Total ram usage:        0 bytes
 12365 ;; Hardware stack levels used:    1
 12366 ;; Hardware stack levels required when called:    8
 12367 ;; This function calls:
 12368 ;;		Nothing
 12369 ;; This function is called by:
 12370 ;;		_buttonChecking
 12371 ;; This function uses a non-reentrant model
 12372 ;;
 12373                           
 12374                           	psect	text40
 12375  0051D0                     __ptext40:
 12376                           	opt stack 0
 12377  0051D0                     _releaseRETRO:
 12378                           	opt stack 21
 12379                           
 12380                           ;DisplayProtocol.h: 244: RETROisLP = 0;
 12381                           
 12382                           ; BSR set to: 1
 12383                           ;incstack = 0
 12384  0051D0  0E00               	movlw	0
 12385  0051D2  0101               	movlb	1	; () banked
 12386  0051D4  6F47               	movwf	_RETROisLP& (0+255),b
 12387                           
 12388                           ;DisplayProtocol.h: 245: RETROsecurLock = 0;
 12389  0051D6  0E00               	movlw	0
 12390  0051D8  0101               	movlb	1	; () banked
 12391  0051DA  6F48               	movwf	_RETROsecurLock& (0+255),b
 12392                           
 12393                           ; BSR set to: 1
 12394  0051DC  0012               	return		;funcret
 12395  0051DE                     __end_of_releaseRETRO:
 12396                           	opt stack 0
 12397                           tblptru	equ	0xFF8
 12398                           tblptrh	equ	0xFF7
 12399                           tblptrl	equ	0xFF6
 12400                           tablat	equ	0xFF5
 12401                           prodh	equ	0xFF4
 12402                           prodl	equ	0xFF3
 12403                           intcon	equ	0xFF2
 12404                           postinc0	equ	0xFEE
 12405                           wreg	equ	0xFE8
 12406                           postdec1	equ	0xFE5
 12407                           fsr1l	equ	0xFE1
 12408                           indf2	equ	0xFDF
 12409                           postinc2	equ	0xFDE
 12410                           postdec2	equ	0xFDD
 12411                           fsr2h	equ	0xFDA
 12412                           fsr2l	equ	0xFD9
 12413                           status	equ	0xFD8
 12414                           
 12415 ;; *************** function _releaseENTER *****************
 12416 ;; Defined at:
 12417 ;;		line 334 in file "source/DisplayProtocol.h"
 12418 ;; Parameters:    Size  Location     Type
 12419 ;;		None
 12420 ;; Auto vars:     Size  Location     Type
 12421 ;;		None
 12422 ;; Return value:  Size  Location     Type
 12423 ;;                  1    wreg      void 
 12424 ;; Registers used:
 12425 ;;		wreg, status,2
 12426 ;; Tracked objects:
 12427 ;;		On entry : 0/0
 12428 ;;		On exit  : 0/0
 12429 ;;		Unchanged: 0/0
 12430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12431 ;;      Params:         0       0       0       0       0       0       0
 12432 ;;      Locals:         0       0       0       0       0       0       0
 12433 ;;      Temps:          0       0       0       0       0       0       0
 12434 ;;      Totals:         0       0       0       0       0       0       0
 12435 ;;Total ram usage:        0 bytes
 12436 ;; Hardware stack levels used:    1
 12437 ;; Hardware stack levels required when called:    8
 12438 ;; This function calls:
 12439 ;;		Nothing
 12440 ;; This function is called by:
 12441 ;;		_buttonChecking
 12442 ;; This function uses a non-reentrant model
 12443 ;;
 12444                           
 12445                           	psect	text41
 12446  0051DE                     __ptext41:
 12447                           	opt stack 0
 12448  0051DE                     _releaseENTER:
 12449                           	opt stack 21
 12450                           
 12451                           ;DisplayProtocol.h: 335: ENTERisLP = 0;
 12452                           
 12453                           ; BSR set to: 1
 12454                           ;incstack = 0
 12455  0051DE  0E00               	movlw	0
 12456  0051E0  0101               	movlb	1	; () banked
 12457  0051E2  6F45               	movwf	_ENTERisLP& (0+255),b
 12458                           
 12459                           ;DisplayProtocol.h: 336: ENTERsecurLock = 0;
 12460  0051E4  0E00               	movlw	0
 12461  0051E6  0101               	movlb	1	; () banked
 12462  0051E8  6F46               	movwf	_ENTERsecurLock& (0+255),b
 12463                           
 12464                           ; BSR set to: 1
 12465  0051EA  0012               	return		;funcret
 12466  0051EC                     __end_of_releaseENTER:
 12467                           	opt stack 0
 12468                           tblptru	equ	0xFF8
 12469                           tblptrh	equ	0xFF7
 12470                           tblptrl	equ	0xFF6
 12471                           tablat	equ	0xFF5
 12472                           prodh	equ	0xFF4
 12473                           prodl	equ	0xFF3
 12474                           intcon	equ	0xFF2
 12475                           postinc0	equ	0xFEE
 12476                           wreg	equ	0xFE8
 12477                           postdec1	equ	0xFE5
 12478                           fsr1l	equ	0xFE1
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           postdec2	equ	0xFDD
 12482                           fsr2h	equ	0xFDA
 12483                           fsr2l	equ	0xFD9
 12484                           status	equ	0xFD8
 12485                           
 12486 ;; *************** function _releaseDOWN *****************
 12487 ;; Defined at:
 12488 ;;		line 215 in file "source/DisplayProtocol.h"
 12489 ;; Parameters:    Size  Location     Type
 12490 ;;		None
 12491 ;; Auto vars:     Size  Location     Type
 12492 ;;		None
 12493 ;; Return value:  Size  Location     Type
 12494 ;;                  1    wreg      void 
 12495 ;; Registers used:
 12496 ;;		wreg, status,2
 12497 ;; Tracked objects:
 12498 ;;		On entry : 0/0
 12499 ;;		On exit  : 0/0
 12500 ;;		Unchanged: 0/0
 12501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12502 ;;      Params:         0       0       0       0       0       0       0
 12503 ;;      Locals:         0       0       0       0       0       0       0
 12504 ;;      Temps:          0       0       0       0       0       0       0
 12505 ;;      Totals:         0       0       0       0       0       0       0
 12506 ;;Total ram usage:        0 bytes
 12507 ;; Hardware stack levels used:    1
 12508 ;; Hardware stack levels required when called:    8
 12509 ;; This function calls:
 12510 ;;		Nothing
 12511 ;; This function is called by:
 12512 ;;		_buttonChecking
 12513 ;; This function uses a non-reentrant model
 12514 ;;
 12515                           
 12516                           	psect	text42
 12517  0051F8                     __ptext42:
 12518                           	opt stack 0
 12519  0051F8                     _releaseDOWN:
 12520                           	opt stack 21
 12521                           
 12522                           ;DisplayProtocol.h: 216: DOWNisLP = 0;
 12523                           
 12524                           ; BSR set to: 1
 12525                           ;incstack = 0
 12526  0051F8  0E00               	movlw	0
 12527  0051FA  6E45               	movwf	_DOWNisLP,c
 12528                           
 12529                           ;DisplayProtocol.h: 217: DOWNsecurLock = 0;
 12530  0051FC  0E00               	movlw	0
 12531  0051FE  0101               	movlb	1	; () banked
 12532  005200  6F44               	movwf	_DOWNsecurLock& (0+255),b
 12533                           
 12534                           ; BSR set to: 1
 12535  005202  0012               	return		;funcret
 12536  005204                     __end_of_releaseDOWN:
 12537                           	opt stack 0
 12538                           tblptru	equ	0xFF8
 12539                           tblptrh	equ	0xFF7
 12540                           tblptrl	equ	0xFF6
 12541                           tablat	equ	0xFF5
 12542                           prodh	equ	0xFF4
 12543                           prodl	equ	0xFF3
 12544                           intcon	equ	0xFF2
 12545                           postinc0	equ	0xFEE
 12546                           wreg	equ	0xFE8
 12547                           postdec1	equ	0xFE5
 12548                           fsr1l	equ	0xFE1
 12549                           indf2	equ	0xFDF
 12550                           postinc2	equ	0xFDE
 12551                           postdec2	equ	0xFDD
 12552                           fsr2h	equ	0xFDA
 12553                           fsr2l	equ	0xFD9
 12554                           status	equ	0xFD8
 12555                           
 12556 ;; *************** function _pressUP *****************
 12557 ;; Defined at:
 12558 ;;		line 101 in file "source/DisplayProtocol.h"
 12559 ;; Parameters:    Size  Location     Type
 12560 ;;		None
 12561 ;; Auto vars:     Size  Location     Type
 12562 ;;		None
 12563 ;; Return value:  Size  Location     Type
 12564 ;;                  1    wreg      void 
 12565 ;; Registers used:
 12566 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12567 ;; Tracked objects:
 12568 ;;		On entry : 0/0
 12569 ;;		On exit  : 0/0
 12570 ;;		Unchanged: 0/0
 12571 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12572 ;;      Params:         0       0       0       0       0       0       0
 12573 ;;      Locals:         0       0       0       0       0       0       0
 12574 ;;      Temps:          0       1       0       0       0       0       0
 12575 ;;      Totals:         0       1       0       0       0       0       0
 12576 ;;Total ram usage:        1 bytes
 12577 ;; Hardware stack levels used:    1
 12578 ;; Hardware stack levels required when called:    8
 12579 ;; This function calls:
 12580 ;;		Nothing
 12581 ;; This function is called by:
 12582 ;;		_buttonChecking
 12583 ;; This function uses a non-reentrant model
 12584 ;;
 12585                           
 12586                           	psect	text43
 12587  003F0C                     __ptext43:
 12588                           	opt stack 0
 12589  003F0C                     _pressUP:
 12590                           	opt stack 21
 12591                           
 12592                           ;DisplayProtocol.h: 102: if (actualScreen == 0 || actualScreen == 4) {
 12593                           
 12594                           ; BSR set to: 1
 12595                           ;incstack = 0
 12596  003F0C  0100               	movlb	0	; () banked
 12597  003F0E  51D1               	movf	_actualScreen& (0+255),w,b
 12598  003F10  B4D8               	btfsc	status,2,c
 12599  003F12  D005               	goto	l6510
 12600                           
 12601                           ; BSR set to: 0
 12602  003F14  0E04               	movlw	4
 12603  003F16  0100               	movlb	0	; () banked
 12604  003F18  19D1               	xorwf	_actualScreen& (0+255),w,b
 12605  003F1A  A4D8               	btfss	status,2,c
 12606  003F1C  D00C               	goto	l6516
 12607  003F1E                     l6510:
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;DisplayProtocol.h: 103: menuSection++;
 12611  003F1E  0100               	movlb	0	; () banked
 12612  003F20  2BD4               	incf	_menuSection& (0+255),f,b
 12613                           
 12614                           ; BSR set to: 0
 12615                           ;DisplayProtocol.h: 104: if (menuSection > 6)
 12616  003F22  0100               	movlb	0	; () banked
 12617  003F24  51D4               	movf	_menuSection& (0+255),w,b
 12618  003F26  0A80               	xorlw	128
 12619  003F28  0F79               	addlw	-135
 12620  003F2A  A0D8               	btfss	status,0,c
 12621  003F2C  0012               	return	
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;DisplayProtocol.h: 105: menuSection = 0;
 12625  003F2E  0E00               	movlw	0
 12626  003F30  0100               	movlb	0	; () banked
 12627  003F32  6FD4               	movwf	_menuSection& (0+255),b
 12628                           
 12629                           ; BSR set to: 0
 12630                           ;DisplayProtocol.h: 106: } else if (actualScreen == 1) {
 12631  003F34  0012               	return	
 12632  003F36                     l6516:
 12633                           
 12634                           ; BSR set to: 0
 12635  003F36  0100               	movlb	0	; () banked
 12636  003F38  05D1               	decf	_actualScreen& (0+255),w,b
 12637  003F3A  A4D8               	btfss	status,2,c
 12638  003F3C  D024               	goto	l6522
 12639                           
 12640                           ; BSR set to: 0
 12641                           ;DisplayProtocol.h: 107: introducido[passSection]++;
 12642  003F3E  0100               	movlb	0	; () banked
 12643  003F40  51D5               	movf	_passSection& (0+255),w,b
 12644  003F42  0D01               	mullw	1
 12645  003F44  0E35               	movlw	low _introducido
 12646  003F46  24F3               	addwf	prodl,w,c
 12647  003F48  6ED9               	movwf	fsr2l,c
 12648  003F4A  0E01               	movlw	high _introducido
 12649  003F4C  20F4               	addwfc	prodh,w,c
 12650  003F4E  6EDA               	movwf	fsr2h,c
 12651  003F50  2ADF               	incf	indf2,f,c
 12652                           
 12653                           ;DisplayProtocol.h: 108: if (introducido[passSection] > 9)
 12654  003F52  0100               	movlb	0	; () banked
 12655  003F54  51D5               	movf	_passSection& (0+255),w,b
 12656  003F56  0D01               	mullw	1
 12657  003F58  0E35               	movlw	low _introducido
 12658  003F5A  24F3               	addwf	prodl,w,c
 12659  003F5C  6ED9               	movwf	fsr2l,c
 12660  003F5E  0E01               	movlw	high _introducido
 12661  003F60  20F4               	addwfc	prodh,w,c
 12662  003F62  6EDA               	movwf	fsr2h,c
 12663  003F64  50DF               	movf	indf2,w,c
 12664  003F66  0A80               	xorlw	128
 12665  003F68  0F76               	addlw	-138
 12666  003F6A  A0D8               	btfss	status,0,c
 12667  003F6C  0012               	return	
 12668                           
 12669                           ; BSR set to: 0
 12670                           ;DisplayProtocol.h: 109: introducido[passSection] = 0;
 12671  003F6E  0100               	movlb	0	; () banked
 12672  003F70  51D5               	movf	_passSection& (0+255),w,b
 12673  003F72  0D01               	mullw	1
 12674  003F74  0E35               	movlw	low _introducido
 12675  003F76  24F3               	addwf	prodl,w,c
 12676  003F78  6ED9               	movwf	fsr2l,c
 12677  003F7A  0E01               	movlw	high _introducido
 12678  003F7C  20F4               	addwfc	prodh,w,c
 12679  003F7E  6EDA               	movwf	fsr2h,c
 12680  003F80  0E00               	movlw	0
 12681  003F82  6EDF               	movwf	indf2,c
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;DisplayProtocol.h: 110: } else if (actualScreen == 2 || actualScreen == 3
 12685  003F84  0012               	return	
 12686  003F86                     l6522:
 12687                           
 12688                           ; BSR set to: 0
 12689                           ;DisplayProtocol.h: 111: || actualScreen == 10) {
 12690  003F86  0E02               	movlw	2
 12691  003F88  0100               	movlb	0	; () banked
 12692  003F8A  19D1               	xorwf	_actualScreen& (0+255),w,b
 12693  003F8C  B4D8               	btfsc	status,2,c
 12694  003F8E  D00A               	goto	l6528
 12695                           
 12696                           ; BSR set to: 0
 12697  003F90  0E03               	movlw	3
 12698  003F92  0100               	movlb	0	; () banked
 12699  003F94  19D1               	xorwf	_actualScreen& (0+255),w,b
 12700  003F96  B4D8               	btfsc	status,2,c
 12701  003F98  D005               	goto	l6528
 12702                           
 12703                           ; BSR set to: 0
 12704  003F9A  0E0A               	movlw	10
 12705  003F9C  0100               	movlb	0	; () banked
 12706  003F9E  19D1               	xorwf	_actualScreen& (0+255),w,b
 12707  003FA0  A4D8               	btfss	status,2,c
 12708  003FA2  D011               	goto	l6534
 12709  003FA4                     l6528:
 12710                           
 12711                           ; BSR set to: 0
 12712                           ;DisplayProtocol.h: 112: selSN = !selSN;
 12713  003FA4  0100               	movlb	0	; () banked
 12714  003FA6  51D7               	movf	_selSN& (0+255),w,b
 12715  003FA8  A4D8               	btfss	status,2,c
 12716  003FAA  D002               	goto	u7520
 12717  003FAC  0E01               	movlw	1
 12718  003FAE  D001               	goto	u7530
 12719  003FB0                     u7520:
 12720  003FB0  0E00               	movlw	0
 12721  003FB2                     u7530:
 12722  003FB2  0100               	movlb	0	; () banked
 12723  003FB4  6FD7               	movwf	_selSN& (0+255),b
 12724                           
 12725                           ; BSR set to: 0
 12726                           ;DisplayProtocol.h: 113: if(selSN > 1)
 12727  003FB6  0E01               	movlw	1
 12728  003FB8  0100               	movlb	0	; () banked
 12729  003FBA  65D7               	cpfsgt	_selSN& (0+255),b
 12730  003FBC  0012               	return	
 12731                           
 12732                           ; BSR set to: 0
 12733                           ;DisplayProtocol.h: 114: selSN = 0;
 12734  003FBE  0E00               	movlw	0
 12735  003FC0  0100               	movlb	0	; () banked
 12736  003FC2  6FD7               	movwf	_selSN& (0+255),b
 12737                           
 12738                           ; BSR set to: 0
 12739                           ;DisplayProtocol.h: 115: }else if(actualScreen == 5) {
 12740  003FC4  0012               	return	
 12741  003FC6                     l6534:
 12742                           
 12743                           ; BSR set to: 0
 12744  003FC6  0E05               	movlw	5
 12745  003FC8  0100               	movlb	0	; () banked
 12746  003FCA  19D1               	xorwf	_actualScreen& (0+255),w,b
 12747  003FCC  A4D8               	btfss	status,2,c
 12748  003FCE  0012               	return	
 12749  003FD0  D00C               	goto	l6546
 12750  003FD2                     l6538:
 12751                           
 12752                           ; BSR set to: 0
 12753                           ;DisplayProtocol.h: 120: selKMT++;
 12754  003FD2  0100               	movlb	0	; () banked
 12755  003FD4  2BD6               	incf	_selKMT& (0+255),f,b
 12756                           
 12757                           ; BSR set to: 0
 12758                           ;DisplayProtocol.h: 121: if(selKMT > 2)
 12759  003FD6  0100               	movlb	0	; () banked
 12760  003FD8  51D6               	movf	_selKMT& (0+255),w,b
 12761  003FDA  0A80               	xorlw	128
 12762  003FDC  0F7D               	addlw	-131
 12763  003FDE  A0D8               	btfss	status,0,c
 12764  003FE0  0012               	return	
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;DisplayProtocol.h: 122: selKMT = 0;
 12768  003FE2  0E00               	movlw	0
 12769  003FE4  0100               	movlb	0	; () banked
 12770  003FE6  6FD6               	movwf	_selKMT& (0+255),b
 12771                           
 12772                           ; BSR set to: 0
 12773                           ;DisplayProtocol.h: 139: }
 12774                           ;DisplayProtocol.h: 140: }
 12775                           
 12776                           ; BSR set to: 0
 12777                           ;DisplayProtocol.h: 138: break;
 12778                           
 12779                           ;DisplayProtocol.h: 136: }case (6): {
 12780                           
 12781                           ; BSR set to: 0
 12782                           ;DisplayProtocol.h: 135: break;
 12783                           
 12784                           ;DisplayProtocol.h: 133: }case (5): {
 12785                           
 12786                           ; BSR set to: 0
 12787                           ;DisplayProtocol.h: 132: break;
 12788                           
 12789                           ;DisplayProtocol.h: 130: }case (4): {
 12790                           
 12791                           ; BSR set to: 0
 12792                           ;DisplayProtocol.h: 129: break;
 12793                           
 12794                           ;DisplayProtocol.h: 127: }case (3): {
 12795                           
 12796                           ; BSR set to: 0
 12797                           ;DisplayProtocol.h: 126: break;
 12798                           
 12799                           ;DisplayProtocol.h: 124: }case (2): {
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;DisplayProtocol.h: 123: break;
 12803  003FE8  0012               	return	
 12804  003FEA                     l6546:
 12805                           
 12806                           ; BSR set to: 0
 12807  003FEA  0100               	movlb	0	; () banked
 12808  003FEC  51D4               	movf	_menuSection& (0+255),w,b
 12809                           
 12810                           ; Switch size 1, requested type "space"
 12811                           ; Number of cases is 7, Range of values is 0 to 6
 12812                           ; switch strategies available:
 12813                           ; Name         Instructions Cycles
 12814                           ; simple_byte           22    12 (average)
 12815                           ;	Chosen strategy is simple_byte
 12816  003FEE  0A00               	xorlw	0	; case 0
 12817  003FF0  B4D8               	btfsc	status,2,c
 12818  003FF2  0012               	return	
 12819  003FF4  0A01               	xorlw	1	; case 1
 12820  003FF6  B4D8               	btfsc	status,2,c
 12821  003FF8  D7EC               	goto	l6538
 12822  003FFA  0A03               	xorlw	3	; case 2
 12823  003FFC  B4D8               	btfsc	status,2,c
 12824  003FFE  0012               	return	
 12825  004000  0A01               	xorlw	1	; case 3
 12826  004002  B4D8               	btfsc	status,2,c
 12827  004004  0012               	return	
 12828  004006  0A07               	xorlw	7	; case 4
 12829  004008  B4D8               	btfsc	status,2,c
 12830  00400A  0012               	return	
 12831  00400C  0A01               	xorlw	1	; case 5
 12832  00400E  B4D8               	btfsc	status,2,c
 12833  004010  0012               	return	
 12834  004012  0A03               	xorlw	3	; case 6
 12835                           
 12836                           ; BSR set to: 0
 12837                           
 12838                           ; BSR set to: 0
 12839                           
 12840                           ; BSR set to: 0
 12841                           
 12842                           ; BSR set to: 0
 12843  004014  0012               	return	
 12844  004016                     __end_of_pressUP:
 12845                           	opt stack 0
 12846                           tblptru	equ	0xFF8
 12847                           tblptrh	equ	0xFF7
 12848                           tblptrl	equ	0xFF6
 12849                           tablat	equ	0xFF5
 12850                           prodh	equ	0xFF4
 12851                           prodl	equ	0xFF3
 12852                           intcon	equ	0xFF2
 12853                           postinc0	equ	0xFEE
 12854                           wreg	equ	0xFE8
 12855                           postdec1	equ	0xFE5
 12856                           fsr1l	equ	0xFE1
 12857                           indf2	equ	0xFDF
 12858                           postinc2	equ	0xFDE
 12859                           postdec2	equ	0xFDD
 12860                           fsr2h	equ	0xFDA
 12861                           fsr2l	equ	0xFD9
 12862                           status	equ	0xFD8
 12863                           
 12864 ;; *************** function _pressRETRO *****************
 12865 ;; Defined at:
 12866 ;;		line 220 in file "source/DisplayProtocol.h"
 12867 ;; Parameters:    Size  Location     Type
 12868 ;;		None
 12869 ;; Auto vars:     Size  Location     Type
 12870 ;;		None
 12871 ;; Return value:  Size  Location     Type
 12872 ;;                  1    wreg      void 
 12873 ;; Registers used:
 12874 ;;		wreg, status,2, status,0
 12875 ;; Tracked objects:
 12876 ;;		On entry : 0/0
 12877 ;;		On exit  : 0/0
 12878 ;;		Unchanged: 0/0
 12879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12880 ;;      Params:         0       0       0       0       0       0       0
 12881 ;;      Locals:         0       0       0       0       0       0       0
 12882 ;;      Temps:          0       0       0       0       0       0       0
 12883 ;;      Totals:         0       0       0       0       0       0       0
 12884 ;;Total ram usage:        0 bytes
 12885 ;; Hardware stack levels used:    1
 12886 ;; Hardware stack levels required when called:    8
 12887 ;; This function calls:
 12888 ;;		Nothing
 12889 ;; This function is called by:
 12890 ;;		_buttonChecking
 12891 ;; This function uses a non-reentrant model
 12892 ;;
 12893                           
 12894                           	psect	text44
 12895  004DAC                     __ptext44:
 12896                           	opt stack 0
 12897  004DAC                     _pressRETRO:
 12898                           	opt stack 21
 12899                           
 12900                           ;DisplayProtocol.h: 221: if (actualScreen == 1) {
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;incstack = 0
 12904  004DAC  0100               	movlb	0	; () banked
 12905  004DAE  05D1               	decf	_actualScreen& (0+255),w,b
 12906  004DB0  A4D8               	btfss	status,2,c
 12907  004DB2  D004               	goto	l6620
 12908                           
 12909                           ; BSR set to: 0
 12910                           ;DisplayProtocol.h: 222: actualScreen = 0;
 12911  004DB4  0E00               	movlw	0
 12912  004DB6  0100               	movlb	0	; () banked
 12913  004DB8  6FD1               	movwf	_actualScreen& (0+255),b
 12914                           
 12915                           ;DisplayProtocol.h: 223: }else if (actualScreen == 2 || actualScreen == 3
 12916  004DBA  0012               	return	
 12917  004DBC                     l6620:
 12918                           
 12919                           ; BSR set to: 0
 12920                           ;DisplayProtocol.h: 224: || actualScreen == 10)
 12921  004DBC  0E02               	movlw	2
 12922  004DBE  0100               	movlb	0	; () banked
 12923  004DC0  19D1               	xorwf	_actualScreen& (0+255),w,b
 12924  004DC2  B4D8               	btfsc	status,2,c
 12925  004DC4  D00A               	goto	l548
 12926                           
 12927                           ; BSR set to: 0
 12928  004DC6  0E03               	movlw	3
 12929  004DC8  0100               	movlb	0	; () banked
 12930  004DCA  19D1               	xorwf	_actualScreen& (0+255),w,b
 12931  004DCC  B4D8               	btfsc	status,2,c
 12932  004DCE  D005               	goto	l548
 12933                           
 12934                           ; BSR set to: 0
 12935  004DD0  0E0A               	movlw	10
 12936  004DD2  0100               	movlb	0	; () banked
 12937  004DD4  19D1               	xorwf	_actualScreen& (0+255),w,b
 12938  004DD6  A4D8               	btfss	status,2,c
 12939  004DD8  D003               	goto	l6626
 12940  004DDA                     l548:
 12941                           
 12942                           ; BSR set to: 0
 12943                           ;DisplayProtocol.h: 225: actualScreen = tempLastScreen;
 12944  004DDA  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 12945  004DDE  0012               	return	
 12946  004DE0                     l6626:
 12947                           
 12948                           ; BSR set to: 0
 12949                           ;DisplayProtocol.h: 226: else if(actualScreen == 5)
 12950  004DE0  0E05               	movlw	5
 12951  004DE2  0100               	movlb	0	; () banked
 12952  004DE4  19D1               	xorwf	_actualScreen& (0+255),w,b
 12953  004DE6  A4D8               	btfss	status,2,c
 12954  004DE8  0012               	return	
 12955                           
 12956                           ; BSR set to: 0
 12957                           ;DisplayProtocol.h: 227: actualScreen = 4;
 12958  004DEA  0E04               	movlw	4
 12959  004DEC  0100               	movlb	0	; () banked
 12960  004DEE  6FD1               	movwf	_actualScreen& (0+255),b
 12961                           
 12962                           ; BSR set to: 0
 12963                           
 12964                           ; BSR set to: 0
 12965  004DF0  0012               	return	
 12966  004DF2                     __end_of_pressRETRO:
 12967                           	opt stack 0
 12968                           tblptru	equ	0xFF8
 12969                           tblptrh	equ	0xFF7
 12970                           tblptrl	equ	0xFF6
 12971                           tablat	equ	0xFF5
 12972                           prodh	equ	0xFF4
 12973                           prodl	equ	0xFF3
 12974                           intcon	equ	0xFF2
 12975                           postinc0	equ	0xFEE
 12976                           wreg	equ	0xFE8
 12977                           postdec1	equ	0xFE5
 12978                           fsr1l	equ	0xFE1
 12979                           indf2	equ	0xFDF
 12980                           postinc2	equ	0xFDE
 12981                           postdec2	equ	0xFDD
 12982                           fsr2h	equ	0xFDA
 12983                           fsr2l	equ	0xFD9
 12984                           status	equ	0xFD8
 12985                           
 12986 ;; *************** function _pressENTER *****************
 12987 ;; Defined at:
 12988 ;;		line 248 in file "source/DisplayProtocol.h"
 12989 ;; Parameters:    Size  Location     Type
 12990 ;;		None
 12991 ;; Auto vars:     Size  Location     Type
 12992 ;;		None
 12993 ;; Return value:  Size  Location     Type
 12994 ;;                  1    wreg      void 
 12995 ;; Registers used:
 12996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12997 ;; Tracked objects:
 12998 ;;		On entry : 0/0
 12999 ;;		On exit  : 0/0
 13000 ;;		Unchanged: 0/0
 13001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13002 ;;      Params:         0       0       0       0       0       0       0
 13003 ;;      Locals:         0       0       0       0       0       0       0
 13004 ;;      Temps:          0       0       0       0       0       0       0
 13005 ;;      Totals:         0       0       0       0       0       0       0
 13006 ;;Total ram usage:        0 bytes
 13007 ;; Hardware stack levels used:    1
 13008 ;; Hardware stack levels required when called:   12
 13009 ;; This function calls:
 13010 ;;		_checkPass
 13011 ;;		_confirmEdition
 13012 ;; This function is called by:
 13013 ;;		_buttonChecking
 13014 ;; This function uses a non-reentrant model
 13015 ;;
 13016                           
 13017                           	psect	text45
 13018  003698                     __ptext45:
 13019                           	opt stack 0
 13020  003698                     _pressENTER:
 13021                           	opt stack 17
 13022                           
 13023                           ;DisplayProtocol.h: 249: if (actualScreen == 1) {
 13024                           
 13025                           ; BSR set to: 0
 13026                           ;incstack = 0
 13027  003698  0100               	movlb	0	; () banked
 13028  00369A  05D1               	decf	_actualScreen& (0+255),w,b
 13029  00369C  A4D8               	btfss	status,2,c
 13030  00369E  D018               	goto	l9214
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;DisplayProtocol.h: 250: passSection++;
 13034  0036A0  0100               	movlb	0	; () banked
 13035  0036A2  2BD5               	incf	_passSection& (0+255),f,b
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;DisplayProtocol.h: 251: if (passSection > 3) {
 13039  0036A4  0100               	movlb	0	; () banked
 13040  0036A6  51D5               	movf	_passSection& (0+255),w,b
 13041  0036A8  0A80               	xorlw	128
 13042  0036AA  0F7C               	addlw	-132
 13043  0036AC  A0D8               	btfss	status,0,c
 13044  0036AE  0012               	return	
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;DisplayProtocol.h: 252: passSection = 0;
 13048  0036B0  0E00               	movlw	0
 13049  0036B2  0100               	movlb	0	; () banked
 13050  0036B4  6FD5               	movwf	_passSection& (0+255),b
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;DisplayProtocol.h: 253: if (checkPass())
 13054  0036B6  ECC7  F024         	call	_checkPass	;wreg free
 13055  0036BA  0900               	iorlw	0
 13056  0036BC  B4D8               	btfsc	status,2,c
 13057  0036BE  D004               	goto	l9212
 13058                           
 13059                           ;DisplayProtocol.h: 254: actualScreen = 8;
 13060  0036C0  0E08               	movlw	8
 13061  0036C2  0100               	movlb	0	; () banked
 13062  0036C4  6FD1               	movwf	_actualScreen& (0+255),b
 13063  0036C6  0012               	return	
 13064  0036C8                     l9212:
 13065                           
 13066                           ;DisplayProtocol.h: 255: else
 13067                           ;DisplayProtocol.h: 256: actualScreen = 7;
 13068  0036C8  0E07               	movlw	7
 13069  0036CA  0100               	movlb	0	; () banked
 13070  0036CC  6FD1               	movwf	_actualScreen& (0+255),b
 13071                           
 13072                           ; BSR set to: 0
 13073                           ;DisplayProtocol.h: 257: }
 13074                           ;DisplayProtocol.h: 258: }else if(actualScreen == 4) {
 13075                           
 13076                           ; BSR set to: 0
 13077  0036CE  0012               	return	
 13078  0036D0                     l9214:
 13079                           
 13080                           ; BSR set to: 0
 13081  0036D0  0E04               	movlw	4
 13082  0036D2  0100               	movlb	0	; () banked
 13083  0036D4  19D1               	xorwf	_actualScreen& (0+255),w,b
 13084  0036D6  B4D8               	btfsc	status,2,c
 13085  0036D8  D01D               	goto	l9228
 13086  0036DA  D032               	goto	l9230
 13087  0036DC                     l572:
 13088                           
 13089                           ; BSR set to: 0
 13090                           ;DisplayProtocol.h: 261: tempLastScreen = actualScreen;
 13091  0036DC  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13092                           
 13093                           ; BSR set to: 0
 13094                           ;DisplayProtocol.h: 262: if(ProcessStarted) {
 13095  0036E0  0100               	movlb	0	; () banked
 13096  0036E2  51D0               	movf	_ProcessStarted& (0+255),w,b
 13097  0036E4  B4D8               	btfsc	status,2,c
 13098  0036E6  D007               	goto	l9222
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;DisplayProtocol.h: 263: actualScreen = 3;
 13102  0036E8  0E03               	movlw	3
 13103  0036EA  0100               	movlb	0	; () banked
 13104  0036EC  6FD1               	movwf	_actualScreen& (0+255),b
 13105                           
 13106                           ;DisplayProtocol.h: 264: selSN = 0;
 13107  0036EE  0E00               	movlw	0
 13108  0036F0  0100               	movlb	0	; () banked
 13109  0036F2  6FD7               	movwf	_selSN& (0+255),b
 13110                           
 13111                           ;DisplayProtocol.h: 265: }else {
 13112  0036F4  0012               	return	
 13113  0036F6                     l9222:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;DisplayProtocol.h: 266: actualScreen = 2;
 13117  0036F6  0E02               	movlw	2
 13118  0036F8  0100               	movlb	0	; () banked
 13119  0036FA  6FD1               	movwf	_actualScreen& (0+255),b
 13120                           
 13121                           ;DisplayProtocol.h: 267: selSN = 1;
 13122  0036FC  0E01               	movlw	1
 13123  0036FE  0100               	movlb	0	; () banked
 13124  003700  6FD7               	movwf	_selSN& (0+255),b
 13125                           
 13126                           ; BSR set to: 0
 13127                           ;DisplayProtocol.h: 268: }
 13128                           ;DisplayProtocol.h: 269: break;
 13129  003702  0012               	return	
 13130  003704                     l576:
 13131                           
 13132                           ; BSR set to: 0
 13133                           ;DisplayProtocol.h: 271: tempLastScreen = actualScreen;
 13134  003704  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13135                           
 13136                           ;DisplayProtocol.h: 272: selKMT = tVarProceso;
 13137  003708  C0E3  F0D6         	movff	_tVarProceso,_selKMT
 13138                           
 13139                           ; BSR set to: 0
 13140                           ;DisplayProtocol.h: 273: actualScreen = 5;
 13141  00370C  0E05               	movlw	5
 13142  00370E  0100               	movlb	0	; () banked
 13143  003710  6FD1               	movwf	_actualScreen& (0+255),b
 13144                           
 13145                           ; BSR set to: 0
 13146                           ;DisplayProtocol.h: 290: }
 13147                           ;DisplayProtocol.h: 291: }
 13148                           
 13149                           ; BSR set to: 0
 13150                           ;DisplayProtocol.h: 289: break;
 13151                           
 13152                           ;DisplayProtocol.h: 287: }case (6): {
 13153                           
 13154                           ; BSR set to: 0
 13155                           ;DisplayProtocol.h: 286: break;
 13156                           
 13157                           ;DisplayProtocol.h: 284: }case (5): {
 13158                           
 13159                           ; BSR set to: 0
 13160                           ;DisplayProtocol.h: 283: break;
 13161                           
 13162                           ;DisplayProtocol.h: 281: }case (4): {
 13163                           
 13164                           ; BSR set to: 0
 13165                           ;DisplayProtocol.h: 280: break;
 13166                           
 13167                           ;DisplayProtocol.h: 278: }case (3): {
 13168                           
 13169                           ; BSR set to: 0
 13170                           ;DisplayProtocol.h: 277: break;
 13171                           
 13172                           ;DisplayProtocol.h: 275: }case (2): {
 13173                           
 13174                           ;DisplayProtocol.h: 274: break;
 13175  003712  0012               	return	
 13176  003714                     l9228:
 13177                           
 13178                           ; BSR set to: 0
 13179  003714  0100               	movlb	0	; () banked
 13180  003716  51D4               	movf	_menuSection& (0+255),w,b
 13181                           
 13182                           ; Switch size 1, requested type "space"
 13183                           ; Number of cases is 7, Range of values is 0 to 6
 13184                           ; switch strategies available:
 13185                           ; Name         Instructions Cycles
 13186                           ; simple_byte           22    12 (average)
 13187                           ;	Chosen strategy is simple_byte
 13188  003718  0A00               	xorlw	0	; case 0
 13189  00371A  B4D8               	btfsc	status,2,c
 13190  00371C  D7DF               	goto	l572
 13191  00371E  0A01               	xorlw	1	; case 1
 13192  003720  B4D8               	btfsc	status,2,c
 13193  003722  D7F0               	goto	l576
 13194  003724  0A03               	xorlw	3	; case 2
 13195  003726  B4D8               	btfsc	status,2,c
 13196  003728  0012               	return	
 13197  00372A  0A01               	xorlw	1	; case 3
 13198  00372C  B4D8               	btfsc	status,2,c
 13199  00372E  0012               	return	
 13200  003730  0A07               	xorlw	7	; case 4
 13201  003732  B4D8               	btfsc	status,2,c
 13202  003734  0012               	return	
 13203  003736  0A01               	xorlw	1	; case 5
 13204  003738  B4D8               	btfsc	status,2,c
 13205  00373A  0012               	return	
 13206  00373C  0A03               	xorlw	3	; case 6
 13207                           
 13208                           ; BSR set to: 0
 13209                           ;DisplayProtocol.h: 292: }else if(actualScreen == 7)
 13210  00373E  0012               	return	
 13211  003740                     l9230:
 13212                           
 13213                           ; BSR set to: 0
 13214  003740  0E07               	movlw	7
 13215  003742  0100               	movlb	0	; () banked
 13216  003744  19D1               	xorwf	_actualScreen& (0+255),w,b
 13217  003746  A4D8               	btfss	status,2,c
 13218  003748  D004               	goto	l9234
 13219                           
 13220                           ; BSR set to: 0
 13221                           ;DisplayProtocol.h: 293: actualScreen = 1;
 13222  00374A  0E01               	movlw	1
 13223  00374C  0100               	movlb	0	; () banked
 13224  00374E  6FD1               	movwf	_actualScreen& (0+255),b
 13225  003750  0012               	return	
 13226  003752                     l9234:
 13227                           
 13228                           ; BSR set to: 0
 13229                           ;DisplayProtocol.h: 294: else if(actualScreen == 6) {
 13230  003752  0E06               	movlw	6
 13231  003754  0100               	movlb	0	; () banked
 13232  003756  19D1               	xorwf	_actualScreen& (0+255),w,b
 13233  003758  B4D8               	btfsc	status,2,c
 13234  00375A  0012               	return	
 13235                           
 13236                           ; BSR set to: 0
 13237                           
 13238                           ; BSR set to: 0
 13239                           
 13240                           ; BSR set to: 0
 13241                           ;DisplayProtocol.h: 296: }else if(actualScreen == 5)
 13242  00375C  0E05               	movlw	5
 13243  00375E  0100               	movlb	0	; () banked
 13244  003760  19D1               	xorwf	_actualScreen& (0+255),w,b
 13245  003762  A4D8               	btfss	status,2,c
 13246  003764  D00A               	goto	l9242
 13247                           
 13248                           ; BSR set to: 0
 13249                           ;DisplayProtocol.h: 297: confirmEdition(!ProcessStarted);
 13250  003766  0100               	movlb	0	; () banked
 13251  003768  51D0               	movf	_ProcessStarted& (0+255),w,b
 13252  00376A  A4D8               	btfss	status,2,c
 13253  00376C  D002               	goto	u11620
 13254  00376E  0E01               	movlw	1
 13255  003770  D001               	goto	u11630
 13256  003772                     u11620:
 13257  003772  0E00               	movlw	0
 13258  003774                     u11630:
 13259  003774  EC47  F01D         	call	_confirmEdition
 13260  003778  0012               	return	
 13261  00377A                     l9242:
 13262                           
 13263                           ;DisplayProtocol.h: 298: else if(actualScreen == 2) {
 13264  00377A  0E02               	movlw	2
 13265  00377C  0100               	movlb	0	; () banked
 13266  00377E  19D1               	xorwf	_actualScreen& (0+255),w,b
 13267  003780  A4D8               	btfss	status,2,c
 13268  003782  D00C               	goto	l9248
 13269                           
 13270                           ; BSR set to: 0
 13271                           ;DisplayProtocol.h: 299: ProcessStarted = !selSN;
 13272  003784  0100               	movlb	0	; () banked
 13273  003786  51D7               	movf	_selSN& (0+255),w,b
 13274  003788  A4D8               	btfss	status,2,c
 13275  00378A  D002               	goto	u11650
 13276  00378C  0E01               	movlw	1
 13277  00378E  D001               	goto	u11660
 13278  003790                     u11650:
 13279  003790  0E00               	movlw	0
 13280  003792                     u11660:
 13281  003792  0100               	movlb	0	; () banked
 13282  003794  6FD0               	movwf	_ProcessStarted& (0+255),b
 13283                           
 13284                           ; BSR set to: 0
 13285                           ;DisplayProtocol.h: 300: actualScreen = tempLastScreen;
 13286  003796  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13287                           
 13288                           ;DisplayProtocol.h: 301: }else if(actualScreen == 3) {
 13289  00379A  0012               	return	
 13290  00379C                     l9248:
 13291                           
 13292                           ; BSR set to: 0
 13293  00379C  0E03               	movlw	3
 13294  00379E  0100               	movlb	0	; () banked
 13295  0037A0  19D1               	xorwf	_actualScreen& (0+255),w,b
 13296  0037A2  A4D8               	btfss	status,2,c
 13297  0037A4  D005               	goto	l9252
 13298                           
 13299                           ; BSR set to: 0
 13300                           ;DisplayProtocol.h: 302: ProcessStarted = selSN;
 13301  0037A6  C0D7  F0D0         	movff	_selSN,_ProcessStarted
 13302                           
 13303                           ;DisplayProtocol.h: 303: actualScreen = tempLastScreen;
 13304  0037AA  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13305                           
 13306                           ;DisplayProtocol.h: 304: }else if(actualScreen == 10) {
 13307  0037AE  0012               	return	
 13308  0037B0                     l9252:
 13309                           
 13310                           ; BSR set to: 0
 13311  0037B0  0E0A               	movlw	10
 13312  0037B2  0100               	movlb	0	; () banked
 13313  0037B4  19D1               	xorwf	_actualScreen& (0+255),w,b
 13314  0037B6  A4D8               	btfss	status,2,c
 13315  0037B8  D00B               	goto	l9258
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;DisplayProtocol.h: 305: if(!selSN)
 13319  0037BA  0100               	movlb	0	; () banked
 13320  0037BC  51D7               	movf	_selSN& (0+255),w,b
 13321  0037BE  A4D8               	btfss	status,2,c
 13322  0037C0  D004               	goto	l594
 13323                           
 13324                           ; BSR set to: 0
 13325                           ;DisplayProtocol.h: 306: confirmEdition(1);
 13326  0037C2  0E01               	movlw	1
 13327  0037C4  EC47  F01D         	call	_confirmEdition
 13328  0037C8  0012               	return	
 13329  0037CA                     l594:
 13330                           
 13331                           ; BSR set to: 0
 13332                           ;DisplayProtocol.h: 307: else
 13333                           ;DisplayProtocol.h: 308: actualScreen = tempLastScreen;
 13334  0037CA  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13335                           
 13336                           ; BSR set to: 0
 13337                           ;DisplayProtocol.h: 309: }else if(actualScreen == 8)
 13338  0037CE  0012               	return	
 13339  0037D0                     l9258:
 13340                           
 13341                           ; BSR set to: 0
 13342  0037D0  0E08               	movlw	8
 13343  0037D2  0100               	movlb	0	; () banked
 13344  0037D4  19D1               	xorwf	_actualScreen& (0+255),w,b
 13345  0037D6  A4D8               	btfss	status,2,c
 13346  0037D8  D004               	goto	l9262
 13347                           
 13348                           ; BSR set to: 0
 13349                           ;DisplayProtocol.h: 310: actualScreen = 4;
 13350  0037DA  0E04               	movlw	4
 13351  0037DC  0100               	movlb	0	; () banked
 13352  0037DE  6FD1               	movwf	_actualScreen& (0+255),b
 13353  0037E0  0012               	return	
 13354  0037E2                     l9262:
 13355                           
 13356                           ; BSR set to: 0
 13357                           ;DisplayProtocol.h: 311: else if(actualScreen == 9)
 13358  0037E2  0E09               	movlw	9
 13359  0037E4  0100               	movlb	0	; () banked
 13360  0037E6  19D1               	xorwf	_actualScreen& (0+255),w,b
 13361  0037E8  A4D8               	btfss	status,2,c
 13362  0037EA  0012               	return	
 13363                           
 13364                           ; BSR set to: 0
 13365                           ;DisplayProtocol.h: 312: actualScreen = 0;
 13366  0037EC  0E00               	movlw	0
 13367  0037EE  0100               	movlb	0	; () banked
 13368  0037F0  6FD1               	movwf	_actualScreen& (0+255),b
 13369                           
 13370                           ; BSR set to: 0
 13371                           
 13372                           ; BSR set to: 0
 13373                           
 13374                           ; BSR set to: 0
 13375                           
 13376                           ; BSR set to: 0
 13377                           
 13378                           ; BSR set to: 0
 13379                           
 13380                           ; BSR set to: 0
 13381                           
 13382                           ; BSR set to: 0
 13383                           
 13384                           ; BSR set to: 0
 13385                           
 13386                           ; BSR set to: 0
 13387  0037F2  0012               	return	
 13388  0037F4                     __end_of_pressENTER:
 13389                           	opt stack 0
 13390                           tblptru	equ	0xFF8
 13391                           tblptrh	equ	0xFF7
 13392                           tblptrl	equ	0xFF6
 13393                           tablat	equ	0xFF5
 13394                           prodh	equ	0xFF4
 13395                           prodl	equ	0xFF3
 13396                           intcon	equ	0xFF2
 13397                           postinc0	equ	0xFEE
 13398                           wreg	equ	0xFE8
 13399                           postdec1	equ	0xFE5
 13400                           fsr1l	equ	0xFE1
 13401                           indf2	equ	0xFDF
 13402                           postinc2	equ	0xFDE
 13403                           postdec2	equ	0xFDD
 13404                           fsr2h	equ	0xFDA
 13405                           fsr2l	equ	0xFD9
 13406                           status	equ	0xFD8
 13407                           
 13408 ;; *************** function _confirmEdition *****************
 13409 ;; Defined at:
 13410 ;;		line 27 in file "source/DisplayProtocol.h"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  yes             1    wreg     unsigned char 
 13413 ;; Auto vars:     Size  Location     Type
 13414 ;;  yes             1   64[BANK0 ] unsigned char 
 13415 ;; Return value:  Size  Location     Type
 13416 ;;                  1    wreg      void 
 13417 ;; Registers used:
 13418 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13419 ;; Tracked objects:
 13420 ;;		On entry : 0/0
 13421 ;;		On exit  : 0/0
 13422 ;;		Unchanged: 0/0
 13423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13424 ;;      Params:         0       0       0       0       0       0       0
 13425 ;;      Locals:         0       1       0       0       0       0       0
 13426 ;;      Temps:          0       0       0       0       0       0       0
 13427 ;;      Totals:         0       1       0       0       0       0       0
 13428 ;;Total ram usage:        1 bytes
 13429 ;; Hardware stack levels used:    1
 13430 ;; Hardware stack levels required when called:   11
 13431 ;; This function calls:
 13432 ;;		_saveSysParams
 13433 ;; This function is called by:
 13434 ;;		_pressENTER
 13435 ;; This function uses a non-reentrant model
 13436 ;;
 13437                           
 13438                           	psect	text46
 13439  003A8E                     __ptext46:
 13440                           	opt stack 0
 13441  003A8E                     _confirmEdition:
 13442                           	opt stack 17
 13443                           
 13444                           ;incstack = 0
 13445                           ;confirmEdition@yes stored from wreg
 13446  003A8E  0100               	movlb	0	; () banked
 13447  003A90  6FA0               	movwf	confirmEdition@yes& (0+255),b
 13448                           
 13449                           ;DisplayProtocol.h: 28: switch (menuSection) {
 13450  003A92  D07A               	goto	l8922
 13451  003A94                     l8870:
 13452                           
 13453                           ;DisplayProtocol.h: 32: if(yes) {
 13454  003A94  0100               	movlb	0	; () banked
 13455  003A96  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13456  003A98  0100               	movlb	0	; () banked
 13457  003A9A  B4D8               	btfsc	status,2,c
 13458  003A9C  D008               	goto	l448
 13459                           
 13460                           ; BSR set to: 0
 13461                           ;DisplayProtocol.h: 33: tVarProceso = selKMT;
 13462  003A9E  C0D6  F0E3         	movff	_selKMT,_tVarProceso
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;DisplayProtocol.h: 34: actualScreen = 4;
 13466  003AA2  0E04               	movlw	4
 13467  003AA4  0100               	movlb	0	; () banked
 13468  003AA6  6FD1               	movwf	_actualScreen& (0+255),b
 13469                           
 13470                           ; BSR set to: 0
 13471                           ;DisplayProtocol.h: 35: saveSysParams();
 13472  003AA8  ECDC  F01D         	call	_saveSysParams	;wreg free
 13473                           
 13474                           ;DisplayProtocol.h: 36: }else {
 13475  003AAC  0012               	return	
 13476  003AAE                     l448:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;DisplayProtocol.h: 37: tempLastScreen = actualScreen;
 13480  003AAE  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;DisplayProtocol.h: 38: actualScreen = 10;
 13484  003AB2  0E0A               	movlw	10
 13485  003AB4  0100               	movlb	0	; () banked
 13486  003AB6  6FD1               	movwf	_actualScreen& (0+255),b
 13487                           
 13488                           ;DisplayProtocol.h: 39: selSN = 1;
 13489  003AB8  0E01               	movlw	1
 13490  003ABA  0100               	movlb	0	; () banked
 13491  003ABC  6FD7               	movwf	_selSN& (0+255),b
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;DisplayProtocol.h: 40: }
 13495                           ;DisplayProtocol.h: 41: break;
 13496  003ABE  0012               	return	
 13497  003AC0                     l8880:
 13498                           
 13499                           ; BSR set to: 0
 13500                           ;DisplayProtocol.h: 43: if(yes) {
 13501  003AC0  0100               	movlb	0	; () banked
 13502  003AC2  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13503  003AC4  0100               	movlb	0	; () banked
 13504  003AC6  B4D8               	btfsc	status,2,c
 13505  003AC8  D006               	goto	l451
 13506                           
 13507                           ; BSR set to: 0
 13508                           ;DisplayProtocol.h: 45: actualScreen = 4;
 13509  003ACA  0E04               	movlw	4
 13510  003ACC  0100               	movlb	0	; () banked
 13511  003ACE  6FD1               	movwf	_actualScreen& (0+255),b
 13512                           
 13513                           ; BSR set to: 0
 13514                           ;DisplayProtocol.h: 46: saveSysParams();
 13515  003AD0  ECDC  F01D         	call	_saveSysParams	;wreg free
 13516                           
 13517                           ;DisplayProtocol.h: 47: }else {
 13518  003AD4  0012               	return	
 13519  003AD6                     l451:
 13520                           
 13521                           ; BSR set to: 0
 13522                           ;DisplayProtocol.h: 48: tempLastScreen = actualScreen;
 13523  003AD6  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13524                           
 13525                           ; BSR set to: 0
 13526                           ;DisplayProtocol.h: 49: actualScreen = 10;
 13527  003ADA  0E0A               	movlw	10
 13528  003ADC  0100               	movlb	0	; () banked
 13529  003ADE  6FD1               	movwf	_actualScreen& (0+255),b
 13530                           
 13531                           ;DisplayProtocol.h: 50: selSN = 1;
 13532  003AE0  0E01               	movlw	1
 13533  003AE2  0100               	movlb	0	; () banked
 13534  003AE4  6FD7               	movwf	_selSN& (0+255),b
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;DisplayProtocol.h: 51: }
 13538                           ;DisplayProtocol.h: 52: break;
 13539  003AE6  0012               	return	
 13540  003AE8                     l8888:
 13541                           
 13542                           ; BSR set to: 0
 13543                           ;DisplayProtocol.h: 54: if(yes) {
 13544  003AE8  0100               	movlb	0	; () banked
 13545  003AEA  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13546  003AEC  0100               	movlb	0	; () banked
 13547  003AEE  B4D8               	btfsc	status,2,c
 13548  003AF0  D006               	goto	l454
 13549                           
 13550                           ; BSR set to: 0
 13551                           ;DisplayProtocol.h: 56: actualScreen = 4;
 13552  003AF2  0E04               	movlw	4
 13553  003AF4  0100               	movlb	0	; () banked
 13554  003AF6  6FD1               	movwf	_actualScreen& (0+255),b
 13555                           
 13556                           ; BSR set to: 0
 13557                           ;DisplayProtocol.h: 57: saveSysParams();
 13558  003AF8  ECDC  F01D         	call	_saveSysParams	;wreg free
 13559                           
 13560                           ;DisplayProtocol.h: 58: }else {
 13561  003AFC  0012               	return	
 13562  003AFE                     l454:
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;DisplayProtocol.h: 59: tempLastScreen = actualScreen;
 13566  003AFE  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13567                           
 13568                           ; BSR set to: 0
 13569                           ;DisplayProtocol.h: 60: actualScreen = 10;
 13570  003B02  0E0A               	movlw	10
 13571  003B04  0100               	movlb	0	; () banked
 13572  003B06  6FD1               	movwf	_actualScreen& (0+255),b
 13573                           
 13574                           ;DisplayProtocol.h: 61: selSN = 1;
 13575  003B08  0E01               	movlw	1
 13576  003B0A  0100               	movlb	0	; () banked
 13577  003B0C  6FD7               	movwf	_selSN& (0+255),b
 13578                           
 13579                           ; BSR set to: 0
 13580                           ;DisplayProtocol.h: 62: }
 13581                           ;DisplayProtocol.h: 63: break;
 13582  003B0E  0012               	return	
 13583  003B10                     l8896:
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;DisplayProtocol.h: 65: if(yes) {
 13587  003B10  0100               	movlb	0	; () banked
 13588  003B12  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13589  003B14  0100               	movlb	0	; () banked
 13590  003B16  B4D8               	btfsc	status,2,c
 13591  003B18  D006               	goto	l457
 13592                           
 13593                           ; BSR set to: 0
 13594                           ;DisplayProtocol.h: 67: actualScreen = 4;
 13595  003B1A  0E04               	movlw	4
 13596  003B1C  0100               	movlb	0	; () banked
 13597  003B1E  6FD1               	movwf	_actualScreen& (0+255),b
 13598                           
 13599                           ; BSR set to: 0
 13600                           ;DisplayProtocol.h: 68: saveSysParams();
 13601  003B20  ECDC  F01D         	call	_saveSysParams	;wreg free
 13602                           
 13603                           ;DisplayProtocol.h: 69: }else {
 13604  003B24  0012               	return	
 13605  003B26                     l457:
 13606                           
 13607                           ; BSR set to: 0
 13608                           ;DisplayProtocol.h: 70: tempLastScreen = actualScreen;
 13609  003B26  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13610                           
 13611                           ; BSR set to: 0
 13612                           ;DisplayProtocol.h: 71: actualScreen = 10;
 13613  003B2A  0E0A               	movlw	10
 13614  003B2C  0100               	movlb	0	; () banked
 13615  003B2E  6FD1               	movwf	_actualScreen& (0+255),b
 13616                           
 13617                           ;DisplayProtocol.h: 72: selSN = 1;
 13618  003B30  0E01               	movlw	1
 13619  003B32  0100               	movlb	0	; () banked
 13620  003B34  6FD7               	movwf	_selSN& (0+255),b
 13621                           
 13622                           ; BSR set to: 0
 13623                           ;DisplayProtocol.h: 73: }
 13624                           ;DisplayProtocol.h: 74: break;
 13625  003B36  0012               	return	
 13626  003B38                     l8904:
 13627                           
 13628                           ; BSR set to: 0
 13629                           ;DisplayProtocol.h: 76: if(yes) {
 13630  003B38  0100               	movlb	0	; () banked
 13631  003B3A  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13632  003B3C  0100               	movlb	0	; () banked
 13633  003B3E  B4D8               	btfsc	status,2,c
 13634  003B40  D006               	goto	l460
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;DisplayProtocol.h: 78: actualScreen = 4;
 13638  003B42  0E04               	movlw	4
 13639  003B44  0100               	movlb	0	; () banked
 13640  003B46  6FD1               	movwf	_actualScreen& (0+255),b
 13641                           
 13642                           ; BSR set to: 0
 13643                           ;DisplayProtocol.h: 79: saveSysParams();
 13644  003B48  ECDC  F01D         	call	_saveSysParams	;wreg free
 13645                           
 13646                           ;DisplayProtocol.h: 80: }else {
 13647  003B4C  0012               	return	
 13648  003B4E                     l460:
 13649                           
 13650                           ; BSR set to: 0
 13651                           ;DisplayProtocol.h: 81: tempLastScreen = actualScreen;
 13652  003B4E  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13653                           
 13654                           ; BSR set to: 0
 13655                           ;DisplayProtocol.h: 82: actualScreen = 10;
 13656  003B52  0E0A               	movlw	10
 13657  003B54  0100               	movlb	0	; () banked
 13658  003B56  6FD1               	movwf	_actualScreen& (0+255),b
 13659                           
 13660                           ;DisplayProtocol.h: 83: selSN = 1;
 13661  003B58  0E01               	movlw	1
 13662  003B5A  0100               	movlb	0	; () banked
 13663  003B5C  6FD7               	movwf	_selSN& (0+255),b
 13664                           
 13665                           ; BSR set to: 0
 13666                           ;DisplayProtocol.h: 84: }
 13667                           ;DisplayProtocol.h: 85: break;
 13668  003B5E  0012               	return	
 13669  003B60                     l8912:
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;DisplayProtocol.h: 87: if(yes) {
 13673  003B60  0100               	movlb	0	; () banked
 13674  003B62  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13675  003B64  0100               	movlb	0	; () banked
 13676  003B66  B4D8               	btfsc	status,2,c
 13677  003B68  D006               	goto	l463
 13678                           
 13679                           ; BSR set to: 0
 13680                           ;DisplayProtocol.h: 89: actualScreen = 4;
 13681  003B6A  0E04               	movlw	4
 13682  003B6C  0100               	movlb	0	; () banked
 13683  003B6E  6FD1               	movwf	_actualScreen& (0+255),b
 13684                           
 13685                           ; BSR set to: 0
 13686                           ;DisplayProtocol.h: 90: saveSysParams();
 13687  003B70  ECDC  F01D         	call	_saveSysParams	;wreg free
 13688                           
 13689                           ;DisplayProtocol.h: 91: }else {
 13690  003B74  0012               	return	
 13691  003B76                     l463:
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;DisplayProtocol.h: 92: tempLastScreen = actualScreen;
 13695  003B76  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13696                           
 13697                           ; BSR set to: 0
 13698                           ;DisplayProtocol.h: 93: actualScreen = 10;
 13699  003B7A  0E0A               	movlw	10
 13700  003B7C  0100               	movlb	0	; () banked
 13701  003B7E  6FD1               	movwf	_actualScreen& (0+255),b
 13702                           
 13703                           ;DisplayProtocol.h: 94: selSN = 1;
 13704  003B80  0E01               	movlw	1
 13705  003B82  0100               	movlb	0	; () banked
 13706  003B84  6FD7               	movwf	_selSN& (0+255),b
 13707                           
 13708                           ; BSR set to: 0
 13709                           ;DisplayProtocol.h: 97: }
 13710                           ;DisplayProtocol.h: 98: }
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;DisplayProtocol.h: 95: }
 13714                           ;DisplayProtocol.h: 96: break;
 13715  003B86  0012               	return	
 13716  003B88                     l8922:
 13717  003B88  0100               	movlb	0	; () banked
 13718  003B8A  51D4               	movf	_menuSection& (0+255),w,b
 13719                           
 13720                           ; Switch size 1, requested type "space"
 13721                           ; Number of cases is 7, Range of values is 0 to 6
 13722                           ; switch strategies available:
 13723                           ; Name         Instructions Cycles
 13724                           ; simple_byte           22    12 (average)
 13725                           ;	Chosen strategy is simple_byte
 13726  003B8C  0A00               	xorlw	0	; case 0
 13727  003B8E  B4D8               	btfsc	status,2,c
 13728  003B90  0012               	return	
 13729  003B92  0A01               	xorlw	1	; case 1
 13730  003B94  B4D8               	btfsc	status,2,c
 13731  003B96  D77E               	goto	l8870
 13732  003B98  0A03               	xorlw	3	; case 2
 13733  003B9A  B4D8               	btfsc	status,2,c
 13734  003B9C  D791               	goto	l8880
 13735  003B9E  0A01               	xorlw	1	; case 3
 13736  003BA0  B4D8               	btfsc	status,2,c
 13737  003BA2  D7A2               	goto	l8888
 13738  003BA4  0A07               	xorlw	7	; case 4
 13739  003BA6  B4D8               	btfsc	status,2,c
 13740  003BA8  D7B3               	goto	l8896
 13741  003BAA  0A01               	xorlw	1	; case 5
 13742  003BAC  B4D8               	btfsc	status,2,c
 13743  003BAE  D7C4               	goto	l8904
 13744  003BB0  0A03               	xorlw	3	; case 6
 13745  003BB2  A4D8               	btfss	status,2,c
 13746  003BB4  0012               	return	
 13747  003BB6  D7D4               	goto	l8912
 13748  003BB8                     __end_of_confirmEdition:
 13749                           	opt stack 0
 13750                           tblptru	equ	0xFF8
 13751                           tblptrh	equ	0xFF7
 13752                           tblptrl	equ	0xFF6
 13753                           tablat	equ	0xFF5
 13754                           prodh	equ	0xFF4
 13755                           prodl	equ	0xFF3
 13756                           intcon	equ	0xFF2
 13757                           postinc0	equ	0xFEE
 13758                           wreg	equ	0xFE8
 13759                           postdec1	equ	0xFE5
 13760                           fsr1l	equ	0xFE1
 13761                           indf2	equ	0xFDF
 13762                           postinc2	equ	0xFDE
 13763                           postdec2	equ	0xFDD
 13764                           fsr2h	equ	0xFDA
 13765                           fsr2l	equ	0xFD9
 13766                           status	equ	0xFD8
 13767                           
 13768 ;; *************** function _saveSysParams *****************
 13769 ;; Defined at:
 13770 ;;		line 72 in file "source/sysParams.h"
 13771 ;; Parameters:    Size  Location     Type
 13772 ;;		None
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;		None
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13784 ;;      Params:         0       0       0       0       0       0       0
 13785 ;;      Locals:         0       0       0       0       0       0       0
 13786 ;;      Temps:          0       0       0       0       0       0       0
 13787 ;;      Totals:         0       0       0       0       0       0       0
 13788 ;;Total ram usage:        0 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:   10
 13791 ;; This function calls:
 13792 ;;		_calcSysVars
 13793 ;;		_writeEEPROM
 13794 ;; This function is called by:
 13795 ;;		_confirmEdition
 13796 ;;		_autoCal
 13797 ;; This function uses a non-reentrant model
 13798 ;;
 13799                           
 13800                           	psect	text47
 13801  003BB8                     __ptext47:
 13802                           	opt stack 0
 13803  003BB8                     _saveSysParams:
 13804                           	opt stack 17
 13805                           
 13806                           ;sysParams.h: 73: EECON1bits.WREN = 1;
 13807                           
 13808                           ;incstack = 0
 13809  003BB8  84A6               	bsf	4006,2,c	;volatile
 13810                           
 13811                           ;sysParams.h: 74: ie = INTCONbits.GIE;
 13812  003BBA  0E00               	movlw	0
 13813  003BBC  BEF2               	btfsc	intcon,7,c	;volatile
 13814  003BBE  0E01               	movlw	1
 13815  003BC0  6E49               	movwf	_ie,c
 13816                           
 13817                           ;sysParams.h: 75: INTCONbits.GIE = 0;
 13818  003BC2  9EF2               	bcf	intcon,7,c	;volatile
 13819                           
 13820                           ;sysParams.h: 76: writeEEPROM(1, tVarProceso);
 13821  003BC4  C0E3  F075         	movff	_tVarProceso,writeEEPROM@data
 13822  003BC8  0E01               	movlw	1
 13823  003BCA  EC99  F028         	call	_writeEEPROM
 13824                           
 13825                           ;sysParams.h: 77: fData.floatdat = tiXcorte;
 13826  003BCE  C037  F0CC         	movff	_tiXcorte,_fData
 13827  003BD2  C038  F0CD         	movff	_tiXcorte+1,_fData+1
 13828  003BD6  C039  F0CE         	movff	_tiXcorte+2,_fData+2
 13829  003BDA  C03A  F0CF         	movff	_tiXcorte+3,_fData+3
 13830                           
 13831                           ;sysParams.h: 78: writeEEPROM(2, fData.floatMB);
 13832  003BDE  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13833  003BE2  0E02               	movlw	2
 13834  003BE4  EC99  F028         	call	_writeEEPROM
 13835                           
 13836                           ;sysParams.h: 79: writeEEPROM(3, fData.floatUB);
 13837  003BE8  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 13838  003BEC  0E03               	movlw	3
 13839  003BEE  EC99  F028         	call	_writeEEPROM
 13840                           
 13841                           ;sysParams.h: 80: writeEEPROM(4, fData.floatHB);
 13842  003BF2  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 13843  003BF6  0E04               	movlw	4
 13844  003BF8  EC99  F028         	call	_writeEEPROM
 13845                           
 13846                           ;sysParams.h: 81: writeEEPROM(5, fData.floatLB);
 13847  003BFC  C0CC  F075         	movff	_fData,writeEEPROM@data
 13848  003C00  0E05               	movlw	5
 13849  003C02  EC99  F028         	call	_writeEEPROM
 13850                           
 13851                           ;sysParams.h: 82: i16Data.int16dat = numCortes;
 13852  003C06  C0E1  F043         	movff	_numCortes,_i16Data
 13853  003C0A  C0E2  F044         	movff	_numCortes+1,_i16Data+1
 13854                           
 13855                           ;sysParams.h: 83: writeEEPROM(6, i16Data.int16HB);
 13856  003C0E  C044  F075         	movff	_i16Data+1,writeEEPROM@data
 13857  003C12  0E06               	movlw	6
 13858  003C14  EC99  F028         	call	_writeEEPROM
 13859                           
 13860                           ;sysParams.h: 84: writeEEPROM(7, i16Data.int16LB);
 13861  003C18  C043  F075         	movff	_i16Data,writeEEPROM@data
 13862  003C1C  0E07               	movlw	7
 13863  003C1E  EC99  F028         	call	_writeEEPROM
 13864                           
 13865                           ;sysParams.h: 85: fData.floatdat = diamTubo;
 13866  003C22  C0DD  F0CC         	movff	_diamTubo,_fData
 13867  003C26  C0DE  F0CD         	movff	_diamTubo+1,_fData+1
 13868  003C2A  C0DF  F0CE         	movff	_diamTubo+2,_fData+2
 13869  003C2E  C0E0  F0CF         	movff	_diamTubo+3,_fData+3
 13870                           
 13871                           ;sysParams.h: 86: writeEEPROM(8, fData.floatMB);
 13872  003C32  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13873  003C36  0E08               	movlw	8
 13874  003C38  EC99  F028         	call	_writeEEPROM
 13875                           
 13876                           ;sysParams.h: 87: writeEEPROM(9, fData.floatUB);
 13877  003C3C  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 13878  003C40  0E09               	movlw	9
 13879  003C42  EC99  F028         	call	_writeEEPROM
 13880                           
 13881                           ;sysParams.h: 88: writeEEPROM(10, fData.floatHB);
 13882  003C46  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 13883  003C4A  0E0A               	movlw	10
 13884  003C4C  EC99  F028         	call	_writeEEPROM
 13885                           
 13886                           ;sysParams.h: 89: writeEEPROM(11, fData.floatLB);
 13887  003C50  C0CC  F075         	movff	_fData,writeEEPROM@data
 13888  003C54  0E0B               	movlw	11
 13889  003C56  EC99  F028         	call	_writeEEPROM
 13890                           
 13891                           ;sysParams.h: 90: fData.floatdat = densidadMasa;
 13892  003C5A  C0D9  F0CC         	movff	_densidadMasa,_fData
 13893  003C5E  C0DA  F0CD         	movff	_densidadMasa+1,_fData+1
 13894  003C62  C0DB  F0CE         	movff	_densidadMasa+2,_fData+2
 13895  003C66  C0DC  F0CF         	movff	_densidadMasa+3,_fData+3
 13896                           
 13897                           ;sysParams.h: 91: writeEEPROM(12, fData.floatMB);
 13898  003C6A  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13899  003C6E  0E0C               	movlw	12
 13900  003C70  EC99  F028         	call	_writeEEPROM
 13901                           
 13902                           ;sysParams.h: 92: writeEEPROM(13, fData.floatUB);
 13903  003C74  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 13904  003C78  0E0D               	movlw	13
 13905  003C7A  EC99  F028         	call	_writeEEPROM
 13906                           
 13907                           ;sysParams.h: 93: writeEEPROM(14, fData.floatHB);
 13908  003C7E  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 13909  003C82  0E0E               	movlw	14
 13910  003C84  EC99  F028         	call	_writeEEPROM
 13911                           
 13912                           ;sysParams.h: 94: writeEEPROM(15, fData.floatLB);
 13913  003C88  C0CC  F075         	movff	_fData,writeEEPROM@data
 13914  003C8C  0E0F               	movlw	15
 13915  003C8E  EC99  F028         	call	_writeEEPROM
 13916                           
 13917                           ;sysParams.h: 95: fData.floatdat = velocidadMasa;
 13918  003C92  C03B  F0CC         	movff	_velocidadMasa,_fData
 13919  003C96  C03C  F0CD         	movff	_velocidadMasa+1,_fData+1
 13920  003C9A  C03D  F0CE         	movff	_velocidadMasa+2,_fData+2
 13921  003C9E  C03E  F0CF         	movff	_velocidadMasa+3,_fData+3
 13922                           
 13923                           ;sysParams.h: 96: writeEEPROM(16, fData.floatMB);
 13924  003CA2  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13925  003CA6  0E10               	movlw	16
 13926  003CA8  EC99  F028         	call	_writeEEPROM
 13927                           
 13928                           ;sysParams.h: 97: writeEEPROM(17, fData.floatUB);
 13929  003CAC  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 13930  003CB0  0E11               	movlw	17
 13931  003CB2  EC99  F028         	call	_writeEEPROM
 13932                           
 13933                           ;sysParams.h: 98: writeEEPROM(18, fData.floatHB);
 13934  003CB6  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 13935  003CBA  0E12               	movlw	18
 13936  003CBC  EC99  F028         	call	_writeEEPROM
 13937                           
 13938                           ;sysParams.h: 99: writeEEPROM(19, fData.floatLB);
 13939  003CC0  C0CC  F075         	movff	_fData,writeEEPROM@data
 13940  003CC4  0E13               	movlw	19
 13941  003CC6  EC99  F028         	call	_writeEEPROM
 13942                           
 13943                           ;sysParams.h: 100: EECON1bits.WREN = 0;
 13944  003CCA  94A6               	bcf	4006,2,c	;volatile
 13945                           
 13946                           ;sysParams.h: 101: INTCONbits.GIE = ie;
 13947  003CCC  B049               	btfsc	_ie,0,c
 13948  003CCE  D002               	bra	u9695
 13949  003CD0  9EF2               	bcf	intcon,7,c	;volatile
 13950  003CD2  D001               	bra	u9696
 13951  003CD4                     u9695:
 13952  003CD4  8EF2               	bsf	intcon,7,c	;volatile
 13953  003CD6                     u9696:
 13954                           
 13955                           ;sysParams.h: 102: calcSysVars();
 13956  003CD6  ECFA  F01B         	call	_calcSysVars	;wreg free
 13957  003CDA  0012               	return		;funcret
 13958  003CDC                     __end_of_saveSysParams:
 13959                           	opt stack 0
 13960                           tblptru	equ	0xFF8
 13961                           tblptrh	equ	0xFF7
 13962                           tblptrl	equ	0xFF6
 13963                           tablat	equ	0xFF5
 13964                           prodh	equ	0xFF4
 13965                           prodl	equ	0xFF3
 13966                           intcon	equ	0xFF2
 13967                           postinc0	equ	0xFEE
 13968                           wreg	equ	0xFE8
 13969                           postdec1	equ	0xFE5
 13970                           fsr1l	equ	0xFE1
 13971                           indf2	equ	0xFDF
 13972                           postinc2	equ	0xFDE
 13973                           postdec2	equ	0xFDD
 13974                           fsr2h	equ	0xFDA
 13975                           fsr2l	equ	0xFD9
 13976                           status	equ	0xFD8
 13977                           
 13978 ;; *************** function _writeEEPROM *****************
 13979 ;; Defined at:
 13980 ;;		line 36 in file "source/sysParams.h"
 13981 ;; Parameters:    Size  Location     Type
 13982 ;;  adr             1    wreg     unsigned char 
 13983 ;;  data            1   21[BANK0 ] unsigned char 
 13984 ;; Auto vars:     Size  Location     Type
 13985 ;;  adr             1   22[BANK0 ] unsigned char 
 13986 ;; Return value:  Size  Location     Type
 13987 ;;                  1    wreg      void 
 13988 ;; Registers used:
 13989 ;;		wreg, status,2
 13990 ;; Tracked objects:
 13991 ;;		On entry : 0/0
 13992 ;;		On exit  : 0/0
 13993 ;;		Unchanged: 0/0
 13994 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13995 ;;      Params:         0       1       0       0       0       0       0
 13996 ;;      Locals:         0       1       0       0       0       0       0
 13997 ;;      Temps:          0       0       0       0       0       0       0
 13998 ;;      Totals:         0       2       0       0       0       0       0
 13999 ;;Total ram usage:        2 bytes
 14000 ;; Hardware stack levels used:    1
 14001 ;; Hardware stack levels required when called:    8
 14002 ;; This function calls:
 14003 ;;		Nothing
 14004 ;; This function is called by:
 14005 ;;		_saveSysParams
 14006 ;; This function uses a non-reentrant model
 14007 ;;
 14008                           
 14009                           	psect	text48
 14010  005132                     __ptext48:
 14011                           	opt stack 0
 14012  005132                     _writeEEPROM:
 14013                           	opt stack 18
 14014                           
 14015                           ;incstack = 0
 14016                           ;writeEEPROM@adr stored from wreg
 14017  005132  0100               	movlb	0	; () banked
 14018  005134  6F76               	movwf	writeEEPROM@adr& (0+255),b
 14019                           
 14020                           ;sysParams.h: 37: EEADR = adr;
 14021  005136  C076  FFA9         	movff	writeEEPROM@adr,4009	;volatile
 14022                           
 14023                           ;sysParams.h: 38: EEDATA = data;
 14024  00513A  C075  FFA8         	movff	writeEEPROM@data,4008	;volatile
 14025                           
 14026                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 14027  00513E  9EA6               	bcf	4006,7,c	;volatile
 14028                           
 14029                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 14030  005140  9CA6               	bcf	4006,6,c	;volatile
 14031                           
 14032                           ;sysParams.h: 41: EECON2 = 0x55;
 14033  005142  0E55               	movlw	85
 14034  005144  6EA7               	movwf	4007,c	;volatile
 14035                           
 14036                           ;sysParams.h: 42: EECON2 = 0xAA;
 14037  005146  0EAA               	movlw	170
 14038  005148  6EA7               	movwf	4007,c	;volatile
 14039                           
 14040                           ;sysParams.h: 43: EECON1bits.WR = 1;
 14041  00514A  82A6               	bsf	4006,1,c	;volatile
 14042  00514C                     l282:
 14043  00514C  A2A6               	btfss	4006,1,c	;volatile
 14044  00514E  0012               	return	
 14045  005150  D7FD               	goto	l282
 14046  005152                     __end_of_writeEEPROM:
 14047                           	opt stack 0
 14048                           tblptru	equ	0xFF8
 14049                           tblptrh	equ	0xFF7
 14050                           tblptrl	equ	0xFF6
 14051                           tablat	equ	0xFF5
 14052                           prodh	equ	0xFF4
 14053                           prodl	equ	0xFF3
 14054                           intcon	equ	0xFF2
 14055                           postinc0	equ	0xFEE
 14056                           wreg	equ	0xFE8
 14057                           postdec1	equ	0xFE5
 14058                           fsr1l	equ	0xFE1
 14059                           indf2	equ	0xFDF
 14060                           postinc2	equ	0xFDE
 14061                           postdec2	equ	0xFDD
 14062                           fsr2h	equ	0xFDA
 14063                           fsr2l	equ	0xFD9
 14064                           status	equ	0xFD8
 14065                           
 14066 ;; *************** function _calcSysVars *****************
 14067 ;; Defined at:
 14068 ;;		line 62 in file "source/sysParams.h"
 14069 ;; Parameters:    Size  Location     Type
 14070 ;;		None
 14071 ;; Auto vars:     Size  Location     Type
 14072 ;;  temp            4   60[BANK0 ] float 
 14073 ;; Return value:  Size  Location     Type
 14074 ;;                  1    wreg      void 
 14075 ;; Registers used:
 14076 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14077 ;; Tracked objects:
 14078 ;;		On entry : 0/0
 14079 ;;		On exit  : 0/0
 14080 ;;		Unchanged: 0/0
 14081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14082 ;;      Params:         0       0       0       0       0       0       0
 14083 ;;      Locals:         0       4       0       0       0       0       0
 14084 ;;      Temps:          0       0       0       0       0       0       0
 14085 ;;      Totals:         0       4       0       0       0       0       0
 14086 ;;Total ram usage:        4 bytes
 14087 ;; Hardware stack levels used:    1
 14088 ;; Hardware stack levels required when called:    9
 14089 ;; This function calls:
 14090 ;;		___fldiv
 14091 ;;		___flmul
 14092 ;; This function is called by:
 14093 ;;		_saveSysParams
 14094 ;; This function uses a non-reentrant model
 14095 ;;
 14096                           
 14097                           	psect	text49
 14098  0037F4                     __ptext49:
 14099                           	opt stack 0
 14100  0037F4                     _calcSysVars:
 14101                           	opt stack 17
 14102                           
 14103                           ;sysParams.h: 63: float temp = 0;
 14104                           
 14105                           ;incstack = 0
 14106  0037F4  0E00               	movlw	0
 14107  0037F6  0100               	movlb	0	; () banked
 14108  0037F8  6F9C               	movwf	calcSysVars@temp& (0+255),b
 14109  0037FA  0E00               	movlw	0
 14110  0037FC  6F9D               	movwf	(calcSysVars@temp+1)& (0+255),b
 14111  0037FE  0E00               	movlw	0
 14112  003800  6F9E               	movwf	(calcSysVars@temp+2)& (0+255),b
 14113  003802  0E00               	movlw	0
 14114  003804  6F9F               	movwf	(calcSysVars@temp+3)& (0+255),b
 14115                           
 14116                           ; BSR set to: 0
 14117                           ;sysParams.h: 64: temp = (float)diamTubo / 2000.0f;
 14118  003806  C0DD  F075         	movff	_diamTubo,___fldiv@b
 14119  00380A  C0DE  F076         	movff	_diamTubo+1,___fldiv@b+1
 14120  00380E  C0DF  F077         	movff	_diamTubo+2,___fldiv@b+2
 14121  003812  C0E0  F078         	movff	_diamTubo+3,___fldiv@b+3
 14122  003816  0E00               	movlw	0
 14123  003818  0100               	movlb	0	; () banked
 14124  00381A  6F79               	movwf	___fldiv@a& (0+255),b
 14125  00381C  0E00               	movlw	0
 14126  00381E  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 14127  003820  0EFA               	movlw	250
 14128  003822  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 14129  003824  0E44               	movlw	68
 14130  003826  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 14131  003828  ECA2  F00D         	call	___fldiv	;wreg free
 14132  00382C  C075  F09C         	movff	?___fldiv,calcSysVars@temp
 14133  003830  C076  F09D         	movff	?___fldiv+1,calcSysVars@temp+1
 14134  003834  C077  F09E         	movff	?___fldiv+2,calcSysVars@temp+2
 14135  003838  C078  F09F         	movff	?___fldiv+3,calcSysVars@temp+3
 14136                           
 14137                           ;sysParams.h: 65: temp *= temp;
 14138  00383C  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14139  003840  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14140  003844  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14141  003848  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14142  00384C  C09C  F087         	movff	calcSysVars@temp,___flmul@a
 14143  003850  C09D  F088         	movff	calcSysVars@temp+1,___flmul@a+1
 14144  003854  C09E  F089         	movff	calcSysVars@temp+2,___flmul@a+2
 14145  003858  C09F  F08A         	movff	calcSysVars@temp+3,___flmul@a+3
 14146  00385C  EC4F  F00B         	call	___flmul	;wreg free
 14147  003860  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14148  003864  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14149  003868  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14150  00386C  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14151                           
 14152                           ;sysParams.h: 66: temp *= pi;
 14153  003870  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14154  003874  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14155  003878  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14156  00387C  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14157  003880  C14F  F087         	movff	_pi,___flmul@a
 14158  003884  C150  F088         	movff	_pi+1,___flmul@a+1
 14159  003888  C151  F089         	movff	_pi+2,___flmul@a+2
 14160  00388C  C152  F08A         	movff	_pi+3,___flmul@a+3
 14161  003890  EC4F  F00B         	call	___flmul	;wreg free
 14162  003894  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14163  003898  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14164  00389C  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14165  0038A0  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14166                           
 14167                           ;sysParams.h: 67: temp *= velocidadMasa;
 14168  0038A4  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14169  0038A8  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14170  0038AC  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14171  0038B0  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14172  0038B4  C03B  F087         	movff	_velocidadMasa,___flmul@a
 14173  0038B8  C03C  F088         	movff	_velocidadMasa+1,___flmul@a+1
 14174  0038BC  C03D  F089         	movff	_velocidadMasa+2,___flmul@a+2
 14175  0038C0  C03E  F08A         	movff	_velocidadMasa+3,___flmul@a+3
 14176  0038C4  EC4F  F00B         	call	___flmul	;wreg free
 14177  0038C8  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14178  0038CC  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14179  0038D0  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14180  0038D4  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14181                           
 14182                           ;sysParams.h: 68: m3Xcorte = (float)temp * tiXcorte;
 14183  0038D8  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14184  0038DC  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14185  0038E0  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14186  0038E4  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14187  0038E8  C037  F087         	movff	_tiXcorte,___flmul@a
 14188  0038EC  C038  F088         	movff	_tiXcorte+1,___flmul@a+1
 14189  0038F0  C039  F089         	movff	_tiXcorte+2,___flmul@a+2
 14190  0038F4  C03A  F08A         	movff	_tiXcorte+3,___flmul@a+3
 14191  0038F8  EC4F  F00B         	call	___flmul	;wreg free
 14192  0038FC  C083  F033         	movff	?___flmul,_m3Xcorte
 14193  003900  C084  F034         	movff	?___flmul+1,_m3Xcorte+1
 14194  003904  C085  F035         	movff	?___flmul+2,_m3Xcorte+2
 14195  003908  C086  F036         	movff	?___flmul+3,_m3Xcorte+3
 14196                           
 14197                           ;sysParams.h: 69: kgXcorte = (float)densidadMasa * m3Xcorte;
 14198  00390C  C0D9  F083         	movff	_densidadMasa,___flmul@b
 14199  003910  C0DA  F084         	movff	_densidadMasa+1,___flmul@b+1
 14200  003914  C0DB  F085         	movff	_densidadMasa+2,___flmul@b+2
 14201  003918  C0DC  F086         	movff	_densidadMasa+3,___flmul@b+3
 14202  00391C  C033  F087         	movff	_m3Xcorte,___flmul@a
 14203  003920  C034  F088         	movff	_m3Xcorte+1,___flmul@a+1
 14204  003924  C035  F089         	movff	_m3Xcorte+2,___flmul@a+2
 14205  003928  C036  F08A         	movff	_m3Xcorte+3,___flmul@a+3
 14206  00392C  EC4F  F00B         	call	___flmul	;wreg free
 14207  003930  C083  F02F         	movff	?___flmul,_kgXcorte
 14208  003934  C084  F030         	movff	?___flmul+1,_kgXcorte+1
 14209  003938  C085  F031         	movff	?___flmul+2,_kgXcorte+2
 14210  00393C  C086  F032         	movff	?___flmul+3,_kgXcorte+3
 14211  003940  0012               	return		;funcret
 14212  003942                     __end_of_calcSysVars:
 14213                           	opt stack 0
 14214                           tblptru	equ	0xFF8
 14215                           tblptrh	equ	0xFF7
 14216                           tblptrl	equ	0xFF6
 14217                           tablat	equ	0xFF5
 14218                           prodh	equ	0xFF4
 14219                           prodl	equ	0xFF3
 14220                           intcon	equ	0xFF2
 14221                           postinc0	equ	0xFEE
 14222                           wreg	equ	0xFE8
 14223                           postdec1	equ	0xFE5
 14224                           fsr1l	equ	0xFE1
 14225                           indf2	equ	0xFDF
 14226                           postinc2	equ	0xFDE
 14227                           postdec2	equ	0xFDD
 14228                           fsr2h	equ	0xFDA
 14229                           fsr2l	equ	0xFD9
 14230                           status	equ	0xFD8
 14231                           
 14232 ;; *************** function ___flmul *****************
 14233 ;; Defined at:
 14234 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 14235 ;; Parameters:    Size  Location     Type
 14236 ;;  b               4   35[BANK0 ] void 
 14237 ;;  a               4   39[BANK0 ] void 
 14238 ;; Auto vars:     Size  Location     Type
 14239 ;;  prod            4   54[BANK0 ] struct .
 14240 ;;  grs             4   49[BANK0 ] unsigned long 
 14241 ;;  temp            2   58[BANK0 ] struct .
 14242 ;;  bexp            1   53[BANK0 ] unsigned char 
 14243 ;;  aexp            1   48[BANK0 ] unsigned char 
 14244 ;;  sign            1   47[BANK0 ] unsigned char 
 14245 ;; Return value:  Size  Location     Type
 14246 ;;                  4   35[BANK0 ] unsigned char 
 14247 ;; Registers used:
 14248 ;;		wreg, status,2, status,0, prodl, prodh
 14249 ;; Tracked objects:
 14250 ;;		On entry : 0/0
 14251 ;;		On exit  : 0/0
 14252 ;;		Unchanged: 0/0
 14253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14254 ;;      Params:         0       8       0       0       0       0       0
 14255 ;;      Locals:         0      13       0       0       0       0       0
 14256 ;;      Temps:          0       4       0       0       0       0       0
 14257 ;;      Totals:         0      25       0       0       0       0       0
 14258 ;;Total ram usage:       25 bytes
 14259 ;; Hardware stack levels used:    1
 14260 ;; Hardware stack levels required when called:    8
 14261 ;; This function calls:
 14262 ;;		Nothing
 14263 ;; This function is called by:
 14264 ;;		_calcSysVars
 14265 ;;		_fround
 14266 ;;		_scale
 14267 ;;		_printf
 14268 ;;		_preAutoCal
 14269 ;;		_autoCal
 14270 ;; This function uses a non-reentrant model
 14271 ;;
 14272                           
 14273                           	psect	text50
 14274  00169E                     __ptext50:
 14275                           	opt stack 0
 14276  00169E                     ___flmul:
 14277                           	opt stack 18
 14278                           
 14279                           ;incstack = 0
 14280  00169E  0100               	movlb	0	; () banked
 14281  0016A0  5186               	movf	(___flmul@b+3)& (0+255),w,b
 14282  0016A2  0B80               	andlw	128
 14283  0016A4  0100               	movlb	0	; () banked
 14284  0016A6  6F8F               	movwf	___flmul@sign& (0+255),b
 14285  0016A8  0100               	movlb	0	; () banked
 14286  0016AA  5186               	movf	(___flmul@b+3)& (0+255),w,b
 14287  0016AC  2586               	addwf	(___flmul@b+3)& (0+255),w,b
 14288  0016AE  0100               	movlb	0	; () banked
 14289  0016B0  6F95               	movwf	___flmul@bexp& (0+255),b
 14290                           
 14291                           ; BSR set to: 0
 14292  0016B2  0100               	movlb	0	; () banked
 14293  0016B4  AF85               	btfss	(___flmul@b+2)& (0+255),7,b
 14294  0016B6  D002               	goto	l7446
 14295                           
 14296                           ; BSR set to: 0
 14297  0016B8  0100               	movlb	0	; () banked
 14298  0016BA  8195               	bsf	___flmul@bexp& (0+255),0,b
 14299  0016BC                     l7446:
 14300                           
 14301                           ; BSR set to: 0
 14302  0016BC  0100               	movlb	0	; () banked
 14303  0016BE  5195               	movf	___flmul@bexp& (0+255),w,b
 14304  0016C0  0100               	movlb	0	; () banked
 14305  0016C2  B4D8               	btfsc	status,2,c
 14306  0016C4  D010               	goto	l7454
 14307                           
 14308                           ; BSR set to: 0
 14309  0016C6  0100               	movlb	0	; () banked
 14310  0016C8  2995               	incf	___flmul@bexp& (0+255),w,b
 14311  0016CA  A4D8               	btfss	status,2,c
 14312  0016CC  D009               	goto	l7452
 14313                           
 14314                           ; BSR set to: 0
 14315  0016CE  0E00               	movlw	0
 14316  0016D0  0100               	movlb	0	; () banked
 14317  0016D2  6F83               	movwf	___flmul@b& (0+255),b
 14318  0016D4  0E00               	movlw	0
 14319  0016D6  6F84               	movwf	(___flmul@b+1)& (0+255),b
 14320  0016D8  0E00               	movlw	0
 14321  0016DA  6F85               	movwf	(___flmul@b+2)& (0+255),b
 14322  0016DC  0E00               	movlw	0
 14323  0016DE  6F86               	movwf	(___flmul@b+3)& (0+255),b
 14324  0016E0                     l7452:
 14325                           
 14326                           ; BSR set to: 0
 14327  0016E0  0100               	movlb	0	; () banked
 14328  0016E2  8F85               	bsf	(___flmul@b+2)& (0+255),7,b
 14329  0016E4  D009               	goto	l7456
 14330  0016E6                     l7454:
 14331                           
 14332                           ; BSR set to: 0
 14333  0016E6  0E00               	movlw	0
 14334  0016E8  0100               	movlb	0	; () banked
 14335  0016EA  6F83               	movwf	___flmul@b& (0+255),b
 14336  0016EC  0E00               	movlw	0
 14337  0016EE  6F84               	movwf	(___flmul@b+1)& (0+255),b
 14338  0016F0  0E00               	movlw	0
 14339  0016F2  6F85               	movwf	(___flmul@b+2)& (0+255),b
 14340  0016F4  0E00               	movlw	0
 14341  0016F6  6F86               	movwf	(___flmul@b+3)& (0+255),b
 14342  0016F8                     l7456:
 14343                           
 14344                           ; BSR set to: 0
 14345  0016F8  0100               	movlb	0	; () banked
 14346  0016FA  518A               	movf	(___flmul@a+3)& (0+255),w,b
 14347  0016FC  0B80               	andlw	128
 14348  0016FE  0100               	movlb	0	; () banked
 14349  001700  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 14350                           
 14351                           ; BSR set to: 0
 14352  001702  0100               	movlb	0	; () banked
 14353  001704  518A               	movf	(___flmul@a+3)& (0+255),w,b
 14354  001706  258A               	addwf	(___flmul@a+3)& (0+255),w,b
 14355  001708  0100               	movlb	0	; () banked
 14356  00170A  6F90               	movwf	___flmul@aexp& (0+255),b
 14357                           
 14358                           ; BSR set to: 0
 14359  00170C  0100               	movlb	0	; () banked
 14360  00170E  AF89               	btfss	(___flmul@a+2)& (0+255),7,b
 14361  001710  D002               	goto	l7464
 14362                           
 14363                           ; BSR set to: 0
 14364  001712  0100               	movlb	0	; () banked
 14365  001714  8190               	bsf	___flmul@aexp& (0+255),0,b
 14366  001716                     l7464:
 14367                           
 14368                           ; BSR set to: 0
 14369  001716  0100               	movlb	0	; () banked
 14370  001718  5190               	movf	___flmul@aexp& (0+255),w,b
 14371  00171A  0100               	movlb	0	; () banked
 14372  00171C  B4D8               	btfsc	status,2,c
 14373  00171E  D010               	goto	l7472
 14374                           
 14375                           ; BSR set to: 0
 14376  001720  0100               	movlb	0	; () banked
 14377  001722  2990               	incf	___flmul@aexp& (0+255),w,b
 14378  001724  A4D8               	btfss	status,2,c
 14379  001726  D009               	goto	l7470
 14380                           
 14381                           ; BSR set to: 0
 14382  001728  0E00               	movlw	0
 14383  00172A  0100               	movlb	0	; () banked
 14384  00172C  6F87               	movwf	___flmul@a& (0+255),b
 14385  00172E  0E00               	movlw	0
 14386  001730  6F88               	movwf	(___flmul@a+1)& (0+255),b
 14387  001732  0E00               	movlw	0
 14388  001734  6F89               	movwf	(___flmul@a+2)& (0+255),b
 14389  001736  0E00               	movlw	0
 14390  001738  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 14391  00173A                     l7470:
 14392                           
 14393                           ; BSR set to: 0
 14394  00173A  0100               	movlb	0	; () banked
 14395  00173C  8F89               	bsf	(___flmul@a+2)& (0+255),7,b
 14396  00173E  D009               	goto	l1428
 14397  001740                     l7472:
 14398                           
 14399                           ; BSR set to: 0
 14400  001740  0E00               	movlw	0
 14401  001742  0100               	movlb	0	; () banked
 14402  001744  6F87               	movwf	___flmul@a& (0+255),b
 14403  001746  0E00               	movlw	0
 14404  001748  6F88               	movwf	(___flmul@a+1)& (0+255),b
 14405  00174A  0E00               	movlw	0
 14406  00174C  6F89               	movwf	(___flmul@a+2)& (0+255),b
 14407  00174E  0E00               	movlw	0
 14408  001750  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 14409  001752                     l1428:
 14410                           
 14411                           ; BSR set to: 0
 14412  001752  0100               	movlb	0	; () banked
 14413  001754  5190               	movf	___flmul@aexp& (0+255),w,b
 14414  001756  0100               	movlb	0	; () banked
 14415  001758  B4D8               	btfsc	status,2,c
 14416  00175A  D005               	goto	l7476
 14417                           
 14418                           ; BSR set to: 0
 14419  00175C  0100               	movlb	0	; () banked
 14420  00175E  5195               	movf	___flmul@bexp& (0+255),w,b
 14421  001760  0100               	movlb	0	; () banked
 14422  001762  A4D8               	btfss	status,2,c
 14423  001764  D00A               	goto	l7480
 14424  001766                     l7476:
 14425                           
 14426                           ; BSR set to: 0
 14427  001766  0E00               	movlw	0
 14428  001768  0100               	movlb	0	; () banked
 14429  00176A  6F83               	movwf	?___flmul& (0+255),b
 14430  00176C  0E00               	movlw	0
 14431  00176E  6F84               	movwf	(?___flmul+1)& (0+255),b
 14432  001770  0E00               	movlw	0
 14433  001772  6F85               	movwf	(?___flmul+2)& (0+255),b
 14434  001774  0E00               	movlw	0
 14435  001776  6F86               	movwf	(?___flmul+3)& (0+255),b
 14436                           
 14437                           ; BSR set to: 0
 14438  001778  0012               	return	
 14439  00177A                     l7480:
 14440                           
 14441                           ; BSR set to: 0
 14442  00177A  0100               	movlb	0	; () banked
 14443  00177C  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14444  00177E  0100               	movlb	0	; () banked
 14445  001780  0383               	mulwf	___flmul@b& (0+255),b
 14446  001782  CFF3 F09A          	movff	prodl,___flmul@temp
 14447  001786  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14448                           
 14449                           ; BSR set to: 0
 14450  00178A  0100               	movlb	0	; () banked
 14451  00178C  519A               	movf	___flmul@temp& (0+255),w,b
 14452  00178E  0100               	movlb	0	; () banked
 14453  001790  6F91               	movwf	___flmul@grs& (0+255),b
 14454  001792  6B92               	clrf	(___flmul@grs+1)& (0+255),b
 14455  001794  6B93               	clrf	(___flmul@grs+2)& (0+255),b
 14456  001796  6B94               	clrf	(___flmul@grs+3)& (0+255),b
 14457                           
 14458                           ; BSR set to: 0
 14459  001798  0100               	movlb	0	; () banked
 14460  00179A  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14461  00179C  0100               	movlb	0	; () banked
 14462  00179E  6F96               	movwf	___flmul@prod& (0+255),b
 14463  0017A0  6B97               	clrf	(___flmul@prod+1)& (0+255),b
 14464  0017A2  6B98               	clrf	(___flmul@prod+2)& (0+255),b
 14465  0017A4  6B99               	clrf	(___flmul@prod+3)& (0+255),b
 14466  0017A6  0100               	movlb	0	; () banked
 14467  0017A8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14468  0017AA  0100               	movlb	0	; () banked
 14469  0017AC  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14470  0017AE  CFF3 F09A          	movff	prodl,___flmul@temp
 14471  0017B2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14472                           
 14473                           ; BSR set to: 0
 14474  0017B6  0100               	movlb	0	; () banked
 14475  0017B8  519A               	movf	___flmul@temp& (0+255),w,b
 14476  0017BA  0100               	movlb	0	; () banked
 14477  0017BC  2791               	addwf	___flmul@grs& (0+255),f,b
 14478  0017BE  0E00               	movlw	0
 14479  0017C0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14480  0017C2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14481  0017C4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14482                           
 14483                           ; BSR set to: 0
 14484  0017C6  0100               	movlb	0	; () banked
 14485  0017C8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14486  0017CA  0100               	movlb	0	; () banked
 14487  0017CC  2796               	addwf	___flmul@prod& (0+255),f,b
 14488  0017CE  0E00               	movlw	0
 14489  0017D0  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14490  0017D2  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14491  0017D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14492  0017D6  0100               	movlb	0	; () banked
 14493  0017D8  5187               	movf	___flmul@a& (0+255),w,b
 14494  0017DA  0100               	movlb	0	; () banked
 14495  0017DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14496  0017DE  CFF3 F09A          	movff	prodl,___flmul@temp
 14497  0017E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14498                           
 14499                           ; BSR set to: 0
 14500  0017E6  0100               	movlb	0	; () banked
 14501  0017E8  519A               	movf	___flmul@temp& (0+255),w,b
 14502  0017EA  0100               	movlb	0	; () banked
 14503  0017EC  2791               	addwf	___flmul@grs& (0+255),f,b
 14504  0017EE  0E00               	movlw	0
 14505  0017F0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14506  0017F2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14507  0017F4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14508                           
 14509                           ; BSR set to: 0
 14510  0017F6  0100               	movlb	0	; () banked
 14511  0017F8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14512  0017FA  0100               	movlb	0	; () banked
 14513  0017FC  2796               	addwf	___flmul@prod& (0+255),f,b
 14514  0017FE  0E00               	movlw	0
 14515  001800  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14516  001802  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14517  001804  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14518                           
 14519                           ; BSR set to: 0
 14520  001806  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14521  00180A  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14522  00180E  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14523  001812  0100               	movlb	0	; () banked
 14524  001814  6B91               	clrf	___flmul@grs& (0+255),b
 14525                           
 14526                           ; BSR set to: 0
 14527  001816  0100               	movlb	0	; () banked
 14528  001818  5187               	movf	___flmul@a& (0+255),w,b
 14529  00181A  0100               	movlb	0	; () banked
 14530  00181C  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14531  00181E  CFF3 F09A          	movff	prodl,___flmul@temp
 14532  001822  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14533                           
 14534                           ; BSR set to: 0
 14535  001826  0100               	movlb	0	; () banked
 14536  001828  519A               	movf	___flmul@temp& (0+255),w,b
 14537  00182A  0100               	movlb	0	; () banked
 14538  00182C  2791               	addwf	___flmul@grs& (0+255),f,b
 14539  00182E  0100               	movlb	0	; () banked
 14540  001830  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14541  001832  0100               	movlb	0	; () banked
 14542  001834  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14543  001836  0E00               	movlw	0
 14544  001838  0100               	movlb	0	; () banked
 14545  00183A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14546  00183C  0E00               	movlw	0
 14547  00183E  0100               	movlb	0	; () banked
 14548  001840  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14549                           
 14550                           ; BSR set to: 0
 14551  001842  0100               	movlb	0	; () banked
 14552  001844  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14553  001846  0100               	movlb	0	; () banked
 14554  001848  0383               	mulwf	___flmul@b& (0+255),b
 14555  00184A  CFF3 F09A          	movff	prodl,___flmul@temp
 14556  00184E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14557                           
 14558                           ; BSR set to: 0
 14559  001852  0100               	movlb	0	; () banked
 14560  001854  519A               	movf	___flmul@temp& (0+255),w,b
 14561  001856  0100               	movlb	0	; () banked
 14562  001858  2791               	addwf	___flmul@grs& (0+255),f,b
 14563  00185A  0100               	movlb	0	; () banked
 14564  00185C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14565  00185E  0100               	movlb	0	; () banked
 14566  001860  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14567  001862  0E00               	movlw	0
 14568  001864  0100               	movlb	0	; () banked
 14569  001866  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14570  001868  0E00               	movlw	0
 14571  00186A  0100               	movlb	0	; () banked
 14572  00186C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14573                           
 14574                           ; BSR set to: 0
 14575  00186E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14576  001872  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14577  001876  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14578  00187A  0100               	movlb	0	; () banked
 14579  00187C  6B91               	clrf	___flmul@grs& (0+255),b
 14580  00187E  0100               	movlb	0	; () banked
 14581  001880  5187               	movf	___flmul@a& (0+255),w,b
 14582  001882  0100               	movlb	0	; () banked
 14583  001884  0383               	mulwf	___flmul@b& (0+255),b
 14584  001886  CFF3 F09A          	movff	prodl,___flmul@temp
 14585  00188A  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14586                           
 14587                           ; BSR set to: 0
 14588  00188E  0100               	movlb	0	; () banked
 14589  001890  519A               	movf	___flmul@temp& (0+255),w,b
 14590  001892  0100               	movlb	0	; () banked
 14591  001894  2791               	addwf	___flmul@grs& (0+255),f,b
 14592  001896  0100               	movlb	0	; () banked
 14593  001898  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14594  00189A  0100               	movlb	0	; () banked
 14595  00189C  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14596  00189E  0E00               	movlw	0
 14597  0018A0  0100               	movlb	0	; () banked
 14598  0018A2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14599  0018A4  0E00               	movlw	0
 14600  0018A6  0100               	movlb	0	; () banked
 14601  0018A8  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14602                           
 14603                           ; BSR set to: 0
 14604  0018AA  0100               	movlb	0	; () banked
 14605  0018AC  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14606  0018AE  0100               	movlb	0	; () banked
 14607  0018B0  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14608  0018B2  CFF3 F09A          	movff	prodl,___flmul@temp
 14609  0018B6  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14610  0018BA  0100               	movlb	0	; () banked
 14611  0018BC  519A               	movf	___flmul@temp& (0+255),w,b
 14612  0018BE  0100               	movlb	0	; () banked
 14613  0018C0  2796               	addwf	___flmul@prod& (0+255),f,b
 14614  0018C2  0100               	movlb	0	; () banked
 14615  0018C4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14616  0018C6  0100               	movlb	0	; () banked
 14617  0018C8  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14618  0018CA  0E00               	movlw	0
 14619  0018CC  0100               	movlb	0	; () banked
 14620  0018CE  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14621  0018D0  0E00               	movlw	0
 14622  0018D2  0100               	movlb	0	; () banked
 14623  0018D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14624                           
 14625                           ; BSR set to: 0
 14626  0018D6  0100               	movlb	0	; () banked
 14627  0018D8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14628  0018DA  0100               	movlb	0	; () banked
 14629  0018DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14630  0018DE  CFF3 F09A          	movff	prodl,___flmul@temp
 14631  0018E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14632                           
 14633                           ; BSR set to: 0
 14634  0018E6  0100               	movlb	0	; () banked
 14635  0018E8  519A               	movf	___flmul@temp& (0+255),w,b
 14636  0018EA  0100               	movlb	0	; () banked
 14637  0018EC  2796               	addwf	___flmul@prod& (0+255),f,b
 14638  0018EE  0100               	movlb	0	; () banked
 14639  0018F0  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14640  0018F2  0100               	movlb	0	; () banked
 14641  0018F4  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14642  0018F6  0E00               	movlw	0
 14643  0018F8  0100               	movlb	0	; () banked
 14644  0018FA  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14645  0018FC  0E00               	movlw	0
 14646  0018FE  0100               	movlb	0	; () banked
 14647  001900  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14648  001902  0100               	movlb	0	; () banked
 14649  001904  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14650  001906  0100               	movlb	0	; () banked
 14651  001908  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14652  00190A  CFF3 F09A          	movff	prodl,___flmul@temp
 14653  00190E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14654                           
 14655                           ; BSR set to: 0
 14656  001912  0100               	movlb	0	; () banked
 14657  001914  519A               	movf	___flmul@temp& (0+255),w,b
 14658  001916  0100               	movlb	0	; () banked
 14659  001918  6F8B               	movwf	??___flmul& (0+255),b
 14660  00191A  0100               	movlb	0	; () banked
 14661  00191C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14662  00191E  0100               	movlb	0	; () banked
 14663  001920  6F8C               	movwf	(??___flmul+1)& (0+255),b
 14664  001922  0100               	movlb	0	; () banked
 14665  001924  6B8D               	clrf	(??___flmul+2)& (0+255),b
 14666  001926  0100               	movlb	0	; () banked
 14667  001928  6B8E               	clrf	(??___flmul+3)& (0+255),b
 14668  00192A  C08D  F08E         	movff	??___flmul+2,??___flmul+3
 14669  00192E  C08C  F08D         	movff	??___flmul+1,??___flmul+2
 14670  001932  C08B  F08C         	movff	??___flmul,??___flmul+1
 14671  001936  0100               	movlb	0	; () banked
 14672  001938  6B8B               	clrf	??___flmul& (0+255),b
 14673  00193A  0100               	movlb	0	; () banked
 14674  00193C  518B               	movf	??___flmul& (0+255),w,b
 14675  00193E  0100               	movlb	0	; () banked
 14676  001940  2796               	addwf	___flmul@prod& (0+255),f,b
 14677  001942  0100               	movlb	0	; () banked
 14678  001944  518C               	movf	(??___flmul+1)& (0+255),w,b
 14679  001946  0100               	movlb	0	; () banked
 14680  001948  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14681  00194A  0100               	movlb	0	; () banked
 14682  00194C  518D               	movf	(??___flmul+2)& (0+255),w,b
 14683  00194E  0100               	movlb	0	; () banked
 14684  001950  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14685  001952  0100               	movlb	0	; () banked
 14686  001954  518E               	movf	(??___flmul+3)& (0+255),w,b
 14687  001956  0100               	movlb	0	; () banked
 14688  001958  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14689                           
 14690                           ; BSR set to: 0
 14691  00195A  C091  F08B         	movff	___flmul@grs,??___flmul
 14692  00195E  C092  F08C         	movff	___flmul@grs+1,??___flmul+1
 14693  001962  C093  F08D         	movff	___flmul@grs+2,??___flmul+2
 14694  001966  C094  F08E         	movff	___flmul@grs+3,??___flmul+3
 14695  00196A  0E19               	movlw	25
 14696  00196C  D006               	goto	u9070
 14697  00196E                     u9075:
 14698  00196E  0100               	movlb	0	; () banked
 14699  001970  90D8               	bcf	status,0,c
 14700  001972  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 14701  001974  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 14702  001976  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 14703  001978  338B               	rrcf	??___flmul& (0+255),f,b
 14704  00197A                     u9070:
 14705  00197A  2EE8               	decfsz	wreg,f,c
 14706  00197C  D7F8               	goto	u9075
 14707  00197E  0100               	movlb	0	; () banked
 14708  001980  518B               	movf	??___flmul& (0+255),w,b
 14709  001982  0100               	movlb	0	; () banked
 14710  001984  2796               	addwf	___flmul@prod& (0+255),f,b
 14711  001986  0100               	movlb	0	; () banked
 14712  001988  518C               	movf	(??___flmul+1)& (0+255),w,b
 14713  00198A  0100               	movlb	0	; () banked
 14714  00198C  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14715  00198E  0100               	movlb	0	; () banked
 14716  001990  518D               	movf	(??___flmul+2)& (0+255),w,b
 14717  001992  0100               	movlb	0	; () banked
 14718  001994  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14719  001996  0100               	movlb	0	; () banked
 14720  001998  518E               	movf	(??___flmul+3)& (0+255),w,b
 14721  00199A  0100               	movlb	0	; () banked
 14722  00199C  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14723                           
 14724                           ; BSR set to: 0
 14725  00199E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14726  0019A2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14727  0019A6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14728  0019AA  0100               	movlb	0	; () banked
 14729  0019AC  6B91               	clrf	___flmul@grs& (0+255),b
 14730                           
 14731                           ; BSR set to: 0
 14732  0019AE  0100               	movlb	0	; () banked
 14733  0019B0  5190               	movf	___flmul@aexp& (0+255),w,b
 14734  0019B2  C095  F08B         	movff	___flmul@bexp,??___flmul
 14735  0019B6  0100               	movlb	0	; () banked
 14736  0019B8  6B8C               	clrf	(??___flmul+1)& (0+255),b
 14737  0019BA  0100               	movlb	0	; () banked
 14738  0019BC  278B               	addwf	??___flmul& (0+255),f,b
 14739  0019BE  0E00               	movlw	0
 14740  0019C0  238C               	addwfc	(??___flmul+1)& (0+255),f,b
 14741  0019C2  0E82               	movlw	130
 14742  0019C4  0100               	movlb	0	; () banked
 14743  0019C6  258B               	addwf	??___flmul& (0+255),w,b
 14744  0019C8  0100               	movlb	0	; () banked
 14745  0019CA  6F9A               	movwf	___flmul@temp& (0+255),b
 14746  0019CC  0EFF               	movlw	255
 14747  0019CE  0100               	movlb	0	; () banked
 14748  0019D0  218C               	addwfc	(??___flmul+1)& (0+255),w,b
 14749  0019D2  0100               	movlb	0	; () banked
 14750  0019D4  6F9B               	movwf	(___flmul@temp+1)& (0+255),b
 14751  0019D6  D015               	goto	l7528
 14752  0019D8                     l7522:
 14753                           
 14754                           ; BSR set to: 0
 14755  0019D8  0100               	movlb	0	; () banked
 14756  0019DA  90D8               	bcf	status,0,c
 14757  0019DC  3796               	rlcf	___flmul@prod& (0+255),f,b
 14758  0019DE  3797               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14759  0019E0  3798               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14760  0019E2  3799               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14761                           
 14762                           ; BSR set to: 0
 14763  0019E4  0100               	movlb	0	; () banked
 14764  0019E6  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 14765  0019E8  D002               	goto	l1435
 14766                           
 14767                           ; BSR set to: 0
 14768  0019EA  0100               	movlb	0	; () banked
 14769  0019EC  8196               	bsf	___flmul@prod& (0+255),0,b
 14770  0019EE                     l1435:
 14771                           
 14772                           ; BSR set to: 0
 14773  0019EE  0100               	movlb	0	; () banked
 14774  0019F0  90D8               	bcf	status,0,c
 14775  0019F2  3791               	rlcf	___flmul@grs& (0+255),f,b
 14776  0019F4  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14777  0019F6  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14778  0019F8  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14779  0019FA  0100               	movlb	0	; () banked
 14780  0019FC  079A               	decf	___flmul@temp& (0+255),f,b
 14781  0019FE  A0D8               	btfss	status,0,c
 14782  001A00  079B               	decf	(___flmul@temp+1)& (0+255),f,b
 14783  001A02                     l7528:
 14784                           
 14785                           ; BSR set to: 0
 14786  001A02  0100               	movlb	0	; () banked
 14787  001A04  AF98               	btfss	(___flmul@prod+2)& (0+255),7,b
 14788  001A06  D7E8               	goto	l7522
 14789                           
 14790                           ; BSR set to: 0
 14791                           
 14792                           ; BSR set to: 0
 14793  001A08  0E00               	movlw	0
 14794  001A0A  0100               	movlb	0	; () banked
 14795  001A0C  6F90               	movwf	___flmul@aexp& (0+255),b
 14796                           
 14797                           ; BSR set to: 0
 14798  001A0E  0100               	movlb	0	; () banked
 14799  001A10  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 14800  001A12  D024               	goto	l1437
 14801                           
 14802                           ; BSR set to: 0
 14803  001A14  0EFF               	movlw	255
 14804  001A16  0100               	movlb	0	; () banked
 14805  001A18  1591               	andwf	___flmul@grs& (0+255),w,b
 14806  001A1A  0100               	movlb	0	; () banked
 14807  001A1C  6F8B               	movwf	??___flmul& (0+255),b
 14808  001A1E  0EFF               	movlw	255
 14809  001A20  0100               	movlb	0	; () banked
 14810  001A22  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
 14811  001A24  0100               	movlb	0	; () banked
 14812  001A26  6F8C               	movwf	(??___flmul+1)& (0+255),b
 14813  001A28  0EFF               	movlw	255
 14814  001A2A  0100               	movlb	0	; () banked
 14815  001A2C  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
 14816  001A2E  0100               	movlb	0	; () banked
 14817  001A30  6F8D               	movwf	(??___flmul+2)& (0+255),b
 14818  001A32  0E7F               	movlw	127
 14819  001A34  0100               	movlb	0	; () banked
 14820  001A36  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
 14821  001A38  0100               	movlb	0	; () banked
 14822  001A3A  6F8E               	movwf	(??___flmul+3)& (0+255),b
 14823  001A3C  0100               	movlb	0	; () banked
 14824  001A3E  518B               	movf	??___flmul& (0+255),w,b
 14825  001A40  0100               	movlb	0	; () banked
 14826  001A42  118C               	iorwf	(??___flmul+1)& (0+255),w,b
 14827  001A44  0100               	movlb	0	; () banked
 14828  001A46  118D               	iorwf	(??___flmul+2)& (0+255),w,b
 14829  001A48  0100               	movlb	0	; () banked
 14830  001A4A  118E               	iorwf	(??___flmul+3)& (0+255),w,b
 14831  001A4C  A4D8               	btfss	status,2,c
 14832  001A4E  D003               	goto	l7538
 14833                           
 14834                           ; BSR set to: 0
 14835                           
 14836                           ; BSR set to: 0
 14837  001A50  0100               	movlb	0	; () banked
 14838  001A52  A196               	btfss	___flmul@prod& (0+255),0,b
 14839  001A54  D003               	goto	l1437
 14840  001A56                     l7538:
 14841                           
 14842                           ; BSR set to: 0
 14843  001A56  0E01               	movlw	1
 14844  001A58  0100               	movlb	0	; () banked
 14845  001A5A  6F90               	movwf	___flmul@aexp& (0+255),b
 14846  001A5C                     l1437:
 14847                           
 14848                           ; BSR set to: 0
 14849  001A5C  0100               	movlb	0	; () banked
 14850  001A5E  5190               	movf	___flmul@aexp& (0+255),w,b
 14851  001A60  0100               	movlb	0	; () banked
 14852  001A62  B4D8               	btfsc	status,2,c
 14853  001A64  D023               	goto	l7548
 14854                           
 14855                           ; BSR set to: 0
 14856  001A66  0E01               	movlw	1
 14857  001A68  0100               	movlb	0	; () banked
 14858  001A6A  2796               	addwf	___flmul@prod& (0+255),f,b
 14859  001A6C  0E00               	movlw	0
 14860  001A6E  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14861  001A70  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14862  001A72  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14863                           
 14864                           ; BSR set to: 0
 14865  001A74  0100               	movlb	0	; () banked
 14866  001A76  A199               	btfss	(___flmul@prod+3)& (0+255),0,b
 14867  001A78  D019               	goto	l7548
 14868                           
 14869                           ; BSR set to: 0
 14870  001A7A  C096  F08B         	movff	___flmul@prod,??___flmul
 14871  001A7E  C097  F08C         	movff	___flmul@prod+1,??___flmul+1
 14872  001A82  C098  F08D         	movff	___flmul@prod+2,??___flmul+2
 14873  001A86  C099  F08E         	movff	___flmul@prod+3,??___flmul+3
 14874  001A8A  0100               	movlb	0	; () banked
 14875  001A8C  358E               	rlcf	(??___flmul+3)& (0+255),w,b
 14876  001A8E  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 14877  001A90  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 14878  001A92  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 14879  001A94  338B               	rrcf	??___flmul& (0+255),f,b
 14880  001A96  C08B  F096         	movff	??___flmul,___flmul@prod
 14881  001A9A  C08C  F097         	movff	??___flmul+1,___flmul@prod+1
 14882  001A9E  C08D  F098         	movff	??___flmul+2,___flmul@prod+2
 14883  001AA2  C08E  F099         	movff	??___flmul+3,___flmul@prod+3
 14884                           
 14885                           ; BSR set to: 0
 14886  001AA6  0100               	movlb	0	; () banked
 14887  001AA8  4B9A               	infsnz	___flmul@temp& (0+255),f,b
 14888  001AAA  2B9B               	incf	(___flmul@temp+1)& (0+255),f,b
 14889  001AAC                     l7548:
 14890                           
 14891                           ; BSR set to: 0
 14892  001AAC  0100               	movlb	0	; () banked
 14893  001AAE  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14894  001AB0  D010               	goto	l7552
 14895  001AB2  0100               	movlb	0	; () banked
 14896  001AB4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14897  001AB6  E104               	bnz	u9150
 14898  001AB8  0100               	movlb	0	; () banked
 14899  001ABA  299A               	incf	___flmul@temp& (0+255),w,b
 14900  001ABC  A0D8               	btfss	status,0,c
 14901  001ABE  D009               	goto	l7552
 14902  001AC0                     u9150:
 14903                           
 14904                           ; BSR set to: 0
 14905  001AC0  0E00               	movlw	0
 14906  001AC2  0100               	movlb	0	; () banked
 14907  001AC4  6F96               	movwf	___flmul@prod& (0+255),b
 14908  001AC6  0E00               	movlw	0
 14909  001AC8  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 14910  001ACA  0E80               	movlw	128
 14911  001ACC  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 14912  001ACE  0E7F               	movlw	127
 14913  001AD0  D02B               	goto	L9
 14914  001AD2                     l7552:
 14915                           
 14916                           ; BSR set to: 0
 14917  001AD2  0100               	movlb	0	; () banked
 14918  001AD4  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 14919  001AD6  D007               	goto	l7554
 14920  001AD8  0100               	movlb	0	; () banked
 14921  001ADA  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14922  001ADC  E111               	bnz	l1445
 14923  001ADE  0100               	movlb	0	; () banked
 14924  001AE0  059A               	decf	___flmul@temp& (0+255),w,b
 14925  001AE2  B0D8               	btfsc	status,0,c
 14926  001AE4  D00D               	goto	l1445
 14927  001AE6                     l7554:
 14928                           
 14929                           ; BSR set to: 0
 14930  001AE6  0E00               	movlw	0
 14931  001AE8  0100               	movlb	0	; () banked
 14932  001AEA  6F96               	movwf	___flmul@prod& (0+255),b
 14933  001AEC  0E00               	movlw	0
 14934  001AEE  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 14935  001AF0  0E00               	movlw	0
 14936  001AF2  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 14937  001AF4  0E00               	movlw	0
 14938  001AF6  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 14939  001AF8  0E00               	movlw	0
 14940  001AFA  0100               	movlb	0	; () banked
 14941  001AFC  6F8F               	movwf	___flmul@sign& (0+255),b
 14942  001AFE  D015               	goto	l7564
 14943  001B00                     l1445:
 14944                           
 14945                           ; BSR set to: 0
 14946  001B00  C09A  F095         	movff	___flmul@temp,___flmul@bexp
 14947                           
 14948                           ; BSR set to: 0
 14949  001B04  0EFF               	movlw	255
 14950  001B06  0100               	movlb	0	; () banked
 14951  001B08  1796               	andwf	___flmul@prod& (0+255),f,b
 14952  001B0A  0EFF               	movlw	255
 14953  001B0C  1797               	andwf	(___flmul@prod+1)& (0+255),f,b
 14954  001B0E  0E7F               	movlw	127
 14955  001B10  1798               	andwf	(___flmul@prod+2)& (0+255),f,b
 14956  001B12  0E00               	movlw	0
 14957  001B14  1799               	andwf	(___flmul@prod+3)& (0+255),f,b
 14958                           
 14959                           ; BSR set to: 0
 14960  001B16  0100               	movlb	0	; () banked
 14961  001B18  A195               	btfss	___flmul@bexp& (0+255),0,b
 14962  001B1A  D002               	goto	l7562
 14963                           
 14964                           ; BSR set to: 0
 14965  001B1C  0100               	movlb	0	; () banked
 14966  001B1E  8F98               	bsf	(___flmul@prod+2)& (0+255),7,b
 14967  001B20                     l7562:
 14968                           
 14969                           ; BSR set to: 0
 14970  001B20  0100               	movlb	0	; () banked
 14971  001B22  90D8               	bcf	status,0,c
 14972  001B24  3195               	rrcf	___flmul@bexp& (0+255),w,b
 14973  001B26  0100               	movlb	0	; () banked
 14974  001B28                     L9:
 14975  001B28  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 14976  001B2A                     l7564:
 14977                           
 14978                           ; BSR set to: 0
 14979  001B2A  0100               	movlb	0	; () banked
 14980  001B2C  518F               	movf	___flmul@sign& (0+255),w,b
 14981  001B2E  0100               	movlb	0	; () banked
 14982  001B30  1399               	iorwf	(___flmul@prod+3)& (0+255),f,b
 14983                           
 14984                           ; BSR set to: 0
 14985  001B32  C096  F083         	movff	___flmul@prod,?___flmul
 14986  001B36  C097  F084         	movff	___flmul@prod+1,?___flmul+1
 14987  001B3A  C098  F085         	movff	___flmul@prod+2,?___flmul+2
 14988  001B3E  C099  F086         	movff	___flmul@prod+3,?___flmul+3
 14989  001B42  0012               	return	
 14990  001B44                     __end_of___flmul:
 14991                           	opt stack 0
 14992                           tblptru	equ	0xFF8
 14993                           tblptrh	equ	0xFF7
 14994                           tblptrl	equ	0xFF6
 14995                           tablat	equ	0xFF5
 14996                           prodh	equ	0xFF4
 14997                           prodl	equ	0xFF3
 14998                           intcon	equ	0xFF2
 14999                           postinc0	equ	0xFEE
 15000                           wreg	equ	0xFE8
 15001                           postdec1	equ	0xFE5
 15002                           fsr1l	equ	0xFE1
 15003                           indf2	equ	0xFDF
 15004                           postinc2	equ	0xFDE
 15005                           postdec2	equ	0xFDD
 15006                           fsr2h	equ	0xFDA
 15007                           fsr2l	equ	0xFD9
 15008                           status	equ	0xFD8
 15009                           
 15010 ;; *************** function ___fldiv *****************
 15011 ;; Defined at:
 15012 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 15013 ;; Parameters:    Size  Location     Type
 15014 ;;  b               4   21[BANK0 ] unsigned char 
 15015 ;;  a               4   25[BANK0 ] unsigned char 
 15016 ;; Auto vars:     Size  Location     Type
 15017 ;;  grs             4   40[BANK0 ] unsigned long 
 15018 ;;  rem             4   34[BANK0 ] unsigned long 
 15019 ;;  new_exp         2   38[BANK0 ] int 
 15020 ;;  aexp            1   45[BANK0 ] unsigned char 
 15021 ;;  bexp            1   44[BANK0 ] unsigned char 
 15022 ;;  sign            1   33[BANK0 ] unsigned char 
 15023 ;; Return value:  Size  Location     Type
 15024 ;;                  4   21[BANK0 ] unsigned char 
 15025 ;; Registers used:
 15026 ;;		wreg, status,2, status,0
 15027 ;; Tracked objects:
 15028 ;;		On entry : 0/0
 15029 ;;		On exit  : 0/0
 15030 ;;		Unchanged: 0/0
 15031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15032 ;;      Params:         0       8       0       0       0       0       0
 15033 ;;      Locals:         0      13       0       0       0       0       0
 15034 ;;      Temps:          0       4       0       0       0       0       0
 15035 ;;      Totals:         0      25       0       0       0       0       0
 15036 ;;Total ram usage:       25 bytes
 15037 ;; Hardware stack levels used:    1
 15038 ;; Hardware stack levels required when called:    8
 15039 ;; This function calls:
 15040 ;;		Nothing
 15041 ;; This function is called by:
 15042 ;;		_calcSysVars
 15043 ;;		_preAutoCal
 15044 ;;		_autoCal
 15045 ;; This function uses a non-reentrant model
 15046 ;;
 15047                           
 15048                           	psect	text51
 15049  001B44                     __ptext51:
 15050                           	opt stack 0
 15051  001B44                     ___fldiv:
 15052                           	opt stack 17
 15053                           
 15054                           ; BSR set to: 0
 15055                           ;incstack = 0
 15056  001B44  0100               	movlb	0	; () banked
 15057  001B46  5178               	movf	(___fldiv@b+3)& (0+255),w,b
 15058  001B48  0B80               	andlw	128
 15059  001B4A  0100               	movlb	0	; () banked
 15060  001B4C  6F81               	movwf	___fldiv@sign& (0+255),b
 15061  001B4E  0100               	movlb	0	; () banked
 15062  001B50  5178               	movf	(___fldiv@b+3)& (0+255),w,b
 15063  001B52  2578               	addwf	(___fldiv@b+3)& (0+255),w,b
 15064  001B54  0100               	movlb	0	; () banked
 15065  001B56  6F8C               	movwf	___fldiv@bexp& (0+255),b
 15066                           
 15067                           ; BSR set to: 0
 15068  001B58  0100               	movlb	0	; () banked
 15069  001B5A  AF77               	btfss	(___fldiv@b+2)& (0+255),7,b
 15070  001B5C  D002               	goto	l4554
 15071                           
 15072                           ; BSR set to: 0
 15073  001B5E  0100               	movlb	0	; () banked
 15074  001B60  818C               	bsf	___fldiv@bexp& (0+255),0,b
 15075  001B62                     l4554:
 15076                           
 15077                           ; BSR set to: 0
 15078  001B62  0100               	movlb	0	; () banked
 15079  001B64  518C               	movf	___fldiv@bexp& (0+255),w,b
 15080  001B66  0100               	movlb	0	; () banked
 15081  001B68  B4D8               	btfsc	status,2,c
 15082  001B6A  D012               	goto	l4564
 15083                           
 15084                           ; BSR set to: 0
 15085  001B6C  0100               	movlb	0	; () banked
 15086  001B6E  298C               	incf	___fldiv@bexp& (0+255),w,b
 15087  001B70  A4D8               	btfss	status,2,c
 15088  001B72  D009               	goto	l4560
 15089                           
 15090                           ; BSR set to: 0
 15091  001B74  0E00               	movlw	0
 15092  001B76  0100               	movlb	0	; () banked
 15093  001B78  6F75               	movwf	___fldiv@b& (0+255),b
 15094  001B7A  0E00               	movlw	0
 15095  001B7C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15096  001B7E  0E00               	movlw	0
 15097  001B80  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15098  001B82  0E00               	movlw	0
 15099  001B84  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15100  001B86                     l4560:
 15101                           
 15102                           ; BSR set to: 0
 15103  001B86  0100               	movlb	0	; () banked
 15104  001B88  8F77               	bsf	(___fldiv@b+2)& (0+255),7,b
 15105                           
 15106                           ; BSR set to: 0
 15107  001B8A  0E00               	movlw	0
 15108  001B8C  0100               	movlb	0	; () banked
 15109  001B8E  D008               	goto	L10
 15110  001B90                     l4564:
 15111                           
 15112                           ; BSR set to: 0
 15113  001B90  0E00               	movlw	0
 15114  001B92  0100               	movlb	0	; () banked
 15115  001B94  6F75               	movwf	___fldiv@b& (0+255),b
 15116  001B96  0E00               	movlw	0
 15117  001B98  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15118  001B9A  0E00               	movlw	0
 15119  001B9C  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15120  001B9E  0E00               	movlw	0
 15121  001BA0                     L10:
 15122  001BA0  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15123                           
 15124                           ; BSR set to: 0
 15125                           
 15126                           ; BSR set to: 0
 15127  001BA2  0100               	movlb	0	; () banked
 15128  001BA4  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15129  001BA6  0B80               	andlw	128
 15130  001BA8  0100               	movlb	0	; () banked
 15131  001BAA  1B81               	xorwf	___fldiv@sign& (0+255),f,b
 15132                           
 15133                           ; BSR set to: 0
 15134  001BAC  0100               	movlb	0	; () banked
 15135  001BAE  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15136  001BB0  257C               	addwf	(___fldiv@a+3)& (0+255),w,b
 15137  001BB2  0100               	movlb	0	; () banked
 15138  001BB4  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15139                           
 15140                           ; BSR set to: 0
 15141  001BB6  0100               	movlb	0	; () banked
 15142  001BB8  AF7B               	btfss	(___fldiv@a+2)& (0+255),7,b
 15143  001BBA  D002               	goto	l4574
 15144                           
 15145                           ; BSR set to: 0
 15146  001BBC  0100               	movlb	0	; () banked
 15147  001BBE  818D               	bsf	___fldiv@aexp& (0+255),0,b
 15148  001BC0                     l4574:
 15149                           
 15150                           ; BSR set to: 0
 15151  001BC0  0100               	movlb	0	; () banked
 15152  001BC2  518D               	movf	___fldiv@aexp& (0+255),w,b
 15153  001BC4  0100               	movlb	0	; () banked
 15154  001BC6  B4D8               	btfsc	status,2,c
 15155  001BC8  D012               	goto	l4584
 15156                           
 15157                           ; BSR set to: 0
 15158  001BCA  0100               	movlb	0	; () banked
 15159  001BCC  298D               	incf	___fldiv@aexp& (0+255),w,b
 15160  001BCE  A4D8               	btfss	status,2,c
 15161  001BD0  D009               	goto	l4580
 15162                           
 15163                           ; BSR set to: 0
 15164  001BD2  0E00               	movlw	0
 15165  001BD4  0100               	movlb	0	; () banked
 15166  001BD6  6F79               	movwf	___fldiv@a& (0+255),b
 15167  001BD8  0E00               	movlw	0
 15168  001BDA  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 15169  001BDC  0E00               	movlw	0
 15170  001BDE  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 15171  001BE0  0E00               	movlw	0
 15172  001BE2  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 15173  001BE4                     l4580:
 15174                           
 15175                           ; BSR set to: 0
 15176  001BE4  0100               	movlb	0	; () banked
 15177  001BE6  8F7B               	bsf	(___fldiv@a+2)& (0+255),7,b
 15178                           
 15179                           ; BSR set to: 0
 15180  001BE8  0E00               	movlw	0
 15181  001BEA  0100               	movlb	0	; () banked
 15182  001BEC  D008               	goto	L11
 15183  001BEE                     l4584:
 15184                           
 15185                           ; BSR set to: 0
 15186  001BEE  0E00               	movlw	0
 15187  001BF0  0100               	movlb	0	; () banked
 15188  001BF2  6F79               	movwf	___fldiv@a& (0+255),b
 15189  001BF4  0E00               	movlw	0
 15190  001BF6  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 15191  001BF8  0E00               	movlw	0
 15192  001BFA  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 15193  001BFC  0E00               	movlw	0
 15194  001BFE                     L11:
 15195  001BFE  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 15196                           
 15197                           ; BSR set to: 0
 15198                           
 15199                           ; BSR set to: 0
 15200  001C00  0100               	movlb	0	; () banked
 15201  001C02  5179               	movf	___fldiv@a& (0+255),w,b
 15202  001C04  0100               	movlb	0	; () banked
 15203  001C06  117A               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15204  001C08  0100               	movlb	0	; () banked
 15205  001C0A  117B               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15206  001C0C  0100               	movlb	0	; () banked
 15207  001C0E  117C               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15208  001C10  A4D8               	btfss	status,2,c
 15209  001C12  D017               	goto	l4596
 15210                           
 15211                           ; BSR set to: 0
 15212  001C14  0E00               	movlw	0
 15213  001C16  0100               	movlb	0	; () banked
 15214  001C18  6F75               	movwf	___fldiv@b& (0+255),b
 15215  001C1A  0E00               	movlw	0
 15216  001C1C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15217  001C1E  0E00               	movlw	0
 15218  001C20  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15219  001C22  0E00               	movlw	0
 15220  001C24  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15221                           
 15222                           ; BSR set to: 0
 15223  001C26  0100               	movlb	0	; () banked
 15224  001C28  0E80               	movlw	128
 15225  001C2A  1377               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15226  001C2C  0E7F               	movlw	127
 15227  001C2E  1378               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15228                           
 15229                           ; BSR set to: 0
 15230  001C30  C075  F075         	movff	___fldiv@b,?___fldiv
 15231  001C34  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15232  001C38  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15233  001C3C  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15234                           
 15235                           ; BSR set to: 0
 15236  001C40  0012               	return	
 15237  001C42                     l4596:
 15238                           
 15239                           ; BSR set to: 0
 15240  001C42  0100               	movlb	0	; () banked
 15241  001C44  518C               	movf	___fldiv@bexp& (0+255),w,b
 15242  001C46  0100               	movlb	0	; () banked
 15243  001C48  A4D8               	btfss	status,2,c
 15244  001C4A  D012               	goto	l4604
 15245                           
 15246                           ; BSR set to: 0
 15247  001C4C  0E00               	movlw	0
 15248  001C4E  0100               	movlb	0	; () banked
 15249  001C50  6F75               	movwf	___fldiv@b& (0+255),b
 15250  001C52  0E00               	movlw	0
 15251  001C54  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15252  001C56  0E00               	movlw	0
 15253  001C58  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15254  001C5A  0E00               	movlw	0
 15255  001C5C  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15256                           
 15257                           ; BSR set to: 0
 15258  001C5E  C075  F075         	movff	___fldiv@b,?___fldiv
 15259  001C62  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15260  001C66  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15261  001C6A  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15262                           
 15263                           ; BSR set to: 0
 15264  001C6E  0012               	return	
 15265  001C70                     l4604:
 15266                           
 15267                           ; BSR set to: 0
 15268  001C70  0100               	movlb	0	; () banked
 15269  001C72  518D               	movf	___fldiv@aexp& (0+255),w,b
 15270  001C74  0100               	movlb	0	; () banked
 15271  001C76  6F7D               	movwf	??___fldiv& (0+255),b
 15272  001C78  6B7E               	clrf	(??___fldiv+1)& (0+255),b
 15273  001C7A  0100               	movlb	0	; () banked
 15274  001C7C  1F7D               	comf	??___fldiv& (0+255),f,b
 15275  001C7E  1F7E               	comf	(??___fldiv+1)& (0+255),f,b
 15276  001C80  4B7D               	infsnz	??___fldiv& (0+255),f,b
 15277  001C82  2B7E               	incf	(??___fldiv+1)& (0+255),f,b
 15278  001C84  0100               	movlb	0	; () banked
 15279  001C86  518C               	movf	___fldiv@bexp& (0+255),w,b
 15280  001C88  0100               	movlb	0	; () banked
 15281  001C8A  6F7F               	movwf	(??___fldiv+2)& (0+255),b
 15282  001C8C  6B80               	clrf	(??___fldiv+3)& (0+255),b
 15283  001C8E  0100               	movlb	0	; () banked
 15284  001C90  517D               	movf	??___fldiv& (0+255),w,b
 15285  001C92  0100               	movlb	0	; () banked
 15286  001C94  277F               	addwf	(??___fldiv+2)& (0+255),f,b
 15287  001C96  0100               	movlb	0	; () banked
 15288  001C98  517E               	movf	(??___fldiv+1)& (0+255),w,b
 15289  001C9A  0100               	movlb	0	; () banked
 15290  001C9C  2380               	addwfc	(??___fldiv+3)& (0+255),f,b
 15291  001C9E  0E7F               	movlw	127
 15292  001CA0  0100               	movlb	0	; () banked
 15293  001CA2  257F               	addwf	(??___fldiv+2)& (0+255),w,b
 15294  001CA4  0100               	movlb	0	; () banked
 15295  001CA6  6F86               	movwf	___fldiv@new_exp& (0+255),b
 15296  001CA8  0E00               	movlw	0
 15297  001CAA  0100               	movlb	0	; () banked
 15298  001CAC  2180               	addwfc	(??___fldiv+3)& (0+255),w,b
 15299  001CAE  0100               	movlb	0	; () banked
 15300  001CB0  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15301                           
 15302                           ; BSR set to: 0
 15303  001CB2  C075  F082         	movff	___fldiv@b,___fldiv@rem
 15304  001CB6  C076  F083         	movff	___fldiv@b+1,___fldiv@rem+1
 15305  001CBA  C077  F084         	movff	___fldiv@b+2,___fldiv@rem+2
 15306  001CBE  C078  F085         	movff	___fldiv@b+3,___fldiv@rem+3
 15307                           
 15308                           ; BSR set to: 0
 15309  001CC2  0E00               	movlw	0
 15310  001CC4  0100               	movlb	0	; () banked
 15311  001CC6  6F75               	movwf	___fldiv@b& (0+255),b
 15312  001CC8  0E00               	movlw	0
 15313  001CCA  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15314  001CCC  0E00               	movlw	0
 15315  001CCE  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15316  001CD0  0E00               	movlw	0
 15317  001CD2  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15318                           
 15319                           ; BSR set to: 0
 15320  001CD4  0E00               	movlw	0
 15321  001CD6  0100               	movlb	0	; () banked
 15322  001CD8  6F88               	movwf	___fldiv@grs& (0+255),b
 15323  001CDA  0E00               	movlw	0
 15324  001CDC  6F89               	movwf	(___fldiv@grs+1)& (0+255),b
 15325  001CDE  0E00               	movlw	0
 15326  001CE0  6F8A               	movwf	(___fldiv@grs+2)& (0+255),b
 15327  001CE2  0E00               	movlw	0
 15328  001CE4  6F8B               	movwf	(___fldiv@grs+3)& (0+255),b
 15329                           
 15330                           ; BSR set to: 0
 15331  001CE6  0E00               	movlw	0
 15332  001CE8  0100               	movlb	0	; () banked
 15333  001CEA  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15334  001CEC  D042               	goto	l1398
 15335  001CEE                     l4614:
 15336                           
 15337                           ; BSR set to: 0
 15338  001CEE  0100               	movlb	0	; () banked
 15339  001CF0  518D               	movf	___fldiv@aexp& (0+255),w,b
 15340  001CF2  0100               	movlb	0	; () banked
 15341  001CF4  B4D8               	btfsc	status,2,c
 15342  001CF6  D017               	goto	l4622
 15343                           
 15344                           ; BSR set to: 0
 15345  001CF8  0100               	movlb	0	; () banked
 15346  001CFA  90D8               	bcf	status,0,c
 15347  001CFC  3782               	rlcf	___fldiv@rem& (0+255),f,b
 15348  001CFE  3783               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15349  001D00  3784               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15350  001D02  3785               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15351  001D04  0100               	movlb	0	; () banked
 15352  001D06  90D8               	bcf	status,0,c
 15353  001D08  3775               	rlcf	___fldiv@b& (0+255),f,b
 15354  001D0A  3776               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15355  001D0C  3777               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15356  001D0E  3778               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15357                           
 15358                           ; BSR set to: 0
 15359  001D10  0100               	movlb	0	; () banked
 15360  001D12  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15361  001D14  D002               	goto	l1401
 15362                           
 15363                           ; BSR set to: 0
 15364  001D16  0100               	movlb	0	; () banked
 15365  001D18  8175               	bsf	___fldiv@b& (0+255),0,b
 15366  001D1A                     l1401:
 15367                           
 15368                           ; BSR set to: 0
 15369  001D1A  0100               	movlb	0	; () banked
 15370  001D1C  90D8               	bcf	status,0,c
 15371  001D1E  3788               	rlcf	___fldiv@grs& (0+255),f,b
 15372  001D20  3789               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15373  001D22  378A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15374  001D24  378B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15375  001D26                     l4622:
 15376                           
 15377                           ; BSR set to: 0
 15378  001D26  0100               	movlb	0	; () banked
 15379  001D28  5179               	movf	___fldiv@a& (0+255),w,b
 15380  001D2A  0100               	movlb	0	; () banked
 15381  001D2C  5D82               	subwf	___fldiv@rem& (0+255),w,b
 15382  001D2E  0100               	movlb	0	; () banked
 15383  001D30  517A               	movf	(___fldiv@a+1)& (0+255),w,b
 15384  001D32  0100               	movlb	0	; () banked
 15385  001D34  5983               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15386  001D36  0100               	movlb	0	; () banked
 15387  001D38  517B               	movf	(___fldiv@a+2)& (0+255),w,b
 15388  001D3A  0100               	movlb	0	; () banked
 15389  001D3C  5984               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15390  001D3E  0100               	movlb	0	; () banked
 15391  001D40  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15392  001D42  0100               	movlb	0	; () banked
 15393  001D44  5985               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15394  001D46  A0D8               	btfss	status,0,c
 15395  001D48  D012               	goto	l4628
 15396                           
 15397                           ; BSR set to: 0
 15398  001D4A  0100               	movlb	0	; () banked
 15399  001D4C  8D8B               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15400                           
 15401                           ; BSR set to: 0
 15402  001D4E  0100               	movlb	0	; () banked
 15403  001D50  5179               	movf	___fldiv@a& (0+255),w,b
 15404  001D52  0100               	movlb	0	; () banked
 15405  001D54  5F82               	subwf	___fldiv@rem& (0+255),f,b
 15406  001D56  0100               	movlb	0	; () banked
 15407  001D58  517A               	movf	(___fldiv@a+1)& (0+255),w,b
 15408  001D5A  0100               	movlb	0	; () banked
 15409  001D5C  5B83               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15410  001D5E  0100               	movlb	0	; () banked
 15411  001D60  517B               	movf	(___fldiv@a+2)& (0+255),w,b
 15412  001D62  0100               	movlb	0	; () banked
 15413  001D64  5B84               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15414  001D66  0100               	movlb	0	; () banked
 15415  001D68  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15416  001D6A  0100               	movlb	0	; () banked
 15417  001D6C  5B85               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15418  001D6E                     l4628:
 15419                           
 15420                           ; BSR set to: 0
 15421  001D6E  0100               	movlb	0	; () banked
 15422  001D70  2B8D               	incf	___fldiv@aexp& (0+255),f,b
 15423  001D72                     l1398:
 15424                           
 15425                           ; BSR set to: 0
 15426  001D72  0E19               	movlw	25
 15427  001D74  0100               	movlb	0	; () banked
 15428  001D76  658D               	cpfsgt	___fldiv@aexp& (0+255),b
 15429  001D78  D7BA               	goto	l4614
 15430                           
 15431                           ; BSR set to: 0
 15432                           
 15433                           ; BSR set to: 0
 15434  001D7A  0100               	movlb	0	; () banked
 15435  001D7C  5182               	movf	___fldiv@rem& (0+255),w,b
 15436  001D7E  0100               	movlb	0	; () banked
 15437  001D80  1183               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15438  001D82  0100               	movlb	0	; () banked
 15439  001D84  1184               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15440  001D86  0100               	movlb	0	; () banked
 15441  001D88  1185               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15442  001D8A  B4D8               	btfsc	status,2,c
 15443  001D8C  D018               	goto	l4640
 15444                           
 15445                           ; BSR set to: 0
 15446  001D8E  0100               	movlb	0	; () banked
 15447  001D90  8188               	bsf	___fldiv@grs& (0+255),0,b
 15448                           
 15449                           ; BSR set to: 0
 15450  001D92  D015               	goto	l4640
 15451  001D94                     l4634:
 15452                           
 15453                           ; BSR set to: 0
 15454  001D94  0100               	movlb	0	; () banked
 15455  001D96  90D8               	bcf	status,0,c
 15456  001D98  3775               	rlcf	___fldiv@b& (0+255),f,b
 15457  001D9A  3776               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15458  001D9C  3777               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15459  001D9E  3778               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15460                           
 15461                           ; BSR set to: 0
 15462  001DA0  0100               	movlb	0	; () banked
 15463  001DA2  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15464  001DA4  D002               	goto	l1407
 15465                           
 15466                           ; BSR set to: 0
 15467  001DA6  0100               	movlb	0	; () banked
 15468  001DA8  8175               	bsf	___fldiv@b& (0+255),0,b
 15469  001DAA                     l1407:
 15470                           
 15471                           ; BSR set to: 0
 15472  001DAA  0100               	movlb	0	; () banked
 15473  001DAC  90D8               	bcf	status,0,c
 15474  001DAE  3788               	rlcf	___fldiv@grs& (0+255),f,b
 15475  001DB0  3789               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15476  001DB2  378A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15477  001DB4  378B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15478  001DB6  0100               	movlb	0	; () banked
 15479  001DB8  0786               	decf	___fldiv@new_exp& (0+255),f,b
 15480  001DBA  A0D8               	btfss	status,0,c
 15481  001DBC  0787               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15482  001DBE                     l4640:
 15483                           
 15484                           ; BSR set to: 0
 15485  001DBE  0100               	movlb	0	; () banked
 15486  001DC0  AF77               	btfss	(___fldiv@b+2)& (0+255),7,b
 15487  001DC2  D7E8               	goto	l4634
 15488                           
 15489                           ; BSR set to: 0
 15490                           
 15491                           ; BSR set to: 0
 15492  001DC4  0E00               	movlw	0
 15493  001DC6  0100               	movlb	0	; () banked
 15494  001DC8  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15495                           
 15496                           ; BSR set to: 0
 15497  001DCA  0100               	movlb	0	; () banked
 15498  001DCC  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15499  001DCE  D024               	goto	l1409
 15500                           
 15501                           ; BSR set to: 0
 15502  001DD0  0EFF               	movlw	255
 15503  001DD2  0100               	movlb	0	; () banked
 15504  001DD4  1588               	andwf	___fldiv@grs& (0+255),w,b
 15505  001DD6  0100               	movlb	0	; () banked
 15506  001DD8  6F7D               	movwf	??___fldiv& (0+255),b
 15507  001DDA  0EFF               	movlw	255
 15508  001DDC  0100               	movlb	0	; () banked
 15509  001DDE  1589               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15510  001DE0  0100               	movlb	0	; () banked
 15511  001DE2  6F7E               	movwf	(??___fldiv+1)& (0+255),b
 15512  001DE4  0EFF               	movlw	255
 15513  001DE6  0100               	movlb	0	; () banked
 15514  001DE8  158A               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15515  001DEA  0100               	movlb	0	; () banked
 15516  001DEC  6F7F               	movwf	(??___fldiv+2)& (0+255),b
 15517  001DEE  0E7F               	movlw	127
 15518  001DF0  0100               	movlb	0	; () banked
 15519  001DF2  158B               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15520  001DF4  0100               	movlb	0	; () banked
 15521  001DF6  6F80               	movwf	(??___fldiv+3)& (0+255),b
 15522  001DF8  0100               	movlb	0	; () banked
 15523  001DFA  517D               	movf	??___fldiv& (0+255),w,b
 15524  001DFC  0100               	movlb	0	; () banked
 15525  001DFE  117E               	iorwf	(??___fldiv+1)& (0+255),w,b
 15526  001E00  0100               	movlb	0	; () banked
 15527  001E02  117F               	iorwf	(??___fldiv+2)& (0+255),w,b
 15528  001E04  0100               	movlb	0	; () banked
 15529  001E06  1180               	iorwf	(??___fldiv+3)& (0+255),w,b
 15530  001E08  A4D8               	btfss	status,2,c
 15531  001E0A  D003               	goto	l4650
 15532                           
 15533                           ; BSR set to: 0
 15534                           
 15535                           ; BSR set to: 0
 15536  001E0C  0100               	movlb	0	; () banked
 15537  001E0E  A175               	btfss	___fldiv@b& (0+255),0,b
 15538  001E10  D003               	goto	l1409
 15539  001E12                     l4650:
 15540                           
 15541                           ; BSR set to: 0
 15542  001E12  0E01               	movlw	1
 15543  001E14  0100               	movlb	0	; () banked
 15544  001E16  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15545  001E18                     l1409:
 15546                           
 15547                           ; BSR set to: 0
 15548  001E18  0100               	movlb	0	; () banked
 15549  001E1A  518D               	movf	___fldiv@aexp& (0+255),w,b
 15550  001E1C  0100               	movlb	0	; () banked
 15551  001E1E  B4D8               	btfsc	status,2,c
 15552  001E20  D023               	goto	l4660
 15553                           
 15554                           ; BSR set to: 0
 15555  001E22  0E01               	movlw	1
 15556  001E24  0100               	movlb	0	; () banked
 15557  001E26  2775               	addwf	___fldiv@b& (0+255),f,b
 15558  001E28  0E00               	movlw	0
 15559  001E2A  2376               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15560  001E2C  2377               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15561  001E2E  2378               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15562                           
 15563                           ; BSR set to: 0
 15564  001E30  0100               	movlb	0	; () banked
 15565  001E32  A178               	btfss	(___fldiv@b+3)& (0+255),0,b
 15566  001E34  D019               	goto	l4660
 15567                           
 15568                           ; BSR set to: 0
 15569  001E36  C075  F07D         	movff	___fldiv@b,??___fldiv
 15570  001E3A  C076  F07E         	movff	___fldiv@b+1,??___fldiv+1
 15571  001E3E  C077  F07F         	movff	___fldiv@b+2,??___fldiv+2
 15572  001E42  C078  F080         	movff	___fldiv@b+3,??___fldiv+3
 15573  001E46  0100               	movlb	0	; () banked
 15574  001E48  3580               	rlcf	(??___fldiv+3)& (0+255),w,b
 15575  001E4A  3380               	rrcf	(??___fldiv+3)& (0+255),f,b
 15576  001E4C  337F               	rrcf	(??___fldiv+2)& (0+255),f,b
 15577  001E4E  337E               	rrcf	(??___fldiv+1)& (0+255),f,b
 15578  001E50  337D               	rrcf	??___fldiv& (0+255),f,b
 15579  001E52  C07D  F075         	movff	??___fldiv,___fldiv@b
 15580  001E56  C07E  F076         	movff	??___fldiv+1,___fldiv@b+1
 15581  001E5A  C07F  F077         	movff	??___fldiv+2,___fldiv@b+2
 15582  001E5E  C080  F078         	movff	??___fldiv+3,___fldiv@b+3
 15583                           
 15584                           ; BSR set to: 0
 15585  001E62  0100               	movlb	0	; () banked
 15586  001E64  4B86               	infsnz	___fldiv@new_exp& (0+255),f,b
 15587  001E66  2B87               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15588  001E68                     l4660:
 15589                           
 15590                           ; BSR set to: 0
 15591  001E68  0100               	movlb	0	; () banked
 15592  001E6A  BF87               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15593  001E6C  D014               	goto	l4664
 15594  001E6E  0100               	movlb	0	; () banked
 15595  001E70  5187               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15596  001E72  E104               	bnz	u4790
 15597  001E74  0100               	movlb	0	; () banked
 15598  001E76  2986               	incf	___fldiv@new_exp& (0+255),w,b
 15599  001E78  A0D8               	btfss	status,0,c
 15600  001E7A  D00D               	goto	l4664
 15601  001E7C                     u4790:
 15602                           
 15603                           ; BSR set to: 0
 15604  001E7C  0E00               	movlw	0
 15605  001E7E  0100               	movlb	0	; () banked
 15606  001E80  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15607  001E82  6986               	setf	___fldiv@new_exp& (0+255),b
 15608  001E84  0E00               	movlw	0
 15609  001E86  0100               	movlb	0	; () banked
 15610  001E88  6F75               	movwf	___fldiv@b& (0+255),b
 15611  001E8A  0E00               	movlw	0
 15612  001E8C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15613  001E8E  0E00               	movlw	0
 15614  001E90  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15615  001E92  0E00               	movlw	0
 15616  001E94  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15617  001E96                     l4664:
 15618                           
 15619                           ; BSR set to: 0
 15620  001E96  0100               	movlb	0	; () banked
 15621  001E98  BF87               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15622  001E9A  D007               	goto	l4666
 15623  001E9C  0100               	movlb	0	; () banked
 15624  001E9E  5187               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15625  001EA0  E115               	bnz	l4668
 15626  001EA2  0100               	movlb	0	; () banked
 15627  001EA4  0586               	decf	___fldiv@new_exp& (0+255),w,b
 15628  001EA6  B0D8               	btfsc	status,0,c
 15629  001EA8  D011               	goto	l4668
 15630  001EAA                     l4666:
 15631                           
 15632                           ; BSR set to: 0
 15633  001EAA  0E00               	movlw	0
 15634  001EAC  0100               	movlb	0	; () banked
 15635  001EAE  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15636  001EB0  0E00               	movlw	0
 15637  001EB2  6F86               	movwf	___fldiv@new_exp& (0+255),b
 15638  001EB4  0E00               	movlw	0
 15639  001EB6  0100               	movlb	0	; () banked
 15640  001EB8  6F75               	movwf	___fldiv@b& (0+255),b
 15641  001EBA  0E00               	movlw	0
 15642  001EBC  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15643  001EBE  0E00               	movlw	0
 15644  001EC0  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15645  001EC2  0E00               	movlw	0
 15646  001EC4  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15647  001EC6  0E00               	movlw	0
 15648  001EC8  0100               	movlb	0	; () banked
 15649  001ECA  6F81               	movwf	___fldiv@sign& (0+255),b
 15650  001ECC                     l4668:
 15651                           
 15652                           ; BSR set to: 0
 15653  001ECC  C086  F08C         	movff	___fldiv@new_exp,___fldiv@bexp
 15654                           
 15655                           ; BSR set to: 0
 15656  001ED0  0100               	movlb	0	; () banked
 15657  001ED2  A18C               	btfss	___fldiv@bexp& (0+255),0,b
 15658  001ED4  D003               	goto	l4674
 15659                           
 15660                           ; BSR set to: 0
 15661  001ED6  0100               	movlb	0	; () banked
 15662  001ED8  8F77               	bsf	(___fldiv@b+2)& (0+255),7,b
 15663  001EDA  D002               	goto	l4676
 15664  001EDC                     l4674:
 15665                           
 15666                           ; BSR set to: 0
 15667  001EDC  0100               	movlb	0	; () banked
 15668  001EDE  9F77               	bcf	(___fldiv@b+2)& (0+255),7,b
 15669  001EE0                     l4676:
 15670                           
 15671                           ; BSR set to: 0
 15672  001EE0  0100               	movlb	0	; () banked
 15673  001EE2  90D8               	bcf	status,0,c
 15674  001EE4  318C               	rrcf	___fldiv@bexp& (0+255),w,b
 15675  001EE6  0100               	movlb	0	; () banked
 15676  001EE8  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15677                           
 15678                           ; BSR set to: 0
 15679  001EEA  0100               	movlb	0	; () banked
 15680  001EEC  5181               	movf	___fldiv@sign& (0+255),w,b
 15681  001EEE  0100               	movlb	0	; () banked
 15682  001EF0  1378               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15683                           
 15684                           ; BSR set to: 0
 15685  001EF2  C075  F075         	movff	___fldiv@b,?___fldiv
 15686  001EF6  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15687  001EFA  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15688  001EFE  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15689  001F02  0012               	return	
 15690  001F04                     __end_of___fldiv:
 15691                           	opt stack 0
 15692                           tblptru	equ	0xFF8
 15693                           tblptrh	equ	0xFF7
 15694                           tblptrl	equ	0xFF6
 15695                           tablat	equ	0xFF5
 15696                           prodh	equ	0xFF4
 15697                           prodl	equ	0xFF3
 15698                           intcon	equ	0xFF2
 15699                           postinc0	equ	0xFEE
 15700                           wreg	equ	0xFE8
 15701                           postdec1	equ	0xFE5
 15702                           fsr1l	equ	0xFE1
 15703                           indf2	equ	0xFDF
 15704                           postinc2	equ	0xFDE
 15705                           postdec2	equ	0xFDD
 15706                           fsr2h	equ	0xFDA
 15707                           fsr2l	equ	0xFD9
 15708                           status	equ	0xFD8
 15709                           
 15710 ;; *************** function _checkPass *****************
 15711 ;; Defined at:
 15712 ;;		line 13 in file "source/DisplayProtocol.h"
 15713 ;; Parameters:    Size  Location     Type
 15714 ;;		None
 15715 ;; Auto vars:     Size  Location     Type
 15716 ;;  i               2   26[BANK0 ] int 
 15717 ;;  passOK          1   25[BANK0 ] unsigned char 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  1    wreg      unsigned char 
 15720 ;; Registers used:
 15721 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15727 ;;      Params:         0       0       0       0       0       0       0
 15728 ;;      Locals:         0       3       0       0       0       0       0
 15729 ;;      Temps:          0       4       0       0       0       0       0
 15730 ;;      Totals:         0       7       0       0       0       0       0
 15731 ;;Total ram usage:        7 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    8
 15734 ;; This function calls:
 15735 ;;		Nothing
 15736 ;; This function is called by:
 15737 ;;		_pressENTER
 15738 ;; This function uses a non-reentrant model
 15739 ;;
 15740                           
 15741                           	psect	text52
 15742  00498E                     __ptext52:
 15743                           	opt stack 0
 15744  00498E                     _checkPass:
 15745                           	opt stack 20
 15746                           
 15747                           ;DisplayProtocol.h: 14: int i;
 15748                           ;DisplayProtocol.h: 15: char passOK = 0;
 15749                           
 15750                           ; BSR set to: 0
 15751                           ;incstack = 0
 15752  00498E  0E00               	movlw	0
 15753  004990  0100               	movlb	0	; () banked
 15754  004992  6F79               	movwf	checkPass@passOK& (0+255),b
 15755                           
 15756                           ;DisplayProtocol.h: 16: for (i = 0; i < 4; i++) {
 15757  004994  0E00               	movlw	0
 15758  004996  0100               	movlb	0	; () banked
 15759  004998  6F7B               	movwf	(checkPass@i+1)& (0+255),b
 15760  00499A  0E00               	movlw	0
 15761  00499C  6F7A               	movwf	checkPass@i& (0+255),b
 15762  00499E                     l6136:
 15763                           
 15764                           ; BSR set to: 0
 15765  00499E  0100               	movlb	0	; () banked
 15766  0049A0  BF7B               	btfsc	(checkPass@i+1)& (0+255),7,b
 15767  0049A2  D008               	goto	l6140
 15768  0049A4  0100               	movlb	0	; () banked
 15769  0049A6  517B               	movf	(checkPass@i+1)& (0+255),w,b
 15770  0049A8  E136               	bnz	l6150
 15771  0049AA  0E04               	movlw	4
 15772  0049AC  0100               	movlb	0	; () banked
 15773  0049AE  5D7A               	subwf	checkPass@i& (0+255),w,b
 15774  0049B0  B0D8               	btfsc	status,0,c
 15775  0049B2  D031               	goto	l6150
 15776  0049B4                     l6140:
 15777                           
 15778                           ; BSR set to: 0
 15779                           ;DisplayProtocol.h: 17: if (introducido[i] == contra[i])
 15780  0049B4  0E4B               	movlw	low _contra
 15781  0049B6  0100               	movlb	0	; () banked
 15782  0049B8  257A               	addwf	checkPass@i& (0+255),w,b
 15783  0049BA  6ED9               	movwf	fsr2l,c
 15784  0049BC  0E01               	movlw	high _contra
 15785  0049BE  0100               	movlb	0	; () banked
 15786  0049C0  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 15787  0049C2  6EDA               	movwf	fsr2h,c
 15788  0049C4  50DF               	movf	indf2,w,c
 15789  0049C6  0100               	movlb	0	; () banked
 15790  0049C8  6F75               	movwf	??_checkPass& (0+255),b
 15791  0049CA  6B76               	clrf	(??_checkPass+1)& (0+255),b
 15792  0049CC  0E35               	movlw	low _introducido
 15793  0049CE  0100               	movlb	0	; () banked
 15794  0049D0  257A               	addwf	checkPass@i& (0+255),w,b
 15795  0049D2  6ED9               	movwf	fsr2l,c
 15796  0049D4  0E01               	movlw	high _introducido
 15797  0049D6  0100               	movlb	0	; () banked
 15798  0049D8  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 15799  0049DA  6EDA               	movwf	fsr2h,c
 15800  0049DC  50DF               	movf	indf2,w,c
 15801  0049DE  0100               	movlb	0	; () banked
 15802  0049E0  6F77               	movwf	(??_checkPass+2)& (0+255),b
 15803  0049E2  6B78               	clrf	(??_checkPass+3)& (0+255),b
 15804  0049E4  BF77               	btfsc	(??_checkPass+2)& (0+255),7,b
 15805  0049E6  0778               	decf	(??_checkPass+3)& (0+255),f,b
 15806  0049E8  0100               	movlb	0	; () banked
 15807  0049EA  5175               	movf	??_checkPass& (0+255),w,b
 15808  0049EC  0100               	movlb	0	; () banked
 15809  0049EE  1977               	xorwf	(??_checkPass+2)& (0+255),w,b
 15810  0049F0  E10A               	bnz	l6144
 15811  0049F2  0100               	movlb	0	; () banked
 15812  0049F4  5176               	movf	(??_checkPass+1)& (0+255),w,b
 15813  0049F6  0100               	movlb	0	; () banked
 15814  0049F8  1978               	xorwf	(??_checkPass+3)& (0+255),w,b
 15815  0049FA  A4D8               	btfss	status,2,c
 15816  0049FC  D004               	goto	l6144
 15817                           
 15818                           ; BSR set to: 0
 15819                           ;DisplayProtocol.h: 18: passOK = 1;
 15820  0049FE  0E01               	movlw	1
 15821  004A00  0100               	movlb	0	; () banked
 15822  004A02  6F79               	movwf	checkPass@passOK& (0+255),b
 15823  004A04  D004               	goto	l6146
 15824  004A06                     l6144:
 15825                           
 15826                           ; BSR set to: 0
 15827                           ;DisplayProtocol.h: 19: else {
 15828                           ;DisplayProtocol.h: 20: passOK = 0;
 15829  004A06  0E00               	movlw	0
 15830  004A08  0100               	movlb	0	; () banked
 15831  004A0A  6F79               	movwf	checkPass@passOK& (0+255),b
 15832                           
 15833                           ;DisplayProtocol.h: 21: break;
 15834  004A0C  D004               	goto	l6150
 15835  004A0E                     l6146:
 15836                           
 15837                           ; BSR set to: 0
 15838  004A0E  0100               	movlb	0	; () banked
 15839  004A10  4B7A               	infsnz	checkPass@i& (0+255),f,b
 15840  004A12  2B7B               	incf	(checkPass@i+1)& (0+255),f,b
 15841  004A14  D7C4               	goto	l6136
 15842  004A16                     l6150:
 15843                           
 15844                           ; BSR set to: 0
 15845                           ;DisplayProtocol.h: 22: }
 15846                           ;DisplayProtocol.h: 23: }
 15847                           ;DisplayProtocol.h: 24: return passOK;
 15848  004A16  0100               	movlb	0	; () banked
 15849  004A18  5179               	movf	checkPass@passOK& (0+255),w,b
 15850  004A1A  0012               	return	
 15851  004A1C                     __end_of_checkPass:
 15852                           	opt stack 0
 15853                           tblptru	equ	0xFF8
 15854                           tblptrh	equ	0xFF7
 15855                           tblptrl	equ	0xFF6
 15856                           tablat	equ	0xFF5
 15857                           prodh	equ	0xFF4
 15858                           prodl	equ	0xFF3
 15859                           intcon	equ	0xFF2
 15860                           postinc0	equ	0xFEE
 15861                           wreg	equ	0xFE8
 15862                           postdec1	equ	0xFE5
 15863                           fsr1l	equ	0xFE1
 15864                           indf2	equ	0xFDF
 15865                           postinc2	equ	0xFDE
 15866                           postdec2	equ	0xFDD
 15867                           fsr2h	equ	0xFDA
 15868                           fsr2l	equ	0xFD9
 15869                           status	equ	0xFD8
 15870                           
 15871 ;; *************** function _pressDOWN *****************
 15872 ;; Defined at:
 15873 ;;		line 165 in file "source/DisplayProtocol.h"
 15874 ;; Parameters:    Size  Location     Type
 15875 ;;		None
 15876 ;; Auto vars:     Size  Location     Type
 15877 ;;		None
 15878 ;; Return value:  Size  Location     Type
 15879 ;;                  1    wreg      void 
 15880 ;; Registers used:
 15881 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15882 ;; Tracked objects:
 15883 ;;		On entry : 0/0
 15884 ;;		On exit  : 0/0
 15885 ;;		Unchanged: 0/0
 15886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15887 ;;      Params:         0       0       0       0       0       0       0
 15888 ;;      Locals:         0       0       0       0       0       0       0
 15889 ;;      Temps:          0       1       0       0       0       0       0
 15890 ;;      Totals:         0       1       0       0       0       0       0
 15891 ;;Total ram usage:        1 bytes
 15892 ;; Hardware stack levels used:    1
 15893 ;; Hardware stack levels required when called:    8
 15894 ;; This function calls:
 15895 ;;		Nothing
 15896 ;; This function is called by:
 15897 ;;		_buttonChecking
 15898 ;; This function uses a non-reentrant model
 15899 ;;
 15900                           
 15901                           	psect	text53
 15902  004224                     __ptext53:
 15903                           	opt stack 0
 15904  004224                     _pressDOWN:
 15905                           	opt stack 21
 15906                           
 15907                           ;DisplayProtocol.h: 166: if (actualScreen == 0 || actualScreen == 4) {
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;incstack = 0
 15911  004224  0100               	movlb	0	; () banked
 15912  004226  51D1               	movf	_actualScreen& (0+255),w,b
 15913  004228  B4D8               	btfsc	status,2,c
 15914  00422A  D005               	goto	l6572
 15915                           
 15916                           ; BSR set to: 0
 15917  00422C  0E04               	movlw	4
 15918  00422E  0100               	movlb	0	; () banked
 15919  004230  19D1               	xorwf	_actualScreen& (0+255),w,b
 15920  004232  A4D8               	btfss	status,2,c
 15921  004234  D009               	goto	l6578
 15922  004236                     l6572:
 15923                           
 15924                           ; BSR set to: 0
 15925                           ;DisplayProtocol.h: 167: menuSection--;
 15926  004236  0100               	movlb	0	; () banked
 15927  004238  07D4               	decf	_menuSection& (0+255),f,b
 15928                           
 15929                           ; BSR set to: 0
 15930                           ;DisplayProtocol.h: 168: if (menuSection < 0)
 15931  00423A  0100               	movlb	0	; () banked
 15932  00423C  AFD4               	btfss	_menuSection& (0+255),7,b
 15933  00423E  0012               	return	
 15934                           
 15935                           ; BSR set to: 0
 15936                           ;DisplayProtocol.h: 169: menuSection = 6;
 15937  004240  0E06               	movlw	6
 15938  004242  0100               	movlb	0	; () banked
 15939  004244  6FD4               	movwf	_menuSection& (0+255),b
 15940                           
 15941                           ; BSR set to: 0
 15942                           ;DisplayProtocol.h: 170: } else if (actualScreen == 1) {
 15943  004246  0012               	return	
 15944  004248                     l6578:
 15945                           
 15946                           ; BSR set to: 0
 15947  004248  0100               	movlb	0	; () banked
 15948  00424A  05D1               	decf	_actualScreen& (0+255),w,b
 15949  00424C  A4D8               	btfss	status,2,c
 15950  00424E  D022               	goto	l6584
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;DisplayProtocol.h: 171: introducido[passSection]--;
 15954  004250  0100               	movlb	0	; () banked
 15955  004252  51D5               	movf	_passSection& (0+255),w,b
 15956  004254  0D01               	mullw	1
 15957  004256  0E35               	movlw	low _introducido
 15958  004258  24F3               	addwf	prodl,w,c
 15959  00425A  6ED9               	movwf	fsr2l,c
 15960  00425C  0E01               	movlw	high _introducido
 15961  00425E  20F4               	addwfc	prodh,w,c
 15962  004260  6EDA               	movwf	fsr2h,c
 15963  004262  06DF               	decf	indf2,f,c
 15964                           
 15965                           ;DisplayProtocol.h: 172: if (introducido[passSection] < 0)
 15966  004264  0100               	movlb	0	; () banked
 15967  004266  51D5               	movf	_passSection& (0+255),w,b
 15968  004268  0D01               	mullw	1
 15969  00426A  0E35               	movlw	low _introducido
 15970  00426C  24F3               	addwf	prodl,w,c
 15971  00426E  6ED9               	movwf	fsr2l,c
 15972  004270  0E01               	movlw	high _introducido
 15973  004272  20F4               	addwfc	prodh,w,c
 15974  004274  6EDA               	movwf	fsr2h,c
 15975  004276  0E00               	movlw	0
 15976  004278  AEDB               	btfss	plusw2,7,c
 15977  00427A  0012               	return	
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;DisplayProtocol.h: 173: introducido[passSection] = 9;
 15981  00427C  0100               	movlb	0	; () banked
 15982  00427E  51D5               	movf	_passSection& (0+255),w,b
 15983  004280  0D01               	mullw	1
 15984  004282  0E35               	movlw	low _introducido
 15985  004284  24F3               	addwf	prodl,w,c
 15986  004286  6ED9               	movwf	fsr2l,c
 15987  004288  0E01               	movlw	high _introducido
 15988  00428A  20F4               	addwfc	prodh,w,c
 15989  00428C  6EDA               	movwf	fsr2h,c
 15990  00428E  0E09               	movlw	9
 15991  004290  6EDF               	movwf	indf2,c
 15992                           
 15993                           ; BSR set to: 0
 15994                           ;DisplayProtocol.h: 174: } else if (actualScreen == 2 || actualScreen == 3
 15995  004292  0012               	return	
 15996  004294                     l6584:
 15997                           
 15998                           ; BSR set to: 0
 15999                           ;DisplayProtocol.h: 175: || actualScreen == 10) {
 16000  004294  0E02               	movlw	2
 16001  004296  0100               	movlb	0	; () banked
 16002  004298  19D1               	xorwf	_actualScreen& (0+255),w,b
 16003  00429A  B4D8               	btfsc	status,2,c
 16004  00429C  D00A               	goto	l6590
 16005                           
 16006                           ; BSR set to: 0
 16007  00429E  0E03               	movlw	3
 16008  0042A0  0100               	movlb	0	; () banked
 16009  0042A2  19D1               	xorwf	_actualScreen& (0+255),w,b
 16010  0042A4  B4D8               	btfsc	status,2,c
 16011  0042A6  D005               	goto	l6590
 16012                           
 16013                           ; BSR set to: 0
 16014  0042A8  0E0A               	movlw	10
 16015  0042AA  0100               	movlb	0	; () banked
 16016  0042AC  19D1               	xorwf	_actualScreen& (0+255),w,b
 16017  0042AE  A4D8               	btfss	status,2,c
 16018  0042B0  D011               	goto	l6596
 16019  0042B2                     l6590:
 16020                           
 16021                           ; BSR set to: 0
 16022                           ;DisplayProtocol.h: 176: selSN = !selSN;
 16023  0042B2  0100               	movlb	0	; () banked
 16024  0042B4  51D7               	movf	_selSN& (0+255),w,b
 16025  0042B6  A4D8               	btfss	status,2,c
 16026  0042B8  D002               	goto	u7710
 16027  0042BA  0E01               	movlw	1
 16028  0042BC  D001               	goto	u7720
 16029  0042BE                     u7710:
 16030  0042BE  0E00               	movlw	0
 16031  0042C0                     u7720:
 16032  0042C0  0100               	movlb	0	; () banked
 16033  0042C2  6FD7               	movwf	_selSN& (0+255),b
 16034                           
 16035                           ; BSR set to: 0
 16036                           ;DisplayProtocol.h: 177: if(selSN > 1)
 16037  0042C4  0E01               	movlw	1
 16038  0042C6  0100               	movlb	0	; () banked
 16039  0042C8  65D7               	cpfsgt	_selSN& (0+255),b
 16040  0042CA  0012               	return	
 16041                           
 16042                           ; BSR set to: 0
 16043                           ;DisplayProtocol.h: 178: selSN = 0;
 16044  0042CC  0E00               	movlw	0
 16045  0042CE  0100               	movlb	0	; () banked
 16046  0042D0  6FD7               	movwf	_selSN& (0+255),b
 16047                           
 16048                           ; BSR set to: 0
 16049                           ;DisplayProtocol.h: 179: }else if(actualScreen == 5) {
 16050  0042D2  0012               	return	
 16051  0042D4                     l6596:
 16052                           
 16053                           ; BSR set to: 0
 16054  0042D4  0E05               	movlw	5
 16055  0042D6  0100               	movlb	0	; () banked
 16056  0042D8  19D1               	xorwf	_actualScreen& (0+255),w,b
 16057  0042DA  A4D8               	btfss	status,2,c
 16058  0042DC  0012               	return	
 16059  0042DE  D009               	goto	l6608
 16060  0042E0                     l6600:
 16061                           
 16062                           ; BSR set to: 0
 16063                           ;DisplayProtocol.h: 184: selKMT--;
 16064  0042E0  0100               	movlb	0	; () banked
 16065  0042E2  07D6               	decf	_selKMT& (0+255),f,b
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;DisplayProtocol.h: 185: if(selKMT < 0)
 16069  0042E4  0100               	movlb	0	; () banked
 16070  0042E6  AFD6               	btfss	_selKMT& (0+255),7,b
 16071  0042E8  0012               	return	
 16072                           
 16073                           ; BSR set to: 0
 16074                           ;DisplayProtocol.h: 186: selKMT = 2;
 16075  0042EA  0E02               	movlw	2
 16076  0042EC  0100               	movlb	0	; () banked
 16077  0042EE  6FD6               	movwf	_selKMT& (0+255),b
 16078                           
 16079                           ; BSR set to: 0
 16080                           ;DisplayProtocol.h: 203: }
 16081                           ;DisplayProtocol.h: 204: }
 16082                           
 16083                           ; BSR set to: 0
 16084                           ;DisplayProtocol.h: 202: break;
 16085                           
 16086                           ;DisplayProtocol.h: 200: }case (6): {
 16087                           
 16088                           ; BSR set to: 0
 16089                           ;DisplayProtocol.h: 199: break;
 16090                           
 16091                           ;DisplayProtocol.h: 197: }case (5): {
 16092                           
 16093                           ; BSR set to: 0
 16094                           ;DisplayProtocol.h: 196: break;
 16095                           
 16096                           ;DisplayProtocol.h: 194: }case (4): {
 16097                           
 16098                           ; BSR set to: 0
 16099                           ;DisplayProtocol.h: 193: break;
 16100                           
 16101                           ;DisplayProtocol.h: 191: }case (3): {
 16102                           
 16103                           ; BSR set to: 0
 16104                           ;DisplayProtocol.h: 190: break;
 16105                           
 16106                           ;DisplayProtocol.h: 188: }case (2): {
 16107                           
 16108                           ; BSR set to: 0
 16109                           ;DisplayProtocol.h: 187: break;
 16110  0042F0  0012               	return	
 16111  0042F2                     l6608:
 16112                           
 16113                           ; BSR set to: 0
 16114  0042F2  0100               	movlb	0	; () banked
 16115  0042F4  51D4               	movf	_menuSection& (0+255),w,b
 16116                           
 16117                           ; Switch size 1, requested type "space"
 16118                           ; Number of cases is 7, Range of values is 0 to 6
 16119                           ; switch strategies available:
 16120                           ; Name         Instructions Cycles
 16121                           ; simple_byte           22    12 (average)
 16122                           ;	Chosen strategy is simple_byte
 16123  0042F6  0A00               	xorlw	0	; case 0
 16124  0042F8  B4D8               	btfsc	status,2,c
 16125  0042FA  0012               	return	
 16126  0042FC  0A01               	xorlw	1	; case 1
 16127  0042FE  B4D8               	btfsc	status,2,c
 16128  004300  D7EF               	goto	l6600
 16129  004302  0A03               	xorlw	3	; case 2
 16130  004304  B4D8               	btfsc	status,2,c
 16131  004306  0012               	return	
 16132  004308  0A01               	xorlw	1	; case 3
 16133  00430A  B4D8               	btfsc	status,2,c
 16134  00430C  0012               	return	
 16135  00430E  0A07               	xorlw	7	; case 4
 16136  004310  B4D8               	btfsc	status,2,c
 16137  004312  0012               	return	
 16138  004314  0A01               	xorlw	1	; case 5
 16139  004316  B4D8               	btfsc	status,2,c
 16140  004318  0012               	return	
 16141  00431A  0A03               	xorlw	3	; case 6
 16142                           
 16143                           ; BSR set to: 0
 16144                           
 16145                           ; BSR set to: 0
 16146                           
 16147                           ; BSR set to: 0
 16148                           
 16149                           ; BSR set to: 0
 16150  00431C  0012               	return	
 16151  00431E                     __end_of_pressDOWN:
 16152                           	opt stack 0
 16153                           tblptru	equ	0xFF8
 16154                           tblptrh	equ	0xFF7
 16155                           tblptrl	equ	0xFF6
 16156                           tablat	equ	0xFF5
 16157                           prodh	equ	0xFF4
 16158                           prodl	equ	0xFF3
 16159                           intcon	equ	0xFF2
 16160                           postinc0	equ	0xFEE
 16161                           wreg	equ	0xFE8
 16162                           postdec1	equ	0xFE5
 16163                           fsr1l	equ	0xFE1
 16164                           indf2	equ	0xFDF
 16165                           postinc2	equ	0xFDE
 16166                           postdec2	equ	0xFDD
 16167                           plusw2	equ	0xFDB
 16168                           fsr2h	equ	0xFDA
 16169                           fsr2l	equ	0xFD9
 16170                           status	equ	0xFD8
 16171                           
 16172 ;; *************** function _longPressUP *****************
 16173 ;; Defined at:
 16174 ;;		line 144 in file "source/DisplayProtocol.h"
 16175 ;; Parameters:    Size  Location     Type
 16176 ;;		None
 16177 ;; Auto vars:     Size  Location     Type
 16178 ;;		None
 16179 ;; Return value:  Size  Location     Type
 16180 ;;                  1    wreg      void 
 16181 ;; Registers used:
 16182 ;;		wreg, status,2, status,0
 16183 ;; Tracked objects:
 16184 ;;		On entry : 0/0
 16185 ;;		On exit  : 0/0
 16186 ;;		Unchanged: 0/0
 16187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16188 ;;      Params:         0       0       0       0       0       0       0
 16189 ;;      Locals:         0       0       0       0       0       0       0
 16190 ;;      Temps:          0       0       0       0       0       0       0
 16191 ;;      Totals:         0       0       0       0       0       0       0
 16192 ;;Total ram usage:        0 bytes
 16193 ;; Hardware stack levels used:    1
 16194 ;; Hardware stack levels required when called:    8
 16195 ;; This function calls:
 16196 ;;		Nothing
 16197 ;; This function is called by:
 16198 ;;		_buttonChecking
 16199 ;; This function uses a non-reentrant model
 16200 ;;
 16201                           
 16202                           	psect	text54
 16203  004CCA                     __ptext54:
 16204                           	opt stack 0
 16205  004CCA                     _longPressUP:
 16206                           	opt stack 21
 16207                           
 16208                           ;DisplayProtocol.h: 145: if (!UPisLP) {
 16209                           
 16210                           ; BSR set to: 0
 16211                           ;incstack = 0
 16212  004CCA  5046               	movf	_UPisLP,w,c
 16213  004CCC  A4D8               	btfss	status,2,c
 16214  004CCE  0012               	return	
 16215                           
 16216                           ;DisplayProtocol.h: 146: UPisLP = 1;
 16217  004CD0  0E01               	movlw	1
 16218  004CD2  6E46               	movwf	_UPisLP,c
 16219                           
 16220                           ;DisplayProtocol.h: 147: if (actualScreen == 0 || actualScreen == 4) {
 16221  004CD4  0100               	movlb	0	; () banked
 16222  004CD6  51D1               	movf	_actualScreen& (0+255),w,b
 16223  004CD8  B4D8               	btfsc	status,2,c
 16224  004CDA  D005               	goto	l6554
 16225                           
 16226                           ; BSR set to: 0
 16227  004CDC  0E04               	movlw	4
 16228  004CDE  0100               	movlb	0	; () banked
 16229  004CE0  19D1               	xorwf	_actualScreen& (0+255),w,b
 16230  004CE2  A4D8               	btfss	status,2,c
 16231  004CE4  0012               	return	
 16232  004CE6                     l6554:
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;DisplayProtocol.h: 148: if (holdENTERcont > 5) {
 16236  004CE6  0E05               	movlw	5
 16237  004CE8  0100               	movlb	0	; () banked
 16238  004CEA  65D2               	cpfsgt	_holdENTERcont& (0+255),b
 16239  004CEC  D014               	goto	l6564
 16240                           
 16241                           ; BSR set to: 0
 16242                           ;DisplayProtocol.h: 149: if (actualScreen == 0) {
 16243  004CEE  0100               	movlb	0	; () banked
 16244  004CF0  51D1               	movf	_actualScreen& (0+255),w,b
 16245  004CF2  A4D8               	btfss	status,2,c
 16246  004CF4  D007               	goto	l6560
 16247                           
 16248                           ; BSR set to: 0
 16249                           ;DisplayProtocol.h: 150: actualScreen = 1;
 16250  004CF6  0E01               	movlw	1
 16251  004CF8  0100               	movlb	0	; () banked
 16252  004CFA  6FD1               	movwf	_actualScreen& (0+255),b
 16253                           
 16254                           ;DisplayProtocol.h: 151: fd = 0;
 16255  004CFC  0E00               	movlw	0
 16256  004CFE  0101               	movlb	1	; () banked
 16257  004D00  6F4A               	movwf	_fd& (0+255),b
 16258                           
 16259                           ;DisplayProtocol.h: 152: } else if (actualScreen == 4)
 16260  004D02  0012               	return	
 16261  004D04                     l6560:
 16262  004D04  0E04               	movlw	4
 16263  004D06  0100               	movlb	0	; () banked
 16264  004D08  19D1               	xorwf	_actualScreen& (0+255),w,b
 16265  004D0A  A4D8               	btfss	status,2,c
 16266  004D0C  0012               	return	
 16267                           
 16268                           ; BSR set to: 0
 16269                           ;DisplayProtocol.h: 153: actualScreen = 9;
 16270  004D0E  0E09               	movlw	9
 16271  004D10  0100               	movlb	0	; () banked
 16272  004D12  6FD1               	movwf	_actualScreen& (0+255),b
 16273                           
 16274                           ; BSR set to: 0
 16275                           ;DisplayProtocol.h: 154: } else
 16276                           
 16277                           ; BSR set to: 0
 16278  004D14  0012               	return	
 16279  004D16                     l6564:
 16280                           
 16281                           ; BSR set to: 0
 16282                           ;DisplayProtocol.h: 155: menuSection = 0;
 16283  004D16  0E00               	movlw	0
 16284  004D18  0100               	movlb	0	; () banked
 16285  004D1A  6FD4               	movwf	_menuSection& (0+255),b
 16286                           
 16287                           ; BSR set to: 0
 16288                           
 16289                           ; BSR set to: 0
 16290  004D1C  0012               	return	
 16291  004D1E                     __end_of_longPressUP:
 16292                           	opt stack 0
 16293                           tblptru	equ	0xFF8
 16294                           tblptrh	equ	0xFF7
 16295                           tblptrl	equ	0xFF6
 16296                           tablat	equ	0xFF5
 16297                           prodh	equ	0xFF4
 16298                           prodl	equ	0xFF3
 16299                           intcon	equ	0xFF2
 16300                           postinc0	equ	0xFEE
 16301                           wreg	equ	0xFE8
 16302                           postdec1	equ	0xFE5
 16303                           fsr1l	equ	0xFE1
 16304                           indf2	equ	0xFDF
 16305                           postinc2	equ	0xFDE
 16306                           postdec2	equ	0xFDD
 16307                           plusw2	equ	0xFDB
 16308                           fsr2h	equ	0xFDA
 16309                           fsr2l	equ	0xFD9
 16310                           status	equ	0xFD8
 16311                           
 16312 ;; *************** function _longPressRETRO *****************
 16313 ;; Defined at:
 16314 ;;		line 230 in file "source/DisplayProtocol.h"
 16315 ;; Parameters:    Size  Location     Type
 16316 ;;		None
 16317 ;; Auto vars:     Size  Location     Type
 16318 ;;		None
 16319 ;; Return value:  Size  Location     Type
 16320 ;;                  1    wreg      void 
 16321 ;; Registers used:
 16322 ;;		wreg, status,2, status,0
 16323 ;; Tracked objects:
 16324 ;;		On entry : 0/0
 16325 ;;		On exit  : 0/0
 16326 ;;		Unchanged: 0/0
 16327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16328 ;;      Params:         0       0       0       0       0       0       0
 16329 ;;      Locals:         0       0       0       0       0       0       0
 16330 ;;      Temps:          0       0       0       0       0       0       0
 16331 ;;      Totals:         0       0       0       0       0       0       0
 16332 ;;Total ram usage:        0 bytes
 16333 ;; Hardware stack levels used:    1
 16334 ;; Hardware stack levels required when called:    8
 16335 ;; This function calls:
 16336 ;;		Nothing
 16337 ;; This function is called by:
 16338 ;;		_buttonChecking
 16339 ;; This function uses a non-reentrant model
 16340 ;;
 16341                           
 16342                           	psect	text55
 16343  004EBC                     __ptext55:
 16344                           	opt stack 0
 16345  004EBC                     _longPressRETRO:
 16346                           	opt stack 21
 16347                           
 16348                           ;DisplayProtocol.h: 231: if (!RETROisLP) {
 16349                           
 16350                           ;incstack = 0
 16351  004EBC  0101               	movlb	1	; () banked
 16352  004EBE  5147               	movf	_RETROisLP& (0+255),w,b
 16353  004EC0  0101               	movlb	1	; () banked
 16354  004EC2  A4D8               	btfss	status,2,c
 16355  004EC4  0012               	return	
 16356                           
 16357                           ; BSR set to: 1
 16358                           ;DisplayProtocol.h: 232: RETROisLP = 1;
 16359  004EC6  0E01               	movlw	1
 16360  004EC8  0101               	movlb	1	; () banked
 16361  004ECA  6F47               	movwf	_RETROisLP& (0+255),b
 16362                           
 16363                           ;DisplayProtocol.h: 233: if(actualScreen == 0 || actualScreen == 4) {
 16364  004ECC  0100               	movlb	0	; () banked
 16365  004ECE  51D1               	movf	_actualScreen& (0+255),w,b
 16366  004ED0  B4D8               	btfsc	status,2,c
 16367  004ED2  D005               	goto	l6636
 16368                           
 16369                           ; BSR set to: 0
 16370  004ED4  0E04               	movlw	4
 16371  004ED6  0100               	movlb	0	; () banked
 16372  004ED8  19D1               	xorwf	_actualScreen& (0+255),w,b
 16373  004EDA  A4D8               	btfss	status,2,c
 16374  004EDC  0012               	return	
 16375  004EDE                     l6636:
 16376                           
 16377                           ; BSR set to: 0
 16378                           ;DisplayProtocol.h: 234: if(ProcessStarted) {
 16379  004EDE  0100               	movlb	0	; () banked
 16380  004EE0  51D0               	movf	_ProcessStarted& (0+255),w,b
 16381  004EE2  B4D8               	btfsc	status,2,c
 16382  004EE4  0012               	return	
 16383                           
 16384                           ; BSR set to: 0
 16385                           ;DisplayProtocol.h: 235: tempLastScreen = actualScreen;
 16386  004EE6  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 16387                           
 16388                           ; BSR set to: 0
 16389                           ;DisplayProtocol.h: 236: actualScreen = 3;
 16390  004EEA  0E03               	movlw	3
 16391  004EEC  0100               	movlb	0	; () banked
 16392  004EEE  6FD1               	movwf	_actualScreen& (0+255),b
 16393                           
 16394                           ;DisplayProtocol.h: 237: selSN = 0;
 16395  004EF0  0E00               	movlw	0
 16396  004EF2  0100               	movlb	0	; () banked
 16397  004EF4  6FD7               	movwf	_selSN& (0+255),b
 16398                           
 16399                           ; BSR set to: 0
 16400                           
 16401                           ; BSR set to: 0
 16402  004EF6  0012               	return	
 16403  004EF8                     __end_of_longPressRETRO:
 16404                           	opt stack 0
 16405                           tblptru	equ	0xFF8
 16406                           tblptrh	equ	0xFF7
 16407                           tblptrl	equ	0xFF6
 16408                           tablat	equ	0xFF5
 16409                           prodh	equ	0xFF4
 16410                           prodl	equ	0xFF3
 16411                           intcon	equ	0xFF2
 16412                           postinc0	equ	0xFEE
 16413                           wreg	equ	0xFE8
 16414                           postdec1	equ	0xFE5
 16415                           fsr1l	equ	0xFE1
 16416                           indf2	equ	0xFDF
 16417                           postinc2	equ	0xFDE
 16418                           postdec2	equ	0xFDD
 16419                           plusw2	equ	0xFDB
 16420                           fsr2h	equ	0xFDA
 16421                           fsr2l	equ	0xFD9
 16422                           status	equ	0xFD8
 16423                           
 16424 ;; *************** function _longPressENTER *****************
 16425 ;; Defined at:
 16426 ;;		line 315 in file "source/DisplayProtocol.h"
 16427 ;; Parameters:    Size  Location     Type
 16428 ;;		None
 16429 ;; Auto vars:     Size  Location     Type
 16430 ;;		None
 16431 ;; Return value:  Size  Location     Type
 16432 ;;                  1    wreg      void 
 16433 ;; Registers used:
 16434 ;;		wreg, status,2, status,0
 16435 ;; Tracked objects:
 16436 ;;		On entry : 0/0
 16437 ;;		On exit  : 0/0
 16438 ;;		Unchanged: 0/0
 16439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16440 ;;      Params:         0       0       0       0       0       0       0
 16441 ;;      Locals:         0       0       0       0       0       0       0
 16442 ;;      Temps:          0       0       0       0       0       0       0
 16443 ;;      Totals:         0       0       0       0       0       0       0
 16444 ;;Total ram usage:        0 bytes
 16445 ;; Hardware stack levels used:    1
 16446 ;; Hardware stack levels required when called:    8
 16447 ;; This function calls:
 16448 ;;		Nothing
 16449 ;; This function is called by:
 16450 ;;		_buttonChecking
 16451 ;; This function uses a non-reentrant model
 16452 ;;
 16453                           
 16454                           	psect	text56
 16455  004BF8                     __ptext56:
 16456                           	opt stack 0
 16457  004BF8                     _longPressENTER:
 16458                           	opt stack 21
 16459                           
 16460                           ;DisplayProtocol.h: 316: if (!ENTERisLP) {
 16461                           
 16462                           ;incstack = 0
 16463  004BF8  0101               	movlb	1	; () banked
 16464  004BFA  5145               	movf	_ENTERisLP& (0+255),w,b
 16465  004BFC  0101               	movlb	1	; () banked
 16466  004BFE  A4D8               	btfss	status,2,c
 16467  004C00  0012               	return	
 16468                           
 16469                           ; BSR set to: 1
 16470                           ;DisplayProtocol.h: 317: ENTERisLP = 1;
 16471  004C02  0E01               	movlw	1
 16472  004C04  0101               	movlb	1	; () banked
 16473  004C06  6F45               	movwf	_ENTERisLP& (0+255),b
 16474                           
 16475                           ;DisplayProtocol.h: 318: if(actualScreen == 0 || actualScreen == 4) {
 16476  004C08  0100               	movlb	0	; () banked
 16477  004C0A  51D1               	movf	_actualScreen& (0+255),w,b
 16478  004C0C  B4D8               	btfsc	status,2,c
 16479  004C0E  D005               	goto	l6716
 16480                           
 16481                           ; BSR set to: 0
 16482  004C10  0E04               	movlw	4
 16483  004C12  0100               	movlb	0	; () banked
 16484  004C14  19D1               	xorwf	_actualScreen& (0+255),w,b
 16485  004C16  A4D8               	btfss	status,2,c
 16486  004C18  0012               	return	
 16487  004C1A                     l6716:
 16488                           
 16489                           ; BSR set to: 0
 16490                           ;DisplayProtocol.h: 319: if (holdUPcont > 5) {
 16491  004C1A  0E05               	movlw	5
 16492  004C1C  0100               	movlb	0	; () banked
 16493  004C1E  65D3               	cpfsgt	_holdUPcont& (0+255),b
 16494  004C20  D014               	goto	l6726
 16495                           
 16496                           ; BSR set to: 0
 16497                           ;DisplayProtocol.h: 320: if (actualScreen == 0) {
 16498  004C22  0100               	movlb	0	; () banked
 16499  004C24  51D1               	movf	_actualScreen& (0+255),w,b
 16500  004C26  A4D8               	btfss	status,2,c
 16501  004C28  D007               	goto	l6722
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;DisplayProtocol.h: 321: actualScreen = 1;
 16505  004C2A  0E01               	movlw	1
 16506  004C2C  0100               	movlb	0	; () banked
 16507  004C2E  6FD1               	movwf	_actualScreen& (0+255),b
 16508                           
 16509                           ;DisplayProtocol.h: 322: fd = 0;
 16510  004C30  0E00               	movlw	0
 16511  004C32  0101               	movlb	1	; () banked
 16512  004C34  6F4A               	movwf	_fd& (0+255),b
 16513                           
 16514                           ;DisplayProtocol.h: 323: } else if (actualScreen == 4)
 16515  004C36  0012               	return	
 16516  004C38                     l6722:
 16517  004C38  0E04               	movlw	4
 16518  004C3A  0100               	movlb	0	; () banked
 16519  004C3C  19D1               	xorwf	_actualScreen& (0+255),w,b
 16520  004C3E  A4D8               	btfss	status,2,c
 16521  004C40  0012               	return	
 16522                           
 16523                           ; BSR set to: 0
 16524                           ;DisplayProtocol.h: 324: actualScreen = 9;
 16525  004C42  0E09               	movlw	9
 16526  004C44  0100               	movlb	0	; () banked
 16527  004C46  6FD1               	movwf	_actualScreen& (0+255),b
 16528                           
 16529                           ; BSR set to: 0
 16530                           ;DisplayProtocol.h: 325: } else if(!ProcessStarted) {
 16531                           
 16532                           ; BSR set to: 0
 16533  004C48  0012               	return	
 16534  004C4A                     l6726:
 16535                           
 16536                           ; BSR set to: 0
 16537  004C4A  0100               	movlb	0	; () banked
 16538  004C4C  51D0               	movf	_ProcessStarted& (0+255),w,b
 16539  004C4E  A4D8               	btfss	status,2,c
 16540  004C50  0012               	return	
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;DisplayProtocol.h: 326: tempLastScreen = actualScreen;
 16544  004C52  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 16545                           
 16546                           ; BSR set to: 0
 16547                           ;DisplayProtocol.h: 327: actualScreen = 2;
 16548  004C56  0E02               	movlw	2
 16549  004C58  0100               	movlb	0	; () banked
 16550  004C5A  6FD1               	movwf	_actualScreen& (0+255),b
 16551                           
 16552                           ;DisplayProtocol.h: 328: selSN = 1;
 16553  004C5C  0E01               	movlw	1
 16554  004C5E  0100               	movlb	0	; () banked
 16555  004C60  6FD7               	movwf	_selSN& (0+255),b
 16556                           
 16557                           ; BSR set to: 0
 16558                           
 16559                           ; BSR set to: 0
 16560                           
 16561                           ; BSR set to: 0
 16562  004C62  0012               	return	
 16563  004C64                     __end_of_longPressENTER:
 16564                           	opt stack 0
 16565                           tblptru	equ	0xFF8
 16566                           tblptrh	equ	0xFF7
 16567                           tblptrl	equ	0xFF6
 16568                           tablat	equ	0xFF5
 16569                           prodh	equ	0xFF4
 16570                           prodl	equ	0xFF3
 16571                           intcon	equ	0xFF2
 16572                           postinc0	equ	0xFEE
 16573                           wreg	equ	0xFE8
 16574                           postdec1	equ	0xFE5
 16575                           fsr1l	equ	0xFE1
 16576                           indf2	equ	0xFDF
 16577                           postinc2	equ	0xFDE
 16578                           postdec2	equ	0xFDD
 16579                           plusw2	equ	0xFDB
 16580                           fsr2h	equ	0xFDA
 16581                           fsr2l	equ	0xFD9
 16582                           status	equ	0xFD8
 16583                           
 16584 ;; *************** function _longPressDOWN *****************
 16585 ;; Defined at:
 16586 ;;		line 208 in file "source/DisplayProtocol.h"
 16587 ;; Parameters:    Size  Location     Type
 16588 ;;		None
 16589 ;; Auto vars:     Size  Location     Type
 16590 ;;		None
 16591 ;; Return value:  Size  Location     Type
 16592 ;;                  1    wreg      void 
 16593 ;; Registers used:
 16594 ;;		wreg, status,2
 16595 ;; Tracked objects:
 16596 ;;		On entry : 0/0
 16597 ;;		On exit  : 0/0
 16598 ;;		Unchanged: 0/0
 16599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16600 ;;      Params:         0       0       0       0       0       0       0
 16601 ;;      Locals:         0       0       0       0       0       0       0
 16602 ;;      Temps:          0       0       0       0       0       0       0
 16603 ;;      Totals:         0       0       0       0       0       0       0
 16604 ;;Total ram usage:        0 bytes
 16605 ;; Hardware stack levels used:    1
 16606 ;; Hardware stack levels required when called:    8
 16607 ;; This function calls:
 16608 ;;		Nothing
 16609 ;; This function is called by:
 16610 ;;		_buttonChecking
 16611 ;; This function uses a non-reentrant model
 16612 ;;
 16613                           
 16614                           	psect	text57
 16615  005204                     __ptext57:
 16616                           	opt stack 0
 16617  005204                     _longPressDOWN:
 16618                           	opt stack 21
 16619                           
 16620                           ;DisplayProtocol.h: 209: if (!DOWNisLP) {
 16621                           
 16622                           ;incstack = 0
 16623  005204  5045               	movf	_DOWNisLP,w,c
 16624  005206  A4D8               	btfss	status,2,c
 16625  005208  0012               	return	
 16626                           
 16627                           ;DisplayProtocol.h: 210: DOWNisLP = 1;
 16628  00520A  0E01               	movlw	1
 16629  00520C  6E45               	movwf	_DOWNisLP,c
 16630  00520E  0012               	return	
 16631  005210                     __end_of_longPressDOWN:
 16632                           	opt stack 0
 16633                           tblptru	equ	0xFF8
 16634                           tblptrh	equ	0xFF7
 16635                           tblptrl	equ	0xFF6
 16636                           tablat	equ	0xFF5
 16637                           prodh	equ	0xFF4
 16638                           prodl	equ	0xFF3
 16639                           intcon	equ	0xFF2
 16640                           postinc0	equ	0xFEE
 16641                           wreg	equ	0xFE8
 16642                           postdec1	equ	0xFE5
 16643                           fsr1l	equ	0xFE1
 16644                           indf2	equ	0xFDF
 16645                           postinc2	equ	0xFDE
 16646                           postdec2	equ	0xFDD
 16647                           plusw2	equ	0xFDB
 16648                           fsr2h	equ	0xFDA
 16649                           fsr2l	equ	0xFD9
 16650                           status	equ	0xFD8
 16651                           
 16652 ;; *************** function _delay_ms *****************
 16653 ;; Defined at:
 16654 ;;		line 13 in file "source/../../delay.h"
 16655 ;; Parameters:    Size  Location     Type
 16656 ;;  del             2   21[BANK0 ] int 
 16657 ;; Auto vars:     Size  Location     Type
 16658 ;;  i               2   24[BANK0 ] int 
 16659 ;; Return value:  Size  Location     Type
 16660 ;;                  1    wreg      void 
 16661 ;; Registers used:
 16662 ;;		wreg, status,2, status,0
 16663 ;; Tracked objects:
 16664 ;;		On entry : 0/0
 16665 ;;		On exit  : 0/0
 16666 ;;		Unchanged: 0/0
 16667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16668 ;;      Params:         0       2       0       0       0       0       0
 16669 ;;      Locals:         0       2       0       0       0       0       0
 16670 ;;      Temps:          0       1       0       0       0       0       0
 16671 ;;      Totals:         0       5       0       0       0       0       0
 16672 ;;Total ram usage:        5 bytes
 16673 ;; Hardware stack levels used:    1
 16674 ;; Hardware stack levels required when called:    8
 16675 ;; This function calls:
 16676 ;;		Nothing
 16677 ;; This function is called by:
 16678 ;;		_buttonChecking
 16679 ;; This function uses a non-reentrant model
 16680 ;;
 16681                           
 16682                           	psect	text58
 16683  004DF2                     __ptext58:
 16684                           	opt stack 0
 16685  004DF2                     _delay_ms:
 16686                           	opt stack 21
 16687                           
 16688                           ;delay.h: 14: for(int i = 1;i <= del;i++)
 16689                           
 16690                           ;incstack = 0
 16691  004DF2  0E00               	movlw	0
 16692  004DF4  0100               	movlb	0	; () banked
 16693  004DF6  6F79               	movwf	(delay_ms@i+1)& (0+255),b
 16694  004DF8  0E01               	movlw	1
 16695  004DFA  6F78               	movwf	delay_ms@i& (0+255),b
 16696  004DFC  D00C               	goto	l90
 16697  004DFE                     l6240:
 16698                           
 16699                           ; BSR set to: 0
 16700                           ;delay.h: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
 16701  004DFE  0E06               	movlw	6
 16702  004E00  0100               	movlb	0	; () banked
 16703  004E02  6F77               	movwf	??_delay_ms& (0+255),b
 16704  004E04  0E30               	movlw	48
 16705  004E06                     u12377:
 16706  004E06  2EE8               	decfsz	wreg,f,c
 16707  004E08  D7FE               	goto	u12377
 16708  004E0A  2F77               	decfsz	??_delay_ms& (0+255),f,b
 16709  004E0C  D7FC               	goto	u12377
 16710  004E0E  D000               	nop2	
 16711  004E10  0100               	movlb	0	; () banked
 16712  004E12  4B78               	infsnz	delay_ms@i& (0+255),f,b
 16713  004E14  2B79               	incf	(delay_ms@i+1)& (0+255),f,b
 16714  004E16                     l90:
 16715                           
 16716                           ; BSR set to: 0
 16717  004E16  0100               	movlb	0	; () banked
 16718  004E18  5178               	movf	delay_ms@i& (0+255),w,b
 16719  004E1A  0100               	movlb	0	; () banked
 16720  004E1C  5D75               	subwf	delay_ms@del& (0+255),w,b
 16721  004E1E  0100               	movlb	0	; () banked
 16722  004E20  5176               	movf	(delay_ms@del+1)& (0+255),w,b
 16723  004E22  0A80               	xorlw	128
 16724  004E24  0100               	movlb	0	; () banked
 16725  004E26  6F77               	movwf	??_delay_ms& (0+255),b
 16726  004E28  0100               	movlb	0	; () banked
 16727  004E2A  5179               	movf	(delay_ms@i+1)& (0+255),w,b
 16728  004E2C  0A80               	xorlw	128
 16729  004E2E  0100               	movlb	0	; () banked
 16730  004E30  5977               	subwfb	??_delay_ms& (0+255),w,b
 16731  004E32  A0D8               	btfss	status,0,c
 16732  004E34  0012               	return	
 16733  004E36  D7E3               	goto	l6240
 16734  004E38                     __end_of_delay_ms:
 16735                           	opt stack 0
 16736                           tblptru	equ	0xFF8
 16737                           tblptrh	equ	0xFF7
 16738                           tblptrl	equ	0xFF6
 16739                           tablat	equ	0xFF5
 16740                           prodh	equ	0xFF4
 16741                           prodl	equ	0xFF3
 16742                           intcon	equ	0xFF2
 16743                           postinc0	equ	0xFEE
 16744                           wreg	equ	0xFE8
 16745                           postdec1	equ	0xFE5
 16746                           fsr1l	equ	0xFE1
 16747                           indf2	equ	0xFDF
 16748                           postinc2	equ	0xFDE
 16749                           postdec2	equ	0xFDD
 16750                           plusw2	equ	0xFDB
 16751                           fsr2h	equ	0xFDA
 16752                           fsr2l	equ	0xFD9
 16753                           status	equ	0xFD8
 16754                           
 16755 ;; *************** function _UARTConfig *****************
 16756 ;; Defined at:
 16757 ;;		line 60 in file "source/UARTConfig.h"
 16758 ;; Parameters:    Size  Location     Type
 16759 ;;		None
 16760 ;; Auto vars:     Size  Location     Type
 16761 ;;		None
 16762 ;; Return value:  Size  Location     Type
 16763 ;;                  1    wreg      void 
 16764 ;; Registers used:
 16765 ;;		wreg, status,2
 16766 ;; Tracked objects:
 16767 ;;		On entry : 0/0
 16768 ;;		On exit  : 0/0
 16769 ;;		Unchanged: 0/0
 16770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16771 ;;      Params:         0       0       0       0       0       0       0
 16772 ;;      Locals:         0       0       0       0       0       0       0
 16773 ;;      Temps:          0       0       0       0       0       0       0
 16774 ;;      Totals:         0       0       0       0       0       0       0
 16775 ;;Total ram usage:        0 bytes
 16776 ;; Hardware stack levels used:    1
 16777 ;; Hardware stack levels required when called:    8
 16778 ;; This function calls:
 16779 ;;		Nothing
 16780 ;; This function is called by:
 16781 ;;		_main
 16782 ;; This function uses a non-reentrant model
 16783 ;;
 16784                           
 16785                           	psect	text59
 16786  004F30                     __ptext59:
 16787                           	opt stack 0
 16788  004F30                     _UARTConfig:
 16789                           	opt stack 22
 16790                           
 16791                           ;UARTConfig.h: 61: RCSTA1bits.SPEN = 0;
 16792                           
 16793                           ; BSR set to: 0
 16794                           ;incstack = 0
 16795  004F30  9EAB               	bcf	4011,7,c	;volatile
 16796                           
 16797                           ;UARTConfig.h: 62: SPBRGH1 = 0;
 16798  004F32  0E00               	movlw	0
 16799  004F34  6EB0               	movwf	4016,c	;volatile
 16800                           
 16801                           ;UARTConfig.h: 63: SPBRG1 = 34;
 16802  004F36  0E22               	movlw	34
 16803  004F38  6EAF               	movwf	4015,c	;volatile
 16804                           
 16805                           ;UARTConfig.h: 64: ANSELCbits.ANSC6 = 0;
 16806  004F3A  010F               	movlb	15	; () banked
 16807  004F3C  9D3A               	bcf	58,6,b	;volatile
 16808                           
 16809                           ; BSR set to: 15
 16810                           ;UARTConfig.h: 65: ANSELCbits.ANSC7 = 0;
 16811  004F3E  010F               	movlb	15	; () banked
 16812  004F40  9F3A               	bcf	58,7,b	;volatile
 16813                           
 16814                           ; BSR set to: 15
 16815                           ;UARTConfig.h: 66: TRISCbits.TRISC6 = 1;
 16816  004F42  8C94               	bsf	3988,6,c	;volatile
 16817                           
 16818                           ; BSR set to: 15
 16819                           ;UARTConfig.h: 67: TRISCbits.TRISC7 = 1;
 16820  004F44  8E94               	bsf	3988,7,c	;volatile
 16821                           
 16822                           ; BSR set to: 15
 16823                           ;UARTConfig.h: 68: TXSTA1bits.TX9 = 0;
 16824  004F46  9CAC               	bcf	4012,6,c	;volatile
 16825                           
 16826                           ; BSR set to: 15
 16827                           ;UARTConfig.h: 69: TXSTA1bits.SYNC = 0;
 16828  004F48  98AC               	bcf	4012,4,c	;volatile
 16829                           
 16830                           ; BSR set to: 15
 16831                           ;UARTConfig.h: 70: TXSTA1bits.SENDB = 0;
 16832  004F4A  96AC               	bcf	4012,3,c	;volatile
 16833                           
 16834                           ; BSR set to: 15
 16835                           ;UARTConfig.h: 71: TXSTA1bits.BRGH = 1;
 16836  004F4C  84AC               	bsf	4012,2,c	;volatile
 16837                           
 16838                           ; BSR set to: 15
 16839                           ;UARTConfig.h: 72: RCSTA1bits.RX9 = 0;
 16840  004F4E  9CAB               	bcf	4011,6,c	;volatile
 16841                           
 16842                           ; BSR set to: 15
 16843                           ;UARTConfig.h: 73: BAUDCON1bits.DTRXP = 0;
 16844  004F50  9AB8               	bcf	4024,5,c	;volatile
 16845                           
 16846                           ; BSR set to: 15
 16847                           ;UARTConfig.h: 74: BAUDCON1bits.CKTXP = 0;
 16848  004F52  98B8               	bcf	4024,4,c	;volatile
 16849                           
 16850                           ; BSR set to: 15
 16851                           ;UARTConfig.h: 75: BAUDCON1bits.BRG16 = 1;
 16852  004F54  86B8               	bsf	4024,3,c	;volatile
 16853                           
 16854                           ; BSR set to: 15
 16855                           ;UARTConfig.h: 76: BAUDCON1bits.WUE = 0;
 16856  004F56  92B8               	bcf	4024,1,c	;volatile
 16857                           
 16858                           ; BSR set to: 15
 16859                           ;UARTConfig.h: 77: BAUDCON1bits.ABDEN = 0;
 16860  004F58  90B8               	bcf	4024,0,c	;volatile
 16861                           
 16862                           ; BSR set to: 15
 16863                           ;UARTConfig.h: 78: RCSTA1bits.CREN = 1;
 16864  004F5A  88AB               	bsf	4011,4,c	;volatile
 16865                           
 16866                           ; BSR set to: 15
 16867                           ;UARTConfig.h: 79: TXSTA1bits.TXEN = 1;
 16868  004F5C  8AAC               	bsf	4012,5,c	;volatile
 16869                           
 16870                           ; BSR set to: 15
 16871                           ;UARTConfig.h: 80: IPR1bits.RC1IP = 0;
 16872  004F5E  9A9F               	bcf	3999,5,c	;volatile
 16873                           
 16874                           ; BSR set to: 15
 16875                           ;UARTConfig.h: 81: PIR1bits.RC1IF = 0;
 16876  004F60  9A9E               	bcf	3998,5,c	;volatile
 16877                           
 16878                           ; BSR set to: 15
 16879                           ;UARTConfig.h: 82: PIE1bits.RC1IE = 1;
 16880  004F62  8A9D               	bsf	3997,5,c	;volatile
 16881                           
 16882                           ; BSR set to: 15
 16883                           ;UARTConfig.h: 83: RCSTA1bits.SPEN = 1;
 16884  004F64  8EAB               	bsf	4011,7,c	;volatile
 16885                           
 16886                           ; BSR set to: 15
 16887  004F66  0012               	return		;funcret
 16888  004F68                     __end_of_UARTConfig:
 16889                           	opt stack 0
 16890                           tblptru	equ	0xFF8
 16891                           tblptrh	equ	0xFF7
 16892                           tblptrl	equ	0xFF6
 16893                           tablat	equ	0xFF5
 16894                           prodh	equ	0xFF4
 16895                           prodl	equ	0xFF3
 16896                           intcon	equ	0xFF2
 16897                           postinc0	equ	0xFEE
 16898                           wreg	equ	0xFE8
 16899                           postdec1	equ	0xFE5
 16900                           fsr1l	equ	0xFE1
 16901                           indf2	equ	0xFDF
 16902                           postinc2	equ	0xFDE
 16903                           postdec2	equ	0xFDD
 16904                           plusw2	equ	0xFDB
 16905                           fsr2h	equ	0xFDA
 16906                           fsr2l	equ	0xFD9
 16907                           status	equ	0xFD8
 16908                           
 16909 ;; *************** function _PWM2Config *****************
 16910 ;; Defined at:
 16911 ;;		line 45 in file "source/PWMConfig.h"
 16912 ;; Parameters:    Size  Location     Type
 16913 ;;		None
 16914 ;; Auto vars:     Size  Location     Type
 16915 ;;		None
 16916 ;; Return value:  Size  Location     Type
 16917 ;;                  1    wreg      void 
 16918 ;; Registers used:
 16919 ;;		wreg, status,2, status,0, cstack
 16920 ;; Tracked objects:
 16921 ;;		On entry : 0/0
 16922 ;;		On exit  : 0/0
 16923 ;;		Unchanged: 0/0
 16924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16925 ;;      Params:         0       0       0       0       0       0       0
 16926 ;;      Locals:         0       0       0       0       0       0       0
 16927 ;;      Temps:          0       0       0       0       0       0       0
 16928 ;;      Totals:         0       0       0       0       0       0       0
 16929 ;;Total ram usage:        0 bytes
 16930 ;; Hardware stack levels used:    1
 16931 ;; Hardware stack levels required when called:    9
 16932 ;; This function calls:
 16933 ;;		_setPWM2duty
 16934 ;;		_t2config
 16935 ;; This function is called by:
 16936 ;;		_main
 16937 ;; This function uses a non-reentrant model
 16938 ;;
 16939                           
 16940                           	psect	text60
 16941  004C64                     __ptext60:
 16942                           	opt stack 0
 16943  004C64                     _PWM2Config:
 16944                           	opt stack 21
 16945                           
 16946                           ;PWMConfig.h: 46: TRISCbits.TRISC0 = 1;
 16947                           
 16948                           ; BSR set to: 15
 16949                           ;incstack = 0
 16950  004C64  8094               	bsf	3988,0,c	;volatile
 16951                           
 16952                           ;PWMConfig.h: 47: TRISCbits.TRISC1 = 1;
 16953  004C66  8294               	bsf	3988,1,c	;volatile
 16954                           
 16955                           ;PWMConfig.h: 48: PSTR2CONbits.STR2A = 1;
 16956  004C68  8063               	bsf	3939,0,c	;volatile
 16957                           
 16958                           ;PWMConfig.h: 49: PSTR2CONbits.STR2B = 1;
 16959  004C6A  8263               	bsf	3939,1,c	;volatile
 16960                           
 16961                           ;PWMConfig.h: 50: PSTR2CONbits.STR2C = 0;
 16962  004C6C  9463               	bcf	3939,2,c	;volatile
 16963                           
 16964                           ;PWMConfig.h: 51: PSTR2CONbits.STR2D = 0;
 16965  004C6E  9663               	bcf	3939,3,c	;volatile
 16966                           
 16967                           ;PWMConfig.h: 52: CCPTMRS0bits.C2TSEL = 0b00;
 16968  004C70  0EE7               	movlw	-25
 16969  004C72  010F               	movlb	15	; () banked
 16970  004C74  1749               	andwf	73,f,b	;volatile
 16971                           
 16972                           ;PWMConfig.h: 53: PR2 = 199;
 16973  004C76  0EC7               	movlw	199
 16974  004C78  6EBB               	movwf	4027,c	;volatile
 16975                           
 16976                           ; BSR set to: 15
 16977                           ;PWMConfig.h: 54: ECCP2ASbits.CCP2AS = 0b000;
 16978  004C7A  9864               	bcf	3940,4,c	;volatile
 16979  004C7C  9A64               	bcf	3940,5,c	;volatile
 16980  004C7E  9C64               	bcf	3940,6,c	;volatile
 16981                           
 16982                           ;PWMConfig.h: 55: ECCP2ASbits.PSS2AC = 0b00;
 16983  004C80  0EF3               	movlw	-13
 16984  004C82  1664               	andwf	3940,f,c	;volatile
 16985                           
 16986                           ;PWMConfig.h: 56: ECCP2ASbits.PSS2BD = 0b00;
 16987  004C84  0EFC               	movlw	-4
 16988  004C86  1664               	andwf	3940,f,c	;volatile
 16989                           
 16990                           ; BSR set to: 15
 16991                           ;PWMConfig.h: 57: PWM2CONbits.P2RSEN = 0;
 16992  004C88  9E65               	bcf	3941,7,c	;volatile
 16993                           
 16994                           ;PWMConfig.h: 58: ECCP2ASbits.CCP2AS = 1;
 16995  004C8A  5064               	movf	3940,w,c	;volatile
 16996  004C8C  0B8F               	andlw	-113
 16997  004C8E  0910               	iorlw	16
 16998  004C90  6E64               	movwf	3940,c	;volatile
 16999                           
 17000                           ;PWMConfig.h: 59: CCP2CONbits.P2M = 0b10;
 17001  004C92  5066               	movf	3942,w,c	;volatile
 17002  004C94  0B3F               	andlw	-193
 17003  004C96  0980               	iorlw	128
 17004  004C98  6E66               	movwf	3942,c	;volatile
 17005                           
 17006                           ;PWMConfig.h: 60: CCP2CONbits.CCP2M = 0b1100;
 17007  004C9A  5066               	movf	3942,w,c	;volatile
 17008  004C9C  0BF0               	andlw	-16
 17009  004C9E  090C               	iorlw	12
 17010  004CA0  6E66               	movwf	3942,c	;volatile
 17011                           
 17012                           ; BSR set to: 15
 17013                           ;PWMConfig.h: 61: setPWM2duty(0);
 17014  004CA2  0E00               	movlw	0
 17015  004CA4  0100               	movlb	0	; () banked
 17016  004CA6  6F76               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 17017  004CA8  0E00               	movlw	0
 17018  004CAA  6F75               	movwf	setPWM2duty@actuator& (0+255),b
 17019  004CAC  ECA5  F023         	call	_setPWM2duty	;wreg free
 17020                           
 17021                           ;PWMConfig.h: 62: PWM2CONbits.P2DC = 16;
 17022  004CB0  9065               	bcf	3941,0,c	;volatile
 17023  004CB2  9265               	bcf	3941,1,c	;volatile
 17024  004CB4  9465               	bcf	3941,2,c	;volatile
 17025  004CB6  9665               	bcf	3941,3,c	;volatile
 17026  004CB8  8865               	bsf	3941,4,c	;volatile
 17027  004CBA  9A65               	bcf	3941,5,c	;volatile
 17028  004CBC  9C65               	bcf	3941,6,c	;volatile
 17029                           
 17030                           ;PWMConfig.h: 63: t2config();
 17031  004CBE  ECB8  F028         	call	_t2config	;wreg free
 17032                           
 17033                           ;PWMConfig.h: 64: TRISCbits.TRISC0 = 0;
 17034  004CC2  9094               	bcf	3988,0,c	;volatile
 17035                           
 17036                           ;PWMConfig.h: 65: TRISCbits.TRISC1 = 0;
 17037  004CC4  9294               	bcf	3988,1,c	;volatile
 17038                           
 17039                           ;PWMConfig.h: 66: ECCP2ASbits.CCP2ASE = 0;
 17040  004CC6  9E64               	bcf	3940,7,c	;volatile
 17041  004CC8  0012               	return		;funcret
 17042  004CCA                     __end_of_PWM2Config:
 17043                           	opt stack 0
 17044                           tblptru	equ	0xFF8
 17045                           tblptrh	equ	0xFF7
 17046                           tblptrl	equ	0xFF6
 17047                           tablat	equ	0xFF5
 17048                           prodh	equ	0xFF4
 17049                           prodl	equ	0xFF3
 17050                           intcon	equ	0xFF2
 17051                           postinc0	equ	0xFEE
 17052                           wreg	equ	0xFE8
 17053                           postdec1	equ	0xFE5
 17054                           fsr1l	equ	0xFE1
 17055                           indf2	equ	0xFDF
 17056                           postinc2	equ	0xFDE
 17057                           postdec2	equ	0xFDD
 17058                           plusw2	equ	0xFDB
 17059                           fsr2h	equ	0xFDA
 17060                           fsr2l	equ	0xFD9
 17061                           status	equ	0xFD8
 17062                           
 17063 ;; *************** function _t2config *****************
 17064 ;; Defined at:
 17065 ;;		line 12 in file "source/PWMConfig.h"
 17066 ;; Parameters:    Size  Location     Type
 17067 ;;		None
 17068 ;; Auto vars:     Size  Location     Type
 17069 ;;		None
 17070 ;; Return value:  Size  Location     Type
 17071 ;;                  1    wreg      void 
 17072 ;; Registers used:
 17073 ;;		wreg, status,2
 17074 ;; Tracked objects:
 17075 ;;		On entry : 0/0
 17076 ;;		On exit  : 0/0
 17077 ;;		Unchanged: 0/0
 17078 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17079 ;;      Params:         0       0       0       0       0       0       0
 17080 ;;      Locals:         0       0       0       0       0       0       0
 17081 ;;      Temps:          0       0       0       0       0       0       0
 17082 ;;      Totals:         0       0       0       0       0       0       0
 17083 ;;Total ram usage:        0 bytes
 17084 ;; Hardware stack levels used:    1
 17085 ;; Hardware stack levels required when called:    8
 17086 ;; This function calls:
 17087 ;;		Nothing
 17088 ;; This function is called by:
 17089 ;;		_PWM2Config
 17090 ;; This function uses a non-reentrant model
 17091 ;;
 17092                           
 17093                           	psect	text61
 17094  005170                     __ptext61:
 17095                           	opt stack 0
 17096  005170                     _t2config:
 17097                           	opt stack 21
 17098                           
 17099                           ;PWMConfig.h: 13: T2CONbits.TMR2ON = 0;
 17100                           
 17101                           ;incstack = 0
 17102  005170  94BA               	bcf	4026,2,c	;volatile
 17103                           
 17104                           ;PWMConfig.h: 14: T2CONbits.T2CKPS = 0b00;
 17105  005172  0EFC               	movlw	-4
 17106  005174  16BA               	andwf	4026,f,c	;volatile
 17107                           
 17108                           ;PWMConfig.h: 15: T2CONbits.T2OUTPS = 0b1111;
 17109  005176  86BA               	bsf	4026,3,c	;volatile
 17110  005178  88BA               	bsf	4026,4,c	;volatile
 17111  00517A  8ABA               	bsf	4026,5,c	;volatile
 17112  00517C  8CBA               	bsf	4026,6,c	;volatile
 17113                           
 17114                           ;PWMConfig.h: 17: PIR1bits.TMR2IF = 0;
 17115  00517E  929E               	bcf	3998,1,c	;volatile
 17116                           
 17117                           ;PWMConfig.h: 18: IPR1bits.TMR2IP = 1;
 17118  005180  829F               	bsf	3999,1,c	;volatile
 17119                           
 17120                           ;PWMConfig.h: 19: PIE1bits.TMR2IE = 1;
 17121  005182  829D               	bsf	3997,1,c	;volatile
 17122                           
 17123                           ;PWMConfig.h: 20: T2CONbits.TMR2ON = 1;
 17124  005184  84BA               	bsf	4026,2,c	;volatile
 17125  005186  0012               	return		;funcret
 17126  005188                     __end_of_t2config:
 17127                           	opt stack 0
 17128                           tblptru	equ	0xFF8
 17129                           tblptrh	equ	0xFF7
 17130                           tblptrl	equ	0xFF6
 17131                           tablat	equ	0xFF5
 17132                           prodh	equ	0xFF4
 17133                           prodl	equ	0xFF3
 17134                           intcon	equ	0xFF2
 17135                           postinc0	equ	0xFEE
 17136                           wreg	equ	0xFE8
 17137                           postdec1	equ	0xFE5
 17138                           fsr1l	equ	0xFE1
 17139                           indf2	equ	0xFDF
 17140                           postinc2	equ	0xFDE
 17141                           postdec2	equ	0xFDD
 17142                           plusw2	equ	0xFDB
 17143                           fsr2h	equ	0xFDA
 17144                           fsr2l	equ	0xFD9
 17145                           status	equ	0xFD8
 17146                           
 17147 ;; *************** function _setPWM2duty *****************
 17148 ;; Defined at:
 17149 ;;		line 23 in file "source/PWMConfig.h"
 17150 ;; Parameters:    Size  Location     Type
 17151 ;;  actuator        2   21[BANK0 ] short 
 17152 ;; Auto vars:     Size  Location     Type
 17153 ;;  act             2   25[BANK0 ] short 
 17154 ;; Return value:  Size  Location     Type
 17155 ;;                  1    wreg      void 
 17156 ;; Registers used:
 17157 ;;		wreg, status,2, status,0
 17158 ;; Tracked objects:
 17159 ;;		On entry : 0/0
 17160 ;;		On exit  : 0/0
 17161 ;;		Unchanged: 0/0
 17162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17163 ;;      Params:         0       2       0       0       0       0       0
 17164 ;;      Locals:         0       2       0       0       0       0       0
 17165 ;;      Temps:          0       2       0       0       0       0       0
 17166 ;;      Totals:         0       6       0       0       0       0       0
 17167 ;;Total ram usage:        6 bytes
 17168 ;; Hardware stack levels used:    1
 17169 ;; Hardware stack levels required when called:    8
 17170 ;; This function calls:
 17171 ;;		Nothing
 17172 ;; This function is called by:
 17173 ;;		_PWM2Config
 17174 ;; This function uses a non-reentrant model
 17175 ;;
 17176                           
 17177                           	psect	text62
 17178  00474A                     __ptext62:
 17179                           	opt stack 0
 17180  00474A                     _setPWM2duty:
 17181                           	opt stack 21
 17182                           
 17183                           ;PWMConfig.h: 24: short act = 400;
 17184                           
 17185                           ;incstack = 0
 17186  00474A  0E01               	movlw	1
 17187  00474C  0100               	movlb	0	; () banked
 17188  00474E  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17189  004750  0E90               	movlw	144
 17190  004752  6F79               	movwf	setPWM2duty@act& (0+255),b
 17191                           
 17192                           ; BSR set to: 0
 17193                           ;PWMConfig.h: 25: if(actuator > 400)
 17194  004754  0100               	movlb	0	; () banked
 17195  004756  BF76               	btfsc	(setPWM2duty@actuator+1)& (0+255),7,b
 17196  004758  D00D               	goto	l6758
 17197  00475A  0E91               	movlw	145
 17198  00475C  0100               	movlb	0	; () banked
 17199  00475E  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 17200  004760  0E01               	movlw	1
 17201  004762  0100               	movlb	0	; () banked
 17202  004764  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 17203  004766  A0D8               	btfss	status,0,c
 17204  004768  D005               	goto	l6758
 17205                           
 17206                           ; BSR set to: 0
 17207                           ;PWMConfig.h: 26: act = 800;
 17208  00476A  0E03               	movlw	3
 17209  00476C  0100               	movlb	0	; () banked
 17210  00476E  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17211  004770  0E20               	movlw	32
 17212  004772  D00F               	goto	L12
 17213  004774                     l6758:
 17214                           
 17215                           ; BSR set to: 0
 17216                           ;PWMConfig.h: 27: else if(actuator < -400)
 17217  004774  0100               	movlb	0	; () banked
 17218  004776  AF76               	btfss	(setPWM2duty@actuator+1)& (0+255),7,b
 17219  004778  D00E               	goto	l6762
 17220  00477A  0E70               	movlw	112
 17221  00477C  0100               	movlb	0	; () banked
 17222  00477E  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 17223  004780  0EFE               	movlw	254
 17224  004782  0100               	movlb	0	; () banked
 17225  004784  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 17226  004786  B0D8               	btfsc	status,0,c
 17227  004788  D006               	goto	l6762
 17228                           
 17229                           ; BSR set to: 0
 17230                           ;PWMConfig.h: 28: act = 0;
 17231  00478A  0E00               	movlw	0
 17232  00478C  0100               	movlb	0	; () banked
 17233  00478E  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17234  004790  0E00               	movlw	0
 17235  004792                     L12:
 17236  004792  6F79               	movwf	setPWM2duty@act& (0+255),b
 17237  004794  D00A               	goto	l640
 17238  004796                     l6762:
 17239                           
 17240                           ; BSR set to: 0
 17241                           ;PWMConfig.h: 29: else
 17242                           ;PWMConfig.h: 30: act = actuator + 400;
 17243  004796  0E90               	movlw	144
 17244  004798  0100               	movlb	0	; () banked
 17245  00479A  2575               	addwf	setPWM2duty@actuator& (0+255),w,b
 17246  00479C  0100               	movlb	0	; () banked
 17247  00479E  6F79               	movwf	setPWM2duty@act& (0+255),b
 17248  0047A0  0E01               	movlw	1
 17249  0047A2  0100               	movlb	0	; () banked
 17250  0047A4  2176               	addwfc	(setPWM2duty@actuator+1)& (0+255),w,b
 17251  0047A6  0100               	movlb	0	; () banked
 17252  0047A8  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17253  0047AA                     l640:
 17254                           
 17255                           ; BSR set to: 0
 17256                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 17257  0047AA  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 17258  0047AE  0100               	movlb	0	; () banked
 17259  0047B0  3B77               	swapf	??_setPWM2duty& (0+255),f,b
 17260  0047B2  5066               	movf	3942,w,c	;volatile
 17261  0047B4  0100               	movlb	0	; () banked
 17262  0047B6  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 17263  0047B8  0BCF               	andlw	-49
 17264  0047BA  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 17265  0047BC  6E66               	movwf	3942,c	;volatile
 17266                           
 17267                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 17268  0047BE  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 17269  0047C2  C07A  F078         	movff	setPWM2duty@act+1,??_setPWM2duty+1
 17270  0047C6  0100               	movlb	0	; () banked
 17271  0047C8  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 17272  0047CA  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 17273  0047CC  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 17274  0047CE  0100               	movlb	0	; () banked
 17275  0047D0  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 17276  0047D2  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 17277  0047D4  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 17278  0047D6  0100               	movlb	0	; () banked
 17279  0047D8  5177               	movf	??_setPWM2duty& (0+255),w,b
 17280  0047DA  6E67               	movwf	3943,c	;volatile
 17281                           
 17282                           ; BSR set to: 0
 17283  0047DC  0012               	return		;funcret
 17284  0047DE                     __end_of_setPWM2duty:
 17285                           	opt stack 0
 17286                           tblptru	equ	0xFF8
 17287                           tblptrh	equ	0xFF7
 17288                           tblptrl	equ	0xFF6
 17289                           tablat	equ	0xFF5
 17290                           prodh	equ	0xFF4
 17291                           prodl	equ	0xFF3
 17292                           intcon	equ	0xFF2
 17293                           postinc0	equ	0xFEE
 17294                           wreg	equ	0xFE8
 17295                           postdec1	equ	0xFE5
 17296                           fsr1l	equ	0xFE1
 17297                           indf2	equ	0xFDF
 17298                           postinc2	equ	0xFDE
 17299                           postdec2	equ	0xFDD
 17300                           plusw2	equ	0xFDB
 17301                           fsr2h	equ	0xFDA
 17302                           fsr2l	equ	0xFD9
 17303                           status	equ	0xFD8
 17304                           
 17305 ;; *************** function _EEPROMConfig *****************
 17306 ;; Defined at:
 17307 ;;		line 56 in file "source/sysParams.h"
 17308 ;; Parameters:    Size  Location     Type
 17309 ;;		None
 17310 ;; Auto vars:     Size  Location     Type
 17311 ;;		None
 17312 ;; Return value:  Size  Location     Type
 17313 ;;                  1    wreg      void 
 17314 ;; Registers used:
 17315 ;;		None
 17316 ;; Tracked objects:
 17317 ;;		On entry : 0/0
 17318 ;;		On exit  : 0/0
 17319 ;;		Unchanged: 0/0
 17320 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17321 ;;      Params:         0       0       0       0       0       0       0
 17322 ;;      Locals:         0       0       0       0       0       0       0
 17323 ;;      Temps:          0       0       0       0       0       0       0
 17324 ;;      Totals:         0       0       0       0       0       0       0
 17325 ;;Total ram usage:        0 bytes
 17326 ;; Hardware stack levels used:    1
 17327 ;; Hardware stack levels required when called:    8
 17328 ;; This function calls:
 17329 ;;		Nothing
 17330 ;; This function is called by:
 17331 ;;		_main
 17332 ;; This function uses a non-reentrant model
 17333 ;;
 17334                           
 17335                           	psect	text63
 17336  005244                     __ptext63:
 17337                           	opt stack 0
 17338  005244                     _EEPROMConfig:
 17339                           	opt stack 22
 17340                           
 17341                           ;sysParams.h: 57: EECON1bits.WREN = 0;
 17342                           
 17343                           ; BSR set to: 0
 17344                           ;incstack = 0
 17345  005244  94A6               	bcf	4006,2,c	;volatile
 17346                           
 17347                           ;sysParams.h: 58: EECON1bits.FREE = 0;
 17348  005246  98A6               	bcf	4006,4,c	;volatile
 17349  005248  0012               	return		;funcret
 17350  00524A                     __end_of_EEPROMConfig:
 17351                           	opt stack 0
 17352                           tblptru	equ	0xFF8
 17353                           tblptrh	equ	0xFF7
 17354                           tblptrl	equ	0xFF6
 17355                           tablat	equ	0xFF5
 17356                           prodh	equ	0xFF4
 17357                           prodl	equ	0xFF3
 17358                           intcon	equ	0xFF2
 17359                           postinc0	equ	0xFEE
 17360                           wreg	equ	0xFE8
 17361                           postdec1	equ	0xFE5
 17362                           fsr1l	equ	0xFE1
 17363                           indf2	equ	0xFDF
 17364                           postinc2	equ	0xFDE
 17365                           postdec2	equ	0xFDD
 17366                           plusw2	equ	0xFDB
 17367                           fsr2h	equ	0xFDA
 17368                           fsr2l	equ	0xFD9
 17369                           status	equ	0xFD8
 17370                           
 17371 ;; *************** function _isr *****************
 17372 ;; Defined at:
 17373 ;;		line 20 in file "source/main.c"
 17374 ;; Parameters:    Size  Location     Type
 17375 ;;		None
 17376 ;; Auto vars:     Size  Location     Type
 17377 ;;		None
 17378 ;; Return value:  Size  Location     Type
 17379 ;;                  1    wreg      void 
 17380 ;; Registers used:
 17381 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17382 ;; Tracked objects:
 17383 ;;		On entry : 0/0
 17384 ;;		On exit  : 0/0
 17385 ;;		Unchanged: 0/0
 17386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17387 ;;      Params:         0       0       0       0       0       0       0
 17388 ;;      Locals:         0       0       0       0       0       0       0
 17389 ;;      Temps:          0      17       0       0       0       0       0
 17390 ;;      Totals:         0      17       0       0       0       0       0
 17391 ;;Total ram usage:       17 bytes
 17392 ;; Hardware stack levels used:    1
 17393 ;; Hardware stack levels required when called:    7
 17394 ;; This function calls:
 17395 ;;		_UARTint
 17396 ;; This function is called by:
 17397 ;;		Interrupt level 1
 17398 ;; This function uses a non-reentrant model
 17399 ;;
 17400                           
 17401                           	psect	intcodelo
 17402  000018                     __pintcodelo:
 17403                           	opt stack 0
 17404  000018                     _isr:
 17405                           	opt stack 14
 17406                           
 17407                           ;incstack = 0
 17408  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17409  00001A  CFD8 F064          	movff	status,??_isr
 17410  00001E  CFE8 F065          	movff	wreg,??_isr+1
 17411  000022  CFE0 F066          	movff	bsr,??_isr+2
 17412  000026  CFFA F067          	movff	pclath,??_isr+3
 17413  00002A  CFFB F068          	movff	pclatu,??_isr+4
 17414  00002E  CFE9 F069          	movff	fsr0l,??_isr+5
 17415  000032  CFEA F06A          	movff	fsr0h,??_isr+6
 17416  000036  CFE1 F06B          	movff	fsr1l,??_isr+7
 17417  00003A  CFE2 F06C          	movff	fsr1h,??_isr+8
 17418  00003E  CFD9 F06D          	movff	fsr2l,??_isr+9
 17419  000042  CFDA F06E          	movff	fsr2h,??_isr+10
 17420  000046  CFF3 F06F          	movff	prodl,??_isr+11
 17421  00004A  CFF4 F070          	movff	prodh,??_isr+12
 17422  00004E  CFF6 F071          	movff	tblptrl,??_isr+13
 17423  000052  CFF7 F072          	movff	tblptrh,??_isr+14
 17424  000056  CFF8 F073          	movff	tblptru,??_isr+15
 17425  00005A  CFF5 F074          	movff	tablat,??_isr+16
 17426                           
 17427                           ;main.c: 21: if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
 17428  00005E  BA9D               	btfsc	3997,5,c	;volatile
 17429  000060  AA9E               	btfss	3998,5,c	;volatile
 17430  000062  D003               	goto	i1l718
 17431                           
 17432                           ;main.c: 22: UARTint();
 17433  000064  EC3D  F027         	call	_UARTint	;wreg free
 17434                           
 17435                           ;main.c: 23: PIR1bits.RC1IF = 0;
 17436  000068  9A9E               	bcf	3998,5,c	;volatile
 17437  00006A                     i1l718:
 17438  00006A  C074  FFF5         	movff	??_isr+16,tablat
 17439  00006E  C073  FFF8         	movff	??_isr+15,tblptru
 17440  000072  C072  FFF7         	movff	??_isr+14,tblptrh
 17441  000076  C071  FFF6         	movff	??_isr+13,tblptrl
 17442  00007A  C070  FFF4         	movff	??_isr+12,prodh
 17443  00007E  C06F  FFF3         	movff	??_isr+11,prodl
 17444  000082  C06E  FFDA         	movff	??_isr+10,fsr2h
 17445  000086  C06D  FFD9         	movff	??_isr+9,fsr2l
 17446  00008A  C06C  FFE2         	movff	??_isr+8,fsr1h
 17447  00008E  C06B  FFE1         	movff	??_isr+7,fsr1l
 17448  000092  C06A  FFEA         	movff	??_isr+6,fsr0h
 17449  000096  C069  FFE9         	movff	??_isr+5,fsr0l
 17450  00009A  C068  FFFB         	movff	??_isr+4,pclatu
 17451  00009E  C067  FFFA         	movff	??_isr+3,pclath
 17452  0000A2  C066  FFE0         	movff	??_isr+2,bsr
 17453  0000A6  C065  FFE8         	movff	??_isr+1,wreg
 17454  0000AA  C064  FFD8         	movff	??_isr,status
 17455  0000AE  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17456  0000B0  0010               	retfie	
 17457  0000B2                     __end_of_isr:
 17458                           	opt stack 0
 17459                           pclatu	equ	0xFFB
 17460                           pclath	equ	0xFFA
 17461                           tblptru	equ	0xFF8
 17462                           tblptrh	equ	0xFF7
 17463                           tblptrl	equ	0xFF6
 17464                           tablat	equ	0xFF5
 17465                           prodh	equ	0xFF4
 17466                           prodl	equ	0xFF3
 17467                           intcon	equ	0xFF2
 17468                           postinc0	equ	0xFEE
 17469                           fsr0h	equ	0xFEA
 17470                           fsr0l	equ	0xFE9
 17471                           wreg	equ	0xFE8
 17472                           postdec1	equ	0xFE5
 17473                           fsr1h	equ	0xFE2
 17474                           fsr1l	equ	0xFE1
 17475                           bsr	equ	0xFE0
 17476                           indf2	equ	0xFDF
 17477                           postinc2	equ	0xFDE
 17478                           postdec2	equ	0xFDD
 17479                           plusw2	equ	0xFDB
 17480                           fsr2h	equ	0xFDA
 17481                           fsr2l	equ	0xFD9
 17482                           status	equ	0xFD8
 17483                           
 17484 ;; *************** function _UARTint *****************
 17485 ;; Defined at:
 17486 ;;		line 16 in file "source/UARTConfig.h"
 17487 ;; Parameters:    Size  Location     Type
 17488 ;;		None
 17489 ;; Auto vars:     Size  Location     Type
 17490 ;;  sas             1   45[COMRAM] unsigned char 
 17491 ;; Return value:  Size  Location     Type
 17492 ;;                  1    wreg      void 
 17493 ;; Registers used:
 17494 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17495 ;; Tracked objects:
 17496 ;;		On entry : 0/0
 17497 ;;		On exit  : 0/0
 17498 ;;		Unchanged: 0/0
 17499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17500 ;;      Params:         0       0       0       0       0       0       0
 17501 ;;      Locals:         1       0       0       0       0       0       0
 17502 ;;      Temps:          0       0       0       0       0       0       0
 17503 ;;      Totals:         1       0       0       0       0       0       0
 17504 ;;Total ram usage:        1 bytes
 17505 ;; Hardware stack levels used:    1
 17506 ;; Hardware stack levels required when called:    6
 17507 ;; This function calls:
 17508 ;;		_putchUART
 17509 ;;		_sysParamInit
 17510 ;;		i1_saveSysParams
 17511 ;; This function is called by:
 17512 ;;		_isr
 17513 ;; This function uses a non-reentrant model
 17514 ;;
 17515                           
 17516                           	psect	text65
 17517  004E7A                     __ptext65:
 17518                           	opt stack 0
 17519  004E7A                     _UARTint:
 17520                           	opt stack 14
 17521                           
 17522                           ;UARTConfig.h: 17: char sas = RCREG1;
 17523                           
 17524                           ;incstack = 0
 17525  004E7A  CFAE F02E          	movff	4014,UARTint@sas	;volatile
 17526                           
 17527                           ;UARTConfig.h: 18: if(sas == 'A') {
 17528  004E7E  0E41               	movlw	65
 17529  004E80  182E               	xorwf	UARTint@sas,w,c
 17530  004E82  A4D8               	btfss	status,2,c
 17531  004E84  D00D               	goto	i1l9436
 17532                           
 17533                           ;UARTConfig.h: 19: putchUART(actualScreen);
 17534  004E86  0100               	movlb	0	; () banked
 17535  004E88  51D1               	movf	_actualScreen& (0+255),w,b
 17536  004E8A  EC08  F029         	call	_putchUART
 17537                           
 17538                           ;UARTConfig.h: 20: putchUART(menuSection);
 17539  004E8E  0100               	movlb	0	; () banked
 17540  004E90  51D4               	movf	_menuSection& (0+255),w,b
 17541  004E92  EC08  F029         	call	_putchUART
 17542                           
 17543                           ;UARTConfig.h: 21: putchUART(passSection);
 17544  004E96  0100               	movlb	0	; () banked
 17545  004E98  51D5               	movf	_passSection& (0+255),w,b
 17546  004E9A  EC08  F029         	call	_putchUART
 17547                           
 17548                           ;UARTConfig.h: 22: }else if(sas == 'B') {
 17549  004E9E  0012               	return	
 17550  004EA0                     i1l9436:
 17551  004EA0  0E42               	movlw	66
 17552  004EA2  182E               	xorwf	UARTint@sas,w,c
 17553  004EA4  A4D8               	btfss	status,2,c
 17554  004EA6  D003               	goto	i1l9440
 17555                           
 17556                           ;UARTConfig.h: 23: saveSysParams();
 17557  004EA8  EC6E  F01E         	call	i1_saveSysParams	;wreg free
 17558                           
 17559                           ;UARTConfig.h: 24: }else if(sas == 'C') {
 17560  004EAC  0012               	return	
 17561  004EAE                     i1l9440:
 17562  004EAE  0E43               	movlw	67
 17563  004EB0  182E               	xorwf	UARTint@sas,w,c
 17564  004EB2  A4D8               	btfss	status,2,c
 17565  004EB4  0012               	return	
 17566                           
 17567                           ;UARTConfig.h: 25: sysParamInit();
 17568  004EB6  EC0B  F020         	call	_sysParamInit	;wreg free
 17569  004EBA  0012               	return	
 17570  004EBC                     __end_of_UARTint:
 17571                           	opt stack 0
 17572                           pclatu	equ	0xFFB
 17573                           pclath	equ	0xFFA
 17574                           tblptru	equ	0xFF8
 17575                           tblptrh	equ	0xFF7
 17576                           tblptrl	equ	0xFF6
 17577                           tablat	equ	0xFF5
 17578                           prodh	equ	0xFF4
 17579                           prodl	equ	0xFF3
 17580                           intcon	equ	0xFF2
 17581                           postinc0	equ	0xFEE
 17582                           fsr0h	equ	0xFEA
 17583                           fsr0l	equ	0xFE9
 17584                           wreg	equ	0xFE8
 17585                           postdec1	equ	0xFE5
 17586                           fsr1h	equ	0xFE2
 17587                           fsr1l	equ	0xFE1
 17588                           bsr	equ	0xFE0
 17589                           indf2	equ	0xFDF
 17590                           postinc2	equ	0xFDE
 17591                           postdec2	equ	0xFDD
 17592                           plusw2	equ	0xFDB
 17593                           fsr2h	equ	0xFDA
 17594                           fsr2l	equ	0xFD9
 17595                           status	equ	0xFD8
 17596                           
 17597 ;; *************** function i1_saveSysParams *****************
 17598 ;; Defined at:
 17599 ;;		line 72 in file "source/sysParams.h"
 17600 ;; Parameters:    Size  Location     Type
 17601 ;;		None
 17602 ;; Auto vars:     Size  Location     Type
 17603 ;;		None
 17604 ;; Return value:  Size  Location     Type
 17605 ;;                  1    wreg      void 
 17606 ;; Registers used:
 17607 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17608 ;; Tracked objects:
 17609 ;;		On entry : 0/0
 17610 ;;		On exit  : 0/0
 17611 ;;		Unchanged: 0/0
 17612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17613 ;;      Params:         0       0       0       0       0       0       0
 17614 ;;      Locals:         0       0       0       0       0       0       0
 17615 ;;      Temps:          0       0       0       0       0       0       0
 17616 ;;      Totals:         0       0       0       0       0       0       0
 17617 ;;Total ram usage:        0 bytes
 17618 ;; Hardware stack levels used:    1
 17619 ;; Hardware stack levels required when called:    5
 17620 ;; This function calls:
 17621 ;;		i1_calcSysVars
 17622 ;;		i1_writeEEPROM
 17623 ;; This function is called by:
 17624 ;;		_UARTint
 17625 ;; This function uses a non-reentrant model
 17626 ;;
 17627                           
 17628                           	psect	text66
 17629  003CDC                     __ptext66:
 17630                           	opt stack 0
 17631  003CDC                     i1_saveSysParams:
 17632                           	opt stack 14
 17633                           
 17634                           ;sysParams.h: 73: EECON1bits.WREN = 1;
 17635                           
 17636                           ;incstack = 0
 17637  003CDC  84A6               	bsf	4006,2,c	;volatile
 17638                           
 17639                           ;sysParams.h: 74: ie = INTCONbits.GIE;
 17640  003CDE  0E00               	movlw	0
 17641  003CE0  BEF2               	btfsc	intcon,7,c	;volatile
 17642  003CE2  0E01               	movlw	1
 17643  003CE4  6E49               	movwf	_ie,c
 17644                           
 17645                           ;sysParams.h: 75: INTCONbits.GIE = 0;
 17646  003CE6  9EF2               	bcf	intcon,7,c	;volatile
 17647                           
 17648                           ;sysParams.h: 76: writeEEPROM(1, tVarProceso);
 17649  003CE8  C0E3  F015         	movff	_tVarProceso,i1writeEEPROM@data
 17650  003CEC  0E01               	movlw	1
 17651  003CEE  ECA9  F028         	call	i1_writeEEPROM
 17652                           
 17653                           ;sysParams.h: 77: fData.floatdat = tiXcorte;
 17654  003CF2  C037  F0CC         	movff	_tiXcorte,_fData
 17655  003CF6  C038  F0CD         	movff	_tiXcorte+1,_fData+1
 17656  003CFA  C039  F0CE         	movff	_tiXcorte+2,_fData+2
 17657  003CFE  C03A  F0CF         	movff	_tiXcorte+3,_fData+3
 17658                           
 17659                           ;sysParams.h: 78: writeEEPROM(2, fData.floatMB);
 17660  003D02  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17661  003D06  0E02               	movlw	2
 17662  003D08  ECA9  F028         	call	i1_writeEEPROM
 17663                           
 17664                           ;sysParams.h: 79: writeEEPROM(3, fData.floatUB);
 17665  003D0C  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17666  003D10  0E03               	movlw	3
 17667  003D12  ECA9  F028         	call	i1_writeEEPROM
 17668                           
 17669                           ;sysParams.h: 80: writeEEPROM(4, fData.floatHB);
 17670  003D16  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17671  003D1A  0E04               	movlw	4
 17672  003D1C  ECA9  F028         	call	i1_writeEEPROM
 17673                           
 17674                           ;sysParams.h: 81: writeEEPROM(5, fData.floatLB);
 17675  003D20  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17676  003D24  0E05               	movlw	5
 17677  003D26  ECA9  F028         	call	i1_writeEEPROM
 17678                           
 17679                           ;sysParams.h: 82: i16Data.int16dat = numCortes;
 17680  003D2A  C0E1  F043         	movff	_numCortes,_i16Data
 17681  003D2E  C0E2  F044         	movff	_numCortes+1,_i16Data+1
 17682                           
 17683                           ;sysParams.h: 83: writeEEPROM(6, i16Data.int16HB);
 17684  003D32  C044  F015         	movff	_i16Data+1,i1writeEEPROM@data
 17685  003D36  0E06               	movlw	6
 17686  003D38  ECA9  F028         	call	i1_writeEEPROM
 17687                           
 17688                           ;sysParams.h: 84: writeEEPROM(7, i16Data.int16LB);
 17689  003D3C  C043  F015         	movff	_i16Data,i1writeEEPROM@data
 17690  003D40  0E07               	movlw	7
 17691  003D42  ECA9  F028         	call	i1_writeEEPROM
 17692                           
 17693                           ;sysParams.h: 85: fData.floatdat = diamTubo;
 17694  003D46  C0DD  F0CC         	movff	_diamTubo,_fData
 17695  003D4A  C0DE  F0CD         	movff	_diamTubo+1,_fData+1
 17696  003D4E  C0DF  F0CE         	movff	_diamTubo+2,_fData+2
 17697  003D52  C0E0  F0CF         	movff	_diamTubo+3,_fData+3
 17698                           
 17699                           ;sysParams.h: 86: writeEEPROM(8, fData.floatMB);
 17700  003D56  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17701  003D5A  0E08               	movlw	8
 17702  003D5C  ECA9  F028         	call	i1_writeEEPROM
 17703                           
 17704                           ;sysParams.h: 87: writeEEPROM(9, fData.floatUB);
 17705  003D60  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17706  003D64  0E09               	movlw	9
 17707  003D66  ECA9  F028         	call	i1_writeEEPROM
 17708                           
 17709                           ;sysParams.h: 88: writeEEPROM(10, fData.floatHB);
 17710  003D6A  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17711  003D6E  0E0A               	movlw	10
 17712  003D70  ECA9  F028         	call	i1_writeEEPROM
 17713                           
 17714                           ;sysParams.h: 89: writeEEPROM(11, fData.floatLB);
 17715  003D74  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17716  003D78  0E0B               	movlw	11
 17717  003D7A  ECA9  F028         	call	i1_writeEEPROM
 17718                           
 17719                           ;sysParams.h: 90: fData.floatdat = densidadMasa;
 17720  003D7E  C0D9  F0CC         	movff	_densidadMasa,_fData
 17721  003D82  C0DA  F0CD         	movff	_densidadMasa+1,_fData+1
 17722  003D86  C0DB  F0CE         	movff	_densidadMasa+2,_fData+2
 17723  003D8A  C0DC  F0CF         	movff	_densidadMasa+3,_fData+3
 17724                           
 17725                           ;sysParams.h: 91: writeEEPROM(12, fData.floatMB);
 17726  003D8E  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17727  003D92  0E0C               	movlw	12
 17728  003D94  ECA9  F028         	call	i1_writeEEPROM
 17729                           
 17730                           ;sysParams.h: 92: writeEEPROM(13, fData.floatUB);
 17731  003D98  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17732  003D9C  0E0D               	movlw	13
 17733  003D9E  ECA9  F028         	call	i1_writeEEPROM
 17734                           
 17735                           ;sysParams.h: 93: writeEEPROM(14, fData.floatHB);
 17736  003DA2  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17737  003DA6  0E0E               	movlw	14
 17738  003DA8  ECA9  F028         	call	i1_writeEEPROM
 17739                           
 17740                           ;sysParams.h: 94: writeEEPROM(15, fData.floatLB);
 17741  003DAC  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17742  003DB0  0E0F               	movlw	15
 17743  003DB2  ECA9  F028         	call	i1_writeEEPROM
 17744                           
 17745                           ;sysParams.h: 95: fData.floatdat = velocidadMasa;
 17746  003DB6  C03B  F0CC         	movff	_velocidadMasa,_fData
 17747  003DBA  C03C  F0CD         	movff	_velocidadMasa+1,_fData+1
 17748  003DBE  C03D  F0CE         	movff	_velocidadMasa+2,_fData+2
 17749  003DC2  C03E  F0CF         	movff	_velocidadMasa+3,_fData+3
 17750                           
 17751                           ;sysParams.h: 96: writeEEPROM(16, fData.floatMB);
 17752  003DC6  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17753  003DCA  0E10               	movlw	16
 17754  003DCC  ECA9  F028         	call	i1_writeEEPROM
 17755                           
 17756                           ;sysParams.h: 97: writeEEPROM(17, fData.floatUB);
 17757  003DD0  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17758  003DD4  0E11               	movlw	17
 17759  003DD6  ECA9  F028         	call	i1_writeEEPROM
 17760                           
 17761                           ;sysParams.h: 98: writeEEPROM(18, fData.floatHB);
 17762  003DDA  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17763  003DDE  0E12               	movlw	18
 17764  003DE0  ECA9  F028         	call	i1_writeEEPROM
 17765                           
 17766                           ;sysParams.h: 99: writeEEPROM(19, fData.floatLB);
 17767  003DE4  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17768  003DE8  0E13               	movlw	19
 17769  003DEA  ECA9  F028         	call	i1_writeEEPROM
 17770                           
 17771                           ;sysParams.h: 100: EECON1bits.WREN = 0;
 17772  003DEE  94A6               	bcf	4006,2,c	;volatile
 17773                           
 17774                           ;sysParams.h: 101: INTCONbits.GIE = ie;
 17775  003DF0  B049               	btfsc	_ie,0,c
 17776  003DF2  D002               	bra	i1u1172_25
 17777  003DF4  9EF2               	bcf	intcon,7,c	;volatile
 17778  003DF6  D001               	bra	i1u1172_26
 17779  003DF8                     i1u1172_25:
 17780  003DF8  8EF2               	bsf	intcon,7,c	;volatile
 17781  003DFA                     i1u1172_26:
 17782                           
 17783                           ;sysParams.h: 102: calcSysVars();
 17784  003DFA  ECA1  F01C         	call	i1_calcSysVars	;wreg free
 17785  003DFE  0012               	return		;funcret
 17786  003E00                     __end_ofi1_saveSysParams:
 17787                           	opt stack 0
 17788                           pclatu	equ	0xFFB
 17789                           pclath	equ	0xFFA
 17790                           tblptru	equ	0xFF8
 17791                           tblptrh	equ	0xFF7
 17792                           tblptrl	equ	0xFF6
 17793                           tablat	equ	0xFF5
 17794                           prodh	equ	0xFF4
 17795                           prodl	equ	0xFF3
 17796                           intcon	equ	0xFF2
 17797                           postinc0	equ	0xFEE
 17798                           fsr0h	equ	0xFEA
 17799                           fsr0l	equ	0xFE9
 17800                           wreg	equ	0xFE8
 17801                           postdec1	equ	0xFE5
 17802                           fsr1h	equ	0xFE2
 17803                           fsr1l	equ	0xFE1
 17804                           bsr	equ	0xFE0
 17805                           indf2	equ	0xFDF
 17806                           postinc2	equ	0xFDE
 17807                           postdec2	equ	0xFDD
 17808                           plusw2	equ	0xFDB
 17809                           fsr2h	equ	0xFDA
 17810                           fsr2l	equ	0xFD9
 17811                           status	equ	0xFD8
 17812                           
 17813 ;; *************** function i1_writeEEPROM *****************
 17814 ;; Defined at:
 17815 ;;		line 36 in file "source/sysParams.h"
 17816 ;; Parameters:    Size  Location     Type
 17817 ;;  adr             1    wreg     unsigned char 
 17818 ;;  data            1   20[COMRAM] unsigned char 
 17819 ;; Auto vars:     Size  Location     Type
 17820 ;;  adr             1   21[COMRAM] unsigned char 
 17821 ;; Return value:  Size  Location     Type
 17822 ;;                  1    wreg      void 
 17823 ;; Registers used:
 17824 ;;		wreg, status,2
 17825 ;; Tracked objects:
 17826 ;;		On entry : 0/0
 17827 ;;		On exit  : 0/0
 17828 ;;		Unchanged: 0/0
 17829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17830 ;;      Params:         1       0       0       0       0       0       0
 17831 ;;      Locals:         1       0       0       0       0       0       0
 17832 ;;      Temps:          0       0       0       0       0       0       0
 17833 ;;      Totals:         2       0       0       0       0       0       0
 17834 ;;Total ram usage:        2 bytes
 17835 ;; Hardware stack levels used:    1
 17836 ;; Hardware stack levels required when called:    3
 17837 ;; This function calls:
 17838 ;;		Nothing
 17839 ;; This function is called by:
 17840 ;;		i1_saveSysParams
 17841 ;; This function uses a non-reentrant model
 17842 ;;
 17843                           
 17844                           	psect	text67
 17845  005152                     __ptext67:
 17846                           	opt stack 0
 17847  005152                     i1_writeEEPROM:
 17848                           	opt stack 15
 17849                           
 17850                           ;incstack = 0
 17851                           ;i1writeEEPROM@adr stored from wreg
 17852  005152  6E16               	movwf	i1writeEEPROM@adr,c
 17853                           
 17854                           ;sysParams.h: 37: EEADR = adr;
 17855  005154  C016  FFA9         	movff	i1writeEEPROM@adr,4009	;volatile
 17856                           
 17857                           ;sysParams.h: 38: EEDATA = data;
 17858  005158  C015  FFA8         	movff	i1writeEEPROM@data,4008	;volatile
 17859                           
 17860                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 17861  00515C  9EA6               	bcf	4006,7,c	;volatile
 17862                           
 17863                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 17864  00515E  9CA6               	bcf	4006,6,c	;volatile
 17865                           
 17866                           ;sysParams.h: 41: EECON2 = 0x55;
 17867  005160  0E55               	movlw	85
 17868  005162  6EA7               	movwf	4007,c	;volatile
 17869                           
 17870                           ;sysParams.h: 42: EECON2 = 0xAA;
 17871  005164  0EAA               	movlw	170
 17872  005166  6EA7               	movwf	4007,c	;volatile
 17873                           
 17874                           ;sysParams.h: 43: EECON1bits.WR = 1;
 17875  005168  82A6               	bsf	4006,1,c	;volatile
 17876  00516A                     i1l282:
 17877  00516A  A2A6               	btfss	4006,1,c	;volatile
 17878  00516C  0012               	return	
 17879  00516E  D7FD               	goto	i1l282
 17880  005170                     __end_ofi1_writeEEPROM:
 17881                           	opt stack 0
 17882                           pclatu	equ	0xFFB
 17883                           pclath	equ	0xFFA
 17884                           tblptru	equ	0xFF8
 17885                           tblptrh	equ	0xFF7
 17886                           tblptrl	equ	0xFF6
 17887                           tablat	equ	0xFF5
 17888                           prodh	equ	0xFF4
 17889                           prodl	equ	0xFF3
 17890                           intcon	equ	0xFF2
 17891                           postinc0	equ	0xFEE
 17892                           fsr0h	equ	0xFEA
 17893                           fsr0l	equ	0xFE9
 17894                           wreg	equ	0xFE8
 17895                           postdec1	equ	0xFE5
 17896                           fsr1h	equ	0xFE2
 17897                           fsr1l	equ	0xFE1
 17898                           bsr	equ	0xFE0
 17899                           indf2	equ	0xFDF
 17900                           postinc2	equ	0xFDE
 17901                           postdec2	equ	0xFDD
 17902                           plusw2	equ	0xFDB
 17903                           fsr2h	equ	0xFDA
 17904                           fsr2l	equ	0xFD9
 17905                           status	equ	0xFD8
 17906                           
 17907 ;; *************** function _sysParamInit *****************
 17908 ;; Defined at:
 17909 ;;		line 134 in file "source/sysParams.h"
 17910 ;; Parameters:    Size  Location     Type
 17911 ;;		None
 17912 ;; Auto vars:     Size  Location     Type
 17913 ;;		None
 17914 ;; Return value:  Size  Location     Type
 17915 ;;                  1    wreg      void 
 17916 ;; Registers used:
 17917 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17918 ;; Tracked objects:
 17919 ;;		On entry : 0/0
 17920 ;;		On exit  : 0/0
 17921 ;;		Unchanged: 0/0
 17922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17923 ;;      Params:         0       0       0       0       0       0       0
 17924 ;;      Locals:         0       0       0       0       0       0       0
 17925 ;;      Temps:          0       0       0       0       0       0       0
 17926 ;;      Totals:         0       0       0       0       0       0       0
 17927 ;;Total ram usage:        0 bytes
 17928 ;; Hardware stack levels used:    1
 17929 ;; Hardware stack levels required when called:    5
 17930 ;; This function calls:
 17931 ;;		_readEEPROM
 17932 ;;		i1_calcSysVars
 17933 ;; This function is called by:
 17934 ;;		_UARTint
 17935 ;; This function uses a non-reentrant model
 17936 ;;
 17937                           
 17938                           	psect	text68
 17939  004016                     __ptext68:
 17940                           	opt stack 0
 17941  004016                     _sysParamInit:
 17942                           	opt stack 14
 17943                           
 17944                           ;sysParams.h: 135: tVarProceso = readEEPROM(1);
 17945                           
 17946                           ;incstack = 0
 17947  004016  0E01               	movlw	1
 17948  004018  ECCE  F028         	call	_readEEPROM
 17949  00401C  0100               	movlb	0	; () banked
 17950  00401E  6FE3               	movwf	_tVarProceso& (0+255),b
 17951                           
 17952                           ;sysParams.h: 136: fData.floatMB = readEEPROM(2);
 17953  004020  0E02               	movlw	2
 17954  004022  ECCE  F028         	call	_readEEPROM
 17955  004026  0100               	movlb	0	; () banked
 17956  004028  6FCF               	movwf	(_fData+3)& (0+255),b
 17957                           
 17958                           ;sysParams.h: 137: fData.floatUB = readEEPROM(3);
 17959  00402A  0E03               	movlw	3
 17960  00402C  ECCE  F028         	call	_readEEPROM
 17961  004030  0100               	movlb	0	; () banked
 17962  004032  6FCE               	movwf	(_fData+2)& (0+255),b
 17963                           
 17964                           ;sysParams.h: 138: fData.floatHB = readEEPROM(4);
 17965  004034  0E04               	movlw	4
 17966  004036  ECCE  F028         	call	_readEEPROM
 17967  00403A  0100               	movlb	0	; () banked
 17968  00403C  6FCD               	movwf	(_fData+1)& (0+255),b
 17969                           
 17970                           ;sysParams.h: 139: fData.floatLB = readEEPROM(5);
 17971  00403E  0E05               	movlw	5
 17972  004040  ECCE  F028         	call	_readEEPROM
 17973  004044  0100               	movlb	0	; () banked
 17974  004046  6FCC               	movwf	_fData& (0+255),b
 17975                           
 17976                           ; BSR set to: 0
 17977                           ;sysParams.h: 140: tiXcorte = fData.floatdat;
 17978  004048  C0CC  F037         	movff	_fData,_tiXcorte
 17979  00404C  C0CD  F038         	movff	_fData+1,_tiXcorte+1
 17980  004050  C0CE  F039         	movff	_fData+2,_tiXcorte+2
 17981  004054  C0CF  F03A         	movff	_fData+3,_tiXcorte+3
 17982                           
 17983                           ;sysParams.h: 141: i16Data.int16HB = readEEPROM(6);
 17984  004058  0E06               	movlw	6
 17985  00405A  ECCE  F028         	call	_readEEPROM
 17986  00405E  6E44               	movwf	_i16Data+1,c
 17987                           
 17988                           ;sysParams.h: 142: i16Data.int16LB = readEEPROM(7);
 17989  004060  0E07               	movlw	7
 17990  004062  ECCE  F028         	call	_readEEPROM
 17991  004066  6E43               	movwf	_i16Data,c
 17992                           
 17993                           ;sysParams.h: 143: numCortes = i16Data.int16dat;
 17994  004068  C043  F0E1         	movff	_i16Data,_numCortes
 17995  00406C  C044  F0E2         	movff	_i16Data+1,_numCortes+1
 17996                           
 17997                           ;sysParams.h: 144: fData.floatMB = readEEPROM(8);
 17998  004070  0E08               	movlw	8
 17999  004072  ECCE  F028         	call	_readEEPROM
 18000  004076  0100               	movlb	0	; () banked
 18001  004078  6FCF               	movwf	(_fData+3)& (0+255),b
 18002                           
 18003                           ;sysParams.h: 145: fData.floatUB = readEEPROM(9);
 18004  00407A  0E09               	movlw	9
 18005  00407C  ECCE  F028         	call	_readEEPROM
 18006  004080  0100               	movlb	0	; () banked
 18007  004082  6FCE               	movwf	(_fData+2)& (0+255),b
 18008                           
 18009                           ;sysParams.h: 146: fData.floatHB = readEEPROM(10);
 18010  004084  0E0A               	movlw	10
 18011  004086  ECCE  F028         	call	_readEEPROM
 18012  00408A  0100               	movlb	0	; () banked
 18013  00408C  6FCD               	movwf	(_fData+1)& (0+255),b
 18014                           
 18015                           ;sysParams.h: 147: fData.floatLB = readEEPROM(11);
 18016  00408E  0E0B               	movlw	11
 18017  004090  ECCE  F028         	call	_readEEPROM
 18018  004094  0100               	movlb	0	; () banked
 18019  004096  6FCC               	movwf	_fData& (0+255),b
 18020                           
 18021                           ; BSR set to: 0
 18022                           ;sysParams.h: 148: diamTubo = fData.floatdat;
 18023  004098  C0CC  F0DD         	movff	_fData,_diamTubo
 18024  00409C  C0CD  F0DE         	movff	_fData+1,_diamTubo+1
 18025  0040A0  C0CE  F0DF         	movff	_fData+2,_diamTubo+2
 18026  0040A4  C0CF  F0E0         	movff	_fData+3,_diamTubo+3
 18027                           
 18028                           ;sysParams.h: 149: fData.floatMB = readEEPROM(12);
 18029  0040A8  0E0C               	movlw	12
 18030  0040AA  ECCE  F028         	call	_readEEPROM
 18031  0040AE  0100               	movlb	0	; () banked
 18032  0040B0  6FCF               	movwf	(_fData+3)& (0+255),b
 18033                           
 18034                           ;sysParams.h: 150: fData.floatUB = readEEPROM(13);
 18035  0040B2  0E0D               	movlw	13
 18036  0040B4  ECCE  F028         	call	_readEEPROM
 18037  0040B8  0100               	movlb	0	; () banked
 18038  0040BA  6FCE               	movwf	(_fData+2)& (0+255),b
 18039                           
 18040                           ;sysParams.h: 151: fData.floatHB = readEEPROM(14);
 18041  0040BC  0E0E               	movlw	14
 18042  0040BE  ECCE  F028         	call	_readEEPROM
 18043  0040C2  0100               	movlb	0	; () banked
 18044  0040C4  6FCD               	movwf	(_fData+1)& (0+255),b
 18045                           
 18046                           ;sysParams.h: 152: fData.floatLB = readEEPROM(15);
 18047  0040C6  0E0F               	movlw	15
 18048  0040C8  ECCE  F028         	call	_readEEPROM
 18049  0040CC  0100               	movlb	0	; () banked
 18050  0040CE  6FCC               	movwf	_fData& (0+255),b
 18051                           
 18052                           ; BSR set to: 0
 18053                           ;sysParams.h: 153: densidadMasa = fData.floatdat;
 18054  0040D0  C0CC  F0D9         	movff	_fData,_densidadMasa
 18055  0040D4  C0CD  F0DA         	movff	_fData+1,_densidadMasa+1
 18056  0040D8  C0CE  F0DB         	movff	_fData+2,_densidadMasa+2
 18057  0040DC  C0CF  F0DC         	movff	_fData+3,_densidadMasa+3
 18058                           
 18059                           ;sysParams.h: 154: fData.floatMB = readEEPROM(16);
 18060  0040E0  0E10               	movlw	16
 18061  0040E2  ECCE  F028         	call	_readEEPROM
 18062  0040E6  0100               	movlb	0	; () banked
 18063  0040E8  6FCF               	movwf	(_fData+3)& (0+255),b
 18064                           
 18065                           ;sysParams.h: 155: fData.floatUB = readEEPROM(17);
 18066  0040EA  0E11               	movlw	17
 18067  0040EC  ECCE  F028         	call	_readEEPROM
 18068  0040F0  0100               	movlb	0	; () banked
 18069  0040F2  6FCE               	movwf	(_fData+2)& (0+255),b
 18070                           
 18071                           ;sysParams.h: 156: fData.floatHB = readEEPROM(18);
 18072  0040F4  0E12               	movlw	18
 18073  0040F6  ECCE  F028         	call	_readEEPROM
 18074  0040FA  0100               	movlb	0	; () banked
 18075  0040FC  6FCD               	movwf	(_fData+1)& (0+255),b
 18076                           
 18077                           ;sysParams.h: 157: fData.floatLB = readEEPROM(19);
 18078  0040FE  0E13               	movlw	19
 18079  004100  ECCE  F028         	call	_readEEPROM
 18080  004104  0100               	movlb	0	; () banked
 18081  004106  6FCC               	movwf	_fData& (0+255),b
 18082                           
 18083                           ; BSR set to: 0
 18084                           ;sysParams.h: 158: velocidadMasa = fData.floatdat;
 18085  004108  C0CC  F03B         	movff	_fData,_velocidadMasa
 18086  00410C  C0CD  F03C         	movff	_fData+1,_velocidadMasa+1
 18087  004110  C0CE  F03D         	movff	_fData+2,_velocidadMasa+2
 18088  004114  C0CF  F03E         	movff	_fData+3,_velocidadMasa+3
 18089                           
 18090                           ; BSR set to: 0
 18091                           ;sysParams.h: 159: calcSysVars();
 18092  004118  ECA1  F01C         	call	i1_calcSysVars	;wreg free
 18093  00411C  0012               	return		;funcret
 18094  00411E                     __end_of_sysParamInit:
 18095                           	opt stack 0
 18096                           pclatu	equ	0xFFB
 18097                           pclath	equ	0xFFA
 18098                           tblptru	equ	0xFF8
 18099                           tblptrh	equ	0xFF7
 18100                           tblptrl	equ	0xFF6
 18101                           tablat	equ	0xFF5
 18102                           prodh	equ	0xFF4
 18103                           prodl	equ	0xFF3
 18104                           intcon	equ	0xFF2
 18105                           postinc0	equ	0xFEE
 18106                           fsr0h	equ	0xFEA
 18107                           fsr0l	equ	0xFE9
 18108                           wreg	equ	0xFE8
 18109                           postdec1	equ	0xFE5
 18110                           fsr1h	equ	0xFE2
 18111                           fsr1l	equ	0xFE1
 18112                           bsr	equ	0xFE0
 18113                           indf2	equ	0xFDF
 18114                           postinc2	equ	0xFDE
 18115                           postdec2	equ	0xFDD
 18116                           plusw2	equ	0xFDB
 18117                           fsr2h	equ	0xFDA
 18118                           fsr2l	equ	0xFD9
 18119                           status	equ	0xFD8
 18120                           
 18121 ;; *************** function i1_calcSysVars *****************
 18122 ;; Defined at:
 18123 ;;		line 62 in file "source/sysParams.h"
 18124 ;; Parameters:    Size  Location     Type
 18125 ;;		None
 18126 ;; Auto vars:     Size  Location     Type
 18127 ;;  calcSysVars     4    0[BANK0 ] float 
 18128 ;; Return value:  Size  Location     Type
 18129 ;;                  1    wreg      void 
 18130 ;; Registers used:
 18131 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18132 ;; Tracked objects:
 18133 ;;		On entry : 0/0
 18134 ;;		On exit  : 0/0
 18135 ;;		Unchanged: 0/0
 18136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18137 ;;      Params:         0       0       0       0       0       0       0
 18138 ;;      Locals:         0       4       0       0       0       0       0
 18139 ;;      Temps:          0       0       0       0       0       0       0
 18140 ;;      Totals:         0       4       0       0       0       0       0
 18141 ;;Total ram usage:        4 bytes
 18142 ;; Hardware stack levels used:    1
 18143 ;; Hardware stack levels required when called:    4
 18144 ;; This function calls:
 18145 ;;		i1___fldiv
 18146 ;;		i1___flmul
 18147 ;; This function is called by:
 18148 ;;		_sysParamInit
 18149 ;;		i1_saveSysParams
 18150 ;; This function uses a non-reentrant model
 18151 ;;
 18152                           
 18153                           	psect	text69
 18154  003942                     __ptext69:
 18155                           	opt stack 0
 18156  003942                     i1_calcSysVars:
 18157                           	opt stack 14
 18158                           
 18159                           ;sysParams.h: 63: float temp = 0;
 18160                           
 18161                           ;incstack = 0
 18162  003942  0E00               	movlw	0
 18163  003944  0100               	movlb	0	; () banked
 18164  003946  6F60               	movwf	i1calcSysVars@temp& (0+255),b
 18165  003948  0E00               	movlw	0
 18166  00394A  6F61               	movwf	(i1calcSysVars@temp+1)& (0+255),b
 18167  00394C  0E00               	movlw	0
 18168  00394E  6F62               	movwf	(i1calcSysVars@temp+2)& (0+255),b
 18169  003950  0E00               	movlw	0
 18170  003952  6F63               	movwf	(i1calcSysVars@temp+3)& (0+255),b
 18171                           
 18172                           ; BSR set to: 0
 18173                           ;sysParams.h: 64: temp = (float)diamTubo / 2000.0f;
 18174  003954  C0DD  F015         	movff	_diamTubo,i1___fldiv@b
 18175  003958  C0DE  F016         	movff	_diamTubo+1,i1___fldiv@b+1
 18176  00395C  C0DF  F017         	movff	_diamTubo+2,i1___fldiv@b+2
 18177  003960  C0E0  F018         	movff	_diamTubo+3,i1___fldiv@b+3
 18178  003964  0E00               	movlw	0
 18179  003966  6E19               	movwf	i1___fldiv@a,c
 18180  003968  0E00               	movlw	0
 18181  00396A  6E1A               	movwf	i1___fldiv@a+1,c
 18182  00396C  0EFA               	movlw	250
 18183  00396E  6E1B               	movwf	i1___fldiv@a+2,c
 18184  003970  0E44               	movlw	68
 18185  003972  6E1C               	movwf	i1___fldiv@a+3,c
 18186  003974  EC54  F014         	call	i1___fldiv	;wreg free
 18187  003978  C015  F060         	movff	?i1___fldiv,i1calcSysVars@temp
 18188  00397C  C016  F061         	movff	?i1___fldiv+1,i1calcSysVars@temp+1
 18189  003980  C017  F062         	movff	?i1___fldiv+2,i1calcSysVars@temp+2
 18190  003984  C018  F063         	movff	?i1___fldiv+3,i1calcSysVars@temp+3
 18191                           
 18192                           ;sysParams.h: 65: temp *= temp;
 18193  003988  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18194  00398C  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18195  003990  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18196  003994  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18197  003998  C060  F019         	movff	i1calcSysVars@temp,i1___flmul@a
 18198  00399C  C061  F01A         	movff	i1calcSysVars@temp+1,i1___flmul@a+1
 18199  0039A0  C062  F01B         	movff	i1calcSysVars@temp+2,i1___flmul@a+2
 18200  0039A4  C063  F01C         	movff	i1calcSysVars@temp+3,i1___flmul@a+3
 18201  0039A8  EC43  F011         	call	i1___flmul	;wreg free
 18202  0039AC  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18203  0039B0  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18204  0039B4  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18205  0039B8  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18206                           
 18207                           ;sysParams.h: 66: temp *= pi;
 18208  0039BC  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18209  0039C0  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18210  0039C4  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18211  0039C8  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18212  0039CC  C14F  F019         	movff	_pi,i1___flmul@a
 18213  0039D0  C150  F01A         	movff	_pi+1,i1___flmul@a+1
 18214  0039D4  C151  F01B         	movff	_pi+2,i1___flmul@a+2
 18215  0039D8  C152  F01C         	movff	_pi+3,i1___flmul@a+3
 18216  0039DC  EC43  F011         	call	i1___flmul	;wreg free
 18217  0039E0  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18218  0039E4  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18219  0039E8  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18220  0039EC  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18221                           
 18222                           ;sysParams.h: 67: temp *= velocidadMasa;
 18223  0039F0  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18224  0039F4  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18225  0039F8  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18226  0039FC  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18227  003A00  C03B  F019         	movff	_velocidadMasa,i1___flmul@a
 18228  003A04  C03C  F01A         	movff	_velocidadMasa+1,i1___flmul@a+1
 18229  003A08  C03D  F01B         	movff	_velocidadMasa+2,i1___flmul@a+2
 18230  003A0C  C03E  F01C         	movff	_velocidadMasa+3,i1___flmul@a+3
 18231  003A10  EC43  F011         	call	i1___flmul	;wreg free
 18232  003A14  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18233  003A18  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18234  003A1C  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18235  003A20  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18236                           
 18237                           ;sysParams.h: 68: m3Xcorte = (float)temp * tiXcorte;
 18238  003A24  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18239  003A28  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18240  003A2C  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18241  003A30  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18242  003A34  C037  F019         	movff	_tiXcorte,i1___flmul@a
 18243  003A38  C038  F01A         	movff	_tiXcorte+1,i1___flmul@a+1
 18244  003A3C  C039  F01B         	movff	_tiXcorte+2,i1___flmul@a+2
 18245  003A40  C03A  F01C         	movff	_tiXcorte+3,i1___flmul@a+3
 18246  003A44  EC43  F011         	call	i1___flmul	;wreg free
 18247  003A48  C015  F033         	movff	?i1___flmul,_m3Xcorte
 18248  003A4C  C016  F034         	movff	?i1___flmul+1,_m3Xcorte+1
 18249  003A50  C017  F035         	movff	?i1___flmul+2,_m3Xcorte+2
 18250  003A54  C018  F036         	movff	?i1___flmul+3,_m3Xcorte+3
 18251                           
 18252                           ;sysParams.h: 69: kgXcorte = (float)densidadMasa * m3Xcorte;
 18253  003A58  C0D9  F015         	movff	_densidadMasa,i1___flmul@b
 18254  003A5C  C0DA  F016         	movff	_densidadMasa+1,i1___flmul@b+1
 18255  003A60  C0DB  F017         	movff	_densidadMasa+2,i1___flmul@b+2
 18256  003A64  C0DC  F018         	movff	_densidadMasa+3,i1___flmul@b+3
 18257  003A68  C033  F019         	movff	_m3Xcorte,i1___flmul@a
 18258  003A6C  C034  F01A         	movff	_m3Xcorte+1,i1___flmul@a+1
 18259  003A70  C035  F01B         	movff	_m3Xcorte+2,i1___flmul@a+2
 18260  003A74  C036  F01C         	movff	_m3Xcorte+3,i1___flmul@a+3
 18261  003A78  EC43  F011         	call	i1___flmul	;wreg free
 18262  003A7C  C015  F02F         	movff	?i1___flmul,_kgXcorte
 18263  003A80  C016  F030         	movff	?i1___flmul+1,_kgXcorte+1
 18264  003A84  C017  F031         	movff	?i1___flmul+2,_kgXcorte+2
 18265  003A88  C018  F032         	movff	?i1___flmul+3,_kgXcorte+3
 18266  003A8C  0012               	return		;funcret
 18267  003A8E                     __end_ofi1_calcSysVars:
 18268                           	opt stack 0
 18269                           pclatu	equ	0xFFB
 18270                           pclath	equ	0xFFA
 18271                           tblptru	equ	0xFF8
 18272                           tblptrh	equ	0xFF7
 18273                           tblptrl	equ	0xFF6
 18274                           tablat	equ	0xFF5
 18275                           prodh	equ	0xFF4
 18276                           prodl	equ	0xFF3
 18277                           intcon	equ	0xFF2
 18278                           postinc0	equ	0xFEE
 18279                           fsr0h	equ	0xFEA
 18280                           fsr0l	equ	0xFE9
 18281                           wreg	equ	0xFE8
 18282                           postdec1	equ	0xFE5
 18283                           fsr1h	equ	0xFE2
 18284                           fsr1l	equ	0xFE1
 18285                           bsr	equ	0xFE0
 18286                           indf2	equ	0xFDF
 18287                           postinc2	equ	0xFDE
 18288                           postdec2	equ	0xFDD
 18289                           plusw2	equ	0xFDB
 18290                           fsr2h	equ	0xFDA
 18291                           fsr2l	equ	0xFD9
 18292                           status	equ	0xFD8
 18293                           
 18294 ;; *************** function i1___flmul *****************
 18295 ;; Defined at:
 18296 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 18297 ;; Parameters:    Size  Location     Type
 18298 ;;  b               4   20[COMRAM] void 
 18299 ;;  a               4   24[COMRAM] void 
 18300 ;; Auto vars:     Size  Location     Type
 18301 ;;  __flmul         4   39[COMRAM] struct .
 18302 ;;  __flmul         4   34[COMRAM] unsigned long 
 18303 ;;  __flmul         2   43[COMRAM] struct .
 18304 ;;  __flmul         1   38[COMRAM] unsigned char 
 18305 ;;  __flmul         1   33[COMRAM] unsigned char 
 18306 ;;  __flmul         1   32[COMRAM] unsigned char 
 18307 ;; Return value:  Size  Location     Type
 18308 ;;                  4   20[COMRAM] unsigned char 
 18309 ;; Registers used:
 18310 ;;		wreg, status,2, status,0, prodl, prodh
 18311 ;; Tracked objects:
 18312 ;;		On entry : 0/0
 18313 ;;		On exit  : 0/0
 18314 ;;		Unchanged: 0/0
 18315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18316 ;;      Params:         8       0       0       0       0       0       0
 18317 ;;      Locals:        13       0       0       0       0       0       0
 18318 ;;      Temps:          4       0       0       0       0       0       0
 18319 ;;      Totals:        25       0       0       0       0       0       0
 18320 ;;Total ram usage:       25 bytes
 18321 ;; Hardware stack levels used:    1
 18322 ;; Hardware stack levels required when called:    3
 18323 ;; This function calls:
 18324 ;;		Nothing
 18325 ;; This function is called by:
 18326 ;;		i1_calcSysVars
 18327 ;; This function uses a non-reentrant model
 18328 ;;
 18329                           
 18330                           	psect	text70
 18331  002286                     __ptext70:
 18332                           	opt stack 0
 18333  002286                     i1___flmul:
 18334                           	opt stack 14
 18335                           
 18336                           ;incstack = 0
 18337  002286  5018               	movf	i1___flmul@b+3,w,c
 18338  002288  0B80               	andlw	128
 18339  00228A  6E21               	movwf	i1___flmul@sign,c
 18340  00228C  5018               	movf	i1___flmul@b+3,w,c
 18341  00228E  2418               	addwf	i1___flmul@b+3,w,c
 18342  002290  6E27               	movwf	i1___flmul@bexp,c
 18343  002292  BE17               	btfsc	i1___flmul@b+2,7,c
 18344  002294  8027               	bsf	i1___flmul@bexp,0,c
 18345  002296  5027               	movf	i1___flmul@bexp,w,c
 18346  002298  B4D8               	btfsc	status,2,c
 18347  00229A  D00D               	goto	i1l8450
 18348  00229C  2827               	incf	i1___flmul@bexp,w,c
 18349  00229E  A4D8               	btfss	status,2,c
 18350  0022A0  D008               	goto	i1l8448
 18351  0022A2  0E00               	movlw	0
 18352  0022A4  6E15               	movwf	i1___flmul@b,c
 18353  0022A6  0E00               	movlw	0
 18354  0022A8  6E16               	movwf	i1___flmul@b+1,c
 18355  0022AA  0E00               	movlw	0
 18356  0022AC  6E17               	movwf	i1___flmul@b+2,c
 18357  0022AE  0E00               	movlw	0
 18358  0022B0  6E18               	movwf	i1___flmul@b+3,c
 18359  0022B2                     i1l8448:
 18360  0022B2  8E17               	bsf	i1___flmul@b+2,7,c
 18361  0022B4  D008               	goto	i1l8452
 18362  0022B6                     i1l8450:
 18363  0022B6  0E00               	movlw	0
 18364  0022B8  6E15               	movwf	i1___flmul@b,c
 18365  0022BA  0E00               	movlw	0
 18366  0022BC  6E16               	movwf	i1___flmul@b+1,c
 18367  0022BE  0E00               	movlw	0
 18368  0022C0  6E17               	movwf	i1___flmul@b+2,c
 18369  0022C2  0E00               	movlw	0
 18370  0022C4  6E18               	movwf	i1___flmul@b+3,c
 18371  0022C6                     i1l8452:
 18372  0022C6  501C               	movf	i1___flmul@a+3,w,c
 18373  0022C8  0B80               	andlw	128
 18374  0022CA  1A21               	xorwf	i1___flmul@sign,f,c
 18375  0022CC  501C               	movf	i1___flmul@a+3,w,c
 18376  0022CE  241C               	addwf	i1___flmul@a+3,w,c
 18377  0022D0  6E22               	movwf	i1___flmul@aexp,c
 18378  0022D2  BE1B               	btfsc	i1___flmul@a+2,7,c
 18379  0022D4  8022               	bsf	i1___flmul@aexp,0,c
 18380  0022D6  5022               	movf	i1___flmul@aexp,w,c
 18381  0022D8  B4D8               	btfsc	status,2,c
 18382  0022DA  D00D               	goto	i1l8468
 18383  0022DC  2822               	incf	i1___flmul@aexp,w,c
 18384  0022DE  A4D8               	btfss	status,2,c
 18385  0022E0  D008               	goto	i1l8466
 18386  0022E2  0E00               	movlw	0
 18387  0022E4  6E19               	movwf	i1___flmul@a,c
 18388  0022E6  0E00               	movlw	0
 18389  0022E8  6E1A               	movwf	i1___flmul@a+1,c
 18390  0022EA  0E00               	movlw	0
 18391  0022EC  6E1B               	movwf	i1___flmul@a+2,c
 18392  0022EE  0E00               	movlw	0
 18393  0022F0  6E1C               	movwf	i1___flmul@a+3,c
 18394  0022F2                     i1l8466:
 18395  0022F2  8E1B               	bsf	i1___flmul@a+2,7,c
 18396  0022F4  D008               	goto	i1l1428
 18397  0022F6                     i1l8468:
 18398  0022F6  0E00               	movlw	0
 18399  0022F8  6E19               	movwf	i1___flmul@a,c
 18400  0022FA  0E00               	movlw	0
 18401  0022FC  6E1A               	movwf	i1___flmul@a+1,c
 18402  0022FE  0E00               	movlw	0
 18403  002300  6E1B               	movwf	i1___flmul@a+2,c
 18404  002302  0E00               	movlw	0
 18405  002304  6E1C               	movwf	i1___flmul@a+3,c
 18406  002306                     i1l1428:
 18407  002306  5022               	movf	i1___flmul@aexp,w,c
 18408  002308  B4D8               	btfsc	status,2,c
 18409  00230A  D003               	goto	i1l8472
 18410  00230C  5027               	movf	i1___flmul@bexp,w,c
 18411  00230E  A4D8               	btfss	status,2,c
 18412  002310  D009               	goto	i1l8476
 18413  002312                     i1l8472:
 18414  002312  0E00               	movlw	0
 18415  002314  6E15               	movwf	?i1___flmul,c
 18416  002316  0E00               	movlw	0
 18417  002318  6E16               	movwf	?i1___flmul+1,c
 18418  00231A  0E00               	movlw	0
 18419  00231C  6E17               	movwf	?i1___flmul+2,c
 18420  00231E  0E00               	movlw	0
 18421  002320  6E18               	movwf	?i1___flmul+3,c
 18422  002322  0012               	return	
 18423  002324                     i1l8476:
 18424  002324  501B               	movf	i1___flmul@a+2,w,c
 18425  002326  0215               	mulwf	i1___flmul@b,c
 18426  002328  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18427  00232C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18428  002330  502C               	movf	i1___flmul@temp,w,c
 18429  002332  6E23               	movwf	i1___flmul@grs,c
 18430  002334  6A24               	clrf	i1___flmul@grs+1,c
 18431  002336  6A25               	clrf	i1___flmul@grs+2,c
 18432  002338  6A26               	clrf	i1___flmul@grs+3,c
 18433  00233A  502D               	movf	i1___flmul@temp+1,w,c
 18434  00233C  6E28               	movwf	i1___flmul@prod,c
 18435  00233E  6A29               	clrf	i1___flmul@prod+1,c
 18436  002340  6A2A               	clrf	i1___flmul@prod+2,c
 18437  002342  6A2B               	clrf	i1___flmul@prod+3,c
 18438  002344  501A               	movf	i1___flmul@a+1,w,c
 18439  002346  0216               	mulwf	i1___flmul@b+1,c
 18440  002348  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18441  00234C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18442  002350  502C               	movf	i1___flmul@temp,w,c
 18443  002352  2623               	addwf	i1___flmul@grs,f,c
 18444  002354  0E00               	movlw	0
 18445  002356  2224               	addwfc	i1___flmul@grs+1,f,c
 18446  002358  2225               	addwfc	i1___flmul@grs+2,f,c
 18447  00235A  2226               	addwfc	i1___flmul@grs+3,f,c
 18448  00235C  502D               	movf	i1___flmul@temp+1,w,c
 18449  00235E  2628               	addwf	i1___flmul@prod,f,c
 18450  002360  0E00               	movlw	0
 18451  002362  2229               	addwfc	i1___flmul@prod+1,f,c
 18452  002364  222A               	addwfc	i1___flmul@prod+2,f,c
 18453  002366  222B               	addwfc	i1___flmul@prod+3,f,c
 18454  002368  5019               	movf	i1___flmul@a,w,c
 18455  00236A  0217               	mulwf	i1___flmul@b+2,c
 18456  00236C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18457  002370  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18458  002374  502C               	movf	i1___flmul@temp,w,c
 18459  002376  2623               	addwf	i1___flmul@grs,f,c
 18460  002378  0E00               	movlw	0
 18461  00237A  2224               	addwfc	i1___flmul@grs+1,f,c
 18462  00237C  2225               	addwfc	i1___flmul@grs+2,f,c
 18463  00237E  2226               	addwfc	i1___flmul@grs+3,f,c
 18464  002380  502D               	movf	i1___flmul@temp+1,w,c
 18465  002382  2628               	addwf	i1___flmul@prod,f,c
 18466  002384  0E00               	movlw	0
 18467  002386  2229               	addwfc	i1___flmul@prod+1,f,c
 18468  002388  222A               	addwfc	i1___flmul@prod+2,f,c
 18469  00238A  222B               	addwfc	i1___flmul@prod+3,f,c
 18470  00238C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18471  002390  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18472  002394  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18473  002398  6A23               	clrf	i1___flmul@grs,c
 18474  00239A  5019               	movf	i1___flmul@a,w,c
 18475  00239C  0216               	mulwf	i1___flmul@b+1,c
 18476  00239E  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18477  0023A2  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18478  0023A6  502C               	movf	i1___flmul@temp,w,c
 18479  0023A8  2623               	addwf	i1___flmul@grs,f,c
 18480  0023AA  502D               	movf	i1___flmul@temp+1,w,c
 18481  0023AC  2224               	addwfc	i1___flmul@grs+1,f,c
 18482  0023AE  0E00               	movlw	0
 18483  0023B0  2225               	addwfc	i1___flmul@grs+2,f,c
 18484  0023B2  0E00               	movlw	0
 18485  0023B4  2226               	addwfc	i1___flmul@grs+3,f,c
 18486  0023B6  501A               	movf	i1___flmul@a+1,w,c
 18487  0023B8  0215               	mulwf	i1___flmul@b,c
 18488  0023BA  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18489  0023BE  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18490  0023C2  502C               	movf	i1___flmul@temp,w,c
 18491  0023C4  2623               	addwf	i1___flmul@grs,f,c
 18492  0023C6  502D               	movf	i1___flmul@temp+1,w,c
 18493  0023C8  2224               	addwfc	i1___flmul@grs+1,f,c
 18494  0023CA  0E00               	movlw	0
 18495  0023CC  2225               	addwfc	i1___flmul@grs+2,f,c
 18496  0023CE  0E00               	movlw	0
 18497  0023D0  2226               	addwfc	i1___flmul@grs+3,f,c
 18498  0023D2  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18499  0023D6  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18500  0023DA  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18501  0023DE  6A23               	clrf	i1___flmul@grs,c
 18502  0023E0  5019               	movf	i1___flmul@a,w,c
 18503  0023E2  0215               	mulwf	i1___flmul@b,c
 18504  0023E4  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18505  0023E8  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18506  0023EC  502C               	movf	i1___flmul@temp,w,c
 18507  0023EE  2623               	addwf	i1___flmul@grs,f,c
 18508  0023F0  502D               	movf	i1___flmul@temp+1,w,c
 18509  0023F2  2224               	addwfc	i1___flmul@grs+1,f,c
 18510  0023F4  0E00               	movlw	0
 18511  0023F6  2225               	addwfc	i1___flmul@grs+2,f,c
 18512  0023F8  0E00               	movlw	0
 18513  0023FA  2226               	addwfc	i1___flmul@grs+3,f,c
 18514  0023FC  501B               	movf	i1___flmul@a+2,w,c
 18515  0023FE  0216               	mulwf	i1___flmul@b+1,c
 18516  002400  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18517  002404  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18518  002408  502C               	movf	i1___flmul@temp,w,c
 18519  00240A  2628               	addwf	i1___flmul@prod,f,c
 18520  00240C  502D               	movf	i1___flmul@temp+1,w,c
 18521  00240E  2229               	addwfc	i1___flmul@prod+1,f,c
 18522  002410  0E00               	movlw	0
 18523  002412  222A               	addwfc	i1___flmul@prod+2,f,c
 18524  002414  0E00               	movlw	0
 18525  002416  222B               	addwfc	i1___flmul@prod+3,f,c
 18526  002418  501A               	movf	i1___flmul@a+1,w,c
 18527  00241A  0217               	mulwf	i1___flmul@b+2,c
 18528  00241C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18529  002420  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18530  002424  502C               	movf	i1___flmul@temp,w,c
 18531  002426  2628               	addwf	i1___flmul@prod,f,c
 18532  002428  502D               	movf	i1___flmul@temp+1,w,c
 18533  00242A  2229               	addwfc	i1___flmul@prod+1,f,c
 18534  00242C  0E00               	movlw	0
 18535  00242E  222A               	addwfc	i1___flmul@prod+2,f,c
 18536  002430  0E00               	movlw	0
 18537  002432  222B               	addwfc	i1___flmul@prod+3,f,c
 18538  002434  501B               	movf	i1___flmul@a+2,w,c
 18539  002436  0217               	mulwf	i1___flmul@b+2,c
 18540  002438  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18541  00243C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18542  002440  502C               	movf	i1___flmul@temp,w,c
 18543  002442  6E1D               	movwf	??i1___flmul& (0+255),c
 18544  002444  502D               	movf	i1___flmul@temp+1,w,c
 18545  002446  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 18546  002448  6A1F               	clrf	(??i1___flmul+2)& (0+255),c
 18547  00244A  6A20               	clrf	(??i1___flmul+3)& (0+255),c
 18548  00244C  C01F  F020         	movff	??i1___flmul+2,??i1___flmul+3
 18549  002450  C01E  F01F         	movff	??i1___flmul+1,??i1___flmul+2
 18550  002454  C01D  F01E         	movff	??i1___flmul,??i1___flmul+1
 18551  002458  6A1D               	clrf	??i1___flmul,c
 18552  00245A  501D               	movf	??i1___flmul,w,c
 18553  00245C  2628               	addwf	i1___flmul@prod,f,c
 18554  00245E  501E               	movf	??i1___flmul+1,w,c
 18555  002460  2229               	addwfc	i1___flmul@prod+1,f,c
 18556  002462  501F               	movf	??i1___flmul+2,w,c
 18557  002464  222A               	addwfc	i1___flmul@prod+2,f,c
 18558  002466  5020               	movf	??i1___flmul+3,w,c
 18559  002468  222B               	addwfc	i1___flmul@prod+3,f,c
 18560  00246A  C023  F01D         	movff	i1___flmul@grs,??i1___flmul
 18561  00246E  C024  F01E         	movff	i1___flmul@grs+1,??i1___flmul+1
 18562  002472  C025  F01F         	movff	i1___flmul@grs+2,??i1___flmul+2
 18563  002476  C026  F020         	movff	i1___flmul@grs+3,??i1___flmul+3
 18564  00247A  0E19               	movlw	25
 18565  00247C  D005               	goto	i1u1055_20
 18566  00247E                     i1u1055_25:
 18567  00247E  90D8               	bcf	status,0,c
 18568  002480  3220               	rrcf	??i1___flmul+3,f,c
 18569  002482  321F               	rrcf	??i1___flmul+2,f,c
 18570  002484  321E               	rrcf	??i1___flmul+1,f,c
 18571  002486  321D               	rrcf	??i1___flmul,f,c
 18572  002488                     i1u1055_20:
 18573  002488  2EE8               	decfsz	wreg,f,c
 18574  00248A  D7F9               	goto	i1u1055_25
 18575  00248C  501D               	movf	??i1___flmul,w,c
 18576  00248E  2628               	addwf	i1___flmul@prod,f,c
 18577  002490  501E               	movf	??i1___flmul+1,w,c
 18578  002492  2229               	addwfc	i1___flmul@prod+1,f,c
 18579  002494  501F               	movf	??i1___flmul+2,w,c
 18580  002496  222A               	addwfc	i1___flmul@prod+2,f,c
 18581  002498  5020               	movf	??i1___flmul+3,w,c
 18582  00249A  222B               	addwfc	i1___flmul@prod+3,f,c
 18583  00249C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18584  0024A0  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18585  0024A4  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18586  0024A8  6A23               	clrf	i1___flmul@grs,c
 18587  0024AA  5022               	movf	i1___flmul@aexp,w,c
 18588  0024AC  C027  F01D         	movff	i1___flmul@bexp,??i1___flmul
 18589  0024B0  6A1E               	clrf	(??i1___flmul+1)& (0+255),c
 18590  0024B2  261D               	addwf	??i1___flmul,f,c
 18591  0024B4  0E00               	movlw	0
 18592  0024B6  221E               	addwfc	??i1___flmul+1,f,c
 18593  0024B8  0E82               	movlw	130
 18594  0024BA  241D               	addwf	??i1___flmul,w,c
 18595  0024BC  6E2C               	movwf	i1___flmul@temp,c
 18596  0024BE  0EFF               	movlw	255
 18597  0024C0  201E               	addwfc	??i1___flmul+1,w,c
 18598  0024C2  6E2D               	movwf	i1___flmul@temp+1,c
 18599  0024C4  D00F               	goto	i1l8524
 18600  0024C6                     i1l8518:
 18601  0024C6  90D8               	bcf	status,0,c
 18602  0024C8  3628               	rlcf	i1___flmul@prod,f,c
 18603  0024CA  3629               	rlcf	i1___flmul@prod+1,f,c
 18604  0024CC  362A               	rlcf	i1___flmul@prod+2,f,c
 18605  0024CE  362B               	rlcf	i1___flmul@prod+3,f,c
 18606  0024D0  BE26               	btfsc	i1___flmul@grs+3,7,c
 18607  0024D2  8028               	bsf	i1___flmul@prod,0,c
 18608  0024D4  90D8               	bcf	status,0,c
 18609  0024D6  3623               	rlcf	i1___flmul@grs,f,c
 18610  0024D8  3624               	rlcf	i1___flmul@grs+1,f,c
 18611  0024DA  3625               	rlcf	i1___flmul@grs+2,f,c
 18612  0024DC  3626               	rlcf	i1___flmul@grs+3,f,c
 18613  0024DE  062C               	decf	i1___flmul@temp,f,c
 18614  0024E0  A0D8               	btfss	status,0,c
 18615  0024E2  062D               	decf	i1___flmul@temp+1,f,c
 18616  0024E4                     i1l8524:
 18617  0024E4  AE2A               	btfss	i1___flmul@prod+2,7,c
 18618  0024E6  D7EF               	goto	i1l8518
 18619  0024E8  0E00               	movlw	0
 18620  0024EA  6E22               	movwf	i1___flmul@aexp,c
 18621  0024EC  AE26               	btfss	i1___flmul@grs+3,7,c
 18622  0024EE  D016               	goto	i1l1437
 18623  0024F0  0EFF               	movlw	255
 18624  0024F2  1423               	andwf	i1___flmul@grs,w,c
 18625  0024F4  6E1D               	movwf	??i1___flmul& (0+255),c
 18626  0024F6  0EFF               	movlw	255
 18627  0024F8  1424               	andwf	i1___flmul@grs+1,w,c
 18628  0024FA  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 18629  0024FC  0EFF               	movlw	255
 18630  0024FE  1425               	andwf	i1___flmul@grs+2,w,c
 18631  002500  6E1F               	movwf	(??i1___flmul+2)& (0+255),c
 18632  002502  0E7F               	movlw	127
 18633  002504  1426               	andwf	i1___flmul@grs+3,w,c
 18634  002506  6E20               	movwf	(??i1___flmul+3)& (0+255),c
 18635  002508  501D               	movf	??i1___flmul,w,c
 18636  00250A  101E               	iorwf	??i1___flmul+1,w,c
 18637  00250C  101F               	iorwf	??i1___flmul+2,w,c
 18638  00250E  1020               	iorwf	??i1___flmul+3,w,c
 18639  002510  A4D8               	btfss	status,2,c
 18640  002512  D002               	goto	i1l8534
 18641  002514  A028               	btfss	i1___flmul@prod,0,c
 18642  002516  D002               	goto	i1l1437
 18643  002518                     i1l8534:
 18644  002518  0E01               	movlw	1
 18645  00251A  6E22               	movwf	i1___flmul@aexp,c
 18646  00251C                     i1l1437:
 18647  00251C  5022               	movf	i1___flmul@aexp,w,c
 18648  00251E  B4D8               	btfsc	status,2,c
 18649  002520  D01F               	goto	i1l8544
 18650  002522  0E01               	movlw	1
 18651  002524  2628               	addwf	i1___flmul@prod,f,c
 18652  002526  0E00               	movlw	0
 18653  002528  2229               	addwfc	i1___flmul@prod+1,f,c
 18654  00252A  222A               	addwfc	i1___flmul@prod+2,f,c
 18655  00252C  222B               	addwfc	i1___flmul@prod+3,f,c
 18656  00252E  A02B               	btfss	i1___flmul@prod+3,0,c
 18657  002530  D017               	goto	i1l8544
 18658  002532  C028  F01D         	movff	i1___flmul@prod,??i1___flmul
 18659  002536  C029  F01E         	movff	i1___flmul@prod+1,??i1___flmul+1
 18660  00253A  C02A  F01F         	movff	i1___flmul@prod+2,??i1___flmul+2
 18661  00253E  C02B  F020         	movff	i1___flmul@prod+3,??i1___flmul+3
 18662  002542  3420               	rlcf	??i1___flmul+3,w,c
 18663  002544  3220               	rrcf	??i1___flmul+3,f,c
 18664  002546  321F               	rrcf	??i1___flmul+2,f,c
 18665  002548  321E               	rrcf	??i1___flmul+1,f,c
 18666  00254A  321D               	rrcf	??i1___flmul,f,c
 18667  00254C  C01D  F028         	movff	??i1___flmul,i1___flmul@prod
 18668  002550  C01E  F029         	movff	??i1___flmul+1,i1___flmul@prod+1
 18669  002554  C01F  F02A         	movff	??i1___flmul+2,i1___flmul@prod+2
 18670  002558  C020  F02B         	movff	??i1___flmul+3,i1___flmul@prod+3
 18671  00255C  4A2C               	infsnz	i1___flmul@temp,f,c
 18672  00255E  2A2D               	incf	i1___flmul@temp+1,f,c
 18673  002560                     i1l8544:
 18674  002560  BE2D               	btfsc	i1___flmul@temp+1,7,c
 18675  002562  D00D               	goto	i1l8548
 18676  002564  502D               	movf	i1___flmul@temp+1,w,c
 18677  002566  E103               	bnz	i1u1063_20
 18678  002568  282C               	incf	i1___flmul@temp,w,c
 18679  00256A  A0D8               	btfss	status,0,c
 18680  00256C  D008               	goto	i1l8548
 18681  00256E                     i1u1063_20:
 18682  00256E  0E00               	movlw	0
 18683  002570  6E28               	movwf	i1___flmul@prod,c
 18684  002572  0E00               	movlw	0
 18685  002574  6E29               	movwf	i1___flmul@prod+1,c
 18686  002576  0E80               	movlw	128
 18687  002578  6E2A               	movwf	i1___flmul@prod+2,c
 18688  00257A  0E7F               	movlw	127
 18689  00257C  D020               	goto	L13
 18690  00257E                     i1l8548:
 18691  00257E  BE2D               	btfsc	i1___flmul@temp+1,7,c
 18692  002580  D005               	goto	i1l8550
 18693  002582  502D               	movf	i1___flmul@temp+1,w,c
 18694  002584  E10E               	bnz	i1l1445
 18695  002586  042C               	decf	i1___flmul@temp,w,c
 18696  002588  B0D8               	btfsc	status,0,c
 18697  00258A  D00B               	goto	i1l1445
 18698  00258C                     i1l8550:
 18699  00258C  0E00               	movlw	0
 18700  00258E  6E28               	movwf	i1___flmul@prod,c
 18701  002590  0E00               	movlw	0
 18702  002592  6E29               	movwf	i1___flmul@prod+1,c
 18703  002594  0E00               	movlw	0
 18704  002596  6E2A               	movwf	i1___flmul@prod+2,c
 18705  002598  0E00               	movlw	0
 18706  00259A  6E2B               	movwf	i1___flmul@prod+3,c
 18707  00259C  0E00               	movlw	0
 18708  00259E  6E21               	movwf	i1___flmul@sign,c
 18709  0025A0  D00F               	goto	i1l8560
 18710  0025A2                     i1l1445:
 18711  0025A2  C02C  F027         	movff	i1___flmul@temp,i1___flmul@bexp
 18712  0025A6  0EFF               	movlw	255
 18713  0025A8  1628               	andwf	i1___flmul@prod,f,c
 18714  0025AA  0EFF               	movlw	255
 18715  0025AC  1629               	andwf	i1___flmul@prod+1,f,c
 18716  0025AE  0E7F               	movlw	127
 18717  0025B0  162A               	andwf	i1___flmul@prod+2,f,c
 18718  0025B2  0E00               	movlw	0
 18719  0025B4  162B               	andwf	i1___flmul@prod+3,f,c
 18720  0025B6  B027               	btfsc	i1___flmul@bexp,0,c
 18721  0025B8  8E2A               	bsf	i1___flmul@prod+2,7,c
 18722  0025BA  90D8               	bcf	status,0,c
 18723  0025BC  3027               	rrcf	i1___flmul@bexp,w,c
 18724  0025BE                     L13:
 18725  0025BE  6E2B               	movwf	i1___flmul@prod+3,c
 18726  0025C0                     i1l8560:
 18727  0025C0  5021               	movf	i1___flmul@sign,w,c
 18728  0025C2  122B               	iorwf	i1___flmul@prod+3,f,c
 18729  0025C4  C028  F015         	movff	i1___flmul@prod,?i1___flmul
 18730  0025C8  C029  F016         	movff	i1___flmul@prod+1,?i1___flmul+1
 18731  0025CC  C02A  F017         	movff	i1___flmul@prod+2,?i1___flmul+2
 18732  0025D0  C02B  F018         	movff	i1___flmul@prod+3,?i1___flmul+3
 18733  0025D4  0012               	return	
 18734  0025D6                     __end_ofi1___flmul:
 18735                           	opt stack 0
 18736                           pclatu	equ	0xFFB
 18737                           pclath	equ	0xFFA
 18738                           tblptru	equ	0xFF8
 18739                           tblptrh	equ	0xFF7
 18740                           tblptrl	equ	0xFF6
 18741                           tablat	equ	0xFF5
 18742                           prodh	equ	0xFF4
 18743                           prodl	equ	0xFF3
 18744                           intcon	equ	0xFF2
 18745                           postinc0	equ	0xFEE
 18746                           fsr0h	equ	0xFEA
 18747                           fsr0l	equ	0xFE9
 18748                           wreg	equ	0xFE8
 18749                           postdec1	equ	0xFE5
 18750                           fsr1h	equ	0xFE2
 18751                           fsr1l	equ	0xFE1
 18752                           bsr	equ	0xFE0
 18753                           indf2	equ	0xFDF
 18754                           postinc2	equ	0xFDE
 18755                           postdec2	equ	0xFDD
 18756                           plusw2	equ	0xFDB
 18757                           fsr2h	equ	0xFDA
 18758                           fsr2l	equ	0xFD9
 18759                           status	equ	0xFD8
 18760                           
 18761 ;; *************** function i1___fldiv *****************
 18762 ;; Defined at:
 18763 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 18764 ;; Parameters:    Size  Location     Type
 18765 ;;  b               4   20[COMRAM] unsigned char 
 18766 ;;  a               4   24[COMRAM] unsigned char 
 18767 ;; Auto vars:     Size  Location     Type
 18768 ;;  __fldiv         4   39[COMRAM] unsigned long 
 18769 ;;  __fldiv         4   33[COMRAM] unsigned long 
 18770 ;;  __fldiv         2   37[COMRAM] int 
 18771 ;;  __fldiv         1   44[COMRAM] unsigned char 
 18772 ;;  __fldiv         1   43[COMRAM] unsigned char 
 18773 ;;  __fldiv         1   32[COMRAM] unsigned char 
 18774 ;; Return value:  Size  Location     Type
 18775 ;;                  4   20[COMRAM] unsigned char 
 18776 ;; Registers used:
 18777 ;;		wreg, status,2, status,0
 18778 ;; Tracked objects:
 18779 ;;		On entry : 0/0
 18780 ;;		On exit  : 0/0
 18781 ;;		Unchanged: 0/0
 18782 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18783 ;;      Params:         8       0       0       0       0       0       0
 18784 ;;      Locals:        13       0       0       0       0       0       0
 18785 ;;      Temps:          4       0       0       0       0       0       0
 18786 ;;      Totals:        25       0       0       0       0       0       0
 18787 ;;Total ram usage:       25 bytes
 18788 ;; Hardware stack levels used:    1
 18789 ;; Hardware stack levels required when called:    3
 18790 ;; This function calls:
 18791 ;;		Nothing
 18792 ;; This function is called by:
 18793 ;;		i1_calcSysVars
 18794 ;; This function uses a non-reentrant model
 18795 ;;
 18796                           
 18797                           	psect	text71
 18798  0028A8                     __ptext71:
 18799                           	opt stack 0
 18800  0028A8                     i1___fldiv:
 18801                           	opt stack 14
 18802                           
 18803                           ;incstack = 0
 18804  0028A8  5018               	movf	i1___fldiv@b+3,w,c
 18805  0028AA  0B80               	andlw	128
 18806  0028AC  6E21               	movwf	i1___fldiv@sign,c
 18807  0028AE  5018               	movf	i1___fldiv@b+3,w,c
 18808  0028B0  2418               	addwf	i1___fldiv@b+3,w,c
 18809  0028B2  6E2C               	movwf	i1___fldiv@bexp,c
 18810  0028B4  BE17               	btfsc	i1___fldiv@b+2,7,c
 18811  0028B6  802C               	bsf	i1___fldiv@bexp,0,c
 18812  0028B8  502C               	movf	i1___fldiv@bexp,w,c
 18813  0028BA  B4D8               	btfsc	status,2,c
 18814  0028BC  D00D               	goto	i1l8316
 18815  0028BE  282C               	incf	i1___fldiv@bexp,w,c
 18816  0028C0  A4D8               	btfss	status,2,c
 18817  0028C2  D008               	goto	i1l8312
 18818  0028C4  0E00               	movlw	0
 18819  0028C6  6E15               	movwf	i1___fldiv@b,c
 18820  0028C8  0E00               	movlw	0
 18821  0028CA  6E16               	movwf	i1___fldiv@b+1,c
 18822  0028CC  0E00               	movlw	0
 18823  0028CE  6E17               	movwf	i1___fldiv@b+2,c
 18824  0028D0  0E00               	movlw	0
 18825  0028D2  6E18               	movwf	i1___fldiv@b+3,c
 18826  0028D4                     i1l8312:
 18827  0028D4  8E17               	bsf	i1___fldiv@b+2,7,c
 18828  0028D6  D006               	goto	L14
 18829  0028D8                     i1l8316:
 18830  0028D8  0E00               	movlw	0
 18831  0028DA  6E15               	movwf	i1___fldiv@b,c
 18832  0028DC  0E00               	movlw	0
 18833  0028DE  6E16               	movwf	i1___fldiv@b+1,c
 18834  0028E0  0E00               	movlw	0
 18835  0028E2  6E17               	movwf	i1___fldiv@b+2,c
 18836  0028E4                     L14:
 18837  0028E4  0E00               	movlw	0
 18838  0028E6  6E18               	movwf	i1___fldiv@b+3,c
 18839  0028E8  501C               	movf	i1___fldiv@a+3,w,c
 18840  0028EA  0B80               	andlw	128
 18841  0028EC  1A21               	xorwf	i1___fldiv@sign,f,c
 18842  0028EE  501C               	movf	i1___fldiv@a+3,w,c
 18843  0028F0  241C               	addwf	i1___fldiv@a+3,w,c
 18844  0028F2  6E2D               	movwf	i1___fldiv@aexp,c
 18845  0028F4  BE1B               	btfsc	i1___fldiv@a+2,7,c
 18846  0028F6  802D               	bsf	i1___fldiv@aexp,0,c
 18847  0028F8  502D               	movf	i1___fldiv@aexp,w,c
 18848  0028FA  B4D8               	btfsc	status,2,c
 18849  0028FC  D00D               	goto	i1l8336
 18850  0028FE  282D               	incf	i1___fldiv@aexp,w,c
 18851  002900  A4D8               	btfss	status,2,c
 18852  002902  D008               	goto	i1l8332
 18853  002904  0E00               	movlw	0
 18854  002906  6E19               	movwf	i1___fldiv@a,c
 18855  002908  0E00               	movlw	0
 18856  00290A  6E1A               	movwf	i1___fldiv@a+1,c
 18857  00290C  0E00               	movlw	0
 18858  00290E  6E1B               	movwf	i1___fldiv@a+2,c
 18859  002910  0E00               	movlw	0
 18860  002912  6E1C               	movwf	i1___fldiv@a+3,c
 18861  002914                     i1l8332:
 18862  002914  8E1B               	bsf	i1___fldiv@a+2,7,c
 18863  002916  D006               	goto	L15
 18864  002918                     i1l8336:
 18865  002918  0E00               	movlw	0
 18866  00291A  6E19               	movwf	i1___fldiv@a,c
 18867  00291C  0E00               	movlw	0
 18868  00291E  6E1A               	movwf	i1___fldiv@a+1,c
 18869  002920  0E00               	movlw	0
 18870  002922  6E1B               	movwf	i1___fldiv@a+2,c
 18871  002924                     L15:
 18872  002924  0E00               	movlw	0
 18873  002926  6E1C               	movwf	i1___fldiv@a+3,c
 18874  002928  5019               	movf	i1___fldiv@a,w,c
 18875  00292A  101A               	iorwf	i1___fldiv@a+1,w,c
 18876  00292C  101B               	iorwf	i1___fldiv@a+2,w,c
 18877  00292E  101C               	iorwf	i1___fldiv@a+3,w,c
 18878  002930  A4D8               	btfss	status,2,c
 18879  002932  D015               	goto	i1l8348
 18880  002934  0E00               	movlw	0
 18881  002936  6E15               	movwf	i1___fldiv@b,c
 18882  002938  0E00               	movlw	0
 18883  00293A  6E16               	movwf	i1___fldiv@b+1,c
 18884  00293C  0E00               	movlw	0
 18885  00293E  6E17               	movwf	i1___fldiv@b+2,c
 18886  002940  0E00               	movlw	0
 18887  002942  6E18               	movwf	i1___fldiv@b+3,c
 18888  002944  0E80               	movlw	128
 18889  002946  1217               	iorwf	i1___fldiv@b+2,f,c
 18890  002948  0E7F               	movlw	127
 18891  00294A  1218               	iorwf	i1___fldiv@b+3,f,c
 18892  00294C  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 18893  002950  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 18894  002954  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 18895  002958  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 18896  00295C  0012               	return	
 18897  00295E                     i1l8348:
 18898  00295E  502C               	movf	i1___fldiv@bexp,w,c
 18899  002960  A4D8               	btfss	status,2,c
 18900  002962  D011               	goto	i1l8356
 18901  002964  0E00               	movlw	0
 18902  002966  6E15               	movwf	i1___fldiv@b,c
 18903  002968  0E00               	movlw	0
 18904  00296A  6E16               	movwf	i1___fldiv@b+1,c
 18905  00296C  0E00               	movlw	0
 18906  00296E  6E17               	movwf	i1___fldiv@b+2,c
 18907  002970  0E00               	movlw	0
 18908  002972  6E18               	movwf	i1___fldiv@b+3,c
 18909  002974  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 18910  002978  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 18911  00297C  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 18912  002980  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 18913  002984  0012               	return	
 18914  002986                     i1l8356:
 18915  002986  502D               	movf	i1___fldiv@aexp,w,c
 18916  002988  6E1D               	movwf	??i1___fldiv& (0+255),c
 18917  00298A  6A1E               	clrf	(??i1___fldiv+1)& (0+255),c
 18918  00298C  1E1D               	comf	??i1___fldiv,f,c
 18919  00298E  1E1E               	comf	??i1___fldiv+1,f,c
 18920  002990  4A1D               	infsnz	??i1___fldiv,f,c
 18921  002992  2A1E               	incf	??i1___fldiv+1,f,c
 18922  002994  502C               	movf	i1___fldiv@bexp,w,c
 18923  002996  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 18924  002998  6A20               	clrf	(??i1___fldiv+3)& (0+255),c
 18925  00299A  501D               	movf	??i1___fldiv,w,c
 18926  00299C  261F               	addwf	??i1___fldiv+2,f,c
 18927  00299E  501E               	movf	??i1___fldiv+1,w,c
 18928  0029A0  2220               	addwfc	??i1___fldiv+3,f,c
 18929  0029A2  0E7F               	movlw	127
 18930  0029A4  241F               	addwf	??i1___fldiv+2,w,c
 18931  0029A6  6E26               	movwf	i1___fldiv@new_exp,c
 18932  0029A8  0E00               	movlw	0
 18933  0029AA  2020               	addwfc	??i1___fldiv+3,w,c
 18934  0029AC  6E27               	movwf	i1___fldiv@new_exp+1,c
 18935  0029AE  C015  F022         	movff	i1___fldiv@b,i1___fldiv@rem
 18936  0029B2  C016  F023         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 18937  0029B6  C017  F024         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 18938  0029BA  C018  F025         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 18939  0029BE  0E00               	movlw	0
 18940  0029C0  6E15               	movwf	i1___fldiv@b,c
 18941  0029C2  0E00               	movlw	0
 18942  0029C4  6E16               	movwf	i1___fldiv@b+1,c
 18943  0029C6  0E00               	movlw	0
 18944  0029C8  6E17               	movwf	i1___fldiv@b+2,c
 18945  0029CA  0E00               	movlw	0
 18946  0029CC  6E18               	movwf	i1___fldiv@b+3,c
 18947  0029CE  0E00               	movlw	0
 18948  0029D0  6E28               	movwf	i1___fldiv@grs,c
 18949  0029D2  0E00               	movlw	0
 18950  0029D4  6E29               	movwf	i1___fldiv@grs+1,c
 18951  0029D6  0E00               	movlw	0
 18952  0029D8  6E2A               	movwf	i1___fldiv@grs+2,c
 18953  0029DA  0E00               	movlw	0
 18954  0029DC  6E2B               	movwf	i1___fldiv@grs+3,c
 18955  0029DE  0E00               	movlw	0
 18956  0029E0  6E2D               	movwf	i1___fldiv@aexp,c
 18957  0029E2  D028               	goto	i1l1398
 18958  0029E4                     i1l8366:
 18959  0029E4  502D               	movf	i1___fldiv@aexp,w,c
 18960  0029E6  B4D8               	btfsc	status,2,c
 18961  0029E8  D011               	goto	i1l8374
 18962  0029EA  90D8               	bcf	status,0,c
 18963  0029EC  3622               	rlcf	i1___fldiv@rem,f,c
 18964  0029EE  3623               	rlcf	i1___fldiv@rem+1,f,c
 18965  0029F0  3624               	rlcf	i1___fldiv@rem+2,f,c
 18966  0029F2  3625               	rlcf	i1___fldiv@rem+3,f,c
 18967  0029F4  90D8               	bcf	status,0,c
 18968  0029F6  3615               	rlcf	i1___fldiv@b,f,c
 18969  0029F8  3616               	rlcf	i1___fldiv@b+1,f,c
 18970  0029FA  3617               	rlcf	i1___fldiv@b+2,f,c
 18971  0029FC  3618               	rlcf	i1___fldiv@b+3,f,c
 18972  0029FE  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 18973  002A00  8015               	bsf	i1___fldiv@b,0,c
 18974  002A02  90D8               	bcf	status,0,c
 18975  002A04  3628               	rlcf	i1___fldiv@grs,f,c
 18976  002A06  3629               	rlcf	i1___fldiv@grs+1,f,c
 18977  002A08  362A               	rlcf	i1___fldiv@grs+2,f,c
 18978  002A0A  362B               	rlcf	i1___fldiv@grs+3,f,c
 18979  002A0C                     i1l8374:
 18980  002A0C  5019               	movf	i1___fldiv@a,w,c
 18981  002A0E  5C22               	subwf	i1___fldiv@rem,w,c
 18982  002A10  501A               	movf	i1___fldiv@a+1,w,c
 18983  002A12  5823               	subwfb	i1___fldiv@rem+1,w,c
 18984  002A14  501B               	movf	i1___fldiv@a+2,w,c
 18985  002A16  5824               	subwfb	i1___fldiv@rem+2,w,c
 18986  002A18  501C               	movf	i1___fldiv@a+3,w,c
 18987  002A1A  5825               	subwfb	i1___fldiv@rem+3,w,c
 18988  002A1C  A0D8               	btfss	status,0,c
 18989  002A1E  D009               	goto	i1l8380
 18990  002A20  8C2B               	bsf	i1___fldiv@grs+3,6,c
 18991  002A22  5019               	movf	i1___fldiv@a,w,c
 18992  002A24  5E22               	subwf	i1___fldiv@rem,f,c
 18993  002A26  501A               	movf	i1___fldiv@a+1,w,c
 18994  002A28  5A23               	subwfb	i1___fldiv@rem+1,f,c
 18995  002A2A  501B               	movf	i1___fldiv@a+2,w,c
 18996  002A2C  5A24               	subwfb	i1___fldiv@rem+2,f,c
 18997  002A2E  501C               	movf	i1___fldiv@a+3,w,c
 18998  002A30  5A25               	subwfb	i1___fldiv@rem+3,f,c
 18999  002A32                     i1l8380:
 19000  002A32  2A2D               	incf	i1___fldiv@aexp,f,c
 19001  002A34                     i1l1398:
 19002  002A34  0E19               	movlw	25
 19003  002A36  642D               	cpfsgt	i1___fldiv@aexp,c
 19004  002A38  D7D5               	goto	i1l8366
 19005  002A3A  5022               	movf	i1___fldiv@rem,w,c
 19006  002A3C  1023               	iorwf	i1___fldiv@rem+1,w,c
 19007  002A3E  1024               	iorwf	i1___fldiv@rem+2,w,c
 19008  002A40  1025               	iorwf	i1___fldiv@rem+3,w,c
 19009  002A42  B4D8               	btfsc	status,2,c
 19010  002A44  D011               	goto	i1l8392
 19011  002A46  8028               	bsf	i1___fldiv@grs,0,c
 19012  002A48  D00F               	goto	i1l8392
 19013  002A4A                     i1l8386:
 19014  002A4A  90D8               	bcf	status,0,c
 19015  002A4C  3615               	rlcf	i1___fldiv@b,f,c
 19016  002A4E  3616               	rlcf	i1___fldiv@b+1,f,c
 19017  002A50  3617               	rlcf	i1___fldiv@b+2,f,c
 19018  002A52  3618               	rlcf	i1___fldiv@b+3,f,c
 19019  002A54  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 19020  002A56  8015               	bsf	i1___fldiv@b,0,c
 19021  002A58  90D8               	bcf	status,0,c
 19022  002A5A  3628               	rlcf	i1___fldiv@grs,f,c
 19023  002A5C  3629               	rlcf	i1___fldiv@grs+1,f,c
 19024  002A5E  362A               	rlcf	i1___fldiv@grs+2,f,c
 19025  002A60  362B               	rlcf	i1___fldiv@grs+3,f,c
 19026  002A62  0626               	decf	i1___fldiv@new_exp,f,c
 19027  002A64  A0D8               	btfss	status,0,c
 19028  002A66  0627               	decf	i1___fldiv@new_exp+1,f,c
 19029  002A68                     i1l8392:
 19030  002A68  AE17               	btfss	i1___fldiv@b+2,7,c
 19031  002A6A  D7EF               	goto	i1l8386
 19032  002A6C  0E00               	movlw	0
 19033  002A6E  6E2D               	movwf	i1___fldiv@aexp,c
 19034  002A70  AE2B               	btfss	i1___fldiv@grs+3,7,c
 19035  002A72  D016               	goto	i1l1409
 19036  002A74  0EFF               	movlw	255
 19037  002A76  1428               	andwf	i1___fldiv@grs,w,c
 19038  002A78  6E1D               	movwf	??i1___fldiv& (0+255),c
 19039  002A7A  0EFF               	movlw	255
 19040  002A7C  1429               	andwf	i1___fldiv@grs+1,w,c
 19041  002A7E  6E1E               	movwf	(??i1___fldiv+1)& (0+255),c
 19042  002A80  0EFF               	movlw	255
 19043  002A82  142A               	andwf	i1___fldiv@grs+2,w,c
 19044  002A84  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 19045  002A86  0E7F               	movlw	127
 19046  002A88  142B               	andwf	i1___fldiv@grs+3,w,c
 19047  002A8A  6E20               	movwf	(??i1___fldiv+3)& (0+255),c
 19048  002A8C  501D               	movf	??i1___fldiv,w,c
 19049  002A8E  101E               	iorwf	??i1___fldiv+1,w,c
 19050  002A90  101F               	iorwf	??i1___fldiv+2,w,c
 19051  002A92  1020               	iorwf	??i1___fldiv+3,w,c
 19052  002A94  A4D8               	btfss	status,2,c
 19053  002A96  D002               	goto	i1l8402
 19054  002A98  A015               	btfss	i1___fldiv@b,0,c
 19055  002A9A  D002               	goto	i1l1409
 19056  002A9C                     i1l8402:
 19057  002A9C  0E01               	movlw	1
 19058  002A9E  6E2D               	movwf	i1___fldiv@aexp,c
 19059  002AA0                     i1l1409:
 19060  002AA0  502D               	movf	i1___fldiv@aexp,w,c
 19061  002AA2  B4D8               	btfsc	status,2,c
 19062  002AA4  D01F               	goto	i1l8412
 19063  002AA6  0E01               	movlw	1
 19064  002AA8  2615               	addwf	i1___fldiv@b,f,c
 19065  002AAA  0E00               	movlw	0
 19066  002AAC  2216               	addwfc	i1___fldiv@b+1,f,c
 19067  002AAE  2217               	addwfc	i1___fldiv@b+2,f,c
 19068  002AB0  2218               	addwfc	i1___fldiv@b+3,f,c
 19069  002AB2  A018               	btfss	i1___fldiv@b+3,0,c
 19070  002AB4  D017               	goto	i1l8412
 19071  002AB6  C015  F01D         	movff	i1___fldiv@b,??i1___fldiv
 19072  002ABA  C016  F01E         	movff	i1___fldiv@b+1,??i1___fldiv+1
 19073  002ABE  C017  F01F         	movff	i1___fldiv@b+2,??i1___fldiv+2
 19074  002AC2  C018  F020         	movff	i1___fldiv@b+3,??i1___fldiv+3
 19075  002AC6  3420               	rlcf	??i1___fldiv+3,w,c
 19076  002AC8  3220               	rrcf	??i1___fldiv+3,f,c
 19077  002ACA  321F               	rrcf	??i1___fldiv+2,f,c
 19078  002ACC  321E               	rrcf	??i1___fldiv+1,f,c
 19079  002ACE  321D               	rrcf	??i1___fldiv,f,c
 19080  002AD0  C01D  F015         	movff	??i1___fldiv,i1___fldiv@b
 19081  002AD4  C01E  F016         	movff	??i1___fldiv+1,i1___fldiv@b+1
 19082  002AD8  C01F  F017         	movff	??i1___fldiv+2,i1___fldiv@b+2
 19083  002ADC  C020  F018         	movff	??i1___fldiv+3,i1___fldiv@b+3
 19084  002AE0  4A26               	infsnz	i1___fldiv@new_exp,f,c
 19085  002AE2  2A27               	incf	i1___fldiv@new_exp+1,f,c
 19086  002AE4                     i1l8412:
 19087  002AE4  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 19088  002AE6  D010               	goto	i1l8416
 19089  002AE8  5027               	movf	i1___fldiv@new_exp+1,w,c
 19090  002AEA  E103               	bnz	i1u1044_20
 19091  002AEC  2826               	incf	i1___fldiv@new_exp,w,c
 19092  002AEE  A0D8               	btfss	status,0,c
 19093  002AF0  D00B               	goto	i1l8416
 19094  002AF2                     i1u1044_20:
 19095  002AF2  0E00               	movlw	0
 19096  002AF4  6E27               	movwf	i1___fldiv@new_exp+1,c
 19097  002AF6  6826               	setf	i1___fldiv@new_exp,c
 19098  002AF8  0E00               	movlw	0
 19099  002AFA  6E15               	movwf	i1___fldiv@b,c
 19100  002AFC  0E00               	movlw	0
 19101  002AFE  6E16               	movwf	i1___fldiv@b+1,c
 19102  002B00  0E00               	movlw	0
 19103  002B02  6E17               	movwf	i1___fldiv@b+2,c
 19104  002B04  0E00               	movlw	0
 19105  002B06  6E18               	movwf	i1___fldiv@b+3,c
 19106  002B08                     i1l8416:
 19107  002B08  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 19108  002B0A  D005               	goto	i1l8418
 19109  002B0C  5027               	movf	i1___fldiv@new_exp+1,w,c
 19110  002B0E  E111               	bnz	i1l8420
 19111  002B10  0426               	decf	i1___fldiv@new_exp,w,c
 19112  002B12  B0D8               	btfsc	status,0,c
 19113  002B14  D00E               	goto	i1l8420
 19114  002B16                     i1l8418:
 19115  002B16  0E00               	movlw	0
 19116  002B18  6E27               	movwf	i1___fldiv@new_exp+1,c
 19117  002B1A  0E00               	movlw	0
 19118  002B1C  6E26               	movwf	i1___fldiv@new_exp,c
 19119  002B1E  0E00               	movlw	0
 19120  002B20  6E15               	movwf	i1___fldiv@b,c
 19121  002B22  0E00               	movlw	0
 19122  002B24  6E16               	movwf	i1___fldiv@b+1,c
 19123  002B26  0E00               	movlw	0
 19124  002B28  6E17               	movwf	i1___fldiv@b+2,c
 19125  002B2A  0E00               	movlw	0
 19126  002B2C  6E18               	movwf	i1___fldiv@b+3,c
 19127  002B2E  0E00               	movlw	0
 19128  002B30  6E21               	movwf	i1___fldiv@sign,c
 19129  002B32                     i1l8420:
 19130  002B32  C026  F02C         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 19131  002B36  A02C               	btfss	i1___fldiv@bexp,0,c
 19132  002B38  D002               	goto	i1l8426
 19133  002B3A  8E17               	bsf	i1___fldiv@b+2,7,c
 19134  002B3C  D001               	goto	i1l8428
 19135  002B3E                     i1l8426:
 19136  002B3E  9E17               	bcf	i1___fldiv@b+2,7,c
 19137  002B40                     i1l8428:
 19138  002B40  90D8               	bcf	status,0,c
 19139  002B42  302C               	rrcf	i1___fldiv@bexp,w,c
 19140  002B44  6E18               	movwf	i1___fldiv@b+3,c
 19141  002B46  5021               	movf	i1___fldiv@sign,w,c
 19142  002B48  1218               	iorwf	i1___fldiv@b+3,f,c
 19143  002B4A  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 19144  002B4E  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 19145  002B52  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 19146  002B56  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 19147  002B5A  0012               	return	
 19148  002B5C                     __end_ofi1___fldiv:
 19149                           	opt stack 0
 19150                           pclatu	equ	0xFFB
 19151                           pclath	equ	0xFFA
 19152                           tblptru	equ	0xFF8
 19153                           tblptrh	equ	0xFF7
 19154                           tblptrl	equ	0xFF6
 19155                           tablat	equ	0xFF5
 19156                           prodh	equ	0xFF4
 19157                           prodl	equ	0xFF3
 19158                           intcon	equ	0xFF2
 19159                           postinc0	equ	0xFEE
 19160                           fsr0h	equ	0xFEA
 19161                           fsr0l	equ	0xFE9
 19162                           wreg	equ	0xFE8
 19163                           postdec1	equ	0xFE5
 19164                           fsr1h	equ	0xFE2
 19165                           fsr1l	equ	0xFE1
 19166                           bsr	equ	0xFE0
 19167                           indf2	equ	0xFDF
 19168                           postinc2	equ	0xFDE
 19169                           postdec2	equ	0xFDD
 19170                           plusw2	equ	0xFDB
 19171                           fsr2h	equ	0xFDA
 19172                           fsr2l	equ	0xFD9
 19173                           status	equ	0xFD8
 19174                           
 19175 ;; *************** function _readEEPROM *****************
 19176 ;; Defined at:
 19177 ;;		line 47 in file "source/sysParams.h"
 19178 ;; Parameters:    Size  Location     Type
 19179 ;;  adr             1    wreg     unsigned char 
 19180 ;; Auto vars:     Size  Location     Type
 19181 ;;  adr             1   20[COMRAM] unsigned char 
 19182 ;; Return value:  Size  Location     Type
 19183 ;;                  1    wreg      unsigned char 
 19184 ;; Registers used:
 19185 ;;		wreg, status,2
 19186 ;; Tracked objects:
 19187 ;;		On entry : 0/0
 19188 ;;		On exit  : 0/0
 19189 ;;		Unchanged: 0/0
 19190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19191 ;;      Params:         0       0       0       0       0       0       0
 19192 ;;      Locals:         1       0       0       0       0       0       0
 19193 ;;      Temps:          0       0       0       0       0       0       0
 19194 ;;      Totals:         1       0       0       0       0       0       0
 19195 ;;Total ram usage:        1 bytes
 19196 ;; Hardware stack levels used:    1
 19197 ;; Hardware stack levels required when called:    3
 19198 ;; This function calls:
 19199 ;;		Nothing
 19200 ;; This function is called by:
 19201 ;;		_sysParamInit
 19202 ;; This function uses a non-reentrant model
 19203 ;;
 19204                           
 19205                           	psect	text72
 19206  00519C                     __ptext72:
 19207                           	opt stack 0
 19208  00519C                     _readEEPROM:
 19209                           	opt stack 15
 19210                           
 19211                           ;incstack = 0
 19212                           ;readEEPROM@adr stored from wreg
 19213  00519C  6E15               	movwf	readEEPROM@adr,c
 19214                           
 19215                           ;sysParams.h: 48: EEADR = adr;
 19216  00519E  C015  FFA9         	movff	readEEPROM@adr,4009	;volatile
 19217                           
 19218                           ;sysParams.h: 49: EECON1bits.EEPGD = 0;
 19219  0051A2  9EA6               	bcf	4006,7,c	;volatile
 19220                           
 19221                           ;sysParams.h: 50: EECON1bits.CFGS = 0;
 19222  0051A4  9CA6               	bcf	4006,6,c	;volatile
 19223                           
 19224                           ;sysParams.h: 51: EECON1bits.RD = 1;
 19225  0051A6  80A6               	bsf	4006,0,c	;volatile
 19226  0051A8                     i1l288:
 19227  0051A8  B0A6               	btfsc	4006,0,c	;volatile
 19228  0051AA  D7FE               	goto	i1l288
 19229                           
 19230                           ;sysParams.h: 53: return EEDATA;
 19231  0051AC  50A8               	movf	4008,w,c	;volatile
 19232  0051AE  0012               	return		;funcret
 19233  0051B0                     __end_of_readEEPROM:
 19234                           	opt stack 0
 19235                           pclatu	equ	0xFFB
 19236                           pclath	equ	0xFFA
 19237                           tblptru	equ	0xFF8
 19238                           tblptrh	equ	0xFF7
 19239                           tblptrl	equ	0xFF6
 19240                           tablat	equ	0xFF5
 19241                           prodh	equ	0xFF4
 19242                           prodl	equ	0xFF3
 19243                           intcon	equ	0xFF2
 19244                           postinc0	equ	0xFEE
 19245                           fsr0h	equ	0xFEA
 19246                           fsr0l	equ	0xFE9
 19247                           wreg	equ	0xFE8
 19248                           postdec1	equ	0xFE5
 19249                           fsr1h	equ	0xFE2
 19250                           fsr1l	equ	0xFE1
 19251                           bsr	equ	0xFE0
 19252                           indf2	equ	0xFDF
 19253                           postinc2	equ	0xFDE
 19254                           postdec2	equ	0xFDD
 19255                           plusw2	equ	0xFDB
 19256                           fsr2h	equ	0xFDA
 19257                           fsr2l	equ	0xFD9
 19258                           status	equ	0xFD8
 19259                           
 19260 ;; *************** function _putchUART *****************
 19261 ;; Defined at:
 19262 ;;		line 11 in file "source/UARTConfig.h"
 19263 ;; Parameters:    Size  Location     Type
 19264 ;;  val             1    wreg     unsigned char 
 19265 ;; Auto vars:     Size  Location     Type
 19266 ;;  val             1   20[COMRAM] unsigned char 
 19267 ;; Return value:  Size  Location     Type
 19268 ;;                  1    wreg      void 
 19269 ;; Registers used:
 19270 ;;		wreg
 19271 ;; Tracked objects:
 19272 ;;		On entry : 0/0
 19273 ;;		On exit  : 0/0
 19274 ;;		Unchanged: 0/0
 19275 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19276 ;;      Params:         0       0       0       0       0       0       0
 19277 ;;      Locals:         1       0       0       0       0       0       0
 19278 ;;      Temps:          0       0       0       0       0       0       0
 19279 ;;      Totals:         1       0       0       0       0       0       0
 19280 ;;Total ram usage:        1 bytes
 19281 ;; Hardware stack levels used:    1
 19282 ;; Hardware stack levels required when called:    3
 19283 ;; This function calls:
 19284 ;;		Nothing
 19285 ;; This function is called by:
 19286 ;;		_UARTint
 19287 ;; This function uses a non-reentrant model
 19288 ;;
 19289                           
 19290                           	psect	text73
 19291  005210                     __ptext73:
 19292                           	opt stack 0
 19293  005210                     _putchUART:
 19294                           	opt stack 16
 19295                           
 19296                           ;incstack = 0
 19297                           ;putchUART@val stored from wreg
 19298  005210  6E15               	movwf	putchUART@val,c
 19299  005212                     i1l619:
 19300  005212  A2AC               	btfss	4012,1,c	;volatile
 19301  005214  D7FE               	goto	i1l619
 19302                           
 19303                           ;UARTConfig.h: 13: TXREG1 = val;
 19304  005216  C015  FFAD         	movff	putchUART@val,4013	;volatile
 19305  00521A  0012               	return		;funcret
 19306  00521C                     __end_of_putchUART:
 19307                           	opt stack 0
 19308                           pclatu	equ	0xFFB
 19309                           pclath	equ	0xFFA
 19310                           tblptru	equ	0xFF8
 19311                           tblptrh	equ	0xFF7
 19312                           tblptrl	equ	0xFF6
 19313                           tablat	equ	0xFF5
 19314                           prodh	equ	0xFF4
 19315                           prodl	equ	0xFF3
 19316                           intcon	equ	0xFF2
 19317                           postinc0	equ	0xFEE
 19318                           fsr0h	equ	0xFEA
 19319                           fsr0l	equ	0xFE9
 19320                           wreg	equ	0xFE8
 19321                           postdec1	equ	0xFE5
 19322                           fsr1h	equ	0xFE2
 19323                           fsr1l	equ	0xFE1
 19324                           bsr	equ	0xFE0
 19325                           indf2	equ	0xFDF
 19326                           postinc2	equ	0xFDE
 19327                           postdec2	equ	0xFDD
 19328                           plusw2	equ	0xFDB
 19329                           fsr2h	equ	0xFDA
 19330                           fsr2l	equ	0xFD9
 19331                           status	equ	0xFD8
 19332                           
 19333 ;; *************** function _hp_isr *****************
 19334 ;; Defined at:
 19335 ;;		line 13 in file "source/main.c"
 19336 ;; Parameters:    Size  Location     Type
 19337 ;;		None
 19338 ;; Auto vars:     Size  Location     Type
 19339 ;;		None
 19340 ;; Return value:  Size  Location     Type
 19341 ;;                  1    wreg      void 
 19342 ;; Registers used:
 19343 ;;		wreg, status,2, status,0, cstack
 19344 ;; Tracked objects:
 19345 ;;		On entry : 0/0
 19346 ;;		On exit  : 0/0
 19347 ;;		Unchanged: 0/0
 19348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19349 ;;      Params:         0       0       0       0       0       0       0
 19350 ;;      Locals:         0       0       0       0       0       0       0
 19351 ;;      Temps:         14       0       0       0       0       0       0
 19352 ;;      Totals:        14       0       0       0       0       0       0
 19353 ;;Total ram usage:       14 bytes
 19354 ;; Hardware stack levels used:    1
 19355 ;; Hardware stack levels required when called:    2
 19356 ;; This function calls:
 19357 ;;		_T2int
 19358 ;; This function is called by:
 19359 ;;		Interrupt level 2
 19360 ;; This function uses a non-reentrant model
 19361 ;;
 19362                           
 19363                           	psect	intcode
 19364  000008                     __pintcode:
 19365                           	opt stack 0
 19366  000008                     _hp_isr:
 19367                           	opt stack 14
 19368                           
 19369                           ;incstack = 0
 19370  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19371  00000A  CFFA F007          	movff	pclath,??_hp_isr
 19372  00000E  CFFB F008          	movff	pclatu,??_hp_isr+1
 19373  000012  EF88  F025         	goto	int_func
 19374                           pclatu	equ	0xFFB
 19375                           pclath	equ	0xFFA
 19376                           tblptru	equ	0xFF8
 19377                           tblptrh	equ	0xFF7
 19378                           tblptrl	equ	0xFF6
 19379                           tablat	equ	0xFF5
 19380                           prodh	equ	0xFF4
 19381                           prodl	equ	0xFF3
 19382                           intcon	equ	0xFF2
 19383                           postinc0	equ	0xFEE
 19384                           fsr0h	equ	0xFEA
 19385                           fsr0l	equ	0xFE9
 19386                           wreg	equ	0xFE8
 19387                           postdec1	equ	0xFE5
 19388                           fsr1h	equ	0xFE2
 19389                           fsr1l	equ	0xFE1
 19390                           bsr	equ	0xFE0
 19391                           indf2	equ	0xFDF
 19392                           postinc2	equ	0xFDE
 19393                           postdec2	equ	0xFDD
 19394                           plusw2	equ	0xFDB
 19395                           fsr2h	equ	0xFDA
 19396                           fsr2l	equ	0xFD9
 19397                           status	equ	0xFD8
 19398                           
 19399                           	psect	intcode_body
 19400  004B10                     __pintcode_body:
 19401                           	opt stack 14
 19402  004B10                     int_func:
 19403                           	opt stack 14
 19404  004B10  CFE9 F009          	movff	fsr0l,??_hp_isr+2
 19405  004B14  CFEA F00A          	movff	fsr0h,??_hp_isr+3
 19406  004B18  CFE1 F00B          	movff	fsr1l,??_hp_isr+4
 19407  004B1C  CFE2 F00C          	movff	fsr1h,??_hp_isr+5
 19408  004B20  CFD9 F00D          	movff	fsr2l,??_hp_isr+6
 19409  004B24  CFDA F00E          	movff	fsr2h,??_hp_isr+7
 19410  004B28  CFF3 F00F          	movff	prodl,??_hp_isr+8
 19411  004B2C  CFF4 F010          	movff	prodh,??_hp_isr+9
 19412  004B30  CFF6 F011          	movff	tblptrl,??_hp_isr+10
 19413  004B34  CFF7 F012          	movff	tblptrh,??_hp_isr+11
 19414  004B38  CFF8 F013          	movff	tblptru,??_hp_isr+12
 19415  004B3C  CFF5 F014          	movff	tablat,??_hp_isr+13
 19416                           
 19417                           ;main.c: 14: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
 19418  004B40  B29D               	btfsc	3997,1,c	;volatile
 19419  004B42  A29E               	btfss	3998,1,c	;volatile
 19420  004B44  D003               	goto	i2l714
 19421                           
 19422                           ;main.c: 15: T2int();
 19423  004B46  EC70  F028         	call	_T2int	;wreg free
 19424                           
 19425                           ;main.c: 16: PIR1bits.TMR2IF = 0;
 19426  004B4A  929E               	bcf	3998,1,c	;volatile
 19427  004B4C                     i2l714:
 19428  004B4C  C014  FFF5         	movff	??_hp_isr+13,tablat
 19429  004B50  C013  FFF8         	movff	??_hp_isr+12,tblptru
 19430  004B54  C012  FFF7         	movff	??_hp_isr+11,tblptrh
 19431  004B58  C011  FFF6         	movff	??_hp_isr+10,tblptrl
 19432  004B5C  C010  FFF4         	movff	??_hp_isr+9,prodh
 19433  004B60  C00F  FFF3         	movff	??_hp_isr+8,prodl
 19434  004B64  C00E  FFDA         	movff	??_hp_isr+7,fsr2h
 19435  004B68  C00D  FFD9         	movff	??_hp_isr+6,fsr2l
 19436  004B6C  C00C  FFE2         	movff	??_hp_isr+5,fsr1h
 19437  004B70  C00B  FFE1         	movff	??_hp_isr+4,fsr1l
 19438  004B74  C00A  FFEA         	movff	??_hp_isr+3,fsr0h
 19439  004B78  C009  FFE9         	movff	??_hp_isr+2,fsr0l
 19440  004B7C  C008  FFFB         	movff	??_hp_isr+1,pclatu
 19441  004B80  C007  FFFA         	movff	??_hp_isr,pclath
 19442  004B84  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19443  004B86  0011               	retfie		f
 19444  004B88                     __end_of_hp_isr:
 19445                           	opt stack 0
 19446                           pclatu	equ	0xFFB
 19447                           pclath	equ	0xFFA
 19448                           tblptru	equ	0xFF8
 19449                           tblptrh	equ	0xFF7
 19450                           tblptrl	equ	0xFF6
 19451                           tablat	equ	0xFF5
 19452                           prodh	equ	0xFF4
 19453                           prodl	equ	0xFF3
 19454                           intcon	equ	0xFF2
 19455                           postinc0	equ	0xFEE
 19456                           fsr0h	equ	0xFEA
 19457                           fsr0l	equ	0xFE9
 19458                           wreg	equ	0xFE8
 19459                           postdec1	equ	0xFE5
 19460                           fsr1h	equ	0xFE2
 19461                           fsr1l	equ	0xFE1
 19462                           bsr	equ	0xFE0
 19463                           indf2	equ	0xFDF
 19464                           postinc2	equ	0xFDE
 19465                           postdec2	equ	0xFDD
 19466                           plusw2	equ	0xFDB
 19467                           fsr2h	equ	0xFDA
 19468                           fsr2l	equ	0xFD9
 19469                           status	equ	0xFD8
 19470                           
 19471 ;; *************** function _T2int *****************
 19472 ;; Defined at:
 19473 ;;		line 35 in file "source/PWMConfig.h"
 19474 ;; Parameters:    Size  Location     Type
 19475 ;;		None
 19476 ;; Auto vars:     Size  Location     Type
 19477 ;;		None
 19478 ;; Return value:  Size  Location     Type
 19479 ;;                  1    wreg      void 
 19480 ;; Registers used:
 19481 ;;		wreg, status,2, status,0, cstack
 19482 ;; Tracked objects:
 19483 ;;		On entry : 0/0
 19484 ;;		On exit  : 0/0
 19485 ;;		Unchanged: 0/0
 19486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19487 ;;      Params:         0       0       0       0       0       0       0
 19488 ;;      Locals:         0       0       0       0       0       0       0
 19489 ;;      Temps:          0       0       0       0       0       0       0
 19490 ;;      Totals:         0       0       0       0       0       0       0
 19491 ;;Total ram usage:        0 bytes
 19492 ;; Hardware stack levels used:    1
 19493 ;; Hardware stack levels required when called:    1
 19494 ;; This function calls:
 19495 ;;		i2_putchUART
 19496 ;;		i2_setPWM2duty
 19497 ;; This function is called by:
 19498 ;;		_hp_isr
 19499 ;; This function uses a non-reentrant model
 19500 ;;
 19501                           
 19502                           	psect	text75
 19503  0050E0                     __ptext75:
 19504                           	opt stack 0
 19505  0050E0                     _T2int:
 19506                           	opt stack 14
 19507                           
 19508                           ;PWMConfig.h: 36: if(PORTAbits.RA7 || PORTAbits.RA6) {
 19509                           
 19510                           ;incstack = 0
 19511  0050E0  AE80               	btfss	3968,7,c	;volatile
 19512  0050E2  BC80               	btfsc	3968,6,c	;volatile
 19513  0050E4  D001               	goto	i2l7030
 19514  0050E6  0012               	return	
 19515  0050E8                     i2l7030:
 19516                           
 19517                           ;PWMConfig.h: 37: setPWM2duty(0);
 19518  0050E8  0E00               	movlw	0
 19519  0050EA  6E02               	movwf	i2setPWM2duty@actuator+1,c
 19520  0050EC  0E00               	movlw	0
 19521  0050EE  6E01               	movwf	i2setPWM2duty@actuator,c
 19522  0050F0  ECC4  F025         	call	i2_setPWM2duty	;wreg free
 19523                           
 19524                           ;PWMConfig.h: 38: if(PORTAbits.RA7)
 19525  0050F4  AE80               	btfss	3968,7,c	;volatile
 19526  0050F6  D003               	goto	i2l7036
 19527                           
 19528                           ;PWMConfig.h: 39: putchUART(101);
 19529  0050F8  0E65               	movlw	101
 19530  0050FA  EC0E  F029         	call	i2_putchUART
 19531  0050FE                     i2l7036:
 19532                           
 19533                           ;PWMConfig.h: 40: if(PORTAbits.RA6)
 19534  0050FE  AC80               	btfss	3968,6,c	;volatile
 19535  005100  0012               	return	
 19536                           
 19537                           ;PWMConfig.h: 41: putchUART(102);
 19538  005102  0E66               	movlw	102
 19539  005104  EC0E  F029         	call	i2_putchUART
 19540  005108  0012               	return	
 19541  00510A                     __end_of_T2int:
 19542                           	opt stack 0
 19543                           pclatu	equ	0xFFB
 19544                           pclath	equ	0xFFA
 19545                           tblptru	equ	0xFF8
 19546                           tblptrh	equ	0xFF7
 19547                           tblptrl	equ	0xFF6
 19548                           tablat	equ	0xFF5
 19549                           prodh	equ	0xFF4
 19550                           prodl	equ	0xFF3
 19551                           intcon	equ	0xFF2
 19552                           postinc0	equ	0xFEE
 19553                           fsr0h	equ	0xFEA
 19554                           fsr0l	equ	0xFE9
 19555                           wreg	equ	0xFE8
 19556                           postdec1	equ	0xFE5
 19557                           fsr1h	equ	0xFE2
 19558                           fsr1l	equ	0xFE1
 19559                           bsr	equ	0xFE0
 19560                           indf2	equ	0xFDF
 19561                           postinc2	equ	0xFDE
 19562                           postdec2	equ	0xFDD
 19563                           plusw2	equ	0xFDB
 19564                           fsr2h	equ	0xFDA
 19565                           fsr2l	equ	0xFD9
 19566                           status	equ	0xFD8
 19567                           
 19568 ;; *************** function i2_setPWM2duty *****************
 19569 ;; Defined at:
 19570 ;;		line 23 in file "source/PWMConfig.h"
 19571 ;; Parameters:    Size  Location     Type
 19572 ;;  actuator        2    0[COMRAM] short 
 19573 ;; Auto vars:     Size  Location     Type
 19574 ;;  setPWM2duty     2    4[COMRAM] short 
 19575 ;; Return value:  Size  Location     Type
 19576 ;;                  1    wreg      void 
 19577 ;; Registers used:
 19578 ;;		wreg, status,2, status,0
 19579 ;; Tracked objects:
 19580 ;;		On entry : 0/0
 19581 ;;		On exit  : 0/0
 19582 ;;		Unchanged: 0/0
 19583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19584 ;;      Params:         2       0       0       0       0       0       0
 19585 ;;      Locals:         2       0       0       0       0       0       0
 19586 ;;      Temps:          2       0       0       0       0       0       0
 19587 ;;      Totals:         6       0       0       0       0       0       0
 19588 ;;Total ram usage:        6 bytes
 19589 ;; Hardware stack levels used:    1
 19590 ;; This function calls:
 19591 ;;		Nothing
 19592 ;; This function is called by:
 19593 ;;		_T2int
 19594 ;; This function uses a non-reentrant model
 19595 ;;
 19596                           
 19597                           	psect	text76
 19598  004B88                     __ptext76:
 19599                           	opt stack 0
 19600  004B88                     i2_setPWM2duty:
 19601                           	opt stack 14
 19602                           
 19603                           ;PWMConfig.h: 24: short act = 400;
 19604                           
 19605                           ;incstack = 0
 19606  004B88  0E01               	movlw	1
 19607  004B8A  6E06               	movwf	i2setPWM2duty@act+1,c
 19608  004B8C  0E90               	movlw	144
 19609  004B8E  6E05               	movwf	i2setPWM2duty@act,c
 19610                           
 19611                           ;PWMConfig.h: 25: if(actuator > 400)
 19612  004B90  BE02               	btfsc	i2setPWM2duty@actuator+1,7,c
 19613  004B92  D00A               	goto	i2l6834
 19614  004B94  0E91               	movlw	145
 19615  004B96  5C01               	subwf	i2setPWM2duty@actuator,w,c
 19616  004B98  0E01               	movlw	1
 19617  004B9A  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 19618  004B9C  A0D8               	btfss	status,0,c
 19619  004B9E  D004               	goto	i2l6834
 19620                           
 19621                           ;PWMConfig.h: 26: act = 800;
 19622  004BA0  0E03               	movlw	3
 19623  004BA2  6E06               	movwf	i2setPWM2duty@act+1,c
 19624  004BA4  0E20               	movlw	32
 19625  004BA6  D00B               	goto	L16
 19626  004BA8                     i2l6834:
 19627                           
 19628                           ;PWMConfig.h: 27: else if(actuator < -400)
 19629  004BA8  AE02               	btfss	i2setPWM2duty@actuator+1,7,c
 19630  004BAA  D00B               	goto	i2l6838
 19631  004BAC  0E70               	movlw	112
 19632  004BAE  5C01               	subwf	i2setPWM2duty@actuator,w,c
 19633  004BB0  0EFE               	movlw	254
 19634  004BB2  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 19635  004BB4  B0D8               	btfsc	status,0,c
 19636  004BB6  D005               	goto	i2l6838
 19637                           
 19638                           ;PWMConfig.h: 28: act = 0;
 19639  004BB8  0E00               	movlw	0
 19640  004BBA  6E06               	movwf	i2setPWM2duty@act+1,c
 19641  004BBC  0E00               	movlw	0
 19642  004BBE                     L16:
 19643  004BBE  6E05               	movwf	i2setPWM2duty@act,c
 19644  004BC0  D006               	goto	i2l640
 19645  004BC2                     i2l6838:
 19646                           
 19647                           ;PWMConfig.h: 29: else
 19648                           ;PWMConfig.h: 30: act = actuator + 400;
 19649  004BC2  0E90               	movlw	144
 19650  004BC4  2401               	addwf	i2setPWM2duty@actuator,w,c
 19651  004BC6  6E05               	movwf	i2setPWM2duty@act,c
 19652  004BC8  0E01               	movlw	1
 19653  004BCA  2002               	addwfc	i2setPWM2duty@actuator+1,w,c
 19654  004BCC  6E06               	movwf	i2setPWM2duty@act+1,c
 19655  004BCE                     i2l640:
 19656                           
 19657                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 19658  004BCE  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 19659  004BD2  3A03               	swapf	??i2_setPWM2duty,f,c
 19660  004BD4  5066               	movf	3942,w,c	;volatile
 19661  004BD6  1803               	xorwf	??i2_setPWM2duty,w,c
 19662  004BD8  0BCF               	andlw	-49
 19663  004BDA  1803               	xorwf	??i2_setPWM2duty,w,c
 19664  004BDC  6E66               	movwf	3942,c	;volatile
 19665                           
 19666                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 19667  004BDE  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 19668  004BE2  C006  F004         	movff	i2setPWM2duty@act+1,??i2_setPWM2duty+1
 19669  004BE6  3404               	rlcf	??i2_setPWM2duty+1,w,c
 19670  004BE8  3204               	rrcf	??i2_setPWM2duty+1,f,c
 19671  004BEA  3203               	rrcf	??i2_setPWM2duty,f,c
 19672  004BEC  3404               	rlcf	??i2_setPWM2duty+1,w,c
 19673  004BEE  3204               	rrcf	??i2_setPWM2duty+1,f,c
 19674  004BF0  3203               	rrcf	??i2_setPWM2duty,f,c
 19675  004BF2  5003               	movf	??i2_setPWM2duty,w,c
 19676  004BF4  6E67               	movwf	3943,c	;volatile
 19677  004BF6  0012               	return		;funcret
 19678  004BF8                     __end_ofi2_setPWM2duty:
 19679                           	opt stack 0
 19680                           pclatu	equ	0xFFB
 19681                           pclath	equ	0xFFA
 19682                           tblptru	equ	0xFF8
 19683                           tblptrh	equ	0xFF7
 19684                           tblptrl	equ	0xFF6
 19685                           tablat	equ	0xFF5
 19686                           prodh	equ	0xFF4
 19687                           prodl	equ	0xFF3
 19688                           intcon	equ	0xFF2
 19689                           postinc0	equ	0xFEE
 19690                           fsr0h	equ	0xFEA
 19691                           fsr0l	equ	0xFE9
 19692                           wreg	equ	0xFE8
 19693                           postdec1	equ	0xFE5
 19694                           fsr1h	equ	0xFE2
 19695                           fsr1l	equ	0xFE1
 19696                           bsr	equ	0xFE0
 19697                           indf2	equ	0xFDF
 19698                           postinc2	equ	0xFDE
 19699                           postdec2	equ	0xFDD
 19700                           plusw2	equ	0xFDB
 19701                           fsr2h	equ	0xFDA
 19702                           fsr2l	equ	0xFD9
 19703                           status	equ	0xFD8
 19704                           
 19705 ;; *************** function i2_putchUART *****************
 19706 ;; Defined at:
 19707 ;;		line 11 in file "source/UARTConfig.h"
 19708 ;; Parameters:    Size  Location     Type
 19709 ;;  val             1    wreg     unsigned char 
 19710 ;; Auto vars:     Size  Location     Type
 19711 ;;  val             1    0[COMRAM] unsigned char 
 19712 ;; Return value:  Size  Location     Type
 19713 ;;                  1    wreg      void 
 19714 ;; Registers used:
 19715 ;;		wreg
 19716 ;; Tracked objects:
 19717 ;;		On entry : 0/0
 19718 ;;		On exit  : 0/0
 19719 ;;		Unchanged: 0/0
 19720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19721 ;;      Params:         0       0       0       0       0       0       0
 19722 ;;      Locals:         1       0       0       0       0       0       0
 19723 ;;      Temps:          0       0       0       0       0       0       0
 19724 ;;      Totals:         1       0       0       0       0       0       0
 19725 ;;Total ram usage:        1 bytes
 19726 ;; Hardware stack levels used:    1
 19727 ;; This function calls:
 19728 ;;		Nothing
 19729 ;; This function is called by:
 19730 ;;		_T2int
 19731 ;; This function uses a non-reentrant model
 19732 ;;
 19733                           
 19734                           	psect	text77
 19735  00521C                     __ptext77:
 19736                           	opt stack 0
 19737  00521C                     i2_putchUART:
 19738                           	opt stack 14
 19739                           
 19740                           ;incstack = 0
 19741                           ;i2putchUART@val stored from wreg
 19742  00521C  6E01               	movwf	i2putchUART@val,c
 19743  00521E                     i2l619:
 19744  00521E  A2AC               	btfss	4012,1,c	;volatile
 19745  005220  D7FE               	goto	i2l619
 19746                           
 19747                           ;UARTConfig.h: 13: TXREG1 = val;
 19748  005222  C001  FFAD         	movff	i2putchUART@val,4013	;volatile
 19749  005226  0012               	return		;funcret
 19750  005228                     __end_ofi2_putchUART:
 19751                           	opt stack 0
 19752                           pclatu	equ	0xFFB
 19753                           pclath	equ	0xFFA
 19754                           tblptru	equ	0xFF8
 19755                           tblptrh	equ	0xFF7
 19756                           tblptrl	equ	0xFF6
 19757                           tablat	equ	0xFF5
 19758                           prodh	equ	0xFF4
 19759                           prodl	equ	0xFF3
 19760                           intcon	equ	0xFF2
 19761                           postinc0	equ	0xFEE
 19762                           fsr0h	equ	0xFEA
 19763                           fsr0l	equ	0xFE9
 19764                           wreg	equ	0xFE8
 19765                           postdec1	equ	0xFE5
 19766                           fsr1h	equ	0xFE2
 19767                           fsr1l	equ	0xFE1
 19768                           bsr	equ	0xFE0
 19769                           indf2	equ	0xFDF
 19770                           postinc2	equ	0xFDE
 19771                           postdec2	equ	0xFDD
 19772                           plusw2	equ	0xFDB
 19773                           fsr2h	equ	0xFDA
 19774                           fsr2l	equ	0xFD9
 19775                           status	equ	0xFD8
 19776                           pclatu	equ	0xFFB
 19777                           pclath	equ	0xFFA
 19778                           tblptru	equ	0xFF8
 19779                           tblptrh	equ	0xFF7
 19780                           tblptrl	equ	0xFF6
 19781                           tablat	equ	0xFF5
 19782                           prodh	equ	0xFF4
 19783                           prodl	equ	0xFF3
 19784                           intcon	equ	0xFF2
 19785                           postinc0	equ	0xFEE
 19786                           fsr0h	equ	0xFEA
 19787                           fsr0l	equ	0xFE9
 19788                           wreg	equ	0xFE8
 19789                           postdec1	equ	0xFE5
 19790                           fsr1h	equ	0xFE2
 19791                           fsr1l	equ	0xFE1
 19792                           bsr	equ	0xFE0
 19793                           indf2	equ	0xFDF
 19794                           postinc2	equ	0xFDE
 19795                           postdec2	equ	0xFDD
 19796                           plusw2	equ	0xFDB
 19797                           fsr2h	equ	0xFDA
 19798                           fsr2l	equ	0xFD9
 19799                           status	equ	0xFD8
 19800                           
 19801                           	psect	rparam
 19802  0000                     pclatu	equ	0xFFB
 19803                           pclath	equ	0xFFA
 19804                           tblptru	equ	0xFF8
 19805                           tblptrh	equ	0xFF7
 19806                           tblptrl	equ	0xFF6
 19807                           tablat	equ	0xFF5
 19808                           prodh	equ	0xFF4
 19809                           prodl	equ	0xFF3
 19810                           intcon	equ	0xFF2
 19811                           postinc0	equ	0xFEE
 19812                           fsr0h	equ	0xFEA
 19813                           fsr0l	equ	0xFE9
 19814                           wreg	equ	0xFE8
 19815                           postdec1	equ	0xFE5
 19816                           fsr1h	equ	0xFE2
 19817                           fsr1l	equ	0xFE1
 19818                           bsr	equ	0xFE0
 19819                           indf2	equ	0xFDF
 19820                           postinc2	equ	0xFDE
 19821                           postdec2	equ	0xFDD
 19822                           plusw2	equ	0xFDB
 19823                           fsr2h	equ	0xFDA
 19824                           fsr2l	equ	0xFD9
 19825                           status	equ	0xFD8
 19826                           
 19827                           	psect	temp
 19828  00004A                     btemp:
 19829                           	opt stack 0
 19830  00004A                     	ds	1
 19831  0000                     int$flags	set	btemp
 19832                           pclatu	equ	0xFFB
 19833                           pclath	equ	0xFFA
 19834                           tblptru	equ	0xFF8
 19835                           tblptrh	equ	0xFF7
 19836                           tblptrl	equ	0xFF6
 19837                           tablat	equ	0xFF5
 19838                           prodh	equ	0xFF4
 19839                           prodl	equ	0xFF3
 19840                           intcon	equ	0xFF2
 19841                           postinc0	equ	0xFEE
 19842                           fsr0h	equ	0xFEA
 19843                           fsr0l	equ	0xFE9
 19844                           wreg	equ	0xFE8
 19845                           postdec1	equ	0xFE5
 19846                           fsr1h	equ	0xFE2
 19847                           fsr1l	equ	0xFE1
 19848                           bsr	equ	0xFE0
 19849                           indf2	equ	0xFDF
 19850                           postinc2	equ	0xFDE
 19851                           postdec2	equ	0xFDD
 19852                           plusw2	equ	0xFDB
 19853                           fsr2h	equ	0xFDA
 19854                           fsr2l	equ	0xFD9
 19855                           status	equ	0xFD8


Data Sizes:
    Strings     539
    Constant    144
    Data        49
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      73
    BANK0           160    108     132
    BANK1           256     49      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_45(CODE[19]), STR_44(CODE[18]), STR_43(CODE[18]), STR_42(CODE[18]), 
		 -> STR_41(CODE[17]), STR_40(CODE[18]), STR_39(CODE[17]), STR_38(CODE[18]), 
		 -> STR_37(CODE[17]), STR_36(CODE[18]), STR_35(CODE[25]), STR_34(CODE[18]), 
		 -> STR_33(CODE[15]), STR_32(CODE[18]), STR_31(CODE[15]), STR_30(CODE[18]), 
		 -> STR_29(CODE[15]), STR_28(CODE[18]), STR_27(CODE[16]), STR_26(CODE[18]), 
		 -> STR_25(CODE[15]), STR_24(CODE[15]), STR_23(CODE[15]), STR_22(CODE[18]), 
		 -> STR_21(CODE[20]), STR_20(CODE[18]), STR_19(CODE[15]), STR_18(CODE[18]), 
		 -> STR_17(CODE[15]), STR_16(CODE[18]), STR_15(CODE[15]), STR_14(CODE[18]), 
		 -> STR_13(CODE[16]), STR_12(CODE[18]), STR_11(CODE[15]), STR_10(CODE[15]), 
		 -> STR_9(CODE[15]), STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), 
		 -> STR_5(CODE[18]), STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[15]), 
		 -> STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_UARTint
    i1_calcSysVars->i1___fldiv
    i1_calcSysVars->i1___flmul

Critical Paths under _hp_isr in COMRAM

    _T2int->i2_setPWM2duty

Critical Paths under _main in BANK0

    _lcd_init->_lcd_send_byte
    _drawScreen->_drawSNquest
    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf
    _printf->___flsub
    _scale->___flmul
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_4bits
    _lcd_read_byte->_lcd_read_4bits
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _pressENTER->_confirmEdition
    _saveSysParams->_calcSysVars
    _calcSysVars->___flmul
    ___flmul->___awdiv
    _PWM2Config->_setPWM2duty

Critical Paths under _isr in BANK0

    i1_saveSysParams->i1_calcSysVars
    _sysParamInit->i1_calcSysVars

Critical Paths under _hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _hp_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _hp_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _hp_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _hp_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  444013
                       _EEPROMConfig
                         _PWM2Config
                         _UARTConfig
                     _buttonChecking
                        _clockConfig
                         _drawScreen
                    _interruptConfig
                           _ioConfig
                          _ioInitStt
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     6      0    1879
                                             29 BANK0      6     6      0
                     _lcd_send_4bits
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ioInitStt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ioConfig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawScreen                                           0     0      0  430528
                         _drawAdvOFF
                          _drawAdvON
                        _drawBadPass
                        _drawChanVal
                           _drawMenu
                       _drawPassWord
                        _drawSNquest
 ---------------------------------------------------------------------------------
 (2) _drawSNquest                                          3     3      0   60877
                                            105 BANK0      3     3      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawPassWord                                         2     2      0   60784
                                            105 BANK0      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawMenu                                             1     1      0   66028
                                            105 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawChanVal                                          2     2      0   60784
                                            105 BANK0      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawBadPass                                          0     0      0   60685
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvON                                            0     0      0   60685
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvOFF                                           0     0      0   60685
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              54    36     18   57024
                                            101 BANK0      4     4      0
                                              0 BANK1     49    31     18
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4   11509
                                             60 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0    5157
                                             34 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             2     2      0    5126
                                             32 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    3661
                                             29 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1403
                                             26 BANK0      3     2      1
                      _lcd_read_byte
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       5     5      0     272
                                             21 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _lcd_read_byte                                        2     2      0     114
                                             23 BANK0      2     2      0
                     _lcd_read_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_read_4bits                                       2     2      0      46
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4   11230
                                             60 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             27 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             21 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     630
                                             21 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             34 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             69 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3697
                                             93 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3364
                                             73 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             21 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     728
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _clockConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonChecking                                       0     0      0   11390
                           _delay_ms
                      _longPressDOWN
                     _longPressENTER
                     _longPressRETRO
                        _longPressUP
                          _pressDOWN
                         _pressENTER
                         _pressRETRO
                            _pressUP
                        _releaseDOWN
                       _releaseENTER
                       _releaseRETRO
                          _releaseUP
 ---------------------------------------------------------------------------------
 (2) _releaseUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseRETRO                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseENTER                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseDOWN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressUP                                              1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _pressRETRO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressENTER                                           0     0      0   10576
                          _checkPass
                     _confirmEdition
 ---------------------------------------------------------------------------------
 (3) _confirmEdition                                       1     1      0   10461
                                             64 BANK0      1     1      0
                      _saveSysParams
 ---------------------------------------------------------------------------------
 (4) _saveSysParams                                        0     0      0   10275
                        _calcSysVars
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          2     1      1    1260
                                             21 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _calcSysVars                                          4     4      0    9015
                                             60 BANK0      4     4      0
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7008
                                             35 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1837
                                             21 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _checkPass                                            7     7      0     115
                                             21 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _pressDOWN                                            1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _longPressUP                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressRETRO                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressENTER                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressDOWN                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     814
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UARTConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2Config                                           0     0      0     216
                        _setPWM2duty
                           _t2config
 ---------------------------------------------------------------------------------
 (2) _t2config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPWM2duty                                          6     4      2     216
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _EEPROMConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                17    17      0    9192
                                              4 BANK0     17    17      0
                            _UARTint
 ---------------------------------------------------------------------------------
 (11) _UARTint                                             1     1      0    9192
                                             45 COMRAM     1     1      0
                          _putchUART
                       _sysParamInit
                    i1_saveSysParams
 ---------------------------------------------------------------------------------
 (12) i1_saveSysParams                                     0     0      0    4795
                      i1_calcSysVars
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i1_writeEEPROM                                       2     1      1     538
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (12) _sysParamInit                                        0     0      0    4279
                         _readEEPROM
                      i1_calcSysVars
 ---------------------------------------------------------------------------------
 (13) i1_calcSysVars                                       4     4      0    4257
                                              0 BANK0      4     4      0
                          i1___fldiv
                          i1___flmul
 ---------------------------------------------------------------------------------
 (14) i1___flmul                                          25    17      8    2462
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (14) i1___fldiv                                          25    17      8    1625
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (13) _readEEPROM                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _putchUART                                           1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _hp_isr                                             14    14      0     162
                                              6 COMRAM    14    14      0
                              _T2int
 ---------------------------------------------------------------------------------
 (16) _T2int                                               0     0      0     162
                        i2_putchUART
                      i2_setPWM2duty
 ---------------------------------------------------------------------------------
 (17) i2_setPWM2duty                                       6     4      2     140
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2_putchUART                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMConfig
   _PWM2Config
     _setPWM2duty
     _t2config
   _UARTConfig
   _buttonChecking
     _delay_ms
     _longPressDOWN
     _longPressENTER
     _longPressRETRO
     _longPressUP
     _pressDOWN
     _pressENTER
       _checkPass
       _confirmEdition
         _saveSysParams
           _calcSysVars
             ___fldiv
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
     _pressRETRO
     _pressUP
     _releaseDOWN
     _releaseENTER
     _releaseRETRO
     _releaseUP
   _clockConfig
   _drawScreen
     _drawAdvOFF
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAdvON
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawBadPass
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawChanVal
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawMenu
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawPassWord
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawSNquest
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _interruptConfig
   _ioConfig
   _ioInitStt
   _lcd_init
     _lcd_send_4bits
     _lcd_send_byte
       _lcd_read_byte
         _lcd_read_4bits
       _lcd_send_4bits

 _isr (ROOT)
   _UARTint
     _putchUART
     _sysParamInit
       _readEEPROM
       i1_calcSysVars
         i1___fldiv
         i1___flmul
     i1_saveSysParams
       i1_calcSysVars
         i1___fldiv
         i1___flmul
       i1_writeEEPROM

 _hp_isr (ROOT)
   _T2int
     i2_putchUART
     i2_setPWM2duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     31      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6C      84       4       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      49       1       77.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A       9        0.0%
DATA                 0      0     12A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Tue Nov 01 00:17:51 2016

            ___fldiv@aexp 008D              ___fldiv@bexp 008C              ___fldiv@sign 0081  
         ?_lcd_send_4bits 0001               i1___fldiv@a 0019               i1___fldiv@b 0015  
        i2setPWM2duty@act 0005                        l81 5112                        l90 4E16  
          ?_lcd_send_byte 007A              ___awdiv@sign 0080                        _fd 014A  
                      _ie 0049             _holdRETROcont 0048               i1___flmul@a 0019  
             i1___flmul@b 0015          ?i1_saveSysParams 0001                        _pi 014F  
                      bsr 000FE0           ?_confirmEdition 0001       ___wmul@multiplicand 0077  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               drawMenu@adv 00C9                       l342 1F3E  
                     l414 43D0                       l282 514C                       l370 21C6  
                     l451 3AD6                       l460 3B4E                       l364 210A  
                     l356 204A                       l348 1FBA                       l373 2228  
                     l454 3AFE                       l463 3B76                       l367 2164  
                     l640 47AA                       l448 3AAE                       l457 3B26  
                     l721 50AA                       l572 36DC                       l548 4DDA  
                     l396 414C                       l662 2B7A                       l576 3704  
                     l594 37CA                       l674 2C18                       l826 0890  
                     l686 2CAA                       l792 0A20                       l689 2CC2  
                     l698 2D3C              __CFG_CPB$OFF 000000                       _PR2 000FBB  
            __CFG_CPD$OFF 000000    __size_ofi1_calcSysVars 014C                       _isr 0018  
 __end_of_interruptConfig 5244              ___awmod@sign 007A                       prod 000FF3  
                     wreg 000FE8                _TXSTA1bits 000FAC              __CFG_IESO$ON 000000  
            drawSNquest@i 00CA              ___flmul@aexp 0090              ___flmul@bexp 0095  
     __end_ofi2_putchUART 5228              ___flmul@sign 008F              ___flmul@temp 009A  
            ___flmul@prod 0096              __CFG_LVP$OFF 000000             i1___fldiv@grs 0028  
           i1___fldiv@rem 0022              ___fltol@exp1 00AE                      l1401 1D1A  
                    l1069 3686                      l1173 336E                      l1342 13D6  
                    l1166 32AA                      l1407 1DAA                      l1079 34C0  
                    l1343 13CA                      l1167 32EE                      l1344 1396  
                    l1248 455A                      l1409 1E18                      l1258 4738  
                    l1450 305E                      l1435 19EE                      l1428 1752  
                    l1445 1B00                      l1437 1A5C                      l1359 154A  
                    l1368 15DE                      l1464 3166                      l1465 317E  
                    l1457 310A                      l1398 1D72                      l6140 49B4  
                    l4604 1C70                      l6150 4A16                      l4622 1D26  
                    l4614 1CEE                      l6240 4DFE                      l6144 4A06  
                    l6136 499E                      l4640 1DBE                      l4560 1B86  
                    l6146 4A0E                      l4650 1E12                      l4634 1D94  
                    l4554 1B62                      l8002 11CA                      l4660 1E68  
                    l4628 1D6E                      l4580 1BE4                      l4564 1B90  
                    l8100 35B0                      l4574 1BC0                      l6510 3F1E  
                    l8030 3256                      l8014 50D6                      l6600 42E0  
                    l4664 1E96                      l4584 1BEE                      l8120 363C  
                    l8024 321C                      l9000 2044                      l4674 1EDC  
                    l4666 1EAA                      l6522 3F86                      l8210 3ED4  
                    l8202 3EA8                      l8130 366C                      l7402 4934  
                    l9010 20AA                      l4676 1EE0                      l4668 1ECC  
                    l4596 1C42                      l6620 4DBC                      l6516 3F36  
                    l8212 3EDE                      l8132 367C                      l8124 3650  
                    l8108 3604                      l8060 3324                      l9100 2EC8  
                    l6534 3FC6                      l8150 33CE                      l8230 44F4  
                    l8070 3354                      l7414 4970                      l9110 2F2A  
                    l9022 2104                      l9014 20D6                      l9006 2080  
                    l6560 4D04                      l6608 42F2                      l6528 3FA4  
                    l8216 3EFA                      l8208 3EC4                      l8080 3536  
                    l8072 3364                      l8064 3338                      l7408 4952  
                    l9104 2EF4                      l6722 4C38                      l6554 4CE6  
                    l7522 19D8                      l6626 4DE0                      l6538 3FD2  
                    l6546 3FEA                      l8154 341C                      l8226 44DE  
                    l8250 46E2                      l7426 4E3E                      l7434 4FE0  
                    l9122 2FA6                      l9130 2FE4                      l9050 21F4  
                    l9034 215E                      l9026 2130                      l6716 4C1A  
                    l6636 4EDE                      l6564 4D16                      l6572 4236  
                    l7452 16E0                      l9212 36C8                      l8164 350C  
                    l8172 4F1E                      l8228 44EE                      l9116 2F68  
                    l9140 416C                      ?_isr 0001                      l6726 4C4A  
                    l6590 42B2                      l7470 173A                      l7454 16E6  
                    l7446 16BC                      l9222 36F6                      l9230 3740  
                    l9214 36D0                      l8158 346E                      l7614 1238  
                    l8182 3E26                      l8238 4548                      l8254 4726  
                    l8246 46CC                      l8270 3096                      l8086 355C  
                    l9070 2DCA                      l9046 21C0                      l9038 2192  
                    l6584 4294                      l7552 1AD2                      l7528 1A02  
                    l7480 177A                      l7472 1740                      l7464 1716  
                    l7456 16F8                      l7800 168C                      l7632 1282  
                    l7608 1214                      l8248 46DC                      l8272 309E  
                    l8264 306E                      l9080 2DFC                      l9064 2256  
                    l9136 4156                      l6762 4796                      l6578 4248  
                    l7562 1B20                      l7554 1AE6                      l7538 1A56  
                    l9242 377A                      l9234 3752                      l7722 1448  
                    l7650 12DA                      l7642 12B0                      l7626 126E  
                    l7618 1242                      l8282 3148                      l8274 30AE  
                    l8610 0246                      l8602 0218                      l9074 2DE0  
                    l9058 2222                      l9146 4188                      l9410 4880  
                    l6596 42D4                      l7564 1B2A                      l7548 1AAC  
                    l7476 1766                      l9252 37B0                      l9228 3714  
                    l9500 2C30                      l7716 1438                      l7708 13FA  
                    l8284 3158                      l8276 30EC                      l7812 440E  
                    l7396 4916                      l7580 4A5E                      l7572 4A22  
                    l8700 05CA                      l8620 0296                      l8604 021E  
                    l9068 2DC0                      l9420 48A0                      l9412 4886  
                    l9332 459A                      l6758 4774                      l9262 37E2  
                    l9510 2C5E                      l9502 2C40                      l7750 1592  
                    l7718 143E                      l7726 145A                      l7638 12A6  
                    l8198 3E94                      l7582 4A6C                      l7574 4A30  
                    l8710 0634                      l8630 02DC                      l8614 026C  
                    l9174 432C                      l9422 48A8                      l9414 488E  
                    l9406 4872                      l9350 45E0                      l9248 379C  
                    l9600 2DAE                      l9520 2C78                      l7744 157C  
                    l7760 15B2                      l7736 152A                      l7680 1316  
                    l8296 31D0                      l7824 4442                      l7840 4492  
                    l8624 02AA                      l8616 0278                      l8640 0338  
                    l9096 2E9E                      l9088 2E58                      l9192 439C  
                    l9184 435E                      l9424 48B0                      l9416 4894  
                    l9408 487A                      l9344 45C2                      l9336 45A4  
                    l9258 37D0                      l9522 2C7E                      l7770 15D8  
                    l7754 159E                      l7762 15B8                      l7826 444E  
                    l7818 4424                      l7578 4A50                      l7586 4A78  
                    l8810 0AC0                      l8802 0A94                      l8714 06AC  
                    l8634 02F4                      l8626 02C4                      l8618 027E  
                    l9178 4342                      l9418 489A                      l9354 45EA  
                    l9540 2CD2                      l9524 2C8C                      l9460 2B94  
                    l7780 1634                      l7692 13AA                      l7844 44A6  
                    l7836 4484                      l7828 4454                      l7860 463A  
                    l8740 0778                      l8732 0748                      l8716 06B2  
                    l8572 00DC                      l9196 43B6                      l9428 48B8  
                    l9470 2BC4                      l9462 2BA4                      l7694 13B0  
                    l8830 0B5E                      l8822 0B06                      l8742 078C  
                    l8646 0352                      l8638 02FA                      l8912 3B60  
                    l8904 3B38                      l9560 2D10                      l9480 2BE6  
                    l7792 1674                      l7784 1646                      l7880 46A6  
                    l7872 4684                      l7864 464E                      l7856 462A  
                    l8808 0ABA                      l8760 0872                      l8752 0842  
                    l8736 076A                      l8728 06F8                      l8680 04AC  
                    l8672 0428                      l8656 03A4                      l8592 01AC  
                    l8568 00C6                      l8922 3B88                      l9562 2D1E  
                    l9482 2BEC                      l9474 2BD0                      l7794 1678  
                    l7698 13BA                      l7866 465A                      l8850 0C16  
                    l8842 0BCA                      l8826 0B2E                      l8770 08B8  
                    l8754 0850                      l8746 07B4                      l8738 0770  
                    l8690 0546                      l8578 010E                      l8586 0184  
                    l9580 2D66                      l9548 2CF0                      l9484 2BFA  
                    l7788 1668                      l7868 4660                      l7876 4692  
                    l7964 2856                      l7956 276A                      l8860 0C64  
                    l8852 0C22                      l8844 0BD4                      l8836 0B92  
                    l8780 09F6                      l8764 0894                      l8684 04DE  
                    l8596 01F2                      l8870 3A94                      l9558 2D0A  
                    l8782 0A04                      l8774 091A                      l8758 085E  
                    l8686 04F4                      l8598 0208                      l8880 3AC0  
                    l9592 2D92                      l7984 0F68                      l8864 0CEE  
                    l8856 0C3C                      l8848 0C0C                      l8696 0598  
                    l8688 0530                      l9578 2D56                      l7978 0EA2  
                    l8786 0A12                      l8866 0D04                      l8970 1F86  
                    l8962 1F38                      l8954 1F0A                      l9588 2D86  
                    l7996 1104                      l7988 0F94                      l9598 2DA8  
                    l8798 0A6C                      STR_1 7E8F                      l8896 3B10  
                    l8888 3AE8                      l8992 2016                      l8984 1FE0  
                    l8968 1F74                      STR_2 7F95                      STR_3 7F63  
                    l8978 1FB4                      STR_4 7E47                      STR_5 7F0D  
                    l8988 1FFA                      STR_6 7F1F                      STR_7 7F30  
                    STR_8 7EB3                      STR_9 7FB3              printf@tmpval 011E  
                    u4790 1E7C                      u7520 3FB0                      u7530 3FB2  
                    u7710 42BE                      u9150 1AC0                      u9070 197A  
                    u7720 42C0                      u9075 196E                      u9270 1360  
                    u9280 1378                      u9290 137A                      u8840 4AA4  
                    u8850 4AB6                      u9811 3232                      u8915 493E  
                    u8860 4AD0                      u8916 4940                      u8870 4AF0  
                    u8846 4AA6                      u8935 495C                      u8936 495E  
                    u8858 4ABA                      u8955 497A                      u8868 4AD4  
                    u8956 497C                      u8878 4AF4                      u9695 3CD4  
                    u9791 31F8                      u8895 4920                      u8975 4E56  
                    u9696 3CD6                      u8896 4922                      u8976 4E58  
           __CFG_FCMEN$ON 000000               lcd_putc@cha 0081           __end_of_UARTint 4EBC  
                    _main 508A             i1___flmul@grs 0023          lcd_read_byte@low 0077  
                    fsr0h 000FEA                      fsr1h 000FE2                      fsr0l 000FE9  
                    fsr2h 000FDA                      fsr1l 000FE1                      indf2 000FDF  
                    fsr2l 000FD9                      btemp 004A             __CFG_BORV$285 000000  
          ??_drawPassWord 00C9                      pclat 000FFA                      prodh 000FF4  
                    prodl 000FF3                      start 00B2           ?_longPressENTER 0001  
         ___fldiv@new_exp 0086      __size_of_calcSysVars 014E           ?_longPressRETRO 0001  
           drawSNquest@tq 00C9     __size_of_sysParamInit 0108      __end_of_EEPROMConfig 524A  
            ___param_bank 000010               _writeEEPROM 5132                     ??_isr 0064  
          i1___fldiv@aexp 002D            i1___fldiv@bexp 002C              _BAUDCON1bits 000FB8  
          i1___fldiv@sign 0021             ___fltol@sign1 00AD           __end_of___fladd 169E  
                   ?_main 0001           __end_of___fldiv 1F04           __end_of___awdiv 44B0  
         __end_of___flneg 4F30                     _EEADR 000FA9                     STR_10 7FA4  
                   STR_11 7FD1                     STR_20 7E47                     STR_12 7ED7  
                   STR_13 7F85                     STR_21 7DFC                     STR_30 7E59  
                   STR_22 7EB3                     STR_14 7E6B                     STR_23 7FB3  
                   STR_31 7FEF                     STR_15 7FC2                     STR_32 7E7D  
                   STR_40 7EC5                     STR_24 7FA4                     STR_16 7E59  
                   STR_25 7FD1                     STR_33 7FE0                     STR_17 7FEF  
                   STR_41 7F74                     STR_26 7ED7                     STR_42 7EE9  
                   STR_18 7E7D                     STR_34 7E35                     STR_27 7F85  
                   STR_19 7FE0                     STR_43 7EFB                     STR_35 7DE3  
                   STR_28 7E6B                     STR_44 7EA1                     STR_36 7E23  
         __end_of___awmod 46B0                     STR_29 7FC2                     STR_37 7F41  
                   STR_45 7E10                     STR_38 7EC5                     STR_39 7F52  
         __end_of___flmul 1B44           __end_of___flsub 4D66           __end_of___fltol 3F0C  
         __end_of___lldiv 456C                     u10020 3E46                     u10025 3E3A  
         ___awdiv@divisor 007D                     u12070 2CDA           __end_of___llmod 474A  
           lcd_init@F7567 0157                     u11620 3772                     u12180 2D6E  
                   u12076 2CDC                     u11630 3774                     u12327 458A  
                   u12337 45B2                     u11650 3790                     u12186 2D70  
                   u12347 45D0                     u11660 3792                     u12357 4A44  
                   u12367 4984                     u12377 4E06                     u11850 2BAC  
                   u10980 0888                     u11960 2C48                     u11856 2BAE  
                   u11966 2C4A                     i1l282 516A                     i1l288 51A8  
                   i1l619 5212                     i1l718 006A                     i2l640 4BCE  
             ?_UARTConfig 0001                     i2l714 4B4C                     i2l619 521E  
         ___awdiv@counter 007F                     _T2int 50E0               ?_PWM2Config 0001  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_EBTR1$OFF 000000  
          __CFG_EBTR2$OFF 000000                     _fData 00CC            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000           __end_of_dpowers 7DE3            i1___flmul@aexp 0022  
          i1___flmul@bexp 0027                     _selSN 00D7         lcd_read_byte@high 0078  
                   _scale 0D24           __end_of_isdigit 50E0        __CFG_MCLRE$EXTMCLR 000000  
          i1___flmul@sign 0021            i1___flmul@temp 002C            i1___flmul@prod 0028  
                   _putch 51C2                     tablat 000FF5             drawPassWord@i 00C9  
         __end_of_pressUP 4016              _sysParamInit 4016                     plusw2 000FDB  
            ?_setPWM2duty 0075                     status 000FD8           ??_lcd_read_byte 0077  
      __size_ofi1___fldiv 02B4            __CFG_HFOFST$ON 000000        __size_ofi1___flmul 0350  
            putchUART@val 0015             i1_calcSysVars 3942              ?_longPressUP 0001  
         __initialization 47DE     __end_ofi1_writeEEPROM 5170              __end_of_main 50B6  
         ??_lcd_send_byte 007B     __end_of_saveSysParams 3CDC             lcd_gotoxy@pos 007E  
            ?_releaseDOWN 0001               i2_putchUART 521C                    ??_main 00CC  
           __activetblptr 000002            __CFG_PLLCFG$ON 000000                    ?_T2int 0001  
    __size_of__tdiv_to_l_ 019E          ?_interruptConfig 0001      __size_of_clockConfig 0028  
        __end_of_t2config 5188                 ??_UARTint 002E            setPWM2duty@act 0079  
        ___llmod@dividend 0082                    ?_scale 009C                    _EEDATA 000FA8  
                  _CCPR2L 000F67                    _EECON2 000FA7          ___awdiv@dividend 007B  
                  ?_putch 0001                    i1l1409 2AA0                    i1l1428 2306  
                  i1l1445 25A2                    i1l1437 251C                    i1l1398 2A34  
                  i1l8312 28D4                    i1l8402 2A9C                    i1l8420 2B32  
                  i1l8412 2AE4                    i1l8332 2914                    i1l8316 28D8  
                  i1l8416 2B08                    i1l8336 2918                    i1l8426 2B3E  
                  i1l8418 2B16                    i1l8450 22B6                    i1l8428 2B40  
                  i1l8380 2A32                    i1l8356 2986                    i1l8348 295E  
                  i1l8524 24E4                    i1l8452 22C6                    i2l7030 50E8  
                  i1l8374 2A0C                    i1l8366 29E4                    i1l8550 258C  
                  i1l8534 2518                    i1l8518 24C6                    i1l8392 2A68  
                  i1l8560 25C0                    i1l8544 2560                    i1l8472 2312  
                  i1l8448 22B2                    i1l9440 4EAE                    i1l8386 2A4A  
                  i1l8466 22F2                    i2l7036 50FE                    i1l8548 257E  
                  i1l8476 2324                    i1l8468 22F6                    i1l9436 4EA0  
                  i2l6834 4BA8                    i2l6838 4BC2                    _RCREG1 000FAE  
    __size_of_drawBadPass 002E                    _SPBRG1 000FAF            ?i1_calcSysVars 0001  
                  _TXREG1 000FAD          __end_of___xxtofl 31E2      __size_of_drawChanVal 0256  
        __end_of_delay_ms 4E38                    _UPisLP 0046          __end_of_ioConfig 4FD0  
     __size_of_UARTConfig 0038            __CFG_PWRTEN$ON 000000            __CFG_XINST$OFF 000000  
           _DOWNsecurLock 0144       __size_of_PWM2Config 0066          __end_of__powers_ 7DBB  
    __size_of_drawSNquest 00D4              _CCPTMRS0bits 000F49          __end_of_drawMenu 2286  
        __end_of_lcd_init 460E                    ___flge 3380          __end_of_lcd_putc 4A96  
               ??___fladd 00B1                    ___wmul 4F68                 ??___fldiv 007D  
               ??___awdiv 007F                 ??___flneg 0079            __CFG_STVREN$ON 000000  
               ??___awmod 0079                 ??___flmul 008B                 ??___flsub 00C5  
               ??___fltol 00A9                 ??___lldiv 007D                 ??___llmod 008A  
                  _contra 014B                    _hp_isr 0008                    _selKMT 00D6  
                  _fround 25D6                    clear_0 4844                    clear_1 4850  
                  clear_2 485C          ___awdiv@quotient 0081           ___awmod@divisor 0077  
         ___awmod@counter 0079                    _printf 00B6         __end_ofi1___fldiv 2B5C  
     _lcd_send_4bits$1602 0075       _lcd_send_4bits$1603 0076       _lcd_send_4bits$1604 0077  
     _lcd_send_4bits$1605 0078         __end_ofi1___flmul 25D6          ??_lcd_read_4bits 0075  
    __end_of_drawPassWord 4224              __pdataCOMRAM 002F                 ??_isdigit 0075  
            __mediumconst 7D52                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8                 ??_pressUP 0075                ___flge@ff1 0075  
              ___flge@ff2 0079              ___xxtofl@arg 007F              ___xxtofl@exp 007E  
            ___xxtofl@val 0075                __accesstop 0060   __end_of__initialization 4862  
         __CFG_PBADEN$OFF 000000     __size_of_EEPROMConfig 0006                ___flneg@f1 0075  
             _UPsecurLock 0149             ___rparam_used 000001                ___fltol@f1 00A5  
        ??_lcd_send_4bits 0075           writeEEPROM@data 0075             __end_of_T2int 510A  
        ??_confirmEdition 00A0            __pcstackCOMRAM 0001              __pidataBANK0 5228  
            __pidataBANK1 51B0        __size_of_checkPass 008E             __end_of_scale 11F6  
           __end_of_putch 51D0              _actualScreen 00D1            lcd_gotoxy@fila 007D  
              __div_to_l_ 3510                   ??_T2int 0007        __size_of_ioInitStt 0008  
           ?_releaseENTER 0001        __size_of_drawAdvON 002E             ?_releaseRETRO 0001  
            _EEPROMConfig 5244         lcd_gotoxy@address 007F           __div_to_l_@exp1 0082  
         __div_to_l_@cntr 0081                   ??_scale 00A0           __div_to_l_@quot 007D  
                 ??_putch 0082          ??_longPressENTER 0075                __pbssBANK0 00CC  
              __pbssBANK1 0131           ??i1_calcSysVars 002E          ??_longPressRETRO 0075  
           __div_to_l_@f1 0075             __div_to_l_@f2 0079      __size_of_setPWM2duty 0094  
          _RETROsecurLock 0148        __CFG_CCP2MX$PORTC1 000000            i2putchUART@val 0001  
            ?_writeEEPROM 0075            lcd_send_byte@n 007A                   ?___flge 0075  
                 ?___wmul 0075        __size_of_releaseUP 000C        __CFG_CCP3MX$PORTB5 000000  
    __size_of_longPressUP 0054                 ?_t2config 0001                   ?_hp_isr 0001  
                 ?_fround 009C                   ?_printf 0100                _drawAdvOFF 505C  
      __size_of_pressDOWN 00FA     i2setPWM2duty@actuator 0001              ??_UARTConfig 0075  
    __size_of_releaseDOWN 000C            ??_releaseENTER 0075    __size_ofi2_setPWM2duty 0070  
          ??_releaseRETRO 0075              ??_PWM2Config 007B                 ?___xxtofl 0075  
         __CFG_WDTEN$SWON 000000                 ?_delay_ms 0075  __size_ofi1_saveSysParams 0124  
              _drawScreen 4870                _lcd_gotoxy 4FD0                 ?_ioConfig 0001  
      __size_of_putchUART 000C    __size_of_longPressDOWN 000C                   _SPBRGH1 000FB0  
                 _UARTint 4E7A                 ?_drawMenu 0001                 ?_lcd_init 0001  
            _densidadMasa 00D9                   _i16Data 0043         __end_of_checkPass 4A1C  
               ?_lcd_putc 0001   __size_of_buttonChecking 0262            _tempLastScreen 00D8  
           ??_calcSysVars 009C                _holdUPcont 00D3                _readEEPROM 519C  
       __end_of_ioInitStt 523C         __end_of__npowers_ 7D87                   __Hparam 0000  
              _scale$2838 00A0                   __Lparam 0000         __end_of_drawAdvON 505C  
      __end_of_UARTConfig 4F68                checkPass@i 007A        __end_of_PWM2Config 4CCA  
         __size_of___flge 0190                   ___fladd 11F6                   ___fldiv 1B44  
                 ___awdiv 43F2                   ___flneg 4EF8                   ___awmod 460E  
                 ___flmul 169E                   ___flsub 4D1E                   ___fltol 3E00  
                 ___lldiv 44B0           __size_of___wmul 0036                   ___llmod 46B0  
              ??_t2config 0075     __size_of_drawPassWord 0106           __size_of_hp_isr 4B80  
                 __pcinit 47DE           __size_of_fround 02D2              ?i2_putchUART 0001  
                 __ramtop 0600                   __ptext0 508A                   __ptext1 456C  
                 __ptext2 5234                   __ptext3 4F9E                   __ptext4 523C  
                 __ptext5 4870                   __ptext6 431E                   __ptext7 411E  
                 __ptext8 1F04                   __ptext9 2DBE           __size_of_printf 0C6E  
             ?__div_to_l_ 0075                   _dpowers 7DBB                 _T2CONbits 000FBA  
                 _isdigit 50B6              __size_of_isr 009A                ??___xxtofl 0079  
        ___awmod@dividend 0075                ??_delay_ms 0077                ??_ioConfig 0075  
                 _pressUP 3F0C                 _ENTERisLP 0145                   _proceso 0140  
                 _questSN 0142                ??_drawMenu 00C9                ??_lcd_init 007D  
       __end_of_releaseUP 51F8            __pintcode_body 4B10                ??_lcd_putc 0080  
    end_of_initialization 4862         i1calcSysVars@temp 0060      lcd_send_byte@address 007C  
               i1u1044_20 2AF2                 i1u1063_20 256E                 i1u1055_20 2488  
               i1u1055_25 247E             __Lmediumconst 7D52                 i1u1172_25 3DF8  
               i1u1172_26 3DFA                   int_func 4B10             i2_setPWM2duty 4B88  
       __end_of_pressDOWN 431E     __end_of_lcd_read_byte 4DAC           ___lldiv@divisor 0079  
            _drawPassWord 411E           ___lldiv@counter 0081           lcd_read_4bits@n 0076  
           _longPressDOWN 5204       __end_of_calcSysVars 3942             readEEPROM@adr 0015  
                 printf@c 0130                   printf@f 0100         __end_of_putchUART 521C  
                 postdec1 000FE5                   postdec2 000FDD                   postinc0 000FEE  
                 postinc2 000FDE                _pressENTER 3698                _pressRETRO 4DAC  
               _RETROisLP 0147            __tdiv_to_l_@f1 0075            __tdiv_to_l_@f2 0079  
   __end_of_lcd_send_byte 4E7A             ??__tdiv_to_l_ 007D                 _PORTAbits 000F80  
               _PORTBbits 000F81               ?_drawAdvOFF 0001             ??_clockConfig 0075  
            _holdDOWNcont 0047               ___fladd@grs 00BC             ___xxtofl@sign 007D  
               _TRISAbits 000F92                 _TRISBbits 000F93                 _TRISCbits 000F94  
             ?_drawScreen 0001               ?_lcd_gotoxy 007D                 i1___fldiv 28A8  
               i1___flmul 2286               ___fldiv@grs 0088               ___fldiv@rem 0082  
           ??_drawBadPass 00C9            _ProcessStarted 00D0    __size_ofi1_writeEEPROM 001E  
           ??_drawChanVal 00C9    __size_of_saveSysParams 0124  __size_of_interruptConfig 0008  
             ___flmul@grs 0091         ??i1_saveSysParams 002E            ?i2_setPWM2duty 0001  
             ?_readEEPROM 0001             ??_drawSNquest 00C9               printf@width 0128  
             _CCP2CONbits 000F66         confirmEdition@yes 00A0      __end_of_releaseENTER 51EC  
     __size_of__div_to_l_ 0188      __end_of_releaseRETRO 51DE            ?_longPressDOWN 0001  
             _ECCP2ASbits 000F64            __end_of___flge 3510      __size_of_writeEEPROM 0020  
          __end_of___wmul 4F9E             __pidataCOMRAM 5188            __end_of_hp_isr 4B88  
          __end_of_fround 28A8       setPWM2duty@actuator 0075            __end_of_printf 0D24  
     start_initialization 47DE       __end_of__tdiv_to_l_ 3380                ?i1___fldiv 0015  
             __end_of_isr 00B2                ?i1___flmul 0015       __end_of_clockConfig 5132  
          _buttonChecking 2B5C               _calcSysVars 37F4           ___llmod@divisor 0086  
     __end_of_drawBadPass 502E           ___llmod@counter 008A       __size_of_drawAdvOFF 002E  
            _lastSttENTER 0040              _lastSttRETRO 0041       __end_of_drawChanVal 3014  
                ??___flge 007D       __size_of_drawScreen 0090       __size_of_lcd_gotoxy 0030  
           i1_writeEEPROM 5152                  ??___wmul 0079       __end_of_drawSNquest 43F2  
             ?_pressENTER 0001               ?_pressRETRO 0001               __pdataBANK0 00D9  
             __pdataBANK1 014B           lcd_send_4bits@n 0079                  ??_hp_isr 0007  
           _saveSysParams 3BB8                  ??_fround 00A0                  ??_printf 00C5  
       __size_of_t2config 0018                 ___fladd@a 00AD                 ___fladd@b 00A9  
              fround@prec 00A8       __size_of_readEEPROM 0014                 ___fldiv@a 0079  
               ___fldiv@b 0075      __size_ofi2_putchUART 000C                 ___flmul@a 0087  
               ___flmul@b 0083               __pbssCOMRAM 0043                 ___flsub@a 00C1  
               ___flsub@b 00BD            writeEEPROM@adr 0076             __pcstackBANK0 0060  
           __pcstackBANK1 0100                 _calFactor 0131    __end_of_buttonChecking 2DBE  
       __size_of___xxtofl 01CE              _isdigit$2354 0076                  ?_UARTint 0001  
       __size_of_delay_ms 0046         __size_of_ioConfig 0032           ??i2_setPWM2duty 0003  
           ?_sysParamInit 0001   __size_of_lcd_read_4bits 007A             ??_setPWM2duty 0077  
       __size_of_drawMenu 0382         __size_of_lcd_init 00A2         __size_of_lcd_putc 007A  
   __end_ofi1_calcSysVars 3A8E         i1___fldiv@new_exp 0026                 _checkPass 498E  
         ??_longPressDOWN 0075             ??_longPressUP 0075         ??_interruptConfig 0075  
          ?i1_writeEEPROM 0015                 __pintcode 0008             __pmediumconst 7D52  
                ?___fladd 00A9                  ?___fldiv 0075                  ?___awdiv 007B  
                ?___flneg 0075                  ?___awmod 0075                  ?___flmul 0083  
                ?___flsub 00BD                  ?___fltol 00A5                 _ioInitStt 5234  
                ?___lldiv 0075                  ?___llmod 0082                 __npowers_ 7D53  
          ?_saveSysParams 0001                 _drawAdvON 502E             ??_releaseDOWN 0075  
             __pintcodelo 0018          __CFG_PRICLKEN$ON 000000               __tdiv_to_l_ 31E2  
 __size_of_lcd_send_4bits 008E              ??__div_to_l_ 007D   __size_of_confirmEdition 012A  
             _clockConfig 510A                  ?_isdigit 0001            __size_of_T2int 002A  
               _lastSttUP 0042                  ?_pressUP 0001               ??i1___fldiv 001D  
             ??i1___flmul 001D           ?_buttonChecking 0001               _drawBadPass 5000  
          __size_of_scale 04D2            ??_sysParamInit 002E            __size_of_putch 000E  
     __size_of_pressENTER 015C     __size_of_releaseENTER 000E       __size_of_pressRETRO 0046  
             _drawChanVal 2DBE     __size_of_releaseRETRO 000E             _tempNumCortes 015B  
          ___wmul@product 0079                  _LATBbits 000F8A                  _LATCbits 000F8B  
               _releaseUP 51EC                ?_checkPass 0001   lcd_init@LCD_INIT_STRING 007E  
               delay_ms@i 0078                  _DOWNisLP 0045               _drawSNquest 431E  
                _IPR1bits 000F9F                  _PIE1bits 000F9D                 _numCortes 00E1  
                _PIR1bits 000F9E        __end_of__div_to_l_ 3698       __end_of_setPWM2duty 47DE  
                _RCONbits 000FD0                UARTint@sas 002E   __size_of_longPressENTER 006C  
        __CFG_WDTPS$32768 000000                 _pressDOWN 4224   __size_of_longPressRETRO 003C  
              ?_ioInitStt 0001                ?_drawAdvON 0001                 _putchUART 5210  
     __end_of_longPressUP 4D1E              ??_drawAdvOFF 00C9         ___wmul@multiplier 0075  
               lcd_init@i 0082                printf@flag 011C                printf@fval 012A  
              printf@prec 012E               _tVarProceso 00E3           i1_saveSysParams 3CDC  
            _releaseENTER 51DE       __end_of_releaseDOWN 5204              ??_drawScreen 00CC  
            _releaseRETRO 51D0              ??_lcd_gotoxy 007E                 copy_data0 47F2  
               copy_data1 4812                 copy_data2 4832          __size_of_UARTint 0042  
            ??_readEEPROM 0015                ?_releaseUP 0001                  _m3Xcorte 0033  
              _EECON1bits 000FA6           ??i1_writeEEPROM 0016        __end_of_drawAdvOFF 508A  
                __Hrparam 0000               _lastSttDOWN 003F                  __Lrparam 0000  
      __CFG_BOREN$SBORDIS 000000           ??_saveSysParams 00A0                ?_pressDOWN 0001  
       __CFG_P2BMX$PORTC0 000000        __end_of_drawScreen 4900        __end_of_lcd_gotoxy 5000  
                _t2config 5170          __size_of___fladd 04A8          __size_of___fldiv 03C0  
        __size_of___awdiv 00BE          __size_of___flneg 0038          __size_of___awmod 00A2  
        __size_of___flmul 04A6          __size_of___flsub 0048          __size_of___fltol 010C  
        __size_of___lldiv 00BC          __size_of___llmod 009A                ?_putchUART 0001  
             _fround$2836 00A4               _fround$2837 00A0                _ANSELAbits 000F38  
              _ANSELCbits 000F3A               _menuSection 00D4                  ___xxtofl 3014  
      __end_of_readEEPROM 51B0                  _diamTubo 00DD          __size_of_isdigit 002A  
  __size_of_lcd_read_byte 0046                  _delay_ms 4DF2             ?_EEPROMConfig 0001  
                _ioConfig 4F9E                  __ptext10 5000                  __ptext11 502E  
                __ptext20 4D66                  __ptext12 505C                  __ptext21 4A96  
                __ptext13 00B6                  __ptext30 46B0                  __ptext22 50B6  
                __ptext14 0D24                  __ptext31 44B0                  __ptext23 25D6  
                __ptext15 51C2                  __ptext40 51D0                  __ptext32 3E00  
                __ptext24 460E                  __ptext16 4A1C                  __ptext41 51DE  
                __ptext33 4D1E                  __ptext25 43F2                  __ptext17 4FD0  
                __ptext50 169E                  __ptext42 51F8                  __ptext34 11F6  
                __ptext26 31E2                  __ptext18 4E38                  __ptext51 1B44  
                __ptext43 3F0C                  __ptext35 4EF8                  __ptext27 3510  
                __ptext19 4900                  __ptext60 4C64                  __ptext52 498E  
                __ptext44 4DAC                  __ptext36 3380                  __ptext28 3014  
                __ptext61 5170                  __ptext53 4224                  __ptext45 3698  
                __ptext37 510A                  __ptext29 4F68                  __ptext70 2286  
                __ptext62 474A                  __ptext54 4CCA                  __ptext46 3A8E  
                __ptext38 2B5C                  __ptext71 28A8                  __ptext63 5244  
                __ptext55 4EBC                  __ptext47 3BB8                  __ptext39 51EC  
                __ptext72 519C                  __ptext56 4BF8                  __ptext48 5132  
                __ptext73 5210                  __ptext65 4E7A                  __ptext57 5204  
                __ptext49 37F4                  __ptext66 3CDC                  __ptext58 4DF2  
                __ptext75 50E0                  __ptext67 5152                  __ptext59 4F30  
                __ptext76 4B88                  __ptext68 4016                  __ptext77 521C  
                __ptext69 3942                  _kgXcorte 002F                  __powers_ 7D87  
        __size_of_pressUP 010A                  _drawMenu 1F04                  _lcd_init 456C  
                _lcd_putc 4A1C               _OSCCON2bits 000FD2            _lcd_read_4bits 4A96  
  __size_of_lcd_send_byte 0042               _setPWM2duty 474A         i1writeEEPROM@data 0015  
            ?_calcSysVars 0001             __size_of_main 002C               ??_checkPass 0075  
         calcSysVars@temp 009C                  _passChar 0139               _passSection 00D5  
                _tiXcorte 0037             ??_writeEEPROM 0076               _longPressUP 4CCA  
            _PSTR2CONbits 000F63              ??_pressENTER 00A1                  int$flags 004A  
             ??_ioInitStt 0075                  _questKMT 013D              ??_pressRETRO 0075  
             ??_drawAdvON 00C9   __end_ofi1_saveSysParams 3E00                 printf@len 0118  
               printf@exp 0126                 printf@val 0122      __end_of_sysParamInit 411E  
             _releaseDOWN 51F8            _lcd_send_4bits 4900           checkPass@passOK 0079  
             _introducido 0135               delay_ms@del 0075            _confirmEdition 3A8E  
           _velocidadMasa 003B               _OSCTUNEbits 000F9B                _INTCONbits 000FF2  
          ??_EEPROMConfig 0075               _PWM2CONbits 000F65                  isdigit@c 0077  
            _tempkgXcorte 0153                  scale@scl 00A4    __end_of_lcd_read_4bits 4B10  
         _interruptConfig 523C                  intlevel1 0000                  intlevel2 0000  
        __tdiv_to_l_@exp1 0085          __tdiv_to_l_@cntr 0084        __end_of_pressENTER 37F4  
        __tdiv_to_l_@quot 0080        __end_of_pressRETRO 4DF2          ___lldiv@dividend 0075  
             ??_releaseUP 0075                _RCSTA1bits 000FAB          i1writeEEPROM@adr 0016  
              _OSCCONbits 000FD3             _lcd_read_byte 4D66            _longPressENTER 4BF8  
          _longPressRETRO 4EBC               ??_pressDOWN 0075                  printf@ap 011A  
                printf@cp 0116    __end_of_lcd_send_4bits 498E    __end_of_confirmEdition 3BB8  
                putch@val 0082             ??i2_putchUART 0001               ??_putchUART 0015  
           _lcd_send_byte 4E38       __end_of_writeEEPROM 5152              ?__tdiv_to_l_ 0075  
             _printf$2839 0112          ??_buttonChecking 00A1              ?_clockConfig 0001  
              _UARTConfig 4F30          ___lldiv@quotient 007D                _PWM2Config 4C64  
       __CFG_T3CMX$PORTC0 000000                _WDTCONbits 000FD1             _holdENTERcont 00D2  
         ?_lcd_read_4bits 0001              ?_drawBadPass 0001             ___fladd@signs 00B9  
            ?_drawChanVal 0001            _ENTERsecurLock 0146              ___fladd@aexp 00BA  
            ___fladd@bexp 00BB     __end_ofi2_setPWM2duty 4BF8         __CFG_FOSC$INTIO67 000000  
            ?_drawSNquest 0001              drawChanVal@i 00C9    __end_of_longPressENTER 4C64  
           ?_drawPassWord 0001            ?_lcd_read_byte 0001    __end_of_longPressRETRO 4EF8  
   __end_of_longPressDOWN 5210  
