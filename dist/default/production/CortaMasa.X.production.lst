

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Thu Nov 03 00:52:54 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	text64,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    93                           	psect	text74,global,reloc=2,class=CODE,delta=1
    94                           	psect	text75,global,reloc=2,class=CODE,delta=1
    95                           	psect	text76,global,reloc=2,class=CODE,delta=1
    96                           	psect	text77,global,reloc=2,class=CODE,delta=1
    97                           	psect	text78,global,reloc=2,class=CODE,delta=1
    98                           	psect	text79,global,reloc=2,class=CODE,delta=1
    99                           	psect	text80,global,reloc=2,class=CODE,delta=1
   100                           	psect	text81,global,reloc=2,class=CODE,delta=1
   101                           	psect	text82,global,reloc=2,class=CODE,delta=1
   102                           	psect	text83,global,reloc=2,class=CODE,delta=1
   103                           	psect	intcode,global,reloc=2,class=CODE,delta=1
   104                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
   105                           	psect	text85,global,reloc=2,class=CODE,delta=1
   106                           	psect	text86,global,reloc=2,class=CODE,delta=1
   107                           	psect	text87,global,reloc=2,class=CODE,delta=1
   108                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
   109                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   110                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   111  0000                     
   112                           	psect	idataCOMRAM
   113  005E84                     __pidataCOMRAM:
   114                           	opt stack 0
   115                           
   116                           ;initializer for _densidadMasa
   117  005E84  0000               	dw	0
   118  005E86  3FC0               	dw	16320
   119                           
   120                           ;initializer for _diamTubo
   121  005E88  0000               	dw	0
   122  005E8A  41A0               	dw	16800
   123                           
   124                           ;initializer for _m3Xcorte
   125  005E8C  CCCD               	dw	52429
   126  005E8E  3DCC               	dw	15820
   127                           
   128                           ;initializer for _tiXcorte
   129  005E90  0000               	dw	0
   130  005E92  4000               	dw	16384
   131                           
   132                           ;initializer for _velocidadMasa
   133  005E94  0000               	dw	0
   134  005E96  4000               	dw	16384
   135                           
   136                           ;initializer for _lastSttDOWN
   137  005E98  01                 	db	1
   138                           
   139                           ;initializer for _lastSttENTER
   140  005E99  01                 	db	1
   141                           
   142                           ;initializer for _lastSttRETRO
   143  005E9A  01                 	db	1
   144                           
   145                           	psect	idataBANK0
   146  005F0E                     __pidataBANK0:
   147                           	opt stack 0
   148                           
   149                           ;initializer for _kgXcorte
   150  005F0E  CCCD               	dw	52429
   151  005F10  3DCC               	dw	15820
   152                           
   153                           ;initializer for _numCortes
   154  005F12  0001               	dw	1
   155                           
   156                           ;initializer for _chanValSection
   157  005F14  05                 	db	5
   158                           
   159                           ;initializer for _lastSttUP
   160  005F15  01                 	db	1
   161                           
   162                           ;initializer for _tVarProceso
   163  005F16  01                 	db	1
   164                           
   165                           	psect	idataBANK1
   166  005E08                     __pidataBANK1:
   167                           	opt stack 0
   168                           
   169                           ;initializer for _exp10
   170  005E08  86A0               	dw	34464
   171  005E0A  0001               	dw	1
   172  005E0C  2710               	dw	10000
   173  005E0E  0000               	dw	0
   174  005E10  03E8               	dw	1000
   175  005E12  0000               	dw	0
   176  005E14  0064               	dw	100
   177  005E16  0000               	dw	0
   178  005E18  000A               	dw	10
   179  005E1A  0000               	dw	0
   180  005E1C  0001               	dw	1
   181  005E1E  0000               	dw	0
   182                           
   183                           ;initializer for _pi
   184  005E20  0FDB               	dw	4059
   185  005E22  4049               	dw	16457
   186                           
   187                           ;initializer for _tempkgXcorte
   188  005E24  CCCD               	dw	52429
   189  005E26  3DCC               	dw	15820
   190                           
   191                           ;initializer for lcd_init@F7567
   192  005E28  28                 	db	40
   193  005E29  0C                 	db	12
   194  005E2A  01                 	db	1
   195  005E2B  06                 	db	6
   196                           
   197                           ;initializer for _tempNumCortes
   198  005E2C  0001               	dw	1
   199                           
   200                           	psect	mediumconst
   201  007CD8                     __pmediumconst:
   202                           	opt stack 0
   203  007CD8  00                 	db	0
   204  007CD9                     __npowers_:
   205                           	opt stack 0
   206  007CD9  0000               	dw	0
   207  007CDB  3F80               	dw	16256
   208  007CDD  CCCD               	dw	52429
   209  007CDF  3DCC               	dw	15820
   210  007CE1  D70A               	dw	55050
   211  007CE3  3C23               	dw	15395
   212  007CE5  126F               	dw	4719
   213  007CE7  3A83               	dw	14979
   214  007CE9  B717               	dw	46871
   215  007CEB  38D1               	dw	14545
   216  007CED  C5AC               	dw	50604
   217  007CEF  3727               	dw	14119
   218  007CF1  37BD               	dw	14269
   219  007CF3  3586               	dw	13702
   220  007CF5  BF95               	dw	49045
   221  007CF7  33D6               	dw	13270
   222  007CF9  CC77               	dw	52343
   223  007CFB  322B               	dw	12843
   224  007CFD  705F               	dw	28767
   225  007CFF  3089               	dw	12425
   226  007D01  E6FF               	dw	59135
   227  007D03  2EDB               	dw	11995
   228  007D05  E508               	dw	58632
   229  007D07  1E3C               	dw	7740
   230  007D09  4260               	dw	16992
   231  007D0B  0DA2               	dw	3490
   232  007D0D                     __end_of__npowers_:
   233                           	opt stack 0
   234  007D0D                     __powers_:
   235                           	opt stack 0
   236  007D0D  0000               	dw	0
   237  007D0F  3F80               	dw	16256
   238  007D11  0000               	dw	0
   239  007D13  4120               	dw	16672
   240  007D15  0000               	dw	0
   241  007D17  42C8               	dw	17096
   242  007D19  0000               	dw	0
   243  007D1B  447A               	dw	17530
   244  007D1D  4000               	dw	16384
   245  007D1F  461C               	dw	17948
   246  007D21  5000               	dw	20480
   247  007D23  47C3               	dw	18371
   248  007D25  2400               	dw	9216
   249  007D27  4974               	dw	18804
   250  007D29  9680               	dw	38528
   251  007D2B  4B18               	dw	19224
   252  007D2D  BC20               	dw	48160
   253  007D2F  4CBE               	dw	19646
   254  007D31  6B28               	dw	27432
   255  007D33  4E6E               	dw	20078
   256  007D35  02F9               	dw	761
   257  007D37  5015               	dw	20501
   258  007D39  78EC               	dw	30956
   259  007D3B  60AD               	dw	24749
   260  007D3D  F2CA               	dw	62154
   261  007D3F  7149               	dw	29001
   262  007D41                     __end_of__powers_:
   263                           	opt stack 0
   264  007D41                     _dpowers:
   265                           	opt stack 0
   266  007D41  0001               	dw	1
   267  007D43  0000               	dw	0
   268  007D45  000A               	dw	10
   269  007D47  0000               	dw	0
   270  007D49  0064               	dw	100
   271  007D4B  0000               	dw	0
   272  007D4D  03E8               	dw	1000
   273  007D4F  0000               	dw	0
   274  007D51  2710               	dw	10000
   275  007D53  0000               	dw	0
   276  007D55  86A0               	dw	34464
   277  007D57  0001               	dw	1
   278  007D59  4240               	dw	16960
   279  007D5B  000F               	dw	15
   280  007D5D  9680               	dw	38528
   281  007D5F  0098               	dw	152
   282  007D61  E100               	dw	57600
   283  007D63  05F5               	dw	1525
   284  007D65  CA00               	dw	51712
   285  007D67  3B9A               	dw	15258
   286  007D69                     __end_of_dpowers:
   287                           	opt stack 0
   288  0000                     _ANSELAbits	set	3896
   289  0000                     _ANSELCbits	set	3898
   290  0000                     _CCPTMRS0bits	set	3913
   291  0000                     _BAUDCON1bits	set	4024
   292  0000                     _CCP2CONbits	set	3942
   293  0000                     _CCPR2L	set	3943
   294  0000                     _ECCP2ASbits	set	3940
   295  0000                     _EEADR	set	4009
   296  0000                     _EECON1bits	set	4006
   297  0000                     _EECON2	set	4007
   298  0000                     _EEDATA	set	4008
   299  0000                     _INTCONbits	set	4082
   300  0000                     _IPR1bits	set	3999
   301  0000                     _LATBbits	set	3978
   302  0000                     _LATCbits	set	3979
   303  0000                     _OSCCON2bits	set	4050
   304  0000                     _OSCCONbits	set	4051
   305  0000                     _OSCTUNEbits	set	3995
   306  0000                     _PIE1bits	set	3997
   307  0000                     _PIR1bits	set	3998
   308  0000                     _PORTAbits	set	3968
   309  0000                     _PORTBbits	set	3969
   310  0000                     _PR2	set	4027
   311  0000                     _PSTR2CONbits	set	3939
   312  0000                     _PWM2CONbits	set	3941
   313  0000                     _RCONbits	set	4048
   314  0000                     _RCREG1	set	4014
   315  0000                     _RCSTA1bits	set	4011
   316  0000                     _SPBRG1	set	4015
   317  0000                     _SPBRGH1	set	4016
   318  0000                     _T2CONbits	set	4026
   319  0000                     _TRISAbits	set	3986
   320  0000                     _TRISBbits	set	3987
   321  0000                     _TRISCbits	set	3988
   322  0000                     _TXREG1	set	4013
   323  0000                     _TXSTA1bits	set	4012
   324  0000                     _WDTCONbits	set	4049
   325  007D69                     STR_36:
   326  007D69  20                 	db	32
   327  007D6A  20                 	db	32
   328  007D6B  20                 	db	32
   329  007D6C  20                 	db	32
   330  007D6D  25                 	db	37
   331  007D6E  63                 	db	99	;'c'
   332  007D6F  25                 	db	37
   333  007D70  75                 	db	117	;'u'
   334  007D71  25                 	db	37
   335  007D72  63                 	db	99	;'c'
   336  007D73  25                 	db	37
   337  007D74  75                 	db	117	;'u'
   338  007D75  25                 	db	37
   339  007D76  63                 	db	99	;'c'
   340  007D77  25                 	db	37
   341  007D78  75                 	db	117	;'u'
   342  007D79  25                 	db	37
   343  007D7A  63                 	db	99	;'c'
   344  007D7B  25                 	db	37
   345  007D7C  75                 	db	117	;'u'
   346  007D7D  20                 	db	32
   347  007D7E  20                 	db	32
   348  007D7F  20                 	db	32
   349  007D80  20                 	db	32
   350  007D81  00                 	db	0
   351  007D82                     STR_22:
   352  007D82  20                 	db	32
   353  007D83  25                 	db	37
   354  007D84  63                 	db	99	;'c'
   355  007D85  6B                 	db	107	;'k'
   356  007D86  67                 	db	103	;'g'
   357  007D87  20                 	db	32
   358  007D88  20                 	db	32
   359  007D89  25                 	db	37
   360  007D8A  63                 	db	99	;'c'
   361  007D8B  6D                 	db	109	;'m'
   362  007D8C  33                 	db	51	;'3'
   363  007D8D  20                 	db	32
   364  007D8E  20                 	db	32
   365  007D8F  25                 	db	37
   366  007D90  63                 	db	99	;'c'
   367  007D91  73                 	db	115	;'s'
   368  007D92  65                 	db	101	;'e'
   369  007D93  63                 	db	99	;'c'
   370  007D94  20                 	db	32
   371  007D95  00                 	db	0
   372  007D96                     STR_47:
   373  007D96  20                 	db	32
   374  007D97  20                 	db	32
   375  007D98  20                 	db	32
   376  007D99  25                 	db	37
   377  007D9A  63                 	db	99	;'c'
   378  007D9B  53                 	db	83	;'S'
   379  007D9C  49                 	db	73	;'I'
   380  007D9D  20                 	db	32
   381  007D9E  20                 	db	32
   382  007D9F  20                 	db	32
   383  007DA0  20                 	db	32
   384  007DA1  25                 	db	37
   385  007DA2  63                 	db	99	;'c'
   386  007DA3  4E                 	db	78	;'N'
   387  007DA4  4F                 	db	79	;'O'
   388  007DA5  20                 	db	32
   389  007DA6  20                 	db	32
   390  007DA7  20                 	db	32
   391  007DA8  00                 	db	0
   392  007DA9                     STR_37:
   393  007DA9  43                 	db	67	;'C'
   394  007DAA  6F                 	db	111	;'o'
   395  007DAB  6E                 	db	110	;'n'
   396  007DAC  74                 	db	116	;'t'
   397  007DAD  72                 	db	114	;'r'
   398  007DAE  61                 	db	97	;'a'
   399  007DAF  73                 	db	115	;'s'
   400  007DB0  65                 	db	101	;'e'
   401  007DB1  6E                 	db	110	;'n'
   402  007DB2  61                 	db	97	;'a'
   403  007DB3  20                 	db	32
   404  007DB4  20                 	db	32
   405  007DB5  20                 	db	32
   406  007DB6  20                 	db	32
   407  007DB7  20                 	db	32
   408  007DB8  20                 	db	32
   409  007DB9  0A                 	db	10
   410  007DBA  00                 	db	0
   411  007DBB                     STR_35:
   412  007DBB  43                 	db	67	;'C'
   413  007DBC  6F                 	db	111	;'o'
   414  007DBD  6E                 	db	110	;'n'
   415  007DBE  74                 	db	116	;'t'
   416  007DBF  72                 	db	114	;'r'
   417  007DC0  61                 	db	97	;'a'
   418  007DC1  73                 	db	115	;'s'
   419  007DC2  65                 	db	101	;'e'
   420  007DC3  6E                 	db	110	;'n'
   421  007DC4  61                 	db	97	;'a'
   422  007DC5  3A                 	db	58	;':'
   423  007DC6  20                 	db	32
   424  007DC7  20                 	db	32
   425  007DC8  20                 	db	32
   426  007DC9  20                 	db	32
   427  007DCA  20                 	db	32
   428  007DCB  0A                 	db	10
   429  007DCC  00                 	db	0
   430  007DCD                     STR_5:
   431  007DCD  50                 	db	80	;'P'
   432  007DCE  72                 	db	114	;'r'
   433  007DCF  6F                 	db	111	;'o'
   434  007DD0  63                 	db	99	;'c'
   435  007DD1  65                 	db	101	;'e'
   436  007DD2  73                 	db	115	;'s'
   437  007DD3  6F                 	db	111	;'o'
   438  007DD4  20                 	db	32
   439  007DD5  65                 	db	101	;'e'
   440  007DD6  6E                 	db	110	;'n'
   441  007DD7  3A                 	db	58	;':'
   442  007DD8  20                 	db	32
   443  007DD9  20                 	db	32
   444  007DDA  20                 	db	32
   445  007DDB  20                 	db	32
   446  007DDC  20                 	db	32
   447  007DDD  0A                 	db	10
   448  007DDE  00                 	db	0
   449  007DDF                     STR_17:
   450  007DDF  44                 	db	68	;'D'
   451  007DE0  65                 	db	101	;'e'
   452  007DE1  6E                 	db	110	;'n'
   453  007DE2  73                 	db	115	;'s'
   454  007DE3  69                 	db	105	;'i'
   455  007DE4  64                 	db	100	;'d'
   456  007DE5  61                 	db	97	;'a'
   457  007DE6  64                 	db	100	;'d'
   458  007DE7  20                 	db	32
   459  007DE8  4D                 	db	77	;'M'
   460  007DE9  61                 	db	97	;'a'
   461  007DEA  73                 	db	115	;'s'
   462  007DEB  61                 	db	97	;'a'
   463  007DEC  3A                 	db	58	;':'
   464  007DED  20                 	db	32
   465  007DEE  20                 	db	32
   466  007DEF  0A                 	db	10
   467  007DF0  00                 	db	0
   468  007DF1                     STR_15:
   469  007DF1  44                 	db	68	;'D'
   470  007DF2  69                 	db	105	;'i'
   471  007DF3  61                 	db	97	;'a'
   472  007DF4  6D                 	db	109	;'m'
   473  007DF5  65                 	db	101	;'e'
   474  007DF6  74                 	db	116	;'t'
   475  007DF7  72                 	db	114	;'r'
   476  007DF8  6F                 	db	111	;'o'
   477  007DF9  20                 	db	32
   478  007DFA  54                 	db	84	;'T'
   479  007DFB  75                 	db	117	;'u'
   480  007DFC  62                 	db	98	;'b'
   481  007DFD  6F                 	db	111	;'o'
   482  007DFE  3A                 	db	58	;':'
   483  007DFF  20                 	db	32
   484  007E00  20                 	db	32
   485  007E01  0A                 	db	10
   486  007E02  00                 	db	0
   487  007E03                     STR_19:
   488  007E03  56                 	db	86	;'V'
   489  007E04  65                 	db	101	;'e'
   490  007E05  6C                 	db	108	;'l'
   491  007E06  6F                 	db	111	;'o'
   492  007E07  63                 	db	99	;'c'
   493  007E08  69                 	db	105	;'i'
   494  007E09  64                 	db	100	;'d'
   495  007E0A  61                 	db	97	;'a'
   496  007E0B  64                 	db	100	;'d'
   497  007E0C  20                 	db	32
   498  007E0D  4D                 	db	77	;'M'
   499  007E0E  61                 	db	97	;'a'
   500  007E0F  73                 	db	115	;'s'
   501  007E10  61                 	db	97	;'a'
   502  007E11  3A                 	db	58	;':'
   503  007E12  20                 	db	32
   504  007E13  0A                 	db	10
   505  007E14  00                 	db	0
   506  007E15                     STR_2:
   507  007E15  45                 	db	69	;'E'
   508  007E16  73                 	db	115	;'s'
   509  007E17  74                 	db	116	;'t'
   510  007E18  61                 	db	97	;'a'
   511  007E19  64                 	db	100	;'d'
   512  007E1A  6F                 	db	111	;'o'
   513  007E1B  20                 	db	32
   514  007E1C  70                 	db	112	;'p'
   515  007E1D  72                 	db	114	;'r'
   516  007E1E  6F                 	db	111	;'o'
   517  007E1F  63                 	db	99	;'c'
   518  007E20  65                 	db	101	;'e'
   519  007E21  73                 	db	115	;'s'
   520  007E22  6F                 	db	111	;'o'
   521  007E23  3A                 	db	58	;':'
   522  007E24  20                 	db	32
   523  007E25  0A                 	db	10
   524  007E26  00                 	db	0
   525  007E27                     STR_46:
   526  007E27  49                 	db	73	;'I'
   527  007E28  6E                 	db	110	;'n'
   528  007E29  69                 	db	105	;'i'
   529  007E2A  74                 	db	116	;'t'
   530  007E2B  20                 	db	32
   531  007E2C  61                 	db	97	;'a'
   532  007E2D  75                 	db	117	;'u'
   533  007E2E  74                 	db	116	;'t'
   534  007E2F  6F                 	db	111	;'o'
   535  007E30  43                 	db	67	;'C'
   536  007E31  61                 	db	97	;'a'
   537  007E32  6C                 	db	108	;'l'
   538  007E33  69                 	db	105	;'i'
   539  007E34  62                 	db	98	;'b'
   540  007E35  3F                 	db	63	;'?'
   541  007E36  20                 	db	32
   542  007E37  0A                 	db	10
   543  007E38  00                 	db	0
   544  007E39                     STR_45:
   545  007E39  47                 	db	71	;'G'
   546  007E3A  75                 	db	117	;'u'
   547  007E3B  61                 	db	97	;'a'
   548  007E3C  72                 	db	114	;'r'
   549  007E3D  64                 	db	100	;'d'
   550  007E3E  61                 	db	97	;'a'
   551  007E3F  72                 	db	114	;'r'
   552  007E40  20                 	db	32
   553  007E41  43                 	db	67	;'C'
   554  007E42  61                 	db	97	;'a'
   555  007E43  6D                 	db	109	;'m'
   556  007E44  62                 	db	98	;'b'
   557  007E45  69                 	db	105	;'i'
   558  007E46  6F                 	db	111	;'o'
   559  007E47  3F                 	db	63	;'?'
   560  007E48  20                 	db	32
   561  007E49  0A                 	db	10
   562  007E4A  00                 	db	0
   563  007E4B                     STR_9:
   564  007E4B  56                 	db	86	;'V'
   565  007E4C  61                 	db	97	;'a'
   566  007E4D  6C                 	db	108	;'l'
   567  007E4E  6F                 	db	111	;'o'
   568  007E4F  72                 	db	114	;'r'
   569  007E50  20                 	db	32
   570  007E51  70                 	db	112	;'p'
   571  007E52  6F                 	db	111	;'o'
   572  007E53  72                 	db	114	;'r'
   573  007E54  20                 	db	32
   574  007E55  43                 	db	67	;'C'
   575  007E56  6F                 	db	111	;'o'
   576  007E57  72                 	db	114	;'r'
   577  007E58  74                 	db	116	;'t'
   578  007E59  65                 	db	101	;'e'
   579  007E5A  3A                 	db	58	;':'
   580  007E5B  0A                 	db	10
   581  007E5C  00                 	db	0
   582  007E5D                     STR_39:
   583  007E5D  4D                 	db	77	;'M'
   584  007E5E  6F                 	db	111	;'o'
   585  007E5F  64                 	db	100	;'d'
   586  007E60  6F                 	db	111	;'o'
   587  007E61  20                 	db	32
   588  007E62  43                 	db	67	;'C'
   589  007E63  6F                 	db	111	;'o'
   590  007E64  6E                 	db	110	;'n'
   591  007E65  66                 	db	102	;'f'
   592  007E66  69                 	db	105	;'i'
   593  007E67  67                 	db	103	;'g'
   594  007E68  75                 	db	117	;'u'
   595  007E69  72                 	db	114	;'r'
   596  007E6A  61                 	db	97	;'a'
   597  007E6B  72                 	db	114	;'r'
   598  007E6C  3A                 	db	58	;':'
   599  007E6D  0A                 	db	10
   600  007E6E  00                 	db	0
   601  007E6F                     STR_13:
   602  007E6F  43                 	db	67	;'C'
   603  007E70  61                 	db	97	;'a'
   604  007E71  6E                 	db	110	;'n'
   605  007E72  74                 	db	116	;'t'
   606  007E73  69                 	db	105	;'i'
   607  007E74  64                 	db	100	;'d'
   608  007E75  61                 	db	97	;'a'
   609  007E76  64                 	db	100	;'d'
   610  007E77  20                 	db	32
   611  007E78  43                 	db	67	;'C'
   612  007E79  6F                 	db	111	;'o'
   613  007E7A  72                 	db	114	;'r'
   614  007E7B  74                 	db	116	;'t'
   615  007E7C  65                 	db	101	;'e'
   616  007E7D  73                 	db	115	;'s'
   617  007E7E  3A                 	db	58	;':'
   618  007E7F  0A                 	db	10
   619  007E80  00                 	db	0
   620  007E81                     STR_43:
   621  007E81  49                 	db	73	;'I'
   622  007E82  6E                 	db	110	;'n'
   623  007E83  69                 	db	105	;'i'
   624  007E84  63                 	db	99	;'c'
   625  007E85  69                 	db	105	;'i'
   626  007E86  61                 	db	97	;'a'
   627  007E87  72                 	db	114	;'r'
   628  007E88  20                 	db	32
   629  007E89  50                 	db	80	;'P'
   630  007E8A  72                 	db	114	;'r'
   631  007E8B  6F                 	db	111	;'o'
   632  007E8C  63                 	db	99	;'c'
   633  007E8D  65                 	db	101	;'e'
   634  007E8E  73                 	db	115	;'s'
   635  007E8F  6F                 	db	111	;'o'
   636  007E90  3F                 	db	63	;'?'
   637  007E91  0A                 	db	10
   638  007E92  00                 	db	0
   639  007E93                     STR_44:
   640  007E93  44                 	db	68	;'D'
   641  007E94  65                 	db	101	;'e'
   642  007E95  74                 	db	116	;'t'
   643  007E96  65                 	db	101	;'e'
   644  007E97  6E                 	db	110	;'n'
   645  007E98  65                 	db	101	;'e'
   646  007E99  72                 	db	114	;'r'
   647  007E9A  20                 	db	32
   648  007E9B  50                 	db	80	;'P'
   649  007E9C  72                 	db	114	;'r'
   650  007E9D  6F                 	db	111	;'o'
   651  007E9E  63                 	db	99	;'c'
   652  007E9F  65                 	db	101	;'e'
   653  007EA0  73                 	db	115	;'s'
   654  007EA1  6F                 	db	111	;'o'
   655  007EA2  3F                 	db	63	;'?'
   656  007EA3  0A                 	db	10
   657  007EA4  00                 	db	0
   658  007EA5                     STR_48:
   659  007EA5  41                 	db	65	;'A'
   660  007EA6  75                 	db	117	;'u'
   661  007EA7  74                 	db	116	;'t'
   662  007EA8  6F                 	db	111	;'o'
   663  007EA9  63                 	db	99	;'c'
   664  007EAA  61                 	db	97	;'a'
   665  007EAB  6C                 	db	108	;'l'
   666  007EAC  69                 	db	105	;'i'
   667  007EAD  62                 	db	98	;'b'
   668  007EAE  20                 	db	32
   669  007EAF  75                 	db	117	;'u'
   670  007EB0  73                 	db	115	;'s'
   671  007EB1  61                 	db	97	;'a'
   672  007EB2  6E                 	db	110	;'n'
   673  007EB3  64                 	db	100	;'d'
   674  007EB4  6F                 	db	111	;'o'
   675  007EB5  0A                 	db	10
   676  007EB6  00                 	db	0
   677  007EB7                     STR_6:
   678  007EB7  20                 	db	32
   679  007EB8  20                 	db	32
   680  007EB9  20                 	db	32
   681  007EBA  20                 	db	32
   682  007EBB  20                 	db	32
   683  007EBC  20                 	db	32
   684  007EBD  20                 	db	32
   685  007EBE  6B                 	db	107	;'k'
   686  007EBF  67                 	db	103	;'g'
   687  007EC0  20                 	db	32
   688  007EC1  20                 	db	32
   689  007EC2  20                 	db	32
   690  007EC3  20                 	db	32
   691  007EC4  20                 	db	32
   692  007EC5  20                 	db	32
   693  007EC6  20                 	db	32
   694  007EC7  20                 	db	32
   695  007EC8  00                 	db	0
   696  007EC9                     STR_50:
   697  007EC9  50                 	db	80	;'P'
   698  007ECA  65                 	db	101	;'e'
   699  007ECB  73                 	db	115	;'s'
   700  007ECC  6F                 	db	111	;'o'
   701  007ECD  20                 	db	32
   702  007ECE  52                 	db	82	;'R'
   703  007ECF  65                 	db	101	;'e'
   704  007ED0  61                 	db	97	;'a'
   705  007ED1  6C                 	db	108	;'l'
   706  007ED2  3A                 	db	58	;':'
   707  007ED3  20                 	db	32
   708  007ED4  20                 	db	32
   709  007ED5  20                 	db	32
   710  007ED6  20                 	db	32
   711  007ED7  20                 	db	32
   712  007ED8  0A                 	db	10
   713  007ED9  00                 	db	0
   714  007EDA                     STR_7:
   715  007EDA  20                 	db	32
   716  007EDB  20                 	db	32
   717  007EDC  20                 	db	32
   718  007EDD  20                 	db	32
   719  007EDE  20                 	db	32
   720  007EDF  20                 	db	32
   721  007EE0  20                 	db	32
   722  007EE1  6D                 	db	109	;'m'
   723  007EE2  33                 	db	51	;'3'
   724  007EE3  20                 	db	32
   725  007EE4  20                 	db	32
   726  007EE5  20                 	db	32
   727  007EE6  20                 	db	32
   728  007EE7  20                 	db	32
   729  007EE8  20                 	db	32
   730  007EE9  20                 	db	32
   731  007EEA  00                 	db	0
   732  007EEB                     STR_8:
   733  007EEB  20                 	db	32
   734  007EEC  20                 	db	32
   735  007EED  20                 	db	32
   736  007EEE  20                 	db	32
   737  007EEF  20                 	db	32
   738  007EF0  20                 	db	32
   739  007EF1  73                 	db	115	;'s'
   740  007EF2  65                 	db	101	;'e'
   741  007EF3  63                 	db	99	;'c'
   742  007EF4  20                 	db	32
   743  007EF5  20                 	db	32
   744  007EF6  20                 	db	32
   745  007EF7  20                 	db	32
   746  007EF8  20                 	db	32
   747  007EF9  20                 	db	32
   748  007EFA  20                 	db	32
   749  007EFB  00                 	db	0
   750  007EFC                     STR_38:
   751  007EFC  20                 	db	32
   752  007EFD  20                 	db	32
   753  007EFE  20                 	db	32
   754  007EFF  20                 	db	32
   755  007F00  20                 	db	32
   756  007F01  45                 	db	69	;'E'
   757  007F02  72                 	db	114	;'r'
   758  007F03  72                 	db	114	;'r'
   759  007F04  6F                 	db	111	;'o'
   760  007F05  6E                 	db	110	;'n'
   761  007F06  65                 	db	101	;'e'
   762  007F07  61                 	db	97	;'a'
   763  007F08  20                 	db	32
   764  007F09  20                 	db	32
   765  007F0A  20                 	db	32
   766  007F0B  20                 	db	32
   767  007F0C  00                 	db	0
   768  007F0D                     STR_40:
   769  007F0D  20                 	db	32
   770  007F0E  20                 	db	32
   771  007F0F  20                 	db	32
   772  007F10  20                 	db	32
   773  007F11  49                 	db	73	;'I'
   774  007F12  6E                 	db	110	;'n'
   775  007F13  69                 	db	105	;'i'
   776  007F14  63                 	db	99	;'c'
   777  007F15  69                 	db	105	;'i'
   778  007F16  61                 	db	97	;'a'
   779  007F17  64                 	db	100	;'d'
   780  007F18  6F                 	db	111	;'o'
   781  007F19  20                 	db	32
   782  007F1A  20                 	db	32
   783  007F1B  20                 	db	32
   784  007F1C  20                 	db	32
   785  007F1D  00                 	db	0
   786  007F1E                     STR_4:
   787  007F1E  20                 	db	32
   788  007F1F  20                 	db	32
   789  007F20  20                 	db	32
   790  007F21  20                 	db	32
   791  007F22  44                 	db	68	;'D'
   792  007F23  65                 	db	101	;'e'
   793  007F24  74                 	db	116	;'t'
   794  007F25  65                 	db	101	;'e'
   795  007F26  6E                 	db	110	;'n'
   796  007F27  69                 	db	105	;'i'
   797  007F28  64                 	db	100	;'d'
   798  007F29  6F                 	db	111	;'o'
   799  007F2A  20                 	db	32
   800  007F2B  20                 	db	32
   801  007F2C  20                 	db	32
   802  007F2D  20                 	db	32
   803  007F2E  00                 	db	0
   804  007F2F                     STR_42:
   805  007F2F  20                 	db	32
   806  007F30  20                 	db	32
   807  007F31  20                 	db	32
   808  007F32  46                 	db	70	;'F'
   809  007F33  69                 	db	105	;'i'
   810  007F34  6E                 	db	110	;'n'
   811  007F35  61                 	db	97	;'a'
   812  007F36  6C                 	db	108	;'l'
   813  007F37  69                 	db	105	;'i'
   814  007F38  7A                 	db	122	;'z'
   815  007F39  61                 	db	97	;'a'
   816  007F3A  64                 	db	100	;'d'
   817  007F3B  6F                 	db	111	;'o'
   818  007F3C  20                 	db	32
   819  007F3D  20                 	db	32
   820  007F3E  20                 	db	32
   821  007F3F  00                 	db	0
   822  007F40                     STR_1:
   823  007F40  20                 	db	32
   824  007F41  20                 	db	32
   825  007F42  25                 	db	37
   826  007F43  75                 	db	117	;'u'
   827  007F44  25                 	db	37
   828  007F45  75                 	db	117	;'u'
   829  007F46  25                 	db	37
   830  007F47  75                 	db	117	;'u'
   831  007F48  2E                 	db	46
   832  007F49  25                 	db	37
   833  007F4A  75                 	db	117	;'u'
   834  007F4B  25                 	db	37
   835  007F4C  75                 	db	117	;'u'
   836  007F4D  25                 	db	37
   837  007F4E  75                 	db	117	;'u'
   838  007F4F  20                 	db	32
   839  007F50  00                 	db	0
   840  007F51                     STR_49:
   841  007F51  31                 	db	49	;'1'
   842  007F52  20                 	db	32
   843  007F53  6B                 	db	107	;'k'
   844  007F54  67                 	db	103	;'g'
   845  007F55  20                 	db	32
   846  007F56  40                 	db	64	;'@'
   847  007F57  20                 	db	32
   848  007F58  31                 	db	49	;'1'
   849  007F59  30                 	db	48	;'0'
   850  007F5A  20                 	db	32
   851  007F5B  63                 	db	99	;'c'
   852  007F5C  6F                 	db	111	;'o'
   853  007F5D  72                 	db	114	;'r'
   854  007F5E  74                 	db	116	;'t'
   855  007F5F  65                 	db	101	;'e'
   856  007F60  73                 	db	115	;'s'
   857  007F61  00                 	db	0
   858  007F62                     STR_14:
   859  007F62  20                 	db	32
   860  007F63  20                 	db	32
   861  007F64  20                 	db	32
   862  007F65  20                 	db	32
   863  007F66  20                 	db	32
   864  007F67  20                 	db	32
   865  007F68  25                 	db	37
   866  007F69  64                 	db	100	;'d'
   867  007F6A  20                 	db	32
   868  007F6B  20                 	db	32
   869  007F6C  20                 	db	32
   870  007F6D  20                 	db	32
   871  007F6E  20                 	db	32
   872  007F6F  20                 	db	32
   873  007F70  20                 	db	32
   874  007F71  00                 	db	0
   875  007F72                     STR_3:
   876  007F72  20                 	db	32
   877  007F73  20                 	db	32
   878  007F74  20                 	db	32
   879  007F75  25                 	db	37
   880  007F76  64                 	db	100	;'d'
   881  007F77  20                 	db	32
   882  007F78  2F                 	db	47
   883  007F79  20                 	db	32
   884  007F7A  25                 	db	37
   885  007F7B  64                 	db	100	;'d'
   886  007F7C  20                 	db	32
   887  007F7D  20                 	db	32
   888  007F7E  20                 	db	32
   889  007F7F  20                 	db	32
   890  007F80  00                 	db	0
   891  007F81                     STR_11:
   892  007F81  20                 	db	32
   893  007F82  20                 	db	32
   894  007F83  20                 	db	32
   895  007F84  25                 	db	37
   896  007F85  33                 	db	51	;'3'
   897  007F86  2E                 	db	46
   898  007F87  33                 	db	51	;'3'
   899  007F88  66                 	db	102	;'f'
   900  007F89  20                 	db	32
   901  007F8A  6D                 	db	109	;'m'
   902  007F8B  33                 	db	51	;'3'
   903  007F8C  20                 	db	32
   904  007F8D  20                 	db	32
   905  007F8E  20                 	db	32
   906  007F8F  00                 	db	0
   907  007F90                     STR_10:
   908  007F90  20                 	db	32
   909  007F91  20                 	db	32
   910  007F92  20                 	db	32
   911  007F93  25                 	db	37
   912  007F94  33                 	db	51	;'3'
   913  007F95  2E                 	db	46
   914  007F96  33                 	db	51	;'3'
   915  007F97  66                 	db	102	;'f'
   916  007F98  20                 	db	32
   917  007F99  6B                 	db	107	;'k'
   918  007F9A  67                 	db	103	;'g'
   919  007F9B  20                 	db	32
   920  007F9C  20                 	db	32
   921  007F9D  20                 	db	32
   922  007F9E  00                 	db	0
   923  007F9F                     STR_16:
   924  007F9F  20                 	db	32
   925  007FA0  20                 	db	32
   926  007FA1  20                 	db	32
   927  007FA2  25                 	db	37
   928  007FA3  33                 	db	51	;'3'
   929  007FA4  2E                 	db	46
   930  007FA5  33                 	db	51	;'3'
   931  007FA6  66                 	db	102	;'f'
   932  007FA7  20                 	db	32
   933  007FA8  6D                 	db	109	;'m'
   934  007FA9  6D                 	db	109	;'m'
   935  007FAA  20                 	db	32
   936  007FAB  20                 	db	32
   937  007FAC  20                 	db	32
   938  007FAD  00                 	db	0
   939  007FAE                     STR_12:
   940  007FAE  20                 	db	32
   941  007FAF  20                 	db	32
   942  007FB0  20                 	db	32
   943  007FB1  25                 	db	37
   944  007FB2  33                 	db	51	;'3'
   945  007FB3  2E                 	db	46
   946  007FB4  33                 	db	51	;'3'
   947  007FB5  66                 	db	102	;'f'
   948  007FB6  20                 	db	32
   949  007FB7  73                 	db	115	;'s'
   950  007FB8  65                 	db	101	;'e'
   951  007FB9  63                 	db	99	;'c'
   952  007FBA  20                 	db	32
   953  007FBB  20                 	db	32
   954  007FBC  00                 	db	0
   955  007FBD                     STR_20:
   956  007FBD  20                 	db	32
   957  007FBE  20                 	db	32
   958  007FBF  20                 	db	32
   959  007FC0  25                 	db	37
   960  007FC1  33                 	db	51	;'3'
   961  007FC2  2E                 	db	46
   962  007FC3  33                 	db	51	;'3'
   963  007FC4  66                 	db	102	;'f'
   964  007FC5  20                 	db	32
   965  007FC6  6D                 	db	109	;'m'
   966  007FC7  2F                 	db	47
   967  007FC8  73                 	db	115	;'s'
   968  007FC9  20                 	db	32
   969  007FCA  20                 	db	32
   970  007FCB  00                 	db	0
   971  007FCC                     STR_18:
   972  007FCC  20                 	db	32
   973  007FCD  20                 	db	32
   974  007FCE  25                 	db	37
   975  007FCF  33                 	db	51	;'3'
   976  007FD0  2E                 	db	46
   977  007FD1  33                 	db	51	;'3'
   978  007FD2  66                 	db	102	;'f'
   979  007FD3  20                 	db	32
   980  007FD4  6B                 	db	107	;'k'
   981  007FD5  67                 	db	103	;'g'
   982  007FD6  2F                 	db	47
   983  007FD7  6D                 	db	109	;'m'
   984  007FD8  33                 	db	51	;'3'
   985  007FD9  20                 	db	32
   986  007FDA  00                 	db	0
   987  007FDB                     STR_25:
   988  007FDB  6D                 	db	109	;'m'
   989  007FDC  33                 	db	51	;'3'
   990  007FDD  20                 	db	32
   991  007FDE  20                 	db	32
   992  007FDF  20                 	db	32
   993  007FE0  20                 	db	32
   994  007FE1  00                 	db	0
   995  007FE2                     STR_24:
   996  007FE2  6B                 	db	107	;'k'
   997  007FE3  67                 	db	103	;'g'
   998  007FE4  20                 	db	32
   999  007FE5  20                 	db	32
  1000  007FE6  20                 	db	32
  1001  007FE7  20                 	db	32
  1002  007FE8  00                 	db	0
  1003  007FE9                     STR_30:
  1004  007FE9  6D                 	db	109	;'m'
  1005  007FEA  6D                 	db	109	;'m'
  1006  007FEB  20                 	db	32
  1007  007FEC  20                 	db	32
  1008  007FED  20                 	db	32
  1009  007FEE  20                 	db	32
  1010  007FEF  00                 	db	0
  1011  007FF0                     STR_26:
  1012  007FF0  73                 	db	115	;'s'
  1013  007FF1  65                 	db	101	;'e'
  1014  007FF2  63                 	db	99	;'c'
  1015  007FF3  20                 	db	32
  1016  007FF4  20                 	db	32
  1017  007FF5  20                 	db	32
  1018  007FF6  00                 	db	0
  1019  007FF7                     STR_34:
  1020  007FF7  6D                 	db	109	;'m'
  1021  007FF8  2F                 	db	47
  1022  007FF9  73                 	db	115	;'s'
  1023  007FFA  20                 	db	32
  1024  007FFB  20                 	db	32
  1025  007FFC  20                 	db	32
  1026  007FFD  00                 	db	0
  1027  0000                     
  1028                           ; #config settings
  1029  007FFE  00                 	db	0	; dummy byte at the end
  1030  0000                     
  1031                           	psect	cinit
  1032  0053A0                     __pcinit:
  1033                           	opt stack 0
  1034  0053A0                     start_initialization:
  1035                           	opt stack 0
  1036  0053A0                     __initialization:
  1037                           	opt stack 0
  1038                           
  1039                           ; Initialize objects allocated to BANK1 (38 bytes)
  1040                           ; load TBLPTR registers with __pidataBANK1
  1041  0053A0  0E08               	movlw	low __pidataBANK1
  1042  0053A2  6EF6               	movwf	tblptrl,c
  1043  0053A4  0E5E               	movlw	high __pidataBANK1
  1044  0053A6  6EF7               	movwf	tblptrh,c
  1045  0053A8  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1046  0053AA  6EF8               	movwf	tblptru,c
  1047  0053AC  EE01  F05D         	lfsr	0,__pdataBANK1
  1048  0053B0  EE10 F026          	lfsr	1,38
  1049  0053B4                     copy_data0:
  1050  0053B4  0009               	tblrd		*+
  1051  0053B6  CFF5 FFEE          	movff	tablat,postinc0
  1052  0053BA  50E5               	movf	postdec1,w,c
  1053  0053BC  50E1               	movf	fsr1l,w,c
  1054  0053BE  E1FA               	bnz	copy_data0
  1055                           
  1056                           ; Initialize objects allocated to BANK0 (9 bytes)
  1057                           ; load TBLPTR registers with __pidataBANK0
  1058  0053C0  0E0E               	movlw	low __pidataBANK0
  1059  0053C2  6EF6               	movwf	tblptrl,c
  1060  0053C4  0E5F               	movlw	high __pidataBANK0
  1061  0053C6  6EF7               	movwf	tblptrh,c
  1062  0053C8  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1063  0053CA  6EF8               	movwf	tblptru,c
  1064  0053CC  EE00  F0DB         	lfsr	0,__pdataBANK0
  1065  0053D0  EE10 F009          	lfsr	1,9
  1066  0053D4                     copy_data1:
  1067  0053D4  0009               	tblrd		*+
  1068  0053D6  CFF5 FFEE          	movff	tablat,postinc0
  1069  0053DA  50E5               	movf	postdec1,w,c
  1070  0053DC  50E1               	movf	fsr1l,w,c
  1071  0053DE  E1FA               	bnz	copy_data1
  1072                           
  1073                           ; Initialize objects allocated to COMRAM (23 bytes)
  1074                           ; load TBLPTR registers with __pidataCOMRAM
  1075  0053E0  0E84               	movlw	low __pidataCOMRAM
  1076  0053E2  6EF6               	movwf	tblptrl,c
  1077  0053E4  0E5E               	movlw	high __pidataCOMRAM
  1078  0053E6  6EF7               	movwf	tblptrh,c
  1079  0053E8  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1080  0053EA  6EF8               	movwf	tblptru,c
  1081  0053EC  EE00  F02F         	lfsr	0,__pdataCOMRAM
  1082  0053F0  EE10 F017          	lfsr	1,23
  1083  0053F4                     copy_data2:
  1084  0053F4  0009               	tblrd		*+
  1085  0053F6  CFF5 FFEE          	movff	tablat,postinc0
  1086  0053FA  50E5               	movf	postdec1,w,c
  1087  0053FC  50E1               	movf	fsr1l,w,c
  1088  0053FE  E1FA               	bnz	copy_data2
  1089                           
  1090                           ; Clear objects allocated to BANK1 (44 bytes)
  1091  005400  EE01  F031         	lfsr	0,__pbssBANK1
  1092  005404  0E2C               	movlw	44
  1093  005406                     clear_0:
  1094  005406  6AEE               	clrf	postinc0,c
  1095  005408  06E8               	decf	wreg,f,c
  1096  00540A  E1FD               	bnz	clear_0
  1097                           
  1098                           ; Clear objects allocated to BANK0 (15 bytes)
  1099  00540C  EE00  F0CC         	lfsr	0,__pbssBANK0
  1100  005410  0E0F               	movlw	15
  1101  005412                     clear_1:
  1102  005412  6AEE               	clrf	postinc0,c
  1103  005414  06E8               	decf	wreg,f,c
  1104  005416  E1FD               	bnz	clear_1
  1105                           
  1106                           ; Clear objects allocated to COMRAM (4 bytes)
  1107  005418  6A49               	clrf	(__pbssCOMRAM+3)& (0+255),c
  1108  00541A  6A48               	clrf	(__pbssCOMRAM+2)& (0+255),c
  1109  00541C  6A47               	clrf	(__pbssCOMRAM+1)& (0+255),c
  1110  00541E  6A46               	clrf	__pbssCOMRAM& (0+255),c
  1111  005420                     end_of_initialization:
  1112                           	opt stack 0
  1113  005420                     __end_of__initialization:
  1114                           	opt stack 0
  1115  005420  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
  1116  005422  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
  1117  005424  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1118  005426  6EF8               	movwf	tblptru,c
  1119  005428  0100               	movlb	0
  1120  00542A  EFB0  F02E         	goto	_main	;jump to C main() function
  1121                           tblptru	equ	0xFF8
  1122                           tblptrh	equ	0xFF7
  1123                           tblptrl	equ	0xFF6
  1124                           tablat	equ	0xFF5
  1125                           postinc0	equ	0xFEE
  1126                           wreg	equ	0xFE8
  1127                           postdec1	equ	0xFE5
  1128                           fsr1l	equ	0xFE1
  1129                           
  1130                           	psect	bssCOMRAM
  1131  000046                     __pbssCOMRAM:
  1132                           	opt stack 0
  1133  000046                     _chanValf:
  1134                           	opt stack 0
  1135  000046                     	ds	4
  1136                           tblptru	equ	0xFF8
  1137                           tblptrh	equ	0xFF7
  1138                           tblptrl	equ	0xFF6
  1139                           tablat	equ	0xFF5
  1140                           postinc0	equ	0xFEE
  1141                           wreg	equ	0xFE8
  1142                           postdec1	equ	0xFE5
  1143                           fsr1l	equ	0xFE1
  1144                           
  1145                           	psect	dataCOMRAM
  1146  00002F                     __pdataCOMRAM:
  1147                           	opt stack 0
  1148  00002F                     _densidadMasa:
  1149                           	opt stack 0
  1150  00002F                     	ds	4
  1151  000033                     _diamTubo:
  1152                           	opt stack 0
  1153  000033                     	ds	4
  1154  000037                     _m3Xcorte:
  1155                           	opt stack 0
  1156  000037                     	ds	4
  1157  00003B                     _tiXcorte:
  1158                           	opt stack 0
  1159  00003B                     	ds	4
  1160  00003F                     _velocidadMasa:
  1161                           	opt stack 0
  1162  00003F                     	ds	4
  1163  000043                     _lastSttDOWN:
  1164                           	opt stack 0
  1165  000043                     	ds	1
  1166  000044                     _lastSttENTER:
  1167                           	opt stack 0
  1168  000044                     	ds	1
  1169  000045                     _lastSttRETRO:
  1170                           	opt stack 0
  1171  000045                     	ds	1
  1172                           tblptru	equ	0xFF8
  1173                           tblptrh	equ	0xFF7
  1174                           tblptrl	equ	0xFF6
  1175                           tablat	equ	0xFF5
  1176                           postinc0	equ	0xFEE
  1177                           wreg	equ	0xFE8
  1178                           postdec1	equ	0xFE5
  1179                           fsr1l	equ	0xFE1
  1180                           
  1181                           	psect	bssBANK0
  1182  0000CC                     __pbssBANK0:
  1183                           	opt stack 0
  1184  0000CC                     _fData:
  1185                           	opt stack 0
  1186  0000CC                     	ds	4
  1187  0000D0                     _i16Data:
  1188                           	opt stack 0
  1189  0000D0                     	ds	2
  1190  0000D2                     _ProcessStarted:
  1191                           	opt stack 0
  1192  0000D2                     	ds	1
  1193  0000D3                     _actualScreen:
  1194                           	opt stack 0
  1195  0000D3                     	ds	1
  1196  0000D4                     _holdENTERcont:
  1197                           	opt stack 0
  1198  0000D4                     	ds	1
  1199  0000D5                     _holdUPcont:
  1200                           	opt stack 0
  1201  0000D5                     	ds	1
  1202  0000D6                     _menuSection:
  1203                           	opt stack 0
  1204  0000D6                     	ds	1
  1205  0000D7                     _passSection:
  1206                           	opt stack 0
  1207  0000D7                     	ds	1
  1208  0000D8                     _selKMT:
  1209                           	opt stack 0
  1210  0000D8                     	ds	1
  1211  0000D9                     _selSN:
  1212                           	opt stack 0
  1213  0000D9                     	ds	1
  1214  0000DA                     _tempLastScreen:
  1215                           	opt stack 0
  1216  0000DA                     	ds	1
  1217                           tblptru	equ	0xFF8
  1218                           tblptrh	equ	0xFF7
  1219                           tblptrl	equ	0xFF6
  1220                           tablat	equ	0xFF5
  1221                           postinc0	equ	0xFEE
  1222                           wreg	equ	0xFE8
  1223                           postdec1	equ	0xFE5
  1224                           fsr1l	equ	0xFE1
  1225                           
  1226                           	psect	dataBANK0
  1227  0000DB                     __pdataBANK0:
  1228                           	opt stack 0
  1229  0000DB                     _kgXcorte:
  1230                           	opt stack 0
  1231  0000DB                     	ds	4
  1232  0000DF                     _numCortes:
  1233                           	opt stack 0
  1234  0000DF                     	ds	2
  1235  0000E1                     _chanValSection:
  1236                           	opt stack 0
  1237  0000E1                     	ds	1
  1238  0000E2                     _lastSttUP:
  1239                           	opt stack 0
  1240  0000E2                     	ds	1
  1241  0000E3                     _tVarProceso:
  1242                           	opt stack 0
  1243  0000E3                     	ds	1
  1244                           tblptru	equ	0xFF8
  1245                           tblptrh	equ	0xFF7
  1246                           tblptrl	equ	0xFF6
  1247                           tablat	equ	0xFF5
  1248                           postinc0	equ	0xFEE
  1249                           wreg	equ	0xFE8
  1250                           postdec1	equ	0xFE5
  1251                           fsr1l	equ	0xFE1
  1252                           
  1253                           	psect	bssBANK1
  1254  000131                     __pbssBANK1:
  1255                           	opt stack 0
  1256  000131                     _chanValdig:
  1257                           	opt stack 0
  1258  000131                     	ds	6
  1259  000137                     _calFactor:
  1260                           	opt stack 0
  1261  000137                     	ds	4
  1262  00013B                     _contra:
  1263                           	opt stack 0
  1264  00013B                     	ds	4
  1265  00013F                     _introducido:
  1266                           	opt stack 0
  1267  00013F                     	ds	4
  1268  000143                     _passChar:
  1269                           	opt stack 0
  1270  000143                     	ds	4
  1271  000147                     _questKMT:
  1272                           	opt stack 0
  1273  000147                     	ds	3
  1274  00014A                     _chanVals:
  1275                           	opt stack 0
  1276  00014A                     	ds	2
  1277  00014C                     _proceso:
  1278                           	opt stack 0
  1279  00014C                     	ds	2
  1280  00014E                     _questSN:
  1281                           	opt stack 0
  1282  00014E                     	ds	2
  1283  000150                     _DOWNisLP:
  1284                           	opt stack 0
  1285  000150                     	ds	1
  1286  000151                     _DOWNsecurLock:
  1287                           	opt stack 0
  1288  000151                     	ds	1
  1289  000152                     _ENTERisLP:
  1290                           	opt stack 0
  1291  000152                     	ds	1
  1292  000153                     _ENTERsecurLock:
  1293                           	opt stack 0
  1294  000153                     	ds	1
  1295  000154                     _RETROisLP:
  1296                           	opt stack 0
  1297  000154                     	ds	1
  1298  000155                     _RETROsecurLock:
  1299                           	opt stack 0
  1300  000155                     	ds	1
  1301  000156                     _UPisLP:
  1302                           	opt stack 0
  1303  000156                     	ds	1
  1304  000157                     _UPsecurLock:
  1305                           	opt stack 0
  1306  000157                     	ds	1
  1307  000158                     _fd:
  1308                           	opt stack 0
  1309  000158                     	ds	1
  1310  000159                     _holdDOWNcont:
  1311                           	opt stack 0
  1312  000159                     	ds	1
  1313  00015A                     _holdRETROcont:
  1314                           	opt stack 0
  1315  00015A                     	ds	1
  1316  00015B                     _ie:
  1317                           	opt stack 0
  1318  00015B                     	ds	1
  1319  00015C                     _screen_calibVelRes:
  1320                           	opt stack 0
  1321  00015C                     	ds	1
  1322                           tblptru	equ	0xFF8
  1323                           tblptrh	equ	0xFF7
  1324                           tblptrl	equ	0xFF6
  1325                           tablat	equ	0xFF5
  1326                           postinc0	equ	0xFEE
  1327                           wreg	equ	0xFE8
  1328                           postdec1	equ	0xFE5
  1329                           fsr1l	equ	0xFE1
  1330                           
  1331                           	psect	dataBANK1
  1332  00015D                     __pdataBANK1:
  1333                           	opt stack 0
  1334  00015D                     _exp10:
  1335                           	opt stack 0
  1336  00015D                     	ds	24
  1337  000175                     _pi:
  1338                           	opt stack 0
  1339  000175                     	ds	4
  1340  000179                     _tempkgXcorte:
  1341                           	opt stack 0
  1342  000179                     	ds	4
  1343  00017D                     lcd_init@F7567:
  1344                           	opt stack 0
  1345  00017D                     	ds	4
  1346  000181                     _tempNumCortes:
  1347                           	opt stack 0
  1348  000181                     	ds	2
  1349                           tblptru	equ	0xFF8
  1350                           tblptrh	equ	0xFF7
  1351                           tblptrl	equ	0xFF6
  1352                           tablat	equ	0xFF5
  1353                           postinc0	equ	0xFEE
  1354                           wreg	equ	0xFE8
  1355                           postdec1	equ	0xFE5
  1356                           fsr1l	equ	0xFE1
  1357                           
  1358                           	psect	cstackBANK1
  1359  000100                     __pcstackBANK1:
  1360                           	opt stack 0
  1361  000100                     ?_printf:
  1362                           	opt stack 0
  1363  000100                     printf@f:
  1364                           	opt stack 0
  1365                           
  1366                           ; 2 bytes @ 0x0
  1367  000100                     	ds	18
  1368  000112                     _printf$2892:
  1369                           	opt stack 0
  1370                           
  1371                           ; 4 bytes @ 0x12
  1372  000112                     	ds	4
  1373  000116                     printf@cp:
  1374                           	opt stack 0
  1375                           
  1376                           ; 2 bytes @ 0x16
  1377  000116                     	ds	2
  1378  000118                     printf@len:
  1379                           	opt stack 0
  1380                           
  1381                           ; 2 bytes @ 0x18
  1382  000118                     	ds	2
  1383  00011A                     printf@ap:
  1384                           	opt stack 0
  1385                           
  1386                           ; 2 bytes @ 0x1A
  1387  00011A                     	ds	2
  1388  00011C                     printf@flag:
  1389                           	opt stack 0
  1390                           
  1391                           ; 2 bytes @ 0x1C
  1392  00011C                     	ds	2
  1393  00011E                     printf@tmpval:
  1394                           	opt stack 0
  1395                           
  1396                           ; 4 bytes @ 0x1E
  1397  00011E                     	ds	4
  1398  000122                     printf@val:
  1399                           	opt stack 0
  1400                           
  1401                           ; 4 bytes @ 0x22
  1402  000122                     	ds	4
  1403  000126                     printf@exp:
  1404                           	opt stack 0
  1405                           
  1406                           ; 2 bytes @ 0x26
  1407  000126                     	ds	2
  1408  000128                     printf@width:
  1409                           	opt stack 0
  1410                           
  1411                           ; 2 bytes @ 0x28
  1412  000128                     	ds	2
  1413  00012A                     printf@fval:
  1414                           	opt stack 0
  1415                           
  1416                           ; 4 bytes @ 0x2A
  1417  00012A                     	ds	4
  1418  00012E                     printf@prec:
  1419                           	opt stack 0
  1420                           
  1421                           ; 2 bytes @ 0x2E
  1422  00012E                     	ds	2
  1423  000130                     printf@c:
  1424                           	opt stack 0
  1425                           
  1426                           ; 1 bytes @ 0x30
  1427  000130                     	ds	1
  1428                           tblptru	equ	0xFF8
  1429                           tblptrh	equ	0xFF7
  1430                           tblptrl	equ	0xFF6
  1431                           tablat	equ	0xFF5
  1432                           postinc0	equ	0xFEE
  1433                           wreg	equ	0xFE8
  1434                           postdec1	equ	0xFE5
  1435                           fsr1l	equ	0xFE1
  1436                           
  1437                           	psect	cstackBANK0
  1438  000060                     __pcstackBANK0:
  1439                           	opt stack 0
  1440  000060                     calcSysVars@temp:
  1441                           	opt stack 0
  1442  000060                     i1calcVars2ti@temp:
  1443                           	opt stack 0
  1444                           
  1445                           ; 4 bytes @ 0x0
  1446  000060                     	ds	4
  1447  000064                     ??_isr:
  1448                           
  1449                           ; 1 bytes @ 0x4
  1450  000064                     	ds	17
  1451  000075                     ??_isdigit:
  1452  000075                     ??_lcd_read_4bits:
  1453  000075                     ??_checkPass:
  1454  000075                     ??_chanValDigUP:
  1455  000075                     ??_chanValDigDOWN:
  1456  000075                     ?___wmul:
  1457                           	opt stack 0
  1458  000075                     ?___awmod:
  1459                           	opt stack 0
  1460  000075                     ?__tdiv_to_l_:
  1461                           	opt stack 0
  1462  000075                     ?__div_to_l_:
  1463                           	opt stack 0
  1464  000075                     ?___lmul:
  1465                           	opt stack 0
  1466  000075                     ?___aldiv:
  1467                           	opt stack 0
  1468  000075                     ?___flneg:
  1469                           	opt stack 0
  1470  000075                     ?___lldiv:
  1471                           	opt stack 0
  1472  000075                     ?___xxtofl:
  1473                           	opt stack 0
  1474  000075                     _lcd_send_4bits$1602:
  1475                           	opt stack 0
  1476  000075                     writeEEPROM@data:
  1477                           	opt stack 0
  1478  000075                     delay_ms@del:
  1479                           	opt stack 0
  1480  000075                     setPWM2duty@actuator:
  1481                           	opt stack 0
  1482  000075                     ___wmul@multiplier:
  1483                           	opt stack 0
  1484  000075                     ___awmod@dividend:
  1485                           	opt stack 0
  1486  000075                     ___lmul@multiplier:
  1487                           	opt stack 0
  1488  000075                     ___aldiv@dividend:
  1489                           	opt stack 0
  1490  000075                     __div_to_l_@f1:
  1491                           	opt stack 0
  1492  000075                     ___flge@ff1:
  1493                           	opt stack 0
  1494  000075                     ___flneg@f1:
  1495                           	opt stack 0
  1496  000075                     __tdiv_to_l_@f1:
  1497                           	opt stack 0
  1498  000075                     ___lldiv@dividend:
  1499                           	opt stack 0
  1500  000075                     ___xxtofl@val:
  1501                           	opt stack 0
  1502                           
  1503                           ; 4 bytes @ 0x15
  1504  000075                     	ds	1
  1505  000076                     lcd_read_4bits@n:
  1506                           	opt stack 0
  1507  000076                     _lcd_send_4bits$1603:
  1508                           	opt stack 0
  1509  000076                     writeEEPROM@adr:
  1510                           	opt stack 0
  1511  000076                     _isdigit$2391:
  1512                           	opt stack 0
  1513                           
  1514                           ; 1 bytes @ 0x16
  1515  000076                     	ds	1
  1516  000077                     ??_delay_ms:
  1517  000077                     ??_setPWM2duty:
  1518  000077                     lcd_read_byte@low:
  1519                           	opt stack 0
  1520  000077                     _lcd_send_4bits$1604:
  1521                           	opt stack 0
  1522  000077                     isdigit@c:
  1523                           	opt stack 0
  1524  000077                     ___wmul@multiplicand:
  1525                           	opt stack 0
  1526  000077                     ___awmod@divisor:
  1527                           	opt stack 0
  1528                           
  1529                           ; 2 bytes @ 0x17
  1530  000077                     	ds	1
  1531  000078                     lcd_read_byte@high:
  1532                           	opt stack 0
  1533  000078                     _lcd_send_4bits$1605:
  1534                           	opt stack 0
  1535  000078                     delay_ms@i:
  1536                           	opt stack 0
  1537                           
  1538                           ; 2 bytes @ 0x18
  1539  000078                     	ds	1
  1540  000079                     ??___xxtofl:
  1541  000079                     lcd_send_4bits@n:
  1542                           	opt stack 0
  1543  000079                     checkPass@passOK:
  1544                           	opt stack 0
  1545  000079                     ___awmod@counter:
  1546                           	opt stack 0
  1547  000079                     setPWM2duty@act:
  1548                           	opt stack 0
  1549  000079                     ___wmul@product:
  1550                           	opt stack 0
  1551  000079                     ___lmul@multiplicand:
  1552                           	opt stack 0
  1553  000079                     ___aldiv@divisor:
  1554                           	opt stack 0
  1555  000079                     __div_to_l_@f2:
  1556                           	opt stack 0
  1557  000079                     ___flge@ff2:
  1558                           	opt stack 0
  1559  000079                     __tdiv_to_l_@f2:
  1560                           	opt stack 0
  1561  000079                     ___lldiv@divisor:
  1562                           	opt stack 0
  1563                           
  1564                           ; 4 bytes @ 0x19
  1565  000079                     	ds	1
  1566  00007A                     lcd_send_byte@n:
  1567                           	opt stack 0
  1568  00007A                     ___awmod@sign:
  1569                           	opt stack 0
  1570  00007A                     checkPass@i:
  1571                           	opt stack 0
  1572                           
  1573                           ; 2 bytes @ 0x1A
  1574  00007A                     	ds	1
  1575  00007B                     ??_lcd_send_byte:
  1576  00007B                     ?___awdiv:
  1577                           	opt stack 0
  1578  00007B                     ___awdiv@dividend:
  1579                           	opt stack 0
  1580                           
  1581                           ; 2 bytes @ 0x1B
  1582  00007B                     	ds	1
  1583  00007C                     lcd_send_byte@address:
  1584                           	opt stack 0
  1585                           
  1586                           ; 1 bytes @ 0x1C
  1587  00007C                     	ds	1
  1588  00007D                     ??__tdiv_to_l_:
  1589  00007D                     ??_lcd_init:
  1590  00007D                     ??___flge:
  1591  00007D                     lcd_gotoxy@fila:
  1592                           	opt stack 0
  1593  00007D                     ___aldiv@counter:
  1594                           	opt stack 0
  1595  00007D                     ___xxtofl@sign:
  1596                           	opt stack 0
  1597  00007D                     ___awdiv@divisor:
  1598                           	opt stack 0
  1599  00007D                     ___lmul@product:
  1600                           	opt stack 0
  1601  00007D                     __div_to_l_@quot:
  1602                           	opt stack 0
  1603  00007D                     ___lldiv@quotient:
  1604                           	opt stack 0
  1605                           
  1606                           ; 4 bytes @ 0x1D
  1607  00007D                     	ds	1
  1608  00007E                     lcd_gotoxy@pos:
  1609                           	opt stack 0
  1610  00007E                     ___aldiv@sign:
  1611                           	opt stack 0
  1612  00007E                     ___xxtofl@exp:
  1613                           	opt stack 0
  1614  00007E                     lcd_init@LCD_INIT_STRING:
  1615                           	opt stack 0
  1616                           
  1617                           ; 4 bytes @ 0x1E
  1618  00007E                     	ds	1
  1619  00007F                     lcd_gotoxy@address:
  1620                           	opt stack 0
  1621  00007F                     ___awdiv@counter:
  1622                           	opt stack 0
  1623  00007F                     ___aldiv@quotient:
  1624                           	opt stack 0
  1625  00007F                     ___xxtofl@arg:
  1626                           	opt stack 0
  1627                           
  1628                           ; 4 bytes @ 0x1F
  1629  00007F                     	ds	1
  1630  000080                     ??_lcd_putc:
  1631  000080                     ___awdiv@sign:
  1632                           	opt stack 0
  1633  000080                     __tdiv_to_l_@quot:
  1634                           	opt stack 0
  1635                           
  1636                           ; 4 bytes @ 0x20
  1637  000080                     	ds	1
  1638  000081                     lcd_putc@cha:
  1639                           	opt stack 0
  1640  000081                     __div_to_l_@cntr:
  1641                           	opt stack 0
  1642  000081                     ___lldiv@counter:
  1643                           	opt stack 0
  1644  000081                     ___awdiv@quotient:
  1645                           	opt stack 0
  1646                           
  1647                           ; 2 bytes @ 0x21
  1648  000081                     	ds	1
  1649  000082                     ?___llmod:
  1650                           	opt stack 0
  1651  000082                     lcd_init@i:
  1652                           	opt stack 0
  1653  000082                     putch@val:
  1654                           	opt stack 0
  1655  000082                     __div_to_l_@exp1:
  1656                           	opt stack 0
  1657  000082                     ___llmod@dividend:
  1658                           	opt stack 0
  1659                           
  1660                           ; 4 bytes @ 0x22
  1661  000082                     	ds	1
  1662  000083                     ?___fldiv:
  1663                           	opt stack 0
  1664  000083                     ?___flmul:
  1665                           	opt stack 0
  1666  000083                     ___fldiv@b:
  1667                           	opt stack 0
  1668  000083                     ___flmul@b:
  1669                           	opt stack 0
  1670                           
  1671                           ; 4 bytes @ 0x23
  1672  000083                     	ds	1
  1673  000084                     __tdiv_to_l_@cntr:
  1674                           	opt stack 0
  1675                           
  1676                           ; 1 bytes @ 0x24
  1677  000084                     	ds	1
  1678  000085                     __tdiv_to_l_@exp1:
  1679                           	opt stack 0
  1680                           
  1681                           ; 1 bytes @ 0x25
  1682  000085                     	ds	1
  1683  000086                     ___llmod@divisor:
  1684                           	opt stack 0
  1685                           
  1686                           ; 4 bytes @ 0x26
  1687  000086                     	ds	1
  1688  000087                     ___fldiv@a:
  1689                           	opt stack 0
  1690  000087                     ___flmul@a:
  1691                           	opt stack 0
  1692                           
  1693                           ; 4 bytes @ 0x27
  1694  000087                     	ds	3
  1695  00008A                     ___llmod@counter:
  1696                           	opt stack 0
  1697                           
  1698                           ; 1 bytes @ 0x2A
  1699  00008A                     	ds	1
  1700  00008B                     ??___fldiv:
  1701  00008B                     ??___flmul:
  1702                           
  1703                           ; 1 bytes @ 0x2B
  1704  00008B                     	ds	4
  1705  00008F                     ___fldiv@sign:
  1706                           	opt stack 0
  1707  00008F                     ___flmul@sign:
  1708                           	opt stack 0
  1709                           
  1710                           ; 1 bytes @ 0x2F
  1711  00008F                     	ds	1
  1712  000090                     ___flmul@aexp:
  1713                           	opt stack 0
  1714  000090                     ___fldiv@rem:
  1715                           	opt stack 0
  1716                           
  1717                           ; 4 bytes @ 0x30
  1718  000090                     	ds	1
  1719  000091                     ___flmul@grs:
  1720                           	opt stack 0
  1721                           
  1722                           ; 4 bytes @ 0x31
  1723  000091                     	ds	3
  1724  000094                     ___fldiv@new_exp:
  1725                           	opt stack 0
  1726                           
  1727                           ; 2 bytes @ 0x34
  1728  000094                     	ds	1
  1729  000095                     ___flmul@bexp:
  1730                           	opt stack 0
  1731                           
  1732                           ; 1 bytes @ 0x35
  1733  000095                     	ds	1
  1734  000096                     ___fldiv@grs:
  1735                           	opt stack 0
  1736  000096                     ___flmul@prod:
  1737                           	opt stack 0
  1738                           
  1739                           ; 4 bytes @ 0x36
  1740  000096                     	ds	4
  1741  00009A                     ___fldiv@bexp:
  1742                           	opt stack 0
  1743  00009A                     ___flmul@temp:
  1744                           	opt stack 0
  1745                           
  1746                           ; 2 bytes @ 0x3A
  1747  00009A                     	ds	1
  1748  00009B                     ___fldiv@aexp:
  1749                           	opt stack 0
  1750                           
  1751                           ; 1 bytes @ 0x3B
  1752  00009B                     	ds	1
  1753  00009C                     ??_integrator:
  1754  00009C                     ?_fround:
  1755                           	opt stack 0
  1756  00009C                     ?_scale:
  1757                           	opt stack 0
  1758  00009C                     calcVars2ti@temp:
  1759                           	opt stack 0
  1760                           
  1761                           ; 4 bytes @ 0x3C
  1762  00009C                     	ds	2
  1763  00009E                     integrator@acum:
  1764                           	opt stack 0
  1765                           
  1766                           ; 4 bytes @ 0x3E
  1767  00009E                     	ds	2
  1768  0000A0                     confirmEdition@yes:
  1769                           	opt stack 0
  1770  0000A0                     _fround$2890:
  1771                           	opt stack 0
  1772  0000A0                     _scale$2891:
  1773                           	opt stack 0
  1774                           
  1775                           ; 4 bytes @ 0x40
  1776  0000A0                     	ds	2
  1777  0000A2                     integrator@temp:
  1778                           	opt stack 0
  1779                           
  1780                           ; 4 bytes @ 0x42
  1781  0000A2                     	ds	2
  1782  0000A4                     scale@scl:
  1783                           	opt stack 0
  1784  0000A4                     _fround$2889:
  1785                           	opt stack 0
  1786                           
  1787                           ; 4 bytes @ 0x44
  1788  0000A4                     	ds	1
  1789  0000A5                     ?___fltol:
  1790                           	opt stack 0
  1791  0000A5                     ___fltol@f1:
  1792                           	opt stack 0
  1793                           
  1794                           ; 4 bytes @ 0x45
  1795  0000A5                     	ds	1
  1796  0000A6                     integrator@i:
  1797                           	opt stack 0
  1798                           
  1799                           ; 2 bytes @ 0x46
  1800  0000A6                     	ds	2
  1801  0000A8                     fround@prec:
  1802                           	opt stack 0
  1803                           
  1804                           ; 1 bytes @ 0x48
  1805  0000A8                     	ds	1
  1806  0000A9                     ??___fltol:
  1807  0000A9                     ?___fladd:
  1808                           	opt stack 0
  1809  0000A9                     ___fladd@b:
  1810                           	opt stack 0
  1811                           
  1812                           ; 4 bytes @ 0x49
  1813  0000A9                     	ds	4
  1814  0000AD                     ___fltol@sign1:
  1815                           	opt stack 0
  1816  0000AD                     ___fladd@a:
  1817                           	opt stack 0
  1818                           
  1819                           ; 4 bytes @ 0x4D
  1820  0000AD                     	ds	1
  1821  0000AE                     ___fltol@exp1:
  1822                           	opt stack 0
  1823                           
  1824                           ; 1 bytes @ 0x4E
  1825  0000AE                     	ds	1
  1826  0000AF                     ??_desintegrator:
  1827                           
  1828                           ; 1 bytes @ 0x4F
  1829  0000AF                     	ds	2
  1830  0000B1                     ??___fladd:
  1831  0000B1                     desintegrator@temp:
  1832                           	opt stack 0
  1833                           
  1834                           ; 4 bytes @ 0x51
  1835  0000B1                     	ds	4
  1836  0000B5                     desintegrator@tempL:
  1837                           	opt stack 0
  1838                           
  1839                           ; 4 bytes @ 0x55
  1840  0000B5                     	ds	4
  1841  0000B9                     ___fladd@signs:
  1842                           	opt stack 0
  1843  0000B9                     desintegrator@temp3:
  1844                           	opt stack 0
  1845                           
  1846                           ; 4 bytes @ 0x59
  1847  0000B9                     	ds	1
  1848  0000BA                     ___fladd@aexp:
  1849                           	opt stack 0
  1850                           
  1851                           ; 1 bytes @ 0x5A
  1852  0000BA                     	ds	1
  1853  0000BB                     ___fladd@bexp:
  1854                           	opt stack 0
  1855                           
  1856                           ; 1 bytes @ 0x5B
  1857  0000BB                     	ds	1
  1858  0000BC                     ___fladd@grs:
  1859                           	opt stack 0
  1860                           
  1861                           ; 1 bytes @ 0x5C
  1862  0000BC                     	ds	1
  1863  0000BD                     ?___flsub:
  1864                           	opt stack 0
  1865  0000BD                     desintegrator@temp2:
  1866                           	opt stack 0
  1867  0000BD                     ___flsub@b:
  1868                           	opt stack 0
  1869                           
  1870                           ; 4 bytes @ 0x5D
  1871  0000BD                     	ds	4
  1872  0000C1                     desintegrator@i:
  1873                           	opt stack 0
  1874  0000C1                     ___flsub@a:
  1875                           	opt stack 0
  1876                           
  1877                           ; 4 bytes @ 0x61
  1878  0000C1                     	ds	2
  1879  0000C3                     
  1880                           ; 1 bytes @ 0x63
  1881  0000C3                     	ds	2
  1882  0000C5                     ??_printf:
  1883  0000C5                     
  1884                           ; 1 bytes @ 0x65
  1885  0000C5                     	ds	4
  1886  0000C9                     drawMenu@adv:
  1887                           	opt stack 0
  1888  0000C9                     drawChanVal@i:
  1889                           	opt stack 0
  1890  0000C9                     drawPassWord@i:
  1891                           	opt stack 0
  1892  0000C9                     drawSNquest@i:
  1893                           	opt stack 0
  1894                           
  1895                           ; 2 bytes @ 0x69
  1896  0000C9                     	ds	2
  1897  0000CB                     drawSNquest@tq:
  1898                           	opt stack 0
  1899                           
  1900                           ; 1 bytes @ 0x6B
  1901  0000CB                     	ds	1
  1902  0000CC                     tblptru	equ	0xFF8
  1903                           tblptrh	equ	0xFF7
  1904                           tblptrl	equ	0xFF6
  1905                           tablat	equ	0xFF5
  1906                           postinc0	equ	0xFEE
  1907                           wreg	equ	0xFE8
  1908                           postdec1	equ	0xFE5
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           ; 1 bytes @ 0x6C
  1912                           
  1913                           	psect	cstackCOMRAM
  1914  000001                     __pcstackCOMRAM:
  1915                           	opt stack 0
  1916  000001                     i2putchUART@val:
  1917                           	opt stack 0
  1918  000001                     i2setPWM2duty@actuator:
  1919                           	opt stack 0
  1920                           
  1921                           ; 2 bytes @ 0x0
  1922  000001                     	ds	2
  1923  000003                     ??i2_setPWM2duty:
  1924                           
  1925                           ; 1 bytes @ 0x2
  1926  000003                     	ds	2
  1927  000005                     i2setPWM2duty@act:
  1928                           	opt stack 0
  1929                           
  1930                           ; 2 bytes @ 0x4
  1931  000005                     	ds	2
  1932  000007                     ??_hp_isr:
  1933                           
  1934                           ; 1 bytes @ 0x6
  1935  000007                     	ds	14
  1936  000015                     ?i1___fldiv:
  1937                           	opt stack 0
  1938  000015                     ?i1___flmul:
  1939                           	opt stack 0
  1940  000015                     readEEPROM@adr:
  1941                           	opt stack 0
  1942  000015                     putchUART@val:
  1943                           	opt stack 0
  1944  000015                     i1writeEEPROM@data:
  1945                           	opt stack 0
  1946  000015                     i1___fldiv@b:
  1947                           	opt stack 0
  1948  000015                     i1___flmul@b:
  1949                           	opt stack 0
  1950                           
  1951                           ; 4 bytes @ 0x14
  1952  000015                     	ds	1
  1953  000016                     i1writeEEPROM@adr:
  1954                           	opt stack 0
  1955                           
  1956                           ; 1 bytes @ 0x15
  1957  000016                     	ds	3
  1958  000019                     i1___fldiv@a:
  1959                           	opt stack 0
  1960  000019                     i1___flmul@a:
  1961                           	opt stack 0
  1962                           
  1963                           ; 4 bytes @ 0x18
  1964  000019                     	ds	4
  1965  00001D                     ??i1___fldiv:
  1966  00001D                     ??i1___flmul:
  1967                           
  1968                           ; 1 bytes @ 0x1C
  1969  00001D                     	ds	4
  1970  000021                     i1___fldiv@sign:
  1971                           	opt stack 0
  1972  000021                     i1___flmul@sign:
  1973                           	opt stack 0
  1974                           
  1975                           ; 1 bytes @ 0x20
  1976  000021                     	ds	1
  1977  000022                     i1___flmul@aexp:
  1978                           	opt stack 0
  1979  000022                     i1___fldiv@rem:
  1980                           	opt stack 0
  1981                           
  1982                           ; 4 bytes @ 0x21
  1983  000022                     	ds	1
  1984  000023                     i1___flmul@grs:
  1985                           	opt stack 0
  1986                           
  1987                           ; 4 bytes @ 0x22
  1988  000023                     	ds	3
  1989  000026                     i1___fldiv@new_exp:
  1990                           	opt stack 0
  1991                           
  1992                           ; 2 bytes @ 0x25
  1993  000026                     	ds	1
  1994  000027                     i1___flmul@bexp:
  1995                           	opt stack 0
  1996                           
  1997                           ; 1 bytes @ 0x26
  1998  000027                     	ds	1
  1999  000028                     i1___fldiv@grs:
  2000                           	opt stack 0
  2001  000028                     i1___flmul@prod:
  2002                           	opt stack 0
  2003                           
  2004                           ; 4 bytes @ 0x27
  2005  000028                     	ds	4
  2006  00002C                     i1___fldiv@bexp:
  2007                           	opt stack 0
  2008  00002C                     i1___flmul@temp:
  2009                           	opt stack 0
  2010                           
  2011                           ; 2 bytes @ 0x2B
  2012  00002C                     	ds	1
  2013  00002D                     i1___fldiv@aexp:
  2014                           	opt stack 0
  2015                           
  2016                           ; 1 bytes @ 0x2C
  2017  00002D                     	ds	1
  2018  00002E                     UARTint@sas:
  2019                           	opt stack 0
  2020                           
  2021                           ; 1 bytes @ 0x2D
  2022  00002E                     	ds	1
  2023                           tblptru	equ	0xFF8
  2024                           tblptrh	equ	0xFF7
  2025                           tblptrl	equ	0xFF6
  2026                           tablat	equ	0xFF5
  2027                           postinc0	equ	0xFEE
  2028                           wreg	equ	0xFE8
  2029                           postdec1	equ	0xFE5
  2030                           fsr1l	equ	0xFE1
  2031                           
  2032 ;;
  2033 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2034 ;;
  2035 ;; *************** function _main *****************
  2036 ;; Defined at:
  2037 ;;		line 27 in file "source/main.c"
  2038 ;; Parameters:    Size  Location     Type
  2039 ;;		None
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;		None
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2051 ;;      Params:         0       0       0       0       0       0       0
  2052 ;;      Locals:         0       0       0       0       0       0       0
  2053 ;;      Temps:          0       0       0       0       0       0       0
  2054 ;;      Totals:         0       0       0       0       0       0       0
  2055 ;;Total ram usage:        0 bytes
  2056 ;; Hardware stack levels required when called:   18
  2057 ;; This function calls:
  2058 ;;		_EEPROMConfig
  2059 ;;		_PWM2Config
  2060 ;;		_UARTConfig
  2061 ;;		_buttonChecking
  2062 ;;		_clockConfig
  2063 ;;		_drawScreen
  2064 ;;		_interruptConfig
  2065 ;;		_ioConfig
  2066 ;;		_ioInitStt
  2067 ;;		_lcd_init
  2068 ;; This function is called by:
  2069 ;;		Startup code after reset
  2070 ;; This function uses a non-reentrant model
  2071 ;;
  2072                           
  2073                           	psect	text0
  2074  005D60                     __ptext0:
  2075                           	opt stack 0
  2076  005D60                     _main:
  2077                           	opt stack 13
  2078                           
  2079                           ;main.c: 29: clockConfig();
  2080                           
  2081                           ;incstack = 0
  2082  005D60  ECF0  F02E         	call	_clockConfig	;wreg free
  2083                           
  2084                           ;main.c: 30: ioInitStt();
  2085  005D64  EC8C  F02F         	call	_ioInitStt	;wreg free
  2086                           
  2087                           ;main.c: 31: EEPROMConfig();
  2088  005D68  EC94  F02F         	call	_EEPROMConfig	;wreg free
  2089                           
  2090                           ;main.c: 34: ioConfig();
  2091  005D6C  ECF2  F02D         	call	_ioConfig	;wreg free
  2092                           
  2093                           ;main.c: 35: lcd_init();
  2094  005D70  EC48  F028         	call	_lcd_init	;wreg free
  2095                           
  2096                           ;main.c: 36: PWM2Config();
  2097  005D74  ECBA  F02C         	call	_PWM2Config	;wreg free
  2098                           
  2099                           ;main.c: 37: UARTConfig();
  2100  005D78  ECBB  F02D         	call	_UARTConfig	;wreg free
  2101                           
  2102                           ;main.c: 38: interruptConfig();
  2103  005D7C  EC90  F02F         	call	_interruptConfig	;wreg free
  2104  005D80                     l805:
  2105  005D80  0004               	clrwdt		;# 
  2106                           
  2107                           ;main.c: 42: drawScreen();
  2108  005D82  ECEE  F027         	call	_drawScreen	;wreg free
  2109                           
  2110                           ;main.c: 43: buttonChecking();
  2111  005D86  ECAE  F015         	call	_buttonChecking	;wreg free
  2112  005D8A  D7FA               	goto	l805
  2113  005D8C                     __end_of_main:
  2114                           	opt stack 0
  2115                           tblptru	equ	0xFF8
  2116                           tblptrh	equ	0xFF7
  2117                           tblptrl	equ	0xFF6
  2118                           tablat	equ	0xFF5
  2119                           postinc0	equ	0xFEE
  2120                           wreg	equ	0xFE8
  2121                           postdec1	equ	0xFE5
  2122                           fsr1l	equ	0xFE1
  2123                           
  2124 ;; *************** function _lcd_init *****************
  2125 ;; Defined at:
  2126 ;;		line 179 in file "source/../../vclib_lcd.h"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;		None
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  LCD_INIT_STR    4   30[BANK0 ] unsigned char [4]
  2131 ;;  i               1   34[BANK0 ] unsigned char 
  2132 ;; Return value:  Size  Location     Type
  2133 ;;                  1    wreg      void 
  2134 ;; Registers used:
  2135 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  2136 ;; Tracked objects:
  2137 ;;		On entry : 0/0
  2138 ;;		On exit  : 0/0
  2139 ;;		Unchanged: 0/0
  2140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2141 ;;      Params:         0       0       0       0       0       0       0
  2142 ;;      Locals:         0       5       0       0       0       0       0
  2143 ;;      Temps:          0       1       0       0       0       0       0
  2144 ;;      Totals:         0       6       0       0       0       0       0
  2145 ;;Total ram usage:        6 bytes
  2146 ;; Hardware stack levels used:    1
  2147 ;; Hardware stack levels required when called:   11
  2148 ;; This function calls:
  2149 ;;		_lcd_send_4bits
  2150 ;;		_lcd_send_byte
  2151 ;; This function is called by:
  2152 ;;		_main
  2153 ;; This function uses a non-reentrant model
  2154 ;;
  2155                           
  2156                           	psect	text1
  2157  005090                     __ptext1:
  2158                           	opt stack 0
  2159  005090                     _lcd_init:
  2160                           	opt stack 19
  2161                           
  2162                           ;vclib_lcd.h: 180: unsigned char i;
  2163                           ;vclib_lcd.h: 181: unsigned char LCD_INIT_STRING[4] = {0x20 | (2 << 2), 0xc, 1, 6};
  2164                           
  2165                           ;incstack = 0
  2166  005090  C17D  F07E         	movff	lcd_init@F7567,lcd_init@LCD_INIT_STRING
  2167  005094  C17E  F07F         	movff	lcd_init@F7567+1,lcd_init@LCD_INIT_STRING+1
  2168  005098  C17F  F080         	movff	lcd_init@F7567+2,lcd_init@LCD_INIT_STRING+2
  2169  00509C  C180  F081         	movff	lcd_init@F7567+3,lcd_init@LCD_INIT_STRING+3
  2170                           
  2171                           ;vclib_lcd.h: 184: PORTBbits.RB3 = 0;
  2172  0050A0  9681               	bcf	3969,3,c	;volatile
  2173                           
  2174                           ;vclib_lcd.h: 185: PORTBbits.RB1 = 0;
  2175  0050A2  9281               	bcf	3969,1,c	;volatile
  2176                           
  2177                           ;vclib_lcd.h: 186: PORTBbits.RB2 = 0;
  2178  0050A4  9481               	bcf	3969,2,c	;volatile
  2179                           
  2180                           ;vclib_lcd.h: 187: _delay((unsigned long)((15)*(16000000/4000.0)));
  2181  0050A6  0E4E               	movlw	78
  2182  0050A8  0100               	movlb	0	; () banked
  2183  0050AA  6F7D               	movwf	??_lcd_init& (0+255),b
  2184  0050AC  0EEB               	movlw	235
  2185  0050AE                     u13647:
  2186  0050AE  2EE8               	decfsz	wreg,f,c
  2187  0050B0  D7FE               	goto	u13647
  2188  0050B2  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  2189  0050B4  D7FC               	goto	u13647
  2190  0050B6  F000               	nop	
  2191                           
  2192                           ;vclib_lcd.h: 188: for (i = 1; i <= 3; ++i) {
  2193  0050B8  0E01               	movlw	1
  2194  0050BA  0100               	movlb	0	; () banked
  2195  0050BC  6F82               	movwf	lcd_init@i& (0+255),b
  2196  0050BE                     l10234:
  2197                           
  2198                           ; BSR set to: 0
  2199  0050BE  0E03               	movlw	3
  2200  0050C0  0100               	movlb	0	; () banked
  2201  0050C2  6582               	cpfsgt	lcd_init@i& (0+255),b
  2202  0050C4  D001               	goto	l10238
  2203  0050C6  D00F               	goto	l10246
  2204  0050C8                     l10238:
  2205                           
  2206                           ; BSR set to: 0
  2207                           ;vclib_lcd.h: 189: lcd_send_4bits(3);
  2208  0050C8  0E03               	movlw	3
  2209  0050CA  EC17  F02A         	call	_lcd_send_4bits
  2210                           
  2211                           ;vclib_lcd.h: 190: _delay((unsigned long)((5)*(16000000/4000.0)));
  2212  0050CE  0E1A               	movlw	26
  2213  0050D0  0100               	movlb	0	; () banked
  2214  0050D2  6F7D               	movwf	??_lcd_init& (0+255),b
  2215  0050D4  0EF8               	movlw	248
  2216  0050D6                     u13657:
  2217  0050D6  2EE8               	decfsz	wreg,f,c
  2218  0050D8  D7FE               	goto	u13657
  2219  0050DA  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  2220  0050DC  D7FC               	goto	u13657
  2221  0050DE  D000               	nop2	
  2222  0050E0  0100               	movlb	0	; () banked
  2223  0050E2  2B82               	incf	lcd_init@i& (0+255),f,b
  2224  0050E4  D7EC               	goto	l10234
  2225  0050E6                     l10246:
  2226                           
  2227                           ; BSR set to: 0
  2228                           ;vclib_lcd.h: 191: }
  2229                           ;vclib_lcd.h: 192: lcd_send_4bits(2);
  2230  0050E6  0E02               	movlw	2
  2231  0050E8  EC17  F02A         	call	_lcd_send_4bits
  2232                           
  2233                           ;vclib_lcd.h: 193: _delay((unsigned long)((5)*(16000000/4000.0)));
  2234  0050EC  0E1A               	movlw	26
  2235  0050EE  0100               	movlb	0	; () banked
  2236  0050F0  6F7D               	movwf	??_lcd_init& (0+255),b
  2237  0050F2  0EF8               	movlw	248
  2238  0050F4                     u13667:
  2239  0050F4  2EE8               	decfsz	wreg,f,c
  2240  0050F6  D7FE               	goto	u13667
  2241  0050F8  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  2242  0050FA  D7FC               	goto	u13667
  2243  0050FC  D000               	nop2	
  2244                           
  2245                           ;vclib_lcd.h: 194: for (i = 0; i <= 3; ++i)
  2246  0050FE  0E00               	movlw	0
  2247  005100  0100               	movlb	0	; () banked
  2248  005102  6F82               	movwf	lcd_init@i& (0+255),b
  2249  005104                     l10252:
  2250                           
  2251                           ; BSR set to: 0
  2252  005104  0E03               	movlw	3
  2253  005106  0100               	movlb	0	; () banked
  2254  005108  6582               	cpfsgt	lcd_init@i& (0+255),b
  2255  00510A  D001               	goto	l10256
  2256  00510C  0012               	return	
  2257  00510E                     l10256:
  2258                           
  2259                           ; BSR set to: 0
  2260                           ;vclib_lcd.h: 195: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2261  00510E  0100               	movlb	0	; () banked
  2262  005110  5182               	movf	lcd_init@i& (0+255),w,b
  2263  005112  0D01               	mullw	1
  2264  005114  0E7E               	movlw	low lcd_init@LCD_INIT_STRING
  2265  005116  24F3               	addwf	prodl,w,c
  2266  005118  6ED9               	movwf	fsr2l,c
  2267  00511A  0E00               	movlw	high lcd_init@LCD_INIT_STRING
  2268  00511C  20F4               	addwfc	prodh,w,c
  2269  00511E  6EDA               	movwf	fsr2h,c
  2270  005120  50DF               	movf	indf2,w,c
  2271  005122  0100               	movlb	0	; () banked
  2272  005124  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  2273  005126  0E00               	movlw	0
  2274  005128  EC7E  F02D         	call	_lcd_send_byte
  2275  00512C  0100               	movlb	0	; () banked
  2276  00512E  2B82               	incf	lcd_init@i& (0+255),f,b
  2277  005130  D7E9               	goto	l10252
  2278  005132                     __end_of_lcd_init:
  2279                           	opt stack 0
  2280                           tblptru	equ	0xFF8
  2281                           tblptrh	equ	0xFF7
  2282                           tblptrl	equ	0xFF6
  2283                           tablat	equ	0xFF5
  2284                           prodh	equ	0xFF4
  2285                           prodl	equ	0xFF3
  2286                           postinc0	equ	0xFEE
  2287                           wreg	equ	0xFE8
  2288                           postdec1	equ	0xFE5
  2289                           fsr1l	equ	0xFE1
  2290                           indf2	equ	0xFDF
  2291                           fsr2h	equ	0xFDA
  2292                           fsr2l	equ	0xFD9
  2293                           
  2294 ;; *************** function _ioInitStt *****************
  2295 ;; Defined at:
  2296 ;;		line 80 in file "source/IOConfig.h"
  2297 ;; Parameters:    Size  Location     Type
  2298 ;;		None
  2299 ;; Auto vars:     Size  Location     Type
  2300 ;;		None
  2301 ;; Return value:  Size  Location     Type
  2302 ;;                  1    wreg      void 
  2303 ;; Registers used:
  2304 ;;		None
  2305 ;; Tracked objects:
  2306 ;;		On entry : 0/0
  2307 ;;		On exit  : 0/0
  2308 ;;		Unchanged: 0/0
  2309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2310 ;;      Params:         0       0       0       0       0       0       0
  2311 ;;      Locals:         0       0       0       0       0       0       0
  2312 ;;      Temps:          0       0       0       0       0       0       0
  2313 ;;      Totals:         0       0       0       0       0       0       0
  2314 ;;Total ram usage:        0 bytes
  2315 ;; Hardware stack levels used:    1
  2316 ;; Hardware stack levels required when called:    8
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		_main
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           	psect	text2
  2325  005F18                     __ptext2:
  2326                           	opt stack 0
  2327  005F18                     _ioInitStt:
  2328                           	opt stack 22
  2329                           
  2330                           ;IOConfig.h: 81: LATCbits.LATC4 = 0;
  2331                           
  2332                           ; BSR set to: 0
  2333                           ;incstack = 0
  2334  005F18  988B               	bcf	3979,4,c	;volatile
  2335                           
  2336                           ;IOConfig.h: 82: LATBbits.LATB0 = 0;
  2337  005F1A  908A               	bcf	3978,0,c	;volatile
  2338                           
  2339                           ;IOConfig.h: 83: LATCbits.LATC5 = 0;
  2340  005F1C  9A8B               	bcf	3979,5,c	;volatile
  2341  005F1E  0012               	return		;funcret
  2342  005F20                     __end_of_ioInitStt:
  2343                           	opt stack 0
  2344                           tblptru	equ	0xFF8
  2345                           tblptrh	equ	0xFF7
  2346                           tblptrl	equ	0xFF6
  2347                           tablat	equ	0xFF5
  2348                           prodh	equ	0xFF4
  2349                           prodl	equ	0xFF3
  2350                           postinc0	equ	0xFEE
  2351                           wreg	equ	0xFE8
  2352                           postdec1	equ	0xFE5
  2353                           fsr1l	equ	0xFE1
  2354                           indf2	equ	0xFDF
  2355                           fsr2h	equ	0xFDA
  2356                           fsr2l	equ	0xFD9
  2357                           
  2358 ;; *************** function _ioConfig *****************
  2359 ;; Defined at:
  2360 ;;		line 63 in file "source/IOConfig.h"
  2361 ;; Parameters:    Size  Location     Type
  2362 ;;		None
  2363 ;; Auto vars:     Size  Location     Type
  2364 ;;		None
  2365 ;; Return value:  Size  Location     Type
  2366 ;;                  1    wreg      void 
  2367 ;; Registers used:
  2368 ;;		None
  2369 ;; Tracked objects:
  2370 ;;		On entry : 0/0
  2371 ;;		On exit  : 0/0
  2372 ;;		Unchanged: 0/0
  2373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2374 ;;      Params:         0       0       0       0       0       0       0
  2375 ;;      Locals:         0       0       0       0       0       0       0
  2376 ;;      Temps:          0       0       0       0       0       0       0
  2377 ;;      Totals:         0       0       0       0       0       0       0
  2378 ;;Total ram usage:        0 bytes
  2379 ;; Hardware stack levels used:    1
  2380 ;; Hardware stack levels required when called:    8
  2381 ;; This function calls:
  2382 ;;		Nothing
  2383 ;; This function is called by:
  2384 ;;		_main
  2385 ;; This function uses a non-reentrant model
  2386 ;;
  2387                           
  2388                           	psect	text3
  2389  005BE4                     __ptext3:
  2390                           	opt stack 0
  2391  005BE4                     _ioConfig:
  2392                           	opt stack 22
  2393                           
  2394                           ;IOConfig.h: 64: TRISBbits.TRISB1 = 0;
  2395                           
  2396                           ;incstack = 0
  2397  005BE4  9293               	bcf	3987,1,c	;volatile
  2398                           
  2399                           ;IOConfig.h: 65: TRISBbits.TRISB2 = 0;
  2400  005BE6  9493               	bcf	3987,2,c	;volatile
  2401                           
  2402                           ;IOConfig.h: 66: TRISBbits.TRISB3 = 0;
  2403  005BE8  9693               	bcf	3987,3,c	;volatile
  2404                           
  2405                           ;IOConfig.h: 67: TRISBbits.TRISB0 = 0;
  2406  005BEA  9093               	bcf	3987,0,c	;volatile
  2407                           
  2408                           ;IOConfig.h: 68: TRISCbits.TRISC5 = 0;
  2409  005BEC  9A94               	bcf	3988,5,c	;volatile
  2410                           
  2411                           ;IOConfig.h: 69: TRISAbits.TRISA7 = 1;
  2412  005BEE  8E92               	bsf	3986,7,c	;volatile
  2413                           
  2414                           ;IOConfig.h: 70: TRISAbits.TRISA6 = 1;
  2415  005BF0  8C92               	bsf	3986,6,c	;volatile
  2416                           
  2417                           ;IOConfig.h: 71: TRISCbits.TRISC2 = 1; ANSELCbits.ANSC2 = 0;
  2418  005BF2  8494               	bsf	3988,2,c	;volatile
  2419  005BF4  010F               	movlb	15	; () banked
  2420  005BF6  953A               	bcf	58,2,b	;volatile
  2421                           
  2422                           ;IOConfig.h: 72: TRISCbits.TRISC3 = 1; ANSELCbits.ANSC3 = 0;
  2423  005BF8  8694               	bsf	3988,3,c	;volatile
  2424  005BFA  010F               	movlb	15	; () banked
  2425  005BFC  973A               	bcf	58,3,b	;volatile
  2426                           
  2427                           ;IOConfig.h: 73: TRISAbits.TRISA2 = 1; ANSELAbits.ANSA2 = 0;
  2428  005BFE  8492               	bsf	3986,2,c	;volatile
  2429  005C00  010F               	movlb	15	; () banked
  2430  005C02  9538               	bcf	56,2,b	;volatile
  2431                           
  2432                           ;IOConfig.h: 74: TRISAbits.TRISA3 = 1; ANSELAbits.ANSA3 = 0;
  2433  005C04  8692               	bsf	3986,3,c	;volatile
  2434  005C06  010F               	movlb	15	; () banked
  2435  005C08  9738               	bcf	56,3,b	;volatile
  2436                           
  2437                           ;IOConfig.h: 75: TRISAbits.TRISA4 = 1;
  2438  005C0A  8892               	bsf	3986,4,c	;volatile
  2439                           
  2440                           ;IOConfig.h: 76: TRISAbits.TRISA5 = 1; ANSELAbits.ANSA5 = 0;
  2441  005C0C  8A92               	bsf	3986,5,c	;volatile
  2442  005C0E  010F               	movlb	15	; () banked
  2443  005C10  9B38               	bcf	56,5,b	;volatile
  2444                           
  2445                           ;IOConfig.h: 77: TRISCbits.TRISC4 = 0;
  2446  005C12  9894               	bcf	3988,4,c	;volatile
  2447                           
  2448                           ; BSR set to: 15
  2449  005C14  0012               	return		;funcret
  2450  005C16                     __end_of_ioConfig:
  2451                           	opt stack 0
  2452                           tblptru	equ	0xFF8
  2453                           tblptrh	equ	0xFF7
  2454                           tblptrl	equ	0xFF6
  2455                           tablat	equ	0xFF5
  2456                           prodh	equ	0xFF4
  2457                           prodl	equ	0xFF3
  2458                           postinc0	equ	0xFEE
  2459                           wreg	equ	0xFE8
  2460                           postdec1	equ	0xFE5
  2461                           fsr1l	equ	0xFE1
  2462                           indf2	equ	0xFDF
  2463                           fsr2h	equ	0xFDA
  2464                           fsr2l	equ	0xFD9
  2465                           
  2466 ;; *************** function _interruptConfig *****************
  2467 ;; Defined at:
  2468 ;;		line 90 in file "source/SYSConfig.h"
  2469 ;; Parameters:    Size  Location     Type
  2470 ;;		None
  2471 ;; Auto vars:     Size  Location     Type
  2472 ;;		None
  2473 ;; Return value:  Size  Location     Type
  2474 ;;                  1    wreg      void 
  2475 ;; Registers used:
  2476 ;;		None
  2477 ;; Tracked objects:
  2478 ;;		On entry : 0/0
  2479 ;;		On exit  : 0/0
  2480 ;;		Unchanged: 0/0
  2481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2482 ;;      Params:         0       0       0       0       0       0       0
  2483 ;;      Locals:         0       0       0       0       0       0       0
  2484 ;;      Temps:          0       0       0       0       0       0       0
  2485 ;;      Totals:         0       0       0       0       0       0       0
  2486 ;;Total ram usage:        0 bytes
  2487 ;; Hardware stack levels used:    1
  2488 ;; Hardware stack levels required when called:    8
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496                           	psect	text4
  2497  005F20                     __ptext4:
  2498                           	opt stack 0
  2499  005F20                     _interruptConfig:
  2500                           	opt stack 22
  2501                           
  2502                           ;SYSConfig.h: 91: RCONbits.IPEN = 1;
  2503                           
  2504                           ; BSR set to: 15
  2505                           ;incstack = 0
  2506  005F20  8ED0               	bsf	4048,7,c	;volatile
  2507                           
  2508                           ;SYSConfig.h: 92: INTCONbits.PEIE = 1;
  2509  005F22  8CF2               	bsf	intcon,6,c	;volatile
  2510                           
  2511                           ;SYSConfig.h: 93: INTCONbits.GIE = 1;
  2512  005F24  8EF2               	bsf	intcon,7,c	;volatile
  2513  005F26  0012               	return		;funcret
  2514  005F28                     __end_of_interruptConfig:
  2515                           	opt stack 0
  2516                           tblptru	equ	0xFF8
  2517                           tblptrh	equ	0xFF7
  2518                           tblptrl	equ	0xFF6
  2519                           tablat	equ	0xFF5
  2520                           prodh	equ	0xFF4
  2521                           prodl	equ	0xFF3
  2522                           intcon	equ	0xFF2
  2523                           postinc0	equ	0xFEE
  2524                           wreg	equ	0xFE8
  2525                           postdec1	equ	0xFE5
  2526                           fsr1l	equ	0xFE1
  2527                           indf2	equ	0xFDF
  2528                           fsr2h	equ	0xFDA
  2529                           fsr2l	equ	0xFD9
  2530                           
  2531 ;; *************** function _drawScreen *****************
  2532 ;; Defined at:
  2533 ;;		line 268 in file "source/screenDrawers.h"
  2534 ;; Parameters:    Size  Location     Type
  2535 ;;		None
  2536 ;; Auto vars:     Size  Location     Type
  2537 ;;		None
  2538 ;; Return value:  Size  Location     Type
  2539 ;;                  1    wreg      void 
  2540 ;; Registers used:
  2541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2542 ;; Tracked objects:
  2543 ;;		On entry : 0/0
  2544 ;;		On exit  : 0/0
  2545 ;;		Unchanged: 0/0
  2546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2547 ;;      Params:         0       0       0       0       0       0       0
  2548 ;;      Locals:         0       0       0       0       0       0       0
  2549 ;;      Temps:          0       0       0       0       0       0       0
  2550 ;;      Totals:         0       0       0       0       0       0       0
  2551 ;;Total ram usage:        0 bytes
  2552 ;; Hardware stack levels used:    1
  2553 ;; Hardware stack levels required when called:   17
  2554 ;; This function calls:
  2555 ;;		_drawAdvOFF
  2556 ;;		_drawAdvON
  2557 ;;		_drawAutoCalibRM
  2558 ;;		_drawAutoCalibRes
  2559 ;;		_drawBadPass
  2560 ;;		_drawChanVal
  2561 ;;		_drawMenu
  2562 ;;		_drawPassWord
  2563 ;;		_drawSNquest
  2564 ;; This function is called by:
  2565 ;;		_main
  2566 ;; This function uses a non-reentrant model
  2567 ;;
  2568                           
  2569                           	psect	text5
  2570  004FDC                     __ptext5:
  2571                           	opt stack 0
  2572  004FDC                     _drawScreen:
  2573                           	opt stack 13
  2574                           
  2575                           ;screenDrawers.h: 269: switch (actualScreen) {
  2576                           
  2577                           ;incstack = 0
  2578  004FDC  D032               	goto	l10338
  2579  004FDE                     l10308:
  2580                           
  2581                           ;screenDrawers.h: 271: drawMenu(0);
  2582  004FDE  0E00               	movlw	0
  2583  004FE0  EC82  F00F         	call	_drawMenu
  2584                           
  2585                           ;screenDrawers.h: 272: break;
  2586  004FE4  0012               	return	
  2587  004FE6                     l10310:
  2588                           
  2589                           ;screenDrawers.h: 274: drawPassWord();
  2590  004FE6  EC68  F025         	call	_drawPassWord	;wreg free
  2591                           
  2592                           ;screenDrawers.h: 275: break;
  2593  004FEA  0012               	return	
  2594  004FEC                     l10312:
  2595                           
  2596                           ;screenDrawers.h: 277: drawBadPass();
  2597  004FEC  EC54  F02E         	call	_drawBadPass	;wreg free
  2598                           
  2599                           ;screenDrawers.h: 278: break;
  2600  004FF0  0012               	return	
  2601  004FF2                     l10314:
  2602                           
  2603                           ;screenDrawers.h: 280: drawMenu(1);
  2604  004FF2  0E01               	movlw	1
  2605  004FF4  EC82  F00F         	call	_drawMenu
  2606                           
  2607                           ;screenDrawers.h: 281: break;
  2608  004FF8  0012               	return	
  2609  004FFA                     l10316:
  2610                           
  2611                           ;screenDrawers.h: 283: drawAdvON();
  2612  004FFA  EC82  F02E         	call	_drawAdvON	;wreg free
  2613                           
  2614                           ;screenDrawers.h: 284: break;
  2615  004FFE  0012               	return	
  2616  005000                     l10318:
  2617                           
  2618                           ;screenDrawers.h: 286: drawAdvOFF();
  2619  005000  EC99  F02E         	call	_drawAdvOFF	;wreg free
  2620                           
  2621                           ;screenDrawers.h: 287: break;
  2622  005004  0012               	return	
  2623  005006                     l10320:
  2624                           
  2625                           ;screenDrawers.h: 289: drawChanVal();
  2626  005006  EC4E  F01A         	call	_drawChanVal	;wreg free
  2627                           
  2628                           ;screenDrawers.h: 290: break;
  2629  00500A  0012               	return	
  2630  00500C                     l10322:
  2631                           
  2632                           ;screenDrawers.h: 292: drawSNquest(0);
  2633  00500C  0E00               	movlw	0
  2634  00500E  ECEB  F025         	call	_drawSNquest
  2635                           
  2636                           ;screenDrawers.h: 293: break;
  2637  005012  0012               	return	
  2638  005014                     l10324:
  2639                           
  2640                           ;screenDrawers.h: 295: drawSNquest(1);
  2641  005014  0E01               	movlw	1
  2642  005016  ECEB  F025         	call	_drawSNquest
  2643                           
  2644                           ;screenDrawers.h: 296: break;
  2645  00501A  0012               	return	
  2646  00501C                     l10326:
  2647                           
  2648                           ;screenDrawers.h: 298: drawSNquest(2);
  2649  00501C  0E02               	movlw	2
  2650  00501E  ECEB  F025         	call	_drawSNquest
  2651                           
  2652                           ;screenDrawers.h: 299: break;
  2653  005022  0012               	return	
  2654  005024                     l10328:
  2655                           
  2656                           ;screenDrawers.h: 301: if(screen_calibVelRes)
  2657  005024  0101               	movlb	1	; () banked
  2658  005026  515C               	movf	_screen_calibVelRes& (0+255),w,b
  2659  005028  0101               	movlb	1	; () banked
  2660  00502A  B4D8               	btfsc	status,2,c
  2661  00502C  D003               	goto	l10332
  2662                           
  2663                           ; BSR set to: 1
  2664                           ;screenDrawers.h: 302: drawAutoCalibRes();
  2665  00502E  EC6B  F02E         	call	_drawAutoCalibRes	;wreg free
  2666  005032  0012               	return	
  2667  005034                     l10332:
  2668                           
  2669                           ;screenDrawers.h: 303: else
  2670                           ;screenDrawers.h: 304: drawSNquest(3);
  2671  005034  0E03               	movlw	3
  2672  005036  ECEB  F025         	call	_drawSNquest
  2673                           
  2674                           ;screenDrawers.h: 305: break;
  2675  00503A  0012               	return	
  2676  00503C                     l10334:
  2677                           
  2678                           ;screenDrawers.h: 307: drawAutoCalibRM();
  2679  00503C  EC0B  F02E         	call	_drawAutoCalibRM	;wreg free
  2680                           
  2681                           ;screenDrawers.h: 309: }
  2682                           ;screenDrawers.h: 310: }
  2683                           
  2684                           ;screenDrawers.h: 308: break;
  2685  005040  0012               	return	
  2686  005042                     l10338:
  2687  005042  0100               	movlb	0	; () banked
  2688  005044  51D3               	movf	_actualScreen& (0+255),w,b
  2689                           
  2690                           ; Switch size 1, requested type "space"
  2691                           ; Number of cases is 12, Range of values is 0 to 11
  2692                           ; switch strategies available:
  2693                           ; Name         Instructions Cycles
  2694                           ; simple_byte           37    19 (average)
  2695                           ;	Chosen strategy is simple_byte
  2696  005046  0A00               	xorlw	0	; case 0
  2697  005048  B4D8               	btfsc	status,2,c
  2698  00504A  D7C9               	goto	l10308
  2699  00504C  0A01               	xorlw	1	; case 1
  2700  00504E  B4D8               	btfsc	status,2,c
  2701  005050  D7CA               	goto	l10310
  2702  005052  0A03               	xorlw	3	; case 2
  2703  005054  B4D8               	btfsc	status,2,c
  2704  005056  D7DA               	goto	l10322
  2705  005058  0A01               	xorlw	1	; case 3
  2706  00505A  B4D8               	btfsc	status,2,c
  2707  00505C  D7DB               	goto	l10324
  2708  00505E  0A07               	xorlw	7	; case 4
  2709  005060  B4D8               	btfsc	status,2,c
  2710  005062  D7C7               	goto	l10314
  2711  005064  0A01               	xorlw	1	; case 5
  2712  005066  B4D8               	btfsc	status,2,c
  2713  005068  D7CE               	goto	l10320
  2714  00506A  0A03               	xorlw	3	; case 6
  2715  00506C  B4D8               	btfsc	status,2,c
  2716  00506E  D7DA               	goto	l10328
  2717  005070  0A01               	xorlw	1	; case 7
  2718  005072  B4D8               	btfsc	status,2,c
  2719  005074  D7BB               	goto	l10312
  2720  005076  0A0F               	xorlw	15	; case 8
  2721  005078  B4D8               	btfsc	status,2,c
  2722  00507A  D7BF               	goto	l10316
  2723  00507C  0A01               	xorlw	1	; case 9
  2724  00507E  B4D8               	btfsc	status,2,c
  2725  005080  D7BF               	goto	l10318
  2726  005082  0A03               	xorlw	3	; case 10
  2727  005084  B4D8               	btfsc	status,2,c
  2728  005086  D7CA               	goto	l10326
  2729  005088  0A01               	xorlw	1	; case 11
  2730  00508A  A4D8               	btfss	status,2,c
  2731  00508C  0012               	return	
  2732  00508E  D7D6               	goto	l10334
  2733  005090                     __end_of_drawScreen:
  2734                           	opt stack 0
  2735                           tblptru	equ	0xFF8
  2736                           tblptrh	equ	0xFF7
  2737                           tblptrl	equ	0xFF6
  2738                           tablat	equ	0xFF5
  2739                           prodh	equ	0xFF4
  2740                           prodl	equ	0xFF3
  2741                           intcon	equ	0xFF2
  2742                           postinc0	equ	0xFEE
  2743                           wreg	equ	0xFE8
  2744                           postdec1	equ	0xFE5
  2745                           fsr1l	equ	0xFE1
  2746                           indf2	equ	0xFDF
  2747                           fsr2h	equ	0xFDA
  2748                           fsr2l	equ	0xFD9
  2749                           status	equ	0xFD8
  2750                           
  2751 ;; *************** function _drawSNquest *****************
  2752 ;; Defined at:
  2753 ;;		line 238 in file "source/screenDrawers.h"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  tq              1    wreg     unsigned char 
  2756 ;; Auto vars:     Size  Location     Type
  2757 ;;  tq              1  107[BANK0 ] unsigned char 
  2758 ;;  i               2  105[BANK0 ] int 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2768 ;;      Params:         0       0       0       0       0       0       0
  2769 ;;      Locals:         0       3       0       0       0       0       0
  2770 ;;      Temps:          0       0       0       0       0       0       0
  2771 ;;      Totals:         0       3       0       0       0       0       0
  2772 ;;Total ram usage:        3 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:   15
  2775 ;; This function calls:
  2776 ;;		_lcd_gotoxy
  2777 ;;		_printf
  2778 ;; This function is called by:
  2779 ;;		_drawScreen
  2780 ;; This function uses a non-reentrant model
  2781 ;;
  2782                           
  2783                           	psect	text6
  2784  004BD6                     __ptext6:
  2785                           	opt stack 0
  2786  004BD6                     _drawSNquest:
  2787                           	opt stack 14
  2788                           
  2789                           ;incstack = 0
  2790                           ;drawSNquest@tq stored from wreg
  2791  004BD6  0100               	movlb	0	; () banked
  2792  004BD8  6FCB               	movwf	drawSNquest@tq& (0+255),b
  2793                           
  2794                           ;screenDrawers.h: 239: int i;
  2795                           ;screenDrawers.h: 240: for (i = 0; i < 2; i++)
  2796  004BDA  0E00               	movlw	0
  2797  004BDC  0100               	movlb	0	; () banked
  2798  004BDE  6FCA               	movwf	(drawSNquest@i+1)& (0+255),b
  2799  004BE0  0E00               	movlw	0
  2800  004BE2  6FC9               	movwf	drawSNquest@i& (0+255),b
  2801  004BE4                     l9986:
  2802                           
  2803                           ; BSR set to: 0
  2804  004BE4  0100               	movlb	0	; () banked
  2805  004BE6  BFCA               	btfsc	(drawSNquest@i+1)& (0+255),7,b
  2806  004BE8  D008               	goto	l9990
  2807  004BEA  0100               	movlb	0	; () banked
  2808  004BEC  51CA               	movf	(drawSNquest@i+1)& (0+255),w,b
  2809  004BEE  E113               	bnz	l9996
  2810  004BF0  0E02               	movlw	2
  2811  004BF2  0100               	movlb	0	; () banked
  2812  004BF4  5DC9               	subwf	drawSNquest@i& (0+255),w,b
  2813  004BF6  B0D8               	btfsc	status,0,c
  2814  004BF8  D00E               	goto	l9996
  2815  004BFA                     l9990:
  2816                           
  2817                           ; BSR set to: 0
  2818                           ;screenDrawers.h: 241: questSN[i] = ' ';
  2819  004BFA  0E4E               	movlw	low _questSN
  2820  004BFC  0100               	movlb	0	; () banked
  2821  004BFE  25C9               	addwf	drawSNquest@i& (0+255),w,b
  2822  004C00  6ED9               	movwf	fsr2l,c
  2823  004C02  0E01               	movlw	high _questSN
  2824  004C04  0100               	movlb	0	; () banked
  2825  004C06  21CA               	addwfc	(drawSNquest@i+1)& (0+255),w,b
  2826  004C08  6EDA               	movwf	fsr2h,c
  2827  004C0A  0E20               	movlw	32
  2828  004C0C  6EDF               	movwf	indf2,c
  2829                           
  2830                           ; BSR set to: 0
  2831  004C0E  0100               	movlb	0	; () banked
  2832  004C10  4BC9               	infsnz	drawSNquest@i& (0+255),f,b
  2833  004C12  2BCA               	incf	(drawSNquest@i+1)& (0+255),f,b
  2834  004C14  D7E7               	goto	l9986
  2835  004C16                     l9996:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;screenDrawers.h: 242: questSN[selSN] = 0b01111110;
  2839  004C16  0100               	movlb	0	; () banked
  2840  004C18  51D9               	movf	_selSN& (0+255),w,b
  2841  004C1A  0D01               	mullw	1
  2842  004C1C  0E4E               	movlw	low _questSN
  2843  004C1E  24F3               	addwf	prodl,w,c
  2844  004C20  6ED9               	movwf	fsr2l,c
  2845  004C22  0E01               	movlw	high _questSN
  2846  004C24  20F4               	addwfc	prodh,w,c
  2847  004C26  6EDA               	movwf	fsr2h,c
  2848  004C28  0E7E               	movlw	126
  2849  004C2A  6EDF               	movwf	indf2,c
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;screenDrawers.h: 243: lcd_gotoxy(1, 1);
  2853  004C2C  0E01               	movlw	1
  2854  004C2E  0100               	movlb	0	; () banked
  2855  004C30  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2856  004C32  0E01               	movlw	1
  2857  004C34  EC24  F02E         	call	_lcd_gotoxy
  2858                           
  2859                           ;screenDrawers.h: 244: if (tq == 0)
  2860  004C38  0100               	movlb	0	; () banked
  2861  004C3A  51CB               	movf	drawSNquest@tq& (0+255),w,b
  2862  004C3C  0100               	movlb	0	; () banked
  2863  004C3E  A4D8               	btfss	status,2,c
  2864  004C40  D009               	goto	l10004
  2865                           
  2866                           ; BSR set to: 0
  2867                           ;screenDrawers.h: 245: printf("Iniciar Proceso?\n");
  2868  004C42  0E81               	movlw	low STR_43
  2869  004C44  0101               	movlb	1	; () banked
  2870  004C46  6F00               	movwf	printf@f& (0+255),b
  2871  004C48  0E7E               	movlw	high STR_43
  2872  004C4A  0101               	movlb	1	; () banked
  2873  004C4C  6F01               	movwf	(printf@f+1)& (0+255),b
  2874  004C4E  EC5B  F000         	call	_printf	;wreg free
  2875  004C52  D028               	goto	l437
  2876  004C54                     l10004:
  2877                           
  2878                           ;screenDrawers.h: 246: else if(tq == 1)
  2879  004C54  0100               	movlb	0	; () banked
  2880  004C56  05CB               	decf	drawSNquest@tq& (0+255),w,b
  2881  004C58  A4D8               	btfss	status,2,c
  2882  004C5A  D009               	goto	l10008
  2883                           
  2884                           ; BSR set to: 0
  2885                           ;screenDrawers.h: 247: printf("Detener Proceso?\n");
  2886  004C5C  0E93               	movlw	low STR_44
  2887  004C5E  0101               	movlb	1	; () banked
  2888  004C60  6F00               	movwf	printf@f& (0+255),b
  2889  004C62  0E7E               	movlw	high STR_44
  2890  004C64  0101               	movlb	1	; () banked
  2891  004C66  6F01               	movwf	(printf@f+1)& (0+255),b
  2892  004C68  EC5B  F000         	call	_printf	;wreg free
  2893  004C6C  D01B               	goto	l437
  2894  004C6E                     l10008:
  2895                           
  2896                           ;screenDrawers.h: 248: else if(tq == 2)
  2897  004C6E  0E02               	movlw	2
  2898  004C70  0100               	movlb	0	; () banked
  2899  004C72  19CB               	xorwf	drawSNquest@tq& (0+255),w,b
  2900  004C74  A4D8               	btfss	status,2,c
  2901  004C76  D009               	goto	l10012
  2902                           
  2903                           ; BSR set to: 0
  2904                           ;screenDrawers.h: 249: printf("Guardar Cambio? \n");
  2905  004C78  0E39               	movlw	low STR_45
  2906  004C7A  0101               	movlb	1	; () banked
  2907  004C7C  6F00               	movwf	printf@f& (0+255),b
  2908  004C7E  0E7E               	movlw	high STR_45
  2909  004C80  0101               	movlb	1	; () banked
  2910  004C82  6F01               	movwf	(printf@f+1)& (0+255),b
  2911  004C84  EC5B  F000         	call	_printf	;wreg free
  2912  004C88  D00D               	goto	l437
  2913  004C8A                     l10012:
  2914                           
  2915                           ;screenDrawers.h: 250: else if(tq == 3)
  2916  004C8A  0E03               	movlw	3
  2917  004C8C  0100               	movlb	0	; () banked
  2918  004C8E  19CB               	xorwf	drawSNquest@tq& (0+255),w,b
  2919  004C90  A4D8               	btfss	status,2,c
  2920  004C92  D008               	goto	l437
  2921                           
  2922                           ; BSR set to: 0
  2923                           ;screenDrawers.h: 251: printf("Init autoCalib? \n");
  2924  004C94  0E27               	movlw	low STR_46
  2925  004C96  0101               	movlb	1	; () banked
  2926  004C98  6F00               	movwf	printf@f& (0+255),b
  2927  004C9A  0E7E               	movlw	high STR_46
  2928  004C9C  0101               	movlb	1	; () banked
  2929  004C9E  6F01               	movwf	(printf@f+1)& (0+255),b
  2930  004CA0  EC5B  F000         	call	_printf	;wreg free
  2931  004CA4                     l437:
  2932                           
  2933                           ;screenDrawers.h: 252: printf("   %cSI    %cNO   ", questSN[0], questSN[1]);
  2934  004CA4  0E96               	movlw	low STR_47
  2935  004CA6  0101               	movlb	1	; () banked
  2936  004CA8  6F00               	movwf	printf@f& (0+255),b
  2937  004CAA  0E7D               	movlw	high STR_47
  2938  004CAC  0101               	movlb	1	; () banked
  2939  004CAE  6F01               	movwf	(printf@f+1)& (0+255),b
  2940  004CB0  C14E  F102         	movff	_questSN,?_printf+2
  2941  004CB4  0101               	movlb	1	; () banked
  2942  004CB6  6B03               	clrf	(?_printf+3)& (0+255),b
  2943  004CB8  C14F  F104         	movff	_questSN+1,?_printf+4
  2944  004CBC  0101               	movlb	1	; () banked
  2945  004CBE  6B05               	clrf	(?_printf+5)& (0+255),b
  2946  004CC0  EC5B  F000         	call	_printf	;wreg free
  2947  004CC4  0012               	return		;funcret
  2948  004CC6                     __end_of_drawSNquest:
  2949                           	opt stack 0
  2950                           tblptru	equ	0xFF8
  2951                           tblptrh	equ	0xFF7
  2952                           tblptrl	equ	0xFF6
  2953                           tablat	equ	0xFF5
  2954                           prodh	equ	0xFF4
  2955                           prodl	equ	0xFF3
  2956                           intcon	equ	0xFF2
  2957                           postinc0	equ	0xFEE
  2958                           wreg	equ	0xFE8
  2959                           postdec1	equ	0xFE5
  2960                           fsr1l	equ	0xFE1
  2961                           indf2	equ	0xFDF
  2962                           fsr2h	equ	0xFDA
  2963                           fsr2l	equ	0xFD9
  2964                           status	equ	0xFD8
  2965                           
  2966 ;; *************** function _drawPassWord *****************
  2967 ;; Defined at:
  2968 ;;		line 201 in file "source/screenDrawers.h"
  2969 ;; Parameters:    Size  Location     Type
  2970 ;;		None
  2971 ;; Auto vars:     Size  Location     Type
  2972 ;;  i               2  105[BANK0 ] int 
  2973 ;; Return value:  Size  Location     Type
  2974 ;;                  1    wreg      void 
  2975 ;; Registers used:
  2976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2977 ;; Tracked objects:
  2978 ;;		On entry : 0/0
  2979 ;;		On exit  : 0/0
  2980 ;;		Unchanged: 0/0
  2981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2982 ;;      Params:         0       0       0       0       0       0       0
  2983 ;;      Locals:         0       2       0       0       0       0       0
  2984 ;;      Temps:          0       0       0       0       0       0       0
  2985 ;;      Totals:         0       2       0       0       0       0       0
  2986 ;;Total ram usage:        2 bytes
  2987 ;; Hardware stack levels used:    1
  2988 ;; Hardware stack levels required when called:   15
  2989 ;; This function calls:
  2990 ;;		_lcd_gotoxy
  2991 ;;		_printf
  2992 ;; This function is called by:
  2993 ;;		_drawScreen
  2994 ;; This function uses a non-reentrant model
  2995 ;;
  2996                           
  2997                           	psect	text7
  2998  004AD0                     __ptext7:
  2999                           	opt stack 0
  3000  004AD0                     _drawPassWord:
  3001                           	opt stack 14
  3002                           
  3003                           ;screenDrawers.h: 202: if (!fd) {
  3004                           
  3005                           ;incstack = 0
  3006  004AD0  0101               	movlb	1	; () banked
  3007  004AD2  5158               	movf	_fd& (0+255),w,b
  3008  004AD4  0101               	movlb	1	; () banked
  3009  004AD6  A4D8               	btfss	status,2,c
  3010  004AD8  D012               	goto	l419
  3011                           
  3012                           ; BSR set to: 1
  3013                           ;screenDrawers.h: 203: passSection = 0;
  3014  004ADA  0E00               	movlw	0
  3015  004ADC  0100               	movlb	0	; () banked
  3016  004ADE  6FD7               	movwf	_passSection& (0+255),b
  3017                           
  3018                           ;screenDrawers.h: 204: introducido[0] = 0;
  3019  004AE0  0E00               	movlw	0
  3020  004AE2  0101               	movlb	1	; () banked
  3021  004AE4  6F3F               	movwf	_introducido& (0+255),b
  3022                           
  3023                           ;screenDrawers.h: 205: introducido[1] = 0;
  3024  004AE6  0E00               	movlw	0
  3025  004AE8  0101               	movlb	1	; () banked
  3026  004AEA  6F40               	movwf	(_introducido+1)& (0+255),b
  3027                           
  3028                           ;screenDrawers.h: 206: introducido[2] = 0;
  3029  004AEC  0E00               	movlw	0
  3030  004AEE  0101               	movlb	1	; () banked
  3031  004AF0  6F41               	movwf	(_introducido+2)& (0+255),b
  3032                           
  3033                           ;screenDrawers.h: 207: introducido[3] = 0;
  3034  004AF2  0E00               	movlw	0
  3035  004AF4  0101               	movlb	1	; () banked
  3036  004AF6  6F42               	movwf	(_introducido+3)& (0+255),b
  3037                           
  3038                           ;screenDrawers.h: 208: fd = 1;
  3039  004AF8  0E01               	movlw	1
  3040  004AFA  0101               	movlb	1	; () banked
  3041  004AFC  6F58               	movwf	_fd& (0+255),b
  3042  004AFE                     l419:
  3043                           
  3044                           ; BSR set to: 1
  3045                           ;screenDrawers.h: 209: }
  3046                           ;screenDrawers.h: 210: int i;
  3047                           ;screenDrawers.h: 211: for (i = 0; i < 4; i++)
  3048  004AFE  0E00               	movlw	0
  3049  004B00  0100               	movlb	0	; () banked
  3050  004B02  6FCA               	movwf	(drawPassWord@i+1)& (0+255),b
  3051  004B04  0E00               	movlw	0
  3052  004B06  6FC9               	movwf	drawPassWord@i& (0+255),b
  3053  004B08                     l9948:
  3054                           
  3055                           ; BSR set to: 0
  3056  004B08  0100               	movlb	0	; () banked
  3057  004B0A  BFCA               	btfsc	(drawPassWord@i+1)& (0+255),7,b
  3058  004B0C  D008               	goto	l9952
  3059  004B0E  0100               	movlb	0	; () banked
  3060  004B10  51CA               	movf	(drawPassWord@i+1)& (0+255),w,b
  3061  004B12  E113               	bnz	l9958
  3062  004B14  0E04               	movlw	4
  3063  004B16  0100               	movlb	0	; () banked
  3064  004B18  5DC9               	subwf	drawPassWord@i& (0+255),w,b
  3065  004B1A  B0D8               	btfsc	status,0,c
  3066  004B1C  D00E               	goto	l9958
  3067  004B1E                     l9952:
  3068                           
  3069                           ; BSR set to: 0
  3070                           ;screenDrawers.h: 212: passChar[i] = ' ';
  3071  004B1E  0E43               	movlw	low _passChar
  3072  004B20  0100               	movlb	0	; () banked
  3073  004B22  25C9               	addwf	drawPassWord@i& (0+255),w,b
  3074  004B24  6ED9               	movwf	fsr2l,c
  3075  004B26  0E01               	movlw	high _passChar
  3076  004B28  0100               	movlb	0	; () banked
  3077  004B2A  21CA               	addwfc	(drawPassWord@i+1)& (0+255),w,b
  3078  004B2C  6EDA               	movwf	fsr2h,c
  3079  004B2E  0E20               	movlw	32
  3080  004B30  6EDF               	movwf	indf2,c
  3081                           
  3082                           ; BSR set to: 0
  3083  004B32  0100               	movlb	0	; () banked
  3084  004B34  4BC9               	infsnz	drawPassWord@i& (0+255),f,b
  3085  004B36  2BCA               	incf	(drawPassWord@i+1)& (0+255),f,b
  3086  004B38  D7E7               	goto	l9948
  3087  004B3A                     l9958:
  3088                           
  3089                           ; BSR set to: 0
  3090                           ;screenDrawers.h: 213: passChar[passSection] = 0b01111110;
  3091  004B3A  0100               	movlb	0	; () banked
  3092  004B3C  51D7               	movf	_passSection& (0+255),w,b
  3093  004B3E  0D01               	mullw	1
  3094  004B40  0E43               	movlw	low _passChar
  3095  004B42  24F3               	addwf	prodl,w,c
  3096  004B44  6ED9               	movwf	fsr2l,c
  3097  004B46  0E01               	movlw	high _passChar
  3098  004B48  20F4               	addwfc	prodh,w,c
  3099  004B4A  6EDA               	movwf	fsr2h,c
  3100  004B4C  0E7E               	movlw	126
  3101  004B4E  6EDF               	movwf	indf2,c
  3102                           
  3103                           ; BSR set to: 0
  3104                           ;screenDrawers.h: 214: lcd_gotoxy(1, 1);
  3105  004B50  0E01               	movlw	1
  3106  004B52  0100               	movlb	0	; () banked
  3107  004B54  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3108  004B56  0E01               	movlw	1
  3109  004B58  EC24  F02E         	call	_lcd_gotoxy
  3110                           
  3111                           ;screenDrawers.h: 215: printf("Contrasena:     \n");
  3112  004B5C  0EBB               	movlw	low STR_35
  3113  004B5E  0101               	movlb	1	; () banked
  3114  004B60  6F00               	movwf	printf@f& (0+255),b
  3115  004B62  0E7D               	movlw	high STR_35
  3116  004B64  0101               	movlb	1	; () banked
  3117  004B66  6F01               	movwf	(printf@f+1)& (0+255),b
  3118  004B68  EC5B  F000         	call	_printf	;wreg free
  3119                           
  3120                           ;screenDrawers.h: 216: printf("    %c%u%c%u%c%u%c%u    ", passChar[0], introducido[0], p
      +                          assChar[1], introducido[1],
  3121                           ;screenDrawers.h: 217: passChar[2], introducido[2], passChar[3], introducido[3]);
  3122  004B6C  0E69               	movlw	low STR_36
  3123  004B6E  0101               	movlb	1	; () banked
  3124  004B70  6F00               	movwf	printf@f& (0+255),b
  3125  004B72  0E7D               	movlw	high STR_36
  3126  004B74  0101               	movlb	1	; () banked
  3127  004B76  6F01               	movwf	(printf@f+1)& (0+255),b
  3128  004B78  C143  F102         	movff	_passChar,?_printf+2
  3129  004B7C  0101               	movlb	1	; () banked
  3130  004B7E  6B03               	clrf	(?_printf+3)& (0+255),b
  3131  004B80  0101               	movlb	1	; () banked
  3132  004B82  513F               	movf	_introducido& (0+255),w,b
  3133  004B84  0101               	movlb	1	; () banked
  3134  004B86  6F04               	movwf	(?_printf+4)& (0+255),b
  3135  004B88  6B05               	clrf	(?_printf+5)& (0+255),b
  3136  004B8A  BF04               	btfsc	(?_printf+4)& (0+255),7,b
  3137  004B8C  0705               	decf	(?_printf+5)& (0+255),f,b
  3138  004B8E  C144  F106         	movff	_passChar+1,?_printf+6
  3139  004B92  0101               	movlb	1	; () banked
  3140  004B94  6B07               	clrf	(?_printf+7)& (0+255),b
  3141  004B96  0101               	movlb	1	; () banked
  3142  004B98  5140               	movf	(_introducido+1)& (0+255),w,b
  3143  004B9A  0101               	movlb	1	; () banked
  3144  004B9C  6F08               	movwf	(?_printf+8)& (0+255),b
  3145  004B9E  6B09               	clrf	(?_printf+9)& (0+255),b
  3146  004BA0  BF08               	btfsc	(?_printf+8)& (0+255),7,b
  3147  004BA2  0709               	decf	(?_printf+9)& (0+255),f,b
  3148  004BA4  C145  F10A         	movff	_passChar+2,?_printf+10
  3149  004BA8  0101               	movlb	1	; () banked
  3150  004BAA  6B0B               	clrf	(?_printf+11)& (0+255),b
  3151  004BAC  0101               	movlb	1	; () banked
  3152  004BAE  5141               	movf	(_introducido+2)& (0+255),w,b
  3153  004BB0  0101               	movlb	1	; () banked
  3154  004BB2  6F0C               	movwf	(?_printf+12)& (0+255),b
  3155  004BB4  6B0D               	clrf	(?_printf+13)& (0+255),b
  3156  004BB6  BF0C               	btfsc	(?_printf+12)& (0+255),7,b
  3157  004BB8  070D               	decf	(?_printf+13)& (0+255),f,b
  3158  004BBA  C146  F10E         	movff	_passChar+3,?_printf+14
  3159  004BBE  0101               	movlb	1	; () banked
  3160  004BC0  6B0F               	clrf	(?_printf+15)& (0+255),b
  3161  004BC2  0101               	movlb	1	; () banked
  3162  004BC4  5142               	movf	(_introducido+3)& (0+255),w,b
  3163  004BC6  0101               	movlb	1	; () banked
  3164  004BC8  6F10               	movwf	(?_printf+16)& (0+255),b
  3165  004BCA  6B11               	clrf	(?_printf+17)& (0+255),b
  3166  004BCC  BF10               	btfsc	(?_printf+16)& (0+255),7,b
  3167  004BCE  0711               	decf	(?_printf+17)& (0+255),f,b
  3168  004BD0  EC5B  F000         	call	_printf	;wreg free
  3169  004BD4  0012               	return		;funcret
  3170  004BD6                     __end_of_drawPassWord:
  3171                           	opt stack 0
  3172                           tblptru	equ	0xFF8
  3173                           tblptrh	equ	0xFF7
  3174                           tblptrl	equ	0xFF6
  3175                           tablat	equ	0xFF5
  3176                           prodh	equ	0xFF4
  3177                           prodl	equ	0xFF3
  3178                           intcon	equ	0xFF2
  3179                           postinc0	equ	0xFEE
  3180                           wreg	equ	0xFE8
  3181                           postdec1	equ	0xFE5
  3182                           fsr1l	equ	0xFE1
  3183                           indf2	equ	0xFDF
  3184                           fsr2h	equ	0xFDA
  3185                           fsr2l	equ	0xFD9
  3186                           status	equ	0xFD8
  3187                           
  3188 ;; *************** function _drawMenu *****************
  3189 ;; Defined at:
  3190 ;;		line 61 in file "source/screenDrawers.h"
  3191 ;; Parameters:    Size  Location     Type
  3192 ;;  adv             1    wreg     unsigned char 
  3193 ;; Auto vars:     Size  Location     Type
  3194 ;;  adv             1  105[BANK0 ] unsigned char 
  3195 ;; Return value:  Size  Location     Type
  3196 ;;                  1    wreg      void 
  3197 ;; Registers used:
  3198 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3199 ;; Tracked objects:
  3200 ;;		On entry : 0/0
  3201 ;;		On exit  : 0/0
  3202 ;;		Unchanged: 0/0
  3203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3204 ;;      Params:         0       0       0       0       0       0       0
  3205 ;;      Locals:         0       1       0       0       0       0       0
  3206 ;;      Temps:          0       0       0       0       0       0       0
  3207 ;;      Totals:         0       1       0       0       0       0       0
  3208 ;;Total ram usage:        1 bytes
  3209 ;; Hardware stack levels used:    1
  3210 ;; Hardware stack levels required when called:   15
  3211 ;; This function calls:
  3212 ;;		_lcd_gotoxy
  3213 ;;		_lcd_putc
  3214 ;;		_printf
  3215 ;; This function is called by:
  3216 ;;		_drawScreen
  3217 ;; This function uses a non-reentrant model
  3218 ;;
  3219                           
  3220                           	psect	text8
  3221  001F04                     __ptext8:
  3222                           	opt stack 0
  3223  001F04                     _drawMenu:
  3224                           	opt stack 14
  3225                           
  3226                           ;incstack = 0
  3227                           ;drawMenu@adv stored from wreg
  3228  001F04  0100               	movlb	0	; () banked
  3229  001F06  6FC9               	movwf	drawMenu@adv& (0+255),b
  3230                           
  3231                           ;screenDrawers.h: 62: switch (menuSection) {
  3232  001F08  D1A6               	goto	l9868
  3233  001F0A                     l9758:
  3234                           
  3235                           ;screenDrawers.h: 64: lcd_gotoxy(1, 1);
  3236  001F0A  0E01               	movlw	1
  3237  001F0C  0100               	movlb	0	; () banked
  3238  001F0E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3239  001F10  0E01               	movlw	1
  3240  001F12  EC24  F02E         	call	_lcd_gotoxy
  3241                           
  3242                           ;screenDrawers.h: 65: printf("Estado proceso: \n");
  3243  001F16  0E15               	movlw	low STR_2
  3244  001F18  0101               	movlb	1	; () banked
  3245  001F1A  6F00               	movwf	printf@f& (0+255),b
  3246  001F1C  0E7E               	movlw	high STR_2
  3247  001F1E  0101               	movlb	1	; () banked
  3248  001F20  6F01               	movwf	(printf@f+1)& (0+255),b
  3249  001F22  EC5B  F000         	call	_printf	;wreg free
  3250                           
  3251                           ;screenDrawers.h: 66: if (adv)
  3252  001F26  0100               	movlb	0	; () banked
  3253  001F28  51C9               	movf	drawMenu@adv& (0+255),w,b
  3254  001F2A  0100               	movlb	0	; () banked
  3255  001F2C  B4D8               	btfsc	status,2,c
  3256  001F2E  D004               	goto	l9766
  3257                           
  3258                           ; BSR set to: 0
  3259                           ;screenDrawers.h: 67: lcd_putc('A');
  3260  001F30  0E41               	movlw	65
  3261  001F32  ECE3  F02A         	call	_lcd_putc
  3262  001F36  D003               	goto	l365
  3263  001F38                     l9766:
  3264                           
  3265                           ;screenDrawers.h: 68: else
  3266                           ;screenDrawers.h: 69: lcd_putc(' ');
  3267  001F38  0E20               	movlw	32
  3268  001F3A  ECE3  F02A         	call	_lcd_putc
  3269  001F3E                     l365:
  3270                           
  3271                           ;screenDrawers.h: 70: lcd_gotoxy(2, 2);
  3272  001F3E  0E02               	movlw	2
  3273  001F40  0100               	movlb	0	; () banked
  3274  001F42  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3275  001F44  0E02               	movlw	2
  3276  001F46  EC24  F02E         	call	_lcd_gotoxy
  3277                           
  3278                           ;screenDrawers.h: 71: if (ProcessStarted)
  3279  001F4A  0100               	movlb	0	; () banked
  3280  001F4C  51D2               	movf	_ProcessStarted& (0+255),w,b
  3281  001F4E  B4D8               	btfsc	status,2,c
  3282  001F50  D011               	goto	l9772
  3283                           
  3284                           ; BSR set to: 0
  3285                           ;screenDrawers.h: 72: printf("   %d / %d    ", proceso, numCortes);
  3286  001F52  0E72               	movlw	low STR_3
  3287  001F54  0101               	movlb	1	; () banked
  3288  001F56  6F00               	movwf	printf@f& (0+255),b
  3289  001F58  0E7F               	movlw	high STR_3
  3290  001F5A  0101               	movlb	1	; () banked
  3291  001F5C  6F01               	movwf	(printf@f+1)& (0+255),b
  3292  001F5E  C14C  F102         	movff	_proceso,?_printf+2
  3293  001F62  C14D  F103         	movff	_proceso+1,?_printf+3
  3294  001F66  C0DF  F104         	movff	_numCortes,?_printf+4
  3295  001F6A  C0E0  F105         	movff	_numCortes+1,?_printf+5
  3296  001F6E  EC5B  F000         	call	_printf	;wreg free
  3297  001F72  0012               	return	
  3298  001F74                     l9772:
  3299                           
  3300                           ;screenDrawers.h: 73: else
  3301                           ;screenDrawers.h: 74: printf("    Detenido    ");
  3302  001F74  0E1E               	movlw	low STR_4
  3303  001F76  0101               	movlb	1	; () banked
  3304  001F78  6F00               	movwf	printf@f& (0+255),b
  3305  001F7A  0E7F               	movlw	high STR_4
  3306  001F7C  0101               	movlb	1	; () banked
  3307  001F7E  6F01               	movwf	(printf@f+1)& (0+255),b
  3308  001F80  EC5B  F000         	call	_printf	;wreg free
  3309                           
  3310                           ;screenDrawers.h: 75: break;
  3311  001F84  0012               	return	
  3312  001F86                     l9774:
  3313                           
  3314                           ;screenDrawers.h: 77: lcd_gotoxy(1, 1);
  3315  001F86  0E01               	movlw	1
  3316  001F88  0100               	movlb	0	; () banked
  3317  001F8A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3318  001F8C  0E01               	movlw	1
  3319  001F8E  EC24  F02E         	call	_lcd_gotoxy
  3320                           
  3321                           ;screenDrawers.h: 78: printf("Proceso en:     \n");
  3322  001F92  0ECD               	movlw	low STR_5
  3323  001F94  0101               	movlb	1	; () banked
  3324  001F96  6F00               	movwf	printf@f& (0+255),b
  3325  001F98  0E7D               	movlw	high STR_5
  3326  001F9A  0101               	movlb	1	; () banked
  3327  001F9C  6F01               	movwf	(printf@f+1)& (0+255),b
  3328  001F9E  EC5B  F000         	call	_printf	;wreg free
  3329                           
  3330                           ;screenDrawers.h: 79: if (adv)
  3331  001FA2  0100               	movlb	0	; () banked
  3332  001FA4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3333  001FA6  0100               	movlb	0	; () banked
  3334  001FA8  B4D8               	btfsc	status,2,c
  3335  001FAA  D004               	goto	l9782
  3336                           
  3337                           ; BSR set to: 0
  3338                           ;screenDrawers.h: 80: lcd_putc('A');
  3339  001FAC  0E41               	movlw	65
  3340  001FAE  ECE3  F02A         	call	_lcd_putc
  3341  001FB2  D003               	goto	l371
  3342  001FB4                     l9782:
  3343                           
  3344                           ;screenDrawers.h: 81: else
  3345                           ;screenDrawers.h: 82: lcd_putc(' ');
  3346  001FB4  0E20               	movlw	32
  3347  001FB6  ECE3  F02A         	call	_lcd_putc
  3348  001FBA                     l371:
  3349                           
  3350                           ;screenDrawers.h: 83: lcd_gotoxy(2, 2);
  3351  001FBA  0E02               	movlw	2
  3352  001FBC  0100               	movlb	0	; () banked
  3353  001FBE  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3354  001FC0  0E02               	movlw	2
  3355  001FC2  EC24  F02E         	call	_lcd_gotoxy
  3356                           
  3357                           ;screenDrawers.h: 84: if(tVarProceso == 0)
  3358  001FC6  0100               	movlb	0	; () banked
  3359  001FC8  51E3               	movf	_tVarProceso& (0+255),w,b
  3360  001FCA  A4D8               	btfss	status,2,c
  3361  001FCC  D009               	goto	l9788
  3362                           
  3363                           ; BSR set to: 0
  3364                           ;screenDrawers.h: 85: printf("       kg        ");
  3365  001FCE  0EB7               	movlw	low STR_6
  3366  001FD0  0101               	movlb	1	; () banked
  3367  001FD2  6F00               	movwf	printf@f& (0+255),b
  3368  001FD4  0E7E               	movlw	high STR_6
  3369  001FD6  0101               	movlb	1	; () banked
  3370  001FD8  6F01               	movwf	(printf@f+1)& (0+255),b
  3371  001FDA  EC5B  F000         	call	_printf	;wreg free
  3372  001FDE  0012               	return	
  3373  001FE0                     l9788:
  3374                           
  3375                           ;screenDrawers.h: 86: else if(tVarProceso == 1)
  3376  001FE0  0100               	movlb	0	; () banked
  3377  001FE2  05E3               	decf	_tVarProceso& (0+255),w,b
  3378  001FE4  A4D8               	btfss	status,2,c
  3379  001FE6  D009               	goto	l9792
  3380                           
  3381                           ; BSR set to: 0
  3382                           ;screenDrawers.h: 87: printf("       m3       ");
  3383  001FE8  0EDA               	movlw	low STR_7
  3384  001FEA  0101               	movlb	1	; () banked
  3385  001FEC  6F00               	movwf	printf@f& (0+255),b
  3386  001FEE  0E7E               	movlw	high STR_7
  3387  001FF0  0101               	movlb	1	; () banked
  3388  001FF2  6F01               	movwf	(printf@f+1)& (0+255),b
  3389  001FF4  EC5B  F000         	call	_printf	;wreg free
  3390  001FF8  0012               	return	
  3391  001FFA                     l9792:
  3392                           
  3393                           ;screenDrawers.h: 88: else if(tVarProceso == 2)
  3394  001FFA  0E02               	movlw	2
  3395  001FFC  0100               	movlb	0	; () banked
  3396  001FFE  19E3               	xorwf	_tVarProceso& (0+255),w,b
  3397  002000  A4D8               	btfss	status,2,c
  3398  002002  0012               	return	
  3399                           
  3400                           ; BSR set to: 0
  3401                           ;screenDrawers.h: 89: printf("      sec       ");
  3402  002004  0EEB               	movlw	low STR_8
  3403  002006  0101               	movlb	1	; () banked
  3404  002008  6F00               	movwf	printf@f& (0+255),b
  3405  00200A  0E7E               	movlw	high STR_8
  3406  00200C  0101               	movlb	1	; () banked
  3407  00200E  6F01               	movwf	(printf@f+1)& (0+255),b
  3408  002010  EC5B  F000         	call	_printf	;wreg free
  3409                           
  3410                           ;screenDrawers.h: 90: break;
  3411  002014  0012               	return	
  3412  002016                     l9796:
  3413                           
  3414                           ;screenDrawers.h: 92: lcd_gotoxy(1, 1);
  3415  002016  0E01               	movlw	1
  3416  002018  0100               	movlb	0	; () banked
  3417  00201A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3418  00201C  0E01               	movlw	1
  3419  00201E  EC24  F02E         	call	_lcd_gotoxy
  3420                           
  3421                           ;screenDrawers.h: 93: printf("Valor por Corte:\n");
  3422  002022  0E4B               	movlw	low STR_9
  3423  002024  0101               	movlb	1	; () banked
  3424  002026  6F00               	movwf	printf@f& (0+255),b
  3425  002028  0E7E               	movlw	high STR_9
  3426  00202A  0101               	movlb	1	; () banked
  3427  00202C  6F01               	movwf	(printf@f+1)& (0+255),b
  3428  00202E  EC5B  F000         	call	_printf	;wreg free
  3429                           
  3430                           ;screenDrawers.h: 94: if (adv)
  3431  002032  0100               	movlb	0	; () banked
  3432  002034  51C9               	movf	drawMenu@adv& (0+255),w,b
  3433  002036  0100               	movlb	0	; () banked
  3434  002038  B4D8               	btfsc	status,2,c
  3435  00203A  D004               	goto	l9804
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;screenDrawers.h: 95: lcd_putc('A');
  3439  00203C  0E41               	movlw	65
  3440  00203E  ECE3  F02A         	call	_lcd_putc
  3441  002042  D003               	goto	l379
  3442  002044                     l9804:
  3443                           
  3444                           ;screenDrawers.h: 96: else
  3445                           ;screenDrawers.h: 97: lcd_putc(' ');
  3446  002044  0E20               	movlw	32
  3447  002046  ECE3  F02A         	call	_lcd_putc
  3448  00204A                     l379:
  3449                           
  3450                           ;screenDrawers.h: 98: lcd_gotoxy(2, 2);
  3451  00204A  0E02               	movlw	2
  3452  00204C  0100               	movlb	0	; () banked
  3453  00204E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3454  002050  0E02               	movlw	2
  3455  002052  EC24  F02E         	call	_lcd_gotoxy
  3456                           
  3457                           ;screenDrawers.h: 99: if(tVarProceso == 0)
  3458  002056  0100               	movlb	0	; () banked
  3459  002058  51E3               	movf	_tVarProceso& (0+255),w,b
  3460  00205A  A4D8               	btfss	status,2,c
  3461  00205C  D011               	goto	l9810
  3462                           
  3463                           ; BSR set to: 0
  3464                           ;screenDrawers.h: 100: printf("   %3.3f kg   ", kgXcorte);
  3465  00205E  0E90               	movlw	low STR_10
  3466  002060  0101               	movlb	1	; () banked
  3467  002062  6F00               	movwf	printf@f& (0+255),b
  3468  002064  0E7F               	movlw	high STR_10
  3469  002066  0101               	movlb	1	; () banked
  3470  002068  6F01               	movwf	(printf@f+1)& (0+255),b
  3471  00206A  C0DB  F102         	movff	_kgXcorte,?_printf+2
  3472  00206E  C0DC  F103         	movff	_kgXcorte+1,?_printf+3
  3473  002072  C0DD  F104         	movff	_kgXcorte+2,?_printf+4
  3474  002076  C0DE  F105         	movff	_kgXcorte+3,?_printf+5
  3475  00207A  EC5B  F000         	call	_printf	;wreg free
  3476  00207E  0012               	return	
  3477  002080                     l9810:
  3478                           
  3479                           ;screenDrawers.h: 101: else if(tVarProceso == 1)
  3480  002080  0100               	movlb	0	; () banked
  3481  002082  05E3               	decf	_tVarProceso& (0+255),w,b
  3482  002084  A4D8               	btfss	status,2,c
  3483  002086  D011               	goto	l9814
  3484                           
  3485                           ; BSR set to: 0
  3486                           ;screenDrawers.h: 102: printf("   %3.3f m3   ", m3Xcorte);
  3487  002088  0E81               	movlw	low STR_11
  3488  00208A  0101               	movlb	1	; () banked
  3489  00208C  6F00               	movwf	printf@f& (0+255),b
  3490  00208E  0E7F               	movlw	high STR_11
  3491  002090  0101               	movlb	1	; () banked
  3492  002092  6F01               	movwf	(printf@f+1)& (0+255),b
  3493  002094  C037  F102         	movff	_m3Xcorte,?_printf+2
  3494  002098  C038  F103         	movff	_m3Xcorte+1,?_printf+3
  3495  00209C  C039  F104         	movff	_m3Xcorte+2,?_printf+4
  3496  0020A0  C03A  F105         	movff	_m3Xcorte+3,?_printf+5
  3497  0020A4  EC5B  F000         	call	_printf	;wreg free
  3498  0020A8  0012               	return	
  3499  0020AA                     l9814:
  3500                           
  3501                           ;screenDrawers.h: 103: else if(tVarProceso == 2)
  3502  0020AA  0E02               	movlw	2
  3503  0020AC  0100               	movlb	0	; () banked
  3504  0020AE  19E3               	xorwf	_tVarProceso& (0+255),w,b
  3505  0020B0  A4D8               	btfss	status,2,c
  3506  0020B2  0012               	return	
  3507                           
  3508                           ; BSR set to: 0
  3509                           ;screenDrawers.h: 104: printf("   %3.3f sec  ", tiXcorte);
  3510  0020B4  0EAE               	movlw	low STR_12
  3511  0020B6  0101               	movlb	1	; () banked
  3512  0020B8  6F00               	movwf	printf@f& (0+255),b
  3513  0020BA  0E7F               	movlw	high STR_12
  3514  0020BC  0101               	movlb	1	; () banked
  3515  0020BE  6F01               	movwf	(printf@f+1)& (0+255),b
  3516  0020C0  C03B  F102         	movff	_tiXcorte,?_printf+2
  3517  0020C4  C03C  F103         	movff	_tiXcorte+1,?_printf+3
  3518  0020C8  C03D  F104         	movff	_tiXcorte+2,?_printf+4
  3519  0020CC  C03E  F105         	movff	_tiXcorte+3,?_printf+5
  3520  0020D0  EC5B  F000         	call	_printf	;wreg free
  3521                           
  3522                           ;screenDrawers.h: 105: break;
  3523  0020D4  0012               	return	
  3524  0020D6                     l9818:
  3525                           
  3526                           ;screenDrawers.h: 107: lcd_gotoxy(1, 1);
  3527  0020D6  0E01               	movlw	1
  3528  0020D8  0100               	movlb	0	; () banked
  3529  0020DA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3530  0020DC  0E01               	movlw	1
  3531  0020DE  EC24  F02E         	call	_lcd_gotoxy
  3532                           
  3533                           ;screenDrawers.h: 108: printf("Cantidad Cortes:\n");
  3534  0020E2  0E6F               	movlw	low STR_13
  3535  0020E4  0101               	movlb	1	; () banked
  3536  0020E6  6F00               	movwf	printf@f& (0+255),b
  3537  0020E8  0E7E               	movlw	high STR_13
  3538  0020EA  0101               	movlb	1	; () banked
  3539  0020EC  6F01               	movwf	(printf@f+1)& (0+255),b
  3540  0020EE  EC5B  F000         	call	_printf	;wreg free
  3541                           
  3542                           ;screenDrawers.h: 109: if (adv)
  3543  0020F2  0100               	movlb	0	; () banked
  3544  0020F4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3545  0020F6  0100               	movlb	0	; () banked
  3546  0020F8  B4D8               	btfsc	status,2,c
  3547  0020FA  D004               	goto	l9826
  3548                           
  3549                           ; BSR set to: 0
  3550                           ;screenDrawers.h: 110: lcd_putc('A');
  3551  0020FC  0E41               	movlw	65
  3552  0020FE  ECE3  F02A         	call	_lcd_putc
  3553  002102  D003               	goto	l387
  3554  002104                     l9826:
  3555                           
  3556                           ;screenDrawers.h: 111: else
  3557                           ;screenDrawers.h: 112: lcd_putc(' ');
  3558  002104  0E20               	movlw	32
  3559  002106  ECE3  F02A         	call	_lcd_putc
  3560  00210A                     l387:
  3561                           
  3562                           ;screenDrawers.h: 113: lcd_gotoxy(2, 2);
  3563  00210A  0E02               	movlw	2
  3564  00210C  0100               	movlb	0	; () banked
  3565  00210E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3566  002110  0E02               	movlw	2
  3567  002112  EC24  F02E         	call	_lcd_gotoxy
  3568                           
  3569                           ;screenDrawers.h: 114: printf("      %d       ", numCortes);
  3570  002116  0E62               	movlw	low STR_14
  3571  002118  0101               	movlb	1	; () banked
  3572  00211A  6F00               	movwf	printf@f& (0+255),b
  3573  00211C  0E7F               	movlw	high STR_14
  3574  00211E  0101               	movlb	1	; () banked
  3575  002120  6F01               	movwf	(printf@f+1)& (0+255),b
  3576  002122  C0DF  F102         	movff	_numCortes,?_printf+2
  3577  002126  C0E0  F103         	movff	_numCortes+1,?_printf+3
  3578  00212A  EC5B  F000         	call	_printf	;wreg free
  3579                           
  3580                           ;screenDrawers.h: 115: break;
  3581  00212E  0012               	return	
  3582  002130                     l9830:
  3583                           
  3584                           ;screenDrawers.h: 117: lcd_gotoxy(1, 1);
  3585  002130  0E01               	movlw	1
  3586  002132  0100               	movlb	0	; () banked
  3587  002134  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3588  002136  0E01               	movlw	1
  3589  002138  EC24  F02E         	call	_lcd_gotoxy
  3590                           
  3591                           ;screenDrawers.h: 118: printf("Diametro Tubo:  \n");
  3592  00213C  0EF1               	movlw	low STR_15
  3593  00213E  0101               	movlb	1	; () banked
  3594  002140  6F00               	movwf	printf@f& (0+255),b
  3595  002142  0E7D               	movlw	high STR_15
  3596  002144  0101               	movlb	1	; () banked
  3597  002146  6F01               	movwf	(printf@f+1)& (0+255),b
  3598  002148  EC5B  F000         	call	_printf	;wreg free
  3599                           
  3600                           ;screenDrawers.h: 119: if (adv)
  3601  00214C  0100               	movlb	0	; () banked
  3602  00214E  51C9               	movf	drawMenu@adv& (0+255),w,b
  3603  002150  0100               	movlb	0	; () banked
  3604  002152  B4D8               	btfsc	status,2,c
  3605  002154  D004               	goto	l9838
  3606                           
  3607                           ; BSR set to: 0
  3608                           ;screenDrawers.h: 120: lcd_putc('A');
  3609  002156  0E41               	movlw	65
  3610  002158  ECE3  F02A         	call	_lcd_putc
  3611  00215C  D003               	goto	l390
  3612  00215E                     l9838:
  3613                           
  3614                           ;screenDrawers.h: 121: else
  3615                           ;screenDrawers.h: 122: lcd_putc(' ');
  3616  00215E  0E20               	movlw	32
  3617  002160  ECE3  F02A         	call	_lcd_putc
  3618  002164                     l390:
  3619                           
  3620                           ;screenDrawers.h: 123: lcd_gotoxy(2, 2);
  3621  002164  0E02               	movlw	2
  3622  002166  0100               	movlb	0	; () banked
  3623  002168  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3624  00216A  0E02               	movlw	2
  3625  00216C  EC24  F02E         	call	_lcd_gotoxy
  3626                           
  3627                           ;screenDrawers.h: 124: printf("   %3.3f mm   ", diamTubo);
  3628  002170  0E9F               	movlw	low STR_16
  3629  002172  0101               	movlb	1	; () banked
  3630  002174  6F00               	movwf	printf@f& (0+255),b
  3631  002176  0E7F               	movlw	high STR_16
  3632  002178  0101               	movlb	1	; () banked
  3633  00217A  6F01               	movwf	(printf@f+1)& (0+255),b
  3634  00217C  C033  F102         	movff	_diamTubo,?_printf+2
  3635  002180  C034  F103         	movff	_diamTubo+1,?_printf+3
  3636  002184  C035  F104         	movff	_diamTubo+2,?_printf+4
  3637  002188  C036  F105         	movff	_diamTubo+3,?_printf+5
  3638  00218C  EC5B  F000         	call	_printf	;wreg free
  3639                           
  3640                           ;screenDrawers.h: 125: break;
  3641  002190  0012               	return	
  3642  002192                     l9842:
  3643                           
  3644                           ;screenDrawers.h: 127: lcd_gotoxy(1, 1);
  3645  002192  0E01               	movlw	1
  3646  002194  0100               	movlb	0	; () banked
  3647  002196  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3648  002198  0E01               	movlw	1
  3649  00219A  EC24  F02E         	call	_lcd_gotoxy
  3650                           
  3651                           ;screenDrawers.h: 128: printf("Densidad Masa:  \n");
  3652  00219E  0EDF               	movlw	low STR_17
  3653  0021A0  0101               	movlb	1	; () banked
  3654  0021A2  6F00               	movwf	printf@f& (0+255),b
  3655  0021A4  0E7D               	movlw	high STR_17
  3656  0021A6  0101               	movlb	1	; () banked
  3657  0021A8  6F01               	movwf	(printf@f+1)& (0+255),b
  3658  0021AA  EC5B  F000         	call	_printf	;wreg free
  3659                           
  3660                           ;screenDrawers.h: 129: if (adv)
  3661  0021AE  0100               	movlb	0	; () banked
  3662  0021B0  51C9               	movf	drawMenu@adv& (0+255),w,b
  3663  0021B2  0100               	movlb	0	; () banked
  3664  0021B4  B4D8               	btfsc	status,2,c
  3665  0021B6  D004               	goto	l9850
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;screenDrawers.h: 130: lcd_putc('A');
  3669  0021B8  0E41               	movlw	65
  3670  0021BA  ECE3  F02A         	call	_lcd_putc
  3671  0021BE  D003               	goto	l393
  3672  0021C0                     l9850:
  3673                           
  3674                           ;screenDrawers.h: 131: else
  3675                           ;screenDrawers.h: 132: lcd_putc(' ');
  3676  0021C0  0E20               	movlw	32
  3677  0021C2  ECE3  F02A         	call	_lcd_putc
  3678  0021C6                     l393:
  3679                           
  3680                           ;screenDrawers.h: 133: lcd_gotoxy(2, 2);
  3681  0021C6  0E02               	movlw	2
  3682  0021C8  0100               	movlb	0	; () banked
  3683  0021CA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3684  0021CC  0E02               	movlw	2
  3685  0021CE  EC24  F02E         	call	_lcd_gotoxy
  3686                           
  3687                           ;screenDrawers.h: 134: printf("  %3.3f kg/m3 ", densidadMasa);
  3688  0021D2  0ECC               	movlw	low STR_18
  3689  0021D4  0101               	movlb	1	; () banked
  3690  0021D6  6F00               	movwf	printf@f& (0+255),b
  3691  0021D8  0E7F               	movlw	high STR_18
  3692  0021DA  0101               	movlb	1	; () banked
  3693  0021DC  6F01               	movwf	(printf@f+1)& (0+255),b
  3694  0021DE  C02F  F102         	movff	_densidadMasa,?_printf+2
  3695  0021E2  C030  F103         	movff	_densidadMasa+1,?_printf+3
  3696  0021E6  C031  F104         	movff	_densidadMasa+2,?_printf+4
  3697  0021EA  C032  F105         	movff	_densidadMasa+3,?_printf+5
  3698  0021EE  EC5B  F000         	call	_printf	;wreg free
  3699                           
  3700                           ;screenDrawers.h: 135: break;
  3701  0021F2  0012               	return	
  3702  0021F4                     l9854:
  3703                           
  3704                           ;screenDrawers.h: 137: lcd_gotoxy(1, 1);
  3705  0021F4  0E01               	movlw	1
  3706  0021F6  0100               	movlb	0	; () banked
  3707  0021F8  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3708  0021FA  0E01               	movlw	1
  3709  0021FC  EC24  F02E         	call	_lcd_gotoxy
  3710                           
  3711                           ;screenDrawers.h: 138: printf("Velocidad Masa: \n");
  3712  002200  0E03               	movlw	low STR_19
  3713  002202  0101               	movlb	1	; () banked
  3714  002204  6F00               	movwf	printf@f& (0+255),b
  3715  002206  0E7E               	movlw	high STR_19
  3716  002208  0101               	movlb	1	; () banked
  3717  00220A  6F01               	movwf	(printf@f+1)& (0+255),b
  3718  00220C  EC5B  F000         	call	_printf	;wreg free
  3719                           
  3720                           ;screenDrawers.h: 139: if (adv)
  3721  002210  0100               	movlb	0	; () banked
  3722  002212  51C9               	movf	drawMenu@adv& (0+255),w,b
  3723  002214  0100               	movlb	0	; () banked
  3724  002216  B4D8               	btfsc	status,2,c
  3725  002218  D004               	goto	l9862
  3726                           
  3727                           ; BSR set to: 0
  3728                           ;screenDrawers.h: 140: lcd_putc('A');
  3729  00221A  0E41               	movlw	65
  3730  00221C  ECE3  F02A         	call	_lcd_putc
  3731  002220  D003               	goto	l396
  3732  002222                     l9862:
  3733                           
  3734                           ;screenDrawers.h: 141: else
  3735                           ;screenDrawers.h: 142: lcd_putc(' ');
  3736  002222  0E20               	movlw	32
  3737  002224  ECE3  F02A         	call	_lcd_putc
  3738  002228                     l396:
  3739                           
  3740                           ;screenDrawers.h: 143: lcd_gotoxy(2, 2);
  3741  002228  0E02               	movlw	2
  3742  00222A  0100               	movlb	0	; () banked
  3743  00222C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3744  00222E  0E02               	movlw	2
  3745  002230  EC24  F02E         	call	_lcd_gotoxy
  3746                           
  3747                           ;screenDrawers.h: 144: printf("   %3.3f m/s  ", velocidadMasa);
  3748  002234  0EBD               	movlw	low STR_20
  3749  002236  0101               	movlb	1	; () banked
  3750  002238  6F00               	movwf	printf@f& (0+255),b
  3751  00223A  0E7F               	movlw	high STR_20
  3752  00223C  0101               	movlb	1	; () banked
  3753  00223E  6F01               	movwf	(printf@f+1)& (0+255),b
  3754  002240  C03F  F102         	movff	_velocidadMasa,?_printf+2
  3755  002244  C040  F103         	movff	_velocidadMasa+1,?_printf+3
  3756  002248  C041  F104         	movff	_velocidadMasa+2,?_printf+4
  3757  00224C  C042  F105         	movff	_velocidadMasa+3,?_printf+5
  3758  002250  EC5B  F000         	call	_printf	;wreg free
  3759                           
  3760                           ;screenDrawers.h: 146: }
  3761                           ;screenDrawers.h: 147: }
  3762                           
  3763                           ;screenDrawers.h: 145: break;
  3764  002254  0012               	return	
  3765  002256                     l9868:
  3766  002256  0100               	movlb	0	; () banked
  3767  002258  51D6               	movf	_menuSection& (0+255),w,b
  3768                           
  3769                           ; Switch size 1, requested type "space"
  3770                           ; Number of cases is 7, Range of values is 0 to 6
  3771                           ; switch strategies available:
  3772                           ; Name         Instructions Cycles
  3773                           ; simple_byte           22    12 (average)
  3774                           ;	Chosen strategy is simple_byte
  3775  00225A  0A00               	xorlw	0	; case 0
  3776  00225C  B4D8               	btfsc	status,2,c
  3777  00225E  D655               	goto	l9758
  3778  002260  0A01               	xorlw	1	; case 1
  3779  002262  B4D8               	btfsc	status,2,c
  3780  002264  D690               	goto	l9774
  3781  002266  0A03               	xorlw	3	; case 2
  3782  002268  B4D8               	btfsc	status,2,c
  3783  00226A  D6D5               	goto	l9796
  3784  00226C  0A01               	xorlw	1	; case 3
  3785  00226E  B4D8               	btfsc	status,2,c
  3786  002270  D732               	goto	l9818
  3787  002272  0A07               	xorlw	7	; case 4
  3788  002274  B4D8               	btfsc	status,2,c
  3789  002276  D75C               	goto	l9830
  3790  002278  0A01               	xorlw	1	; case 5
  3791  00227A  B4D8               	btfsc	status,2,c
  3792  00227C  D78A               	goto	l9842
  3793  00227E  0A03               	xorlw	3	; case 6
  3794  002280  A4D8               	btfss	status,2,c
  3795  002282  0012               	return	
  3796  002284  D7B7               	goto	l9854
  3797  002286                     __end_of_drawMenu:
  3798                           	opt stack 0
  3799                           tblptru	equ	0xFF8
  3800                           tblptrh	equ	0xFF7
  3801                           tblptrl	equ	0xFF6
  3802                           tablat	equ	0xFF5
  3803                           prodh	equ	0xFF4
  3804                           prodl	equ	0xFF3
  3805                           intcon	equ	0xFF2
  3806                           postinc0	equ	0xFEE
  3807                           wreg	equ	0xFE8
  3808                           postdec1	equ	0xFE5
  3809                           fsr1l	equ	0xFE1
  3810                           indf2	equ	0xFDF
  3811                           fsr2h	equ	0xFDA
  3812                           fsr2l	equ	0xFD9
  3813                           status	equ	0xFD8
  3814                           
  3815 ;; *************** function _drawChanVal *****************
  3816 ;; Defined at:
  3817 ;;		line 150 in file "source/screenDrawers.h"
  3818 ;; Parameters:    Size  Location     Type
  3819 ;;		None
  3820 ;; Auto vars:     Size  Location     Type
  3821 ;;  i               2  105[BANK0 ] int 
  3822 ;; Return value:  Size  Location     Type
  3823 ;;                  1    wreg      void 
  3824 ;; Registers used:
  3825 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3826 ;; Tracked objects:
  3827 ;;		On entry : 0/0
  3828 ;;		On exit  : 0/0
  3829 ;;		Unchanged: 0/0
  3830 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3831 ;;      Params:         0       0       0       0       0       0       0
  3832 ;;      Locals:         0       2       0       0       0       0       0
  3833 ;;      Temps:          0       0       0       0       0       0       0
  3834 ;;      Totals:         0       2       0       0       0       0       0
  3835 ;;Total ram usage:        2 bytes
  3836 ;; Hardware stack levels used:    1
  3837 ;; Hardware stack levels required when called:   16
  3838 ;; This function calls:
  3839 ;;		_drawValEditor
  3840 ;;		_lcd_gotoxy
  3841 ;;		_printf
  3842 ;; This function is called by:
  3843 ;;		_drawScreen
  3844 ;; This function uses a non-reentrant model
  3845 ;;
  3846                           
  3847                           	psect	text9
  3848  00349C                     __ptext9:
  3849                           	opt stack 0
  3850  00349C                     _drawChanVal:
  3851                           	opt stack 13
  3852                           
  3853                           ;screenDrawers.h: 151: switch (menuSection) {
  3854                           
  3855                           ;incstack = 0
  3856  00349C  D0EA               	goto	l9942
  3857  00349E                     l9872:
  3858                           
  3859                           ;screenDrawers.h: 155: int i;
  3860                           ;screenDrawers.h: 156: for (i = 0; i < 4; i++)
  3861  00349E  0E00               	movlw	0
  3862  0034A0  0100               	movlb	0	; () banked
  3863  0034A2  6FCA               	movwf	(drawChanVal@i+1)& (0+255),b
  3864  0034A4  0E00               	movlw	0
  3865  0034A6  6FC9               	movwf	drawChanVal@i& (0+255),b
  3866  0034A8                     l9874:
  3867                           
  3868                           ; BSR set to: 0
  3869  0034A8  0100               	movlb	0	; () banked
  3870  0034AA  BFCA               	btfsc	(drawChanVal@i+1)& (0+255),7,b
  3871  0034AC  D008               	goto	l9878
  3872  0034AE  0100               	movlb	0	; () banked
  3873  0034B0  51CA               	movf	(drawChanVal@i+1)& (0+255),w,b
  3874  0034B2  E113               	bnz	l9884
  3875  0034B4  0E04               	movlw	4
  3876  0034B6  0100               	movlb	0	; () banked
  3877  0034B8  5DC9               	subwf	drawChanVal@i& (0+255),w,b
  3878  0034BA  B0D8               	btfsc	status,0,c
  3879  0034BC  D00E               	goto	l9884
  3880  0034BE                     l9878:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;screenDrawers.h: 157: questKMT[i] = ' ';
  3884  0034BE  0E47               	movlw	low _questKMT
  3885  0034C0  0100               	movlb	0	; () banked
  3886  0034C2  25C9               	addwf	drawChanVal@i& (0+255),w,b
  3887  0034C4  6ED9               	movwf	fsr2l,c
  3888  0034C6  0E01               	movlw	high _questKMT
  3889  0034C8  0100               	movlb	0	; () banked
  3890  0034CA  21CA               	addwfc	(drawChanVal@i+1)& (0+255),w,b
  3891  0034CC  6EDA               	movwf	fsr2h,c
  3892  0034CE  0E20               	movlw	32
  3893  0034D0  6EDF               	movwf	indf2,c
  3894                           
  3895                           ; BSR set to: 0
  3896  0034D2  0100               	movlb	0	; () banked
  3897  0034D4  4BC9               	infsnz	drawChanVal@i& (0+255),f,b
  3898  0034D6  2BCA               	incf	(drawChanVal@i+1)& (0+255),f,b
  3899  0034D8  D7E7               	goto	l9874
  3900  0034DA                     l9884:
  3901                           
  3902                           ; BSR set to: 0
  3903                           ;screenDrawers.h: 158: questKMT[selKMT] = 0b01111110;
  3904  0034DA  0100               	movlb	0	; () banked
  3905  0034DC  51D8               	movf	_selKMT& (0+255),w,b
  3906  0034DE  0D01               	mullw	1
  3907  0034E0  0E47               	movlw	low _questKMT
  3908  0034E2  24F3               	addwf	prodl,w,c
  3909  0034E4  6ED9               	movwf	fsr2l,c
  3910  0034E6  0E01               	movlw	high _questKMT
  3911  0034E8  20F4               	addwfc	prodh,w,c
  3912  0034EA  6EDA               	movwf	fsr2h,c
  3913  0034EC  0E7E               	movlw	126
  3914  0034EE  6EDF               	movwf	indf2,c
  3915                           
  3916                           ; BSR set to: 0
  3917                           ;screenDrawers.h: 159: lcd_gotoxy(1, 1);
  3918  0034F0  0E01               	movlw	1
  3919  0034F2  0100               	movlb	0	; () banked
  3920  0034F4  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3921  0034F6  0E01               	movlw	1
  3922  0034F8  EC24  F02E         	call	_lcd_gotoxy
  3923                           
  3924                           ;screenDrawers.h: 160: printf("Proceso en:     \n");
  3925  0034FC  0ECD               	movlw	low STR_5
  3926  0034FE  0101               	movlb	1	; () banked
  3927  003500  6F00               	movwf	printf@f& (0+255),b
  3928  003502  0E7D               	movlw	high STR_5
  3929  003504  0101               	movlb	1	; () banked
  3930  003506  6F01               	movwf	(printf@f+1)& (0+255),b
  3931  003508  EC5B  F000         	call	_printf	;wreg free
  3932                           
  3933                           ;screenDrawers.h: 161: printf(" %ckg  %cm3  %csec ", questKMT[0], questKMT[1], questKMT[
      +                          2]);
  3934  00350C  0E82               	movlw	low STR_22
  3935  00350E  0101               	movlb	1	; () banked
  3936  003510  6F00               	movwf	printf@f& (0+255),b
  3937  003512  0E7D               	movlw	high STR_22
  3938  003514  0101               	movlb	1	; () banked
  3939  003516  6F01               	movwf	(printf@f+1)& (0+255),b
  3940  003518  C147  F102         	movff	_questKMT,?_printf+2
  3941  00351C  0101               	movlb	1	; () banked
  3942  00351E  6B03               	clrf	(?_printf+3)& (0+255),b
  3943  003520  C148  F104         	movff	_questKMT+1,?_printf+4
  3944  003524  0101               	movlb	1	; () banked
  3945  003526  6B05               	clrf	(?_printf+5)& (0+255),b
  3946  003528  C149  F106         	movff	_questKMT+2,?_printf+6
  3947  00352C  0101               	movlb	1	; () banked
  3948  00352E  6B07               	clrf	(?_printf+7)& (0+255),b
  3949  003530  EC5B  F000         	call	_printf	;wreg free
  3950                           
  3951                           ;screenDrawers.h: 162: break;
  3952  003534  0012               	return	
  3953  003536                     l9892:
  3954                           
  3955                           ;screenDrawers.h: 164: lcd_gotoxy(1, 1);
  3956  003536  0E01               	movlw	1
  3957  003538  0100               	movlb	0	; () banked
  3958  00353A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3959  00353C  0E01               	movlw	1
  3960  00353E  EC24  F02E         	call	_lcd_gotoxy
  3961                           
  3962                           ;screenDrawers.h: 165: printf("Valor por Corte:\n");
  3963  003542  0E4B               	movlw	low STR_9
  3964  003544  0101               	movlb	1	; () banked
  3965  003546  6F00               	movwf	printf@f& (0+255),b
  3966  003548  0E7E               	movlw	high STR_9
  3967  00354A  0101               	movlb	1	; () banked
  3968  00354C  6F01               	movwf	(printf@f+1)& (0+255),b
  3969  00354E  EC5B  F000         	call	_printf	;wreg free
  3970                           
  3971                           ;screenDrawers.h: 166: drawValEditor();
  3972  003552  EC11  F02C         	call	_drawValEditor	;wreg free
  3973                           
  3974                           ;screenDrawers.h: 167: if(tVarProceso == 0)
  3975  003556  0100               	movlb	0	; () banked
  3976  003558  51E3               	movf	_tVarProceso& (0+255),w,b
  3977  00355A  A4D8               	btfss	status,2,c
  3978  00355C  D009               	goto	l9902
  3979                           
  3980                           ; BSR set to: 0
  3981                           ;screenDrawers.h: 168: printf("kg    ");
  3982  00355E  0EE2               	movlw	low STR_24
  3983  003560  0101               	movlb	1	; () banked
  3984  003562  6F00               	movwf	printf@f& (0+255),b
  3985  003564  0E7F               	movlw	high STR_24
  3986  003566  0101               	movlb	1	; () banked
  3987  003568  6F01               	movwf	(printf@f+1)& (0+255),b
  3988  00356A  EC5B  F000         	call	_printf	;wreg free
  3989  00356E  0012               	return	
  3990  003570                     l9902:
  3991                           
  3992                           ;screenDrawers.h: 169: else if(tVarProceso == 1)
  3993  003570  0100               	movlb	0	; () banked
  3994  003572  05E3               	decf	_tVarProceso& (0+255),w,b
  3995  003574  A4D8               	btfss	status,2,c
  3996  003576  D009               	goto	l9906
  3997                           
  3998                           ; BSR set to: 0
  3999                           ;screenDrawers.h: 170: printf("m3    ");
  4000  003578  0EDB               	movlw	low STR_25
  4001  00357A  0101               	movlb	1	; () banked
  4002  00357C  6F00               	movwf	printf@f& (0+255),b
  4003  00357E  0E7F               	movlw	high STR_25
  4004  003580  0101               	movlb	1	; () banked
  4005  003582  6F01               	movwf	(printf@f+1)& (0+255),b
  4006  003584  EC5B  F000         	call	_printf	;wreg free
  4007  003588  0012               	return	
  4008  00358A                     l9906:
  4009                           
  4010                           ;screenDrawers.h: 171: else if(tVarProceso == 2)
  4011  00358A  0E02               	movlw	2
  4012  00358C  0100               	movlb	0	; () banked
  4013  00358E  19E3               	xorwf	_tVarProceso& (0+255),w,b
  4014  003590  A4D8               	btfss	status,2,c
  4015  003592  0012               	return	
  4016                           
  4017                           ; BSR set to: 0
  4018                           ;screenDrawers.h: 172: printf("sec   ");
  4019  003594  0EF0               	movlw	low STR_26
  4020  003596  0101               	movlb	1	; () banked
  4021  003598  6F00               	movwf	printf@f& (0+255),b
  4022  00359A  0E7F               	movlw	high STR_26
  4023  00359C  0101               	movlb	1	; () banked
  4024  00359E  6F01               	movwf	(printf@f+1)& (0+255),b
  4025  0035A0  EC5B  F000         	call	_printf	;wreg free
  4026                           
  4027                           ;screenDrawers.h: 173: break;
  4028  0035A4  0012               	return	
  4029  0035A6                     l9910:
  4030                           
  4031                           ;screenDrawers.h: 175: lcd_gotoxy(1, 1);
  4032  0035A6  0E01               	movlw	1
  4033  0035A8  0100               	movlb	0	; () banked
  4034  0035AA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4035  0035AC  0E01               	movlw	1
  4036  0035AE  EC24  F02E         	call	_lcd_gotoxy
  4037                           
  4038                           ;screenDrawers.h: 176: printf("Cantidad Cortes:\n");
  4039  0035B2  0E6F               	movlw	low STR_13
  4040  0035B4  0101               	movlb	1	; () banked
  4041  0035B6  6F00               	movwf	printf@f& (0+255),b
  4042  0035B8  0E7E               	movlw	high STR_13
  4043  0035BA  0101               	movlb	1	; () banked
  4044  0035BC  6F01               	movwf	(printf@f+1)& (0+255),b
  4045  0035BE  EC5B  F000         	call	_printf	;wreg free
  4046                           
  4047                           ;screenDrawers.h: 177: printf("      %d       ", chanVals);
  4048  0035C2  0E62               	movlw	low STR_14
  4049  0035C4  0101               	movlb	1	; () banked
  4050  0035C6  6F00               	movwf	printf@f& (0+255),b
  4051  0035C8  0E7F               	movlw	high STR_14
  4052  0035CA  0101               	movlb	1	; () banked
  4053  0035CC  6F01               	movwf	(printf@f+1)& (0+255),b
  4054  0035CE  C14A  F102         	movff	_chanVals,?_printf+2
  4055  0035D2  C14B  F103         	movff	_chanVals+1,?_printf+3
  4056  0035D6  EC5B  F000         	call	_printf	;wreg free
  4057                           
  4058                           ;screenDrawers.h: 178: break;
  4059  0035DA  0012               	return	
  4060  0035DC                     l9916:
  4061                           
  4062                           ;screenDrawers.h: 180: lcd_gotoxy(1, 1);
  4063  0035DC  0E01               	movlw	1
  4064  0035DE  0100               	movlb	0	; () banked
  4065  0035E0  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4066  0035E2  0E01               	movlw	1
  4067  0035E4  EC24  F02E         	call	_lcd_gotoxy
  4068                           
  4069                           ;screenDrawers.h: 181: printf("Diametro Tubo:  \n");
  4070  0035E8  0EF1               	movlw	low STR_15
  4071  0035EA  0101               	movlb	1	; () banked
  4072  0035EC  6F00               	movwf	printf@f& (0+255),b
  4073  0035EE  0E7D               	movlw	high STR_15
  4074  0035F0  0101               	movlb	1	; () banked
  4075  0035F2  6F01               	movwf	(printf@f+1)& (0+255),b
  4076  0035F4  EC5B  F000         	call	_printf	;wreg free
  4077                           
  4078                           ;screenDrawers.h: 182: drawValEditor();
  4079  0035F8  EC11  F02C         	call	_drawValEditor	;wreg free
  4080                           
  4081                           ;screenDrawers.h: 183: printf("mm    ");
  4082  0035FC  0EE9               	movlw	low STR_30
  4083  0035FE  0101               	movlb	1	; () banked
  4084  003600  6F00               	movwf	printf@f& (0+255),b
  4085  003602  0E7F               	movlw	high STR_30
  4086  003604  0101               	movlb	1	; () banked
  4087  003606  6F01               	movwf	(printf@f+1)& (0+255),b
  4088  003608  EC5B  F000         	call	_printf	;wreg free
  4089                           
  4090                           ;screenDrawers.h: 184: break;
  4091  00360C  0012               	return	
  4092  00360E                     l9924:
  4093                           
  4094                           ;screenDrawers.h: 186: lcd_gotoxy(1, 1);
  4095  00360E  0E01               	movlw	1
  4096  003610  0100               	movlb	0	; () banked
  4097  003612  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4098  003614  0E01               	movlw	1
  4099  003616  EC24  F02E         	call	_lcd_gotoxy
  4100                           
  4101                           ;screenDrawers.h: 187: printf("Densidad Masa:  \n");
  4102  00361A  0EDF               	movlw	low STR_17
  4103  00361C  0101               	movlb	1	; () banked
  4104  00361E  6F00               	movwf	printf@f& (0+255),b
  4105  003620  0E7D               	movlw	high STR_17
  4106  003622  0101               	movlb	1	; () banked
  4107  003624  6F01               	movwf	(printf@f+1)& (0+255),b
  4108  003626  EC5B  F000         	call	_printf	;wreg free
  4109                           
  4110                           ;screenDrawers.h: 188: drawValEditor();
  4111  00362A  EC11  F02C         	call	_drawValEditor	;wreg free
  4112                           
  4113                           ;screenDrawers.h: 189: printf("kg/m3 ");
  4114  00362E  0ED4               	movlw	low (STR_18+8)
  4115  003630  0101               	movlb	1	; () banked
  4116  003632  6F00               	movwf	printf@f& (0+255),b
  4117  003634  0E7F               	movlw	high (STR_18+8)
  4118  003636  0101               	movlb	1	; () banked
  4119  003638  6F01               	movwf	(printf@f+1)& (0+255),b
  4120  00363A  EC5B  F000         	call	_printf	;wreg free
  4121                           
  4122                           ;screenDrawers.h: 190: break;
  4123  00363E  0012               	return	
  4124  003640                     l9932:
  4125                           
  4126                           ;screenDrawers.h: 192: lcd_gotoxy(1, 1);
  4127  003640  0E01               	movlw	1
  4128  003642  0100               	movlb	0	; () banked
  4129  003644  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4130  003646  0E01               	movlw	1
  4131  003648  EC24  F02E         	call	_lcd_gotoxy
  4132                           
  4133                           ;screenDrawers.h: 193: printf("Velocidad Masa: \n");
  4134  00364C  0E03               	movlw	low STR_19
  4135  00364E  0101               	movlb	1	; () banked
  4136  003650  6F00               	movwf	printf@f& (0+255),b
  4137  003652  0E7E               	movlw	high STR_19
  4138  003654  0101               	movlb	1	; () banked
  4139  003656  6F01               	movwf	(printf@f+1)& (0+255),b
  4140  003658  EC5B  F000         	call	_printf	;wreg free
  4141                           
  4142                           ;screenDrawers.h: 194: drawValEditor();
  4143  00365C  EC11  F02C         	call	_drawValEditor	;wreg free
  4144                           
  4145                           ;screenDrawers.h: 195: printf("m/s   ");
  4146  003660  0EF7               	movlw	low STR_34
  4147  003662  0101               	movlb	1	; () banked
  4148  003664  6F00               	movwf	printf@f& (0+255),b
  4149  003666  0E7F               	movlw	high STR_34
  4150  003668  0101               	movlb	1	; () banked
  4151  00366A  6F01               	movwf	(printf@f+1)& (0+255),b
  4152  00366C  EC5B  F000         	call	_printf	;wreg free
  4153                           
  4154                           ;screenDrawers.h: 197: }
  4155                           ;screenDrawers.h: 198: }
  4156                           
  4157                           ;screenDrawers.h: 196: break;
  4158  003670  0012               	return	
  4159  003672                     l9942:
  4160  003672  0100               	movlb	0	; () banked
  4161  003674  51D6               	movf	_menuSection& (0+255),w,b
  4162                           
  4163                           ; Switch size 1, requested type "space"
  4164                           ; Number of cases is 7, Range of values is 0 to 6
  4165                           ; switch strategies available:
  4166                           ; Name         Instructions Cycles
  4167                           ; simple_byte           22    12 (average)
  4168                           ;	Chosen strategy is simple_byte
  4169  003676  0A00               	xorlw	0	; case 0
  4170  003678  B4D8               	btfsc	status,2,c
  4171  00367A  0012               	return	
  4172  00367C  0A01               	xorlw	1	; case 1
  4173  00367E  B4D8               	btfsc	status,2,c
  4174  003680  D70E               	goto	l9872
  4175  003682  0A03               	xorlw	3	; case 2
  4176  003684  B4D8               	btfsc	status,2,c
  4177  003686  D757               	goto	l9892
  4178  003688  0A01               	xorlw	1	; case 3
  4179  00368A  B4D8               	btfsc	status,2,c
  4180  00368C  D78C               	goto	l9910
  4181  00368E  0A07               	xorlw	7	; case 4
  4182  003690  B4D8               	btfsc	status,2,c
  4183  003692  D7A4               	goto	l9916
  4184  003694  0A01               	xorlw	1	; case 5
  4185  003696  B4D8               	btfsc	status,2,c
  4186  003698  D7BA               	goto	l9924
  4187  00369A  0A03               	xorlw	3	; case 6
  4188  00369C  A4D8               	btfss	status,2,c
  4189  00369E  0012               	return	
  4190  0036A0  D7CF               	goto	l9932
  4191  0036A2                     __end_of_drawChanVal:
  4192                           	opt stack 0
  4193                           tblptru	equ	0xFF8
  4194                           tblptrh	equ	0xFF7
  4195                           tblptrl	equ	0xFF6
  4196                           tablat	equ	0xFF5
  4197                           prodh	equ	0xFF4
  4198                           prodl	equ	0xFF3
  4199                           intcon	equ	0xFF2
  4200                           postinc0	equ	0xFEE
  4201                           wreg	equ	0xFE8
  4202                           postdec1	equ	0xFE5
  4203                           fsr1l	equ	0xFE1
  4204                           indf2	equ	0xFDF
  4205                           fsr2h	equ	0xFDA
  4206                           fsr2l	equ	0xFD9
  4207                           status	equ	0xFD8
  4208                           
  4209 ;; *************** function _drawBadPass *****************
  4210 ;; Defined at:
  4211 ;;		line 220 in file "source/screenDrawers.h"
  4212 ;; Parameters:    Size  Location     Type
  4213 ;;		None
  4214 ;; Auto vars:     Size  Location     Type
  4215 ;;		None
  4216 ;; Return value:  Size  Location     Type
  4217 ;;                  1    wreg      void 
  4218 ;; Registers used:
  4219 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4220 ;; Tracked objects:
  4221 ;;		On entry : 0/0
  4222 ;;		On exit  : 0/0
  4223 ;;		Unchanged: 0/0
  4224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4225 ;;      Params:         0       0       0       0       0       0       0
  4226 ;;      Locals:         0       0       0       0       0       0       0
  4227 ;;      Temps:          0       0       0       0       0       0       0
  4228 ;;      Totals:         0       0       0       0       0       0       0
  4229 ;;Total ram usage:        0 bytes
  4230 ;; Hardware stack levels used:    1
  4231 ;; Hardware stack levels required when called:   15
  4232 ;; This function calls:
  4233 ;;		_lcd_gotoxy
  4234 ;;		_printf
  4235 ;; This function is called by:
  4236 ;;		_drawScreen
  4237 ;; This function uses a non-reentrant model
  4238 ;;
  4239                           
  4240                           	psect	text10
  4241  005CA8                     __ptext10:
  4242                           	opt stack 0
  4243  005CA8                     _drawBadPass:
  4244                           	opt stack 14
  4245                           
  4246                           ;screenDrawers.h: 221: lcd_gotoxy(1, 1);
  4247                           
  4248                           ;incstack = 0
  4249  005CA8  0E01               	movlw	1
  4250  005CAA  0100               	movlb	0	; () banked
  4251  005CAC  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4252  005CAE  0E01               	movlw	1
  4253  005CB0  EC24  F02E         	call	_lcd_gotoxy
  4254                           
  4255                           ;screenDrawers.h: 222: printf("Contrasena      \n");
  4256  005CB4  0EA9               	movlw	low STR_37
  4257  005CB6  0101               	movlb	1	; () banked
  4258  005CB8  6F00               	movwf	printf@f& (0+255),b
  4259  005CBA  0E7D               	movlw	high STR_37
  4260  005CBC  0101               	movlb	1	; () banked
  4261  005CBE  6F01               	movwf	(printf@f+1)& (0+255),b
  4262  005CC0  EC5B  F000         	call	_printf	;wreg free
  4263                           
  4264                           ;screenDrawers.h: 223: printf("     Erronea    ");
  4265  005CC4  0EFC               	movlw	low STR_38
  4266  005CC6  0101               	movlb	1	; () banked
  4267  005CC8  6F00               	movwf	printf@f& (0+255),b
  4268  005CCA  0E7E               	movlw	high STR_38
  4269  005CCC  0101               	movlb	1	; () banked
  4270  005CCE  6F01               	movwf	(printf@f+1)& (0+255),b
  4271  005CD0  EC5B  F000         	call	_printf	;wreg free
  4272  005CD4  0012               	return		;funcret
  4273  005CD6                     __end_of_drawBadPass:
  4274                           	opt stack 0
  4275                           tblptru	equ	0xFF8
  4276                           tblptrh	equ	0xFF7
  4277                           tblptrl	equ	0xFF6
  4278                           tablat	equ	0xFF5
  4279                           prodh	equ	0xFF4
  4280                           prodl	equ	0xFF3
  4281                           intcon	equ	0xFF2
  4282                           postinc0	equ	0xFEE
  4283                           wreg	equ	0xFE8
  4284                           postdec1	equ	0xFE5
  4285                           fsr1l	equ	0xFE1
  4286                           indf2	equ	0xFDF
  4287                           fsr2h	equ	0xFDA
  4288                           fsr2l	equ	0xFD9
  4289                           status	equ	0xFD8
  4290                           
  4291 ;; *************** function _drawAutoCalibRes *****************
  4292 ;; Defined at:
  4293 ;;		line 255 in file "source/screenDrawers.h"
  4294 ;; Parameters:    Size  Location     Type
  4295 ;;		None
  4296 ;; Auto vars:     Size  Location     Type
  4297 ;;		None
  4298 ;; Return value:  Size  Location     Type
  4299 ;;                  1    wreg      void 
  4300 ;; Registers used:
  4301 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4302 ;; Tracked objects:
  4303 ;;		On entry : 0/0
  4304 ;;		On exit  : 0/0
  4305 ;;		Unchanged: 0/0
  4306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4307 ;;      Params:         0       0       0       0       0       0       0
  4308 ;;      Locals:         0       0       0       0       0       0       0
  4309 ;;      Temps:          0       0       0       0       0       0       0
  4310 ;;      Totals:         0       0       0       0       0       0       0
  4311 ;;Total ram usage:        0 bytes
  4312 ;; Hardware stack levels used:    1
  4313 ;; Hardware stack levels required when called:   15
  4314 ;; This function calls:
  4315 ;;		_lcd_gotoxy
  4316 ;;		_printf
  4317 ;; This function is called by:
  4318 ;;		_drawScreen
  4319 ;; This function uses a non-reentrant model
  4320 ;;
  4321                           
  4322                           	psect	text11
  4323  005CD6                     __ptext11:
  4324                           	opt stack 0
  4325  005CD6                     _drawAutoCalibRes:
  4326                           	opt stack 14
  4327                           
  4328                           ;screenDrawers.h: 256: lcd_gotoxy(1, 1);
  4329                           
  4330                           ;incstack = 0
  4331  005CD6  0E01               	movlw	1
  4332  005CD8  0100               	movlb	0	; () banked
  4333  005CDA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4334  005CDC  0E01               	movlw	1
  4335  005CDE  EC24  F02E         	call	_lcd_gotoxy
  4336                           
  4337                           ;screenDrawers.h: 257: printf("Autocalib usando\n");
  4338  005CE2  0EA5               	movlw	low STR_48
  4339  005CE4  0101               	movlb	1	; () banked
  4340  005CE6  6F00               	movwf	printf@f& (0+255),b
  4341  005CE8  0E7E               	movlw	high STR_48
  4342  005CEA  0101               	movlb	1	; () banked
  4343  005CEC  6F01               	movwf	(printf@f+1)& (0+255),b
  4344  005CEE  EC5B  F000         	call	_printf	;wreg free
  4345                           
  4346                           ;screenDrawers.h: 258: printf("1 kg @ 10 cortes");
  4347  005CF2  0E51               	movlw	low STR_49
  4348  005CF4  0101               	movlb	1	; () banked
  4349  005CF6  6F00               	movwf	printf@f& (0+255),b
  4350  005CF8  0E7F               	movlw	high STR_49
  4351  005CFA  0101               	movlb	1	; () banked
  4352  005CFC  6F01               	movwf	(printf@f+1)& (0+255),b
  4353  005CFE  EC5B  F000         	call	_printf	;wreg free
  4354  005D02  0012               	return		;funcret
  4355  005D04                     __end_of_drawAutoCalibRes:
  4356                           	opt stack 0
  4357                           tblptru	equ	0xFF8
  4358                           tblptrh	equ	0xFF7
  4359                           tblptrl	equ	0xFF6
  4360                           tablat	equ	0xFF5
  4361                           prodh	equ	0xFF4
  4362                           prodl	equ	0xFF3
  4363                           intcon	equ	0xFF2
  4364                           postinc0	equ	0xFEE
  4365                           wreg	equ	0xFE8
  4366                           postdec1	equ	0xFE5
  4367                           fsr1l	equ	0xFE1
  4368                           indf2	equ	0xFDF
  4369                           fsr2h	equ	0xFDA
  4370                           fsr2l	equ	0xFD9
  4371                           status	equ	0xFD8
  4372                           
  4373 ;; *************** function _drawAutoCalibRM *****************
  4374 ;; Defined at:
  4375 ;;		line 261 in file "source/screenDrawers.h"
  4376 ;; Parameters:    Size  Location     Type
  4377 ;;		None
  4378 ;; Auto vars:     Size  Location     Type
  4379 ;;		None
  4380 ;; Return value:  Size  Location     Type
  4381 ;;                  1    wreg      void 
  4382 ;; Registers used:
  4383 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4384 ;; Tracked objects:
  4385 ;;		On entry : 0/0
  4386 ;;		On exit  : 0/0
  4387 ;;		Unchanged: 0/0
  4388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4389 ;;      Params:         0       0       0       0       0       0       0
  4390 ;;      Locals:         0       0       0       0       0       0       0
  4391 ;;      Temps:          0       0       0       0       0       0       0
  4392 ;;      Totals:         0       0       0       0       0       0       0
  4393 ;;Total ram usage:        0 bytes
  4394 ;; Hardware stack levels used:    1
  4395 ;; Hardware stack levels required when called:   16
  4396 ;; This function calls:
  4397 ;;		_drawValEditor
  4398 ;;		_lcd_gotoxy
  4399 ;;		_printf
  4400 ;; This function is called by:
  4401 ;;		_drawScreen
  4402 ;; This function uses a non-reentrant model
  4403 ;;
  4404                           
  4405                           	psect	text12
  4406  005C16                     __ptext12:
  4407                           	opt stack 0
  4408  005C16                     _drawAutoCalibRM:
  4409                           	opt stack 13
  4410                           
  4411                           ;screenDrawers.h: 262: lcd_gotoxy(1, 1);
  4412                           
  4413                           ;incstack = 0
  4414  005C16  0E01               	movlw	1
  4415  005C18  0100               	movlb	0	; () banked
  4416  005C1A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4417  005C1C  0E01               	movlw	1
  4418  005C1E  EC24  F02E         	call	_lcd_gotoxy
  4419                           
  4420                           ;screenDrawers.h: 263: printf("Peso Real:     \n");
  4421  005C22  0EC9               	movlw	low STR_50
  4422  005C24  0101               	movlb	1	; () banked
  4423  005C26  6F00               	movwf	printf@f& (0+255),b
  4424  005C28  0E7E               	movlw	high STR_50
  4425  005C2A  0101               	movlb	1	; () banked
  4426  005C2C  6F01               	movwf	(printf@f+1)& (0+255),b
  4427  005C2E  EC5B  F000         	call	_printf	;wreg free
  4428                           
  4429                           ;screenDrawers.h: 264: drawValEditor();
  4430  005C32  EC11  F02C         	call	_drawValEditor	;wreg free
  4431                           
  4432                           ;screenDrawers.h: 265: printf("kg    ");
  4433  005C36  0EE2               	movlw	low STR_24
  4434  005C38  0101               	movlb	1	; () banked
  4435  005C3A  6F00               	movwf	printf@f& (0+255),b
  4436  005C3C  0E7F               	movlw	high STR_24
  4437  005C3E  0101               	movlb	1	; () banked
  4438  005C40  6F01               	movwf	(printf@f+1)& (0+255),b
  4439  005C42  EC5B  F000         	call	_printf	;wreg free
  4440  005C46  0012               	return		;funcret
  4441  005C48                     __end_of_drawAutoCalibRM:
  4442                           	opt stack 0
  4443                           tblptru	equ	0xFF8
  4444                           tblptrh	equ	0xFF7
  4445                           tblptrl	equ	0xFF6
  4446                           tablat	equ	0xFF5
  4447                           prodh	equ	0xFF4
  4448                           prodl	equ	0xFF3
  4449                           intcon	equ	0xFF2
  4450                           postinc0	equ	0xFEE
  4451                           wreg	equ	0xFE8
  4452                           postdec1	equ	0xFE5
  4453                           fsr1l	equ	0xFE1
  4454                           indf2	equ	0xFDF
  4455                           fsr2h	equ	0xFDA
  4456                           fsr2l	equ	0xFD9
  4457                           status	equ	0xFD8
  4458                           
  4459 ;; *************** function _drawValEditor *****************
  4460 ;; Defined at:
  4461 ;;		line 55 in file "source/screenDrawers.h"
  4462 ;; Parameters:    Size  Location     Type
  4463 ;;		None
  4464 ;; Auto vars:     Size  Location     Type
  4465 ;;		None
  4466 ;; Return value:  Size  Location     Type
  4467 ;;                  1    wreg      void 
  4468 ;; Registers used:
  4469 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4470 ;; Tracked objects:
  4471 ;;		On entry : 0/0
  4472 ;;		On exit  : 0/0
  4473 ;;		Unchanged: 0/0
  4474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4475 ;;      Params:         0       0       0       0       0       0       0
  4476 ;;      Locals:         0       0       0       0       0       0       0
  4477 ;;      Temps:          0       0       0       0       0       0       0
  4478 ;;      Totals:         0       0       0       0       0       0       0
  4479 ;;Total ram usage:        0 bytes
  4480 ;; Hardware stack levels used:    1
  4481 ;; Hardware stack levels required when called:   15
  4482 ;; This function calls:
  4483 ;;		_lcd_gotoxy
  4484 ;;		_printf
  4485 ;; This function is called by:
  4486 ;;		_drawChanVal
  4487 ;;		_drawAutoCalibRM
  4488 ;; This function uses a non-reentrant model
  4489 ;;
  4490                           
  4491                           	psect	text13
  4492  005822                     __ptext13:
  4493                           	opt stack 0
  4494  005822                     _drawValEditor:
  4495                           	opt stack 13
  4496                           
  4497                           ;screenDrawers.h: 56: printf("  %u%u%u.%u%u%u ", chanValdig[0], chanValdig[1],
  4498                           ;screenDrawers.h: 57: chanValdig[2], chanValdig[3], chanValdig[4], chanValdig[5]);
  4499                           
  4500                           ;incstack = 0
  4501  005822  0E40               	movlw	low STR_1
  4502  005824  0101               	movlb	1	; () banked
  4503  005826  6F00               	movwf	printf@f& (0+255),b
  4504  005828  0E7F               	movlw	high STR_1
  4505  00582A  0101               	movlb	1	; () banked
  4506  00582C  6F01               	movwf	(printf@f+1)& (0+255),b
  4507  00582E  0101               	movlb	1	; () banked
  4508  005830  5131               	movf	_chanValdig& (0+255),w,b
  4509  005832  0101               	movlb	1	; () banked
  4510  005834  6F02               	movwf	(?_printf+2)& (0+255),b
  4511  005836  6B03               	clrf	(?_printf+3)& (0+255),b
  4512  005838  BF02               	btfsc	(?_printf+2)& (0+255),7,b
  4513  00583A  0703               	decf	(?_printf+3)& (0+255),f,b
  4514  00583C  0101               	movlb	1	; () banked
  4515  00583E  5132               	movf	(_chanValdig+1)& (0+255),w,b
  4516  005840  0101               	movlb	1	; () banked
  4517  005842  6F04               	movwf	(?_printf+4)& (0+255),b
  4518  005844  6B05               	clrf	(?_printf+5)& (0+255),b
  4519  005846  BF04               	btfsc	(?_printf+4)& (0+255),7,b
  4520  005848  0705               	decf	(?_printf+5)& (0+255),f,b
  4521  00584A  0101               	movlb	1	; () banked
  4522  00584C  5133               	movf	(_chanValdig+2)& (0+255),w,b
  4523  00584E  0101               	movlb	1	; () banked
  4524  005850  6F06               	movwf	(?_printf+6)& (0+255),b
  4525  005852  6B07               	clrf	(?_printf+7)& (0+255),b
  4526  005854  BF06               	btfsc	(?_printf+6)& (0+255),7,b
  4527  005856  0707               	decf	(?_printf+7)& (0+255),f,b
  4528  005858  0101               	movlb	1	; () banked
  4529  00585A  5134               	movf	(_chanValdig+3)& (0+255),w,b
  4530  00585C  0101               	movlb	1	; () banked
  4531  00585E  6F08               	movwf	(?_printf+8)& (0+255),b
  4532  005860  6B09               	clrf	(?_printf+9)& (0+255),b
  4533  005862  BF08               	btfsc	(?_printf+8)& (0+255),7,b
  4534  005864  0709               	decf	(?_printf+9)& (0+255),f,b
  4535  005866  0101               	movlb	1	; () banked
  4536  005868  5135               	movf	(_chanValdig+4)& (0+255),w,b
  4537  00586A  0101               	movlb	1	; () banked
  4538  00586C  6F0A               	movwf	(?_printf+10)& (0+255),b
  4539  00586E  6B0B               	clrf	(?_printf+11)& (0+255),b
  4540  005870  BF0A               	btfsc	(?_printf+10)& (0+255),7,b
  4541  005872  070B               	decf	(?_printf+11)& (0+255),f,b
  4542  005874  0101               	movlb	1	; () banked
  4543  005876  5136               	movf	(_chanValdig+5)& (0+255),w,b
  4544  005878  0101               	movlb	1	; () banked
  4545  00587A  6F0C               	movwf	(?_printf+12)& (0+255),b
  4546  00587C  6B0D               	clrf	(?_printf+13)& (0+255),b
  4547  00587E  BF0C               	btfsc	(?_printf+12)& (0+255),7,b
  4548  005880  070D               	decf	(?_printf+13)& (0+255),f,b
  4549  005882  EC5B  F000         	call	_printf	;wreg free
  4550                           
  4551                           ;screenDrawers.h: 58: lcd_gotoxy(11, 2);
  4552  005886  0E02               	movlw	2
  4553  005888  0100               	movlb	0	; () banked
  4554  00588A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4555  00588C  0E0B               	movlw	11
  4556  00588E  EC24  F02E         	call	_lcd_gotoxy
  4557  005892  0012               	return		;funcret
  4558  005894                     __end_of_drawValEditor:
  4559                           	opt stack 0
  4560                           tblptru	equ	0xFF8
  4561                           tblptrh	equ	0xFF7
  4562                           tblptrl	equ	0xFF6
  4563                           tablat	equ	0xFF5
  4564                           prodh	equ	0xFF4
  4565                           prodl	equ	0xFF3
  4566                           intcon	equ	0xFF2
  4567                           postinc0	equ	0xFEE
  4568                           wreg	equ	0xFE8
  4569                           postdec1	equ	0xFE5
  4570                           fsr1l	equ	0xFE1
  4571                           indf2	equ	0xFDF
  4572                           fsr2h	equ	0xFDA
  4573                           fsr2l	equ	0xFD9
  4574                           status	equ	0xFD8
  4575                           
  4576 ;; *************** function _drawAdvON *****************
  4577 ;; Defined at:
  4578 ;;		line 226 in file "source/screenDrawers.h"
  4579 ;; Parameters:    Size  Location     Type
  4580 ;;		None
  4581 ;; Auto vars:     Size  Location     Type
  4582 ;;		None
  4583 ;; Return value:  Size  Location     Type
  4584 ;;                  1    wreg      void 
  4585 ;; Registers used:
  4586 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4587 ;; Tracked objects:
  4588 ;;		On entry : 0/0
  4589 ;;		On exit  : 0/0
  4590 ;;		Unchanged: 0/0
  4591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4592 ;;      Params:         0       0       0       0       0       0       0
  4593 ;;      Locals:         0       0       0       0       0       0       0
  4594 ;;      Temps:          0       0       0       0       0       0       0
  4595 ;;      Totals:         0       0       0       0       0       0       0
  4596 ;;Total ram usage:        0 bytes
  4597 ;; Hardware stack levels used:    1
  4598 ;; Hardware stack levels required when called:   15
  4599 ;; This function calls:
  4600 ;;		_lcd_gotoxy
  4601 ;;		_printf
  4602 ;; This function is called by:
  4603 ;;		_drawScreen
  4604 ;; This function uses a non-reentrant model
  4605 ;;
  4606                           
  4607                           	psect	text14
  4608  005D04                     __ptext14:
  4609                           	opt stack 0
  4610  005D04                     _drawAdvON:
  4611                           	opt stack 14
  4612                           
  4613                           ;screenDrawers.h: 227: lcd_gotoxy(1, 1);
  4614                           
  4615                           ;incstack = 0
  4616  005D04  0E01               	movlw	1
  4617  005D06  0100               	movlb	0	; () banked
  4618  005D08  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4619  005D0A  0E01               	movlw	1
  4620  005D0C  EC24  F02E         	call	_lcd_gotoxy
  4621                           
  4622                           ;screenDrawers.h: 228: printf("Modo Configurar:\n");
  4623  005D10  0E5D               	movlw	low STR_39
  4624  005D12  0101               	movlb	1	; () banked
  4625  005D14  6F00               	movwf	printf@f& (0+255),b
  4626  005D16  0E7E               	movlw	high STR_39
  4627  005D18  0101               	movlb	1	; () banked
  4628  005D1A  6F01               	movwf	(printf@f+1)& (0+255),b
  4629  005D1C  EC5B  F000         	call	_printf	;wreg free
  4630                           
  4631                           ;screenDrawers.h: 229: printf("    Iniciado    ");
  4632  005D20  0E0D               	movlw	low STR_40
  4633  005D22  0101               	movlb	1	; () banked
  4634  005D24  6F00               	movwf	printf@f& (0+255),b
  4635  005D26  0E7F               	movlw	high STR_40
  4636  005D28  0101               	movlb	1	; () banked
  4637  005D2A  6F01               	movwf	(printf@f+1)& (0+255),b
  4638  005D2C  EC5B  F000         	call	_printf	;wreg free
  4639  005D30  0012               	return		;funcret
  4640  005D32                     __end_of_drawAdvON:
  4641                           	opt stack 0
  4642                           tblptru	equ	0xFF8
  4643                           tblptrh	equ	0xFF7
  4644                           tblptrl	equ	0xFF6
  4645                           tablat	equ	0xFF5
  4646                           prodh	equ	0xFF4
  4647                           prodl	equ	0xFF3
  4648                           intcon	equ	0xFF2
  4649                           postinc0	equ	0xFEE
  4650                           wreg	equ	0xFE8
  4651                           postdec1	equ	0xFE5
  4652                           fsr1l	equ	0xFE1
  4653                           indf2	equ	0xFDF
  4654                           fsr2h	equ	0xFDA
  4655                           fsr2l	equ	0xFD9
  4656                           status	equ	0xFD8
  4657                           
  4658 ;; *************** function _drawAdvOFF *****************
  4659 ;; Defined at:
  4660 ;;		line 232 in file "source/screenDrawers.h"
  4661 ;; Parameters:    Size  Location     Type
  4662 ;;		None
  4663 ;; Auto vars:     Size  Location     Type
  4664 ;;		None
  4665 ;; Return value:  Size  Location     Type
  4666 ;;                  1    wreg      void 
  4667 ;; Registers used:
  4668 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4669 ;; Tracked objects:
  4670 ;;		On entry : 0/0
  4671 ;;		On exit  : 0/0
  4672 ;;		Unchanged: 0/0
  4673 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4674 ;;      Params:         0       0       0       0       0       0       0
  4675 ;;      Locals:         0       0       0       0       0       0       0
  4676 ;;      Temps:          0       0       0       0       0       0       0
  4677 ;;      Totals:         0       0       0       0       0       0       0
  4678 ;;Total ram usage:        0 bytes
  4679 ;; Hardware stack levels used:    1
  4680 ;; Hardware stack levels required when called:   15
  4681 ;; This function calls:
  4682 ;;		_lcd_gotoxy
  4683 ;;		_printf
  4684 ;; This function is called by:
  4685 ;;		_drawScreen
  4686 ;; This function uses a non-reentrant model
  4687 ;;
  4688                           
  4689                           	psect	text15
  4690  005D32                     __ptext15:
  4691                           	opt stack 0
  4692  005D32                     _drawAdvOFF:
  4693                           	opt stack 14
  4694                           
  4695                           ;screenDrawers.h: 233: lcd_gotoxy(1, 1);
  4696                           
  4697                           ;incstack = 0
  4698  005D32  0E01               	movlw	1
  4699  005D34  0100               	movlb	0	; () banked
  4700  005D36  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4701  005D38  0E01               	movlw	1
  4702  005D3A  EC24  F02E         	call	_lcd_gotoxy
  4703                           
  4704                           ;screenDrawers.h: 234: printf("Modo Configurar:\n");
  4705  005D3E  0E5D               	movlw	low STR_39
  4706  005D40  0101               	movlb	1	; () banked
  4707  005D42  6F00               	movwf	printf@f& (0+255),b
  4708  005D44  0E7E               	movlw	high STR_39
  4709  005D46  0101               	movlb	1	; () banked
  4710  005D48  6F01               	movwf	(printf@f+1)& (0+255),b
  4711  005D4A  EC5B  F000         	call	_printf	;wreg free
  4712                           
  4713                           ;screenDrawers.h: 235: printf("   Finalizado   ");
  4714  005D4E  0E2F               	movlw	low STR_42
  4715  005D50  0101               	movlb	1	; () banked
  4716  005D52  6F00               	movwf	printf@f& (0+255),b
  4717  005D54  0E7F               	movlw	high STR_42
  4718  005D56  0101               	movlb	1	; () banked
  4719  005D58  6F01               	movwf	(printf@f+1)& (0+255),b
  4720  005D5A  EC5B  F000         	call	_printf	;wreg free
  4721  005D5E  0012               	return		;funcret
  4722  005D60                     __end_of_drawAdvOFF:
  4723                           	opt stack 0
  4724                           tblptru	equ	0xFF8
  4725                           tblptrh	equ	0xFF7
  4726                           tblptrl	equ	0xFF6
  4727                           tablat	equ	0xFF5
  4728                           prodh	equ	0xFF4
  4729                           prodl	equ	0xFF3
  4730                           intcon	equ	0xFF2
  4731                           postinc0	equ	0xFEE
  4732                           wreg	equ	0xFE8
  4733                           postdec1	equ	0xFE5
  4734                           fsr1l	equ	0xFE1
  4735                           indf2	equ	0xFDF
  4736                           fsr2h	equ	0xFDA
  4737                           fsr2l	equ	0xFD9
  4738                           status	equ	0xFD8
  4739                           
  4740 ;; *************** function _printf *****************
  4741 ;; Defined at:
  4742 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4743 ;; Parameters:    Size  Location     Type
  4744 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  4745 ;;		 -> STR_51(7), STR_50(17), STR_49(17), STR_48(18), 
  4746 ;;		 -> STR_47(19), STR_46(18), STR_45(18), STR_44(18), 
  4747 ;;		 -> STR_43(18), STR_42(17), STR_41(18), STR_40(17), 
  4748 ;;		 -> STR_39(18), STR_38(17), STR_37(18), STR_36(25), 
  4749 ;;		 -> STR_35(18), STR_34(7), STR_33(18), STR_32(7), 
  4750 ;;		 -> STR_31(18), STR_30(7), STR_29(18), STR_28(16), 
  4751 ;;		 -> STR_27(18), STR_26(7), STR_25(7), STR_24(7), 
  4752 ;;		 -> STR_23(18), STR_22(20), STR_21(18), STR_20(15), 
  4753 ;;		 -> STR_19(18), STR_18(15), STR_17(18), STR_16(15), 
  4754 ;;		 -> STR_15(18), STR_14(16), STR_13(18), STR_12(15), 
  4755 ;;		 -> STR_11(15), STR_10(15), STR_9(18), STR_8(17), 
  4756 ;;		 -> STR_7(17), STR_6(18), STR_5(18), STR_4(17), 
  4757 ;;		 -> STR_3(15), STR_2(18), STR_1(17), 
  4758 ;; Auto vars:     Size  Location     Type
  4759 ;;  fval            4   42[BANK1 ] PTR const unsigned char 
  4760 ;;  val             4   34[BANK1 ] unsigned long 
  4761 ;;  tmpval          4   30[BANK1 ] struct .
  4762 ;;  prec            2   46[BANK1 ] int 
  4763 ;;  width           2   40[BANK1 ] int 
  4764 ;;  exp             2   38[BANK1 ] int 
  4765 ;;  flag            2   28[BANK1 ] unsigned short 
  4766 ;;  ap              2   26[BANK1 ] PTR void [1]
  4767 ;;		 -> ?_printf(2), 
  4768 ;;  len             2   24[BANK1 ] unsigned int 
  4769 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  4770 ;;		 -> printf@c(1), 
  4771 ;;  c               1   48[BANK1 ] char 
  4772 ;;  d               1    0        unsigned char 
  4773 ;; Return value:  Size  Location     Type
  4774 ;;                  2    0[BANK1 ] int 
  4775 ;; Registers used:
  4776 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4777 ;; Tracked objects:
  4778 ;;		On entry : 0/0
  4779 ;;		On exit  : 0/0
  4780 ;;		Unchanged: 0/0
  4781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4782 ;;      Params:         0       0      18       0       0       0       0
  4783 ;;      Locals:         0       0      31       0       0       0       0
  4784 ;;      Temps:          0       4       0       0       0       0       0
  4785 ;;      Totals:         0       4      49       0       0       0       0
  4786 ;;Total ram usage:       53 bytes
  4787 ;; Hardware stack levels used:    1
  4788 ;; Hardware stack levels required when called:   14
  4789 ;; This function calls:
  4790 ;;		___awdiv
  4791 ;;		___fladd
  4792 ;;		___flge
  4793 ;;		___flmul
  4794 ;;		___flneg
  4795 ;;		___flsub
  4796 ;;		___fltol
  4797 ;;		___lldiv
  4798 ;;		___llmod
  4799 ;;		___wmul
  4800 ;;		___xxtofl
  4801 ;;		__div_to_l_
  4802 ;;		__tdiv_to_l_
  4803 ;;		_fround
  4804 ;;		_isdigit
  4805 ;;		_putch
  4806 ;;		_scale
  4807 ;; This function is called by:
  4808 ;;		_drawValEditor
  4809 ;;		_drawMenu
  4810 ;;		_drawChanVal
  4811 ;;		_drawPassWord
  4812 ;;		_drawBadPass
  4813 ;;		_drawAdvON
  4814 ;;		_drawAdvOFF
  4815 ;;		_drawSNquest
  4816 ;;		_drawAutoCalibRes
  4817 ;;		_drawAutoCalibRM
  4818 ;; This function uses a non-reentrant model
  4819 ;;
  4820                           
  4821                           	psect	text16
  4822  0000B6                     __ptext16:
  4823                           	opt stack 0
  4824  0000B6                     _printf:
  4825                           	opt stack 14
  4826                           
  4827                           ;doprnt.c: 466: va_list ap;
  4828                           ;doprnt.c: 499: signed char c;
  4829                           ;doprnt.c: 501: int width;
  4830                           ;doprnt.c: 504: int prec;
  4831                           ;doprnt.c: 508: unsigned short flag;
  4832                           ;doprnt.c: 515: char d;
  4833                           ;doprnt.c: 516: double fval;
  4834                           ;doprnt.c: 517: int exp;
  4835                           ;doprnt.c: 523: union {
  4836                           ;doprnt.c: 524: unsigned long vd;
  4837                           ;doprnt.c: 525: double integ;
  4838                           ;doprnt.c: 526: } tmpval;
  4839                           ;doprnt.c: 528: unsigned long val;
  4840                           ;doprnt.c: 529: unsigned len;
  4841                           ;doprnt.c: 530: const char * cp;
  4842                           ;doprnt.c: 533: *ap = __va_start();
  4843                           
  4844                           ;incstack = 0
  4845  0000B6  0E02               	movlw	low (?_printf+2)
  4846  0000B8  0101               	movlb	1	; () banked
  4847  0000BA  6F1A               	movwf	printf@ap& (0+255),b
  4848  0000BC  0E01               	movlw	high (?_printf+2)
  4849  0000BE  0101               	movlb	1	; () banked
  4850  0000C0  6F1B               	movwf	(printf@ap+1)& (0+255),b
  4851                           
  4852                           ;doprnt.c: 536: while(c = *f++) {
  4853  0000C2  EF82  F006         	goto	l9314
  4854  0000C6                     l9016:
  4855                           
  4856                           ; BSR set to: 1
  4857                           ;doprnt.c: 538: if(c != '%')
  4858  0000C6  0E25               	movlw	37
  4859  0000C8  0101               	movlb	1	; () banked
  4860  0000CA  1930               	xorwf	printf@c& (0+255),w,b
  4861  0000CC  B4D8               	btfsc	status,2,c
  4862  0000CE  D006               	goto	l9020
  4863                           
  4864                           ; BSR set to: 1
  4865                           ;doprnt.c: 540: {
  4866                           ;doprnt.c: 541: (putch(c) );
  4867  0000D0  0101               	movlb	1	; () banked
  4868  0000D2  5130               	movf	printf@c& (0+255),w,b
  4869  0000D4  EC58  F02F         	call	_putch
  4870                           
  4871                           ;doprnt.c: 542: continue;
  4872  0000D8  EF82  F006         	goto	l9314
  4873  0000DC                     l9020:
  4874                           
  4875                           ;doprnt.c: 543: }
  4876                           ;doprnt.c: 546: width = 0;
  4877  0000DC  0E00               	movlw	0
  4878  0000DE  0101               	movlb	1	; () banked
  4879  0000E0  6F29               	movwf	(printf@width+1)& (0+255),b
  4880  0000E2  0E00               	movlw	0
  4881  0000E4  6F28               	movwf	printf@width& (0+255),b
  4882                           
  4883                           ;doprnt.c: 548: flag = 0;
  4884  0000E6  0E00               	movlw	0
  4885  0000E8  0101               	movlb	1	; () banked
  4886  0000EA  6F1D               	movwf	(printf@flag+1)& (0+255),b
  4887  0000EC  0E00               	movlw	0
  4888  0000EE  6F1C               	movwf	printf@flag& (0+255),b
  4889                           
  4890                           ; BSR set to: 1
  4891                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4892  0000F0  C100  FFF6         	movff	printf@f,tblptrl
  4893  0000F4  C101  FFF7         	movff	printf@f+1,tblptrh
  4894  0000F8                     	if	0	;tblptru may be non-zero
  4895  0000F8                     	endif
  4896  0000F8                     	if	0	;tblptru may be non-zero
  4897  0000F8                     	endif
  4898  0000F8  0008               	tblrd		*
  4899  0000FA  50F5               	movf	tablat,w,c
  4900  0000FC  ECC6  F02E         	call	_isdigit
  4901  000100  A0D8               	btfss	status,0,c
  4902  000102  D040               	goto	l9034
  4903                           
  4904                           ;doprnt.c: 598: width = 0;
  4905  000104  0E00               	movlw	0
  4906  000106  0101               	movlb	1	; () banked
  4907  000108  6F29               	movwf	(printf@width+1)& (0+255),b
  4908  00010A  0E00               	movlw	0
  4909  00010C  6F28               	movwf	printf@width& (0+255),b
  4910  00010E                     l9026:
  4911                           
  4912                           ;doprnt.c: 600: width *= 10;
  4913  00010E  C128  F075         	movff	printf@width,___wmul@multiplier
  4914  000112  C129  F076         	movff	printf@width+1,___wmul@multiplier+1
  4915  000116  0E00               	movlw	0
  4916  000118  0100               	movlb	0	; () banked
  4917  00011A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4918  00011C  0E0A               	movlw	10
  4919  00011E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4920  000120  ECD7  F02D         	call	___wmul	;wreg free
  4921  000124  C075  F128         	movff	?___wmul,printf@width
  4922  000128  C076  F129         	movff	?___wmul+1,printf@width+1
  4923                           
  4924                           ;doprnt.c: 601: width += *f++ - '0';
  4925  00012C  0ED0               	movlw	208
  4926  00012E  0100               	movlb	0	; () banked
  4927  000130  6FC5               	movwf	??_printf& (0+255),b
  4928  000132  0EFF               	movlw	255
  4929  000134  0100               	movlb	0	; () banked
  4930  000136  6FC6               	movwf	(??_printf+1)& (0+255),b
  4931  000138  C100  FFF6         	movff	printf@f,tblptrl
  4932  00013C  C101  FFF7         	movff	printf@f+1,tblptrh
  4933  000140                     	if	0	;tblptru may be non-zero
  4934  000140                     	endif
  4935  000140                     	if	0	;tblptru may be non-zero
  4936  000140                     	endif
  4937  000140  0008               	tblrd		*
  4938  000142  50F5               	movf	tablat,w,c
  4939  000144  0100               	movlb	0	; () banked
  4940  000146  6FC7               	movwf	(??_printf+2)& (0+255),b
  4941  000148  6BC8               	clrf	(??_printf+3)& (0+255),b
  4942  00014A  0100               	movlb	0	; () banked
  4943  00014C  51C5               	movf	??_printf& (0+255),w,b
  4944  00014E  0100               	movlb	0	; () banked
  4945  000150  27C7               	addwf	(??_printf+2)& (0+255),f,b
  4946  000152  0100               	movlb	0	; () banked
  4947  000154  51C6               	movf	(??_printf+1)& (0+255),w,b
  4948  000156  0100               	movlb	0	; () banked
  4949  000158  23C8               	addwfc	(??_printf+3)& (0+255),f,b
  4950  00015A  0100               	movlb	0	; () banked
  4951  00015C  51C7               	movf	(??_printf+2)& (0+255),w,b
  4952  00015E  0101               	movlb	1	; () banked
  4953  000160  2728               	addwf	printf@width& (0+255),f,b
  4954  000162  0100               	movlb	0	; () banked
  4955  000164  51C8               	movf	(??_printf+3)& (0+255),w,b
  4956  000166  0101               	movlb	1	; () banked
  4957  000168  2329               	addwfc	(printf@width+1)& (0+255),f,b
  4958                           
  4959                           ; BSR set to: 1
  4960  00016A  0101               	movlb	1	; () banked
  4961  00016C  4B00               	infsnz	printf@f& (0+255),f,b
  4962  00016E  2B01               	incf	(printf@f+1)& (0+255),f,b
  4963                           
  4964                           ; BSR set to: 1
  4965                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4966  000170  C100  FFF6         	movff	printf@f,tblptrl
  4967  000174  C101  FFF7         	movff	printf@f+1,tblptrh
  4968  000178                     	if	0	;tblptru may be non-zero
  4969  000178                     	endif
  4970  000178                     	if	0	;tblptru may be non-zero
  4971  000178                     	endif
  4972  000178  0008               	tblrd		*
  4973  00017A  50F5               	movf	tablat,w,c
  4974  00017C  ECC6  F02E         	call	_isdigit
  4975  000180  B0D8               	btfsc	status,0,c
  4976  000182  D7C5               	goto	l9026
  4977  000184                     l9034:
  4978                           
  4979                           ;doprnt.c: 608: }
  4980                           ;doprnt.c: 611: if(*f == '.') {
  4981  000184  C100  FFF6         	movff	printf@f,tblptrl
  4982  000188  C101  FFF7         	movff	printf@f+1,tblptrh
  4983  00018C                     	if	0	;tblptru may be non-zero
  4984  00018C                     	endif
  4985  00018C                     	if	0	;tblptru may be non-zero
  4986  00018C                     	endif
  4987  00018C  0008               	tblrd		*
  4988  00018E  50F5               	movf	tablat,w,c
  4989  000190  0A2E               	xorlw	46
  4990  000192  A4D8               	btfss	status,2,c
  4991  000194  D039               	goto	l9046
  4992                           
  4993                           ;doprnt.c: 612: flag |= 0x4000;
  4994  000196  0101               	movlb	1	; () banked
  4995  000198  8D1D               	bsf	(printf@flag+1)& (0+255),6,b
  4996                           
  4997                           ;doprnt.c: 613: f++;
  4998  00019A  0101               	movlb	1	; () banked
  4999  00019C  4B00               	infsnz	printf@f& (0+255),f,b
  5000  00019E  2B01               	incf	(printf@f+1)& (0+255),f,b
  5001                           
  5002                           ; BSR set to: 1
  5003                           ;doprnt.c: 620: {
  5004                           ;doprnt.c: 621: prec = 0;
  5005  0001A0  0E00               	movlw	0
  5006  0001A2  0101               	movlb	1	; () banked
  5007  0001A4  6F2F               	movwf	(printf@prec+1)& (0+255),b
  5008  0001A6  0E00               	movlw	0
  5009  0001A8  6F2E               	movwf	printf@prec& (0+255),b
  5010                           
  5011                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  5012  0001AA  D023               	goto	l9044
  5013  0001AC                     l9040:
  5014                           
  5015                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  5016  0001AC  C12E  F075         	movff	printf@prec,___wmul@multiplier
  5017  0001B0  C12F  F076         	movff	printf@prec+1,___wmul@multiplier+1
  5018  0001B4  0E00               	movlw	0
  5019  0001B6  0100               	movlb	0	; () banked
  5020  0001B8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5021  0001BA  0E0A               	movlw	10
  5022  0001BC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  5023  0001BE  ECD7  F02D         	call	___wmul	;wreg free
  5024  0001C2  C100  FFF6         	movff	printf@f,tblptrl
  5025  0001C6  C101  FFF7         	movff	printf@f+1,tblptrh
  5026  0001CA                     	if	0	;tblptru may be non-zero
  5027  0001CA                     	endif
  5028  0001CA                     	if	0	;tblptru may be non-zero
  5029  0001CA                     	endif
  5030  0001CA  0008               	tblrd		*
  5031  0001CC  50F5               	movf	tablat,w,c
  5032  0001CE  0100               	movlb	0	; () banked
  5033  0001D0  2775               	addwf	?___wmul& (0+255),f,b
  5034  0001D2  0E00               	movlw	0
  5035  0001D4  0100               	movlb	0	; () banked
  5036  0001D6  2376               	addwfc	(?___wmul+1)& (0+255),f,b
  5037  0001D8  0ED0               	movlw	208
  5038  0001DA  0100               	movlb	0	; () banked
  5039  0001DC  2575               	addwf	?___wmul& (0+255),w,b
  5040  0001DE  0101               	movlb	1	; () banked
  5041  0001E0  6F2E               	movwf	printf@prec& (0+255),b
  5042  0001E2  0EFF               	movlw	255
  5043  0001E4  0100               	movlb	0	; () banked
  5044  0001E6  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  5045  0001E8  0101               	movlb	1	; () banked
  5046  0001EA  6F2F               	movwf	(printf@prec+1)& (0+255),b
  5047                           
  5048                           ; BSR set to: 1
  5049  0001EC  0101               	movlb	1	; () banked
  5050  0001EE  4B00               	infsnz	printf@f& (0+255),f,b
  5051  0001F0  2B01               	incf	(printf@f+1)& (0+255),f,b
  5052  0001F2                     l9044:
  5053                           
  5054                           ; BSR set to: 1
  5055  0001F2  C100  FFF6         	movff	printf@f,tblptrl
  5056  0001F6  C101  FFF7         	movff	printf@f+1,tblptrh
  5057  0001FA                     	if	0	;tblptru may be non-zero
  5058  0001FA                     	endif
  5059  0001FA                     	if	0	;tblptru may be non-zero
  5060  0001FA                     	endif
  5061  0001FA  0008               	tblrd		*
  5062  0001FC  50F5               	movf	tablat,w,c
  5063  0001FE  ECC6  F02E         	call	_isdigit
  5064  000202  A0D8               	btfss	status,0,c
  5065  000204  D07A               	goto	l9086
  5066  000206  D7D2               	goto	l9040
  5067  000208                     l9046:
  5068                           
  5069                           ;doprnt.c: 626: prec = 0;
  5070  000208  0E00               	movlw	0
  5071  00020A  0101               	movlb	1	; () banked
  5072  00020C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  5073  00020E  0E00               	movlw	0
  5074  000210  6F2E               	movwf	printf@prec& (0+255),b
  5075                           
  5076                           ; BSR set to: 1
  5077                           ;doprnt.c: 628: flag |= 0x1000;
  5078  000212  0101               	movlb	1	; () banked
  5079  000214  891D               	bsf	(printf@flag+1)& (0+255),4,b
  5080                           
  5081                           ; BSR set to: 1
  5082                           ;doprnt.c: 630: }
  5083                           ;doprnt.c: 635: switch(c = *f++) {
  5084  000216  D071               	goto	l9086
  5085  000218                     l9050:
  5086                           
  5087                           ; BSR set to: 1
  5088                           ;doprnt.c: 663: flag |= 0x400;
  5089  000218  0101               	movlb	1	; () banked
  5090  00021A  851D               	bsf	(printf@flag+1)& (0+255),2,b
  5091                           
  5092                           ; BSR set to: 1
  5093                           ;doprnt.c: 698: case 'i':
  5094                           ;doprnt.c: 699: break;
  5095                           
  5096                           ; BSR set to: 1
  5097                           
  5098                           ;doprnt.c: 697: case 'd':
  5099                           
  5100                           ;doprnt.c: 664: break;
  5101  00021C  D08D               	goto	l9088
  5102  00021E                     l9052:
  5103                           
  5104                           ; BSR set to: 1
  5105                           ;doprnt.c: 753: if(prec && prec < len)
  5106  00021E  0101               	movlb	1	; () banked
  5107  000220  512E               	movf	printf@prec& (0+255),w,b
  5108  000222  0101               	movlb	1	; () banked
  5109  000224  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5110  000226  B4D8               	btfsc	status,2,c
  5111  000228  D00E               	goto	l9058
  5112                           
  5113                           ; BSR set to: 1
  5114  00022A  0101               	movlb	1	; () banked
  5115  00022C  5118               	movf	printf@len& (0+255),w,b
  5116  00022E  0101               	movlb	1	; () banked
  5117  000230  5D2E               	subwf	printf@prec& (0+255),w,b
  5118  000232  0101               	movlb	1	; () banked
  5119  000234  5119               	movf	(printf@len+1)& (0+255),w,b
  5120  000236  0101               	movlb	1	; () banked
  5121  000238  592F               	subwfb	(printf@prec+1)& (0+255),w,b
  5122  00023A  B0D8               	btfsc	status,0,c
  5123  00023C  D004               	goto	l9058
  5124                           
  5125                           ; BSR set to: 1
  5126                           ;doprnt.c: 754: len = prec;
  5127  00023E  C12E  F118         	movff	printf@prec,printf@len
  5128  000242  C12F  F119         	movff	printf@prec+1,printf@len+1
  5129  000246                     l9058:
  5130                           
  5131                           ; BSR set to: 1
  5132                           ;doprnt.c: 757: if(width > len)
  5133  000246  0101               	movlb	1	; () banked
  5134  000248  5128               	movf	printf@width& (0+255),w,b
  5135  00024A  0101               	movlb	1	; () banked
  5136  00024C  5D18               	subwf	printf@len& (0+255),w,b
  5137  00024E  0101               	movlb	1	; () banked
  5138  000250  5129               	movf	(printf@width+1)& (0+255),w,b
  5139  000252  0101               	movlb	1	; () banked
  5140  000254  5919               	subwfb	(printf@len+1)& (0+255),w,b
  5141  000256  B0D8               	btfsc	status,0,c
  5142  000258  D009               	goto	l9062
  5143                           
  5144                           ; BSR set to: 1
  5145                           ;doprnt.c: 758: width -= len;
  5146  00025A  0101               	movlb	1	; () banked
  5147  00025C  5118               	movf	printf@len& (0+255),w,b
  5148  00025E  0101               	movlb	1	; () banked
  5149  000260  5F28               	subwf	printf@width& (0+255),f,b
  5150  000262  0101               	movlb	1	; () banked
  5151  000264  5119               	movf	(printf@len+1)& (0+255),w,b
  5152  000266  0101               	movlb	1	; () banked
  5153  000268  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  5154  00026A  D009               	goto	l9066
  5155  00026C                     l9062:
  5156                           
  5157                           ; BSR set to: 1
  5158                           ;doprnt.c: 759: else
  5159                           ;doprnt.c: 760: width = 0;
  5160  00026C  0E00               	movlw	0
  5161  00026E  0101               	movlb	1	; () banked
  5162  000270  6F29               	movwf	(printf@width+1)& (0+255),b
  5163  000272  0E00               	movlw	0
  5164  000274  6F28               	movwf	printf@width& (0+255),b
  5165                           
  5166                           ; BSR set to: 1
  5167                           ;doprnt.c: 764: while(width--)
  5168  000276  D003               	goto	l9066
  5169  000278                     l9064:
  5170                           
  5171                           ; BSR set to: 1
  5172                           ;doprnt.c: 765: (putch(' ') );
  5173  000278  0E20               	movlw	32
  5174  00027A  EC58  F02F         	call	_putch
  5175  00027E                     l9066:
  5176  00027E  0101               	movlb	1	; () banked
  5177  000280  0728               	decf	printf@width& (0+255),f,b
  5178  000282  A0D8               	btfss	status,0,c
  5179  000284  0729               	decf	(printf@width+1)& (0+255),f,b
  5180  000286  0101               	movlb	1	; () banked
  5181  000288  2928               	incf	printf@width& (0+255),w,b
  5182  00028A  E1F6               	bnz	l9064
  5183  00028C  0101               	movlb	1	; () banked
  5184  00028E  2929               	incf	(printf@width+1)& (0+255),w,b
  5185  000290  B4D8               	btfsc	status,2,c
  5186  000292  D00B               	goto	l9072
  5187  000294  D7F1               	goto	l9064
  5188  000296                     l9068:
  5189                           
  5190                           ; BSR set to: 1
  5191                           ;doprnt.c: 768: (putch(*cp++) );
  5192  000296  C116  FFD9         	movff	printf@cp,fsr2l
  5193  00029A  C117  FFDA         	movff	printf@cp+1,fsr2h
  5194  00029E  50DF               	movf	indf2,w,c
  5195  0002A0  EC58  F02F         	call	_putch
  5196  0002A4  0101               	movlb	1	; () banked
  5197  0002A6  4B16               	infsnz	printf@cp& (0+255),f,b
  5198  0002A8  2B17               	incf	(printf@cp+1)& (0+255),f,b
  5199  0002AA                     l9072:
  5200                           
  5201                           ; BSR set to: 1
  5202  0002AA  0101               	movlb	1	; () banked
  5203  0002AC  0718               	decf	printf@len& (0+255),f,b
  5204  0002AE  A0D8               	btfss	status,0,c
  5205  0002B0  0719               	decf	(printf@len+1)& (0+255),f,b
  5206  0002B2  0101               	movlb	1	; () banked
  5207  0002B4  2918               	incf	printf@len& (0+255),w,b
  5208  0002B6  E1EF               	bnz	l9068
  5209  0002B8  0101               	movlb	1	; () banked
  5210  0002BA  2919               	incf	(printf@len+1)& (0+255),w,b
  5211  0002BC  B4D8               	btfsc	status,2,c
  5212  0002BE  EF82  F006         	goto	l9314
  5213  0002C2  D7E9               	goto	l9068
  5214  0002C4                     l9074:
  5215                           
  5216                           ; BSR set to: 1
  5217                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  5218  0002C4  C11A  FFD9         	movff	printf@ap,fsr2l
  5219  0002C8  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5220  0002CC  50DF               	movf	indf2,w,c
  5221  0002CE  0101               	movlb	1	; () banked
  5222  0002D0  6F30               	movwf	printf@c& (0+255),b
  5223                           
  5224                           ; BSR set to: 1
  5225  0002D2  0E02               	movlw	2
  5226  0002D4  0101               	movlb	1	; () banked
  5227  0002D6  271A               	addwf	printf@ap& (0+255),f,b
  5228  0002D8  0E00               	movlw	0
  5229  0002DA  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5230  0002DC                     l9078:
  5231                           
  5232                           ; BSR set to: 1
  5233                           ;doprnt.c: 805: cp = (char *)&c;
  5234  0002DC  0E30               	movlw	low printf@c
  5235  0002DE  0101               	movlb	1	; () banked
  5236  0002E0  6F16               	movwf	printf@cp& (0+255),b
  5237  0002E2  0E01               	movlw	high printf@c
  5238  0002E4  0101               	movlb	1	; () banked
  5239  0002E6  6F17               	movwf	(printf@cp+1)& (0+255),b
  5240                           
  5241                           ; BSR set to: 1
  5242                           ;doprnt.c: 806: len = 1;
  5243  0002E8  0E00               	movlw	0
  5244  0002EA  0101               	movlb	1	; () banked
  5245  0002EC  6F19               	movwf	(printf@len+1)& (0+255),b
  5246  0002EE  0E01               	movlw	1
  5247  0002F0  6F18               	movwf	printf@len& (0+255),b
  5248                           
  5249                           ;doprnt.c: 807: goto dostring;
  5250  0002F2  D795               	goto	l9052
  5251  0002F4                     l9082:
  5252                           
  5253                           ; BSR set to: 1
  5254                           ;doprnt.c: 818: flag |= 0x40;
  5255  0002F4  0101               	movlb	1	; () banked
  5256  0002F6  8D1C               	bsf	printf@flag& (0+255),6,b
  5257                           
  5258                           ; BSR set to: 1
  5259                           ;doprnt.c: 822: }
  5260                           
  5261                           ;doprnt.c: 819: break;
  5262  0002F8  D01F               	goto	l9088
  5263  0002FA                     l9086:
  5264  0002FA  C100  FFF6         	movff	printf@f,tblptrl
  5265  0002FE  C101  FFF7         	movff	printf@f+1,tblptrh
  5266  000302  0101               	movlb	1	; () banked
  5267  000304  4B00               	infsnz	printf@f& (0+255),f,b
  5268  000306  2B01               	incf	(printf@f+1)& (0+255),f,b
  5269  000308                     	if	0	;tblptru may be non-zero
  5270  000308                     	endif
  5271  000308                     	if	0	;tblptru may be non-zero
  5272  000308                     	endif
  5273  000308  0008               	tblrd		*
  5274  00030A  CFF5 F130          	movff	tablat,printf@c
  5275  00030E  0101               	movlb	1	; () banked
  5276  000310  5130               	movf	printf@c& (0+255),w,b
  5277                           
  5278                           ; Switch size 1, requested type "space"
  5279                           ; Number of cases is 6, Range of values is 0 to 117
  5280                           ; switch strategies available:
  5281                           ; Name         Instructions Cycles
  5282                           ; simple_byte           19    10 (average)
  5283                           ;	Chosen strategy is simple_byte
  5284  000312  0A00               	xorlw	0	; case 0
  5285  000314  B4D8               	btfsc	status,2,c
  5286  000316  0012               	return	
  5287  000318  0A63               	xorlw	99	; case 99
  5288  00031A  B4D8               	btfsc	status,2,c
  5289  00031C  D7D3               	goto	l9074
  5290  00031E  0A07               	xorlw	7	; case 100
  5291  000320  B4D8               	btfsc	status,2,c
  5292  000322  D00A               	goto	l9088
  5293  000324  0A02               	xorlw	2	; case 102
  5294  000326  B4D8               	btfsc	status,2,c
  5295  000328  D777               	goto	l9050
  5296  00032A  0A0F               	xorlw	15	; case 105
  5297  00032C  B4D8               	btfsc	status,2,c
  5298  00032E  D004               	goto	l9088
  5299  000330  0A1C               	xorlw	28	; case 117
  5300  000332  B4D8               	btfsc	status,2,c
  5301  000334  D7DF               	goto	l9082
  5302  000336  D7D2               	goto	l9078
  5303  000338                     l9088:
  5304                           
  5305                           ; BSR set to: 1
  5306                           ;doprnt.c: 825: if(flag & (0x700)) {
  5307  000338  0E07               	movlw	7
  5308  00033A  0101               	movlb	1	; () banked
  5309  00033C  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5310  00033E  B4D8               	btfsc	status,2,c
  5311  000340  D36F               	goto	l876
  5312                           
  5313                           ; BSR set to: 1
  5314                           ;doprnt.c: 827: if(flag & 0x1000)
  5315  000342  0101               	movlb	1	; () banked
  5316  000344  A91D               	btfss	(printf@flag+1)& (0+255),4,b
  5317  000346  D005               	goto	l9094
  5318                           
  5319                           ; BSR set to: 1
  5320                           ;doprnt.c: 829: prec = 6;
  5321  000348  0E00               	movlw	0
  5322  00034A  0101               	movlb	1	; () banked
  5323  00034C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  5324  00034E  0E06               	movlw	6
  5325  000350  6F2E               	movwf	printf@prec& (0+255),b
  5326  000352                     l9094:
  5327                           
  5328                           ; BSR set to: 1
  5329                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  5330  000352  C11A  FFD9         	movff	printf@ap,fsr2l
  5331  000356  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5332  00035A  CFDE F12A          	movff	postinc2,printf@fval
  5333  00035E  CFDE F12B          	movff	postinc2,printf@fval+1
  5334  000362  CFDE F12C          	movff	postinc2,printf@fval+2
  5335  000366  CFDE F12D          	movff	postinc2,printf@fval+3
  5336                           
  5337                           ; BSR set to: 1
  5338  00036A  0E04               	movlw	4
  5339  00036C  0101               	movlb	1	; () banked
  5340  00036E  271A               	addwf	printf@ap& (0+255),f,b
  5341  000370  0E00               	movlw	0
  5342  000372  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5343                           
  5344                           ; BSR set to: 1
  5345                           ;doprnt.c: 831: if(fval < 0.0) {
  5346  000374  0101               	movlb	1	; () banked
  5347  000376  AF2D               	btfss	(printf@fval+3)& (0+255),7,b
  5348  000378  D015               	goto	l9104
  5349                           
  5350                           ; BSR set to: 1
  5351                           ;doprnt.c: 832: fval = -fval;
  5352  00037A  C12A  F075         	movff	printf@fval,___flneg@f1
  5353  00037E  C12B  F076         	movff	printf@fval+1,___flneg@f1+1
  5354  000382  C12C  F077         	movff	printf@fval+2,___flneg@f1+2
  5355  000386  C12D  F078         	movff	printf@fval+3,___flneg@f1+3
  5356  00038A  EC9F  F02D         	call	___flneg	;wreg free
  5357  00038E  C075  F12A         	movff	?___flneg,printf@fval
  5358  000392  C076  F12B         	movff	?___flneg+1,printf@fval+1
  5359  000396  C077  F12C         	movff	?___flneg+2,printf@fval+2
  5360  00039A  C078  F12D         	movff	?___flneg+3,printf@fval+3
  5361                           
  5362                           ;doprnt.c: 833: flag |= 0x03;
  5363  00039E  0E03               	movlw	3
  5364  0003A0  0101               	movlb	1	; () banked
  5365  0003A2  131C               	iorwf	printf@flag& (0+255),f,b
  5366  0003A4                     l9104:
  5367                           
  5368                           ; BSR set to: 1
  5369                           ;doprnt.c: 834: }
  5370                           ;doprnt.c: 835: exp = 0;
  5371  0003A4  0E00               	movlw	0
  5372  0003A6  0101               	movlb	1	; () banked
  5373  0003A8  6F27               	movwf	(printf@exp+1)& (0+255),b
  5374  0003AA  0E00               	movlw	0
  5375  0003AC  6F26               	movwf	printf@exp& (0+255),b
  5376                           
  5377                           ; BSR set to: 1
  5378                           ;doprnt.c: 836: if( fval!=0) {
  5379  0003AE  0101               	movlb	1	; () banked
  5380  0003B0  512A               	movf	printf@fval& (0+255),w,b
  5381  0003B2  0101               	movlb	1	; () banked
  5382  0003B4  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  5383  0003B6  0101               	movlb	1	; () banked
  5384  0003B8  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  5385  0003BA  0101               	movlb	1	; () banked
  5386  0003BC  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  5387  0003BE  B4D8               	btfsc	status,2,c
  5388  0003C0  D08E               	goto	l9132
  5389                           
  5390                           ; BSR set to: 1
  5391                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  5392  0003C2  0101               	movlb	1	; () banked
  5393  0003C4  352C               	rlcf	(printf@fval+2)& (0+255),w,b
  5394  0003C6  352D               	rlcf	(printf@fval+3)& (0+255),w,b
  5395  0003C8  0F82               	addlw	130
  5396  0003CA  0101               	movlb	1	; () banked
  5397  0003CC  6F26               	movwf	printf@exp& (0+255),b
  5398  0003CE  0101               	movlb	1	; () banked
  5399  0003D0  6B27               	clrf	(printf@exp+1)& (0+255),b
  5400  0003D2  0EFF               	movlw	255
  5401  0003D4  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  5402                           
  5403                           ; BSR set to: 1
  5404                           ;doprnt.c: 838: exp--;
  5405  0003D6  0101               	movlb	1	; () banked
  5406  0003D8  0726               	decf	printf@exp& (0+255),f,b
  5407  0003DA  A0D8               	btfss	status,0,c
  5408  0003DC  0727               	decf	(printf@exp+1)& (0+255),f,b
  5409                           
  5410                           ; BSR set to: 1
  5411                           ;doprnt.c: 839: exp *= 3;
  5412  0003DE  C126  F075         	movff	printf@exp,___wmul@multiplier
  5413  0003E2  C127  F076         	movff	printf@exp+1,___wmul@multiplier+1
  5414  0003E6  0E00               	movlw	0
  5415  0003E8  0100               	movlb	0	; () banked
  5416  0003EA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  5417  0003EC  0E03               	movlw	3
  5418  0003EE  6F77               	movwf	___wmul@multiplicand& (0+255),b
  5419  0003F0  ECD7  F02D         	call	___wmul	;wreg free
  5420  0003F4  C075  F126         	movff	?___wmul,printf@exp
  5421  0003F8  C076  F127         	movff	?___wmul+1,printf@exp+1
  5422                           
  5423                           ;doprnt.c: 840: exp /= 10;
  5424  0003FC  C126  F07B         	movff	printf@exp,___awdiv@dividend
  5425  000400  C127  F07C         	movff	printf@exp+1,___awdiv@dividend+1
  5426  000404  0E00               	movlw	0
  5427  000406  0100               	movlb	0	; () banked
  5428  000408  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5429  00040A  0E0A               	movlw	10
  5430  00040C  6F7D               	movwf	___awdiv@divisor& (0+255),b
  5431  00040E  EC31  F027         	call	___awdiv	;wreg free
  5432  000412  C07B  F126         	movff	?___awdiv,printf@exp
  5433  000416  C07C  F127         	movff	?___awdiv+1,printf@exp+1
  5434                           
  5435                           ;doprnt.c: 841: if(exp < 0)
  5436  00041A  0101               	movlb	1	; () banked
  5437  00041C  AF27               	btfss	(printf@exp+1)& (0+255),7,b
  5438  00041E  D004               	goto	l9120
  5439                           
  5440                           ; BSR set to: 1
  5441                           ;doprnt.c: 842: exp--;
  5442  000420  0101               	movlb	1	; () banked
  5443  000422  0726               	decf	printf@exp& (0+255),f,b
  5444  000424  A0D8               	btfss	status,0,c
  5445  000426  0727               	decf	(printf@exp+1)& (0+255),f,b
  5446  000428                     l9120:
  5447                           
  5448                           ; BSR set to: 1
  5449                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5450  000428  0101               	movlb	1	; () banked
  5451  00042A  5126               	movf	printf@exp& (0+255),w,b
  5452  00042C  0800               	sublw	0
  5453  00042E  EC92  F006         	call	_scale
  5454  000432  C09C  F11E         	movff	?_scale,printf@tmpval
  5455  000436  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  5456  00043A  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  5457  00043E  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  5458                           
  5459                           ;doprnt.c: 847: tmpval.integ *= fval;
  5460  000442  C11E  F083         	movff	printf@tmpval,___flmul@b
  5461  000446  C11F  F084         	movff	printf@tmpval+1,___flmul@b+1
  5462  00044A  C120  F085         	movff	printf@tmpval+2,___flmul@b+2
  5463  00044E  C121  F086         	movff	printf@tmpval+3,___flmul@b+3
  5464  000452  C12A  F087         	movff	printf@fval,___flmul@a
  5465  000456  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  5466  00045A  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  5467  00045E  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  5468  000462  EC4F  F00B         	call	___flmul	;wreg free
  5469  000466  C083  F11E         	movff	?___flmul,printf@tmpval
  5470  00046A  C084  F11F         	movff	?___flmul+1,printf@tmpval+1
  5471  00046E  C085  F120         	movff	?___flmul+2,printf@tmpval+2
  5472  000472  C086  F121         	movff	?___flmul+3,printf@tmpval+3
  5473                           
  5474                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5475  000476  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5476  00047A  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5477  00047E  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5478  000482  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5479  000486  0E00               	movlw	0
  5480  000488  0100               	movlb	0	; () banked
  5481  00048A  6F79               	movwf	___flge@ff2& (0+255),b
  5482  00048C  0E00               	movlw	0
  5483  00048E  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5484  000490  0E80               	movlw	128
  5485  000492  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5486  000494  0E3F               	movlw	63
  5487  000496  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5488  000498  ECB8  F01E         	call	___flge	;wreg free
  5489  00049C  0100               	movlb	0	; () banked
  5490  00049E  B0D8               	btfsc	status,0,c
  5491  0004A0  D005               	goto	l9128
  5492                           
  5493                           ; BSR set to: 0
  5494                           ;doprnt.c: 849: exp--;
  5495  0004A2  0101               	movlb	1	; () banked
  5496  0004A4  0726               	decf	printf@exp& (0+255),f,b
  5497  0004A6  A0D8               	btfss	status,0,c
  5498  0004A8  0727               	decf	(printf@exp+1)& (0+255),f,b
  5499  0004AA  D019               	goto	l9132
  5500  0004AC                     l9128:
  5501                           
  5502                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5503  0004AC  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5504  0004B0  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5505  0004B4  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5506  0004B8  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5507  0004BC  0E00               	movlw	0
  5508  0004BE  0100               	movlb	0	; () banked
  5509  0004C0  6F79               	movwf	___flge@ff2& (0+255),b
  5510  0004C2  0E00               	movlw	0
  5511  0004C4  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5512  0004C6  0E20               	movlw	32
  5513  0004C8  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5514  0004CA  0E41               	movlw	65
  5515  0004CC  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5516  0004CE  ECB8  F01E         	call	___flge	;wreg free
  5517  0004D2  0100               	movlb	0	; () banked
  5518  0004D4  A0D8               	btfss	status,0,c
  5519  0004D6  D003               	goto	l9132
  5520                           
  5521                           ; BSR set to: 0
  5522                           ;doprnt.c: 851: exp++;
  5523  0004D8  0101               	movlb	1	; () banked
  5524  0004DA  4B26               	infsnz	printf@exp& (0+255),f,b
  5525  0004DC  2B27               	incf	(printf@exp+1)& (0+255),f,b
  5526  0004DE                     l9132:
  5527                           
  5528                           ;doprnt.c: 852: }
  5529                           ;doprnt.c: 1112: if(prec <= 12)
  5530  0004DE  0101               	movlb	1	; () banked
  5531  0004E0  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  5532  0004E2  D008               	goto	l9134
  5533  0004E4  0101               	movlb	1	; () banked
  5534  0004E6  512F               	movf	(printf@prec+1)& (0+255),w,b
  5535  0004E8  E123               	bnz	l9136
  5536  0004EA  0E0D               	movlw	13
  5537  0004EC  0101               	movlb	1	; () banked
  5538  0004EE  5D2E               	subwf	printf@prec& (0+255),w,b
  5539  0004F0  B0D8               	btfsc	status,0,c
  5540  0004F2  D01E               	goto	l9136
  5541  0004F4                     l9134:
  5542                           
  5543                           ; BSR set to: 1
  5544                           ;doprnt.c: 1113: fval += fround(prec);
  5545  0004F4  C12A  F0A9         	movff	printf@fval,___fladd@b
  5546  0004F8  C12B  F0AA         	movff	printf@fval+1,___fladd@b+1
  5547  0004FC  C12C  F0AB         	movff	printf@fval+2,___fladd@b+2
  5548  000500  C12D  F0AC         	movff	printf@fval+3,___fladd@b+3
  5549  000504  0101               	movlb	1	; () banked
  5550  000506  512E               	movf	printf@prec& (0+255),w,b
  5551  000508  ECEB  F012         	call	_fround
  5552  00050C  C09C  F0AD         	movff	?_fround,___fladd@a
  5553  000510  C09D  F0AE         	movff	?_fround+1,___fladd@a+1
  5554  000514  C09E  F0AF         	movff	?_fround+2,___fladd@a+2
  5555  000518  C09F  F0B0         	movff	?_fround+3,___fladd@a+3
  5556  00051C  ECFB  F008         	call	___fladd	;wreg free
  5557  000520  C0A9  F12A         	movff	?___fladd,printf@fval
  5558  000524  C0AA  F12B         	movff	?___fladd+1,printf@fval+1
  5559  000528  C0AB  F12C         	movff	?___fladd+2,printf@fval+2
  5560  00052C  C0AC  F12D         	movff	?___fladd+3,printf@fval+3
  5561  000530                     l9136:
  5562                           
  5563                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5564  000530  0101               	movlb	1	; () banked
  5565  000532  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5566  000534  D008               	goto	l9138
  5567  000536  0101               	movlb	1	; () banked
  5568  000538  5127               	movf	(printf@exp+1)& (0+255),w,b
  5569  00053A  E12E               	bnz	l9144
  5570  00053C  0E0A               	movlw	10
  5571  00053E  0101               	movlb	1	; () banked
  5572  000540  5D26               	subwf	printf@exp& (0+255),w,b
  5573  000542  B0D8               	btfsc	status,0,c
  5574  000544  D029               	goto	l9144
  5575  000546                     l9138:
  5576                           
  5577                           ; BSR set to: 1
  5578  000546  0101               	movlb	1	; () banked
  5579  000548  512A               	movf	printf@fval& (0+255),w,b
  5580  00054A  0101               	movlb	1	; () banked
  5581  00054C  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  5582  00054E  0101               	movlb	1	; () banked
  5583  000550  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  5584  000552  0101               	movlb	1	; () banked
  5585  000554  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  5586  000556  B4D8               	btfsc	status,2,c
  5587  000558  D06D               	goto	l9158
  5588                           
  5589                           ; BSR set to: 1
  5590  00055A  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5591  00055E  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5592  000562  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5593  000566  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5594  00056A  EC5C  F024         	call	___fltol	;wreg free
  5595  00056E  0100               	movlb	0	; () banked
  5596  000570  51A5               	movf	?___fltol& (0+255),w,b
  5597  000572  0100               	movlb	0	; () banked
  5598  000574  11A6               	iorwf	(?___fltol+1)& (0+255),w,b
  5599  000576  0100               	movlb	0	; () banked
  5600  000578  11A7               	iorwf	(?___fltol+2)& (0+255),w,b
  5601  00057A  0100               	movlb	0	; () banked
  5602  00057C  11A8               	iorwf	(?___fltol+3)& (0+255),w,b
  5603  00057E  A4D8               	btfss	status,2,c
  5604  000580  D059               	goto	l9158
  5605                           
  5606                           ; BSR set to: 0
  5607  000582  0101               	movlb	1	; () banked
  5608  000584  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5609  000586  D056               	goto	l9158
  5610  000588  0101               	movlb	1	; () banked
  5611  00058A  5127               	movf	(printf@exp+1)& (0+255),w,b
  5612  00058C  E105               	bnz	l9144
  5613  00058E  0E02               	movlw	2
  5614  000590  0101               	movlb	1	; () banked
  5615  000592  5D26               	subwf	printf@exp& (0+255),w,b
  5616  000594  A0D8               	btfss	status,0,c
  5617  000596  D04E               	goto	l9158
  5618  000598                     l9144:
  5619                           
  5620                           ; BSR set to: 1
  5621                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5622  000598  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5623  00059C  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5624  0005A0  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5625  0005A4  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5626  0005A8  0E5F               	movlw	95
  5627  0005AA  0100               	movlb	0	; () banked
  5628  0005AC  6F79               	movwf	___flge@ff2& (0+255),b
  5629  0005AE  0E70               	movlw	112
  5630  0005B0  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5631  0005B2  0E89               	movlw	137
  5632  0005B4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5633  0005B6  0E40               	movlw	64
  5634  0005B8  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5635  0005BA  ECB8  F01E         	call	___flge	;wreg free
  5636  0005BE  0100               	movlb	0	; () banked
  5637  0005C0  B0D8               	btfsc	status,0,c
  5638  0005C2  D003               	goto	l9148
  5639                           
  5640                           ; BSR set to: 0
  5641                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5642  0005C4  0101               	movlb	1	; () banked
  5643  0005C6  0EF7               	movlw	247
  5644  0005C8  D002               	goto	L1
  5645  0005CA                     l9148:
  5646                           
  5647                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5648  0005CA  0101               	movlb	1	; () banked
  5649  0005CC  0EF8               	movlw	248
  5650  0005CE                     L1:
  5651  0005CE  2726               	addwf	printf@exp& (0+255),f,b
  5652  0005D0  0EFF               	movlw	255
  5653  0005D2  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  5654                           
  5655                           ; BSR set to: 1
  5656                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5657                           
  5658                           ; BSR set to: 1
  5659  0005D4  0101               	movlb	1	; () banked
  5660  0005D6  5126               	movf	printf@exp& (0+255),w,b
  5661  0005D8  EC92  F006         	call	_scale
  5662  0005DC  C09C  F11E         	movff	?_scale,printf@tmpval
  5663  0005E0  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  5664  0005E4  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  5665  0005E8  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  5666  0005EC  C12A  F075         	movff	printf@fval,__div_to_l_@f1
  5667  0005F0  C12B  F076         	movff	printf@fval+1,__div_to_l_@f1+1
  5668  0005F4  C12C  F077         	movff	printf@fval+2,__div_to_l_@f1+2
  5669  0005F8  C12D  F078         	movff	printf@fval+3,__div_to_l_@f1+3
  5670  0005FC  C11E  F079         	movff	printf@tmpval,__div_to_l_@f2
  5671  000600  C11F  F07A         	movff	printf@tmpval+1,__div_to_l_@f2+1
  5672  000604  C120  F07B         	movff	printf@tmpval+2,__div_to_l_@f2+2
  5673  000608  C121  F07C         	movff	printf@tmpval+3,__div_to_l_@f2+3
  5674  00060C  EC80  F01F         	call	__div_to_l_	;wreg free
  5675  000610  C075  F122         	movff	?__div_to_l_,printf@val
  5676  000614  C076  F123         	movff	?__div_to_l_+1,printf@val+1
  5677  000618  C077  F124         	movff	?__div_to_l_+2,printf@val+2
  5678  00061C  C078  F125         	movff	?__div_to_l_+3,printf@val+3
  5679                           
  5680                           ;doprnt.c: 1129: fval = 0.0;
  5681  000620  0E00               	movlw	0
  5682  000622  0101               	movlb	1	; () banked
  5683  000624  6F2A               	movwf	printf@fval& (0+255),b
  5684  000626  0E00               	movlw	0
  5685  000628  6F2B               	movwf	(printf@fval+1)& (0+255),b
  5686  00062A  0E00               	movlw	0
  5687  00062C  6F2C               	movwf	(printf@fval+2)& (0+255),b
  5688  00062E  0E00               	movlw	0
  5689  000630  6F2D               	movwf	(printf@fval+3)& (0+255),b
  5690                           
  5691                           ;doprnt.c: 1130: } else {
  5692  000632  D03C               	goto	l9162
  5693  000634                     l9158:
  5694                           
  5695                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5696  000634  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5697  000638  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5698  00063C  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5699  000640  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5700  000644  EC5C  F024         	call	___fltol	;wreg free
  5701  000648  C0A5  F122         	movff	?___fltol,printf@val
  5702  00064C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  5703  000650  C0A7  F124         	movff	?___fltol+2,printf@val+2
  5704  000654  C0A8  F125         	movff	?___fltol+3,printf@val+3
  5705                           
  5706                           ;doprnt.c: 1132: fval -= (double)val;
  5707  000658  C12A  F0BD         	movff	printf@fval,___flsub@b
  5708  00065C  C12B  F0BE         	movff	printf@fval+1,___flsub@b+1
  5709  000660  C12C  F0BF         	movff	printf@fval+2,___flsub@b+2
  5710  000664  C12D  F0C0         	movff	printf@fval+3,___flsub@b+3
  5711  000668  C122  F075         	movff	printf@val,___xxtofl@val
  5712  00066C  C123  F076         	movff	printf@val+1,___xxtofl@val+1
  5713  000670  C124  F077         	movff	printf@val+2,___xxtofl@val+2
  5714  000674  C125  F078         	movff	printf@val+3,___xxtofl@val+3
  5715  000678  0E00               	movlw	0
  5716  00067A  EC51  F01B         	call	___xxtofl
  5717  00067E  C075  F0C1         	movff	?___xxtofl,___flsub@a
  5718  000682  C076  F0C2         	movff	?___xxtofl+1,___flsub@a+1
  5719  000686  C077  F0C3         	movff	?___xxtofl+2,___flsub@a+2
  5720  00068A  C078  F0C4         	movff	?___xxtofl+3,___flsub@a+3
  5721  00068E  EC14  F02D         	call	___flsub	;wreg free
  5722  000692  C0BD  F12A         	movff	?___flsub,printf@fval
  5723  000696  C0BE  F12B         	movff	?___flsub+1,printf@fval+1
  5724  00069A  C0BF  F12C         	movff	?___flsub+2,printf@fval+2
  5725  00069E  C0C0  F12D         	movff	?___flsub+3,printf@fval+3
  5726                           
  5727                           ;doprnt.c: 1133: exp = 0;
  5728  0006A2  0E00               	movlw	0
  5729  0006A4  0101               	movlb	1	; () banked
  5730  0006A6  6F27               	movwf	(printf@exp+1)& (0+255),b
  5731  0006A8  0E00               	movlw	0
  5732  0006AA  6F26               	movwf	printf@exp& (0+255),b
  5733  0006AC                     l9162:
  5734                           
  5735                           ; BSR set to: 1
  5736                           ;doprnt.c: 1134: }
  5737                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5738  0006AC  0E01               	movlw	1
  5739  0006AE  0101               	movlb	1	; () banked
  5740  0006B0  6F30               	movwf	printf@c& (0+255),b
  5741  0006B2                     l9164:
  5742                           
  5743                           ; BSR set to: 1
  5744  0006B2  0E0A               	movlw	10
  5745  0006B4  0101               	movlb	1	; () banked
  5746  0006B6  1930               	xorwf	printf@c& (0+255),w,b
  5747  0006B8  B4D8               	btfsc	status,2,c
  5748  0006BA  D01E               	goto	l9176
  5749                           
  5750                           ; BSR set to: 1
  5751                           ;doprnt.c: 1137: if(val < dpowers[c])
  5752                           
  5753                           ; BSR set to: 1
  5754                           
  5755                           ; BSR set to: 1
  5756  0006BC  0101               	movlb	1	; () banked
  5757  0006BE  5130               	movf	printf@c& (0+255),w,b
  5758  0006C0  0D04               	mullw	4
  5759  0006C2  0E41               	movlw	low _dpowers
  5760  0006C4  24F3               	addwf	prodl,w,c
  5761  0006C6  6EF6               	movwf	tblptrl,c
  5762  0006C8  0E7D               	movlw	high _dpowers
  5763  0006CA  20F4               	addwfc	prodh,w,c
  5764  0006CC  6EF7               	movwf	tblptrh,c
  5765  0006CE                     	if	0	;There are less than 3 active tblptr bytes
  5766  0006CE                     	endif
  5767  0006CE  0009               	tblrd		*+
  5768  0006D0  50F5               	movf	tablat,w,c
  5769  0006D2  0101               	movlb	1	; () banked
  5770  0006D4  5D22               	subwf	printf@val& (0+255),w,b
  5771  0006D6  0009               	tblrd		*+
  5772  0006D8  50F5               	movf	tablat,w,c
  5773  0006DA  0101               	movlb	1	; () banked
  5774  0006DC  5923               	subwfb	(printf@val+1)& (0+255),w,b
  5775  0006DE  0009               	tblrd		*+
  5776  0006E0  50F5               	movf	tablat,w,c
  5777  0006E2  0101               	movlb	1	; () banked
  5778  0006E4  5924               	subwfb	(printf@val+2)& (0+255),w,b
  5779  0006E6  0009               	tblrd		*+
  5780  0006E8  50F5               	movf	tablat,w,c
  5781  0006EA  0101               	movlb	1	; () banked
  5782  0006EC  5925               	subwfb	(printf@val+3)& (0+255),w,b
  5783  0006EE  A0D8               	btfss	status,0,c
  5784  0006F0  D003               	goto	l9176
  5785                           
  5786                           ; BSR set to: 1
  5787                           
  5788                           ; BSR set to: 1
  5789                           
  5790                           ; BSR set to: 1
  5791                           ;doprnt.c: 1138: break;
  5792  0006F2  0101               	movlb	1	; () banked
  5793  0006F4  2B30               	incf	printf@c& (0+255),f,b
  5794  0006F6  D7DD               	goto	l9164
  5795  0006F8                     l9176:
  5796                           
  5797                           ; BSR set to: 1
  5798                           ;doprnt.c: 1142: width -= prec + c + exp;
  5799  0006F8  C130  F0C5         	movff	printf@c,??_printf
  5800  0006FC  0100               	movlb	0	; () banked
  5801  0006FE  6BC6               	clrf	(??_printf+1)& (0+255),b
  5802  000700  BFC5               	btfsc	??_printf& (0+255),7,b
  5803  000702  07C6               	decf	(??_printf+1)& (0+255),f,b
  5804  000704  0101               	movlb	1	; () banked
  5805  000706  512E               	movf	printf@prec& (0+255),w,b
  5806  000708  0100               	movlb	0	; () banked
  5807  00070A  27C5               	addwf	??_printf& (0+255),f,b
  5808  00070C  0101               	movlb	1	; () banked
  5809  00070E  512F               	movf	(printf@prec+1)& (0+255),w,b
  5810  000710  0100               	movlb	0	; () banked
  5811  000712  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5812  000714  0101               	movlb	1	; () banked
  5813  000716  5126               	movf	printf@exp& (0+255),w,b
  5814  000718  0100               	movlb	0	; () banked
  5815  00071A  27C5               	addwf	??_printf& (0+255),f,b
  5816  00071C  0101               	movlb	1	; () banked
  5817  00071E  5127               	movf	(printf@exp+1)& (0+255),w,b
  5818  000720  0100               	movlb	0	; () banked
  5819  000722  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5820  000724  0100               	movlb	0	; () banked
  5821  000726  51C5               	movf	??_printf& (0+255),w,b
  5822  000728  0101               	movlb	1	; () banked
  5823  00072A  5F28               	subwf	printf@width& (0+255),f,b
  5824  00072C  0100               	movlb	0	; () banked
  5825  00072E  51C6               	movf	(??_printf+1)& (0+255),w,b
  5826  000730  0101               	movlb	1	; () banked
  5827  000732  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  5828                           
  5829                           ;doprnt.c: 1143: if(
  5830                           ;doprnt.c: 1147: prec)
  5831  000734  0101               	movlb	1	; () banked
  5832  000736  512E               	movf	printf@prec& (0+255),w,b
  5833  000738  0101               	movlb	1	; () banked
  5834  00073A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5835  00073C  B4D8               	btfsc	status,2,c
  5836  00073E  D004               	goto	l9180
  5837                           
  5838                           ; BSR set to: 1
  5839                           ;doprnt.c: 1148: width--;
  5840  000740  0101               	movlb	1	; () banked
  5841  000742  0728               	decf	printf@width& (0+255),f,b
  5842  000744  A0D8               	btfss	status,0,c
  5843  000746  0729               	decf	(printf@width+1)& (0+255),f,b
  5844  000748                     l9180:
  5845                           
  5846                           ; BSR set to: 1
  5847                           ;doprnt.c: 1149: if(flag & 0x03)
  5848  000748  0E03               	movlw	3
  5849  00074A  0101               	movlb	1	; () banked
  5850  00074C  151C               	andwf	printf@flag& (0+255),w,b
  5851  00074E  0100               	movlb	0	; () banked
  5852  000750  6FC5               	movwf	??_printf& (0+255),b
  5853  000752  0E00               	movlw	0
  5854  000754  0101               	movlb	1	; () banked
  5855  000756  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5856  000758  0100               	movlb	0	; () banked
  5857  00075A  6FC6               	movwf	(??_printf+1)& (0+255),b
  5858  00075C  0100               	movlb	0	; () banked
  5859  00075E  51C5               	movf	??_printf& (0+255),w,b
  5860  000760  0100               	movlb	0	; () banked
  5861  000762  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5862  000764  B4D8               	btfsc	status,2,c
  5863  000766  D008               	goto	l9188
  5864  000768  D003               	goto	l9186
  5865  00076A                     l9184:
  5866                           
  5867                           ; BSR set to: 1
  5868                           ;doprnt.c: 1181: (putch(' ') );
  5869  00076A  0E20               	movlw	32
  5870  00076C  EC58  F02F         	call	_putch
  5871  000770                     l9186:
  5872                           
  5873                           ;doprnt.c: 1182: width--;
  5874  000770  0101               	movlb	1	; () banked
  5875  000772  0728               	decf	printf@width& (0+255),f,b
  5876  000774  A0D8               	btfss	status,0,c
  5877  000776  0729               	decf	(printf@width+1)& (0+255),f,b
  5878  000778                     l9188:
  5879  000778  0101               	movlb	1	; () banked
  5880  00077A  BF29               	btfsc	(printf@width+1)& (0+255),7,b
  5881  00077C  D007               	goto	l9190
  5882  00077E  0101               	movlb	1	; () banked
  5883  000780  5129               	movf	(printf@width+1)& (0+255),w,b
  5884  000782  E1F3               	bnz	l9184
  5885  000784  0101               	movlb	1	; () banked
  5886  000786  0528               	decf	printf@width& (0+255),w,b
  5887  000788  B0D8               	btfsc	status,0,c
  5888  00078A  D7EF               	goto	l9184
  5889  00078C                     l9190:
  5890                           
  5891                           ; BSR set to: 1
  5892                           ;doprnt.c: 1183: }
  5893                           ;doprnt.c: 1188: if(flag & 0x03)
  5894  00078C  0E03               	movlw	3
  5895  00078E  0101               	movlb	1	; () banked
  5896  000790  151C               	andwf	printf@flag& (0+255),w,b
  5897  000792  0100               	movlb	0	; () banked
  5898  000794  6FC5               	movwf	??_printf& (0+255),b
  5899  000796  0E00               	movlw	0
  5900  000798  0101               	movlb	1	; () banked
  5901  00079A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5902  00079C  0100               	movlb	0	; () banked
  5903  00079E  6FC6               	movwf	(??_printf+1)& (0+255),b
  5904  0007A0  0100               	movlb	0	; () banked
  5905  0007A2  51C5               	movf	??_printf& (0+255),w,b
  5906  0007A4  0100               	movlb	0	; () banked
  5907  0007A6  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5908  0007A8  B4D8               	btfsc	status,2,c
  5909  0007AA  D04B               	goto	l9200
  5910                           
  5911                           ; BSR set to: 0
  5912                           ;doprnt.c: 1190: (putch('-') );
  5913  0007AC  0E2D               	movlw	45
  5914  0007AE  EC58  F02F         	call	_putch
  5915                           
  5916                           ;doprnt.c: 1195: }
  5917                           ;doprnt.c: 1196: while(c--) {
  5918  0007B2  D047               	goto	l9200
  5919  0007B4                     l9194:
  5920                           
  5921                           ;doprnt.c: 1200: {
  5922                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5923  0007B4  C122  F075         	movff	printf@val,___lldiv@dividend
  5924  0007B8  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  5925  0007BC  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  5926  0007C0  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  5927  0007C4  0101               	movlb	1	; () banked
  5928  0007C6  5130               	movf	printf@c& (0+255),w,b
  5929  0007C8  0D04               	mullw	4
  5930  0007CA  0E41               	movlw	low _dpowers
  5931  0007CC  24F3               	addwf	prodl,w,c
  5932  0007CE  6EF6               	movwf	tblptrl,c
  5933  0007D0  0E7D               	movlw	high _dpowers
  5934  0007D2  20F4               	addwfc	prodh,w,c
  5935  0007D4  6EF7               	movwf	tblptrh,c
  5936  0007D6                     	if	0	;There are less than 3 active tblptr bytes
  5937  0007D6                     	endif
  5938  0007D6  0009               	tblrd		*+
  5939  0007D8  CFF5 F079          	movff	tablat,___lldiv@divisor
  5940  0007DC  0009               	tblrd		*+
  5941  0007DE  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  5942  0007E2  0009               	tblrd		*+
  5943  0007E4  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  5944  0007E8  000A               	tblrd		*-
  5945  0007EA  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  5946  0007EE  EC90  F027         	call	___lldiv	;wreg free
  5947  0007F2  C075  F11E         	movff	?___lldiv,printf@tmpval
  5948  0007F6  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  5949  0007FA  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  5950  0007FE  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  5951                           
  5952                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5953  000802  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  5954  000806  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  5955  00080A  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  5956  00080E  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  5957  000812  0E0A               	movlw	10
  5958  000814  0100               	movlb	0	; () banked
  5959  000816  6F86               	movwf	___llmod@divisor& (0+255),b
  5960  000818  0E00               	movlw	0
  5961  00081A  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  5962  00081C  0E00               	movlw	0
  5963  00081E  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  5964  000820  0E00               	movlw	0
  5965  000822  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  5966  000824  EC39  F029         	call	___llmod	;wreg free
  5967  000828  C082  F11E         	movff	?___llmod,printf@tmpval
  5968  00082C  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  5969  000830  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  5970  000834  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  5971                           
  5972                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5973  000838  0101               	movlb	1	; () banked
  5974  00083A  511E               	movf	printf@tmpval& (0+255),w,b
  5975  00083C  0F30               	addlw	48
  5976  00083E  EC58  F02F         	call	_putch
  5977  000842                     l9200:
  5978  000842  0101               	movlb	1	; () banked
  5979  000844  0730               	decf	printf@c& (0+255),f,b
  5980  000846  0101               	movlb	1	; () banked
  5981  000848  2930               	incf	printf@c& (0+255),w,b
  5982  00084A  B4D8               	btfsc	status,2,c
  5983  00084C  D008               	goto	l9206
  5984  00084E  D7B2               	goto	l9194
  5985  000850                     l9202:
  5986                           
  5987                           ; BSR set to: 1
  5988                           ;doprnt.c: 1208: (putch('0') );
  5989  000850  0E30               	movlw	48
  5990  000852  EC58  F02F         	call	_putch
  5991                           
  5992                           ;doprnt.c: 1209: exp--;
  5993  000856  0101               	movlb	1	; () banked
  5994  000858  0726               	decf	printf@exp& (0+255),f,b
  5995  00085A  A0D8               	btfss	status,0,c
  5996  00085C  0727               	decf	(printf@exp+1)& (0+255),f,b
  5997  00085E                     l9206:
  5998                           
  5999                           ; BSR set to: 1
  6000  00085E  0101               	movlb	1	; () banked
  6001  000860  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  6002  000862  D007               	goto	l9208
  6003  000864  0101               	movlb	1	; () banked
  6004  000866  5127               	movf	(printf@exp+1)& (0+255),w,b
  6005  000868  E1F3               	bnz	l9202
  6006  00086A  0101               	movlb	1	; () banked
  6007  00086C  0526               	decf	printf@exp& (0+255),w,b
  6008  00086E  B0D8               	btfsc	status,0,c
  6009  000870  D7EF               	goto	l9202
  6010  000872                     l9208:
  6011                           
  6012                           ; BSR set to: 1
  6013                           ;doprnt.c: 1210: }
  6014                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  6015  000872  0101               	movlb	1	; () banked
  6016  000874  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  6017  000876  D00C               	goto	l910
  6018  000878  0101               	movlb	1	; () banked
  6019  00087A  512F               	movf	(printf@prec+1)& (0+255),w,b
  6020  00087C  E105               	bnz	u11570
  6021  00087E  0E09               	movlw	9
  6022  000880  0101               	movlb	1	; () banked
  6023  000882  5D2E               	subwf	printf@prec& (0+255),w,b
  6024  000884  A0D8               	btfss	status,0,c
  6025  000886  D004               	goto	l910
  6026  000888                     u11570:
  6027                           
  6028                           ; BSR set to: 1
  6029                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  6030  000888  0E08               	movlw	8
  6031  00088A  0101               	movlb	1	; () banked
  6032  00088C  6F30               	movwf	printf@c& (0+255),b
  6033  00088E  D002               	goto	l9212
  6034  000890                     l910:
  6035                           
  6036                           ; BSR set to: 1
  6037                           ;doprnt.c: 1213: else
  6038                           ;doprnt.c: 1214: c = prec;
  6039  000890  C12E  F130         	movff	printf@prec,printf@c
  6040  000894                     l9212:
  6041                           
  6042                           ; BSR set to: 1
  6043                           ;doprnt.c: 1215: prec -= c;
  6044  000894  0101               	movlb	1	; () banked
  6045  000896  5130               	movf	printf@c& (0+255),w,b
  6046  000898  0101               	movlb	1	; () banked
  6047  00089A  5F2E               	subwf	printf@prec& (0+255),f,b
  6048  00089C  0E00               	movlw	0
  6049  00089E  0101               	movlb	1	; () banked
  6050  0008A0  BF30               	btfsc	printf@c& (0+255),7,b
  6051  0008A2  0EFF               	movlw	255
  6052  0008A4  0101               	movlb	1	; () banked
  6053  0008A6  5B2F               	subwfb	(printf@prec+1)& (0+255),f,b
  6054                           
  6055                           ; BSR set to: 1
  6056                           ;doprnt.c: 1219: if(c)
  6057  0008A8  0101               	movlb	1	; () banked
  6058  0008AA  5130               	movf	printf@c& (0+255),w,b
  6059  0008AC  0101               	movlb	1	; () banked
  6060  0008AE  B4D8               	btfsc	status,2,c
  6061  0008B0  D003               	goto	l9218
  6062                           
  6063                           ; BSR set to: 1
  6064                           ;doprnt.c: 1221: (putch('.') );
  6065  0008B2  0E2E               	movlw	46
  6066  0008B4  EC58  F02F         	call	_putch
  6067  0008B8                     l9218:
  6068                           
  6069                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6070  0008B8  0101               	movlb	1	; () banked
  6071  0008BA  5130               	movf	printf@c& (0+255),w,b
  6072  0008BC  EC92  F006         	call	_scale
  6073  0008C0  C09C  F112         	movff	?_scale,_printf$2892
  6074  0008C4  C09D  F113         	movff	?_scale+1,_printf$2892+1
  6075  0008C8  C09E  F114         	movff	?_scale+2,_printf$2892+2
  6076  0008CC  C09F  F115         	movff	?_scale+3,_printf$2892+3
  6077                           
  6078                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  6079  0008D0  C12A  F087         	movff	printf@fval,___flmul@a
  6080  0008D4  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  6081  0008D8  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  6082  0008DC  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  6083  0008E0  C112  F083         	movff	_printf$2892,___flmul@b
  6084  0008E4  C113  F084         	movff	_printf$2892+1,___flmul@b+1
  6085  0008E8  C114  F085         	movff	_printf$2892+2,___flmul@b+2
  6086  0008EC  C115  F086         	movff	_printf$2892+3,___flmul@b+3
  6087  0008F0  EC4F  F00B         	call	___flmul	;wreg free
  6088  0008F4  C083  F0A5         	movff	?___flmul,___fltol@f1
  6089  0008F8  C084  F0A6         	movff	?___flmul+1,___fltol@f1+1
  6090  0008FC  C085  F0A7         	movff	?___flmul+2,___fltol@f1+2
  6091  000900  C086  F0A8         	movff	?___flmul+3,___fltol@f1+3
  6092  000904  EC5C  F024         	call	___fltol	;wreg free
  6093  000908  C0A5  F122         	movff	?___fltol,printf@val
  6094  00090C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  6095  000910  C0A7  F124         	movff	?___fltol+2,printf@val+2
  6096  000914  C0A8  F125         	movff	?___fltol+3,printf@val+3
  6097                           
  6098                           ;doprnt.c: 1228: while(c--) {
  6099  000918  D06E               	goto	l9228
  6100  00091A                     l9222:
  6101                           
  6102                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  6103  00091A  C122  F075         	movff	printf@val,___lldiv@dividend
  6104  00091E  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  6105  000922  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  6106  000926  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  6107  00092A  0101               	movlb	1	; () banked
  6108  00092C  5130               	movf	printf@c& (0+255),w,b
  6109  00092E  0D04               	mullw	4
  6110  000930  0E41               	movlw	low _dpowers
  6111  000932  24F3               	addwf	prodl,w,c
  6112  000934  6EF6               	movwf	tblptrl,c
  6113  000936  0E7D               	movlw	high _dpowers
  6114  000938  20F4               	addwfc	prodh,w,c
  6115  00093A  6EF7               	movwf	tblptrh,c
  6116  00093C                     	if	0	;There are less than 3 active tblptr bytes
  6117  00093C                     	endif
  6118  00093C  0009               	tblrd		*+
  6119  00093E  CFF5 F079          	movff	tablat,___lldiv@divisor
  6120  000942  0009               	tblrd		*+
  6121  000944  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  6122  000948  0009               	tblrd		*+
  6123  00094A  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  6124  00094E  000A               	tblrd		*-
  6125  000950  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  6126  000954  EC90  F027         	call	___lldiv	;wreg free
  6127  000958  C075  F11E         	movff	?___lldiv,printf@tmpval
  6128  00095C  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  6129  000960  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  6130  000964  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  6131                           
  6132                           ;doprnt.c: 1230: tmpval.vd %= 10;
  6133  000968  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  6134  00096C  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  6135  000970  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  6136  000974  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  6137  000978  0E0A               	movlw	10
  6138  00097A  0100               	movlb	0	; () banked
  6139  00097C  6F86               	movwf	___llmod@divisor& (0+255),b
  6140  00097E  0E00               	movlw	0
  6141  000980  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  6142  000982  0E00               	movlw	0
  6143  000984  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  6144  000986  0E00               	movlw	0
  6145  000988  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  6146  00098A  EC39  F029         	call	___llmod	;wreg free
  6147  00098E  C082  F11E         	movff	?___llmod,printf@tmpval
  6148  000992  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  6149  000996  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  6150  00099A  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  6151                           
  6152                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  6153  00099E  0101               	movlb	1	; () banked
  6154  0009A0  511E               	movf	printf@tmpval& (0+255),w,b
  6155  0009A2  0F30               	addlw	48
  6156  0009A4  EC58  F02F         	call	_putch
  6157                           
  6158                           ;doprnt.c: 1232: val %= dpowers[c];
  6159  0009A8  C122  F082         	movff	printf@val,___llmod@dividend
  6160  0009AC  C123  F083         	movff	printf@val+1,___llmod@dividend+1
  6161  0009B0  C124  F084         	movff	printf@val+2,___llmod@dividend+2
  6162  0009B4  C125  F085         	movff	printf@val+3,___llmod@dividend+3
  6163  0009B8  0101               	movlb	1	; () banked
  6164  0009BA  5130               	movf	printf@c& (0+255),w,b
  6165  0009BC  0D04               	mullw	4
  6166  0009BE  0E41               	movlw	low _dpowers
  6167  0009C0  24F3               	addwf	prodl,w,c
  6168  0009C2  6EF6               	movwf	tblptrl,c
  6169  0009C4  0E7D               	movlw	high _dpowers
  6170  0009C6  20F4               	addwfc	prodh,w,c
  6171  0009C8  6EF7               	movwf	tblptrh,c
  6172  0009CA                     	if	0	;There are less than 3 active tblptr bytes
  6173  0009CA                     	endif
  6174  0009CA  0009               	tblrd		*+
  6175  0009CC  CFF5 F086          	movff	tablat,___llmod@divisor
  6176  0009D0  0009               	tblrd		*+
  6177  0009D2  CFF5 F087          	movff	tablat,___llmod@divisor+1
  6178  0009D6  0009               	tblrd		*+
  6179  0009D8  CFF5 F088          	movff	tablat,___llmod@divisor+2
  6180  0009DC  000A               	tblrd		*-
  6181  0009DE  CFF5 F089          	movff	tablat,___llmod@divisor+3
  6182  0009E2  EC39  F029         	call	___llmod	;wreg free
  6183  0009E6  C082  F122         	movff	?___llmod,printf@val
  6184  0009EA  C083  F123         	movff	?___llmod+1,printf@val+1
  6185  0009EE  C084  F124         	movff	?___llmod+2,printf@val+2
  6186  0009F2  C085  F125         	movff	?___llmod+3,printf@val+3
  6187  0009F6                     l9228:
  6188  0009F6  0101               	movlb	1	; () banked
  6189  0009F8  0730               	decf	printf@c& (0+255),f,b
  6190  0009FA  0101               	movlb	1	; () banked
  6191  0009FC  2930               	incf	printf@c& (0+255),w,b
  6192  0009FE  B4D8               	btfsc	status,2,c
  6193  000A00  D008               	goto	l9234
  6194  000A02  D78B               	goto	l9222
  6195  000A04                     l9230:
  6196                           
  6197                           ; BSR set to: 1
  6198                           ;doprnt.c: 1236: (putch('0') );
  6199  000A04  0E30               	movlw	48
  6200  000A06  EC58  F02F         	call	_putch
  6201                           
  6202                           ;doprnt.c: 1237: prec--;
  6203  000A0A  0101               	movlb	1	; () banked
  6204  000A0C  072E               	decf	printf@prec& (0+255),f,b
  6205  000A0E  A0D8               	btfss	status,0,c
  6206  000A10  072F               	decf	(printf@prec+1)& (0+255),f,b
  6207  000A12                     l9234:
  6208                           
  6209                           ; BSR set to: 1
  6210  000A12  0101               	movlb	1	; () banked
  6211  000A14  512E               	movf	printf@prec& (0+255),w,b
  6212  000A16  0101               	movlb	1	; () banked
  6213  000A18  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  6214  000A1A  B4D8               	btfsc	status,2,c
  6215  000A1C  D173               	goto	l9314
  6216  000A1E  D7F2               	goto	l9230
  6217  000A20                     l876:
  6218                           
  6219                           ; BSR set to: 1
  6220                           ;doprnt.c: 1246: }
  6221                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  6222  000A20  0101               	movlb	1	; () banked
  6223  000A22  BD1C               	btfsc	printf@flag& (0+255),6,b
  6224  000A24  D023               	goto	l9246
  6225                           
  6226                           ; BSR set to: 1
  6227                           ;doprnt.c: 1253: {
  6228                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  6229  000A26  C11A  FFD9         	movff	printf@ap,fsr2l
  6230  000A2A  C11B  FFDA         	movff	printf@ap+1,fsr2h
  6231  000A2E  CFDE F122          	movff	postinc2,printf@val
  6232  000A32  CFDD F123          	movff	postdec2,printf@val+1
  6233  000A36  0101               	movlb	1	; () banked
  6234  000A38  0E00               	movlw	0
  6235  000A3A  BF23               	btfsc	(printf@val+1)& (0+255),7,b
  6236  000A3C  0EFF               	movlw	-1
  6237  000A3E  6F24               	movwf	(printf@val+2)& (0+255),b
  6238  000A40  6F25               	movwf	(printf@val+3)& (0+255),b
  6239                           
  6240                           ; BSR set to: 1
  6241  000A42  0E02               	movlw	2
  6242  000A44  0101               	movlb	1	; () banked
  6243  000A46  271A               	addwf	printf@ap& (0+255),f,b
  6244  000A48  0E00               	movlw	0
  6245  000A4A  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  6246                           
  6247                           ; BSR set to: 1
  6248                           ;doprnt.c: 1261: if((long)val < 0) {
  6249  000A4C  0101               	movlb	1	; () banked
  6250  000A4E  AF25               	btfss	(printf@val+3)& (0+255),7,b
  6251  000A50  D021               	goto	l9250
  6252                           
  6253                           ; BSR set to: 1
  6254                           ;doprnt.c: 1262: flag |= 0x03;
  6255  000A52  0E03               	movlw	3
  6256  000A54  0101               	movlb	1	; () banked
  6257  000A56  131C               	iorwf	printf@flag& (0+255),f,b
  6258                           
  6259                           ; BSR set to: 1
  6260                           ;doprnt.c: 1263: val = -val;
  6261  000A58  0101               	movlb	1	; () banked
  6262  000A5A  1F25               	comf	(printf@val+3)& (0+255),f,b
  6263  000A5C  1F24               	comf	(printf@val+2)& (0+255),f,b
  6264  000A5E  1F23               	comf	(printf@val+1)& (0+255),f,b
  6265  000A60  6D22               	negf	printf@val& (0+255),b
  6266  000A62  0E00               	movlw	0
  6267  000A64  2323               	addwfc	(printf@val+1)& (0+255),f,b
  6268  000A66  2324               	addwfc	(printf@val+2)& (0+255),f,b
  6269  000A68  2325               	addwfc	(printf@val+3)& (0+255),f,b
  6270                           
  6271                           ; BSR set to: 1
  6272                           ;doprnt.c: 1264: }
  6273                           ;doprnt.c: 1266: }
  6274  000A6A  D014               	goto	l9250
  6275  000A6C                     l9246:
  6276                           
  6277                           ; BSR set to: 1
  6278                           ;doprnt.c: 1268: else
  6279                           ;doprnt.c: 1273: {
  6280                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  6281  000A6C  C11A  FFD9         	movff	printf@ap,fsr2l
  6282  000A70  C11B  FFDA         	movff	printf@ap+1,fsr2h
  6283  000A74  CFDE F0C5          	movff	postinc2,??_printf
  6284  000A78  CFDD F0C6          	movff	postdec2,??_printf+1
  6285  000A7C  C0C5  F122         	movff	??_printf,printf@val
  6286  000A80  C0C6  F123         	movff	??_printf+1,printf@val+1
  6287  000A84  0101               	movlb	1	; () banked
  6288  000A86  6B24               	clrf	(printf@val+2)& (0+255),b
  6289  000A88  6B25               	clrf	(printf@val+3)& (0+255),b
  6290                           
  6291                           ; BSR set to: 1
  6292  000A8A  0E02               	movlw	2
  6293  000A8C  0101               	movlb	1	; () banked
  6294  000A8E  271A               	addwf	printf@ap& (0+255),f,b
  6295  000A90  0E00               	movlw	0
  6296  000A92  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  6297  000A94                     l9250:
  6298                           
  6299                           ; BSR set to: 1
  6300                           ;doprnt.c: 1287: }
  6301                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  6302  000A94  0101               	movlb	1	; () banked
  6303  000A96  512E               	movf	printf@prec& (0+255),w,b
  6304  000A98  0101               	movlb	1	; () banked
  6305  000A9A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  6306  000A9C  A4D8               	btfss	status,2,c
  6307  000A9E  D00D               	goto	l9256
  6308                           
  6309                           ; BSR set to: 1
  6310  000AA0  0101               	movlb	1	; () banked
  6311  000AA2  5122               	movf	printf@val& (0+255),w,b
  6312  000AA4  0101               	movlb	1	; () banked
  6313  000AA6  1123               	iorwf	(printf@val+1)& (0+255),w,b
  6314  000AA8  0101               	movlb	1	; () banked
  6315  000AAA  1124               	iorwf	(printf@val+2)& (0+255),w,b
  6316  000AAC  0101               	movlb	1	; () banked
  6317  000AAE  1125               	iorwf	(printf@val+3)& (0+255),w,b
  6318  000AB0  A4D8               	btfss	status,2,c
  6319  000AB2  D003               	goto	l9256
  6320                           
  6321                           ; BSR set to: 1
  6322                           ;doprnt.c: 1291: prec++;
  6323  000AB4  0101               	movlb	1	; () banked
  6324  000AB6  4B2E               	infsnz	printf@prec& (0+255),f,b
  6325  000AB8  2B2F               	incf	(printf@prec+1)& (0+255),f,b
  6326  000ABA                     l9256:
  6327                           
  6328                           ; BSR set to: 1
  6329                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  6330  000ABA  0E01               	movlw	1
  6331  000ABC  0101               	movlb	1	; () banked
  6332  000ABE  6F30               	movwf	printf@c& (0+255),b
  6333  000AC0                     l9258:
  6334                           
  6335                           ; BSR set to: 1
  6336  000AC0  0E0A               	movlw	10
  6337  000AC2  0101               	movlb	1	; () banked
  6338  000AC4  1930               	xorwf	printf@c& (0+255),w,b
  6339  000AC6  B4D8               	btfsc	status,2,c
  6340  000AC8  D01E               	goto	l9270
  6341                           
  6342                           ; BSR set to: 1
  6343                           ;doprnt.c: 1306: if(val < dpowers[c])
  6344                           
  6345                           ; BSR set to: 1
  6346                           
  6347                           ; BSR set to: 1
  6348  000ACA  0101               	movlb	1	; () banked
  6349  000ACC  5130               	movf	printf@c& (0+255),w,b
  6350  000ACE  0D04               	mullw	4
  6351  000AD0  0E41               	movlw	low _dpowers
  6352  000AD2  24F3               	addwf	prodl,w,c
  6353  000AD4  6EF6               	movwf	tblptrl,c
  6354  000AD6  0E7D               	movlw	high _dpowers
  6355  000AD8  20F4               	addwfc	prodh,w,c
  6356  000ADA  6EF7               	movwf	tblptrh,c
  6357  000ADC                     	if	0	;There are less than 3 active tblptr bytes
  6358  000ADC                     	endif
  6359  000ADC  0009               	tblrd		*+
  6360  000ADE  50F5               	movf	tablat,w,c
  6361  000AE0  0101               	movlb	1	; () banked
  6362  000AE2  5D22               	subwf	printf@val& (0+255),w,b
  6363  000AE4  0009               	tblrd		*+
  6364  000AE6  50F5               	movf	tablat,w,c
  6365  000AE8  0101               	movlb	1	; () banked
  6366  000AEA  5923               	subwfb	(printf@val+1)& (0+255),w,b
  6367  000AEC  0009               	tblrd		*+
  6368  000AEE  50F5               	movf	tablat,w,c
  6369  000AF0  0101               	movlb	1	; () banked
  6370  000AF2  5924               	subwfb	(printf@val+2)& (0+255),w,b
  6371  000AF4  0009               	tblrd		*+
  6372  000AF6  50F5               	movf	tablat,w,c
  6373  000AF8  0101               	movlb	1	; () banked
  6374  000AFA  5925               	subwfb	(printf@val+3)& (0+255),w,b
  6375  000AFC  A0D8               	btfss	status,0,c
  6376  000AFE  D003               	goto	l9270
  6377                           
  6378                           ; BSR set to: 1
  6379                           
  6380                           ; BSR set to: 1
  6381                           
  6382                           ; BSR set to: 1
  6383                           ;doprnt.c: 1307: break;
  6384  000B00  0101               	movlb	1	; () banked
  6385  000B02  2B30               	incf	printf@c& (0+255),f,b
  6386  000B04  D7DD               	goto	l9258
  6387  000B06                     l9270:
  6388                           
  6389                           ; BSR set to: 1
  6390                           ;doprnt.c: 1339: if(c < prec)
  6391  000B06  0E80               	movlw	128
  6392  000B08  0101               	movlb	1	; () banked
  6393  000B0A  BF30               	btfsc	printf@c& (0+255),7,b
  6394  000B0C  0E7F               	movlw	127
  6395  000B0E  0100               	movlb	0	; () banked
  6396  000B10  6FC5               	movwf	??_printf& (0+255),b
  6397  000B12  0101               	movlb	1	; () banked
  6398  000B14  512E               	movf	printf@prec& (0+255),w,b
  6399  000B16  0101               	movlb	1	; () banked
  6400  000B18  5D30               	subwf	printf@c& (0+255),w,b
  6401  000B1A  0101               	movlb	1	; () banked
  6402  000B1C  512F               	movf	(printf@prec+1)& (0+255),w,b
  6403  000B1E  0A80               	xorlw	128
  6404  000B20  0100               	movlb	0	; () banked
  6405  000B22  59C5               	subwfb	??_printf& (0+255),w,b
  6406  000B24  B0D8               	btfsc	status,0,c
  6407  000B26  D003               	goto	l9274
  6408                           
  6409                           ; BSR set to: 0
  6410                           ;doprnt.c: 1340: c = prec;
  6411  000B28  C12E  F130         	movff	printf@prec,printf@c
  6412  000B2C  D018               	goto	l9278
  6413  000B2E                     l9274:
  6414                           
  6415                           ; BSR set to: 0
  6416                           ;doprnt.c: 1341: else if(prec < c)
  6417  000B2E  0101               	movlb	1	; () banked
  6418  000B30  512F               	movf	(printf@prec+1)& (0+255),w,b
  6419  000B32  0A80               	xorlw	128
  6420  000B34  0100               	movlb	0	; () banked
  6421  000B36  6FC5               	movwf	??_printf& (0+255),b
  6422  000B38  0101               	movlb	1	; () banked
  6423  000B3A  5130               	movf	printf@c& (0+255),w,b
  6424  000B3C  0101               	movlb	1	; () banked
  6425  000B3E  5D2E               	subwf	printf@prec& (0+255),w,b
  6426  000B40  0E80               	movlw	128
  6427  000B42  0101               	movlb	1	; () banked
  6428  000B44  BF30               	btfsc	printf@c& (0+255),7,b
  6429  000B46  0E7F               	movlw	127
  6430  000B48  0100               	movlb	0	; () banked
  6431  000B4A  59C5               	subwfb	??_printf& (0+255),w,b
  6432  000B4C  B0D8               	btfsc	status,0,c
  6433  000B4E  D007               	goto	l9278
  6434                           
  6435                           ; BSR set to: 0
  6436                           ;doprnt.c: 1342: prec = c;
  6437  000B50  0101               	movlb	1	; () banked
  6438  000B52  5130               	movf	printf@c& (0+255),w,b
  6439  000B54  0101               	movlb	1	; () banked
  6440  000B56  6F2E               	movwf	printf@prec& (0+255),b
  6441  000B58  6B2F               	clrf	(printf@prec+1)& (0+255),b
  6442  000B5A  BF2E               	btfsc	printf@prec& (0+255),7,b
  6443  000B5C  072F               	decf	(printf@prec+1)& (0+255),f,b
  6444  000B5E                     l9278:
  6445                           
  6446                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6447  000B5E  0101               	movlb	1	; () banked
  6448  000B60  5128               	movf	printf@width& (0+255),w,b
  6449  000B62  0101               	movlb	1	; () banked
  6450  000B64  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6451  000B66  B4D8               	btfsc	status,2,c
  6452  000B68  D014               	goto	l9284
  6453                           
  6454                           ; BSR set to: 1
  6455  000B6A  0E03               	movlw	3
  6456  000B6C  0101               	movlb	1	; () banked
  6457  000B6E  151C               	andwf	printf@flag& (0+255),w,b
  6458  000B70  0100               	movlb	0	; () banked
  6459  000B72  6FC5               	movwf	??_printf& (0+255),b
  6460  000B74  0E00               	movlw	0
  6461  000B76  0101               	movlb	1	; () banked
  6462  000B78  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6463  000B7A  0100               	movlb	0	; () banked
  6464  000B7C  6FC6               	movwf	(??_printf+1)& (0+255),b
  6465  000B7E  0100               	movlb	0	; () banked
  6466  000B80  51C5               	movf	??_printf& (0+255),w,b
  6467  000B82  0100               	movlb	0	; () banked
  6468  000B84  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  6469  000B86  B4D8               	btfsc	status,2,c
  6470  000B88  D004               	goto	l9284
  6471                           
  6472                           ; BSR set to: 0
  6473                           ;doprnt.c: 1346: width--;
  6474  000B8A  0101               	movlb	1	; () banked
  6475  000B8C  0728               	decf	printf@width& (0+255),f,b
  6476  000B8E  A0D8               	btfss	status,0,c
  6477  000B90  0729               	decf	(printf@width+1)& (0+255),f,b
  6478  000B92                     l9284:
  6479                           
  6480                           ;doprnt.c: 1348: if(flag & 0x4000) {
  6481  000B92  0101               	movlb	1	; () banked
  6482  000B94  AD1D               	btfss	(printf@flag+1)& (0+255),6,b
  6483  000B96  D01E               	goto	l9292
  6484                           
  6485                           ; BSR set to: 1
  6486                           ;doprnt.c: 1349: if(width > prec)
  6487  000B98  0101               	movlb	1	; () banked
  6488  000B9A  5128               	movf	printf@width& (0+255),w,b
  6489  000B9C  0101               	movlb	1	; () banked
  6490  000B9E  5D2E               	subwf	printf@prec& (0+255),w,b
  6491  000BA0  0101               	movlb	1	; () banked
  6492  000BA2  512F               	movf	(printf@prec+1)& (0+255),w,b
  6493  000BA4  0A80               	xorlw	128
  6494  000BA6  0100               	movlb	0	; () banked
  6495  000BA8  6FC5               	movwf	??_printf& (0+255),b
  6496  000BAA  0101               	movlb	1	; () banked
  6497  000BAC  5129               	movf	(printf@width+1)& (0+255),w,b
  6498  000BAE  0A80               	xorlw	128
  6499  000BB0  0100               	movlb	0	; () banked
  6500  000BB2  59C5               	subwfb	??_printf& (0+255),w,b
  6501  000BB4  B0D8               	btfsc	status,0,c
  6502  000BB6  D009               	goto	l9290
  6503                           
  6504                           ; BSR set to: 0
  6505                           ;doprnt.c: 1350: width -= prec;
  6506  000BB8  0101               	movlb	1	; () banked
  6507  000BBA  512E               	movf	printf@prec& (0+255),w,b
  6508  000BBC  0101               	movlb	1	; () banked
  6509  000BBE  5F28               	subwf	printf@width& (0+255),f,b
  6510  000BC0  0101               	movlb	1	; () banked
  6511  000BC2  512F               	movf	(printf@prec+1)& (0+255),w,b
  6512  000BC4  0101               	movlb	1	; () banked
  6513  000BC6  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  6514  000BC8  D005               	goto	l9292
  6515  000BCA                     l9290:
  6516                           
  6517                           ;doprnt.c: 1351: else
  6518                           ;doprnt.c: 1352: width = 0;
  6519  000BCA  0E00               	movlw	0
  6520  000BCC  0101               	movlb	1	; () banked
  6521  000BCE  6F29               	movwf	(printf@width+1)& (0+255),b
  6522  000BD0  0E00               	movlw	0
  6523  000BD2  6F28               	movwf	printf@width& (0+255),b
  6524  000BD4                     l9292:
  6525                           
  6526                           ; BSR set to: 1
  6527                           ;doprnt.c: 1353: }
  6528                           ;doprnt.c: 1381: if(width > c)
  6529  000BD4  0E80               	movlw	128
  6530  000BD6  0101               	movlb	1	; () banked
  6531  000BD8  BF30               	btfsc	printf@c& (0+255),7,b
  6532  000BDA  0E7F               	movlw	127
  6533  000BDC  0100               	movlb	0	; () banked
  6534  000BDE  6FC5               	movwf	??_printf& (0+255),b
  6535  000BE0  0101               	movlb	1	; () banked
  6536  000BE2  5128               	movf	printf@width& (0+255),w,b
  6537  000BE4  0101               	movlb	1	; () banked
  6538  000BE6  5D30               	subwf	printf@c& (0+255),w,b
  6539  000BE8  0101               	movlb	1	; () banked
  6540  000BEA  5129               	movf	(printf@width+1)& (0+255),w,b
  6541  000BEC  0A80               	xorlw	128
  6542  000BEE  0100               	movlb	0	; () banked
  6543  000BF0  59C5               	subwfb	??_printf& (0+255),w,b
  6544  000BF2  B0D8               	btfsc	status,0,c
  6545  000BF4  D00B               	goto	l9296
  6546                           
  6547                           ; BSR set to: 0
  6548                           ;doprnt.c: 1382: width -= c;
  6549  000BF6  0101               	movlb	1	; () banked
  6550  000BF8  5130               	movf	printf@c& (0+255),w,b
  6551  000BFA  0101               	movlb	1	; () banked
  6552  000BFC  5F28               	subwf	printf@width& (0+255),f,b
  6553  000BFE  0E00               	movlw	0
  6554  000C00  0101               	movlb	1	; () banked
  6555  000C02  BF30               	btfsc	printf@c& (0+255),7,b
  6556  000C04  0EFF               	movlw	255
  6557  000C06  0101               	movlb	1	; () banked
  6558  000C08  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  6559  000C0A  D005               	goto	l9298
  6560  000C0C                     l9296:
  6561                           
  6562                           ;doprnt.c: 1383: else
  6563                           ;doprnt.c: 1384: width = 0;
  6564  000C0C  0E00               	movlw	0
  6565  000C0E  0101               	movlb	1	; () banked
  6566  000C10  6F29               	movwf	(printf@width+1)& (0+255),b
  6567  000C12  0E00               	movlw	0
  6568  000C14  6F28               	movwf	printf@width& (0+255),b
  6569  000C16                     l9298:
  6570                           
  6571                           ; BSR set to: 1
  6572                           ;doprnt.c: 1422: {
  6573                           ;doprnt.c: 1424: if(width
  6574                           ;doprnt.c: 1428: )
  6575  000C16  0101               	movlb	1	; () banked
  6576  000C18  5128               	movf	printf@width& (0+255),w,b
  6577  000C1A  0101               	movlb	1	; () banked
  6578  000C1C  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6579  000C1E  B4D8               	btfsc	status,2,c
  6580  000C20  D00D               	goto	l9304
  6581  000C22                     l9300:
  6582                           
  6583                           ; BSR set to: 1
  6584                           ;doprnt.c: 1430: (putch(' ') );
  6585  000C22  0E20               	movlw	32
  6586  000C24  EC58  F02F         	call	_putch
  6587                           
  6588                           ;doprnt.c: 1431: while(--width);
  6589  000C28  0101               	movlb	1	; () banked
  6590  000C2A  0728               	decf	printf@width& (0+255),f,b
  6591  000C2C  A0D8               	btfss	status,0,c
  6592  000C2E  0729               	decf	(printf@width+1)& (0+255),f,b
  6593  000C30  0101               	movlb	1	; () banked
  6594  000C32  5128               	movf	printf@width& (0+255),w,b
  6595  000C34  0101               	movlb	1	; () banked
  6596  000C36  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6597  000C38  A4D8               	btfss	status,2,c
  6598  000C3A  D7F3               	goto	l9300
  6599  000C3C                     l9304:
  6600                           
  6601                           ; BSR set to: 1
  6602                           ;doprnt.c: 1438: if(flag & 0x03)
  6603  000C3C  0E03               	movlw	3
  6604  000C3E  0101               	movlb	1	; () banked
  6605  000C40  151C               	andwf	printf@flag& (0+255),w,b
  6606  000C42  0100               	movlb	0	; () banked
  6607  000C44  6FC5               	movwf	??_printf& (0+255),b
  6608  000C46  0E00               	movlw	0
  6609  000C48  0101               	movlb	1	; () banked
  6610  000C4A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6611  000C4C  0100               	movlb	0	; () banked
  6612  000C4E  6FC6               	movwf	(??_printf+1)& (0+255),b
  6613  000C50  0100               	movlb	0	; () banked
  6614  000C52  51C5               	movf	??_printf& (0+255),w,b
  6615  000C54  0100               	movlb	0	; () banked
  6616  000C56  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  6617  000C58  B4D8               	btfsc	status,2,c
  6618  000C5A  D049               	goto	l9312
  6619                           
  6620                           ; BSR set to: 0
  6621                           ;doprnt.c: 1439: (putch('-') );
  6622  000C5C  0E2D               	movlw	45
  6623  000C5E  EC58  F02F         	call	_putch
  6624                           
  6625                           ;doprnt.c: 1469: }
  6626                           ;doprnt.c: 1474: while(prec--) {
  6627  000C62  D045               	goto	l9312
  6628  000C64                     l9308:
  6629                           
  6630                           ;doprnt.c: 1478: {
  6631                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6632  000C64  C12E  F0C5         	movff	printf@prec,??_printf
  6633  000C68  C12F  F0C6         	movff	printf@prec+1,??_printf+1
  6634  000C6C  0100               	movlb	0	; () banked
  6635  000C6E  90D8               	bcf	status,0,c
  6636  000C70  37C5               	rlcf	??_printf& (0+255),f,b
  6637  000C72  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6638  000C74  0100               	movlb	0	; () banked
  6639  000C76  90D8               	bcf	status,0,c
  6640  000C78  37C5               	rlcf	??_printf& (0+255),f,b
  6641  000C7A  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6642  000C7C  0E41               	movlw	low _dpowers
  6643  000C7E  0100               	movlb	0	; () banked
  6644  000C80  25C5               	addwf	??_printf& (0+255),w,b
  6645  000C82  6EF6               	movwf	tblptrl,c
  6646  000C84  0E7D               	movlw	high _dpowers
  6647  000C86  21C6               	addwfc	(??_printf+1)& (0+255),w,b
  6648  000C88  6EF7               	movwf	tblptrh,c
  6649  000C8A                     	if	0	;There are less than 3 active tblptr bytes
  6650  000C8A                     	endif
  6651  000C8A  0009               	tblrd		*+
  6652  000C8C  CFF5 F079          	movff	tablat,___lldiv@divisor
  6653  000C90  0009               	tblrd		*+
  6654  000C92  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  6655  000C96  0009               	tblrd		*+
  6656  000C98  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  6657  000C9C  000A               	tblrd		*-
  6658  000C9E  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  6659  000CA2  C122  F075         	movff	printf@val,___lldiv@dividend
  6660  000CA6  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  6661  000CAA  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  6662  000CAE  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  6663  000CB2  EC90  F027         	call	___lldiv	;wreg free
  6664  000CB6  C075  F082         	movff	?___lldiv,___llmod@dividend
  6665  000CBA  C076  F083         	movff	?___lldiv+1,___llmod@dividend+1
  6666  000CBE  C077  F084         	movff	?___lldiv+2,___llmod@dividend+2
  6667  000CC2  C078  F085         	movff	?___lldiv+3,___llmod@dividend+3
  6668  000CC6  0E0A               	movlw	10
  6669  000CC8  0100               	movlb	0	; () banked
  6670  000CCA  6F86               	movwf	___llmod@divisor& (0+255),b
  6671  000CCC  0E00               	movlw	0
  6672  000CCE  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  6673  000CD0  0E00               	movlw	0
  6674  000CD2  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  6675  000CD4  0E00               	movlw	0
  6676  000CD6  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  6677  000CD8  EC39  F029         	call	___llmod	;wreg free
  6678  000CDC  0100               	movlb	0	; () banked
  6679  000CDE  5182               	movf	?___llmod& (0+255),w,b
  6680  000CE0  0F30               	addlw	48
  6681  000CE2  0101               	movlb	1	; () banked
  6682  000CE4  6F30               	movwf	printf@c& (0+255),b
  6683                           
  6684                           ; BSR set to: 1
  6685                           ;doprnt.c: 1523: }
  6686                           ;doprnt.c: 1524: (putch(c) );
  6687  000CE6  0101               	movlb	1	; () banked
  6688  000CE8  5130               	movf	printf@c& (0+255),w,b
  6689  000CEA  EC58  F02F         	call	_putch
  6690  000CEE                     l9312:
  6691  000CEE  0101               	movlb	1	; () banked
  6692  000CF0  072E               	decf	printf@prec& (0+255),f,b
  6693  000CF2  A0D8               	btfss	status,0,c
  6694  000CF4  072F               	decf	(printf@prec+1)& (0+255),f,b
  6695  000CF6  0101               	movlb	1	; () banked
  6696  000CF8  292E               	incf	printf@prec& (0+255),w,b
  6697  000CFA  E1B4               	bnz	l9308
  6698  000CFC  0101               	movlb	1	; () banked
  6699  000CFE  292F               	incf	(printf@prec+1)& (0+255),w,b
  6700  000D00  A4D8               	btfss	status,2,c
  6701  000D02  D7B0               	goto	l9308
  6702  000D04                     l9314:
  6703  000D04  C100  FFF6         	movff	printf@f,tblptrl
  6704  000D08  C101  FFF7         	movff	printf@f+1,tblptrh
  6705  000D0C  0101               	movlb	1	; () banked
  6706  000D0E  4B00               	infsnz	printf@f& (0+255),f,b
  6707  000D10  2B01               	incf	(printf@f+1)& (0+255),f,b
  6708  000D12                     	if	0	;tblptru may be non-zero
  6709  000D12                     	endif
  6710  000D12                     	if	0	;tblptru may be non-zero
  6711  000D12                     	endif
  6712  000D12  0008               	tblrd		*
  6713  000D14  CFF5 F130          	movff	tablat,printf@c
  6714  000D18  0101               	movlb	1	; () banked
  6715  000D1A  5130               	movf	printf@c& (0+255),w,b
  6716  000D1C  B4D8               	btfsc	status,2,c
  6717  000D1E  0012               	return	
  6718  000D20  EF63  F000         	goto	l9016
  6719  000D24                     __end_of_printf:
  6720                           	opt stack 0
  6721                           tblptru	equ	0xFF8
  6722                           tblptrh	equ	0xFF7
  6723                           tblptrl	equ	0xFF6
  6724                           tablat	equ	0xFF5
  6725                           prodh	equ	0xFF4
  6726                           prodl	equ	0xFF3
  6727                           intcon	equ	0xFF2
  6728                           postinc0	equ	0xFEE
  6729                           wreg	equ	0xFE8
  6730                           postdec1	equ	0xFE5
  6731                           fsr1l	equ	0xFE1
  6732                           indf2	equ	0xFDF
  6733                           postinc2	equ	0xFDE
  6734                           postdec2	equ	0xFDD
  6735                           fsr2h	equ	0xFDA
  6736                           fsr2l	equ	0xFD9
  6737                           status	equ	0xFD8
  6738                           
  6739 ;; *************** function _scale *****************
  6740 ;; Defined at:
  6741 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6742 ;; Parameters:    Size  Location     Type
  6743 ;;  scl             1    wreg     char 
  6744 ;; Auto vars:     Size  Location     Type
  6745 ;;  scl             1   68[BANK0 ] char 
  6746 ;; Return value:  Size  Location     Type
  6747 ;;                  4   60[BANK0 ] char 
  6748 ;; Registers used:
  6749 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6750 ;; Tracked objects:
  6751 ;;		On entry : 0/0
  6752 ;;		On exit  : 0/0
  6753 ;;		Unchanged: 0/0
  6754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6755 ;;      Params:         0       4       0       0       0       0       0
  6756 ;;      Locals:         0       5       0       0       0       0       0
  6757 ;;      Temps:          0       0       0       0       0       0       0
  6758 ;;      Totals:         0       9       0       0       0       0       0
  6759 ;;Total ram usage:        9 bytes
  6760 ;; Hardware stack levels used:    1
  6761 ;; Hardware stack levels required when called:    9
  6762 ;; This function calls:
  6763 ;;		___awdiv
  6764 ;;		___awmod
  6765 ;;		___flmul
  6766 ;; This function is called by:
  6767 ;;		_printf
  6768 ;; This function uses a non-reentrant model
  6769 ;;
  6770                           
  6771                           	psect	text17
  6772  000D24                     __ptext17:
  6773                           	opt stack 0
  6774  000D24                     _scale:
  6775                           	opt stack 18
  6776                           
  6777                           ; BSR set to: 1
  6778                           ;incstack = 0
  6779                           ;scale@scl stored from wreg
  6780  000D24  0100               	movlb	0	; () banked
  6781  000D26  6FA4               	movwf	scale@scl& (0+255),b
  6782                           
  6783                           ;doprnt.c: 428: if(scl < 0) {
  6784  000D28  0100               	movlb	0	; () banked
  6785  000D2A  AFA4               	btfss	scale@scl& (0+255),7,b
  6786  000D2C  D133               	goto	l8642
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;doprnt.c: 429: scl = -scl;
  6790  000D2E  0100               	movlb	0	; () banked
  6791  000D30  6DA4               	negf	scale@scl& (0+255),b
  6792                           
  6793                           ;doprnt.c: 430: if(scl>=110)
  6794  000D32  0100               	movlb	0	; () banked
  6795  000D34  51A4               	movf	scale@scl& (0+255),w,b
  6796  000D36  0A80               	xorlw	128
  6797  000D38  0F12               	addlw	-238
  6798  000D3A  A0D8               	btfss	status,0,c
  6799  000D3C  D0B2               	goto	l8632
  6800                           
  6801                           ; BSR set to: 0
  6802                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6803  000D3E  0E00               	movlw	0
  6804  000D40  0100               	movlb	0	; () banked
  6805  000D42  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6806  000D44  0E0A               	movlw	10
  6807  000D46  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6808  000D48  0E00               	movlw	0
  6809  000D4A  0100               	movlb	0	; () banked
  6810  000D4C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6811  000D4E  0E64               	movlw	100
  6812  000D50  6F77               	movwf	___awmod@divisor& (0+255),b
  6813  000D52  0100               	movlb	0	; () banked
  6814  000D54  51A4               	movf	scale@scl& (0+255),w,b
  6815  000D56  0100               	movlb	0	; () banked
  6816  000D58  6F75               	movwf	___awmod@dividend& (0+255),b
  6817  000D5A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6818  000D5C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6819  000D5E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6820  000D60  EC99  F028         	call	___awmod	;wreg free
  6821  000D64  C075  F07B         	movff	?___awmod,___awdiv@dividend
  6822  000D68  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  6823  000D6C  EC31  F027         	call	___awdiv	;wreg free
  6824  000D70  0100               	movlb	0	; () banked
  6825  000D72  90D8               	bcf	status,0,c
  6826  000D74  377B               	rlcf	?___awdiv& (0+255),f,b
  6827  000D76  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6828  000D78  0100               	movlb	0	; () banked
  6829  000D7A  90D8               	bcf	status,0,c
  6830  000D7C  377B               	rlcf	?___awdiv& (0+255),f,b
  6831  000D7E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6832  000D80  0E24               	movlw	36
  6833  000D82  0100               	movlb	0	; () banked
  6834  000D84  277B               	addwf	?___awdiv& (0+255),f,b
  6835  000D86  0E00               	movlw	0
  6836  000D88  0100               	movlb	0	; () banked
  6837  000D8A  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6838  000D8C  0ED9               	movlw	low __npowers_
  6839  000D8E  0100               	movlb	0	; () banked
  6840  000D90  257B               	addwf	?___awdiv& (0+255),w,b
  6841  000D92  6EF6               	movwf	tblptrl,c
  6842  000D94  0E7C               	movlw	high __npowers_
  6843  000D96  0100               	movlb	0	; () banked
  6844  000D98  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6845  000D9A  6EF7               	movwf	tblptrh,c
  6846  000D9C                     	if	0	;There are less than 3 active tblptr bytes
  6847  000D9C                     	endif
  6848  000D9C  0009               	tblrd		*+
  6849  000D9E  CFF5 F087          	movff	tablat,___flmul@a
  6850  000DA2  0009               	tblrd		*+
  6851  000DA4  CFF5 F088          	movff	tablat,___flmul@a+1
  6852  000DA8  0009               	tblrd		*+
  6853  000DAA  CFF5 F089          	movff	tablat,___flmul@a+2
  6854  000DAE  000A               	tblrd		*-
  6855  000DB0  CFF5 F08A          	movff	tablat,___flmul@a+3
  6856  000DB4  0E00               	movlw	0
  6857  000DB6  0100               	movlb	0	; () banked
  6858  000DB8  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6859  000DBA  0E64               	movlw	100
  6860  000DBC  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6861  000DBE  0100               	movlb	0	; () banked
  6862  000DC0  51A4               	movf	scale@scl& (0+255),w,b
  6863  000DC2  0100               	movlb	0	; () banked
  6864  000DC4  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6865  000DC6  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6866  000DC8  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6867  000DCA  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6868  000DCC  EC31  F027         	call	___awdiv	;wreg free
  6869  000DD0  0100               	movlb	0	; () banked
  6870  000DD2  90D8               	bcf	status,0,c
  6871  000DD4  377B               	rlcf	?___awdiv& (0+255),f,b
  6872  000DD6  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6873  000DD8  0100               	movlb	0	; () banked
  6874  000DDA  90D8               	bcf	status,0,c
  6875  000DDC  377B               	rlcf	?___awdiv& (0+255),f,b
  6876  000DDE  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6877  000DE0  0E48               	movlw	72
  6878  000DE2  0100               	movlb	0	; () banked
  6879  000DE4  277B               	addwf	?___awdiv& (0+255),f,b
  6880  000DE6  0E00               	movlw	0
  6881  000DE8  0100               	movlb	0	; () banked
  6882  000DEA  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6883  000DEC  0ED9               	movlw	low __npowers_
  6884  000DEE  0100               	movlb	0	; () banked
  6885  000DF0  257B               	addwf	?___awdiv& (0+255),w,b
  6886  000DF2  6EF6               	movwf	tblptrl,c
  6887  000DF4  0E7C               	movlw	high __npowers_
  6888  000DF6  0100               	movlb	0	; () banked
  6889  000DF8  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6890  000DFA  6EF7               	movwf	tblptrh,c
  6891  000DFC                     	if	0	;There are less than 3 active tblptr bytes
  6892  000DFC                     	endif
  6893  000DFC  0009               	tblrd		*+
  6894  000DFE  CFF5 F083          	movff	tablat,___flmul@b
  6895  000E02  0009               	tblrd		*+
  6896  000E04  CFF5 F084          	movff	tablat,___flmul@b+1
  6897  000E08  0009               	tblrd		*+
  6898  000E0A  CFF5 F085          	movff	tablat,___flmul@b+2
  6899  000E0E  000A               	tblrd		*-
  6900  000E10  CFF5 F086          	movff	tablat,___flmul@b+3
  6901  000E14  EC4F  F00B         	call	___flmul	;wreg free
  6902  000E18  C083  F0A0         	movff	?___flmul,_scale$2891
  6903  000E1C  C084  F0A1         	movff	?___flmul+1,_scale$2891+1
  6904  000E20  C085  F0A2         	movff	?___flmul+2,_scale$2891+2
  6905  000E24  C086  F0A3         	movff	?___flmul+3,_scale$2891+3
  6906                           
  6907                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6908  000E28  C0A0  F083         	movff	_scale$2891,___flmul@b
  6909  000E2C  C0A1  F084         	movff	_scale$2891+1,___flmul@b+1
  6910  000E30  C0A2  F085         	movff	_scale$2891+2,___flmul@b+2
  6911  000E34  C0A3  F086         	movff	_scale$2891+3,___flmul@b+3
  6912  000E38  0E00               	movlw	0
  6913  000E3A  0100               	movlb	0	; () banked
  6914  000E3C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6915  000E3E  0E0A               	movlw	10
  6916  000E40  6F77               	movwf	___awmod@divisor& (0+255),b
  6917  000E42  0100               	movlb	0	; () banked
  6918  000E44  51A4               	movf	scale@scl& (0+255),w,b
  6919  000E46  0100               	movlb	0	; () banked
  6920  000E48  6F75               	movwf	___awmod@dividend& (0+255),b
  6921  000E4A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6922  000E4C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6923  000E4E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6924  000E50  EC99  F028         	call	___awmod	;wreg free
  6925  000E54  0100               	movlb	0	; () banked
  6926  000E56  90D8               	bcf	status,0,c
  6927  000E58  3775               	rlcf	?___awmod& (0+255),f,b
  6928  000E5A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6929  000E5C  0100               	movlb	0	; () banked
  6930  000E5E  90D8               	bcf	status,0,c
  6931  000E60  3775               	rlcf	?___awmod& (0+255),f,b
  6932  000E62  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6933  000E64  0ED9               	movlw	low __npowers_
  6934  000E66  0100               	movlb	0	; () banked
  6935  000E68  2575               	addwf	?___awmod& (0+255),w,b
  6936  000E6A  6EF6               	movwf	tblptrl,c
  6937  000E6C  0E7C               	movlw	high __npowers_
  6938  000E6E  0100               	movlb	0	; () banked
  6939  000E70  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6940  000E72  6EF7               	movwf	tblptrh,c
  6941  000E74                     	if	0	;There are less than 3 active tblptr bytes
  6942  000E74                     	endif
  6943  000E74  0009               	tblrd		*+
  6944  000E76  CFF5 F087          	movff	tablat,___flmul@a
  6945  000E7A  0009               	tblrd		*+
  6946  000E7C  CFF5 F088          	movff	tablat,___flmul@a+1
  6947  000E80  0009               	tblrd		*+
  6948  000E82  CFF5 F089          	movff	tablat,___flmul@a+2
  6949  000E86  000A               	tblrd		*-
  6950  000E88  CFF5 F08A          	movff	tablat,___flmul@a+3
  6951  000E8C  EC4F  F00B         	call	___flmul	;wreg free
  6952  000E90  C083  F09C         	movff	?___flmul,?_scale
  6953  000E94  C084  F09D         	movff	?___flmul+1,?_scale+1
  6954  000E98  C085  F09E         	movff	?___flmul+2,?_scale+2
  6955  000E9C  C086  F09F         	movff	?___flmul+3,?_scale+3
  6956  000EA0  0012               	return	
  6957  000EA2                     l8632:
  6958                           
  6959                           ;doprnt.c: 432: else if(scl > 10)
  6960  000EA2  0100               	movlb	0	; () banked
  6961  000EA4  51A4               	movf	scale@scl& (0+255),w,b
  6962  000EA6  0A80               	xorlw	128
  6963  000EA8  0F75               	addlw	-139
  6964  000EAA  A0D8               	btfss	status,0,c
  6965  000EAC  D05D               	goto	l8638
  6966                           
  6967                           ; BSR set to: 0
  6968                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6969  000EAE  0E00               	movlw	0
  6970  000EB0  0100               	movlb	0	; () banked
  6971  000EB2  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6972  000EB4  0E0A               	movlw	10
  6973  000EB6  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6974  000EB8  0100               	movlb	0	; () banked
  6975  000EBA  51A4               	movf	scale@scl& (0+255),w,b
  6976  000EBC  0100               	movlb	0	; () banked
  6977  000EBE  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6978  000EC0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6979  000EC2  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6980  000EC4  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6981  000EC6  EC31  F027         	call	___awdiv	;wreg free
  6982  000ECA  0100               	movlb	0	; () banked
  6983  000ECC  90D8               	bcf	status,0,c
  6984  000ECE  377B               	rlcf	?___awdiv& (0+255),f,b
  6985  000ED0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6986  000ED2  0100               	movlb	0	; () banked
  6987  000ED4  90D8               	bcf	status,0,c
  6988  000ED6  377B               	rlcf	?___awdiv& (0+255),f,b
  6989  000ED8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6990  000EDA  0E24               	movlw	36
  6991  000EDC  0100               	movlb	0	; () banked
  6992  000EDE  277B               	addwf	?___awdiv& (0+255),f,b
  6993  000EE0  0E00               	movlw	0
  6994  000EE2  0100               	movlb	0	; () banked
  6995  000EE4  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6996  000EE6  0ED9               	movlw	low __npowers_
  6997  000EE8  0100               	movlb	0	; () banked
  6998  000EEA  257B               	addwf	?___awdiv& (0+255),w,b
  6999  000EEC  6EF6               	movwf	tblptrl,c
  7000  000EEE  0E7C               	movlw	high __npowers_
  7001  000EF0  0100               	movlb	0	; () banked
  7002  000EF2  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7003  000EF4  6EF7               	movwf	tblptrh,c
  7004  000EF6                     	if	0	;There are less than 3 active tblptr bytes
  7005  000EF6                     	endif
  7006  000EF6  0009               	tblrd		*+
  7007  000EF8  CFF5 F083          	movff	tablat,___flmul@b
  7008  000EFC  0009               	tblrd		*+
  7009  000EFE  CFF5 F084          	movff	tablat,___flmul@b+1
  7010  000F02  0009               	tblrd		*+
  7011  000F04  CFF5 F085          	movff	tablat,___flmul@b+2
  7012  000F08  000A               	tblrd		*-
  7013  000F0A  CFF5 F086          	movff	tablat,___flmul@b+3
  7014  000F0E  0E00               	movlw	0
  7015  000F10  0100               	movlb	0	; () banked
  7016  000F12  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7017  000F14  0E0A               	movlw	10
  7018  000F16  6F77               	movwf	___awmod@divisor& (0+255),b
  7019  000F18  0100               	movlb	0	; () banked
  7020  000F1A  51A4               	movf	scale@scl& (0+255),w,b
  7021  000F1C  0100               	movlb	0	; () banked
  7022  000F1E  6F75               	movwf	___awmod@dividend& (0+255),b
  7023  000F20  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7024  000F22  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  7025  000F24  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  7026  000F26  EC99  F028         	call	___awmod	;wreg free
  7027  000F2A  0100               	movlb	0	; () banked
  7028  000F2C  90D8               	bcf	status,0,c
  7029  000F2E  3775               	rlcf	?___awmod& (0+255),f,b
  7030  000F30  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7031  000F32  0100               	movlb	0	; () banked
  7032  000F34  90D8               	bcf	status,0,c
  7033  000F36  3775               	rlcf	?___awmod& (0+255),f,b
  7034  000F38  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7035  000F3A  0ED9               	movlw	low __npowers_
  7036  000F3C  0100               	movlb	0	; () banked
  7037  000F3E  2575               	addwf	?___awmod& (0+255),w,b
  7038  000F40  6EF6               	movwf	tblptrl,c
  7039  000F42  0E7C               	movlw	high __npowers_
  7040  000F44  0100               	movlb	0	; () banked
  7041  000F46  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  7042  000F48  6EF7               	movwf	tblptrh,c
  7043  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  7044  000F4A                     	endif
  7045  000F4A  0009               	tblrd		*+
  7046  000F4C  CFF5 F087          	movff	tablat,___flmul@a
  7047  000F50  0009               	tblrd		*+
  7048  000F52  CFF5 F088          	movff	tablat,___flmul@a+1
  7049  000F56  0009               	tblrd		*+
  7050  000F58  CFF5 F089          	movff	tablat,___flmul@a+2
  7051  000F5C  000A               	tblrd		*-
  7052  000F5E  CFF5 F08A          	movff	tablat,___flmul@a+3
  7053  000F62  EC4F  F00B         	call	___flmul	;wreg free
  7054  000F66  D794               	goto	L2
  7055  000F68                     l8638:
  7056                           
  7057                           ;doprnt.c: 434: return _npowers_[scl];
  7058  000F68  0100               	movlb	0	; () banked
  7059  000F6A  51A4               	movf	scale@scl& (0+255),w,b
  7060  000F6C  0D04               	mullw	4
  7061  000F6E  0ED9               	movlw	low __npowers_
  7062  000F70  24F3               	addwf	prodl,w,c
  7063  000F72  6EF6               	movwf	tblptrl,c
  7064  000F74  0E7C               	movlw	high __npowers_
  7065  000F76  20F4               	addwfc	prodh,w,c
  7066  000F78  6EF7               	movwf	tblptrh,c
  7067  000F7A                     	if	0	;There are less than 3 active tblptr bytes
  7068  000F7A                     	endif
  7069  000F7A  0009               	tblrd		*+
  7070  000F7C  CFF5 F09C          	movff	tablat,?_scale
  7071  000F80  0009               	tblrd		*+
  7072  000F82  CFF5 F09D          	movff	tablat,?_scale+1
  7073  000F86  0009               	tblrd		*+
  7074  000F88  CFF5 F09E          	movff	tablat,?_scale+2
  7075  000F8C  000A               	tblrd		*-
  7076  000F8E  CFF5 F09F          	movff	tablat,?_scale+3
  7077                           
  7078                           ; BSR set to: 0
  7079  000F92  0012               	return	
  7080  000F94                     l8642:
  7081                           
  7082                           ; BSR set to: 0
  7083                           ;doprnt.c: 435: }
  7084                           ;doprnt.c: 436: if(scl>=110)
  7085  000F94  0100               	movlb	0	; () banked
  7086  000F96  51A4               	movf	scale@scl& (0+255),w,b
  7087  000F98  0A80               	xorlw	128
  7088  000F9A  0F12               	addlw	-238
  7089  000F9C  A0D8               	btfss	status,0,c
  7090  000F9E  D0B2               	goto	l8650
  7091                           
  7092                           ; BSR set to: 0
  7093                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7094  000FA0  0E00               	movlw	0
  7095  000FA2  0100               	movlb	0	; () banked
  7096  000FA4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7097  000FA6  0E0A               	movlw	10
  7098  000FA8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  7099  000FAA  0E00               	movlw	0
  7100  000FAC  0100               	movlb	0	; () banked
  7101  000FAE  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7102  000FB0  0E64               	movlw	100
  7103  000FB2  6F77               	movwf	___awmod@divisor& (0+255),b
  7104  000FB4  0100               	movlb	0	; () banked
  7105  000FB6  51A4               	movf	scale@scl& (0+255),w,b
  7106  000FB8  0100               	movlb	0	; () banked
  7107  000FBA  6F75               	movwf	___awmod@dividend& (0+255),b
  7108  000FBC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7109  000FBE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  7110  000FC0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  7111  000FC2  EC99  F028         	call	___awmod	;wreg free
  7112  000FC6  C075  F07B         	movff	?___awmod,___awdiv@dividend
  7113  000FCA  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  7114  000FCE  EC31  F027         	call	___awdiv	;wreg free
  7115  000FD2  0100               	movlb	0	; () banked
  7116  000FD4  90D8               	bcf	status,0,c
  7117  000FD6  377B               	rlcf	?___awdiv& (0+255),f,b
  7118  000FD8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7119  000FDA  0100               	movlb	0	; () banked
  7120  000FDC  90D8               	bcf	status,0,c
  7121  000FDE  377B               	rlcf	?___awdiv& (0+255),f,b
  7122  000FE0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7123  000FE2  0E24               	movlw	36
  7124  000FE4  0100               	movlb	0	; () banked
  7125  000FE6  277B               	addwf	?___awdiv& (0+255),f,b
  7126  000FE8  0E00               	movlw	0
  7127  000FEA  0100               	movlb	0	; () banked
  7128  000FEC  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  7129  000FEE  0E0D               	movlw	low __powers_
  7130  000FF0  0100               	movlb	0	; () banked
  7131  000FF2  257B               	addwf	?___awdiv& (0+255),w,b
  7132  000FF4  6EF6               	movwf	tblptrl,c
  7133  000FF6  0E7D               	movlw	high __powers_
  7134  000FF8  0100               	movlb	0	; () banked
  7135  000FFA  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7136  000FFC  6EF7               	movwf	tblptrh,c
  7137  000FFE                     	if	0	;There are less than 3 active tblptr bytes
  7138  000FFE                     	endif
  7139  000FFE  0009               	tblrd		*+
  7140  001000  CFF5 F087          	movff	tablat,___flmul@a
  7141  001004  0009               	tblrd		*+
  7142  001006  CFF5 F088          	movff	tablat,___flmul@a+1
  7143  00100A  0009               	tblrd		*+
  7144  00100C  CFF5 F089          	movff	tablat,___flmul@a+2
  7145  001010  000A               	tblrd		*-
  7146  001012  CFF5 F08A          	movff	tablat,___flmul@a+3
  7147  001016  0E00               	movlw	0
  7148  001018  0100               	movlb	0	; () banked
  7149  00101A  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7150  00101C  0E64               	movlw	100
  7151  00101E  6F7D               	movwf	___awdiv@divisor& (0+255),b
  7152  001020  0100               	movlb	0	; () banked
  7153  001022  51A4               	movf	scale@scl& (0+255),w,b
  7154  001024  0100               	movlb	0	; () banked
  7155  001026  6F7B               	movwf	___awdiv@dividend& (0+255),b
  7156  001028  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  7157  00102A  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  7158  00102C  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7159  00102E  EC31  F027         	call	___awdiv	;wreg free
  7160  001032  0100               	movlb	0	; () banked
  7161  001034  90D8               	bcf	status,0,c
  7162  001036  377B               	rlcf	?___awdiv& (0+255),f,b
  7163  001038  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7164  00103A  0100               	movlb	0	; () banked
  7165  00103C  90D8               	bcf	status,0,c
  7166  00103E  377B               	rlcf	?___awdiv& (0+255),f,b
  7167  001040  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7168  001042  0E48               	movlw	72
  7169  001044  0100               	movlb	0	; () banked
  7170  001046  277B               	addwf	?___awdiv& (0+255),f,b
  7171  001048  0E00               	movlw	0
  7172  00104A  0100               	movlb	0	; () banked
  7173  00104C  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  7174  00104E  0E0D               	movlw	low __powers_
  7175  001050  0100               	movlb	0	; () banked
  7176  001052  257B               	addwf	?___awdiv& (0+255),w,b
  7177  001054  6EF6               	movwf	tblptrl,c
  7178  001056  0E7D               	movlw	high __powers_
  7179  001058  0100               	movlb	0	; () banked
  7180  00105A  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7181  00105C  6EF7               	movwf	tblptrh,c
  7182  00105E                     	if	0	;There are less than 3 active tblptr bytes
  7183  00105E                     	endif
  7184  00105E  0009               	tblrd		*+
  7185  001060  CFF5 F083          	movff	tablat,___flmul@b
  7186  001064  0009               	tblrd		*+
  7187  001066  CFF5 F084          	movff	tablat,___flmul@b+1
  7188  00106A  0009               	tblrd		*+
  7189  00106C  CFF5 F085          	movff	tablat,___flmul@b+2
  7190  001070  000A               	tblrd		*-
  7191  001072  CFF5 F086          	movff	tablat,___flmul@b+3
  7192  001076  EC4F  F00B         	call	___flmul	;wreg free
  7193  00107A  C083  F0A0         	movff	?___flmul,_scale$2891
  7194  00107E  C084  F0A1         	movff	?___flmul+1,_scale$2891+1
  7195  001082  C085  F0A2         	movff	?___flmul+2,_scale$2891+2
  7196  001086  C086  F0A3         	movff	?___flmul+3,_scale$2891+3
  7197                           
  7198                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  7199  00108A  C0A0  F083         	movff	_scale$2891,___flmul@b
  7200  00108E  C0A1  F084         	movff	_scale$2891+1,___flmul@b+1
  7201  001092  C0A2  F085         	movff	_scale$2891+2,___flmul@b+2
  7202  001096  C0A3  F086         	movff	_scale$2891+3,___flmul@b+3
  7203  00109A  0E00               	movlw	0
  7204  00109C  0100               	movlb	0	; () banked
  7205  00109E  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7206  0010A0  0E0A               	movlw	10
  7207  0010A2  6F77               	movwf	___awmod@divisor& (0+255),b
  7208  0010A4  0100               	movlb	0	; () banked
  7209  0010A6  51A4               	movf	scale@scl& (0+255),w,b
  7210  0010A8  0100               	movlb	0	; () banked
  7211  0010AA  6F75               	movwf	___awmod@dividend& (0+255),b
  7212  0010AC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7213  0010AE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  7214  0010B0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  7215  0010B2  EC99  F028         	call	___awmod	;wreg free
  7216  0010B6  0100               	movlb	0	; () banked
  7217  0010B8  90D8               	bcf	status,0,c
  7218  0010BA  3775               	rlcf	?___awmod& (0+255),f,b
  7219  0010BC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7220  0010BE  0100               	movlb	0	; () banked
  7221  0010C0  90D8               	bcf	status,0,c
  7222  0010C2  3775               	rlcf	?___awmod& (0+255),f,b
  7223  0010C4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7224  0010C6  0E0D               	movlw	low __powers_
  7225  0010C8  0100               	movlb	0	; () banked
  7226  0010CA  2575               	addwf	?___awmod& (0+255),w,b
  7227  0010CC  6EF6               	movwf	tblptrl,c
  7228  0010CE  0E7D               	movlw	high __powers_
  7229  0010D0  0100               	movlb	0	; () banked
  7230  0010D2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  7231  0010D4  6EF7               	movwf	tblptrh,c
  7232  0010D6                     	if	0	;There are less than 3 active tblptr bytes
  7233  0010D6                     	endif
  7234  0010D6  0009               	tblrd		*+
  7235  0010D8  CFF5 F087          	movff	tablat,___flmul@a
  7236  0010DC  0009               	tblrd		*+
  7237  0010DE  CFF5 F088          	movff	tablat,___flmul@a+1
  7238  0010E2  0009               	tblrd		*+
  7239  0010E4  CFF5 F089          	movff	tablat,___flmul@a+2
  7240  0010E8  000A               	tblrd		*-
  7241  0010EA  CFF5 F08A          	movff	tablat,___flmul@a+3
  7242  0010EE  EC4F  F00B         	call	___flmul	;wreg free
  7243  0010F2  C083  F09C         	movff	?___flmul,?_scale
  7244  0010F6  C084  F09D         	movff	?___flmul+1,?_scale+1
  7245  0010FA  C085  F09E         	movff	?___flmul+2,?_scale+2
  7246  0010FE  C086  F09F         	movff	?___flmul+3,?_scale+3
  7247  001102  0012               	return	
  7248  001104                     l8650:
  7249                           
  7250                           ;doprnt.c: 438: else if(scl > 10)
  7251  001104  0100               	movlb	0	; () banked
  7252  001106  51A4               	movf	scale@scl& (0+255),w,b
  7253  001108  0A80               	xorlw	128
  7254  00110A  0F75               	addlw	-139
  7255  00110C  A0D8               	btfss	status,0,c
  7256  00110E  D05D               	goto	l8656
  7257                           
  7258                           ; BSR set to: 0
  7259                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  7260  001110  0E00               	movlw	0
  7261  001112  0100               	movlb	0	; () banked
  7262  001114  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  7263  001116  0E0A               	movlw	10
  7264  001118  6F7D               	movwf	___awdiv@divisor& (0+255),b
  7265  00111A  0100               	movlb	0	; () banked
  7266  00111C  51A4               	movf	scale@scl& (0+255),w,b
  7267  00111E  0100               	movlb	0	; () banked
  7268  001120  6F7B               	movwf	___awdiv@dividend& (0+255),b
  7269  001122  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  7270  001124  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  7271  001126  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  7272  001128  EC31  F027         	call	___awdiv	;wreg free
  7273  00112C  0100               	movlb	0	; () banked
  7274  00112E  90D8               	bcf	status,0,c
  7275  001130  377B               	rlcf	?___awdiv& (0+255),f,b
  7276  001132  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7277  001134  0100               	movlb	0	; () banked
  7278  001136  90D8               	bcf	status,0,c
  7279  001138  377B               	rlcf	?___awdiv& (0+255),f,b
  7280  00113A  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  7281  00113C  0E24               	movlw	36
  7282  00113E  0100               	movlb	0	; () banked
  7283  001140  277B               	addwf	?___awdiv& (0+255),f,b
  7284  001142  0E00               	movlw	0
  7285  001144  0100               	movlb	0	; () banked
  7286  001146  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  7287  001148  0E0D               	movlw	low __powers_
  7288  00114A  0100               	movlb	0	; () banked
  7289  00114C  257B               	addwf	?___awdiv& (0+255),w,b
  7290  00114E  6EF6               	movwf	tblptrl,c
  7291  001150  0E7D               	movlw	high __powers_
  7292  001152  0100               	movlb	0	; () banked
  7293  001154  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  7294  001156  6EF7               	movwf	tblptrh,c
  7295  001158                     	if	0	;There are less than 3 active tblptr bytes
  7296  001158                     	endif
  7297  001158  0009               	tblrd		*+
  7298  00115A  CFF5 F083          	movff	tablat,___flmul@b
  7299  00115E  0009               	tblrd		*+
  7300  001160  CFF5 F084          	movff	tablat,___flmul@b+1
  7301  001164  0009               	tblrd		*+
  7302  001166  CFF5 F085          	movff	tablat,___flmul@b+2
  7303  00116A  000A               	tblrd		*-
  7304  00116C  CFF5 F086          	movff	tablat,___flmul@b+3
  7305  001170  0E00               	movlw	0
  7306  001172  0100               	movlb	0	; () banked
  7307  001174  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  7308  001176  0E0A               	movlw	10
  7309  001178  6F77               	movwf	___awmod@divisor& (0+255),b
  7310  00117A  0100               	movlb	0	; () banked
  7311  00117C  51A4               	movf	scale@scl& (0+255),w,b
  7312  00117E  0100               	movlb	0	; () banked
  7313  001180  6F75               	movwf	___awmod@dividend& (0+255),b
  7314  001182  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  7315  001184  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  7316  001186  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  7317  001188  EC99  F028         	call	___awmod	;wreg free
  7318  00118C  0100               	movlb	0	; () banked
  7319  00118E  90D8               	bcf	status,0,c
  7320  001190  3775               	rlcf	?___awmod& (0+255),f,b
  7321  001192  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7322  001194  0100               	movlb	0	; () banked
  7323  001196  90D8               	bcf	status,0,c
  7324  001198  3775               	rlcf	?___awmod& (0+255),f,b
  7325  00119A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  7326  00119C  0E0D               	movlw	low __powers_
  7327  00119E  0100               	movlb	0	; () banked
  7328  0011A0  2575               	addwf	?___awmod& (0+255),w,b
  7329  0011A2  6EF6               	movwf	tblptrl,c
  7330  0011A4  0E7D               	movlw	high __powers_
  7331  0011A6  0100               	movlb	0	; () banked
  7332  0011A8  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  7333  0011AA  6EF7               	movwf	tblptrh,c
  7334  0011AC                     	if	0	;There are less than 3 active tblptr bytes
  7335  0011AC                     	endif
  7336  0011AC  0009               	tblrd		*+
  7337  0011AE  CFF5 F087          	movff	tablat,___flmul@a
  7338  0011B2  0009               	tblrd		*+
  7339  0011B4  CFF5 F088          	movff	tablat,___flmul@a+1
  7340  0011B8  0009               	tblrd		*+
  7341  0011BA  CFF5 F089          	movff	tablat,___flmul@a+2
  7342  0011BE  000A               	tblrd		*-
  7343  0011C0  CFF5 F08A          	movff	tablat,___flmul@a+3
  7344  0011C4  EC4F  F00B         	call	___flmul	;wreg free
  7345  0011C8  D794               	goto	L3
  7346  0011CA                     l8656:
  7347                           
  7348                           ;doprnt.c: 440: return _powers_[scl];
  7349  0011CA  0100               	movlb	0	; () banked
  7350  0011CC  51A4               	movf	scale@scl& (0+255),w,b
  7351  0011CE  0D04               	mullw	4
  7352  0011D0  0E0D               	movlw	low __powers_
  7353  0011D2  24F3               	addwf	prodl,w,c
  7354  0011D4  6EF6               	movwf	tblptrl,c
  7355  0011D6  0E7D               	movlw	high __powers_
  7356  0011D8  20F4               	addwfc	prodh,w,c
  7357  0011DA  6EF7               	movwf	tblptrh,c
  7358  0011DC                     	if	0	;There are less than 3 active tblptr bytes
  7359  0011DC                     	endif
  7360  0011DC  0009               	tblrd		*+
  7361  0011DE  CFF5 F09C          	movff	tablat,?_scale
  7362  0011E2  0009               	tblrd		*+
  7363  0011E4  CFF5 F09D          	movff	tablat,?_scale+1
  7364  0011E8  0009               	tblrd		*+
  7365  0011EA  CFF5 F09E          	movff	tablat,?_scale+2
  7366  0011EE  000A               	tblrd		*-
  7367  0011F0  CFF5 F09F          	movff	tablat,?_scale+3
  7368  0011F4  0012               	return	
  7369  0011F6                     __end_of_scale:
  7370                           	opt stack 0
  7371                           tblptru	equ	0xFF8
  7372                           tblptrh	equ	0xFF7
  7373                           tblptrl	equ	0xFF6
  7374                           tablat	equ	0xFF5
  7375                           prodh	equ	0xFF4
  7376                           prodl	equ	0xFF3
  7377                           intcon	equ	0xFF2
  7378                           postinc0	equ	0xFEE
  7379                           wreg	equ	0xFE8
  7380                           postdec1	equ	0xFE5
  7381                           fsr1l	equ	0xFE1
  7382                           indf2	equ	0xFDF
  7383                           postinc2	equ	0xFDE
  7384                           postdec2	equ	0xFDD
  7385                           fsr2h	equ	0xFDA
  7386                           fsr2l	equ	0xFD9
  7387                           status	equ	0xFD8
  7388                           
  7389 ;; *************** function _putch *****************
  7390 ;; Defined at:
  7391 ;;		line 59 in file "source/IOConfig.h"
  7392 ;; Parameters:    Size  Location     Type
  7393 ;;  val             1    wreg     unsigned char 
  7394 ;; Auto vars:     Size  Location     Type
  7395 ;;  val             1   34[BANK0 ] unsigned char 
  7396 ;; Return value:  Size  Location     Type
  7397 ;;                  1    wreg      void 
  7398 ;; Registers used:
  7399 ;;		wreg, status,2, status,0, cstack
  7400 ;; Tracked objects:
  7401 ;;		On entry : 0/0
  7402 ;;		On exit  : 0/0
  7403 ;;		Unchanged: 0/0
  7404 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7405 ;;      Params:         0       0       0       0       0       0       0
  7406 ;;      Locals:         0       1       0       0       0       0       0
  7407 ;;      Temps:          0       0       0       0       0       0       0
  7408 ;;      Totals:         0       1       0       0       0       0       0
  7409 ;;Total ram usage:        1 bytes
  7410 ;; Hardware stack levels used:    1
  7411 ;; Hardware stack levels required when called:   13
  7412 ;; This function calls:
  7413 ;;		_lcd_putc
  7414 ;; This function is called by:
  7415 ;;		_printf
  7416 ;;		_send_float
  7417 ;;		_send_int32
  7418 ;;		_send_int16
  7419 ;;		_send_float_vt
  7420 ;;		_send_int32_vt
  7421 ;;		_send_int16_vt
  7422 ;; This function uses a non-reentrant model
  7423 ;;
  7424                           
  7425                           	psect	text18
  7426  005EB0                     __ptext18:
  7427                           	opt stack 0
  7428  005EB0                     _putch:
  7429                           	opt stack 14
  7430                           
  7431                           ;incstack = 0
  7432                           ;putch@val stored from wreg
  7433  005EB0  0100               	movlb	0	; () banked
  7434  005EB2  6F82               	movwf	putch@val& (0+255),b
  7435                           
  7436                           ;IOConfig.h: 60: lcd_putc(val);
  7437  005EB4  0100               	movlb	0	; () banked
  7438  005EB6  5182               	movf	putch@val& (0+255),w,b
  7439  005EB8  ECE3  F02A         	call	_lcd_putc
  7440  005EBC  0012               	return		;funcret
  7441  005EBE                     __end_of_putch:
  7442                           	opt stack 0
  7443                           tblptru	equ	0xFF8
  7444                           tblptrh	equ	0xFF7
  7445                           tblptrl	equ	0xFF6
  7446                           tablat	equ	0xFF5
  7447                           prodh	equ	0xFF4
  7448                           prodl	equ	0xFF3
  7449                           intcon	equ	0xFF2
  7450                           postinc0	equ	0xFEE
  7451                           wreg	equ	0xFE8
  7452                           postdec1	equ	0xFE5
  7453                           fsr1l	equ	0xFE1
  7454                           indf2	equ	0xFDF
  7455                           postinc2	equ	0xFDE
  7456                           postdec2	equ	0xFDD
  7457                           fsr2h	equ	0xFDA
  7458                           fsr2l	equ	0xFD9
  7459                           status	equ	0xFD8
  7460                           
  7461 ;; *************** function _lcd_putc *****************
  7462 ;; Defined at:
  7463 ;;		line 212 in file "source/../../vclib_lcd.h"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  cha             1    wreg     unsigned char 
  7466 ;; Auto vars:     Size  Location     Type
  7467 ;;  cha             1   33[BANK0 ] unsigned char 
  7468 ;; Return value:  Size  Location     Type
  7469 ;;                  1    wreg      void 
  7470 ;; Registers used:
  7471 ;;		wreg, status,2, status,0, cstack
  7472 ;; Tracked objects:
  7473 ;;		On entry : 0/0
  7474 ;;		On exit  : 0/0
  7475 ;;		Unchanged: 0/0
  7476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7477 ;;      Params:         0       0       0       0       0       0       0
  7478 ;;      Locals:         0       1       0       0       0       0       0
  7479 ;;      Temps:          0       1       0       0       0       0       0
  7480 ;;      Totals:         0       2       0       0       0       0       0
  7481 ;;Total ram usage:        2 bytes
  7482 ;; Hardware stack levels used:    1
  7483 ;; Hardware stack levels required when called:   12
  7484 ;; This function calls:
  7485 ;;		_lcd_gotoxy
  7486 ;;		_lcd_send_byte
  7487 ;; This function is called by:
  7488 ;;		_putch
  7489 ;;		_drawMenu
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           
  7493                           	psect	text19
  7494  0055C6                     __ptext19:
  7495                           	opt stack 0
  7496  0055C6                     _lcd_putc:
  7497                           	opt stack 14
  7498                           
  7499                           ;incstack = 0
  7500                           ;lcd_putc@cha stored from wreg
  7501  0055C6  0100               	movlb	0	; () banked
  7502  0055C8  6F81               	movwf	lcd_putc@cha& (0+255),b
  7503                           
  7504                           ;vclib_lcd.h: 213: switch (cha) {
  7505  0055CA  D02B               	goto	l8160
  7506  0055CC                     l8146:
  7507  0055CC  0E01               	movlw	1
  7508  0055CE  0100               	movlb	0	; () banked
  7509  0055D0  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  7510  0055D2  0E01               	movlw	1
  7511  0055D4  EC24  F02E         	call	_lcd_gotoxy
  7512                           
  7513                           ;vclib_lcd.h: 215: break;
  7514  0055D8  0012               	return	
  7515  0055DA                     l8148:
  7516  0055DA  0E01               	movlw	1
  7517  0055DC  0100               	movlb	0	; () banked
  7518  0055DE  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7519  0055E0  0E00               	movlw	0
  7520  0055E2  EC7E  F02D         	call	_lcd_send_byte
  7521                           
  7522                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
  7523  0055E6  0E0B               	movlw	11
  7524  0055E8  0100               	movlb	0	; () banked
  7525  0055EA  6F80               	movwf	??_lcd_putc& (0+255),b
  7526  0055EC  0E62               	movlw	98
  7527  0055EE                     u13677:
  7528  0055EE  2EE8               	decfsz	wreg,f,c
  7529  0055F0  D7FE               	goto	u13677
  7530  0055F2  2F80               	decfsz	??_lcd_putc& (0+255),f,b
  7531  0055F4  D7FC               	goto	u13677
  7532  0055F6  D000               	nop2	
  7533                           
  7534                           ;vclib_lcd.h: 223: break;
  7535  0055F8  0012               	return	
  7536  0055FA                     l8152:
  7537  0055FA  0E02               	movlw	2
  7538  0055FC  0100               	movlb	0	; () banked
  7539  0055FE  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  7540  005600  0E01               	movlw	1
  7541  005602  EC24  F02E         	call	_lcd_gotoxy
  7542                           
  7543                           ;vclib_lcd.h: 236: break;
  7544  005606  0012               	return	
  7545  005608                     l8154:
  7546  005608  0E10               	movlw	16
  7547  00560A  0100               	movlb	0	; () banked
  7548  00560C  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7549  00560E  0E00               	movlw	0
  7550  005610  EC7E  F02D         	call	_lcd_send_byte
  7551                           
  7552                           ;vclib_lcd.h: 240: break;
  7553  005614  0012               	return	
  7554  005616                     l8156:
  7555  005616  C081  F07A         	movff	lcd_putc@cha,lcd_send_byte@n
  7556  00561A  0E01               	movlw	1
  7557  00561C  EC7E  F02D         	call	_lcd_send_byte
  7558                           
  7559                           ;vclib_lcd.h: 253: }
  7560                           
  7561                           ;vclib_lcd.h: 251: break;
  7562  005620  0012               	return	
  7563  005622                     l8160:
  7564  005622  0100               	movlb	0	; () banked
  7565  005624  5181               	movf	lcd_putc@cha& (0+255),w,b
  7566                           
  7567                           ; Switch size 1, requested type "space"
  7568                           ; Number of cases is 4, Range of values is 7 to 12
  7569                           ; switch strategies available:
  7570                           ; Name         Instructions Cycles
  7571                           ; simple_byte           13     7 (average)
  7572                           ;	Chosen strategy is simple_byte
  7573  005626  0A07               	xorlw	7	; case 7
  7574  005628  B4D8               	btfsc	status,2,c
  7575  00562A  D7D0               	goto	l8146
  7576  00562C  0A0F               	xorlw	15	; case 8
  7577  00562E  B4D8               	btfsc	status,2,c
  7578  005630  D7EB               	goto	l8154
  7579  005632  0A02               	xorlw	2	; case 10
  7580  005634  B4D8               	btfsc	status,2,c
  7581  005636  D7E1               	goto	l8152
  7582  005638  0A06               	xorlw	6	; case 12
  7583  00563A  B4D8               	btfsc	status,2,c
  7584  00563C  D7CE               	goto	l8148
  7585  00563E  D7EB               	goto	l8156
  7586  005640                     __end_of_lcd_putc:
  7587                           	opt stack 0
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           prodh	equ	0xFF4
  7593                           prodl	equ	0xFF3
  7594                           intcon	equ	0xFF2
  7595                           postinc0	equ	0xFEE
  7596                           wreg	equ	0xFE8
  7597                           postdec1	equ	0xFE5
  7598                           fsr1l	equ	0xFE1
  7599                           indf2	equ	0xFDF
  7600                           postinc2	equ	0xFDE
  7601                           postdec2	equ	0xFDD
  7602                           fsr2h	equ	0xFDA
  7603                           fsr2l	equ	0xFD9
  7604                           status	equ	0xFD8
  7605                           
  7606 ;; *************** function _lcd_gotoxy *****************
  7607 ;; Defined at:
  7608 ;;		line 198 in file "source/../../vclib_lcd.h"
  7609 ;; Parameters:    Size  Location     Type
  7610 ;;  pos             1    wreg     unsigned char 
  7611 ;;  fila            1   29[BANK0 ] unsigned char 
  7612 ;; Auto vars:     Size  Location     Type
  7613 ;;  pos             1   30[BANK0 ] unsigned char 
  7614 ;;  address         1   31[BANK0 ] unsigned char 
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  1    wreg      void 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0, cstack
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7624 ;;      Params:         0       1       0       0       0       0       0
  7625 ;;      Locals:         0       2       0       0       0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0
  7627 ;;      Totals:         0       3       0       0       0       0       0
  7628 ;;Total ram usage:        3 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; Hardware stack levels required when called:   11
  7631 ;; This function calls:
  7632 ;;		_lcd_send_byte
  7633 ;; This function is called by:
  7634 ;;		_lcd_putc
  7635 ;;		_drawValEditor
  7636 ;;		_drawMenu
  7637 ;;		_drawChanVal
  7638 ;;		_drawPassWord
  7639 ;;		_drawBadPass
  7640 ;;		_drawAdvON
  7641 ;;		_drawAdvOFF
  7642 ;;		_drawSNquest
  7643 ;;		_drawAutoCalibRes
  7644 ;;		_drawAutoCalibRM
  7645 ;;		_lcd_getc
  7646 ;; This function uses a non-reentrant model
  7647 ;;
  7648                           
  7649                           	psect	text20
  7650  005C48                     __ptext20:
  7651                           	opt stack 0
  7652  005C48                     _lcd_gotoxy:
  7653                           	opt stack 14
  7654                           
  7655                           ;incstack = 0
  7656                           ;lcd_gotoxy@pos stored from wreg
  7657  005C48  0100               	movlb	0	; () banked
  7658  005C4A  6F7E               	movwf	lcd_gotoxy@pos& (0+255),b
  7659                           
  7660                           ;vclib_lcd.h: 199: unsigned char address;
  7661                           ;vclib_lcd.h: 200: if (fila != 1)
  7662  005C4C  0100               	movlb	0	; () banked
  7663  005C4E  057D               	decf	lcd_gotoxy@fila& (0+255),w,b
  7664  005C50  B4D8               	btfsc	status,2,c
  7665  005C52  D002               	goto	l8138
  7666                           
  7667                           ; BSR set to: 0
  7668                           ;vclib_lcd.h: 201: address = 0x40;
  7669  005C54  0E40               	movlw	64
  7670  005C56  D001               	goto	L4
  7671  005C58                     l8138:
  7672                           
  7673                           ; BSR set to: 0
  7674                           ;vclib_lcd.h: 202: else
  7675                           ;vclib_lcd.h: 203: address = 0;
  7676  005C58  0E00               	movlw	0
  7677  005C5A                     L4:
  7678  005C5A  0100               	movlb	0	; () banked
  7679  005C5C  6F7F               	movwf	lcd_gotoxy@address& (0+255),b
  7680                           
  7681                           ; BSR set to: 0
  7682                           ;vclib_lcd.h: 204: address += pos - 1;
  7683                           
  7684                           ; BSR set to: 0
  7685  005C5E  0100               	movlb	0	; () banked
  7686  005C60  057E               	decf	lcd_gotoxy@pos& (0+255),w,b
  7687  005C62  0100               	movlb	0	; () banked
  7688  005C64  277F               	addwf	lcd_gotoxy@address& (0+255),f,b
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
  7692  005C66  0100               	movlb	0	; () banked
  7693  005C68  517F               	movf	lcd_gotoxy@address& (0+255),w,b
  7694  005C6A  0980               	iorlw	128
  7695  005C6C  0100               	movlb	0	; () banked
  7696  005C6E  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7697  005C70  0E00               	movlw	0
  7698  005C72  EC7E  F02D         	call	_lcd_send_byte
  7699  005C76  0012               	return		;funcret
  7700  005C78                     __end_of_lcd_gotoxy:
  7701                           	opt stack 0
  7702                           tblptru	equ	0xFF8
  7703                           tblptrh	equ	0xFF7
  7704                           tblptrl	equ	0xFF6
  7705                           tablat	equ	0xFF5
  7706                           prodh	equ	0xFF4
  7707                           prodl	equ	0xFF3
  7708                           intcon	equ	0xFF2
  7709                           postinc0	equ	0xFEE
  7710                           wreg	equ	0xFE8
  7711                           postdec1	equ	0xFE5
  7712                           fsr1l	equ	0xFE1
  7713                           indf2	equ	0xFDF
  7714                           postinc2	equ	0xFDE
  7715                           postdec2	equ	0xFDD
  7716                           fsr2h	equ	0xFDA
  7717                           fsr2l	equ	0xFD9
  7718                           status	equ	0xFD8
  7719                           
  7720 ;; *************** function _lcd_send_byte *****************
  7721 ;; Defined at:
  7722 ;;		line 163 in file "source/../../vclib_lcd.h"
  7723 ;; Parameters:    Size  Location     Type
  7724 ;;  address         1    wreg     unsigned char 
  7725 ;;  n               1   26[BANK0 ] unsigned char 
  7726 ;; Auto vars:     Size  Location     Type
  7727 ;;  address         1   28[BANK0 ] unsigned char 
  7728 ;; Return value:  Size  Location     Type
  7729 ;;                  1    wreg      void 
  7730 ;; Registers used:
  7731 ;;		wreg, status,2, status,0, cstack
  7732 ;; Tracked objects:
  7733 ;;		On entry : 0/0
  7734 ;;		On exit  : 0/0
  7735 ;;		Unchanged: 0/0
  7736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7737 ;;      Params:         0       1       0       0       0       0       0
  7738 ;;      Locals:         0       1       0       0       0       0       0
  7739 ;;      Temps:          0       1       0       0       0       0       0
  7740 ;;      Totals:         0       3       0       0       0       0       0
  7741 ;;Total ram usage:        3 bytes
  7742 ;; Hardware stack levels used:    1
  7743 ;; Hardware stack levels required when called:   10
  7744 ;; This function calls:
  7745 ;;		_lcd_read_byte
  7746 ;;		_lcd_send_4bits
  7747 ;; This function is called by:
  7748 ;;		_lcd_init
  7749 ;;		_lcd_gotoxy
  7750 ;;		_lcd_putc
  7751 ;;		_lcd_set_cgram_char
  7752 ;;		_lcd_cursor_en
  7753 ;;		_lcd_clear
  7754 ;;		_lcd_shift_right
  7755 ;;		_lcd_shift_left
  7756 ;; This function uses a non-reentrant model
  7757 ;;
  7758                           
  7759                           	psect	text21
  7760  005AFC                     __ptext21:
  7761                           	opt stack 0
  7762  005AFC                     _lcd_send_byte:
  7763                           	opt stack 19
  7764                           
  7765                           ;incstack = 0
  7766                           ;lcd_send_byte@address stored from wreg
  7767  005AFC  0100               	movlb	0	; () banked
  7768  005AFE  6F7C               	movwf	lcd_send_byte@address& (0+255),b
  7769                           
  7770                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
  7771  005B00  9281               	bcf	3969,1,c	;volatile
  7772  005B02                     l8130:
  7773  005B02  EC38  F02D         	call	_lcd_read_byte	;wreg free
  7774  005B06  0100               	movlb	0	; () banked
  7775  005B08  6F7B               	movwf	??_lcd_send_byte& (0+255),b
  7776  005B0A  0100               	movlb	0	; () banked
  7777  005B0C  BF7B               	btfsc	??_lcd_send_byte& (0+255),7,b
  7778  005B0E  D7F9               	goto	l8130
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
  7782  005B10  0100               	movlb	0	; () banked
  7783  005B12  B17C               	btfsc	lcd_send_byte@address& (0+255),0,b
  7784  005B14  D002               	bra	u9955
  7785  005B16  9281               	bcf	3969,1,c	;volatile
  7786  005B18  D001               	bra	u9956
  7787  005B1A                     u9955:
  7788  005B1A  8281               	bsf	3969,1,c	;volatile
  7789  005B1C                     u9956:
  7790                           
  7791                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7792  005B1C  D000               	nop2		;2 cycle nop
  7793  005B1E  D000               	nop2		;2 cycle nop
  7794                           
  7795                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
  7796  005B20  9481               	bcf	3969,2,c	;volatile
  7797                           
  7798                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7799  005B22  D000               	nop2		;2 cycle nop
  7800  005B24  D000               	nop2		;2 cycle nop
  7801                           
  7802                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
  7803  005B26  9681               	bcf	3969,3,c	;volatile
  7804                           
  7805                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
  7806  005B28  0100               	movlb	0	; () banked
  7807  005B2A  397A               	swapf	lcd_send_byte@n& (0+255),w,b
  7808  005B2C  0B0F               	andlw	15
  7809  005B2E  EC17  F02A         	call	_lcd_send_4bits
  7810                           
  7811                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
  7812  005B32  0100               	movlb	0	; () banked
  7813  005B34  517A               	movf	lcd_send_byte@n& (0+255),w,b
  7814  005B36  0B0F               	andlw	15
  7815  005B38  EC17  F02A         	call	_lcd_send_4bits
  7816  005B3C  0012               	return		;funcret
  7817  005B3E                     __end_of_lcd_send_byte:
  7818                           	opt stack 0
  7819                           tblptru	equ	0xFF8
  7820                           tblptrh	equ	0xFF7
  7821                           tblptrl	equ	0xFF6
  7822                           tablat	equ	0xFF5
  7823                           prodh	equ	0xFF4
  7824                           prodl	equ	0xFF3
  7825                           intcon	equ	0xFF2
  7826                           postinc0	equ	0xFEE
  7827                           wreg	equ	0xFE8
  7828                           postdec1	equ	0xFE5
  7829                           fsr1l	equ	0xFE1
  7830                           indf2	equ	0xFDF
  7831                           postinc2	equ	0xFDE
  7832                           postdec2	equ	0xFDD
  7833                           fsr2h	equ	0xFDA
  7834                           fsr2l	equ	0xFD9
  7835                           status	equ	0xFD8
  7836                           
  7837 ;; *************** function _lcd_send_4bits *****************
  7838 ;; Defined at:
  7839 ;;		line 151 in file "source/../../vclib_lcd.h"
  7840 ;; Parameters:    Size  Location     Type
  7841 ;;  n               1    wreg     unsigned char 
  7842 ;; Auto vars:     Size  Location     Type
  7843 ;;  n               1   25[BANK0 ] unsigned char 
  7844 ;; Return value:  Size  Location     Type
  7845 ;;                  1    wreg      void 
  7846 ;; Registers used:
  7847 ;;		wreg, status,2, cstack
  7848 ;; Tracked objects:
  7849 ;;		On entry : 0/0
  7850 ;;		On exit  : 0/0
  7851 ;;		Unchanged: 0/0
  7852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7853 ;;      Params:         0       0       0       0       0       0       0
  7854 ;;      Locals:         0       5       0       0       0       0       0
  7855 ;;      Temps:          0       0       0       0       0       0       0
  7856 ;;      Totals:         0       5       0       0       0       0       0
  7857 ;;Total ram usage:        5 bytes
  7858 ;; Hardware stack levels used:    1
  7859 ;; Hardware stack levels required when called:    8
  7860 ;; This function calls:
  7861 ;;		Nothing
  7862 ;; This function is called by:
  7863 ;;		_lcd_send_byte
  7864 ;;		_lcd_init
  7865 ;; This function uses a non-reentrant model
  7866 ;;
  7867                           
  7868                           	psect	text22
  7869  00542E                     __ptext22:
  7870                           	opt stack 0
  7871  00542E                     _lcd_send_4bits:
  7872                           	opt stack 20
  7873                           
  7874                           ;incstack = 0
  7875                           ;lcd_send_4bits@n stored from wreg
  7876  00542E  0100               	movlb	0	; () banked
  7877  005430  6F79               	movwf	lcd_send_4bits@n& (0+255),b
  7878                           
  7879                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
  7880  005432  0E01               	movlw	1
  7881  005434  0100               	movlb	0	; () banked
  7882  005436  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7883                           
  7884                           ; BSR set to: 0
  7885  005438  0100               	movlb	0	; () banked
  7886  00543A  B179               	btfsc	lcd_send_4bits@n& (0+255),0,b
  7887  00543C  D003               	goto	l8100
  7888                           
  7889                           ; BSR set to: 0
  7890  00543E  0E00               	movlw	0
  7891  005440  0100               	movlb	0	; () banked
  7892  005442  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7893  005444                     l8100:
  7894                           
  7895                           ; BSR set to: 0
  7896  005444  0100               	movlb	0	; () banked
  7897  005446  B175               	btfsc	_lcd_send_4bits$1602& (0+255),0,b
  7898  005448  D002               	bra	u9875
  7899  00544A  9881               	bcf	3969,4,c	;volatile
  7900  00544C  D001               	bra	u9876
  7901  00544E                     u9875:
  7902  00544E  8881               	bsf	3969,4,c	;volatile
  7903  005450                     u9876:
  7904                           
  7905                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
  7906  005450  0E01               	movlw	1
  7907  005452  0100               	movlb	0	; () banked
  7908  005454  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7909                           
  7910                           ; BSR set to: 0
  7911  005456  0100               	movlb	0	; () banked
  7912  005458  B379               	btfsc	lcd_send_4bits@n& (0+255),1,b
  7913  00545A  D003               	goto	l8106
  7914                           
  7915                           ; BSR set to: 0
  7916  00545C  0E00               	movlw	0
  7917  00545E  0100               	movlb	0	; () banked
  7918  005460  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7919  005462                     l8106:
  7920                           
  7921                           ; BSR set to: 0
  7922  005462  0100               	movlb	0	; () banked
  7923  005464  B176               	btfsc	_lcd_send_4bits$1603& (0+255),0,b
  7924  005466  D002               	bra	u9895
  7925  005468  9A81               	bcf	3969,5,c	;volatile
  7926  00546A  D001               	bra	u9896
  7927  00546C                     u9895:
  7928  00546C  8A81               	bsf	3969,5,c	;volatile
  7929  00546E                     u9896:
  7930                           
  7931                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
  7932  00546E  0E01               	movlw	1
  7933  005470  0100               	movlb	0	; () banked
  7934  005472  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7935                           
  7936                           ; BSR set to: 0
  7937  005474  0100               	movlb	0	; () banked
  7938  005476  B579               	btfsc	lcd_send_4bits@n& (0+255),2,b
  7939  005478  D003               	goto	l8112
  7940                           
  7941                           ; BSR set to: 0
  7942  00547A  0E00               	movlw	0
  7943  00547C  0100               	movlb	0	; () banked
  7944  00547E  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7945  005480                     l8112:
  7946                           
  7947                           ; BSR set to: 0
  7948  005480  0100               	movlb	0	; () banked
  7949  005482  B177               	btfsc	_lcd_send_4bits$1604& (0+255),0,b
  7950  005484  D002               	bra	u9915
  7951  005486  9C81               	bcf	3969,6,c	;volatile
  7952  005488  D001               	bra	u9916
  7953  00548A                     u9915:
  7954  00548A  8C81               	bsf	3969,6,c	;volatile
  7955  00548C                     u9916:
  7956                           
  7957                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
  7958  00548C  0E01               	movlw	1
  7959  00548E  0100               	movlb	0	; () banked
  7960  005490  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7961                           
  7962                           ; BSR set to: 0
  7963  005492  0100               	movlb	0	; () banked
  7964  005494  B779               	btfsc	lcd_send_4bits@n& (0+255),3,b
  7965  005496  D003               	goto	l8118
  7966                           
  7967                           ; BSR set to: 0
  7968  005498  0E00               	movlw	0
  7969  00549A  0100               	movlb	0	; () banked
  7970  00549C  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7971  00549E                     l8118:
  7972                           
  7973                           ; BSR set to: 0
  7974  00549E  0100               	movlb	0	; () banked
  7975  0054A0  B178               	btfsc	_lcd_send_4bits$1605& (0+255),0,b
  7976  0054A2  D002               	bra	u9935
  7977  0054A4  9E81               	bcf	3969,7,c	;volatile
  7978  0054A6  D001               	bra	u9936
  7979  0054A8                     u9935:
  7980  0054A8  8E81               	bsf	3969,7,c	;volatile
  7981  0054AA                     u9936:
  7982                           
  7983                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7984  0054AA  D000               	nop2		;2 cycle nop
  7985  0054AC  D000               	nop2		;2 cycle nop
  7986                           
  7987                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
  7988  0054AE  8681               	bsf	3969,3,c	;volatile
  7989                           
  7990                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
  7991  0054B0  0E02               	movlw	2
  7992  0054B2                     u13687:
  7993  0054B2  2EE8               	decfsz	wreg,f,c
  7994  0054B4  D7FE               	goto	u13687
  7995  0054B6  D000               	nop2		;nop
  7996                           
  7997                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
  7998  0054B8  9681               	bcf	3969,3,c	;volatile
  7999  0054BA  0012               	return		;funcret
  8000  0054BC                     __end_of_lcd_send_4bits:
  8001                           	opt stack 0
  8002                           tblptru	equ	0xFF8
  8003                           tblptrh	equ	0xFF7
  8004                           tblptrl	equ	0xFF6
  8005                           tablat	equ	0xFF5
  8006                           prodh	equ	0xFF4
  8007                           prodl	equ	0xFF3
  8008                           intcon	equ	0xFF2
  8009                           postinc0	equ	0xFEE
  8010                           wreg	equ	0xFE8
  8011                           postdec1	equ	0xFE5
  8012                           fsr1l	equ	0xFE1
  8013                           indf2	equ	0xFDF
  8014                           postinc2	equ	0xFDE
  8015                           postdec2	equ	0xFDD
  8016                           fsr2h	equ	0xFDA
  8017                           fsr2l	equ	0xFD9
  8018                           status	equ	0xFD8
  8019                           
  8020 ;; *************** function _lcd_read_byte *****************
  8021 ;; Defined at:
  8022 ;;		line 127 in file "source/../../vclib_lcd.h"
  8023 ;; Parameters:    Size  Location     Type
  8024 ;;		None
  8025 ;; Auto vars:     Size  Location     Type
  8026 ;;  high            1   24[BANK0 ] unsigned char 
  8027 ;;  low             1   23[BANK0 ] unsigned char 
  8028 ;; Return value:  Size  Location     Type
  8029 ;;                  1    wreg      unsigned char 
  8030 ;; Registers used:
  8031 ;;		wreg, status,2, status,0, cstack
  8032 ;; Tracked objects:
  8033 ;;		On entry : 0/0
  8034 ;;		On exit  : 0/0
  8035 ;;		Unchanged: 0/0
  8036 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8037 ;;      Params:         0       0       0       0       0       0       0
  8038 ;;      Locals:         0       2       0       0       0       0       0
  8039 ;;      Temps:          0       0       0       0       0       0       0
  8040 ;;      Totals:         0       2       0       0       0       0       0
  8041 ;;Total ram usage:        2 bytes
  8042 ;; Hardware stack levels used:    1
  8043 ;; Hardware stack levels required when called:    9
  8044 ;; This function calls:
  8045 ;;		_lcd_read_4bits
  8046 ;; This function is called by:
  8047 ;;		_lcd_send_byte
  8048 ;;		_lcd_getc
  8049 ;; This function uses a non-reentrant model
  8050 ;;
  8051                           
  8052                           	psect	text23
  8053  005A70                     __ptext23:
  8054                           	opt stack 0
  8055  005A70                     _lcd_read_byte:
  8056                           	opt stack 19
  8057                           
  8058                           ;vclib_lcd.h: 128: unsigned char low, high;
  8059                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
  8060                           
  8061                           ;incstack = 0
  8062  005A70  8893               	bsf	3987,4,c	;volatile
  8063                           
  8064                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
  8065  005A72  8A93               	bsf	3987,5,c	;volatile
  8066                           
  8067                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
  8068  005A74  8C93               	bsf	3987,6,c	;volatile
  8069                           
  8070                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
  8071  005A76  8E93               	bsf	3987,7,c	;volatile
  8072                           
  8073                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
  8074  005A78  8481               	bsf	3969,2,c	;volatile
  8075                           
  8076                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8077  005A7A  D000               	nop2		;2 cycle nop
  8078  005A7C  D000               	nop2		;2 cycle nop
  8079                           
  8080                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
  8081  005A7E  8681               	bsf	3969,3,c	;volatile
  8082                           
  8083                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8084  005A80  D000               	nop2		;2 cycle nop
  8085  005A82  D000               	nop2		;2 cycle nop
  8086                           
  8087                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
  8088  005A84  EC20  F02B         	call	_lcd_read_4bits	;wreg free
  8089  005A88  0100               	movlb	0	; () banked
  8090  005A8A  6F78               	movwf	lcd_read_byte@high& (0+255),b
  8091                           
  8092                           ; BSR set to: 0
  8093                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
  8094  005A8C  9681               	bcf	3969,3,c	;volatile
  8095                           
  8096                           ; BSR set to: 0
  8097                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8098  005A8E  D000               	nop2		;2 cycle nop
  8099  005A90  D000               	nop2		;2 cycle nop
  8100                           
  8101                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
  8102  005A92  8681               	bsf	3969,3,c	;volatile
  8103                           
  8104                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
  8105  005A94  D000               	nop2		;2 cycle nop
  8106  005A96  D000               	nop2		;2 cycle nop
  8107                           
  8108                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
  8109  005A98  EC20  F02B         	call	_lcd_read_4bits	;wreg free
  8110  005A9C  0100               	movlb	0	; () banked
  8111  005A9E  6F77               	movwf	lcd_read_byte@low& (0+255),b
  8112                           
  8113                           ; BSR set to: 0
  8114                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
  8115  005AA0  9681               	bcf	3969,3,c	;volatile
  8116                           
  8117                           ; BSR set to: 0
  8118                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
  8119  005AA2  9893               	bcf	3987,4,c	;volatile
  8120                           
  8121                           ; BSR set to: 0
  8122                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
  8123  005AA4  9A93               	bcf	3987,5,c	;volatile
  8124                           
  8125                           ; BSR set to: 0
  8126                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
  8127  005AA6  9C93               	bcf	3987,6,c	;volatile
  8128                           
  8129                           ; BSR set to: 0
  8130                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
  8131  005AA8  9E93               	bcf	3987,7,c	;volatile
  8132                           
  8133                           ; BSR set to: 0
  8134                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
  8135  005AAA  0100               	movlb	0	; () banked
  8136  005AAC  3978               	swapf	lcd_read_byte@high& (0+255),w,b
  8137  005AAE  0BF0               	andlw	240
  8138  005AB0  0100               	movlb	0	; () banked
  8139  005AB2  1177               	iorwf	lcd_read_byte@low& (0+255),w,b
  8140  005AB4  0012               	return	
  8141  005AB6                     __end_of_lcd_read_byte:
  8142                           	opt stack 0
  8143                           tblptru	equ	0xFF8
  8144                           tblptrh	equ	0xFF7
  8145                           tblptrl	equ	0xFF6
  8146                           tablat	equ	0xFF5
  8147                           prodh	equ	0xFF4
  8148                           prodl	equ	0xFF3
  8149                           intcon	equ	0xFF2
  8150                           postinc0	equ	0xFEE
  8151                           wreg	equ	0xFE8
  8152                           postdec1	equ	0xFE5
  8153                           fsr1l	equ	0xFE1
  8154                           indf2	equ	0xFDF
  8155                           postinc2	equ	0xFDE
  8156                           postdec2	equ	0xFDD
  8157                           fsr2h	equ	0xFDA
  8158                           fsr2l	equ	0xFD9
  8159                           status	equ	0xFD8
  8160                           
  8161 ;; *************** function _lcd_read_4bits *****************
  8162 ;; Defined at:
  8163 ;;		line 117 in file "source/../../vclib_lcd.h"
  8164 ;; Parameters:    Size  Location     Type
  8165 ;;		None
  8166 ;; Auto vars:     Size  Location     Type
  8167 ;;  n               1   22[BANK0 ] unsigned char 
  8168 ;; Return value:  Size  Location     Type
  8169 ;;                  1    wreg      unsigned char 
  8170 ;; Registers used:
  8171 ;;		wreg, status,2, status,0
  8172 ;; Tracked objects:
  8173 ;;		On entry : 0/0
  8174 ;;		On exit  : 0/0
  8175 ;;		Unchanged: 0/0
  8176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8177 ;;      Params:         0       0       0       0       0       0       0
  8178 ;;      Locals:         0       1       0       0       0       0       0
  8179 ;;      Temps:          0       1       0       0       0       0       0
  8180 ;;      Totals:         0       2       0       0       0       0       0
  8181 ;;Total ram usage:        2 bytes
  8182 ;; Hardware stack levels used:    1
  8183 ;; Hardware stack levels required when called:    8
  8184 ;; This function calls:
  8185 ;;		Nothing
  8186 ;; This function is called by:
  8187 ;;		_lcd_read_byte
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text24
  8192  005640                     __ptext24:
  8193                           	opt stack 0
  8194  005640                     _lcd_read_4bits:
  8195                           	opt stack 19
  8196                           
  8197                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
  8198                           
  8199                           ; BSR set to: 0
  8200                           ;incstack = 0
  8201  005640  0E00               	movlw	0
  8202  005642  0100               	movlb	0	; () banked
  8203  005644  6F76               	movwf	lcd_read_4bits@n& (0+255),b
  8204                           
  8205                           ; BSR set to: 0
  8206                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
  8207  005646  A881               	btfss	3969,4,c	;volatile
  8208  005648  D002               	goto	u9820
  8209  00564A  0E01               	movlw	1
  8210  00564C  D001               	goto	u9826
  8211  00564E                     u9820:
  8212  00564E  0E00               	movlw	0
  8213  005650                     u9826:
  8214  005650  0100               	movlb	0	; () banked
  8215  005652  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8216                           
  8217                           ; BSR set to: 0
  8218                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
  8219  005654  AA81               	btfss	3969,5,c	;volatile
  8220  005656  D004               	goto	u9830
  8221  005658  0100               	movlb	0	; () banked
  8222  00565A  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8223  00565C  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  8224  00565E  D002               	goto	u9838
  8225  005660                     u9830:
  8226  005660  0100               	movlb	0	; () banked
  8227  005662  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8228  005664                     u9838:
  8229  005664  0100               	movlb	0	; () banked
  8230  005666  90D8               	bcf	status,0,c
  8231  005668  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8232  00566A  0100               	movlb	0	; () banked
  8233  00566C  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
  8237  00566E  AC81               	btfss	3969,6,c	;volatile
  8238  005670  D004               	goto	u9840
  8239  005672  0100               	movlb	0	; () banked
  8240  005674  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8241  005676  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  8242  005678  D002               	goto	u9848
  8243  00567A                     u9840:
  8244  00567A  0100               	movlb	0	; () banked
  8245  00567C  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8246  00567E                     u9848:
  8247  00567E  0100               	movlb	0	; () banked
  8248  005680  90D8               	bcf	status,0,c
  8249  005682  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8250  005684  0100               	movlb	0	; () banked
  8251  005686  90D8               	bcf	status,0,c
  8252  005688  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8253  00568A  0100               	movlb	0	; () banked
  8254  00568C  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8255                           
  8256                           ; BSR set to: 0
  8257                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
  8258  00568E  AE81               	btfss	3969,7,c	;volatile
  8259  005690  D004               	goto	u9850
  8260  005692  0100               	movlb	0	; () banked
  8261  005694  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8262  005696  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  8263  005698  D002               	goto	u9858
  8264  00569A                     u9850:
  8265  00569A  0100               	movlb	0	; () banked
  8266  00569C  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  8267  00569E                     u9858:
  8268  00569E  0100               	movlb	0	; () banked
  8269  0056A0  90D8               	bcf	status,0,c
  8270  0056A2  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8271  0056A4  0100               	movlb	0	; () banked
  8272  0056A6  90D8               	bcf	status,0,c
  8273  0056A8  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  8274  0056AA  0100               	movlb	0	; () banked
  8275  0056AC  90D8               	bcf	status,0,c
  8276  0056AE  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  8277  0056B0  0100               	movlb	0	; () banked
  8278  0056B2  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  8279                           
  8280                           ;vclib_lcd.h: 124: return (n);
  8281  0056B4  0100               	movlb	0	; () banked
  8282  0056B6  5176               	movf	lcd_read_4bits@n& (0+255),w,b
  8283  0056B8  0012               	return	
  8284  0056BA                     __end_of_lcd_read_4bits:
  8285                           	opt stack 0
  8286                           tblptru	equ	0xFF8
  8287                           tblptrh	equ	0xFF7
  8288                           tblptrl	equ	0xFF6
  8289                           tablat	equ	0xFF5
  8290                           prodh	equ	0xFF4
  8291                           prodl	equ	0xFF3
  8292                           intcon	equ	0xFF2
  8293                           postinc0	equ	0xFEE
  8294                           wreg	equ	0xFE8
  8295                           postdec1	equ	0xFE5
  8296                           fsr1l	equ	0xFE1
  8297                           indf2	equ	0xFDF
  8298                           postinc2	equ	0xFDE
  8299                           postdec2	equ	0xFDD
  8300                           fsr2h	equ	0xFDA
  8301                           fsr2l	equ	0xFD9
  8302                           status	equ	0xFD8
  8303                           
  8304 ;; *************** function _isdigit *****************
  8305 ;; Defined at:
  8306 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  8307 ;; Parameters:    Size  Location     Type
  8308 ;;  c               1    wreg     unsigned char 
  8309 ;; Auto vars:     Size  Location     Type
  8310 ;;  c               1   23[BANK0 ] unsigned char 
  8311 ;; Return value:  Size  Location     Type
  8312 ;;		None               void
  8313 ;; Registers used:
  8314 ;;		wreg, status,2, status,0
  8315 ;; Tracked objects:
  8316 ;;		On entry : 0/0
  8317 ;;		On exit  : 0/0
  8318 ;;		Unchanged: 0/0
  8319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8320 ;;      Params:         0       0       0       0       0       0       0
  8321 ;;      Locals:         0       2       0       0       0       0       0
  8322 ;;      Temps:          0       1       0       0       0       0       0
  8323 ;;      Totals:         0       3       0       0       0       0       0
  8324 ;;Total ram usage:        3 bytes
  8325 ;; Hardware stack levels used:    1
  8326 ;; Hardware stack levels required when called:    8
  8327 ;; This function calls:
  8328 ;;		Nothing
  8329 ;; This function is called by:
  8330 ;;		_printf
  8331 ;; This function uses a non-reentrant model
  8332 ;;
  8333                           
  8334                           	psect	text25
  8335  005D8C                     __ptext25:
  8336                           	opt stack 0
  8337  005D8C                     _isdigit:
  8338                           	opt stack 19
  8339                           
  8340                           ; BSR set to: 0
  8341                           ;incstack = 0
  8342                           ;isdigit@c stored from wreg
  8343  005D8C  0100               	movlb	0	; () banked
  8344  005D8E  6F77               	movwf	isdigit@c& (0+255),b
  8345  005D90  0E00               	movlw	0
  8346  005D92  0100               	movlb	0	; () banked
  8347  005D94  6F76               	movwf	_isdigit$2391& (0+255),b
  8348                           
  8349                           ; BSR set to: 0
  8350  005D96  0E3A               	movlw	58
  8351  005D98  0100               	movlb	0	; () banked
  8352  005D9A  6177               	cpfslt	isdigit@c& (0+255),b
  8353  005D9C  D007               	goto	l8668
  8354                           
  8355                           ; BSR set to: 0
  8356  005D9E  0E2F               	movlw	47
  8357  005DA0  0100               	movlb	0	; () banked
  8358  005DA2  6577               	cpfsgt	isdigit@c& (0+255),b
  8359  005DA4  D003               	goto	l8668
  8360                           
  8361                           ; BSR set to: 0
  8362  005DA6  0E01               	movlw	1
  8363  005DA8  0100               	movlb	0	; () banked
  8364  005DAA  6F76               	movwf	_isdigit$2391& (0+255),b
  8365  005DAC                     l8668:
  8366                           
  8367                           ; BSR set to: 0
  8368  005DAC  C076  F075         	movff	_isdigit$2391,??_isdigit
  8369  005DB0  0100               	movlb	0	; () banked
  8370  005DB2  3175               	rrcf	??_isdigit& (0+255),w,b
  8371  005DB4  0012               	return	
  8372  005DB6                     __end_of_isdigit:
  8373                           	opt stack 0
  8374                           tblptru	equ	0xFF8
  8375                           tblptrh	equ	0xFF7
  8376                           tblptrl	equ	0xFF6
  8377                           tablat	equ	0xFF5
  8378                           prodh	equ	0xFF4
  8379                           prodl	equ	0xFF3
  8380                           intcon	equ	0xFF2
  8381                           postinc0	equ	0xFEE
  8382                           wreg	equ	0xFE8
  8383                           postdec1	equ	0xFE5
  8384                           fsr1l	equ	0xFE1
  8385                           indf2	equ	0xFDF
  8386                           postinc2	equ	0xFDE
  8387                           postdec2	equ	0xFDD
  8388                           fsr2h	equ	0xFDA
  8389                           fsr2l	equ	0xFD9
  8390                           status	equ	0xFD8
  8391                           
  8392 ;; *************** function _fround *****************
  8393 ;; Defined at:
  8394 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  8395 ;; Parameters:    Size  Location     Type
  8396 ;;  prec            1    wreg     unsigned char 
  8397 ;; Auto vars:     Size  Location     Type
  8398 ;;  prec            1   72[BANK0 ] unsigned char 
  8399 ;; Return value:  Size  Location     Type
  8400 ;;                  4   60[BANK0 ] unsigned char 
  8401 ;; Registers used:
  8402 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8403 ;; Tracked objects:
  8404 ;;		On entry : 0/0
  8405 ;;		On exit  : 0/0
  8406 ;;		Unchanged: 0/0
  8407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8408 ;;      Params:         0       4       0       0       0       0       0
  8409 ;;      Locals:         0       9       0       0       0       0       0
  8410 ;;      Temps:          0       0       0       0       0       0       0
  8411 ;;      Totals:         0      13       0       0       0       0       0
  8412 ;;Total ram usage:       13 bytes
  8413 ;; Hardware stack levels used:    1
  8414 ;; Hardware stack levels required when called:    9
  8415 ;; This function calls:
  8416 ;;		___awdiv
  8417 ;;		___awmod
  8418 ;;		___flmul
  8419 ;; This function is called by:
  8420 ;;		_printf
  8421 ;; This function uses a non-reentrant model
  8422 ;;
  8423                           
  8424                           	psect	text26
  8425  0025D6                     __ptext26:
  8426                           	opt stack 0
  8427  0025D6                     _fround:
  8428                           	opt stack 18
  8429                           
  8430                           ; BSR set to: 0
  8431                           ;incstack = 0
  8432                           ;fround@prec stored from wreg
  8433  0025D6  0100               	movlb	0	; () banked
  8434  0025D8  6FA8               	movwf	fround@prec& (0+255),b
  8435                           
  8436                           ;doprnt.c: 413: if(prec>=110)
  8437  0025DA  0E6D               	movlw	109
  8438  0025DC  0100               	movlb	0	; () banked
  8439  0025DE  65A8               	cpfsgt	fround@prec& (0+255),b
  8440  0025E0  D0C4               	goto	l8610
  8441                           
  8442                           ; BSR set to: 0
  8443                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8444  0025E2  0E00               	movlw	0
  8445  0025E4  0100               	movlb	0	; () banked
  8446  0025E6  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8447  0025E8  0E0A               	movlw	10
  8448  0025EA  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8449  0025EC  0E00               	movlw	0
  8450  0025EE  0100               	movlb	0	; () banked
  8451  0025F0  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8452  0025F2  0E64               	movlw	100
  8453  0025F4  6F77               	movwf	___awmod@divisor& (0+255),b
  8454  0025F6  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8455  0025FA  0100               	movlb	0	; () banked
  8456  0025FC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8457  0025FE  EC99  F028         	call	___awmod	;wreg free
  8458  002602  C075  F07B         	movff	?___awmod,___awdiv@dividend
  8459  002606  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  8460  00260A  EC31  F027         	call	___awdiv	;wreg free
  8461  00260E  0100               	movlb	0	; () banked
  8462  002610  90D8               	bcf	status,0,c
  8463  002612  377B               	rlcf	?___awdiv& (0+255),f,b
  8464  002614  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8465  002616  0100               	movlb	0	; () banked
  8466  002618  90D8               	bcf	status,0,c
  8467  00261A  377B               	rlcf	?___awdiv& (0+255),f,b
  8468  00261C  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8469  00261E  0E24               	movlw	36
  8470  002620  0100               	movlb	0	; () banked
  8471  002622  277B               	addwf	?___awdiv& (0+255),f,b
  8472  002624  0E00               	movlw	0
  8473  002626  0100               	movlb	0	; () banked
  8474  002628  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8475  00262A  0ED9               	movlw	low __npowers_
  8476  00262C  0100               	movlb	0	; () banked
  8477  00262E  257B               	addwf	?___awdiv& (0+255),w,b
  8478  002630  6EF6               	movwf	tblptrl,c
  8479  002632  0E7C               	movlw	high __npowers_
  8480  002634  0100               	movlb	0	; () banked
  8481  002636  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8482  002638  6EF7               	movwf	tblptrh,c
  8483  00263A                     	if	0	;There are less than 3 active tblptr bytes
  8484  00263A                     	endif
  8485  00263A  0009               	tblrd		*+
  8486  00263C  CFF5 F087          	movff	tablat,___flmul@a
  8487  002640  0009               	tblrd		*+
  8488  002642  CFF5 F088          	movff	tablat,___flmul@a+1
  8489  002646  0009               	tblrd		*+
  8490  002648  CFF5 F089          	movff	tablat,___flmul@a+2
  8491  00264C  000A               	tblrd		*-
  8492  00264E  CFF5 F08A          	movff	tablat,___flmul@a+3
  8493  002652  0E00               	movlw	0
  8494  002654  0100               	movlb	0	; () banked
  8495  002656  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8496  002658  0E64               	movlw	100
  8497  00265A  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8498  00265C  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  8499  002660  0100               	movlb	0	; () banked
  8500  002662  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  8501  002664  EC31  F027         	call	___awdiv	;wreg free
  8502  002668  0100               	movlb	0	; () banked
  8503  00266A  90D8               	bcf	status,0,c
  8504  00266C  377B               	rlcf	?___awdiv& (0+255),f,b
  8505  00266E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8506  002670  0100               	movlb	0	; () banked
  8507  002672  90D8               	bcf	status,0,c
  8508  002674  377B               	rlcf	?___awdiv& (0+255),f,b
  8509  002676  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8510  002678  0E48               	movlw	72
  8511  00267A  0100               	movlb	0	; () banked
  8512  00267C  277B               	addwf	?___awdiv& (0+255),f,b
  8513  00267E  0E00               	movlw	0
  8514  002680  0100               	movlb	0	; () banked
  8515  002682  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8516  002684  0ED9               	movlw	low __npowers_
  8517  002686  0100               	movlb	0	; () banked
  8518  002688  257B               	addwf	?___awdiv& (0+255),w,b
  8519  00268A  6EF6               	movwf	tblptrl,c
  8520  00268C  0E7C               	movlw	high __npowers_
  8521  00268E  0100               	movlb	0	; () banked
  8522  002690  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8523  002692  6EF7               	movwf	tblptrh,c
  8524  002694                     	if	0	;There are less than 3 active tblptr bytes
  8525  002694                     	endif
  8526  002694  0009               	tblrd		*+
  8527  002696  CFF5 F083          	movff	tablat,___flmul@b
  8528  00269A  0009               	tblrd		*+
  8529  00269C  CFF5 F084          	movff	tablat,___flmul@b+1
  8530  0026A0  0009               	tblrd		*+
  8531  0026A2  CFF5 F085          	movff	tablat,___flmul@b+2
  8532  0026A6  000A               	tblrd		*-
  8533  0026A8  CFF5 F086          	movff	tablat,___flmul@b+3
  8534  0026AC  EC4F  F00B         	call	___flmul	;wreg free
  8535  0026B0  C083  F0A4         	movff	?___flmul,_fround$2889
  8536  0026B4  C084  F0A5         	movff	?___flmul+1,_fround$2889+1
  8537  0026B8  C085  F0A6         	movff	?___flmul+2,_fround$2889+2
  8538  0026BC  C086  F0A7         	movff	?___flmul+3,_fround$2889+3
  8539                           
  8540                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8541  0026C0  0E00               	movlw	0
  8542  0026C2  0100               	movlb	0	; () banked
  8543  0026C4  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8544  0026C6  0E0A               	movlw	10
  8545  0026C8  6F77               	movwf	___awmod@divisor& (0+255),b
  8546  0026CA  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8547  0026CE  0100               	movlb	0	; () banked
  8548  0026D0  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8549  0026D2  EC99  F028         	call	___awmod	;wreg free
  8550  0026D6  0100               	movlb	0	; () banked
  8551  0026D8  90D8               	bcf	status,0,c
  8552  0026DA  3775               	rlcf	?___awmod& (0+255),f,b
  8553  0026DC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8554  0026DE  0100               	movlb	0	; () banked
  8555  0026E0  90D8               	bcf	status,0,c
  8556  0026E2  3775               	rlcf	?___awmod& (0+255),f,b
  8557  0026E4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8558  0026E6  0ED9               	movlw	low __npowers_
  8559  0026E8  0100               	movlb	0	; () banked
  8560  0026EA  2575               	addwf	?___awmod& (0+255),w,b
  8561  0026EC  6EF6               	movwf	tblptrl,c
  8562  0026EE  0E7C               	movlw	high __npowers_
  8563  0026F0  0100               	movlb	0	; () banked
  8564  0026F2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8565  0026F4  6EF7               	movwf	tblptrh,c
  8566  0026F6                     	if	0	;There are less than 3 active tblptr bytes
  8567  0026F6                     	endif
  8568  0026F6  0009               	tblrd		*+
  8569  0026F8  CFF5 F087          	movff	tablat,___flmul@a
  8570  0026FC  0009               	tblrd		*+
  8571  0026FE  CFF5 F088          	movff	tablat,___flmul@a+1
  8572  002702  0009               	tblrd		*+
  8573  002704  CFF5 F089          	movff	tablat,___flmul@a+2
  8574  002708  000A               	tblrd		*-
  8575  00270A  CFF5 F08A          	movff	tablat,___flmul@a+3
  8576  00270E  C0A4  F083         	movff	_fround$2889,___flmul@b
  8577  002712  C0A5  F084         	movff	_fround$2889+1,___flmul@b+1
  8578  002716  C0A6  F085         	movff	_fround$2889+2,___flmul@b+2
  8579  00271A  C0A7  F086         	movff	_fround$2889+3,___flmul@b+3
  8580  00271E  EC4F  F00B         	call	___flmul	;wreg free
  8581  002722  C083  F0A0         	movff	?___flmul,_fround$2890
  8582  002726  C084  F0A1         	movff	?___flmul+1,_fround$2890+1
  8583  00272A  C085  F0A2         	movff	?___flmul+2,_fround$2890+2
  8584  00272E  C086  F0A3         	movff	?___flmul+3,_fround$2890+3
  8585                           
  8586                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8587  002732  C0A0  F083         	movff	_fround$2890,___flmul@b
  8588  002736  C0A1  F084         	movff	_fround$2890+1,___flmul@b+1
  8589  00273A  C0A2  F085         	movff	_fround$2890+2,___flmul@b+2
  8590  00273E  C0A3  F086         	movff	_fround$2890+3,___flmul@b+3
  8591  002742  0E00               	movlw	0
  8592  002744  0100               	movlb	0	; () banked
  8593  002746  6F87               	movwf	___flmul@a& (0+255),b
  8594  002748  0E00               	movlw	0
  8595  00274A  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8596  00274C  0E00               	movlw	0
  8597  00274E  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8598  002750  0E3F               	movlw	63
  8599  002752  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8600  002754  EC4F  F00B         	call	___flmul	;wreg free
  8601  002758  C083  F09C         	movff	?___flmul,?_fround
  8602  00275C  C084  F09D         	movff	?___flmul+1,?_fround+1
  8603  002760  C085  F09E         	movff	?___flmul+2,?_fround+2
  8604  002764  C086  F09F         	movff	?___flmul+3,?_fround+3
  8605  002768  0012               	return	
  8606  00276A                     l8610:
  8607                           
  8608                           ;doprnt.c: 415: else if(prec > 10)
  8609  00276A  0E0A               	movlw	10
  8610  00276C  0100               	movlb	0	; () banked
  8611  00276E  65A8               	cpfsgt	fround@prec& (0+255),b
  8612  002770  D072               	goto	l8618
  8613                           
  8614                           ; BSR set to: 0
  8615                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8616  002772  0E00               	movlw	0
  8617  002774  0100               	movlb	0	; () banked
  8618  002776  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8619  002778  0E0A               	movlw	10
  8620  00277A  6F77               	movwf	___awmod@divisor& (0+255),b
  8621  00277C  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8622  002780  0100               	movlb	0	; () banked
  8623  002782  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8624  002784  EC99  F028         	call	___awmod	;wreg free
  8625  002788  0100               	movlb	0	; () banked
  8626  00278A  90D8               	bcf	status,0,c
  8627  00278C  3775               	rlcf	?___awmod& (0+255),f,b
  8628  00278E  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8629  002790  0100               	movlb	0	; () banked
  8630  002792  90D8               	bcf	status,0,c
  8631  002794  3775               	rlcf	?___awmod& (0+255),f,b
  8632  002796  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8633  002798  0ED9               	movlw	low __npowers_
  8634  00279A  0100               	movlb	0	; () banked
  8635  00279C  2575               	addwf	?___awmod& (0+255),w,b
  8636  00279E  6EF6               	movwf	tblptrl,c
  8637  0027A0  0E7C               	movlw	high __npowers_
  8638  0027A2  0100               	movlb	0	; () banked
  8639  0027A4  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8640  0027A6  6EF7               	movwf	tblptrh,c
  8641  0027A8                     	if	0	;There are less than 3 active tblptr bytes
  8642  0027A8                     	endif
  8643  0027A8  0009               	tblrd		*+
  8644  0027AA  CFF5 F087          	movff	tablat,___flmul@a
  8645  0027AE  0009               	tblrd		*+
  8646  0027B0  CFF5 F088          	movff	tablat,___flmul@a+1
  8647  0027B4  0009               	tblrd		*+
  8648  0027B6  CFF5 F089          	movff	tablat,___flmul@a+2
  8649  0027BA  000A               	tblrd		*-
  8650  0027BC  CFF5 F08A          	movff	tablat,___flmul@a+3
  8651  0027C0  0E00               	movlw	0
  8652  0027C2  0100               	movlb	0	; () banked
  8653  0027C4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8654  0027C6  0E0A               	movlw	10
  8655  0027C8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8656  0027CA  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  8657  0027CE  0100               	movlb	0	; () banked
  8658  0027D0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  8659  0027D2  EC31  F027         	call	___awdiv	;wreg free
  8660  0027D6  0100               	movlb	0	; () banked
  8661  0027D8  90D8               	bcf	status,0,c
  8662  0027DA  377B               	rlcf	?___awdiv& (0+255),f,b
  8663  0027DC  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8664  0027DE  0100               	movlb	0	; () banked
  8665  0027E0  90D8               	bcf	status,0,c
  8666  0027E2  377B               	rlcf	?___awdiv& (0+255),f,b
  8667  0027E4  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8668  0027E6  0E24               	movlw	36
  8669  0027E8  0100               	movlb	0	; () banked
  8670  0027EA  277B               	addwf	?___awdiv& (0+255),f,b
  8671  0027EC  0E00               	movlw	0
  8672  0027EE  0100               	movlb	0	; () banked
  8673  0027F0  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8674  0027F2  0ED9               	movlw	low __npowers_
  8675  0027F4  0100               	movlb	0	; () banked
  8676  0027F6  257B               	addwf	?___awdiv& (0+255),w,b
  8677  0027F8  6EF6               	movwf	tblptrl,c
  8678  0027FA  0E7C               	movlw	high __npowers_
  8679  0027FC  0100               	movlb	0	; () banked
  8680  0027FE  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8681  002800  6EF7               	movwf	tblptrh,c
  8682  002802                     	if	0	;There are less than 3 active tblptr bytes
  8683  002802                     	endif
  8684  002802  0009               	tblrd		*+
  8685  002804  CFF5 F083          	movff	tablat,___flmul@b
  8686  002808  0009               	tblrd		*+
  8687  00280A  CFF5 F084          	movff	tablat,___flmul@b+1
  8688  00280E  0009               	tblrd		*+
  8689  002810  CFF5 F085          	movff	tablat,___flmul@b+2
  8690  002814  000A               	tblrd		*-
  8691  002816  CFF5 F086          	movff	tablat,___flmul@b+3
  8692  00281A  EC4F  F00B         	call	___flmul	;wreg free
  8693  00281E  C083  F0A4         	movff	?___flmul,_fround$2889
  8694  002822  C084  F0A5         	movff	?___flmul+1,_fround$2889+1
  8695  002826  C085  F0A6         	movff	?___flmul+2,_fround$2889+2
  8696  00282A  C086  F0A7         	movff	?___flmul+3,_fround$2889+3
  8697                           
  8698                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8699  00282E  C0A4  F083         	movff	_fround$2889,___flmul@b
  8700  002832  C0A5  F084         	movff	_fround$2889+1,___flmul@b+1
  8701  002836  C0A6  F085         	movff	_fround$2889+2,___flmul@b+2
  8702  00283A  C0A7  F086         	movff	_fround$2889+3,___flmul@b+3
  8703  00283E  0E00               	movlw	0
  8704  002840  0100               	movlb	0	; () banked
  8705  002842  6F87               	movwf	___flmul@a& (0+255),b
  8706  002844  0E00               	movlw	0
  8707  002846  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8708  002848  0E00               	movlw	0
  8709  00284A  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8710  00284C  0E3F               	movlw	63
  8711  00284E  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8712  002850  EC4F  F00B         	call	___flmul	;wreg free
  8713  002854  D781               	goto	L5
  8714  002856                     l8618:
  8715                           
  8716                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8717  002856  0100               	movlb	0	; () banked
  8718  002858  51A8               	movf	fround@prec& (0+255),w,b
  8719  00285A  0D04               	mullw	4
  8720  00285C  0ED9               	movlw	low __npowers_
  8721  00285E  24F3               	addwf	prodl,w,c
  8722  002860  6EF6               	movwf	tblptrl,c
  8723  002862  0E7C               	movlw	high __npowers_
  8724  002864  20F4               	addwfc	prodh,w,c
  8725  002866  6EF7               	movwf	tblptrh,c
  8726  002868                     	if	0	;There are less than 3 active tblptr bytes
  8727  002868                     	endif
  8728  002868  0009               	tblrd		*+
  8729  00286A  CFF5 F083          	movff	tablat,___flmul@b
  8730  00286E  0009               	tblrd		*+
  8731  002870  CFF5 F084          	movff	tablat,___flmul@b+1
  8732  002874  0009               	tblrd		*+
  8733  002876  CFF5 F085          	movff	tablat,___flmul@b+2
  8734  00287A  000A               	tblrd		*-
  8735  00287C  CFF5 F086          	movff	tablat,___flmul@b+3
  8736  002880  0E00               	movlw	0
  8737  002882  0100               	movlb	0	; () banked
  8738  002884  6F87               	movwf	___flmul@a& (0+255),b
  8739  002886  0E00               	movlw	0
  8740  002888  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8741  00288A  0E00               	movlw	0
  8742  00288C  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8743  00288E  0E3F               	movlw	63
  8744  002890  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8745  002892  EC4F  F00B         	call	___flmul	;wreg free
  8746  002896  C083  F09C         	movff	?___flmul,?_fround
  8747  00289A  C084  F09D         	movff	?___flmul+1,?_fround+1
  8748  00289E  C085  F09E         	movff	?___flmul+2,?_fround+2
  8749  0028A2  C086  F09F         	movff	?___flmul+3,?_fround+3
  8750  0028A6  0012               	return	
  8751  0028A8                     __end_of_fround:
  8752                           	opt stack 0
  8753                           tblptru	equ	0xFF8
  8754                           tblptrh	equ	0xFF7
  8755                           tblptrl	equ	0xFF6
  8756                           tablat	equ	0xFF5
  8757                           prodh	equ	0xFF4
  8758                           prodl	equ	0xFF3
  8759                           intcon	equ	0xFF2
  8760                           postinc0	equ	0xFEE
  8761                           wreg	equ	0xFE8
  8762                           postdec1	equ	0xFE5
  8763                           fsr1l	equ	0xFE1
  8764                           indf2	equ	0xFDF
  8765                           postinc2	equ	0xFDE
  8766                           postdec2	equ	0xFDD
  8767                           fsr2h	equ	0xFDA
  8768                           fsr2l	equ	0xFD9
  8769                           status	equ	0xFD8
  8770                           
  8771 ;; *************** function ___awmod *****************
  8772 ;; Defined at:
  8773 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  dividend        2   21[BANK0 ] int 
  8776 ;;  divisor         2   23[BANK0 ] int 
  8777 ;; Auto vars:     Size  Location     Type
  8778 ;;  sign            1   26[BANK0 ] unsigned char 
  8779 ;;  counter         1   25[BANK0 ] unsigned char 
  8780 ;; Return value:  Size  Location     Type
  8781 ;;                  2   21[BANK0 ] int 
  8782 ;; Registers used:
  8783 ;;		wreg, status,2, status,0
  8784 ;; Tracked objects:
  8785 ;;		On entry : 0/0
  8786 ;;		On exit  : 0/0
  8787 ;;		Unchanged: 0/0
  8788 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8789 ;;      Params:         0       4       0       0       0       0       0
  8790 ;;      Locals:         0       2       0       0       0       0       0
  8791 ;;      Temps:          0       0       0       0       0       0       0
  8792 ;;      Totals:         0       6       0       0       0       0       0
  8793 ;;Total ram usage:        6 bytes
  8794 ;; Hardware stack levels used:    1
  8795 ;; Hardware stack levels required when called:    8
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_fround
  8800 ;;		_scale
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text27
  8805  005132                     __ptext27:
  8806                           	opt stack 0
  8807  005132                     ___awmod:
  8808                           	opt stack 18
  8809                           
  8810                           ;incstack = 0
  8811  005132  0E00               	movlw	0
  8812  005134  0100               	movlb	0	; () banked
  8813  005136  6F7A               	movwf	___awmod@sign& (0+255),b
  8814                           
  8815                           ; BSR set to: 0
  8816  005138  0100               	movlb	0	; () banked
  8817  00513A  AF76               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8818  00513C  D008               	goto	l8546
  8819                           
  8820                           ; BSR set to: 0
  8821  00513E  0100               	movlb	0	; () banked
  8822  005140  6D75               	negf	___awmod@dividend& (0+255),b
  8823  005142  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8824  005144  B0D8               	btfsc	status,0,c
  8825  005146  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8826                           
  8827                           ; BSR set to: 0
  8828  005148  0E01               	movlw	1
  8829  00514A  0100               	movlb	0	; () banked
  8830  00514C  6F7A               	movwf	___awmod@sign& (0+255),b
  8831  00514E                     l8546:
  8832                           
  8833                           ; BSR set to: 0
  8834  00514E  0100               	movlb	0	; () banked
  8835  005150  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8836  005152  D005               	goto	l8550
  8837                           
  8838                           ; BSR set to: 0
  8839  005154  0100               	movlb	0	; () banked
  8840  005156  6D77               	negf	___awmod@divisor& (0+255),b
  8841  005158  1F78               	comf	(___awmod@divisor+1)& (0+255),f,b
  8842  00515A  B0D8               	btfsc	status,0,c
  8843  00515C  2B78               	incf	(___awmod@divisor+1)& (0+255),f,b
  8844  00515E                     l8550:
  8845                           
  8846                           ; BSR set to: 0
  8847  00515E  0100               	movlb	0	; () banked
  8848  005160  5177               	movf	___awmod@divisor& (0+255),w,b
  8849  005162  0100               	movlb	0	; () banked
  8850  005164  1178               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8851  005166  B4D8               	btfsc	status,2,c
  8852  005168  D026               	goto	l8566
  8853                           
  8854                           ; BSR set to: 0
  8855  00516A  0E01               	movlw	1
  8856  00516C  0100               	movlb	0	; () banked
  8857  00516E  6F79               	movwf	___awmod@counter& (0+255),b
  8858  005170  D006               	goto	l8556
  8859  005172                     l8554:
  8860                           
  8861                           ; BSR set to: 0
  8862  005172  0100               	movlb	0	; () banked
  8863  005174  90D8               	bcf	status,0,c
  8864  005176  3777               	rlcf	___awmod@divisor& (0+255),f,b
  8865  005178  3778               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8866  00517A  0100               	movlb	0	; () banked
  8867  00517C  2B79               	incf	___awmod@counter& (0+255),f,b
  8868  00517E                     l8556:
  8869                           
  8870                           ; BSR set to: 0
  8871  00517E  0100               	movlb	0	; () banked
  8872  005180  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8873  005182  D7F7               	goto	l8554
  8874  005184                     l8558:
  8875                           
  8876                           ; BSR set to: 0
  8877  005184  0100               	movlb	0	; () banked
  8878  005186  5177               	movf	___awmod@divisor& (0+255),w,b
  8879  005188  0100               	movlb	0	; () banked
  8880  00518A  5D75               	subwf	___awmod@dividend& (0+255),w,b
  8881  00518C  0100               	movlb	0	; () banked
  8882  00518E  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8883  005190  0100               	movlb	0	; () banked
  8884  005192  5976               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8885  005194  A0D8               	btfss	status,0,c
  8886  005196  D008               	goto	l8562
  8887                           
  8888                           ; BSR set to: 0
  8889  005198  0100               	movlb	0	; () banked
  8890  00519A  5177               	movf	___awmod@divisor& (0+255),w,b
  8891  00519C  0100               	movlb	0	; () banked
  8892  00519E  5F75               	subwf	___awmod@dividend& (0+255),f,b
  8893  0051A0  0100               	movlb	0	; () banked
  8894  0051A2  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8895  0051A4  0100               	movlb	0	; () banked
  8896  0051A6  5B76               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8897  0051A8                     l8562:
  8898                           
  8899                           ; BSR set to: 0
  8900  0051A8  0100               	movlb	0	; () banked
  8901  0051AA  90D8               	bcf	status,0,c
  8902  0051AC  3378               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8903  0051AE  3377               	rrcf	___awmod@divisor& (0+255),f,b
  8904                           
  8905                           ; BSR set to: 0
  8906  0051B0  0100               	movlb	0	; () banked
  8907  0051B2  2F79               	decfsz	___awmod@counter& (0+255),f,b
  8908  0051B4  D7E7               	goto	l8558
  8909  0051B6                     l8566:
  8910                           
  8911                           ; BSR set to: 0
  8912  0051B6  0100               	movlb	0	; () banked
  8913  0051B8  517A               	movf	___awmod@sign& (0+255),w,b
  8914  0051BA  0100               	movlb	0	; () banked
  8915  0051BC  B4D8               	btfsc	status,2,c
  8916  0051BE  D005               	goto	l8570
  8917                           
  8918                           ; BSR set to: 0
  8919  0051C0  0100               	movlb	0	; () banked
  8920  0051C2  6D75               	negf	___awmod@dividend& (0+255),b
  8921  0051C4  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8922  0051C6  B0D8               	btfsc	status,0,c
  8923  0051C8  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8924  0051CA                     l8570:
  8925                           
  8926                           ; BSR set to: 0
  8927  0051CA  C075  F075         	movff	___awmod@dividend,?___awmod
  8928  0051CE  C076  F076         	movff	___awmod@dividend+1,?___awmod+1
  8929  0051D2  0012               	return	
  8930  0051D4                     __end_of___awmod:
  8931                           	opt stack 0
  8932                           tblptru	equ	0xFF8
  8933                           tblptrh	equ	0xFF7
  8934                           tblptrl	equ	0xFF6
  8935                           tablat	equ	0xFF5
  8936                           prodh	equ	0xFF4
  8937                           prodl	equ	0xFF3
  8938                           intcon	equ	0xFF2
  8939                           postinc0	equ	0xFEE
  8940                           wreg	equ	0xFE8
  8941                           postdec1	equ	0xFE5
  8942                           fsr1l	equ	0xFE1
  8943                           indf2	equ	0xFDF
  8944                           postinc2	equ	0xFDE
  8945                           postdec2	equ	0xFDD
  8946                           fsr2h	equ	0xFDA
  8947                           fsr2l	equ	0xFD9
  8948                           status	equ	0xFD8
  8949                           
  8950 ;; *************** function ___awdiv *****************
  8951 ;; Defined at:
  8952 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8953 ;; Parameters:    Size  Location     Type
  8954 ;;  dividend        2   27[BANK0 ] int 
  8955 ;;  divisor         2   29[BANK0 ] int 
  8956 ;; Auto vars:     Size  Location     Type
  8957 ;;  quotient        2   33[BANK0 ] int 
  8958 ;;  sign            1   32[BANK0 ] unsigned char 
  8959 ;;  counter         1   31[BANK0 ] unsigned char 
  8960 ;; Return value:  Size  Location     Type
  8961 ;;                  2   27[BANK0 ] int 
  8962 ;; Registers used:
  8963 ;;		wreg, status,2, status,0
  8964 ;; Tracked objects:
  8965 ;;		On entry : 0/0
  8966 ;;		On exit  : 0/0
  8967 ;;		Unchanged: 0/0
  8968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8969 ;;      Params:         0       4       0       0       0       0       0
  8970 ;;      Locals:         0       4       0       0       0       0       0
  8971 ;;      Temps:          0       0       0       0       0       0       0
  8972 ;;      Totals:         0       8       0       0       0       0       0
  8973 ;;Total ram usage:        8 bytes
  8974 ;; Hardware stack levels used:    1
  8975 ;; Hardware stack levels required when called:    8
  8976 ;; This function calls:
  8977 ;;		Nothing
  8978 ;; This function is called by:
  8979 ;;		_fround
  8980 ;;		_scale
  8981 ;;		_printf
  8982 ;; This function uses a non-reentrant model
  8983 ;;
  8984                           
  8985                           	psect	text28
  8986  004E62                     __ptext28:
  8987                           	opt stack 0
  8988  004E62                     ___awdiv:
  8989                           	opt stack 18
  8990                           
  8991                           ; BSR set to: 0
  8992                           ;incstack = 0
  8993  004E62  0E00               	movlw	0
  8994  004E64  0100               	movlb	0	; () banked
  8995  004E66  6F80               	movwf	___awdiv@sign& (0+255),b
  8996                           
  8997                           ; BSR set to: 0
  8998  004E68  0100               	movlb	0	; () banked
  8999  004E6A  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9000  004E6C  D008               	goto	l8502
  9001                           
  9002                           ; BSR set to: 0
  9003  004E6E  0100               	movlb	0	; () banked
  9004  004E70  6D7D               	negf	___awdiv@divisor& (0+255),b
  9005  004E72  1F7E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  9006  004E74  B0D8               	btfsc	status,0,c
  9007  004E76  2B7E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  9008                           
  9009                           ; BSR set to: 0
  9010  004E78  0E01               	movlw	1
  9011  004E7A  0100               	movlb	0	; () banked
  9012  004E7C  6F80               	movwf	___awdiv@sign& (0+255),b
  9013  004E7E                     l8502:
  9014                           
  9015                           ; BSR set to: 0
  9016  004E7E  0100               	movlb	0	; () banked
  9017  004E80  AF7C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  9018  004E82  D008               	goto	l8508
  9019                           
  9020                           ; BSR set to: 0
  9021  004E84  0100               	movlb	0	; () banked
  9022  004E86  6D7B               	negf	___awdiv@dividend& (0+255),b
  9023  004E88  1F7C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  9024  004E8A  B0D8               	btfsc	status,0,c
  9025  004E8C  2B7C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  9026                           
  9027                           ; BSR set to: 0
  9028  004E8E  0E01               	movlw	1
  9029  004E90  0100               	movlb	0	; () banked
  9030  004E92  1B80               	xorwf	___awdiv@sign& (0+255),f,b
  9031  004E94                     l8508:
  9032                           
  9033                           ; BSR set to: 0
  9034  004E94  0E00               	movlw	0
  9035  004E96  0100               	movlb	0	; () banked
  9036  004E98  6F82               	movwf	(___awdiv@quotient+1)& (0+255),b
  9037  004E9A  0E00               	movlw	0
  9038  004E9C  6F81               	movwf	___awdiv@quotient& (0+255),b
  9039                           
  9040                           ; BSR set to: 0
  9041  004E9E  0100               	movlb	0	; () banked
  9042  004EA0  517D               	movf	___awdiv@divisor& (0+255),w,b
  9043  004EA2  0100               	movlb	0	; () banked
  9044  004EA4  117E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  9045  004EA6  B4D8               	btfsc	status,2,c
  9046  004EA8  D02C               	goto	l8530
  9047                           
  9048                           ; BSR set to: 0
  9049  004EAA  0E01               	movlw	1
  9050  004EAC  0100               	movlb	0	; () banked
  9051  004EAE  6F7F               	movwf	___awdiv@counter& (0+255),b
  9052  004EB0  D006               	goto	l8516
  9053  004EB2                     l8514:
  9054                           
  9055                           ; BSR set to: 0
  9056  004EB2  0100               	movlb	0	; () banked
  9057  004EB4  90D8               	bcf	status,0,c
  9058  004EB6  377D               	rlcf	___awdiv@divisor& (0+255),f,b
  9059  004EB8  377E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  9060  004EBA  0100               	movlb	0	; () banked
  9061  004EBC  2B7F               	incf	___awdiv@counter& (0+255),f,b
  9062  004EBE                     l8516:
  9063                           
  9064                           ; BSR set to: 0
  9065  004EBE  0100               	movlb	0	; () banked
  9066  004EC0  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  9067  004EC2  D7F7               	goto	l8514
  9068  004EC4                     l8518:
  9069                           
  9070                           ; BSR set to: 0
  9071  004EC4  0100               	movlb	0	; () banked
  9072  004EC6  90D8               	bcf	status,0,c
  9073  004EC8  3781               	rlcf	___awdiv@quotient& (0+255),f,b
  9074  004ECA  3782               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  9075                           
  9076                           ; BSR set to: 0
  9077  004ECC  0100               	movlb	0	; () banked
  9078  004ECE  517D               	movf	___awdiv@divisor& (0+255),w,b
  9079  004ED0  0100               	movlb	0	; () banked
  9080  004ED2  5D7B               	subwf	___awdiv@dividend& (0+255),w,b
  9081  004ED4  0100               	movlb	0	; () banked
  9082  004ED6  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9083  004ED8  0100               	movlb	0	; () banked
  9084  004EDA  597C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  9085  004EDC  A0D8               	btfss	status,0,c
  9086  004EDE  D00A               	goto	l8526
  9087                           
  9088                           ; BSR set to: 0
  9089  004EE0  0100               	movlb	0	; () banked
  9090  004EE2  517D               	movf	___awdiv@divisor& (0+255),w,b
  9091  004EE4  0100               	movlb	0	; () banked
  9092  004EE6  5F7B               	subwf	___awdiv@dividend& (0+255),f,b
  9093  004EE8  0100               	movlb	0	; () banked
  9094  004EEA  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  9095  004EEC  0100               	movlb	0	; () banked
  9096  004EEE  5B7C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  9097                           
  9098                           ; BSR set to: 0
  9099  004EF0  0100               	movlb	0	; () banked
  9100  004EF2  8181               	bsf	___awdiv@quotient& (0+255),0,b
  9101  004EF4                     l8526:
  9102                           
  9103                           ; BSR set to: 0
  9104  004EF4  0100               	movlb	0	; () banked
  9105  004EF6  90D8               	bcf	status,0,c
  9106  004EF8  337E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  9107  004EFA  337D               	rrcf	___awdiv@divisor& (0+255),f,b
  9108                           
  9109                           ; BSR set to: 0
  9110  004EFC  0100               	movlb	0	; () banked
  9111  004EFE  2F7F               	decfsz	___awdiv@counter& (0+255),f,b
  9112  004F00  D7E1               	goto	l8518
  9113  004F02                     l8530:
  9114                           
  9115                           ; BSR set to: 0
  9116  004F02  0100               	movlb	0	; () banked
  9117  004F04  5180               	movf	___awdiv@sign& (0+255),w,b
  9118  004F06  0100               	movlb	0	; () banked
  9119  004F08  B4D8               	btfsc	status,2,c
  9120  004F0A  D005               	goto	l8534
  9121                           
  9122                           ; BSR set to: 0
  9123  004F0C  0100               	movlb	0	; () banked
  9124  004F0E  6D81               	negf	___awdiv@quotient& (0+255),b
  9125  004F10  1F82               	comf	(___awdiv@quotient+1)& (0+255),f,b
  9126  004F12  B0D8               	btfsc	status,0,c
  9127  004F14  2B82               	incf	(___awdiv@quotient+1)& (0+255),f,b
  9128  004F16                     l8534:
  9129                           
  9130                           ; BSR set to: 0
  9131  004F16  C081  F07B         	movff	___awdiv@quotient,?___awdiv
  9132  004F1A  C082  F07C         	movff	___awdiv@quotient+1,?___awdiv+1
  9133  004F1E  0012               	return	
  9134  004F20                     __end_of___awdiv:
  9135                           	opt stack 0
  9136                           tblptru	equ	0xFF8
  9137                           tblptrh	equ	0xFF7
  9138                           tblptrl	equ	0xFF6
  9139                           tablat	equ	0xFF5
  9140                           prodh	equ	0xFF4
  9141                           prodl	equ	0xFF3
  9142                           intcon	equ	0xFF2
  9143                           postinc0	equ	0xFEE
  9144                           wreg	equ	0xFE8
  9145                           postdec1	equ	0xFE5
  9146                           fsr1l	equ	0xFE1
  9147                           indf2	equ	0xFDF
  9148                           postinc2	equ	0xFDE
  9149                           postdec2	equ	0xFDD
  9150                           fsr2h	equ	0xFDA
  9151                           fsr2l	equ	0xFD9
  9152                           status	equ	0xFD8
  9153                           
  9154 ;; *************** function __tdiv_to_l_ *****************
  9155 ;; Defined at:
  9156 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  9157 ;; Parameters:    Size  Location     Type
  9158 ;;  f1              4   21[BANK0 ] float 
  9159 ;;  f2              4   25[BANK0 ] float 
  9160 ;; Auto vars:     Size  Location     Type
  9161 ;;  quot            4   32[BANK0 ] unsigned long 
  9162 ;;  exp1            1   37[BANK0 ] unsigned char 
  9163 ;;  cntr            1   36[BANK0 ] unsigned char 
  9164 ;; Return value:  Size  Location     Type
  9165 ;;                  4   21[BANK0 ] unsigned long 
  9166 ;; Registers used:
  9167 ;;		wreg, status,2, status,0
  9168 ;; Tracked objects:
  9169 ;;		On entry : 0/0
  9170 ;;		On exit  : 0/0
  9171 ;;		Unchanged: 0/0
  9172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9173 ;;      Params:         0       8       0       0       0       0       0
  9174 ;;      Locals:         0       6       0       0       0       0       0
  9175 ;;      Temps:          0       3       0       0       0       0       0
  9176 ;;      Totals:         0      17       0       0       0       0       0
  9177 ;;Total ram usage:       17 bytes
  9178 ;; Hardware stack levels used:    1
  9179 ;; Hardware stack levels required when called:    8
  9180 ;; This function calls:
  9181 ;;		Nothing
  9182 ;; This function is called by:
  9183 ;;		_printf
  9184 ;; This function uses a non-reentrant model
  9185 ;;
  9186                           
  9187                           	psect	text29
  9188  003BD2                     __ptext29:
  9189                           	opt stack 0
  9190  003BD2                     __tdiv_to_l_:
  9191                           	opt stack 19
  9192                           
  9193                           ; BSR set to: 0
  9194                           ;incstack = 0
  9195  003BD2  C077  F07D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  9196  003BD6  0100               	movlb	0	; () banked
  9197  003BD8  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9198  003BDA  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9199  003BDC  0100               	movlb	0	; () banked
  9200  003BDE  3576               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9201  003BE0  0100               	movlb	0	; () banked
  9202  003BE2  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9203  003BE4  E301               	bnc	u10791
  9204  003BE6  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9205  003BE8                     u10791:
  9206  003BE8  0100               	movlb	0	; () banked
  9207  003BEA  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  9208  003BEC  0100               	movlb	0	; () banked
  9209  003BEE  6F85               	movwf	__tdiv_to_l_@exp1& (0+255),b
  9210  003BF0  0100               	movlb	0	; () banked
  9211  003BF2  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9212  003BF4  A4D8               	btfss	status,2,c
  9213  003BF6  D00A               	goto	l8678
  9214                           
  9215                           ; BSR set to: 0
  9216  003BF8  0E00               	movlw	0
  9217  003BFA  0100               	movlb	0	; () banked
  9218  003BFC  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  9219  003BFE  0E00               	movlw	0
  9220  003C00  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9221  003C02  0E00               	movlw	0
  9222  003C04  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9223  003C06  0E00               	movlw	0
  9224  003C08  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227  003C0A  0012               	return	
  9228  003C0C                     l8678:
  9229                           
  9230                           ; BSR set to: 0
  9231  003C0C  C07B  F07D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  9232  003C10  0100               	movlb	0	; () banked
  9233  003C12  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  9234  003C14  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  9235  003C16  0100               	movlb	0	; () banked
  9236  003C18  357A               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9237  003C1A  0100               	movlb	0	; () banked
  9238  003C1C  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  9239  003C1E  E301               	bnc	u10811
  9240  003C20  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  9241  003C22                     u10811:
  9242  003C22  0100               	movlb	0	; () banked
  9243  003C24  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  9244  003C26  0100               	movlb	0	; () banked
  9245  003C28  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9246  003C2A  0100               	movlb	0	; () banked
  9247  003C2C  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9248  003C2E  A4D8               	btfss	status,2,c
  9249  003C30  D00A               	goto	l8684
  9250                           
  9251                           ; BSR set to: 0
  9252  003C32  0E00               	movlw	0
  9253  003C34  0100               	movlb	0	; () banked
  9254  003C36  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  9255  003C38  0E00               	movlw	0
  9256  003C3A  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9257  003C3C  0E00               	movlw	0
  9258  003C3E  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9259  003C40  0E00               	movlw	0
  9260  003C42  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9261                           
  9262                           ; BSR set to: 0
  9263  003C44  0012               	return	
  9264  003C46                     l8684:
  9265                           
  9266                           ; BSR set to: 0
  9267  003C46  0100               	movlb	0	; () banked
  9268  003C48  8F76               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  9269                           
  9270                           ; BSR set to: 0
  9271  003C4A  0EFF               	movlw	255
  9272  003C4C  0100               	movlb	0	; () banked
  9273  003C4E  1775               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  9274  003C50  0EFF               	movlw	255
  9275  003C52  0100               	movlb	0	; () banked
  9276  003C54  1776               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9277  003C56  0E00               	movlw	0
  9278  003C58  0100               	movlb	0	; () banked
  9279  003C5A  1777               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9280  003C5C  0100               	movlb	0	; () banked
  9281  003C5E  8F7A               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  9282                           
  9283                           ; BSR set to: 0
  9284  003C60  0EFF               	movlw	255
  9285  003C62  0100               	movlb	0	; () banked
  9286  003C64  1779               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  9287  003C66  0EFF               	movlw	255
  9288  003C68  0100               	movlb	0	; () banked
  9289  003C6A  177A               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  9290  003C6C  0E00               	movlw	0
  9291  003C6E  0100               	movlb	0	; () banked
  9292  003C70  177B               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  9293                           
  9294                           ; BSR set to: 0
  9295  003C72  0E00               	movlw	0
  9296  003C74  0100               	movlb	0	; () banked
  9297  003C76  6F80               	movwf	__tdiv_to_l_@quot& (0+255),b
  9298  003C78  0E00               	movlw	0
  9299  003C7A  6F81               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  9300  003C7C  0E00               	movlw	0
  9301  003C7E  6F82               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  9302  003C80  0E00               	movlw	0
  9303  003C82  6F83               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  9304                           
  9305                           ; BSR set to: 0
  9306  003C84  0E7F               	movlw	127
  9307  003C86  0100               	movlb	0	; () banked
  9308  003C88  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9309                           
  9310                           ; BSR set to: 0
  9311  003C8A  0100               	movlb	0	; () banked
  9312  003C8C  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  9313  003C8E  0F98               	addlw	152
  9314  003C90  0100               	movlb	0	; () banked
  9315  003C92  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  9316                           
  9317                           ; BSR set to: 0
  9318  003C94  0E18               	movlw	24
  9319  003C96  0100               	movlb	0	; () banked
  9320  003C98  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  9321  003C9A                     l1250:
  9322                           
  9323                           ; BSR set to: 0
  9324  003C9A  0100               	movlb	0	; () banked
  9325  003C9C  90D8               	bcf	status,0,c
  9326  003C9E  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9327  003CA0  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9328  003CA2  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9329  003CA4  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9330                           
  9331                           ; BSR set to: 0
  9332  003CA6  0100               	movlb	0	; () banked
  9333  003CA8  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9334  003CAA  0100               	movlb	0	; () banked
  9335  003CAC  5D75               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  9336  003CAE  0100               	movlb	0	; () banked
  9337  003CB0  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9338  003CB2  0100               	movlb	0	; () banked
  9339  003CB4  5976               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  9340  003CB6  0100               	movlb	0	; () banked
  9341  003CB8  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9342  003CBA  0100               	movlb	0	; () banked
  9343  003CBC  5977               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  9344  003CBE  A0D8               	btfss	status,0,c
  9345  003CC0  D00E               	goto	l1251
  9346                           
  9347                           ; BSR set to: 0
  9348  003CC2  0100               	movlb	0	; () banked
  9349  003CC4  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  9350  003CC6  0100               	movlb	0	; () banked
  9351  003CC8  5F75               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  9352  003CCA  0100               	movlb	0	; () banked
  9353  003CCC  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  9354  003CCE  0100               	movlb	0	; () banked
  9355  003CD0  5B76               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9356  003CD2  0100               	movlb	0	; () banked
  9357  003CD4  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  9358  003CD6  0100               	movlb	0	; () banked
  9359  003CD8  5B77               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9360                           
  9361                           ; BSR set to: 0
  9362  003CDA  0100               	movlb	0	; () banked
  9363  003CDC  8180               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  9364  003CDE                     l1251:
  9365                           
  9366                           ; BSR set to: 0
  9367  003CDE  0100               	movlb	0	; () banked
  9368  003CE0  90D8               	bcf	status,0,c
  9369  003CE2  3775               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  9370  003CE4  3776               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  9371  003CE6  3777               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  9372                           
  9373                           ; BSR set to: 0
  9374  003CE8  0100               	movlb	0	; () banked
  9375  003CEA  2F84               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  9376  003CEC  D7D6               	goto	l1250
  9377                           
  9378                           ; BSR set to: 0
  9379                           
  9380                           ; BSR set to: 0
  9381  003CEE  0100               	movlb	0	; () banked
  9382  003CF0  AF85               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  9383  003CF2  D01A               	goto	l8718
  9384                           
  9385                           ; BSR set to: 0
  9386  003CF4  0100               	movlb	0	; () banked
  9387  003CF6  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9388  003CF8  0A80               	xorlw	128
  9389  003CFA  0F97               	addlw	151
  9390  003CFC  B0D8               	btfsc	status,0,c
  9391  003CFE  D00A               	goto	l8714
  9392                           
  9393                           ; BSR set to: 0
  9394  003D00  0E00               	movlw	0
  9395  003D02  0100               	movlb	0	; () banked
  9396  003D04  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  9397  003D06  0E00               	movlw	0
  9398  003D08  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9399  003D0A  0E00               	movlw	0
  9400  003D0C  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9401  003D0E  0E00               	movlw	0
  9402  003D10  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9403                           
  9404                           ; BSR set to: 0
  9405  003D12  0012               	return	
  9406  003D14                     l8714:
  9407                           
  9408                           ; BSR set to: 0
  9409  003D14  0100               	movlb	0	; () banked
  9410  003D16  90D8               	bcf	status,0,c
  9411  003D18  3383               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9412  003D1A  3382               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9413  003D1C  3381               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9414  003D1E  3380               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  9415                           
  9416                           ; BSR set to: 0
  9417  003D20  0100               	movlb	0	; () banked
  9418  003D22  3F85               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  9419  003D24  D7F7               	goto	l8714
  9420                           
  9421                           ; BSR set to: 0
  9422  003D26  D01B               	goto	l1257
  9423  003D28                     l8718:
  9424                           
  9425                           ; BSR set to: 0
  9426  003D28  0E17               	movlw	23
  9427  003D2A  0100               	movlb	0	; () banked
  9428  003D2C  6585               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9429  003D2E  D012               	goto	l8726
  9430                           
  9431                           ; BSR set to: 0
  9432  003D30  0E00               	movlw	0
  9433  003D32  0100               	movlb	0	; () banked
  9434  003D34  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  9435  003D36  0E00               	movlw	0
  9436  003D38  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9437  003D3A  0E00               	movlw	0
  9438  003D3C  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9439  003D3E  0E00               	movlw	0
  9440  003D40  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9441                           
  9442                           ; BSR set to: 0
  9443  003D42  0012               	return	
  9444  003D44                     l8724:
  9445                           
  9446                           ; BSR set to: 0
  9447  003D44  0100               	movlb	0	; () banked
  9448  003D46  90D8               	bcf	status,0,c
  9449  003D48  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9450  003D4A  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9451  003D4C  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9452  003D4E  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9453  003D50  0100               	movlb	0	; () banked
  9454  003D52  0785               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9455  003D54                     l8726:
  9456                           
  9457                           ; BSR set to: 0
  9458  003D54  0100               	movlb	0	; () banked
  9459  003D56  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9460  003D58  0100               	movlb	0	; () banked
  9461  003D5A  A4D8               	btfss	status,2,c
  9462  003D5C  D7F3               	goto	l8724
  9463  003D5E                     l1257:
  9464                           
  9465                           ; BSR set to: 0
  9466  003D5E  C080  F075         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9467  003D62  C081  F076         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9468  003D66  C082  F077         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9469  003D6A  C083  F078         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9470                           
  9471                           ; BSR set to: 0
  9472  003D6E  0012               	return		;funcret
  9473  003D70                     __end_of__tdiv_to_l_:
  9474                           	opt stack 0
  9475                           tblptru	equ	0xFF8
  9476                           tblptrh	equ	0xFF7
  9477                           tblptrl	equ	0xFF6
  9478                           tablat	equ	0xFF5
  9479                           prodh	equ	0xFF4
  9480                           prodl	equ	0xFF3
  9481                           intcon	equ	0xFF2
  9482                           postinc0	equ	0xFEE
  9483                           wreg	equ	0xFE8
  9484                           postdec1	equ	0xFE5
  9485                           fsr1l	equ	0xFE1
  9486                           indf2	equ	0xFDF
  9487                           postinc2	equ	0xFDE
  9488                           postdec2	equ	0xFDD
  9489                           fsr2h	equ	0xFDA
  9490                           fsr2l	equ	0xFD9
  9491                           status	equ	0xFD8
  9492                           
  9493 ;; *************** function __div_to_l_ *****************
  9494 ;; Defined at:
  9495 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  9496 ;; Parameters:    Size  Location     Type
  9497 ;;  f1              4   21[BANK0 ] unsigned long 
  9498 ;;  f2              4   25[BANK0 ] unsigned long 
  9499 ;; Auto vars:     Size  Location     Type
  9500 ;;  quot            4   29[BANK0 ] unsigned long 
  9501 ;;  exp1            1   34[BANK0 ] unsigned char 
  9502 ;;  cntr            1   33[BANK0 ] unsigned char 
  9503 ;; Return value:  Size  Location     Type
  9504 ;;                  4   21[BANK0 ] unsigned long 
  9505 ;; Registers used:
  9506 ;;		wreg, status,2, status,0
  9507 ;; Tracked objects:
  9508 ;;		On entry : 0/0
  9509 ;;		On exit  : 0/0
  9510 ;;		Unchanged: 0/0
  9511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9512 ;;      Params:         0       8       0       0       0       0       0
  9513 ;;      Locals:         0       6       0       0       0       0       0
  9514 ;;      Temps:          0       0       0       0       0       0       0
  9515 ;;      Totals:         0      14       0       0       0       0       0
  9516 ;;Total ram usage:       14 bytes
  9517 ;; Hardware stack levels used:    1
  9518 ;; Hardware stack levels required when called:    8
  9519 ;; This function calls:
  9520 ;;		Nothing
  9521 ;; This function is called by:
  9522 ;;		_printf
  9523 ;; This function uses a non-reentrant model
  9524 ;;
  9525                           
  9526                           	psect	text30
  9527  003F00                     __ptext30:
  9528                           	opt stack 0
  9529  003F00                     __div_to_l_:
  9530                           	opt stack 19
  9531                           
  9532                           ; BSR set to: 0
  9533                           ;incstack = 0
  9534  003F00  0100               	movlb	0	; () banked
  9535  003F02  3577               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9536  003F04  3578               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9537  003F06  0100               	movlb	0	; () banked
  9538  003F08  6F82               	movwf	__div_to_l_@exp1& (0+255),b
  9539  003F0A  0100               	movlb	0	; () banked
  9540  003F0C  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9541  003F0E  A4D8               	btfss	status,2,c
  9542  003F10  D00A               	goto	l8734
  9543                           
  9544                           ; BSR set to: 0
  9545  003F12  0E00               	movlw	0
  9546  003F14  0100               	movlb	0	; () banked
  9547  003F16  6F75               	movwf	?__div_to_l_& (0+255),b
  9548  003F18  0E00               	movlw	0
  9549  003F1A  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9550  003F1C  0E00               	movlw	0
  9551  003F1E  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9552  003F20  0E00               	movlw	0
  9553  003F22  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9554                           
  9555                           ; BSR set to: 0
  9556  003F24  0012               	return	
  9557  003F26                     l8734:
  9558                           
  9559                           ; BSR set to: 0
  9560  003F26  0100               	movlb	0	; () banked
  9561  003F28  357B               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9562  003F2A  357C               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9563  003F2C  0100               	movlb	0	; () banked
  9564  003F2E  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9565  003F30  0100               	movlb	0	; () banked
  9566  003F32  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9567  003F34  A4D8               	btfss	status,2,c
  9568  003F36  D00A               	goto	l8740
  9569                           
  9570                           ; BSR set to: 0
  9571  003F38  0E00               	movlw	0
  9572  003F3A  0100               	movlb	0	; () banked
  9573  003F3C  6F75               	movwf	?__div_to_l_& (0+255),b
  9574  003F3E  0E00               	movlw	0
  9575  003F40  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9576  003F42  0E00               	movlw	0
  9577  003F44  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9578  003F46  0E00               	movlw	0
  9579  003F48  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9580                           
  9581                           ; BSR set to: 0
  9582  003F4A  0012               	return	
  9583  003F4C                     l8740:
  9584                           
  9585                           ; BSR set to: 0
  9586  003F4C  0100               	movlb	0	; () banked
  9587  003F4E  8F77               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9588                           
  9589                           ; BSR set to: 0
  9590  003F50  0EFF               	movlw	255
  9591  003F52  0100               	movlb	0	; () banked
  9592  003F54  1775               	andwf	__div_to_l_@f1& (0+255),f,b
  9593  003F56  0EFF               	movlw	255
  9594  003F58  1776               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9595  003F5A  0EFF               	movlw	255
  9596  003F5C  1777               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9597  003F5E  0E00               	movlw	0
  9598  003F60  1778               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9599                           
  9600                           ; BSR set to: 0
  9601  003F62  0100               	movlb	0	; () banked
  9602  003F64  8F7B               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9603  003F66  0EFF               	movlw	255
  9604  003F68  0100               	movlb	0	; () banked
  9605  003F6A  1779               	andwf	__div_to_l_@f2& (0+255),f,b
  9606  003F6C  0EFF               	movlw	255
  9607  003F6E  177A               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9608  003F70  0EFF               	movlw	255
  9609  003F72  177B               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9610  003F74  0E00               	movlw	0
  9611  003F76  177C               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9612                           
  9613                           ; BSR set to: 0
  9614  003F78  0E00               	movlw	0
  9615  003F7A  0100               	movlb	0	; () banked
  9616  003F7C  6F7D               	movwf	__div_to_l_@quot& (0+255),b
  9617  003F7E  0E00               	movlw	0
  9618  003F80  6F7E               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9619  003F82  0E00               	movlw	0
  9620  003F84  6F7F               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9621  003F86  0E00               	movlw	0
  9622  003F88  6F80               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9623                           
  9624                           ; BSR set to: 0
  9625  003F8A  0E7F               	movlw	127
  9626  003F8C  0100               	movlb	0	; () banked
  9627  003F8E  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9628                           
  9629                           ; BSR set to: 0
  9630  003F90  0100               	movlb	0	; () banked
  9631  003F92  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9632  003F94  0FA0               	addlw	160
  9633  003F96  0100               	movlb	0	; () banked
  9634  003F98  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9635                           
  9636                           ; BSR set to: 0
  9637  003F9A  0E20               	movlw	32
  9638  003F9C  0100               	movlb	0	; () banked
  9639  003F9E  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9640  003FA0                     l8754:
  9641                           
  9642                           ; BSR set to: 0
  9643  003FA0  0100               	movlb	0	; () banked
  9644  003FA2  90D8               	bcf	status,0,c
  9645  003FA4  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9646  003FA6  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9647  003FA8  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9648  003FAA  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9649                           
  9650                           ; BSR set to: 0
  9651  003FAC  0100               	movlb	0	; () banked
  9652  003FAE  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9653  003FB0  0100               	movlb	0	; () banked
  9654  003FB2  5D75               	subwf	__div_to_l_@f1& (0+255),w,b
  9655  003FB4  0100               	movlb	0	; () banked
  9656  003FB6  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9657  003FB8  0100               	movlb	0	; () banked
  9658  003FBA  5976               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9659  003FBC  0100               	movlb	0	; () banked
  9660  003FBE  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9661  003FC0  0100               	movlb	0	; () banked
  9662  003FC2  5977               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9663  003FC4  0100               	movlb	0	; () banked
  9664  003FC6  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9665  003FC8  0100               	movlb	0	; () banked
  9666  003FCA  5978               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9667  003FCC  A0D8               	btfss	status,0,c
  9668  003FCE  D012               	goto	l8762
  9669                           
  9670                           ; BSR set to: 0
  9671  003FD0  0100               	movlb	0	; () banked
  9672  003FD2  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9673  003FD4  0100               	movlb	0	; () banked
  9674  003FD6  5F75               	subwf	__div_to_l_@f1& (0+255),f,b
  9675  003FD8  0100               	movlb	0	; () banked
  9676  003FDA  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9677  003FDC  0100               	movlb	0	; () banked
  9678  003FDE  5B76               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9679  003FE0  0100               	movlb	0	; () banked
  9680  003FE2  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9681  003FE4  0100               	movlb	0	; () banked
  9682  003FE6  5B77               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9683  003FE8  0100               	movlb	0	; () banked
  9684  003FEA  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9685  003FEC  0100               	movlb	0	; () banked
  9686  003FEE  5B78               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9687                           
  9688                           ; BSR set to: 0
  9689  003FF0  0100               	movlb	0	; () banked
  9690  003FF2  817D               	bsf	__div_to_l_@quot& (0+255),0,b
  9691  003FF4                     l8762:
  9692                           
  9693                           ; BSR set to: 0
  9694  003FF4  0100               	movlb	0	; () banked
  9695  003FF6  90D8               	bcf	status,0,c
  9696  003FF8  3775               	rlcf	__div_to_l_@f1& (0+255),f,b
  9697  003FFA  3776               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9698  003FFC  3777               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9699  003FFE  3778               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9700                           
  9701                           ; BSR set to: 0
  9702  004000  0100               	movlb	0	; () banked
  9703  004002  2F81               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9704  004004  D7CD               	goto	l8754
  9705                           
  9706                           ; BSR set to: 0
  9707                           
  9708                           ; BSR set to: 0
  9709  004006  0100               	movlb	0	; () banked
  9710  004008  AF82               	btfss	__div_to_l_@exp1& (0+255),7,b
  9711  00400A  D01A               	goto	l8778
  9712                           
  9713                           ; BSR set to: 0
  9714  00400C  0100               	movlb	0	; () banked
  9715  00400E  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9716  004010  0A80               	xorlw	128
  9717  004012  0F9F               	addlw	159
  9718  004014  B0D8               	btfsc	status,0,c
  9719  004016  D00A               	goto	l8774
  9720                           
  9721                           ; BSR set to: 0
  9722  004018  0E00               	movlw	0
  9723  00401A  0100               	movlb	0	; () banked
  9724  00401C  6F75               	movwf	?__div_to_l_& (0+255),b
  9725  00401E  0E00               	movlw	0
  9726  004020  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9727  004022  0E00               	movlw	0
  9728  004024  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9729  004026  0E00               	movlw	0
  9730  004028  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9731                           
  9732                           ; BSR set to: 0
  9733  00402A  0012               	return	
  9734  00402C                     l8774:
  9735                           
  9736                           ; BSR set to: 0
  9737  00402C  0100               	movlb	0	; () banked
  9738  00402E  90D8               	bcf	status,0,c
  9739  004030  3380               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9740  004032  337F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9741  004034  337E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9742  004036  337D               	rrcf	__div_to_l_@quot& (0+255),f,b
  9743                           
  9744                           ; BSR set to: 0
  9745  004038  0100               	movlb	0	; () banked
  9746  00403A  3F82               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9747  00403C  D7F7               	goto	l8774
  9748                           
  9749                           ; BSR set to: 0
  9750  00403E  D01B               	goto	l1153
  9751  004040                     l8778:
  9752                           
  9753                           ; BSR set to: 0
  9754  004040  0E1F               	movlw	31
  9755  004042  0100               	movlb	0	; () banked
  9756  004044  6582               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9757  004046  D012               	goto	l8786
  9758                           
  9759                           ; BSR set to: 0
  9760  004048  0E00               	movlw	0
  9761  00404A  0100               	movlb	0	; () banked
  9762  00404C  6F75               	movwf	?__div_to_l_& (0+255),b
  9763  00404E  0E00               	movlw	0
  9764  004050  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9765  004052  0E00               	movlw	0
  9766  004054  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9767  004056  0E00               	movlw	0
  9768  004058  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9769                           
  9770                           ; BSR set to: 0
  9771  00405A  0012               	return	
  9772  00405C                     l8784:
  9773                           
  9774                           ; BSR set to: 0
  9775  00405C  0100               	movlb	0	; () banked
  9776  00405E  90D8               	bcf	status,0,c
  9777  004060  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9778  004062  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9779  004064  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9780  004066  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9781  004068  0100               	movlb	0	; () banked
  9782  00406A  0782               	decf	__div_to_l_@exp1& (0+255),f,b
  9783  00406C                     l8786:
  9784                           
  9785                           ; BSR set to: 0
  9786  00406C  0100               	movlb	0	; () banked
  9787  00406E  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9788  004070  0100               	movlb	0	; () banked
  9789  004072  A4D8               	btfss	status,2,c
  9790  004074  D7F3               	goto	l8784
  9791  004076                     l1153:
  9792                           
  9793                           ; BSR set to: 0
  9794  004076  C07D  F075         	movff	__div_to_l_@quot,?__div_to_l_
  9795  00407A  C07E  F076         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9796  00407E  C07F  F077         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9797  004082  C080  F078         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9798                           
  9799                           ; BSR set to: 0
  9800  004086  0012               	return		;funcret
  9801  004088                     __end_of__div_to_l_:
  9802                           	opt stack 0
  9803                           tblptru	equ	0xFF8
  9804                           tblptrh	equ	0xFF7
  9805                           tblptrl	equ	0xFF6
  9806                           tablat	equ	0xFF5
  9807                           prodh	equ	0xFF4
  9808                           prodl	equ	0xFF3
  9809                           intcon	equ	0xFF2
  9810                           postinc0	equ	0xFEE
  9811                           wreg	equ	0xFE8
  9812                           postdec1	equ	0xFE5
  9813                           fsr1l	equ	0xFE1
  9814                           indf2	equ	0xFDF
  9815                           postinc2	equ	0xFDE
  9816                           postdec2	equ	0xFDD
  9817                           fsr2h	equ	0xFDA
  9818                           fsr2l	equ	0xFD9
  9819                           status	equ	0xFD8
  9820                           
  9821 ;; *************** function ___wmul *****************
  9822 ;; Defined at:
  9823 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9824 ;; Parameters:    Size  Location     Type
  9825 ;;  multiplier      2   21[BANK0 ] unsigned int 
  9826 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  9827 ;; Auto vars:     Size  Location     Type
  9828 ;;  product         2   25[BANK0 ] unsigned int 
  9829 ;; Return value:  Size  Location     Type
  9830 ;;                  2   21[BANK0 ] unsigned int 
  9831 ;; Registers used:
  9832 ;;		wreg, status,2, status,0, prodl, prodh
  9833 ;; Tracked objects:
  9834 ;;		On entry : 0/0
  9835 ;;		On exit  : 0/0
  9836 ;;		Unchanged: 0/0
  9837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9838 ;;      Params:         0       4       0       0       0       0       0
  9839 ;;      Locals:         0       2       0       0       0       0       0
  9840 ;;      Temps:          0       0       0       0       0       0       0
  9841 ;;      Totals:         0       6       0       0       0       0       0
  9842 ;;Total ram usage:        6 bytes
  9843 ;; Hardware stack levels used:    1
  9844 ;; Hardware stack levels required when called:    8
  9845 ;; This function calls:
  9846 ;;		Nothing
  9847 ;; This function is called by:
  9848 ;;		_printf
  9849 ;; This function uses a non-reentrant model
  9850 ;;
  9851                           
  9852                           	psect	text31
  9853  005BAE                     __ptext31:
  9854                           	opt stack 0
  9855  005BAE                     ___wmul:
  9856                           	opt stack 19
  9857                           
  9858                           ; BSR set to: 0
  9859                           ;incstack = 0
  9860  005BAE  0100               	movlb	0	; () banked
  9861  005BB0  5175               	movf	___wmul@multiplier& (0+255),w,b
  9862  005BB2  0100               	movlb	0	; () banked
  9863  005BB4  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9864  005BB6  CFF3 F079          	movff	prodl,___wmul@product
  9865  005BBA  CFF4 F07A          	movff	prodh,___wmul@product+1
  9866  005BBE  0100               	movlb	0	; () banked
  9867  005BC0  5175               	movf	___wmul@multiplier& (0+255),w,b
  9868  005BC2  0100               	movlb	0	; () banked
  9869  005BC4  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9870  005BC6  50F3               	movf	prodl,w,c
  9871  005BC8  0100               	movlb	0	; () banked
  9872  005BCA  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9873  005BCC  0100               	movlb	0	; () banked
  9874  005BCE  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9875  005BD0  0100               	movlb	0	; () banked
  9876  005BD2  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9877  005BD4  50F3               	movf	prodl,w,c
  9878  005BD6  0100               	movlb	0	; () banked
  9879  005BD8  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9880                           
  9881                           ; BSR set to: 0
  9882  005BDA  C079  F075         	movff	___wmul@product,?___wmul
  9883  005BDE  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  9884  005BE2  0012               	return	
  9885  005BE4                     __end_of___wmul:
  9886                           	opt stack 0
  9887                           tblptru	equ	0xFF8
  9888                           tblptrh	equ	0xFF7
  9889                           tblptrl	equ	0xFF6
  9890                           tablat	equ	0xFF5
  9891                           prodh	equ	0xFF4
  9892                           prodl	equ	0xFF3
  9893                           intcon	equ	0xFF2
  9894                           postinc0	equ	0xFEE
  9895                           wreg	equ	0xFE8
  9896                           postdec1	equ	0xFE5
  9897                           fsr1l	equ	0xFE1
  9898                           indf2	equ	0xFDF
  9899                           postinc2	equ	0xFDE
  9900                           postdec2	equ	0xFDD
  9901                           fsr2h	equ	0xFDA
  9902                           fsr2l	equ	0xFD9
  9903                           status	equ	0xFD8
  9904                           
  9905 ;; *************** function ___llmod *****************
  9906 ;; Defined at:
  9907 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  9908 ;; Parameters:    Size  Location     Type
  9909 ;;  dividend        4   34[BANK0 ] unsigned long 
  9910 ;;  divisor         4   38[BANK0 ] unsigned long 
  9911 ;; Auto vars:     Size  Location     Type
  9912 ;;  counter         1   42[BANK0 ] unsigned char 
  9913 ;; Return value:  Size  Location     Type
  9914 ;;                  4   34[BANK0 ] unsigned long 
  9915 ;; Registers used:
  9916 ;;		wreg, status,2, status,0
  9917 ;; Tracked objects:
  9918 ;;		On entry : 0/0
  9919 ;;		On exit  : 0/0
  9920 ;;		Unchanged: 0/0
  9921 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9922 ;;      Params:         0       8       0       0       0       0       0
  9923 ;;      Locals:         0       1       0       0       0       0       0
  9924 ;;      Temps:          0       0       0       0       0       0       0
  9925 ;;      Totals:         0       9       0       0       0       0       0
  9926 ;;Total ram usage:        9 bytes
  9927 ;; Hardware stack levels used:    1
  9928 ;; Hardware stack levels required when called:    8
  9929 ;; This function calls:
  9930 ;;		Nothing
  9931 ;; This function is called by:
  9932 ;;		_printf
  9933 ;; This function uses a non-reentrant model
  9934 ;;
  9935                           
  9936                           	psect	text32
  9937  005272                     __ptext32:
  9938                           	opt stack 0
  9939  005272                     ___llmod:
  9940                           	opt stack 19
  9941                           
  9942                           ; BSR set to: 0
  9943                           ;incstack = 0
  9944  005272  0100               	movlb	0	; () banked
  9945  005274  5186               	movf	___llmod@divisor& (0+255),w,b
  9946  005276  0100               	movlb	0	; () banked
  9947  005278  1187               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9948  00527A  0100               	movlb	0	; () banked
  9949  00527C  1188               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9950  00527E  0100               	movlb	0	; () banked
  9951  005280  1189               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9952  005282  B4D8               	btfsc	status,2,c
  9953  005284  D03A               	goto	l1342
  9954                           
  9955                           ; BSR set to: 0
  9956  005286  0E01               	movlw	1
  9957  005288  0100               	movlb	0	; () banked
  9958  00528A  6F8A               	movwf	___llmod@counter& (0+255),b
  9959  00528C  D008               	goto	l8902
  9960  00528E                     l8900:
  9961                           
  9962                           ; BSR set to: 0
  9963  00528E  0100               	movlb	0	; () banked
  9964  005290  90D8               	bcf	status,0,c
  9965  005292  3786               	rlcf	___llmod@divisor& (0+255),f,b
  9966  005294  3787               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9967  005296  3788               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9968  005298  3789               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9969  00529A  0100               	movlb	0	; () banked
  9970  00529C  2B8A               	incf	___llmod@counter& (0+255),f,b
  9971  00529E                     l8902:
  9972                           
  9973                           ; BSR set to: 0
  9974  00529E  0100               	movlb	0	; () banked
  9975  0052A0  AF89               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9976  0052A2  D7F5               	goto	l8900
  9977  0052A4                     l8904:
  9978                           
  9979                           ; BSR set to: 0
  9980  0052A4  0100               	movlb	0	; () banked
  9981  0052A6  5186               	movf	___llmod@divisor& (0+255),w,b
  9982  0052A8  0100               	movlb	0	; () banked
  9983  0052AA  5D82               	subwf	___llmod@dividend& (0+255),w,b
  9984  0052AC  0100               	movlb	0	; () banked
  9985  0052AE  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
  9986  0052B0  0100               	movlb	0	; () banked
  9987  0052B2  5983               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9988  0052B4  0100               	movlb	0	; () banked
  9989  0052B6  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
  9990  0052B8  0100               	movlb	0	; () banked
  9991  0052BA  5984               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9992  0052BC  0100               	movlb	0	; () banked
  9993  0052BE  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
  9994  0052C0  0100               	movlb	0	; () banked
  9995  0052C2  5985               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9996  0052C4  A0D8               	btfss	status,0,c
  9997  0052C6  D010               	goto	l8908
  9998                           
  9999                           ; BSR set to: 0
 10000  0052C8  0100               	movlb	0	; () banked
 10001  0052CA  5186               	movf	___llmod@divisor& (0+255),w,b
 10002  0052CC  0100               	movlb	0	; () banked
 10003  0052CE  5F82               	subwf	___llmod@dividend& (0+255),f,b
 10004  0052D0  0100               	movlb	0	; () banked
 10005  0052D2  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
 10006  0052D4  0100               	movlb	0	; () banked
 10007  0052D6  5B83               	subwfb	(___llmod@dividend+1)& (0+255),f,b
 10008  0052D8  0100               	movlb	0	; () banked
 10009  0052DA  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
 10010  0052DC  0100               	movlb	0	; () banked
 10011  0052DE  5B84               	subwfb	(___llmod@dividend+2)& (0+255),f,b
 10012  0052E0  0100               	movlb	0	; () banked
 10013  0052E2  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
 10014  0052E4  0100               	movlb	0	; () banked
 10015  0052E6  5B85               	subwfb	(___llmod@dividend+3)& (0+255),f,b
 10016  0052E8                     l8908:
 10017                           
 10018                           ; BSR set to: 0
 10019  0052E8  0100               	movlb	0	; () banked
 10020  0052EA  90D8               	bcf	status,0,c
 10021  0052EC  3389               	rrcf	(___llmod@divisor+3)& (0+255),f,b
 10022  0052EE  3388               	rrcf	(___llmod@divisor+2)& (0+255),f,b
 10023  0052F0  3387               	rrcf	(___llmod@divisor+1)& (0+255),f,b
 10024  0052F2  3386               	rrcf	___llmod@divisor& (0+255),f,b
 10025                           
 10026                           ; BSR set to: 0
 10027  0052F4  0100               	movlb	0	; () banked
 10028  0052F6  2F8A               	decfsz	___llmod@counter& (0+255),f,b
 10029  0052F8  D7D5               	goto	l8904
 10030  0052FA                     l1342:
 10031                           
 10032                           ; BSR set to: 0
 10033  0052FA  C082  F082         	movff	___llmod@dividend,?___llmod
 10034  0052FE  C083  F083         	movff	___llmod@dividend+1,?___llmod+1
 10035  005302  C084  F084         	movff	___llmod@dividend+2,?___llmod+2
 10036  005306  C085  F085         	movff	___llmod@dividend+3,?___llmod+3
 10037                           
 10038                           ; BSR set to: 0
 10039  00530A  0012               	return		;funcret
 10040  00530C                     __end_of___llmod:
 10041                           	opt stack 0
 10042                           tblptru	equ	0xFF8
 10043                           tblptrh	equ	0xFF7
 10044                           tblptrl	equ	0xFF6
 10045                           tablat	equ	0xFF5
 10046                           prodh	equ	0xFF4
 10047                           prodl	equ	0xFF3
 10048                           intcon	equ	0xFF2
 10049                           postinc0	equ	0xFEE
 10050                           wreg	equ	0xFE8
 10051                           postdec1	equ	0xFE5
 10052                           fsr1l	equ	0xFE1
 10053                           indf2	equ	0xFDF
 10054                           postinc2	equ	0xFDE
 10055                           postdec2	equ	0xFDD
 10056                           fsr2h	equ	0xFDA
 10057                           fsr2l	equ	0xFD9
 10058                           status	equ	0xFD8
 10059                           
 10060 ;; *************** function ___lldiv *****************
 10061 ;; Defined at:
 10062 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
 10063 ;; Parameters:    Size  Location     Type
 10064 ;;  dividend        4   21[BANK0 ] unsigned long 
 10065 ;;  divisor         4   25[BANK0 ] unsigned long 
 10066 ;; Auto vars:     Size  Location     Type
 10067 ;;  quotient        4   29[BANK0 ] unsigned long 
 10068 ;;  counter         1   33[BANK0 ] unsigned char 
 10069 ;; Return value:  Size  Location     Type
 10070 ;;                  4   21[BANK0 ] unsigned long 
 10071 ;; Registers used:
 10072 ;;		wreg, status,2, status,0
 10073 ;; Tracked objects:
 10074 ;;		On entry : 0/0
 10075 ;;		On exit  : 0/0
 10076 ;;		Unchanged: 0/0
 10077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10078 ;;      Params:         0       8       0       0       0       0       0
 10079 ;;      Locals:         0       5       0       0       0       0       0
 10080 ;;      Temps:          0       0       0       0       0       0       0
 10081 ;;      Totals:         0      13       0       0       0       0       0
 10082 ;;Total ram usage:       13 bytes
 10083 ;; Hardware stack levels used:    1
 10084 ;; Hardware stack levels required when called:    8
 10085 ;; This function calls:
 10086 ;;		Nothing
 10087 ;; This function is called by:
 10088 ;;		_printf
 10089 ;; This function uses a non-reentrant model
 10090 ;;
 10091                           
 10092                           	psect	text33
 10093  004F20                     __ptext33:
 10094                           	opt stack 0
 10095  004F20                     ___lldiv:
 10096                           	opt stack 19
 10097                           
 10098                           ; BSR set to: 0
 10099                           ;incstack = 0
 10100  004F20  0E00               	movlw	0
 10101  004F22  0100               	movlb	0	; () banked
 10102  004F24  6F7D               	movwf	___lldiv@quotient& (0+255),b
 10103  004F26  0E00               	movlw	0
 10104  004F28  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
 10105  004F2A  0E00               	movlw	0
 10106  004F2C  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
 10107  004F2E  0E00               	movlw	0
 10108  004F30  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
 10109                           
 10110                           ; BSR set to: 0
 10111  004F32  0100               	movlb	0	; () banked
 10112  004F34  5179               	movf	___lldiv@divisor& (0+255),w,b
 10113  004F36  0100               	movlb	0	; () banked
 10114  004F38  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10115  004F3A  0100               	movlb	0	; () banked
 10116  004F3C  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10117  004F3E  0100               	movlb	0	; () banked
 10118  004F40  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10119  004F42  B4D8               	btfsc	status,2,c
 10120  004F44  D042               	goto	l1332
 10121                           
 10122                           ; BSR set to: 0
 10123  004F46  0E01               	movlw	1
 10124  004F48  0100               	movlb	0	; () banked
 10125  004F4A  6F81               	movwf	___lldiv@counter& (0+255),b
 10126  004F4C  D008               	goto	l8882
 10127  004F4E                     l8880:
 10128                           
 10129                           ; BSR set to: 0
 10130  004F4E  0100               	movlb	0	; () banked
 10131  004F50  90D8               	bcf	status,0,c
 10132  004F52  3779               	rlcf	___lldiv@divisor& (0+255),f,b
 10133  004F54  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10134  004F56  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10135  004F58  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10136  004F5A  0100               	movlb	0	; () banked
 10137  004F5C  2B81               	incf	___lldiv@counter& (0+255),f,b
 10138  004F5E                     l8882:
 10139                           
 10140                           ; BSR set to: 0
 10141  004F5E  0100               	movlb	0	; () banked
 10142  004F60  AF7C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10143  004F62  D7F5               	goto	l8880
 10144  004F64                     l8884:
 10145                           
 10146                           ; BSR set to: 0
 10147  004F64  0100               	movlb	0	; () banked
 10148  004F66  90D8               	bcf	status,0,c
 10149  004F68  377D               	rlcf	___lldiv@quotient& (0+255),f,b
 10150  004F6A  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10151  004F6C  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10152  004F6E  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10153                           
 10154                           ; BSR set to: 0
 10155  004F70  0100               	movlb	0	; () banked
 10156  004F72  5179               	movf	___lldiv@divisor& (0+255),w,b
 10157  004F74  0100               	movlb	0	; () banked
 10158  004F76  5D75               	subwf	___lldiv@dividend& (0+255),w,b
 10159  004F78  0100               	movlb	0	; () banked
 10160  004F7A  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10161  004F7C  0100               	movlb	0	; () banked
 10162  004F7E  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10163  004F80  0100               	movlb	0	; () banked
 10164  004F82  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10165  004F84  0100               	movlb	0	; () banked
 10166  004F86  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10167  004F88  0100               	movlb	0	; () banked
 10168  004F8A  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10169  004F8C  0100               	movlb	0	; () banked
 10170  004F8E  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10171  004F90  A0D8               	btfss	status,0,c
 10172  004F92  D012               	goto	l8892
 10173                           
 10174                           ; BSR set to: 0
 10175  004F94  0100               	movlb	0	; () banked
 10176  004F96  5179               	movf	___lldiv@divisor& (0+255),w,b
 10177  004F98  0100               	movlb	0	; () banked
 10178  004F9A  5F75               	subwf	___lldiv@dividend& (0+255),f,b
 10179  004F9C  0100               	movlb	0	; () banked
 10180  004F9E  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10181  004FA0  0100               	movlb	0	; () banked
 10182  004FA2  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10183  004FA4  0100               	movlb	0	; () banked
 10184  004FA6  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10185  004FA8  0100               	movlb	0	; () banked
 10186  004FAA  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10187  004FAC  0100               	movlb	0	; () banked
 10188  004FAE  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10189  004FB0  0100               	movlb	0	; () banked
 10190  004FB2  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10191                           
 10192                           ; BSR set to: 0
 10193  004FB4  0100               	movlb	0	; () banked
 10194  004FB6  817D               	bsf	___lldiv@quotient& (0+255),0,b
 10195  004FB8                     l8892:
 10196                           
 10197                           ; BSR set to: 0
 10198  004FB8  0100               	movlb	0	; () banked
 10199  004FBA  90D8               	bcf	status,0,c
 10200  004FBC  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10201  004FBE  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10202  004FC0  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10203  004FC2  3379               	rrcf	___lldiv@divisor& (0+255),f,b
 10204                           
 10205                           ; BSR set to: 0
 10206  004FC4  0100               	movlb	0	; () banked
 10207  004FC6  2F81               	decfsz	___lldiv@counter& (0+255),f,b
 10208  004FC8  D7CD               	goto	l8884
 10209  004FCA                     l1332:
 10210                           
 10211                           ; BSR set to: 0
 10212  004FCA  C07D  F075         	movff	___lldiv@quotient,?___lldiv
 10213  004FCE  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
 10214  004FD2  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
 10215  004FD6  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
 10216                           
 10217                           ; BSR set to: 0
 10218  004FDA  0012               	return		;funcret
 10219  004FDC                     __end_of___lldiv:
 10220                           	opt stack 0
 10221                           tblptru	equ	0xFF8
 10222                           tblptrh	equ	0xFF7
 10223                           tblptrl	equ	0xFF6
 10224                           tablat	equ	0xFF5
 10225                           prodh	equ	0xFF4
 10226                           prodl	equ	0xFF3
 10227                           intcon	equ	0xFF2
 10228                           postinc0	equ	0xFEE
 10229                           wreg	equ	0xFE8
 10230                           postdec1	equ	0xFE5
 10231                           fsr1l	equ	0xFE1
 10232                           indf2	equ	0xFDF
 10233                           postinc2	equ	0xFDE
 10234                           postdec2	equ	0xFDD
 10235                           fsr2h	equ	0xFDA
 10236                           fsr2l	equ	0xFD9
 10237                           status	equ	0xFD8
 10238                           
 10239 ;; *************** function ___flsub *****************
 10240 ;; Defined at:
 10241 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10242 ;; Parameters:    Size  Location     Type
 10243 ;;  b               4   93[BANK0 ] unsigned long 
 10244 ;;  a               4   97[BANK0 ] unsigned long 
 10245 ;; Auto vars:     Size  Location     Type
 10246 ;;		None
 10247 ;; Return value:  Size  Location     Type
 10248 ;;                  4   93[BANK0 ] unsigned long 
 10249 ;; Registers used:
 10250 ;;		wreg, status,2, status,0, cstack
 10251 ;; Tracked objects:
 10252 ;;		On entry : 0/0
 10253 ;;		On exit  : 0/0
 10254 ;;		Unchanged: 0/0
 10255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10256 ;;      Params:         0       8       0       0       0       0       0
 10257 ;;      Locals:         0       0       0       0       0       0       0
 10258 ;;      Temps:          0       0       0       0       0       0       0
 10259 ;;      Totals:         0       8       0       0       0       0       0
 10260 ;;Total ram usage:        8 bytes
 10261 ;; Hardware stack levels used:    1
 10262 ;; Hardware stack levels required when called:    9
 10263 ;; This function calls:
 10264 ;;		___fladd
 10265 ;; This function is called by:
 10266 ;;		_printf
 10267 ;; This function uses a non-reentrant model
 10268 ;;
 10269                           
 10270                           	psect	text34
 10271  005A28                     __ptext34:
 10272                           	opt stack 0
 10273  005A28                     ___flsub:
 10274                           	opt stack 18
 10275                           
 10276                           ; BSR set to: 0
 10277                           ;incstack = 0
 10278  005A28  0E00               	movlw	0
 10279  005A2A  0100               	movlb	0	; () banked
 10280  005A2C  1BC1               	xorwf	___flsub@a& (0+255),f,b
 10281  005A2E  0E00               	movlw	0
 10282  005A30  1BC2               	xorwf	(___flsub@a+1)& (0+255),f,b
 10283  005A32  0E00               	movlw	0
 10284  005A34  1BC3               	xorwf	(___flsub@a+2)& (0+255),f,b
 10285  005A36  0E80               	movlw	128
 10286  005A38  1BC4               	xorwf	(___flsub@a+3)& (0+255),f,b
 10287                           
 10288                           ; BSR set to: 0
 10289  005A3A  C0BD  F0A9         	movff	___flsub@b,___fladd@b
 10290  005A3E  C0BE  F0AA         	movff	___flsub@b+1,___fladd@b+1
 10291  005A42  C0BF  F0AB         	movff	___flsub@b+2,___fladd@b+2
 10292  005A46  C0C0  F0AC         	movff	___flsub@b+3,___fladd@b+3
 10293  005A4A  C0C1  F0AD         	movff	___flsub@a,___fladd@a
 10294  005A4E  C0C2  F0AE         	movff	___flsub@a+1,___fladd@a+1
 10295  005A52  C0C3  F0AF         	movff	___flsub@a+2,___fladd@a+2
 10296  005A56  C0C4  F0B0         	movff	___flsub@a+3,___fladd@a+3
 10297  005A5A  ECFB  F008         	call	___fladd	;wreg free
 10298  005A5E  C0A9  F0BD         	movff	?___fladd,?___flsub
 10299  005A62  C0AA  F0BE         	movff	?___fladd+1,?___flsub+1
 10300  005A66  C0AB  F0BF         	movff	?___fladd+2,?___flsub+2
 10301  005A6A  C0AC  F0C0         	movff	?___fladd+3,?___flsub+3
 10302  005A6E  0012               	return	
 10303  005A70                     __end_of___flsub:
 10304                           	opt stack 0
 10305                           tblptru	equ	0xFF8
 10306                           tblptrh	equ	0xFF7
 10307                           tblptrl	equ	0xFF6
 10308                           tablat	equ	0xFF5
 10309                           prodh	equ	0xFF4
 10310                           prodl	equ	0xFF3
 10311                           intcon	equ	0xFF2
 10312                           postinc0	equ	0xFEE
 10313                           wreg	equ	0xFE8
 10314                           postdec1	equ	0xFE5
 10315                           fsr1l	equ	0xFE1
 10316                           indf2	equ	0xFDF
 10317                           postinc2	equ	0xFDE
 10318                           postdec2	equ	0xFDD
 10319                           fsr2h	equ	0xFDA
 10320                           fsr2l	equ	0xFD9
 10321                           status	equ	0xFD8
 10322                           
 10323 ;; *************** function ___fladd *****************
 10324 ;; Defined at:
 10325 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10326 ;; Parameters:    Size  Location     Type
 10327 ;;  b               4   73[BANK0 ] unsigned long 
 10328 ;;  a               4   77[BANK0 ] unsigned long 
 10329 ;; Auto vars:     Size  Location     Type
 10330 ;;  grs             1   92[BANK0 ] unsigned char 
 10331 ;;  bexp            1   91[BANK0 ] unsigned char 
 10332 ;;  aexp            1   90[BANK0 ] unsigned char 
 10333 ;;  signs           1   89[BANK0 ] unsigned char 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  4   73[BANK0 ] unsigned char 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10343 ;;      Params:         0       8       0       0       0       0       0
 10344 ;;      Locals:         0       4       0       0       0       0       0
 10345 ;;      Temps:          0       8       0       0       0       0       0
 10346 ;;      Totals:         0      20       0       0       0       0       0
 10347 ;;Total ram usage:       20 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    8
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_printf
 10354 ;;		___flsub
 10355 ;; This function uses a non-reentrant model
 10356 ;;
 10357                           
 10358                           	psect	text35
 10359  0011F6                     __ptext35:
 10360                           	opt stack 0
 10361  0011F6                     ___fladd:
 10362                           	opt stack 18
 10363                           
 10364                           ;incstack = 0
 10365  0011F6  0100               	movlb	0	; () banked
 10366  0011F8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10367  0011FA  0B80               	andlw	128
 10368  0011FC  0100               	movlb	0	; () banked
 10369  0011FE  6FB9               	movwf	___fladd@signs& (0+255),b
 10370  001200  0100               	movlb	0	; () banked
 10371  001202  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10372  001204  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
 10373  001206  0100               	movlb	0	; () banked
 10374  001208  6FBB               	movwf	___fladd@bexp& (0+255),b
 10375                           
 10376                           ; BSR set to: 0
 10377  00120A  0100               	movlb	0	; () banked
 10378  00120C  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 10379  00120E  D002               	goto	l8168
 10380                           
 10381                           ; BSR set to: 0
 10382  001210  0100               	movlb	0	; () banked
 10383  001212  81BB               	bsf	___fladd@bexp& (0+255),0,b
 10384  001214                     l8168:
 10385                           
 10386                           ; BSR set to: 0
 10387  001214  0100               	movlb	0	; () banked
 10388  001216  51BB               	movf	___fladd@bexp& (0+255),w,b
 10389  001218  0100               	movlb	0	; () banked
 10390  00121A  B4D8               	btfsc	status,2,c
 10391  00121C  D012               	goto	l8178
 10392                           
 10393                           ; BSR set to: 0
 10394  00121E  0100               	movlb	0	; () banked
 10395  001220  29BB               	incf	___fladd@bexp& (0+255),w,b
 10396  001222  A4D8               	btfss	status,2,c
 10397  001224  D009               	goto	l8174
 10398                           
 10399                           ; BSR set to: 0
 10400  001226  0E00               	movlw	0
 10401  001228  0100               	movlb	0	; () banked
 10402  00122A  6FA9               	movwf	___fladd@b& (0+255),b
 10403  00122C  0E00               	movlw	0
 10404  00122E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10405  001230  0E00               	movlw	0
 10406  001232  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10407  001234  0E00               	movlw	0
 10408  001236  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10409  001238                     l8174:
 10410                           
 10411                           ; BSR set to: 0
 10412  001238  0100               	movlb	0	; () banked
 10413  00123A  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 10414                           
 10415                           ; BSR set to: 0
 10416  00123C  0E00               	movlw	0
 10417  00123E  0100               	movlb	0	; () banked
 10418  001240  D008               	goto	L6
 10419  001242                     l8178:
 10420                           
 10421                           ; BSR set to: 0
 10422  001242  0E00               	movlw	0
 10423  001244  0100               	movlb	0	; () banked
 10424  001246  6FA9               	movwf	___fladd@b& (0+255),b
 10425  001248  0E00               	movlw	0
 10426  00124A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10427  00124C  0E00               	movlw	0
 10428  00124E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10429  001250  0E00               	movlw	0
 10430  001252                     L6:
 10431  001252  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10432                           
 10433                           ; BSR set to: 0
 10434                           
 10435                           ; BSR set to: 0
 10436  001254  0100               	movlb	0	; () banked
 10437  001256  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10438  001258  0B80               	andlw	128
 10439  00125A  0100               	movlb	0	; () banked
 10440  00125C  6FBA               	movwf	___fladd@aexp& (0+255),b
 10441                           
 10442                           ; BSR set to: 0
 10443  00125E  0100               	movlb	0	; () banked
 10444  001260  51B9               	movf	___fladd@signs& (0+255),w,b
 10445  001262  0100               	movlb	0	; () banked
 10446  001264  19BA               	xorwf	___fladd@aexp& (0+255),w,b
 10447  001266  B4D8               	btfsc	status,2,c
 10448  001268  D002               	goto	l8186
 10449                           
 10450                           ; BSR set to: 0
 10451  00126A  0100               	movlb	0	; () banked
 10452  00126C  8DB9               	bsf	___fladd@signs& (0+255),6,b
 10453  00126E                     l8186:
 10454                           
 10455                           ; BSR set to: 0
 10456  00126E  0100               	movlb	0	; () banked
 10457  001270  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10458  001272  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
 10459  001274  0100               	movlb	0	; () banked
 10460  001276  6FBA               	movwf	___fladd@aexp& (0+255),b
 10461                           
 10462                           ; BSR set to: 0
 10463  001278  0100               	movlb	0	; () banked
 10464  00127A  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
 10465  00127C  D002               	goto	l8192
 10466                           
 10467                           ; BSR set to: 0
 10468  00127E  0100               	movlb	0	; () banked
 10469  001280  81BA               	bsf	___fladd@aexp& (0+255),0,b
 10470  001282                     l8192:
 10471                           
 10472                           ; BSR set to: 0
 10473  001282  0100               	movlb	0	; () banked
 10474  001284  51BA               	movf	___fladd@aexp& (0+255),w,b
 10475  001286  0100               	movlb	0	; () banked
 10476  001288  B4D8               	btfsc	status,2,c
 10477  00128A  D012               	goto	l8202
 10478                           
 10479                           ; BSR set to: 0
 10480  00128C  0100               	movlb	0	; () banked
 10481  00128E  29BA               	incf	___fladd@aexp& (0+255),w,b
 10482  001290  A4D8               	btfss	status,2,c
 10483  001292  D009               	goto	l8198
 10484                           
 10485                           ; BSR set to: 0
 10486  001294  0E00               	movlw	0
 10487  001296  0100               	movlb	0	; () banked
 10488  001298  6FAD               	movwf	___fladd@a& (0+255),b
 10489  00129A  0E00               	movlw	0
 10490  00129C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10491  00129E  0E00               	movlw	0
 10492  0012A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10493  0012A2  0E00               	movlw	0
 10494  0012A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10495  0012A6                     l8198:
 10496                           
 10497                           ; BSR set to: 0
 10498  0012A6  0100               	movlb	0	; () banked
 10499  0012A8  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
 10500                           
 10501                           ; BSR set to: 0
 10502  0012AA  0E00               	movlw	0
 10503  0012AC  0100               	movlb	0	; () banked
 10504  0012AE  D008               	goto	L7
 10505  0012B0                     l8202:
 10506                           
 10507                           ; BSR set to: 0
 10508  0012B0  0E00               	movlw	0
 10509  0012B2  0100               	movlb	0	; () banked
 10510  0012B4  6FAD               	movwf	___fladd@a& (0+255),b
 10511  0012B6  0E00               	movlw	0
 10512  0012B8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10513  0012BA  0E00               	movlw	0
 10514  0012BC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10515  0012BE  0E00               	movlw	0
 10516  0012C0                     L7:
 10517  0012C0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520                           
 10521                           ; BSR set to: 0
 10522  0012C2  0100               	movlb	0	; () banked
 10523  0012C4  51BB               	movf	___fladd@bexp& (0+255),w,b
 10524  0012C6  0100               	movlb	0	; () banked
 10525  0012C8  5DBA               	subwf	___fladd@aexp& (0+255),w,b
 10526  0012CA  B0D8               	btfsc	status,0,c
 10527  0012CC  D024               	goto	l8240
 10528                           
 10529                           ; BSR set to: 0
 10530  0012CE  0100               	movlb	0	; () banked
 10531  0012D0  ADB9               	btfss	___fladd@signs& (0+255),6,b
 10532  0012D2  D003               	goto	l8210
 10533                           
 10534                           ; BSR set to: 0
 10535  0012D4  0E80               	movlw	128
 10536  0012D6  0100               	movlb	0	; () banked
 10537  0012D8  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 10538  0012DA                     l8210:
 10539                           
 10540                           ; BSR set to: 0
 10541  0012DA  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
 10542                           
 10543                           ; BSR set to: 0
 10544  0012DE  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10545                           
 10546                           ; BSR set to: 0
 10547  0012E2  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
 10548                           
 10549                           ; BSR set to: 0
 10550  0012E6  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
 10551                           
 10552                           ; BSR set to: 0
 10553  0012EA  C0AD  F0A9         	movff	___fladd@a,___fladd@b
 10554                           
 10555                           ; BSR set to: 0
 10556  0012EE  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
 10557                           
 10558                           ; BSR set to: 0
 10559  0012F2  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
 10560                           
 10561                           ; BSR set to: 0
 10562  0012F6  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
 10563                           
 10564                           ; BSR set to: 0
 10565  0012FA  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
 10566                           
 10567                           ; BSR set to: 0
 10568  0012FE  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
 10569                           
 10570                           ; BSR set to: 0
 10571  001302  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
 10572                           
 10573                           ; BSR set to: 0
 10574  001306  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
 10575                           
 10576                           ; BSR set to: 0
 10577  00130A  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
 10578                           
 10579                           ; BSR set to: 0
 10580  00130E  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
 10581                           
 10582                           ; BSR set to: 0
 10583  001312  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
 10584  001316                     l8240:
 10585                           
 10586                           ; BSR set to: 0
 10587  001316  0E00               	movlw	0
 10588  001318  0100               	movlb	0	; () banked
 10589  00131A  6FBC               	movwf	___fladd@grs& (0+255),b
 10590                           
 10591                           ; BSR set to: 0
 10592  00131C  0100               	movlb	0	; () banked
 10593  00131E  51BB               	movf	___fladd@bexp& (0+255),w,b
 10594  001320  0100               	movlb	0	; () banked
 10595  001322  6FB1               	movwf	??___fladd& (0+255),b
 10596  001324  6BB2               	clrf	(??___fladd+1)& (0+255),b
 10597  001326  0100               	movlb	0	; () banked
 10598  001328  1FB1               	comf	??___fladd& (0+255),f,b
 10599  00132A  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10600  00132C  4BB1               	infsnz	??___fladd& (0+255),f,b
 10601  00132E  2BB2               	incf	(??___fladd+1)& (0+255),f,b
 10602  001330  0100               	movlb	0	; () banked
 10603  001332  51BA               	movf	___fladd@aexp& (0+255),w,b
 10604  001334  0100               	movlb	0	; () banked
 10605  001336  6FB3               	movwf	(??___fladd+2)& (0+255),b
 10606  001338  6BB4               	clrf	(??___fladd+3)& (0+255),b
 10607  00133A  0100               	movlb	0	; () banked
 10608  00133C  51B1               	movf	??___fladd& (0+255),w,b
 10609  00133E  0100               	movlb	0	; () banked
 10610  001340  27B3               	addwf	(??___fladd+2)& (0+255),f,b
 10611  001342  0100               	movlb	0	; () banked
 10612  001344  51B2               	movf	(??___fladd+1)& (0+255),w,b
 10613  001346  0100               	movlb	0	; () banked
 10614  001348  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10615  00134A  0100               	movlb	0	; () banked
 10616  00134C  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
 10617  00134E  D03D               	goto	l1427
 10618  001350  0100               	movlb	0	; () banked
 10619  001352  51B4               	movf	(??___fladd+3)& (0+255),w,b
 10620  001354  E105               	bnz	u10060
 10621  001356  0E1A               	movlw	26
 10622  001358  0100               	movlb	0	; () banked
 10623  00135A  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
 10624  00135C  A0D8               	btfss	status,0,c
 10625  00135E  D035               	goto	l1427
 10626  001360                     u10060:
 10627                           
 10628                           ; BSR set to: 0
 10629  001360  0100               	movlb	0	; () banked
 10630  001362  51A9               	movf	___fladd@b& (0+255),w,b
 10631  001364  0100               	movlb	0	; () banked
 10632  001366  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 10633  001368  0100               	movlb	0	; () banked
 10634  00136A  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 10635  00136C  0100               	movlb	0	; () banked
 10636  00136E  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 10637  001370  B4D8               	btfsc	status,2,c
 10638  001372  D002               	goto	u10070
 10639  001374  0E01               	movlw	1
 10640  001376  D001               	goto	u10080
 10641  001378                     u10070:
 10642  001378  0E00               	movlw	0
 10643  00137A                     u10080:
 10644  00137A  0100               	movlb	0	; () banked
 10645  00137C  6FBC               	movwf	___fladd@grs& (0+255),b
 10646                           
 10647                           ; BSR set to: 0
 10648  00137E  0E00               	movlw	0
 10649  001380  0100               	movlb	0	; () banked
 10650  001382  6FA9               	movwf	___fladd@b& (0+255),b
 10651  001384  0E00               	movlw	0
 10652  001386  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10653  001388  0E00               	movlw	0
 10654  00138A  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10655  00138C  0E00               	movlw	0
 10656  00138E  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10657                           
 10658                           ; BSR set to: 0
 10659  001390  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10660  001394  D020               	goto	l1426
 10661  001396                     l1428:
 10662                           
 10663                           ; BSR set to: 0
 10664  001396  0100               	movlb	0	; () banked
 10665  001398  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10666  00139A  D007               	goto	l8252
 10667                           
 10668                           ; BSR set to: 0
 10669  00139C  0100               	movlb	0	; () banked
 10670  00139E  90D8               	bcf	status,0,c
 10671  0013A0  31BC               	rrcf	___fladd@grs& (0+255),w,b
 10672  0013A2  0901               	iorlw	1
 10673  0013A4  0100               	movlb	0	; () banked
 10674  0013A6  6FBC               	movwf	___fladd@grs& (0+255),b
 10675  0013A8  D003               	goto	l8254
 10676  0013AA                     l8252:
 10677                           
 10678                           ; BSR set to: 0
 10679  0013AA  0100               	movlb	0	; () banked
 10680  0013AC  90D8               	bcf	status,0,c
 10681  0013AE  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10682  0013B0                     l8254:
 10683                           
 10684                           ; BSR set to: 0
 10685  0013B0  0100               	movlb	0	; () banked
 10686  0013B2  A1A9               	btfss	___fladd@b& (0+255),0,b
 10687  0013B4  D002               	goto	l8258
 10688                           
 10689                           ; BSR set to: 0
 10690  0013B6  0100               	movlb	0	; () banked
 10691  0013B8  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10692  0013BA                     l8258:
 10693                           
 10694                           ; BSR set to: 0
 10695  0013BA  0100               	movlb	0	; () banked
 10696  0013BC  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10697  0013BE  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10698  0013C0  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10699  0013C2  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10700  0013C4  33A9               	rrcf	___fladd@b& (0+255),f,b
 10701                           
 10702                           ; BSR set to: 0
 10703  0013C6  0100               	movlb	0	; () banked
 10704  0013C8  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10705  0013CA                     l1427:
 10706                           
 10707                           ; BSR set to: 0
 10708  0013CA  0100               	movlb	0	; () banked
 10709  0013CC  51BA               	movf	___fladd@aexp& (0+255),w,b
 10710  0013CE  0100               	movlb	0	; () banked
 10711  0013D0  5DBB               	subwf	___fladd@bexp& (0+255),w,b
 10712  0013D2  A0D8               	btfss	status,0,c
 10713  0013D4  D7E0               	goto	l1428
 10714  0013D6                     l1426:
 10715                           
 10716                           ; BSR set to: 0
 10717  0013D6  0100               	movlb	0	; () banked
 10718  0013D8  BDB9               	btfsc	___fladd@signs& (0+255),6,b
 10719  0013DA  D03F               	goto	l8286
 10720                           
 10721                           ; BSR set to: 0
 10722  0013DC  0100               	movlb	0	; () banked
 10723  0013DE  51BB               	movf	___fladd@bexp& (0+255),w,b
 10724  0013E0  0100               	movlb	0	; () banked
 10725  0013E2  A4D8               	btfss	status,2,c
 10726  0013E4  D00A               	goto	l8268
 10727                           
 10728                           ; BSR set to: 0
 10729  0013E6  0E00               	movlw	0
 10730  0013E8  0100               	movlb	0	; () banked
 10731  0013EA  6FA9               	movwf	?___fladd& (0+255),b
 10732  0013EC  0E00               	movlw	0
 10733  0013EE  6FAA               	movwf	(?___fladd+1)& (0+255),b
 10734  0013F0  0E00               	movlw	0
 10735  0013F2  6FAB               	movwf	(?___fladd+2)& (0+255),b
 10736  0013F4  0E00               	movlw	0
 10737  0013F6  6FAC               	movwf	(?___fladd+3)& (0+255),b
 10738                           
 10739                           ; BSR set to: 0
 10740  0013F8  0012               	return	
 10741  0013FA                     l8268:
 10742                           
 10743                           ; BSR set to: 0
 10744  0013FA  0100               	movlb	0	; () banked
 10745  0013FC  51AD               	movf	___fladd@a& (0+255),w,b
 10746  0013FE  0100               	movlb	0	; () banked
 10747  001400  27A9               	addwf	___fladd@b& (0+255),f,b
 10748  001402  0100               	movlb	0	; () banked
 10749  001404  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10750  001406  0100               	movlb	0	; () banked
 10751  001408  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 10752  00140A  0100               	movlb	0	; () banked
 10753  00140C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10754  00140E  0100               	movlb	0	; () banked
 10755  001410  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 10756  001412  0100               	movlb	0	; () banked
 10757  001414  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10758  001416  0100               	movlb	0	; () banked
 10759  001418  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 10760                           
 10761                           ; BSR set to: 0
 10762  00141A  0100               	movlb	0	; () banked
 10763  00141C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 10764  00141E  D0CC               	goto	l8322
 10765                           
 10766                           ; BSR set to: 0
 10767  001420  0100               	movlb	0	; () banked
 10768  001422  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10769  001424  D009               	goto	l8276
 10770                           
 10771                           ; BSR set to: 0
 10772  001426  0100               	movlb	0	; () banked
 10773  001428  90D8               	bcf	status,0,c
 10774  00142A  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10775  00142C  0100               	movlb	0	; () banked
 10776  00142E  51BC               	movf	___fladd@grs& (0+255),w,b
 10777  001430  0901               	iorlw	1
 10778  001432  0100               	movlb	0	; () banked
 10779  001434  6FBC               	movwf	___fladd@grs& (0+255),b
 10780  001436  D003               	goto	l8278
 10781  001438                     l8276:
 10782                           
 10783                           ; BSR set to: 0
 10784  001438  0100               	movlb	0	; () banked
 10785  00143A  90D8               	bcf	status,0,c
 10786  00143C  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10787  00143E                     l8278:
 10788                           
 10789                           ; BSR set to: 0
 10790  00143E  0100               	movlb	0	; () banked
 10791  001440  A1A9               	btfss	___fladd@b& (0+255),0,b
 10792  001442  D002               	goto	l8282
 10793                           
 10794                           ; BSR set to: 0
 10795  001444  0100               	movlb	0	; () banked
 10796  001446  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10797  001448                     l8282:
 10798                           
 10799                           ; BSR set to: 0
 10800  001448  0100               	movlb	0	; () banked
 10801  00144A  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10802  00144C  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10803  00144E  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10804  001450  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10805  001452  33A9               	rrcf	___fladd@b& (0+255),f,b
 10806                           
 10807                           ; BSR set to: 0
 10808  001454  0100               	movlb	0	; () banked
 10809  001456  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10810                           
 10811                           ; BSR set to: 0
 10812  001458  D0AF               	goto	l8322
 10813  00145A                     l8286:
 10814                           
 10815                           ; BSR set to: 0
 10816  00145A  0100               	movlb	0	; () banked
 10817  00145C  51AD               	movf	___fladd@a& (0+255),w,b
 10818  00145E  0100               	movlb	0	; () banked
 10819  001460  5DA9               	subwf	___fladd@b& (0+255),w,b
 10820  001462  0100               	movlb	0	; () banked
 10821  001464  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10822  001466  0100               	movlb	0	; () banked
 10823  001468  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
 10824  00146A  0100               	movlb	0	; () banked
 10825  00146C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10826  00146E  0100               	movlb	0	; () banked
 10827  001470  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
 10828  001472  0100               	movlb	0	; () banked
 10829  001474  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10830  001476  0A80               	xorlw	128
 10831  001478  0100               	movlb	0	; () banked
 10832  00147A  6FB1               	movwf	??___fladd& (0+255),b
 10833  00147C  0100               	movlb	0	; () banked
 10834  00147E  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10835  001480  0A80               	xorlw	128
 10836  001482  0100               	movlb	0	; () banked
 10837  001484  59B1               	subwfb	??___fladd& (0+255),w,b
 10838  001486  B0D8               	btfsc	status,0,c
 10839  001488  D050               	goto	l8296
 10840                           
 10841                           ; BSR set to: 0
 10842  00148A  C0A9  F0B1         	movff	___fladd@b,??___fladd
 10843  00148E  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 10844  001492  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 10845  001496  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 10846  00149A  0100               	movlb	0	; () banked
 10847  00149C  1FB1               	comf	??___fladd& (0+255),f,b
 10848  00149E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10849  0014A0  1FB3               	comf	(??___fladd+2)& (0+255),f,b
 10850  0014A2  1FB4               	comf	(??___fladd+3)& (0+255),f,b
 10851  0014A4  2BB1               	incf	??___fladd& (0+255),f,b
 10852  0014A6  0E00               	movlw	0
 10853  0014A8  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
 10854  0014AA  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
 10855  0014AC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10856  0014AE  0100               	movlb	0	; () banked
 10857  0014B0  51AD               	movf	___fladd@a& (0+255),w,b
 10858  0014B2  0100               	movlb	0	; () banked
 10859  0014B4  25B1               	addwf	??___fladd& (0+255),w,b
 10860  0014B6  0100               	movlb	0	; () banked
 10861  0014B8  6FB5               	movwf	(??___fladd+4)& (0+255),b
 10862  0014BA  0100               	movlb	0	; () banked
 10863  0014BC  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10864  0014BE  0100               	movlb	0	; () banked
 10865  0014C0  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
 10866  0014C2  0100               	movlb	0	; () banked
 10867  0014C4  6FB6               	movwf	(??___fladd+5)& (0+255),b
 10868  0014C6  0100               	movlb	0	; () banked
 10869  0014C8  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10870  0014CA  0100               	movlb	0	; () banked
 10871  0014CC  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
 10872  0014CE  0100               	movlb	0	; () banked
 10873  0014D0  6FB7               	movwf	(??___fladd+6)& (0+255),b
 10874  0014D2  0100               	movlb	0	; () banked
 10875  0014D4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10876  0014D6  0100               	movlb	0	; () banked
 10877  0014D8  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
 10878  0014DA  0100               	movlb	0	; () banked
 10879  0014DC  6FB8               	movwf	(??___fladd+7)& (0+255),b
 10880  0014DE  0EFF               	movlw	255
 10881  0014E0  0100               	movlb	0	; () banked
 10882  0014E2  25B5               	addwf	(??___fladd+4)& (0+255),w,b
 10883  0014E4  0100               	movlb	0	; () banked
 10884  0014E6  6FA9               	movwf	___fladd@b& (0+255),b
 10885  0014E8  0EFF               	movlw	255
 10886  0014EA  0100               	movlb	0	; () banked
 10887  0014EC  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
 10888  0014EE  0100               	movlb	0	; () banked
 10889  0014F0  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10890  0014F2  0EFF               	movlw	255
 10891  0014F4  0100               	movlb	0	; () banked
 10892  0014F6  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
 10893  0014F8  0100               	movlb	0	; () banked
 10894  0014FA  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10895  0014FC  0EFF               	movlw	255
 10896  0014FE  0100               	movlb	0	; () banked
 10897  001500  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
 10898  001502  0100               	movlb	0	; () banked
 10899  001504  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10900  001506  0E80               	movlw	128
 10901  001508  0100               	movlb	0	; () banked
 10902  00150A  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 10903                           
 10904                           ; BSR set to: 0
 10905  00150C  0100               	movlb	0	; () banked
 10906  00150E  6DBC               	negf	___fladd@grs& (0+255),b
 10907                           
 10908                           ; BSR set to: 0
 10909  001510  0100               	movlb	0	; () banked
 10910  001512  51BC               	movf	___fladd@grs& (0+255),w,b
 10911  001514  0100               	movlb	0	; () banked
 10912  001516  A4D8               	btfss	status,2,c
 10913  001518  D018               	goto	l1443
 10914                           
 10915                           ; BSR set to: 0
 10916  00151A  0E01               	movlw	1
 10917  00151C  0100               	movlb	0	; () banked
 10918  00151E  27A9               	addwf	___fladd@b& (0+255),f,b
 10919  001520  0E00               	movlw	0
 10920  001522  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 10921  001524  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 10922  001526  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 10923                           
 10924                           ; BSR set to: 0
 10925  001528  D010               	goto	l1443
 10926  00152A                     l8296:
 10927                           
 10928                           ; BSR set to: 0
 10929  00152A  0100               	movlb	0	; () banked
 10930  00152C  51AD               	movf	___fladd@a& (0+255),w,b
 10931  00152E  0100               	movlb	0	; () banked
 10932  001530  5FA9               	subwf	___fladd@b& (0+255),f,b
 10933  001532  0100               	movlb	0	; () banked
 10934  001534  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10935  001536  0100               	movlb	0	; () banked
 10936  001538  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
 10937  00153A  0100               	movlb	0	; () banked
 10938  00153C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10939  00153E  0100               	movlb	0	; () banked
 10940  001540  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
 10941  001542  0100               	movlb	0	; () banked
 10942  001544  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10943  001546  0100               	movlb	0	; () banked
 10944  001548  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
 10945  00154A                     l1443:
 10946                           
 10947                           ; BSR set to: 0
 10948  00154A  0100               	movlb	0	; () banked
 10949  00154C  51A9               	movf	___fladd@b& (0+255),w,b
 10950  00154E  0100               	movlb	0	; () banked
 10951  001550  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 10952  001552  0100               	movlb	0	; () banked
 10953  001554  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 10954  001556  0100               	movlb	0	; () banked
 10955  001558  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 10956  00155A  A4D8               	btfss	status,2,c
 10957  00155C  D02A               	goto	l8320
 10958                           
 10959                           ; BSR set to: 0
 10960  00155E  0100               	movlb	0	; () banked
 10961  001560  51BC               	movf	___fladd@grs& (0+255),w,b
 10962  001562  0100               	movlb	0	; () banked
 10963  001564  A4D8               	btfss	status,2,c
 10964  001566  D025               	goto	l8320
 10965                           
 10966                           ; BSR set to: 0
 10967  001568  0E00               	movlw	0
 10968  00156A  0100               	movlb	0	; () banked
 10969  00156C  6FA9               	movwf	?___fladd& (0+255),b
 10970  00156E  0E00               	movlw	0
 10971  001570  6FAA               	movwf	(?___fladd+1)& (0+255),b
 10972  001572  0E00               	movlw	0
 10973  001574  6FAB               	movwf	(?___fladd+2)& (0+255),b
 10974  001576  0E00               	movlw	0
 10975  001578  6FAC               	movwf	(?___fladd+3)& (0+255),b
 10976                           
 10977                           ; BSR set to: 0
 10978  00157A  0012               	return	
 10979  00157C                     l8304:
 10980                           
 10981                           ; BSR set to: 0
 10982  00157C  0100               	movlb	0	; () banked
 10983  00157E  90D8               	bcf	status,0,c
 10984  001580  37A9               	rlcf	___fladd@b& (0+255),f,b
 10985  001582  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
 10986  001584  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
 10987  001586  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
 10988                           
 10989                           ; BSR set to: 0
 10990  001588  0100               	movlb	0	; () banked
 10991  00158A  AFBC               	btfss	___fladd@grs& (0+255),7,b
 10992  00158C  D002               	goto	l8310
 10993                           
 10994                           ; BSR set to: 0
 10995  00158E  0100               	movlb	0	; () banked
 10996  001590  81A9               	bsf	___fladd@b& (0+255),0,b
 10997  001592                     l8310:
 10998                           
 10999                           ; BSR set to: 0
 11000  001592  0100               	movlb	0	; () banked
 11001  001594  A1BC               	btfss	___fladd@grs& (0+255),0,b
 11002  001596  D003               	goto	l8314
 11003                           
 11004                           ; BSR set to: 0
 11005  001598  80D8               	bsf	status,0,c
 11006  00159A  0100               	movlb	0	; () banked
 11007  00159C  D002               	goto	L8
 11008  00159E                     l8314:
 11009                           
 11010                           ; BSR set to: 0
 11011  00159E  0100               	movlb	0	; () banked
 11012  0015A0  90D8               	bcf	status,0,c
 11013  0015A2                     L8:
 11014  0015A2  37BC               	rlcf	___fladd@grs& (0+255),f,b
 11015                           
 11016                           ; BSR set to: 0
 11017                           
 11018                           ; BSR set to: 0
 11019  0015A4  0100               	movlb	0	; () banked
 11020  0015A6  51BB               	movf	___fladd@bexp& (0+255),w,b
 11021  0015A8  0100               	movlb	0	; () banked
 11022  0015AA  B4D8               	btfsc	status,2,c
 11023  0015AC  D002               	goto	l8320
 11024                           
 11025                           ; BSR set to: 0
 11026  0015AE  0100               	movlb	0	; () banked
 11027  0015B0  07BB               	decf	___fladd@bexp& (0+255),f,b
 11028  0015B2                     l8320:
 11029                           
 11030                           ; BSR set to: 0
 11031  0015B2  0100               	movlb	0	; () banked
 11032  0015B4  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 11033  0015B6  D7E2               	goto	l8304
 11034  0015B8                     l8322:
 11035                           
 11036                           ; BSR set to: 0
 11037  0015B8  0E00               	movlw	0
 11038  0015BA  0100               	movlb	0	; () banked
 11039  0015BC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11040                           
 11041                           ; BSR set to: 0
 11042  0015BE  0100               	movlb	0	; () banked
 11043  0015C0  AFBC               	btfss	___fladd@grs& (0+255),7,b
 11044  0015C2  D00D               	goto	l1452
 11045                           
 11046                           ; BSR set to: 0
 11047  0015C4  C0BC  F0B1         	movff	___fladd@grs,??___fladd
 11048  0015C8  0E7F               	movlw	127
 11049  0015CA  0100               	movlb	0	; () banked
 11050  0015CC  17B1               	andwf	??___fladd& (0+255),f,b
 11051  0015CE  A4D8               	btfss	status,2,c
 11052  0015D0  D003               	goto	l8330
 11053                           
 11054                           ; BSR set to: 0
 11055                           
 11056                           ; BSR set to: 0
 11057  0015D2  0100               	movlb	0	; () banked
 11058  0015D4  A1A9               	btfss	___fladd@b& (0+255),0,b
 11059  0015D6  D003               	goto	l1452
 11060  0015D8                     l8330:
 11061                           
 11062                           ; BSR set to: 0
 11063  0015D8  0E01               	movlw	1
 11064  0015DA  0100               	movlb	0	; () banked
 11065  0015DC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11066  0015DE                     l1452:
 11067                           
 11068                           ; BSR set to: 0
 11069  0015DE  0100               	movlb	0	; () banked
 11070  0015E0  51BA               	movf	___fladd@aexp& (0+255),w,b
 11071  0015E2  0100               	movlb	0	; () banked
 11072  0015E4  B4D8               	btfsc	status,2,c
 11073  0015E6  D026               	goto	l8340
 11074                           
 11075                           ; BSR set to: 0
 11076  0015E8  0E01               	movlw	1
 11077  0015EA  0100               	movlb	0	; () banked
 11078  0015EC  27A9               	addwf	___fladd@b& (0+255),f,b
 11079  0015EE  0E00               	movlw	0
 11080  0015F0  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 11081  0015F2  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 11082  0015F4  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 11083                           
 11084                           ; BSR set to: 0
 11085  0015F6  0100               	movlb	0	; () banked
 11086  0015F8  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 11087  0015FA  D01C               	goto	l8340
 11088                           
 11089                           ; BSR set to: 0
 11090  0015FC  C0A9  F0B1         	movff	___fladd@b,??___fladd
 11091  001600  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 11092  001604  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 11093  001608  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 11094  00160C  0100               	movlb	0	; () banked
 11095  00160E  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
 11096  001610  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
 11097  001612  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
 11098  001614  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
 11099  001616  33B1               	rrcf	??___fladd& (0+255),f,b
 11100  001618  C0B1  F0A9         	movff	??___fladd,___fladd@b
 11101  00161C  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
 11102  001620  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
 11103  001624  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
 11104  001628  0100               	movlb	0	; () banked
 11105  00162A  29BB               	incf	___fladd@bexp& (0+255),w,b
 11106  00162C  B4D8               	btfsc	status,2,c
 11107  00162E  D002               	goto	l8340
 11108                           
 11109                           ; BSR set to: 0
 11110  001630  0100               	movlb	0	; () banked
 11111  001632  2BBB               	incf	___fladd@bexp& (0+255),f,b
 11112  001634                     l8340:
 11113                           
 11114                           ; BSR set to: 0
 11115  001634  0100               	movlb	0	; () banked
 11116  001636  29BB               	incf	___fladd@bexp& (0+255),w,b
 11117  001638  B4D8               	btfsc	status,2,c
 11118  00163A  D005               	goto	l8344
 11119                           
 11120                           ; BSR set to: 0
 11121  00163C  0100               	movlb	0	; () banked
 11122  00163E  51BB               	movf	___fladd@bexp& (0+255),w,b
 11123  001640  0100               	movlb	0	; () banked
 11124  001642  A4D8               	btfss	status,2,c
 11125  001644  D011               	goto	l8348
 11126  001646                     l8344:
 11127                           
 11128                           ; BSR set to: 0
 11129  001646  0E00               	movlw	0
 11130  001648  0100               	movlb	0	; () banked
 11131  00164A  6FA9               	movwf	___fladd@b& (0+255),b
 11132  00164C  0E00               	movlw	0
 11133  00164E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 11134  001650  0E00               	movlw	0
 11135  001652  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 11136  001654  0E00               	movlw	0
 11137  001656  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11138  001658  0100               	movlb	0	; () banked
 11139  00165A  51BB               	movf	___fladd@bexp& (0+255),w,b
 11140  00165C  0100               	movlb	0	; () banked
 11141  00165E  A4D8               	btfss	status,2,c
 11142  001660  D003               	goto	l8348
 11143                           
 11144                           ; BSR set to: 0
 11145  001662  0E00               	movlw	0
 11146  001664  0100               	movlb	0	; () banked
 11147  001666  6FB9               	movwf	___fladd@signs& (0+255),b
 11148  001668                     l8348:
 11149                           
 11150                           ; BSR set to: 0
 11151  001668  0100               	movlb	0	; () banked
 11152  00166A  A1BB               	btfss	___fladd@bexp& (0+255),0,b
 11153  00166C  D003               	goto	l8352
 11154                           
 11155                           ; BSR set to: 0
 11156  00166E  0100               	movlb	0	; () banked
 11157  001670  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 11158  001672  D002               	goto	l8354
 11159  001674                     l8352:
 11160                           
 11161                           ; BSR set to: 0
 11162  001674  0100               	movlb	0	; () banked
 11163  001676  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
 11164  001678                     l8354:
 11165                           
 11166                           ; BSR set to: 0
 11167  001678  0100               	movlb	0	; () banked
 11168  00167A  90D8               	bcf	status,0,c
 11169  00167C  31BB               	rrcf	___fladd@bexp& (0+255),w,b
 11170  00167E  0100               	movlb	0	; () banked
 11171  001680  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11172                           
 11173                           ; BSR set to: 0
 11174  001682  0100               	movlb	0	; () banked
 11175  001684  AFB9               	btfss	___fladd@signs& (0+255),7,b
 11176  001686  D002               	goto	l8360
 11177                           
 11178                           ; BSR set to: 0
 11179  001688  0100               	movlb	0	; () banked
 11180  00168A  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
 11181  00168C                     l8360:
 11182                           
 11183                           ; BSR set to: 0
 11184  00168C  C0A9  F0A9         	movff	___fladd@b,?___fladd
 11185  001690  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
 11186  001694  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
 11187  001698  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
 11188  00169C  0012               	return	
 11189  00169E                     __end_of___fladd:
 11190                           	opt stack 0
 11191                           tblptru	equ	0xFF8
 11192                           tblptrh	equ	0xFF7
 11193                           tblptrl	equ	0xFF6
 11194                           tablat	equ	0xFF5
 11195                           prodh	equ	0xFF4
 11196                           prodl	equ	0xFF3
 11197                           intcon	equ	0xFF2
 11198                           postinc0	equ	0xFEE
 11199                           wreg	equ	0xFE8
 11200                           postdec1	equ	0xFE5
 11201                           fsr1l	equ	0xFE1
 11202                           indf2	equ	0xFDF
 11203                           postinc2	equ	0xFDE
 11204                           postdec2	equ	0xFDD
 11205                           fsr2h	equ	0xFDA
 11206                           fsr2l	equ	0xFD9
 11207                           status	equ	0xFD8
 11208                           
 11209 ;; *************** function ___flneg *****************
 11210 ;; Defined at:
 11211 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flneg.c"
 11212 ;; Parameters:    Size  Location     Type
 11213 ;;  f1              4   21[BANK0 ] unsigned char 
 11214 ;; Auto vars:     Size  Location     Type
 11215 ;;		None
 11216 ;; Return value:  Size  Location     Type
 11217 ;;                  4   21[BANK0 ] unsigned char 
 11218 ;; Registers used:
 11219 ;;		wreg, status,2, status,0
 11220 ;; Tracked objects:
 11221 ;;		On entry : 0/0
 11222 ;;		On exit  : 0/0
 11223 ;;		Unchanged: 0/0
 11224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11225 ;;      Params:         0       4       0       0       0       0       0
 11226 ;;      Locals:         0       0       0       0       0       0       0
 11227 ;;      Temps:          0       0       0       0       0       0       0
 11228 ;;      Totals:         0       4       0       0       0       0       0
 11229 ;;Total ram usage:        4 bytes
 11230 ;; Hardware stack levels used:    1
 11231 ;; Hardware stack levels required when called:    8
 11232 ;; This function calls:
 11233 ;;		Nothing
 11234 ;; This function is called by:
 11235 ;;		_printf
 11236 ;; This function uses a non-reentrant model
 11237 ;;
 11238                           
 11239                           	psect	text36
 11240  005B3E                     __ptext36:
 11241                           	opt stack 0
 11242  005B3E                     ___flneg:
 11243                           	opt stack 19
 11244                           
 11245                           ; BSR set to: 0
 11246                           ;incstack = 0
 11247  005B3E  0100               	movlb	0	; () banked
 11248  005B40  5175               	movf	___flneg@f1& (0+255),w,b
 11249  005B42  0100               	movlb	0	; () banked
 11250  005B44  1176               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11251  005B46  0100               	movlb	0	; () banked
 11252  005B48  1177               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11253  005B4A  0100               	movlb	0	; () banked
 11254  005B4C  1178               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11255  005B4E  B4D8               	btfsc	status,2,c
 11256  005B50  D009               	goto	l8826
 11257                           
 11258                           ; BSR set to: 0
 11259  005B52  0E00               	movlw	0
 11260  005B54  0100               	movlb	0	; () banked
 11261  005B56  1B75               	xorwf	___flneg@f1& (0+255),f,b
 11262  005B58  0E00               	movlw	0
 11263  005B5A  1B76               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11264  005B5C  0E00               	movlw	0
 11265  005B5E  1B77               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11266  005B60  0E80               	movlw	128
 11267  005B62  1B78               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11268  005B64                     l8826:
 11269                           
 11270                           ; BSR set to: 0
 11271  005B64  C075  F075         	movff	___flneg@f1,?___flneg
 11272  005B68  C076  F076         	movff	___flneg@f1+1,?___flneg+1
 11273  005B6C  C077  F077         	movff	___flneg@f1+2,?___flneg+2
 11274  005B70  C078  F078         	movff	___flneg@f1+3,?___flneg+3
 11275  005B74  0012               	return	
 11276  005B76                     __end_of___flneg:
 11277                           	opt stack 0
 11278                           tblptru	equ	0xFF8
 11279                           tblptrh	equ	0xFF7
 11280                           tblptrl	equ	0xFF6
 11281                           tablat	equ	0xFF5
 11282                           prodh	equ	0xFF4
 11283                           prodl	equ	0xFF3
 11284                           intcon	equ	0xFF2
 11285                           postinc0	equ	0xFEE
 11286                           wreg	equ	0xFE8
 11287                           postdec1	equ	0xFE5
 11288                           fsr1l	equ	0xFE1
 11289                           indf2	equ	0xFDF
 11290                           postinc2	equ	0xFDE
 11291                           postdec2	equ	0xFDD
 11292                           fsr2h	equ	0xFDA
 11293                           fsr2l	equ	0xFD9
 11294                           status	equ	0xFD8
 11295                           
 11296 ;; *************** function ___flge *****************
 11297 ;; Defined at:
 11298 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 11299 ;; Parameters:    Size  Location     Type
 11300 ;;  ff1             4   21[BANK0 ] unsigned char 
 11301 ;;  ff2             4   25[BANK0 ] unsigned char 
 11302 ;; Auto vars:     Size  Location     Type
 11303 ;;		None
 11304 ;; Return value:  Size  Location     Type
 11305 ;;		None               void
 11306 ;; Registers used:
 11307 ;;		wreg, status,2, status,0
 11308 ;; Tracked objects:
 11309 ;;		On entry : 0/0
 11310 ;;		On exit  : 0/0
 11311 ;;		Unchanged: 0/0
 11312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11313 ;;      Params:         0       8       0       0       0       0       0
 11314 ;;      Locals:         0       0       0       0       0       0       0
 11315 ;;      Temps:          0       4       0       0       0       0       0
 11316 ;;      Totals:         0      12       0       0       0       0       0
 11317 ;;Total ram usage:       12 bytes
 11318 ;; Hardware stack levels used:    1
 11319 ;; Hardware stack levels required when called:    8
 11320 ;; This function calls:
 11321 ;;		Nothing
 11322 ;; This function is called by:
 11323 ;;		_printf
 11324 ;; This function uses a non-reentrant model
 11325 ;;
 11326                           
 11327                           	psect	text37
 11328  003D70                     __ptext37:
 11329                           	opt stack 0
 11330  003D70                     ___flge:
 11331                           	opt stack 19
 11332                           
 11333                           ; BSR set to: 0
 11334                           ;incstack = 0
 11335  003D70  0E00               	movlw	0
 11336  003D72  0100               	movlb	0	; () banked
 11337  003D74  1575               	andwf	___flge@ff1& (0+255),w,b
 11338  003D76  0100               	movlb	0	; () banked
 11339  003D78  6F7D               	movwf	??___flge& (0+255),b
 11340  003D7A  0E00               	movlw	0
 11341  003D7C  0100               	movlb	0	; () banked
 11342  003D7E  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
 11343  003D80  0100               	movlb	0	; () banked
 11344  003D82  6F7E               	movwf	(??___flge+1)& (0+255),b
 11345  003D84  0E80               	movlw	128
 11346  003D86  0100               	movlb	0	; () banked
 11347  003D88  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
 11348  003D8A  0100               	movlb	0	; () banked
 11349  003D8C  6F7F               	movwf	(??___flge+2)& (0+255),b
 11350  003D8E  0E7F               	movlw	127
 11351  003D90  0100               	movlb	0	; () banked
 11352  003D92  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
 11353  003D94  0100               	movlb	0	; () banked
 11354  003D96  6F80               	movwf	(??___flge+3)& (0+255),b
 11355  003D98  0100               	movlb	0	; () banked
 11356  003D9A  517D               	movf	??___flge& (0+255),w,b
 11357  003D9C  0100               	movlb	0	; () banked
 11358  003D9E  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11359  003DA0  0100               	movlb	0	; () banked
 11360  003DA2  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11361  003DA4  0100               	movlb	0	; () banked
 11362  003DA6  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11363  003DA8  A4D8               	btfss	status,2,c
 11364  003DAA  D009               	goto	l8804
 11365                           
 11366                           ; BSR set to: 0
 11367  003DAC  0E00               	movlw	0
 11368  003DAE  0100               	movlb	0	; () banked
 11369  003DB0  6F75               	movwf	___flge@ff1& (0+255),b
 11370  003DB2  0E00               	movlw	0
 11371  003DB4  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11372  003DB6  0E00               	movlw	0
 11373  003DB8  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11374  003DBA  0E00               	movlw	0
 11375  003DBC  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11376  003DBE                     l8804:
 11377                           
 11378                           ; BSR set to: 0
 11379  003DBE  0E00               	movlw	0
 11380  003DC0  0100               	movlb	0	; () banked
 11381  003DC2  1579               	andwf	___flge@ff2& (0+255),w,b
 11382  003DC4  0100               	movlb	0	; () banked
 11383  003DC6  6F7D               	movwf	??___flge& (0+255),b
 11384  003DC8  0E00               	movlw	0
 11385  003DCA  0100               	movlb	0	; () banked
 11386  003DCC  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
 11387  003DCE  0100               	movlb	0	; () banked
 11388  003DD0  6F7E               	movwf	(??___flge+1)& (0+255),b
 11389  003DD2  0E80               	movlw	128
 11390  003DD4  0100               	movlb	0	; () banked
 11391  003DD6  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
 11392  003DD8  0100               	movlb	0	; () banked
 11393  003DDA  6F7F               	movwf	(??___flge+2)& (0+255),b
 11394  003DDC  0E7F               	movlw	127
 11395  003DDE  0100               	movlb	0	; () banked
 11396  003DE0  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
 11397  003DE2  0100               	movlb	0	; () banked
 11398  003DE4  6F80               	movwf	(??___flge+3)& (0+255),b
 11399  003DE6  0100               	movlb	0	; () banked
 11400  003DE8  517D               	movf	??___flge& (0+255),w,b
 11401  003DEA  0100               	movlb	0	; () banked
 11402  003DEC  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11403  003DEE  0100               	movlb	0	; () banked
 11404  003DF0  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11405  003DF2  0100               	movlb	0	; () banked
 11406  003DF4  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11407  003DF6  A4D8               	btfss	status,2,c
 11408  003DF8  D009               	goto	l8808
 11409                           
 11410                           ; BSR set to: 0
 11411  003DFA  0E00               	movlw	0
 11412  003DFC  0100               	movlb	0	; () banked
 11413  003DFE  6F79               	movwf	___flge@ff2& (0+255),b
 11414  003E00  0E00               	movlw	0
 11415  003E02  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11416  003E04  0E00               	movlw	0
 11417  003E06  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11418  003E08  0E00               	movlw	0
 11419  003E0A  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11420  003E0C                     l8808:
 11421                           
 11422                           ; BSR set to: 0
 11423  003E0C  0100               	movlb	0	; () banked
 11424  003E0E  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
 11425  003E10  D026               	goto	l8812
 11426                           
 11427                           ; BSR set to: 0
 11428  003E12  C075  F07D         	movff	___flge@ff1,??___flge
 11429  003E16  C076  F07E         	movff	___flge@ff1+1,??___flge+1
 11430  003E1A  C077  F07F         	movff	___flge@ff1+2,??___flge+2
 11431  003E1E  C078  F080         	movff	___flge@ff1+3,??___flge+3
 11432  003E22  0100               	movlb	0	; () banked
 11433  003E24  1F7D               	comf	??___flge& (0+255),f,b
 11434  003E26  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11435  003E28  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11436  003E2A  1F80               	comf	(??___flge+3)& (0+255),f,b
 11437  003E2C  2B7D               	incf	??___flge& (0+255),f,b
 11438  003E2E  0E00               	movlw	0
 11439  003E30  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11440  003E32  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11441  003E34  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11442  003E36  0E00               	movlw	0
 11443  003E38  0100               	movlb	0	; () banked
 11444  003E3A  257D               	addwf	??___flge& (0+255),w,b
 11445  003E3C  0100               	movlb	0	; () banked
 11446  003E3E  6F75               	movwf	___flge@ff1& (0+255),b
 11447  003E40  0E00               	movlw	0
 11448  003E42  0100               	movlb	0	; () banked
 11449  003E44  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11450  003E46  0100               	movlb	0	; () banked
 11451  003E48  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11452  003E4A  0E00               	movlw	0
 11453  003E4C  0100               	movlb	0	; () banked
 11454  003E4E  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11455  003E50  0100               	movlb	0	; () banked
 11456  003E52  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11457  003E54  0E80               	movlw	128
 11458  003E56  0100               	movlb	0	; () banked
 11459  003E58  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11460  003E5A  0100               	movlb	0	; () banked
 11461  003E5C  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11462  003E5E                     l8812:
 11463                           
 11464                           ; BSR set to: 0
 11465  003E5E  0100               	movlb	0	; () banked
 11466  003E60  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
 11467  003E62  D026               	goto	l1163
 11468                           
 11469                           ; BSR set to: 0
 11470  003E64  C079  F07D         	movff	___flge@ff2,??___flge
 11471  003E68  C07A  F07E         	movff	___flge@ff2+1,??___flge+1
 11472  003E6C  C07B  F07F         	movff	___flge@ff2+2,??___flge+2
 11473  003E70  C07C  F080         	movff	___flge@ff2+3,??___flge+3
 11474  003E74  0100               	movlb	0	; () banked
 11475  003E76  1F7D               	comf	??___flge& (0+255),f,b
 11476  003E78  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11477  003E7A  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11478  003E7C  1F80               	comf	(??___flge+3)& (0+255),f,b
 11479  003E7E  2B7D               	incf	??___flge& (0+255),f,b
 11480  003E80  0E00               	movlw	0
 11481  003E82  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11482  003E84  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11483  003E86  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11484  003E88  0E00               	movlw	0
 11485  003E8A  0100               	movlb	0	; () banked
 11486  003E8C  257D               	addwf	??___flge& (0+255),w,b
 11487  003E8E  0100               	movlb	0	; () banked
 11488  003E90  6F79               	movwf	___flge@ff2& (0+255),b
 11489  003E92  0E00               	movlw	0
 11490  003E94  0100               	movlb	0	; () banked
 11491  003E96  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11492  003E98  0100               	movlb	0	; () banked
 11493  003E9A  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11494  003E9C  0E00               	movlw	0
 11495  003E9E  0100               	movlb	0	; () banked
 11496  003EA0  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11497  003EA2  0100               	movlb	0	; () banked
 11498  003EA4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11499  003EA6  0E80               	movlw	128
 11500  003EA8  0100               	movlb	0	; () banked
 11501  003EAA  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11502  003EAC  0100               	movlb	0	; () banked
 11503  003EAE  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11504  003EB0                     l1163:
 11505                           
 11506                           ; BSR set to: 0
 11507  003EB0  0E00               	movlw	0
 11508  003EB2  0100               	movlb	0	; () banked
 11509  003EB4  1B75               	xorwf	___flge@ff1& (0+255),f,b
 11510  003EB6  0E00               	movlw	0
 11511  003EB8  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11512  003EBA  0E00               	movlw	0
 11513  003EBC  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11514  003EBE  0E80               	movlw	128
 11515  003EC0  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11516  003EC2  0E00               	movlw	0
 11517  003EC4  0100               	movlb	0	; () banked
 11518  003EC6  1B79               	xorwf	___flge@ff2& (0+255),f,b
 11519  003EC8  0E00               	movlw	0
 11520  003ECA  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11521  003ECC  0E00               	movlw	0
 11522  003ECE  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11523  003ED0  0E80               	movlw	128
 11524  003ED2  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11525  003ED4  0100               	movlb	0	; () banked
 11526  003ED6  5179               	movf	___flge@ff2& (0+255),w,b
 11527  003ED8  0100               	movlb	0	; () banked
 11528  003EDA  5D75               	subwf	___flge@ff1& (0+255),w,b
 11529  003EDC  0100               	movlb	0	; () banked
 11530  003EDE  517A               	movf	(___flge@ff2+1)& (0+255),w,b
 11531  003EE0  0100               	movlb	0	; () banked
 11532  003EE2  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11533  003EE4  0100               	movlb	0	; () banked
 11534  003EE6  517B               	movf	(___flge@ff2+2)& (0+255),w,b
 11535  003EE8  0100               	movlb	0	; () banked
 11536  003EEA  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11537  003EEC  0100               	movlb	0	; () banked
 11538  003EEE  517C               	movf	(___flge@ff2+3)& (0+255),w,b
 11539  003EF0  0100               	movlb	0	; () banked
 11540  003EF2  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11541  003EF4  B0D8               	btfsc	status,0,c
 11542  003EF6  D002               	goto	l8818
 11543                           
 11544                           ; BSR set to: 0
 11545  003EF8  90D8               	bcf	status,0,c
 11546  003EFA  0012               	return	
 11547  003EFC                     l8818:
 11548                           
 11549                           ; BSR set to: 0
 11550  003EFC  80D8               	bsf	status,0,c
 11551                           
 11552                           ; BSR set to: 0
 11553  003EFE  0012               	return	
 11554  003F00                     __end_of___flge:
 11555                           	opt stack 0
 11556                           tblptru	equ	0xFF8
 11557                           tblptrh	equ	0xFF7
 11558                           tblptrl	equ	0xFF6
 11559                           tablat	equ	0xFF5
 11560                           prodh	equ	0xFF4
 11561                           prodl	equ	0xFF3
 11562                           intcon	equ	0xFF2
 11563                           postinc0	equ	0xFEE
 11564                           wreg	equ	0xFE8
 11565                           postdec1	equ	0xFE5
 11566                           fsr1l	equ	0xFE1
 11567                           indf2	equ	0xFDF
 11568                           postinc2	equ	0xFDE
 11569                           postdec2	equ	0xFDD
 11570                           fsr2h	equ	0xFDA
 11571                           fsr2l	equ	0xFD9
 11572                           status	equ	0xFD8
 11573                           
 11574 ;; *************** function _clockConfig *****************
 11575 ;; Defined at:
 11576 ;;		line 76 in file "source/SYSConfig.h"
 11577 ;; Parameters:    Size  Location     Type
 11578 ;;		None
 11579 ;; Auto vars:     Size  Location     Type
 11580 ;;		None
 11581 ;; Return value:  Size  Location     Type
 11582 ;;                  1    wreg      void 
 11583 ;; Registers used:
 11584 ;;		wreg, status,2
 11585 ;; Tracked objects:
 11586 ;;		On entry : 0/0
 11587 ;;		On exit  : 0/0
 11588 ;;		Unchanged: 0/0
 11589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11590 ;;      Params:         0       0       0       0       0       0       0
 11591 ;;      Locals:         0       0       0       0       0       0       0
 11592 ;;      Temps:          0       0       0       0       0       0       0
 11593 ;;      Totals:         0       0       0       0       0       0       0
 11594 ;;Total ram usage:        0 bytes
 11595 ;; Hardware stack levels used:    1
 11596 ;; Hardware stack levels required when called:    8
 11597 ;; This function calls:
 11598 ;;		Nothing
 11599 ;; This function is called by:
 11600 ;;		_main
 11601 ;; This function uses a non-reentrant model
 11602 ;;
 11603                           
 11604                           	psect	text38
 11605  005DE0                     __ptext38:
 11606                           	opt stack 0
 11607  005DE0                     _clockConfig:
 11608                           	opt stack 22
 11609                           
 11610                           ;SYSConfig.h: 77: OSCCONbits.IDLEN = 1;
 11611                           
 11612                           ; BSR set to: 0
 11613                           ;incstack = 0
 11614  005DE0  8ED3               	bsf	4051,7,c	;volatile
 11615                           
 11616                           ;SYSConfig.h: 78: OSCCONbits.IRCF = 0b111;
 11617  005DE2  88D3               	bsf	4051,4,c	;volatile
 11618  005DE4  8AD3               	bsf	4051,5,c	;volatile
 11619  005DE6  8CD3               	bsf	4051,6,c	;volatile
 11620  005DE8                     l81:
 11621  005DE8  A4D3               	btfss	4051,2,c	;volatile
 11622  005DEA  D7FE               	goto	l81
 11623                           
 11624                           ;SYSConfig.h: 80: OSCCONbits.SCS = 0b11;
 11625  005DEC  0E03               	movlw	3
 11626  005DEE  12D3               	iorwf	4051,f,c	;volatile
 11627                           
 11628                           ;SYSConfig.h: 81: OSCCON2bits.MFIOSEL = 0;
 11629  005DF0  98D2               	bcf	4050,4,c	;volatile
 11630                           
 11631                           ;SYSConfig.h: 82: OSCCON2bits.SOSCGO = 0;
 11632  005DF2  96D2               	bcf	4050,3,c	;volatile
 11633                           
 11634                           ;SYSConfig.h: 83: OSCTUNEbits.INTSRC = 0;
 11635  005DF4  9E9B               	bcf	3995,7,c	;volatile
 11636                           
 11637                           ;SYSConfig.h: 84: OSCTUNEbits.TUN = 0b011111;
 11638  005DF6  809B               	bsf	3995,0,c	;volatile
 11639  005DF8  829B               	bsf	3995,1,c	;volatile
 11640  005DFA  849B               	bsf	3995,2,c	;volatile
 11641  005DFC  869B               	bsf	3995,3,c	;volatile
 11642  005DFE  889B               	bsf	3995,4,c	;volatile
 11643  005E00  9A9B               	bcf	3995,5,c	;volatile
 11644                           
 11645                           ;SYSConfig.h: 85: OSCTUNEbits.PLLEN = 1;
 11646  005E02  8C9B               	bsf	3995,6,c	;volatile
 11647                           
 11648                           ;SYSConfig.h: 87: WDTCONbits.SWDTEN = 1;
 11649  005E04  80D1               	bsf	4049,0,c	;volatile
 11650  005E06  0012               	return		;funcret
 11651  005E08                     __end_of_clockConfig:
 11652                           	opt stack 0
 11653                           tblptru	equ	0xFF8
 11654                           tblptrh	equ	0xFF7
 11655                           tblptrl	equ	0xFF6
 11656                           tablat	equ	0xFF5
 11657                           prodh	equ	0xFF4
 11658                           prodl	equ	0xFF3
 11659                           intcon	equ	0xFF2
 11660                           postinc0	equ	0xFEE
 11661                           wreg	equ	0xFE8
 11662                           postdec1	equ	0xFE5
 11663                           fsr1l	equ	0xFE1
 11664                           indf2	equ	0xFDF
 11665                           postinc2	equ	0xFDE
 11666                           postdec2	equ	0xFDD
 11667                           fsr2h	equ	0xFDA
 11668                           fsr2l	equ	0xFD9
 11669                           status	equ	0xFD8
 11670                           
 11671 ;; *************** function _buttonChecking *****************
 11672 ;; Defined at:
 11673 ;;		line 9 in file "source/ButtonController.h"
 11674 ;; Parameters:    Size  Location     Type
 11675 ;;		None
 11676 ;; Auto vars:     Size  Location     Type
 11677 ;;		None
 11678 ;; Return value:  Size  Location     Type
 11679 ;;                  1    wreg      void 
 11680 ;; Registers used:
 11681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11682 ;; Tracked objects:
 11683 ;;		On entry : 0/0
 11684 ;;		On exit  : 0/0
 11685 ;;		Unchanged: 0/0
 11686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11687 ;;      Params:         0       0       0       0       0       0       0
 11688 ;;      Locals:         0       0       0       0       0       0       0
 11689 ;;      Temps:          0       0       0       0       0       0       0
 11690 ;;      Totals:         0       0       0       0       0       0       0
 11691 ;;Total ram usage:        0 bytes
 11692 ;; Hardware stack levels used:    1
 11693 ;; Hardware stack levels required when called:   13
 11694 ;; This function calls:
 11695 ;;		_delay_ms
 11696 ;;		_longPressDOWN
 11697 ;;		_longPressENTER
 11698 ;;		_longPressRETRO
 11699 ;;		_longPressUP
 11700 ;;		_pressDOWN
 11701 ;;		_pressENTER
 11702 ;;		_pressRETRO
 11703 ;;		_pressUP
 11704 ;;		_releaseDOWN
 11705 ;;		_releaseENTER
 11706 ;;		_releaseRETRO
 11707 ;;		_releaseUP
 11708 ;; This function is called by:
 11709 ;;		_main
 11710 ;; This function uses a non-reentrant model
 11711 ;;
 11712                           
 11713                           	psect	text39
 11714  002B5C                     __ptext39:
 11715                           	opt stack 0
 11716  002B5C                     _buttonChecking:
 11717                           	opt stack 17
 11718                           
 11719                           ;ButtonController.h: 10: if(!PORTAbits.RA2 && lastSttUP) {
 11720                           
 11721                           ;incstack = 0
 11722  002B5C  B480               	btfsc	3968,2,c	;volatile
 11723  002B5E  D010               	goto	l746
 11724  002B60  0100               	movlb	0	; () banked
 11725  002B62  51E2               	movf	_lastSttUP& (0+255),w,b
 11726  002B64  0100               	movlb	0	; () banked
 11727  002B66  B4D8               	btfsc	status,2,c
 11728  002B68  D00B               	goto	l746
 11729                           
 11730                           ; BSR set to: 0
 11731                           ;ButtonController.h: 11: lastSttUP = 0;
 11732  002B6A  0E00               	movlw	0
 11733  002B6C  0100               	movlb	0	; () banked
 11734  002B6E  6FE2               	movwf	_lastSttUP& (0+255),b
 11735                           
 11736                           ; BSR set to: 0
 11737                           ;ButtonController.h: 12: delay_ms(200);
 11738  002B70  0E00               	movlw	0
 11739  002B72  0100               	movlb	0	; () banked
 11740  002B74  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11741  002B76  0EC8               	movlw	200
 11742  002B78  6F75               	movwf	delay_ms@del& (0+255),b
 11743  002B7A  EC5B  F02D         	call	_delay_ms	;wreg free
 11744                           
 11745                           ;ButtonController.h: 13: }else if(PORTAbits.RA2 && !lastSttUP) {
 11746  002B7E  D044               	goto	l10400
 11747  002B80                     l746:
 11748  002B80  A480               	btfss	3968,2,c	;volatile
 11749  002B82  D016               	goto	l10378
 11750  002B84  0100               	movlb	0	; () banked
 11751  002B86  51E2               	movf	_lastSttUP& (0+255),w,b
 11752  002B88  0100               	movlb	0	; () banked
 11753  002B8A  A4D8               	btfss	status,2,c
 11754  002B8C  D011               	goto	l10378
 11755                           
 11756                           ; BSR set to: 0
 11757                           ;ButtonController.h: 14: lastSttUP = 1;
 11758  002B8E  0E01               	movlw	1
 11759  002B90  0100               	movlb	0	; () banked
 11760  002B92  6FE2               	movwf	_lastSttUP& (0+255),b
 11761                           
 11762                           ; BSR set to: 0
 11763                           ;ButtonController.h: 15: if(holdUPcont < 10)
 11764  002B94  0E0A               	movlw	10
 11765  002B96  0100               	movlb	0	; () banked
 11766  002B98  61D5               	cpfslt	_holdUPcont& (0+255),b
 11767  002B9A  D002               	goto	l10376
 11768                           
 11769                           ; BSR set to: 0
 11770                           ;ButtonController.h: 16: pressUP();
 11771  002B9C  ECEA  F020         	call	_pressUP	;wreg free
 11772  002BA0                     l10376:
 11773                           
 11774                           ;ButtonController.h: 17: delay_ms(50);
 11775  002BA0  0E00               	movlw	0
 11776  002BA2  0100               	movlb	0	; () banked
 11777  002BA4  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11778  002BA6  0E32               	movlw	50
 11779  002BA8  6F75               	movwf	delay_ms@del& (0+255),b
 11780  002BAA  EC5B  F02D         	call	_delay_ms	;wreg free
 11781                           
 11782                           ;ButtonController.h: 18: }else if(PORTAbits.RA2 == lastSttUP) {
 11783  002BAE  D02C               	goto	l10400
 11784  002BB0                     l10378:
 11785  002BB0  A480               	btfss	3968,2,c	;volatile
 11786  002BB2  D002               	goto	u13170
 11787  002BB4  0E01               	movlw	1
 11788  002BB6  D001               	goto	u13176
 11789  002BB8                     u13170:
 11790  002BB8  0E00               	movlw	0
 11791  002BBA                     u13176:
 11792  002BBA  0100               	movlb	0	; () banked
 11793  002BBC  19E2               	xorwf	_lastSttUP& (0+255),w,b
 11794  002BBE  A4D8               	btfss	status,2,c
 11795  002BC0  D023               	goto	l10400
 11796                           
 11797                           ; BSR set to: 0
 11798                           ;ButtonController.h: 19: if(PORTAbits.RA2) {
 11799  002BC2  A480               	btfss	3968,2,c	;volatile
 11800  002BC4  D006               	goto	l10386
 11801                           
 11802                           ; BSR set to: 0
 11803                           ;ButtonController.h: 20: holdUPcont = 0;
 11804  002BC6  0E00               	movlw	0
 11805  002BC8  0100               	movlb	0	; () banked
 11806  002BCA  6FD5               	movwf	_holdUPcont& (0+255),b
 11807                           
 11808                           ; BSR set to: 0
 11809                           ;ButtonController.h: 21: releaseUP();
 11810  002BCC  EC5F  F02F         	call	_releaseUP	;wreg free
 11811                           
 11812                           ;ButtonController.h: 22: }else {
 11813  002BD0  D01B               	goto	l10400
 11814  002BD2                     l10386:
 11815                           
 11816                           ;ButtonController.h: 23: if(!UPsecurLock)
 11817  002BD2  0101               	movlb	1	; () banked
 11818  002BD4  5157               	movf	_UPsecurLock& (0+255),w,b
 11819  002BD6  A4D8               	btfss	status,2,c
 11820  002BD8  D002               	goto	l10390
 11821                           
 11822                           ; BSR set to: 1
 11823                           ;ButtonController.h: 24: holdUPcont++;
 11824  002BDA  0100               	movlb	0	; () banked
 11825  002BDC  2BD5               	incf	_holdUPcont& (0+255),f,b
 11826  002BDE                     l10390:
 11827                           
 11828                           ;ButtonController.h: 25: if(holdUPcont > 9) {
 11829  002BDE  0E09               	movlw	9
 11830  002BE0  0100               	movlb	0	; () banked
 11831  002BE2  65D5               	cpfsgt	_holdUPcont& (0+255),b
 11832  002BE4  D00A               	goto	l10398
 11833                           
 11834                           ; BSR set to: 0
 11835                           ;ButtonController.h: 26: if(holdUPcont < 26)
 11836  002BE6  0E1A               	movlw	26
 11837  002BE8  0100               	movlb	0	; () banked
 11838  002BEA  61D5               	cpfslt	_holdUPcont& (0+255),b
 11839  002BEC  D003               	goto	l10396
 11840                           
 11841                           ; BSR set to: 0
 11842                           ;ButtonController.h: 27: longPressUP();
 11843  002BEE  EC5D  F02B         	call	_longPressUP	;wreg free
 11844  002BF2  D003               	goto	l10398
 11845  002BF4                     l10396:
 11846                           
 11847                           ;ButtonController.h: 28: else
 11848                           ;ButtonController.h: 29: UPsecurLock = 1;
 11849  002BF4  0E01               	movlw	1
 11850  002BF6  0101               	movlb	1	; () banked
 11851  002BF8  6F57               	movwf	_UPsecurLock& (0+255),b
 11852  002BFA                     l10398:
 11853                           
 11854                           ;ButtonController.h: 30: }
 11855                           ;ButtonController.h: 31: delay_ms(200);
 11856  002BFA  0E00               	movlw	0
 11857  002BFC  0100               	movlb	0	; () banked
 11858  002BFE  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11859  002C00  0EC8               	movlw	200
 11860  002C02  6F75               	movwf	delay_ms@del& (0+255),b
 11861  002C04  EC5B  F02D         	call	_delay_ms	;wreg free
 11862  002C08                     l10400:
 11863                           
 11864                           ;ButtonController.h: 32: }
 11865                           ;ButtonController.h: 33: }
 11866                           ;ButtonController.h: 34: if(!PORTAbits.RA3 && lastSttDOWN) {
 11867  002C08  B680               	btfsc	3968,3,c	;volatile
 11868  002C0A  D00D               	goto	l758
 11869  002C0C  5043               	movf	_lastSttDOWN,w,c
 11870  002C0E  B4D8               	btfsc	status,2,c
 11871  002C10  D00A               	goto	l758
 11872                           
 11873                           ;ButtonController.h: 35: lastSttDOWN = 0;
 11874  002C12  0E00               	movlw	0
 11875  002C14  6E43               	movwf	_lastSttDOWN,c
 11876                           
 11877                           ;ButtonController.h: 36: delay_ms(200);
 11878  002C16  0E00               	movlw	0
 11879  002C18  0100               	movlb	0	; () banked
 11880  002C1A  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11881  002C1C  0EC8               	movlw	200
 11882  002C1E  6F75               	movwf	delay_ms@del& (0+255),b
 11883  002C20  EC5B  F02D         	call	_delay_ms	;wreg free
 11884                           
 11885                           ;ButtonController.h: 37: }else if(PORTAbits.RA3 && !lastSttDOWN) {
 11886  002C24  D040               	goto	l10440
 11887  002C26                     l758:
 11888  002C26  A680               	btfss	3968,3,c	;volatile
 11889  002C28  D013               	goto	l10418
 11890  002C2A  5043               	movf	_lastSttDOWN,w,c
 11891  002C2C  A4D8               	btfss	status,2,c
 11892  002C2E  D010               	goto	l10418
 11893                           
 11894                           ;ButtonController.h: 38: lastSttDOWN = 1;
 11895  002C30  0E01               	movlw	1
 11896  002C32  6E43               	movwf	_lastSttDOWN,c
 11897                           
 11898                           ;ButtonController.h: 39: if(holdDOWNcont < 10)
 11899  002C34  0E0A               	movlw	10
 11900  002C36  0101               	movlb	1	; () banked
 11901  002C38  6159               	cpfslt	_holdDOWNcont& (0+255),b
 11902  002C3A  D002               	goto	l10416
 11903                           
 11904                           ; BSR set to: 1
 11905                           ;ButtonController.h: 40: pressDOWN();
 11906  002C3C  EC3F  F023         	call	_pressDOWN	;wreg free
 11907  002C40                     l10416:
 11908                           
 11909                           ;ButtonController.h: 41: delay_ms(50);
 11910  002C40  0E00               	movlw	0
 11911  002C42  0100               	movlb	0	; () banked
 11912  002C44  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11913  002C46  0E32               	movlw	50
 11914  002C48  6F75               	movwf	delay_ms@del& (0+255),b
 11915  002C4A  EC5B  F02D         	call	_delay_ms	;wreg free
 11916                           
 11917                           ;ButtonController.h: 42: }else if(PORTAbits.RA3 == lastSttDOWN) {
 11918  002C4E  D02B               	goto	l10440
 11919  002C50                     l10418:
 11920  002C50  A680               	btfss	3968,3,c	;volatile
 11921  002C52  D002               	goto	u13280
 11922  002C54  0E01               	movlw	1
 11923  002C56  D001               	goto	u13286
 11924  002C58                     u13280:
 11925  002C58  0E00               	movlw	0
 11926  002C5A                     u13286:
 11927  002C5A  1843               	xorwf	_lastSttDOWN,w,c
 11928  002C5C  A4D8               	btfss	status,2,c
 11929  002C5E  D023               	goto	l10440
 11930                           
 11931                           ;ButtonController.h: 43: if(PORTAbits.RA3) {
 11932  002C60  A680               	btfss	3968,3,c	;volatile
 11933  002C62  D006               	goto	l10426
 11934                           
 11935                           ;ButtonController.h: 44: holdDOWNcont = 0;
 11936  002C64  0E00               	movlw	0
 11937  002C66  0101               	movlb	1	; () banked
 11938  002C68  6F59               	movwf	_holdDOWNcont& (0+255),b
 11939                           
 11940                           ; BSR set to: 1
 11941                           ;ButtonController.h: 45: releaseDOWN();
 11942  002C6A  EC74  F02F         	call	_releaseDOWN	;wreg free
 11943                           
 11944                           ;ButtonController.h: 46: }else {
 11945  002C6E  D01B               	goto	l10440
 11946  002C70                     l10426:
 11947                           
 11948                           ;ButtonController.h: 47: if(!DOWNsecurLock)
 11949  002C70  0101               	movlb	1	; () banked
 11950  002C72  5151               	movf	_DOWNsecurLock& (0+255),w,b
 11951  002C74  A4D8               	btfss	status,2,c
 11952  002C76  D002               	goto	l10430
 11953                           
 11954                           ; BSR set to: 1
 11955                           ;ButtonController.h: 48: holdDOWNcont++;
 11956  002C78  0101               	movlb	1	; () banked
 11957  002C7A  2B59               	incf	_holdDOWNcont& (0+255),f,b
 11958  002C7C                     l10430:
 11959                           
 11960                           ; BSR set to: 1
 11961                           ;ButtonController.h: 49: if(holdDOWNcont > 9) {
 11962  002C7C  0E09               	movlw	9
 11963  002C7E  0101               	movlb	1	; () banked
 11964  002C80  6559               	cpfsgt	_holdDOWNcont& (0+255),b
 11965  002C82  D00A               	goto	l10438
 11966                           
 11967                           ; BSR set to: 1
 11968                           ;ButtonController.h: 50: if(holdDOWNcont < 26)
 11969  002C84  0E1A               	movlw	26
 11970  002C86  0101               	movlb	1	; () banked
 11971  002C88  6159               	cpfslt	_holdDOWNcont& (0+255),b
 11972  002C8A  D003               	goto	l10436
 11973                           
 11974                           ; BSR set to: 1
 11975                           ;ButtonController.h: 51: longPressDOWN();
 11976  002C8C  EC3C  F02E         	call	_longPressDOWN	;wreg free
 11977  002C90  D003               	goto	l10438
 11978  002C92                     l10436:
 11979                           
 11980                           ;ButtonController.h: 52: else
 11981                           ;ButtonController.h: 53: DOWNsecurLock = 1;
 11982  002C92  0E01               	movlw	1
 11983  002C94  0101               	movlb	1	; () banked
 11984  002C96  6F51               	movwf	_DOWNsecurLock& (0+255),b
 11985  002C98                     l10438:
 11986                           
 11987                           ;ButtonController.h: 54: }
 11988                           ;ButtonController.h: 55: delay_ms(200);
 11989  002C98  0E00               	movlw	0
 11990  002C9A  0100               	movlb	0	; () banked
 11991  002C9C  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11992  002C9E  0EC8               	movlw	200
 11993  002CA0  6F75               	movwf	delay_ms@del& (0+255),b
 11994  002CA2  EC5B  F02D         	call	_delay_ms	;wreg free
 11995  002CA6                     l10440:
 11996                           
 11997                           ;ButtonController.h: 56: }
 11998                           ;ButtonController.h: 57: }
 11999                           ;ButtonController.h: 58: if(!PORTAbits.RA4 && lastSttRETRO) {
 12000  002CA6  B880               	btfsc	3968,4,c	;volatile
 12001  002CA8  D00D               	goto	l770
 12002  002CAA  5045               	movf	_lastSttRETRO,w,c
 12003  002CAC  B4D8               	btfsc	status,2,c
 12004  002CAE  D00A               	goto	l770
 12005                           
 12006                           ;ButtonController.h: 59: lastSttRETRO = 0;
 12007  002CB0  0E00               	movlw	0
 12008  002CB2  6E45               	movwf	_lastSttRETRO,c
 12009                           
 12010                           ;ButtonController.h: 60: delay_ms(200);
 12011  002CB4  0E00               	movlw	0
 12012  002CB6  0100               	movlb	0	; () banked
 12013  002CB8  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12014  002CBA  0EC8               	movlw	200
 12015  002CBC  6F75               	movwf	delay_ms@del& (0+255),b
 12016  002CBE  EC5B  F02D         	call	_delay_ms	;wreg free
 12017                           
 12018                           ;ButtonController.h: 61: }else if(PORTAbits.RA4 && !lastSttRETRO) {
 12019  002CC2  D040               	goto	l10478
 12020  002CC4                     l770:
 12021  002CC4  A880               	btfss	3968,4,c	;volatile
 12022  002CC6  D013               	goto	l10456
 12023  002CC8  5045               	movf	_lastSttRETRO,w,c
 12024  002CCA  A4D8               	btfss	status,2,c
 12025  002CCC  D010               	goto	l10456
 12026                           
 12027                           ;ButtonController.h: 62: lastSttRETRO = 1;
 12028  002CCE  0E01               	movlw	1
 12029  002CD0  6E45               	movwf	_lastSttRETRO,c
 12030                           
 12031                           ;ButtonController.h: 63: if(holdRETROcont < 10)
 12032  002CD2  0E0A               	movlw	10
 12033  002CD4  0101               	movlb	1	; () banked
 12034  002CD6  615A               	cpfslt	_holdRETROcont& (0+255),b
 12035  002CD8  D002               	goto	l773
 12036                           
 12037                           ; BSR set to: 1
 12038                           ;ButtonController.h: 64: pressRETRO();
 12039  002CDA  EC4A  F02C         	call	_pressRETRO	;wreg free
 12040  002CDE                     l773:
 12041                           
 12042                           ;ButtonController.h: 65: delay_ms(50);
 12043  002CDE  0E00               	movlw	0
 12044  002CE0  0100               	movlb	0	; () banked
 12045  002CE2  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12046  002CE4  0E32               	movlw	50
 12047  002CE6  6F75               	movwf	delay_ms@del& (0+255),b
 12048  002CE8  EC5B  F02D         	call	_delay_ms	;wreg free
 12049                           
 12050                           ;ButtonController.h: 66: }else if(PORTAbits.RA4 == lastSttRETRO) {
 12051  002CEC  D02B               	goto	l10478
 12052  002CEE                     l10456:
 12053  002CEE  A880               	btfss	3968,4,c	;volatile
 12054  002CF0  D002               	goto	u13390
 12055  002CF2  0E01               	movlw	1
 12056  002CF4  D001               	goto	u13396
 12057  002CF6                     u13390:
 12058  002CF6  0E00               	movlw	0
 12059  002CF8                     u13396:
 12060  002CF8  1845               	xorwf	_lastSttRETRO,w,c
 12061  002CFA  A4D8               	btfss	status,2,c
 12062  002CFC  D023               	goto	l10478
 12063                           
 12064                           ;ButtonController.h: 67: if(PORTAbits.RA4) {
 12065  002CFE  A880               	btfss	3968,4,c	;volatile
 12066  002D00  D006               	goto	l10464
 12067                           
 12068                           ;ButtonController.h: 68: holdRETROcont = 0;
 12069  002D02  0E00               	movlw	0
 12070  002D04  0101               	movlb	1	; () banked
 12071  002D06  6F5A               	movwf	_holdRETROcont& (0+255),b
 12072                           
 12073                           ; BSR set to: 1
 12074                           ;ButtonController.h: 69: releaseRETRO();
 12075  002D08  EC66  F02F         	call	_releaseRETRO	;wreg free
 12076                           
 12077                           ;ButtonController.h: 70: }else {
 12078  002D0C  D01B               	goto	l10478
 12079  002D0E                     l10464:
 12080                           
 12081                           ;ButtonController.h: 71: if(!RETROsecurLock)
 12082  002D0E  0101               	movlb	1	; () banked
 12083  002D10  5155               	movf	_RETROsecurLock& (0+255),w,b
 12084  002D12  A4D8               	btfss	status,2,c
 12085  002D14  D002               	goto	l10468
 12086                           
 12087                           ; BSR set to: 1
 12088                           ;ButtonController.h: 72: holdRETROcont++;
 12089  002D16  0101               	movlb	1	; () banked
 12090  002D18  2B5A               	incf	_holdRETROcont& (0+255),f,b
 12091  002D1A                     l10468:
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;ButtonController.h: 73: if(holdRETROcont > 9) {
 12095  002D1A  0E09               	movlw	9
 12096  002D1C  0101               	movlb	1	; () banked
 12097  002D1E  655A               	cpfsgt	_holdRETROcont& (0+255),b
 12098  002D20  D00A               	goto	l10476
 12099                           
 12100                           ; BSR set to: 1
 12101                           ;ButtonController.h: 74: if(holdRETROcont < 26)
 12102  002D22  0E1A               	movlw	26
 12103  002D24  0101               	movlb	1	; () banked
 12104  002D26  615A               	cpfslt	_holdRETROcont& (0+255),b
 12105  002D28  D003               	goto	l10474
 12106                           
 12107                           ; BSR set to: 1
 12108                           ;ButtonController.h: 75: longPressRETRO();
 12109  002D2A  ECED  F02C         	call	_longPressRETRO	;wreg free
 12110  002D2E  D003               	goto	l10476
 12111  002D30                     l10474:
 12112                           
 12113                           ;ButtonController.h: 76: else
 12114                           ;ButtonController.h: 77: RETROsecurLock = 1;
 12115  002D30  0E01               	movlw	1
 12116  002D32  0101               	movlb	1	; () banked
 12117  002D34  6F55               	movwf	_RETROsecurLock& (0+255),b
 12118  002D36                     l10476:
 12119                           
 12120                           ;ButtonController.h: 78: }
 12121                           ;ButtonController.h: 79: delay_ms(200);
 12122  002D36  0E00               	movlw	0
 12123  002D38  0100               	movlb	0	; () banked
 12124  002D3A  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12125  002D3C  0EC8               	movlw	200
 12126  002D3E  6F75               	movwf	delay_ms@del& (0+255),b
 12127  002D40  EC5B  F02D         	call	_delay_ms	;wreg free
 12128  002D44                     l10478:
 12129                           
 12130                           ;ButtonController.h: 80: }
 12131                           ;ButtonController.h: 81: }
 12132                           ;ButtonController.h: 82: if(!PORTAbits.RA5 && lastSttENTER) {
 12133  002D44  BA80               	btfsc	3968,5,c	;volatile
 12134  002D46  D00D               	goto	l782
 12135  002D48  5044               	movf	_lastSttENTER,w,c
 12136  002D4A  B4D8               	btfsc	status,2,c
 12137  002D4C  D00A               	goto	l782
 12138                           
 12139                           ;ButtonController.h: 83: lastSttENTER = 0;
 12140  002D4E  0E00               	movlw	0
 12141  002D50  6E44               	movwf	_lastSttENTER,c
 12142                           
 12143                           ;ButtonController.h: 84: delay_ms(200);
 12144  002D52  0E00               	movlw	0
 12145  002D54  0100               	movlb	0	; () banked
 12146  002D56  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12147  002D58  0EC8               	movlw	200
 12148  002D5A  6F75               	movwf	delay_ms@del& (0+255),b
 12149  002D5C  EC5B  F02D         	call	_delay_ms	;wreg free
 12150                           
 12151                           ;ButtonController.h: 85: }else if(PORTAbits.RA5 && !lastSttENTER) {
 12152  002D60  0012               	return	
 12153  002D62                     l782:
 12154  002D62  AA80               	btfss	3968,5,c	;volatile
 12155  002D64  D013               	goto	l10496
 12156  002D66  5044               	movf	_lastSttENTER,w,c
 12157  002D68  A4D8               	btfss	status,2,c
 12158  002D6A  D010               	goto	l10496
 12159                           
 12160                           ;ButtonController.h: 86: lastSttENTER = 1;
 12161  002D6C  0E01               	movlw	1
 12162  002D6E  6E44               	movwf	_lastSttENTER,c
 12163                           
 12164                           ;ButtonController.h: 87: if(holdENTERcont < 10)
 12165  002D70  0E0A               	movlw	10
 12166  002D72  0100               	movlb	0	; () banked
 12167  002D74  61D4               	cpfslt	_holdENTERcont& (0+255),b
 12168  002D76  D002               	goto	l10494
 12169                           
 12170                           ; BSR set to: 0
 12171                           ;ButtonController.h: 88: pressENTER();
 12172  002D78  ECF2  F016         	call	_pressENTER	;wreg free
 12173  002D7C                     l10494:
 12174                           
 12175                           ;ButtonController.h: 89: delay_ms(50);
 12176  002D7C  0E00               	movlw	0
 12177  002D7E  0100               	movlb	0	; () banked
 12178  002D80  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12179  002D82  0E32               	movlw	50
 12180  002D84  6F75               	movwf	delay_ms@del& (0+255),b
 12181  002D86  EC5B  F02D         	call	_delay_ms	;wreg free
 12182                           
 12183                           ;ButtonController.h: 90: }else if(PORTAbits.RA5 == lastSttENTER) {
 12184  002D8A  0012               	return	
 12185  002D8C                     l10496:
 12186  002D8C  AA80               	btfss	3968,5,c	;volatile
 12187  002D8E  D002               	goto	u13500
 12188  002D90  0E01               	movlw	1
 12189  002D92  D001               	goto	u13506
 12190  002D94                     u13500:
 12191  002D94  0E00               	movlw	0
 12192  002D96                     u13506:
 12193  002D96  1844               	xorwf	_lastSttENTER,w,c
 12194  002D98  A4D8               	btfss	status,2,c
 12195  002D9A  0012               	return	
 12196                           
 12197                           ;ButtonController.h: 91: if(PORTAbits.RA5) {
 12198  002D9C  AA80               	btfss	3968,5,c	;volatile
 12199  002D9E  D006               	goto	l10504
 12200                           
 12201                           ;ButtonController.h: 92: holdENTERcont = 0;
 12202  002DA0  0E00               	movlw	0
 12203  002DA2  0100               	movlb	0	; () banked
 12204  002DA4  6FD4               	movwf	_holdENTERcont& (0+255),b
 12205                           
 12206                           ; BSR set to: 0
 12207                           ;ButtonController.h: 93: releaseENTER();
 12208  002DA6  EC6D  F02F         	call	_releaseENTER	;wreg free
 12209                           
 12210                           ;ButtonController.h: 94: }else {
 12211  002DAA  0012               	return	
 12212  002DAC                     l10504:
 12213                           
 12214                           ;ButtonController.h: 95: if(!ENTERsecurLock)
 12215  002DAC  0101               	movlb	1	; () banked
 12216  002DAE  5153               	movf	_ENTERsecurLock& (0+255),w,b
 12217  002DB0  A4D8               	btfss	status,2,c
 12218  002DB2  D002               	goto	l10508
 12219                           
 12220                           ; BSR set to: 1
 12221                           ;ButtonController.h: 96: holdENTERcont++;
 12222  002DB4  0100               	movlb	0	; () banked
 12223  002DB6  2BD4               	incf	_holdENTERcont& (0+255),f,b
 12224  002DB8                     l10508:
 12225                           
 12226                           ;ButtonController.h: 97: if(holdENTERcont > 9) {
 12227  002DB8  0E09               	movlw	9
 12228  002DBA  0100               	movlb	0	; () banked
 12229  002DBC  65D4               	cpfsgt	_holdENTERcont& (0+255),b
 12230  002DBE  D00A               	goto	l10516
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;ButtonController.h: 98: if(holdENTERcont < 26)
 12234  002DC0  0E1A               	movlw	26
 12235  002DC2  0100               	movlb	0	; () banked
 12236  002DC4  61D4               	cpfslt	_holdENTERcont& (0+255),b
 12237  002DC6  D003               	goto	l10514
 12238                           
 12239                           ; BSR set to: 0
 12240                           ;ButtonController.h: 99: longPressENTER();
 12241  002DC8  ECEA  F028         	call	_longPressENTER	;wreg free
 12242  002DCC  D003               	goto	l10516
 12243  002DCE                     l10514:
 12244                           
 12245                           ;ButtonController.h: 100: else
 12246                           ;ButtonController.h: 101: ENTERsecurLock = 1;
 12247  002DCE  0E01               	movlw	1
 12248  002DD0  0101               	movlb	1	; () banked
 12249  002DD2  6F53               	movwf	_ENTERsecurLock& (0+255),b
 12250  002DD4                     l10516:
 12251                           
 12252                           ;ButtonController.h: 102: }
 12253                           ;ButtonController.h: 103: delay_ms(200);
 12254  002DD4  0E00               	movlw	0
 12255  002DD6  0100               	movlb	0	; () banked
 12256  002DD8  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12257  002DDA  0EC8               	movlw	200
 12258  002DDC  6F75               	movwf	delay_ms@del& (0+255),b
 12259  002DDE  EC5B  F02D         	call	_delay_ms	;wreg free
 12260  002DE2  0012               	return	
 12261  002DE4                     __end_of_buttonChecking:
 12262                           	opt stack 0
 12263                           tblptru	equ	0xFF8
 12264                           tblptrh	equ	0xFF7
 12265                           tblptrl	equ	0xFF6
 12266                           tablat	equ	0xFF5
 12267                           prodh	equ	0xFF4
 12268                           prodl	equ	0xFF3
 12269                           intcon	equ	0xFF2
 12270                           postinc0	equ	0xFEE
 12271                           wreg	equ	0xFE8
 12272                           postdec1	equ	0xFE5
 12273                           fsr1l	equ	0xFE1
 12274                           indf2	equ	0xFDF
 12275                           postinc2	equ	0xFDE
 12276                           postdec2	equ	0xFDD
 12277                           fsr2h	equ	0xFDA
 12278                           fsr2l	equ	0xFD9
 12279                           status	equ	0xFD8
 12280                           
 12281 ;; *************** function _releaseUP *****************
 12282 ;; Defined at:
 12283 ;;		line 212 in file "source/DisplayProtocol.h"
 12284 ;; Parameters:    Size  Location     Type
 12285 ;;		None
 12286 ;; Auto vars:     Size  Location     Type
 12287 ;;		None
 12288 ;; Return value:  Size  Location     Type
 12289 ;;                  1    wreg      void 
 12290 ;; Registers used:
 12291 ;;		wreg, status,2
 12292 ;; Tracked objects:
 12293 ;;		On entry : 0/0
 12294 ;;		On exit  : 0/0
 12295 ;;		Unchanged: 0/0
 12296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12297 ;;      Params:         0       0       0       0       0       0       0
 12298 ;;      Locals:         0       0       0       0       0       0       0
 12299 ;;      Temps:          0       0       0       0       0       0       0
 12300 ;;      Totals:         0       0       0       0       0       0       0
 12301 ;;Total ram usage:        0 bytes
 12302 ;; Hardware stack levels used:    1
 12303 ;; Hardware stack levels required when called:    8
 12304 ;; This function calls:
 12305 ;;		Nothing
 12306 ;; This function is called by:
 12307 ;;		_buttonChecking
 12308 ;; This function uses a non-reentrant model
 12309 ;;
 12310                           
 12311                           	psect	text40
 12312  005EBE                     __ptext40:
 12313                           	opt stack 0
 12314  005EBE                     _releaseUP:
 12315                           	opt stack 21
 12316                           
 12317                           ;DisplayProtocol.h: 213: UPisLP = 0;
 12318                           
 12319                           ;incstack = 0
 12320  005EBE  0E00               	movlw	0
 12321  005EC0  0101               	movlb	1	; () banked
 12322  005EC2  6F56               	movwf	_UPisLP& (0+255),b
 12323                           
 12324                           ;DisplayProtocol.h: 214: UPsecurLock = 0;
 12325  005EC4  0E00               	movlw	0
 12326  005EC6  0101               	movlb	1	; () banked
 12327  005EC8  6F57               	movwf	_UPsecurLock& (0+255),b
 12328                           
 12329                           ; BSR set to: 1
 12330  005ECA  0012               	return		;funcret
 12331  005ECC                     __end_of_releaseUP:
 12332                           	opt stack 0
 12333                           tblptru	equ	0xFF8
 12334                           tblptrh	equ	0xFF7
 12335                           tblptrl	equ	0xFF6
 12336                           tablat	equ	0xFF5
 12337                           prodh	equ	0xFF4
 12338                           prodl	equ	0xFF3
 12339                           intcon	equ	0xFF2
 12340                           postinc0	equ	0xFEE
 12341                           wreg	equ	0xFE8
 12342                           postdec1	equ	0xFE5
 12343                           fsr1l	equ	0xFE1
 12344                           indf2	equ	0xFDF
 12345                           postinc2	equ	0xFDE
 12346                           postdec2	equ	0xFDD
 12347                           fsr2h	equ	0xFDA
 12348                           fsr2l	equ	0xFD9
 12349                           status	equ	0xFD8
 12350                           
 12351 ;; *************** function _releaseRETRO *****************
 12352 ;; Defined at:
 12353 ;;		line 306 in file "source/DisplayProtocol.h"
 12354 ;; Parameters:    Size  Location     Type
 12355 ;;		None
 12356 ;; Auto vars:     Size  Location     Type
 12357 ;;		None
 12358 ;; Return value:  Size  Location     Type
 12359 ;;                  1    wreg      void 
 12360 ;; Registers used:
 12361 ;;		wreg, status,2
 12362 ;; Tracked objects:
 12363 ;;		On entry : 0/0
 12364 ;;		On exit  : 0/0
 12365 ;;		Unchanged: 0/0
 12366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12367 ;;      Params:         0       0       0       0       0       0       0
 12368 ;;      Locals:         0       0       0       0       0       0       0
 12369 ;;      Temps:          0       0       0       0       0       0       0
 12370 ;;      Totals:         0       0       0       0       0       0       0
 12371 ;;Total ram usage:        0 bytes
 12372 ;; Hardware stack levels used:    1
 12373 ;; Hardware stack levels required when called:    8
 12374 ;; This function calls:
 12375 ;;		Nothing
 12376 ;; This function is called by:
 12377 ;;		_buttonChecking
 12378 ;; This function uses a non-reentrant model
 12379 ;;
 12380                           
 12381                           	psect	text41
 12382  005ECC                     __ptext41:
 12383                           	opt stack 0
 12384  005ECC                     _releaseRETRO:
 12385                           	opt stack 21
 12386                           
 12387                           ;DisplayProtocol.h: 307: RETROisLP = 0;
 12388                           
 12389                           ; BSR set to: 1
 12390                           ;incstack = 0
 12391  005ECC  0E00               	movlw	0
 12392  005ECE  0101               	movlb	1	; () banked
 12393  005ED0  6F54               	movwf	_RETROisLP& (0+255),b
 12394                           
 12395                           ;DisplayProtocol.h: 308: RETROsecurLock = 0;
 12396  005ED2  0E00               	movlw	0
 12397  005ED4  0101               	movlb	1	; () banked
 12398  005ED6  6F55               	movwf	_RETROsecurLock& (0+255),b
 12399                           
 12400                           ; BSR set to: 1
 12401  005ED8  0012               	return		;funcret
 12402  005EDA                     __end_of_releaseRETRO:
 12403                           	opt stack 0
 12404                           tblptru	equ	0xFF8
 12405                           tblptrh	equ	0xFF7
 12406                           tblptrl	equ	0xFF6
 12407                           tablat	equ	0xFF5
 12408                           prodh	equ	0xFF4
 12409                           prodl	equ	0xFF3
 12410                           intcon	equ	0xFF2
 12411                           postinc0	equ	0xFEE
 12412                           wreg	equ	0xFE8
 12413                           postdec1	equ	0xFE5
 12414                           fsr1l	equ	0xFE1
 12415                           indf2	equ	0xFDF
 12416                           postinc2	equ	0xFDE
 12417                           postdec2	equ	0xFDD
 12418                           fsr2h	equ	0xFDA
 12419                           fsr2l	equ	0xFD9
 12420                           status	equ	0xFD8
 12421                           
 12422 ;; *************** function _releaseENTER *****************
 12423 ;; Defined at:
 12424 ;;		line 421 in file "source/DisplayProtocol.h"
 12425 ;; Parameters:    Size  Location     Type
 12426 ;;		None
 12427 ;; Auto vars:     Size  Location     Type
 12428 ;;		None
 12429 ;; Return value:  Size  Location     Type
 12430 ;;                  1    wreg      void 
 12431 ;; Registers used:
 12432 ;;		wreg, status,2
 12433 ;; Tracked objects:
 12434 ;;		On entry : 0/0
 12435 ;;		On exit  : 0/0
 12436 ;;		Unchanged: 0/0
 12437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12438 ;;      Params:         0       0       0       0       0       0       0
 12439 ;;      Locals:         0       0       0       0       0       0       0
 12440 ;;      Temps:          0       0       0       0       0       0       0
 12441 ;;      Totals:         0       0       0       0       0       0       0
 12442 ;;Total ram usage:        0 bytes
 12443 ;; Hardware stack levels used:    1
 12444 ;; Hardware stack levels required when called:    8
 12445 ;; This function calls:
 12446 ;;		Nothing
 12447 ;; This function is called by:
 12448 ;;		_buttonChecking
 12449 ;; This function uses a non-reentrant model
 12450 ;;
 12451                           
 12452                           	psect	text42
 12453  005EDA                     __ptext42:
 12454                           	opt stack 0
 12455  005EDA                     _releaseENTER:
 12456                           	opt stack 21
 12457                           
 12458                           ;DisplayProtocol.h: 422: ENTERisLP = 0;
 12459                           
 12460                           ; BSR set to: 1
 12461                           ;incstack = 0
 12462  005EDA  0E00               	movlw	0
 12463  005EDC  0101               	movlb	1	; () banked
 12464  005EDE  6F52               	movwf	_ENTERisLP& (0+255),b
 12465                           
 12466                           ;DisplayProtocol.h: 423: ENTERsecurLock = 0;
 12467  005EE0  0E00               	movlw	0
 12468  005EE2  0101               	movlb	1	; () banked
 12469  005EE4  6F53               	movwf	_ENTERsecurLock& (0+255),b
 12470                           
 12471                           ; BSR set to: 1
 12472  005EE6  0012               	return		;funcret
 12473  005EE8                     __end_of_releaseENTER:
 12474                           	opt stack 0
 12475                           tblptru	equ	0xFF8
 12476                           tblptrh	equ	0xFF7
 12477                           tblptrl	equ	0xFF6
 12478                           tablat	equ	0xFF5
 12479                           prodh	equ	0xFF4
 12480                           prodl	equ	0xFF3
 12481                           intcon	equ	0xFF2
 12482                           postinc0	equ	0xFEE
 12483                           wreg	equ	0xFE8
 12484                           postdec1	equ	0xFE5
 12485                           fsr1l	equ	0xFE1
 12486                           indf2	equ	0xFDF
 12487                           postinc2	equ	0xFDE
 12488                           postdec2	equ	0xFDD
 12489                           fsr2h	equ	0xFDA
 12490                           fsr2l	equ	0xFD9
 12491                           status	equ	0xFD8
 12492                           
 12493 ;; *************** function _releaseDOWN *****************
 12494 ;; Defined at:
 12495 ;;		line 270 in file "source/DisplayProtocol.h"
 12496 ;; Parameters:    Size  Location     Type
 12497 ;;		None
 12498 ;; Auto vars:     Size  Location     Type
 12499 ;;		None
 12500 ;; Return value:  Size  Location     Type
 12501 ;;                  1    wreg      void 
 12502 ;; Registers used:
 12503 ;;		wreg, status,2
 12504 ;; Tracked objects:
 12505 ;;		On entry : 0/0
 12506 ;;		On exit  : 0/0
 12507 ;;		Unchanged: 0/0
 12508 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12509 ;;      Params:         0       0       0       0       0       0       0
 12510 ;;      Locals:         0       0       0       0       0       0       0
 12511 ;;      Temps:          0       0       0       0       0       0       0
 12512 ;;      Totals:         0       0       0       0       0       0       0
 12513 ;;Total ram usage:        0 bytes
 12514 ;; Hardware stack levels used:    1
 12515 ;; Hardware stack levels required when called:    8
 12516 ;; This function calls:
 12517 ;;		Nothing
 12518 ;; This function is called by:
 12519 ;;		_buttonChecking
 12520 ;; This function uses a non-reentrant model
 12521 ;;
 12522                           
 12523                           	psect	text43
 12524  005EE8                     __ptext43:
 12525                           	opt stack 0
 12526  005EE8                     _releaseDOWN:
 12527                           	opt stack 21
 12528                           
 12529                           ;DisplayProtocol.h: 271: DOWNisLP = 0;
 12530                           
 12531                           ; BSR set to: 1
 12532                           ;incstack = 0
 12533  005EE8  0E00               	movlw	0
 12534  005EEA  0101               	movlb	1	; () banked
 12535  005EEC  6F50               	movwf	_DOWNisLP& (0+255),b
 12536                           
 12537                           ;DisplayProtocol.h: 272: DOWNsecurLock = 0;
 12538  005EEE  0E00               	movlw	0
 12539  005EF0  0101               	movlb	1	; () banked
 12540  005EF2  6F51               	movwf	_DOWNsecurLock& (0+255),b
 12541                           
 12542                           ; BSR set to: 1
 12543  005EF4  0012               	return		;funcret
 12544  005EF6                     __end_of_releaseDOWN:
 12545                           	opt stack 0
 12546                           tblptru	equ	0xFF8
 12547                           tblptrh	equ	0xFF7
 12548                           tblptrl	equ	0xFF6
 12549                           tablat	equ	0xFF5
 12550                           prodh	equ	0xFF4
 12551                           prodl	equ	0xFF3
 12552                           intcon	equ	0xFF2
 12553                           postinc0	equ	0xFEE
 12554                           wreg	equ	0xFE8
 12555                           postdec1	equ	0xFE5
 12556                           fsr1l	equ	0xFE1
 12557                           indf2	equ	0xFDF
 12558                           postinc2	equ	0xFDE
 12559                           postdec2	equ	0xFDD
 12560                           fsr2h	equ	0xFDA
 12561                           fsr2l	equ	0xFD9
 12562                           status	equ	0xFD8
 12563                           
 12564 ;; *************** function _pressUP *****************
 12565 ;; Defined at:
 12566 ;;		line 150 in file "source/DisplayProtocol.h"
 12567 ;; Parameters:    Size  Location     Type
 12568 ;;		None
 12569 ;; Auto vars:     Size  Location     Type
 12570 ;;		None
 12571 ;; Return value:  Size  Location     Type
 12572 ;;                  1    wreg      void 
 12573 ;; Registers used:
 12574 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12575 ;; Tracked objects:
 12576 ;;		On entry : 0/0
 12577 ;;		On exit  : 0/0
 12578 ;;		Unchanged: 0/0
 12579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12580 ;;      Params:         0       0       0       0       0       0       0
 12581 ;;      Locals:         0       0       0       0       0       0       0
 12582 ;;      Temps:          0       1       0       0       0       0       0
 12583 ;;      Totals:         0       1       0       0       0       0       0
 12584 ;;Total ram usage:        1 bytes
 12585 ;; Hardware stack levels used:    1
 12586 ;; Hardware stack levels required when called:    9
 12587 ;; This function calls:
 12588 ;;		_chanValDigUP
 12589 ;; This function is called by:
 12590 ;;		_buttonChecking
 12591 ;; This function uses a non-reentrant model
 12592 ;;
 12593                           
 12594                           	psect	text44
 12595  0041D4                     __ptext44:
 12596                           	opt stack 0
 12597  0041D4                     _pressUP:
 12598                           	opt stack 20
 12599                           
 12600                           ;DisplayProtocol.h: 151: if (actualScreen == 0 || actualScreen == 4) {
 12601                           
 12602                           ; BSR set to: 1
 12603                           ;incstack = 0
 12604  0041D4  0100               	movlb	0	; () banked
 12605  0041D6  51D3               	movf	_actualScreen& (0+255),w,b
 12606  0041D8  B4D8               	btfsc	status,2,c
 12607  0041DA  D005               	goto	l7104
 12608                           
 12609                           ; BSR set to: 0
 12610  0041DC  0E04               	movlw	4
 12611  0041DE  0100               	movlb	0	; () banked
 12612  0041E0  19D3               	xorwf	_actualScreen& (0+255),w,b
 12613  0041E2  A4D8               	btfss	status,2,c
 12614  0041E4  D00C               	goto	l7110
 12615  0041E6                     l7104:
 12616                           
 12617                           ; BSR set to: 0
 12618                           ;DisplayProtocol.h: 152: menuSection++;
 12619  0041E6  0100               	movlb	0	; () banked
 12620  0041E8  2BD6               	incf	_menuSection& (0+255),f,b
 12621                           
 12622                           ; BSR set to: 0
 12623                           ;DisplayProtocol.h: 153: if (menuSection > 6)
 12624  0041EA  0100               	movlb	0	; () banked
 12625  0041EC  51D6               	movf	_menuSection& (0+255),w,b
 12626  0041EE  0A80               	xorlw	128
 12627  0041F0  0F79               	addlw	-135
 12628  0041F2  A0D8               	btfss	status,0,c
 12629  0041F4  0012               	return	
 12630                           
 12631                           ; BSR set to: 0
 12632                           ;DisplayProtocol.h: 154: menuSection = 0;
 12633  0041F6  0E00               	movlw	0
 12634  0041F8  0100               	movlb	0	; () banked
 12635  0041FA  6FD6               	movwf	_menuSection& (0+255),b
 12636                           
 12637                           ; BSR set to: 0
 12638                           ;DisplayProtocol.h: 155: } else if (actualScreen == 1) {
 12639  0041FC  0012               	return	
 12640  0041FE                     l7110:
 12641                           
 12642                           ; BSR set to: 0
 12643  0041FE  0100               	movlb	0	; () banked
 12644  004200  05D3               	decf	_actualScreen& (0+255),w,b
 12645  004202  A4D8               	btfss	status,2,c
 12646  004204  D024               	goto	l7116
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;DisplayProtocol.h: 156: introducido[passSection]++;
 12650  004206  0100               	movlb	0	; () banked
 12651  004208  51D7               	movf	_passSection& (0+255),w,b
 12652  00420A  0D01               	mullw	1
 12653  00420C  0E3F               	movlw	low _introducido
 12654  00420E  24F3               	addwf	prodl,w,c
 12655  004210  6ED9               	movwf	fsr2l,c
 12656  004212  0E01               	movlw	high _introducido
 12657  004214  20F4               	addwfc	prodh,w,c
 12658  004216  6EDA               	movwf	fsr2h,c
 12659  004218  2ADF               	incf	indf2,f,c
 12660                           
 12661                           ;DisplayProtocol.h: 157: if (introducido[passSection] > 9)
 12662  00421A  0100               	movlb	0	; () banked
 12663  00421C  51D7               	movf	_passSection& (0+255),w,b
 12664  00421E  0D01               	mullw	1
 12665  004220  0E3F               	movlw	low _introducido
 12666  004222  24F3               	addwf	prodl,w,c
 12667  004224  6ED9               	movwf	fsr2l,c
 12668  004226  0E01               	movlw	high _introducido
 12669  004228  20F4               	addwfc	prodh,w,c
 12670  00422A  6EDA               	movwf	fsr2h,c
 12671  00422C  50DF               	movf	indf2,w,c
 12672  00422E  0A80               	xorlw	128
 12673  004230  0F76               	addlw	-138
 12674  004232  A0D8               	btfss	status,0,c
 12675  004234  0012               	return	
 12676                           
 12677                           ; BSR set to: 0
 12678                           ;DisplayProtocol.h: 158: introducido[passSection] = 0;
 12679  004236  0100               	movlb	0	; () banked
 12680  004238  51D7               	movf	_passSection& (0+255),w,b
 12681  00423A  0D01               	mullw	1
 12682  00423C  0E3F               	movlw	low _introducido
 12683  00423E  24F3               	addwf	prodl,w,c
 12684  004240  6ED9               	movwf	fsr2l,c
 12685  004242  0E01               	movlw	high _introducido
 12686  004244  20F4               	addwfc	prodh,w,c
 12687  004246  6EDA               	movwf	fsr2h,c
 12688  004248  0E00               	movlw	0
 12689  00424A  6EDF               	movwf	indf2,c
 12690                           
 12691                           ; BSR set to: 0
 12692                           ;DisplayProtocol.h: 159: } else if (actualScreen == 2 || actualScreen == 3
 12693  00424C  0012               	return	
 12694  00424E                     l7116:
 12695                           
 12696                           ; BSR set to: 0
 12697                           ;DisplayProtocol.h: 160: || actualScreen == 10) {
 12698  00424E  0E02               	movlw	2
 12699  004250  0100               	movlb	0	; () banked
 12700  004252  19D3               	xorwf	_actualScreen& (0+255),w,b
 12701  004254  B4D8               	btfsc	status,2,c
 12702  004256  D00A               	goto	l7122
 12703                           
 12704                           ; BSR set to: 0
 12705  004258  0E03               	movlw	3
 12706  00425A  0100               	movlb	0	; () banked
 12707  00425C  19D3               	xorwf	_actualScreen& (0+255),w,b
 12708  00425E  B4D8               	btfsc	status,2,c
 12709  004260  D005               	goto	l7122
 12710                           
 12711                           ; BSR set to: 0
 12712  004262  0E0A               	movlw	10
 12713  004264  0100               	movlb	0	; () banked
 12714  004266  19D3               	xorwf	_actualScreen& (0+255),w,b
 12715  004268  A4D8               	btfss	status,2,c
 12716  00426A  D011               	goto	l7128
 12717  00426C                     l7122:
 12718                           
 12719                           ; BSR set to: 0
 12720                           ;DisplayProtocol.h: 161: selSN = !selSN;
 12721  00426C  0100               	movlb	0	; () banked
 12722  00426E  51D9               	movf	_selSN& (0+255),w,b
 12723  004270  A4D8               	btfss	status,2,c
 12724  004272  D002               	goto	u8290
 12725  004274  0E01               	movlw	1
 12726  004276  D001               	goto	u8300
 12727  004278                     u8290:
 12728  004278  0E00               	movlw	0
 12729  00427A                     u8300:
 12730  00427A  0100               	movlb	0	; () banked
 12731  00427C  6FD9               	movwf	_selSN& (0+255),b
 12732                           
 12733                           ; BSR set to: 0
 12734                           ;DisplayProtocol.h: 162: if(selSN > 1)
 12735  00427E  0E01               	movlw	1
 12736  004280  0100               	movlb	0	; () banked
 12737  004282  65D9               	cpfsgt	_selSN& (0+255),b
 12738  004284  0012               	return	
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;DisplayProtocol.h: 163: selSN = 0;
 12742  004286  0E00               	movlw	0
 12743  004288  0100               	movlb	0	; () banked
 12744  00428A  6FD9               	movwf	_selSN& (0+255),b
 12745                           
 12746                           ; BSR set to: 0
 12747                           ;DisplayProtocol.h: 164: }else if(actualScreen == 5) {
 12748  00428C  0012               	return	
 12749  00428E                     l7128:
 12750                           
 12751                           ; BSR set to: 0
 12752  00428E  0E05               	movlw	5
 12753  004290  0100               	movlb	0	; () banked
 12754  004292  19D3               	xorwf	_actualScreen& (0+255),w,b
 12755  004294  A4D8               	btfss	status,2,c
 12756  004296  0012               	return	
 12757  004298  D01C               	goto	l7150
 12758  00429A                     l7132:
 12759                           
 12760                           ; BSR set to: 0
 12761                           ;DisplayProtocol.h: 169: selKMT++;
 12762  00429A  0100               	movlb	0	; () banked
 12763  00429C  2BD8               	incf	_selKMT& (0+255),f,b
 12764                           
 12765                           ; BSR set to: 0
 12766                           ;DisplayProtocol.h: 170: if(selKMT > 2)
 12767  00429E  0100               	movlb	0	; () banked
 12768  0042A0  51D8               	movf	_selKMT& (0+255),w,b
 12769  0042A2  0A80               	xorlw	128
 12770  0042A4  0F7D               	addlw	-131
 12771  0042A6  A0D8               	btfss	status,0,c
 12772  0042A8  0012               	return	
 12773                           
 12774                           ; BSR set to: 0
 12775                           ;DisplayProtocol.h: 171: selKMT = 0;
 12776  0042AA  0E00               	movlw	0
 12777  0042AC  0100               	movlb	0	; () banked
 12778  0042AE  6FD8               	movwf	_selKMT& (0+255),b
 12779                           
 12780                           ; BSR set to: 0
 12781                           ;DisplayProtocol.h: 172: break;
 12782  0042B0  0012               	return	
 12783  0042B2                     l7138:
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;DisplayProtocol.h: 174: chanValDigUP();
 12787  0042B2  EC63  F026         	call	_chanValDigUP	;wreg free
 12788                           
 12789                           ;DisplayProtocol.h: 175: break;
 12790  0042B6  0012               	return	
 12791  0042B8                     l7140:
 12792                           
 12793                           ;DisplayProtocol.h: 177: chanVals++;
 12794  0042B8  0101               	movlb	1	; () banked
 12795  0042BA  4B4A               	infsnz	_chanVals& (0+255),f,b
 12796  0042BC  2B4B               	incf	(_chanVals+1)& (0+255),f,b
 12797                           
 12798                           ;DisplayProtocol.h: 178: break;
 12799  0042BE  0012               	return	
 12800  0042C0                     l7142:
 12801                           
 12802                           ;DisplayProtocol.h: 180: chanValDigUP();
 12803  0042C0  EC63  F026         	call	_chanValDigUP	;wreg free
 12804                           
 12805                           ;DisplayProtocol.h: 181: break;
 12806  0042C4  0012               	return	
 12807  0042C6                     l7144:
 12808                           
 12809                           ;DisplayProtocol.h: 183: chanValDigUP();
 12810  0042C6  EC63  F026         	call	_chanValDigUP	;wreg free
 12811                           
 12812                           ;DisplayProtocol.h: 184: break;
 12813  0042CA  0012               	return	
 12814  0042CC                     l7146:
 12815                           
 12816                           ;DisplayProtocol.h: 186: chanValDigUP();
 12817  0042CC  EC63  F026         	call	_chanValDigUP	;wreg free
 12818                           
 12819                           ;DisplayProtocol.h: 188: }
 12820                           ;DisplayProtocol.h: 189: }
 12821                           
 12822                           ;DisplayProtocol.h: 187: break;
 12823  0042D0  0012               	return	
 12824  0042D2                     l7150:
 12825  0042D2  0100               	movlb	0	; () banked
 12826  0042D4  51D6               	movf	_menuSection& (0+255),w,b
 12827                           
 12828                           ; Switch size 1, requested type "space"
 12829                           ; Number of cases is 7, Range of values is 0 to 6
 12830                           ; switch strategies available:
 12831                           ; Name         Instructions Cycles
 12832                           ; simple_byte           22    12 (average)
 12833                           ;	Chosen strategy is simple_byte
 12834  0042D6  0A00               	xorlw	0	; case 0
 12835  0042D8  B4D8               	btfsc	status,2,c
 12836  0042DA  0012               	return	
 12837  0042DC  0A01               	xorlw	1	; case 1
 12838  0042DE  B4D8               	btfsc	status,2,c
 12839  0042E0  D7DC               	goto	l7132
 12840  0042E2  0A03               	xorlw	3	; case 2
 12841  0042E4  B4D8               	btfsc	status,2,c
 12842  0042E6  D7E5               	goto	l7138
 12843  0042E8  0A01               	xorlw	1	; case 3
 12844  0042EA  B4D8               	btfsc	status,2,c
 12845  0042EC  D7E5               	goto	l7140
 12846  0042EE  0A07               	xorlw	7	; case 4
 12847  0042F0  B4D8               	btfsc	status,2,c
 12848  0042F2  D7E6               	goto	l7142
 12849  0042F4  0A01               	xorlw	1	; case 5
 12850  0042F6  B4D8               	btfsc	status,2,c
 12851  0042F8  D7E6               	goto	l7144
 12852  0042FA  0A03               	xorlw	3	; case 6
 12853  0042FC  A4D8               	btfss	status,2,c
 12854                           
 12855                           ; BSR set to: 0
 12856                           
 12857                           ; BSR set to: 0
 12858                           
 12859                           ; BSR set to: 0
 12860                           
 12861                           ; BSR set to: 0
 12862  0042FE  0012               	return	
 12863  004300  D7E5               	goto	l7146
 12864  004302                     __end_of_pressUP:
 12865                           	opt stack 0
 12866                           tblptru	equ	0xFF8
 12867                           tblptrh	equ	0xFF7
 12868                           tblptrl	equ	0xFF6
 12869                           tablat	equ	0xFF5
 12870                           prodh	equ	0xFF4
 12871                           prodl	equ	0xFF3
 12872                           intcon	equ	0xFF2
 12873                           postinc0	equ	0xFEE
 12874                           wreg	equ	0xFE8
 12875                           postdec1	equ	0xFE5
 12876                           fsr1l	equ	0xFE1
 12877                           indf2	equ	0xFDF
 12878                           postinc2	equ	0xFDE
 12879                           postdec2	equ	0xFDD
 12880                           fsr2h	equ	0xFDA
 12881                           fsr2l	equ	0xFD9
 12882                           status	equ	0xFD8
 12883                           
 12884 ;; *************** function _chanValDigUP *****************
 12885 ;; Defined at:
 12886 ;;		line 27 in file "source/DisplayProtocol.h"
 12887 ;; Parameters:    Size  Location     Type
 12888 ;;		None
 12889 ;; Auto vars:     Size  Location     Type
 12890 ;;		None
 12891 ;; Return value:  Size  Location     Type
 12892 ;;                  1    wreg      void 
 12893 ;; Registers used:
 12894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12895 ;; Tracked objects:
 12896 ;;		On entry : 0/0
 12897 ;;		On exit  : 0/0
 12898 ;;		Unchanged: 0/0
 12899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12900 ;;      Params:         0       0       0       0       0       0       0
 12901 ;;      Locals:         0       0       0       0       0       0       0
 12902 ;;      Temps:          0       5       0       0       0       0       0
 12903 ;;      Totals:         0       5       0       0       0       0       0
 12904 ;;Total ram usage:        5 bytes
 12905 ;; Hardware stack levels used:    1
 12906 ;; Hardware stack levels required when called:    8
 12907 ;; This function calls:
 12908 ;;		Nothing
 12909 ;; This function is called by:
 12910 ;;		_pressUP
 12911 ;; This function uses a non-reentrant model
 12912 ;;
 12913                           
 12914                           	psect	text45
 12915  004CC6                     __ptext45:
 12916                           	opt stack 0
 12917  004CC6                     _chanValDigUP:
 12918                           	opt stack 20
 12919                           
 12920                           ;DisplayProtocol.h: 28: chanValdig[chanValSection]++;
 12921                           
 12922                           ;incstack = 0
 12923  004CC6  0100               	movlb	0	; () banked
 12924  004CC8  51E1               	movf	_chanValSection& (0+255),w,b
 12925  004CCA  0D01               	mullw	1
 12926  004CCC  0E31               	movlw	low _chanValdig
 12927  004CCE  24F3               	addwf	prodl,w,c
 12928  004CD0  6ED9               	movwf	fsr2l,c
 12929  004CD2  0E01               	movlw	high _chanValdig
 12930  004CD4  20F4               	addwfc	prodh,w,c
 12931  004CD6  6EDA               	movwf	fsr2h,c
 12932  004CD8  2ADF               	incf	indf2,f,c
 12933                           
 12934                           ;DisplayProtocol.h: 29: if(chanValdig[chanValSection] > 9) {
 12935  004CDA  0100               	movlb	0	; () banked
 12936  004CDC  51E1               	movf	_chanValSection& (0+255),w,b
 12937  004CDE  0D01               	mullw	1
 12938  004CE0  0E31               	movlw	low _chanValdig
 12939  004CE2  24F3               	addwf	prodl,w,c
 12940  004CE4  6ED9               	movwf	fsr2l,c
 12941  004CE6  0E01               	movlw	high _chanValdig
 12942  004CE8  20F4               	addwfc	prodh,w,c
 12943  004CEA  6EDA               	movwf	fsr2h,c
 12944  004CEC  50DF               	movf	indf2,w,c
 12945  004CEE  0A80               	xorlw	128
 12946  004CF0  0F76               	addlw	-138
 12947  004CF2  A0D8               	btfss	status,0,c
 12948  004CF4  0012               	return	
 12949                           
 12950                           ; BSR set to: 0
 12951                           ;DisplayProtocol.h: 30: chanValdig[chanValSection] = 0;
 12952  004CF6  0100               	movlb	0	; () banked
 12953  004CF8  51E1               	movf	_chanValSection& (0+255),w,b
 12954  004CFA  0D01               	mullw	1
 12955  004CFC  0E31               	movlw	low _chanValdig
 12956  004CFE  24F3               	addwf	prodl,w,c
 12957  004D00  6ED9               	movwf	fsr2l,c
 12958  004D02  0E01               	movlw	high _chanValdig
 12959  004D04  20F4               	addwfc	prodh,w,c
 12960  004D06  6EDA               	movwf	fsr2h,c
 12961  004D08  0E00               	movlw	0
 12962  004D0A  6EDF               	movwf	indf2,c
 12963                           
 12964                           ; BSR set to: 0
 12965                           ;DisplayProtocol.h: 31: if(chanValSection > 1 && chanValdig[chanValSection - 1] < 9)
 12966  004D0C  0100               	movlb	0	; () banked
 12967  004D0E  51E1               	movf	_chanValSection& (0+255),w,b
 12968  004D10  0A80               	xorlw	128
 12969  004D12  0F7E               	addlw	-130
 12970  004D14  A0D8               	btfss	status,0,c
 12971  004D16  0012               	return	
 12972                           
 12973                           ; BSR set to: 0
 12974  004D18  0EFF               	movlw	255
 12975  004D1A  0100               	movlb	0	; () banked
 12976  004D1C  6F75               	movwf	??_chanValDigUP& (0+255),b
 12977  004D1E  0EFF               	movlw	255
 12978  004D20  0100               	movlb	0	; () banked
 12979  004D22  6F76               	movwf	(??_chanValDigUP+1)& (0+255),b
 12980  004D24  C0E1  F077         	movff	_chanValSection,??_chanValDigUP+2
 12981  004D28  0100               	movlb	0	; () banked
 12982  004D2A  6B78               	clrf	(??_chanValDigUP+3)& (0+255),b
 12983  004D2C  BF77               	btfsc	(??_chanValDigUP+2)& (0+255),7,b
 12984  004D2E  0778               	decf	(??_chanValDigUP+3)& (0+255),f,b
 12985  004D30  0100               	movlb	0	; () banked
 12986  004D32  5175               	movf	??_chanValDigUP& (0+255),w,b
 12987  004D34  0100               	movlb	0	; () banked
 12988  004D36  2777               	addwf	(??_chanValDigUP+2)& (0+255),f,b
 12989  004D38  0100               	movlb	0	; () banked
 12990  004D3A  5176               	movf	(??_chanValDigUP+1)& (0+255),w,b
 12991  004D3C  0100               	movlb	0	; () banked
 12992  004D3E  2378               	addwfc	(??_chanValDigUP+3)& (0+255),f,b
 12993  004D40  0E31               	movlw	low _chanValdig
 12994  004D42  0100               	movlb	0	; () banked
 12995  004D44  2577               	addwf	(??_chanValDigUP+2)& (0+255),w,b
 12996  004D46  6ED9               	movwf	fsr2l,c
 12997  004D48  0E01               	movlw	high _chanValdig
 12998  004D4A  0100               	movlb	0	; () banked
 12999  004D4C  2178               	addwfc	(??_chanValDigUP+3)& (0+255),w,b
 13000  004D4E  6EDA               	movwf	fsr2h,c
 13001  004D50  50DF               	movf	indf2,w,c
 13002  004D52  0A80               	xorlw	128
 13003  004D54  0F77               	addlw	-137
 13004  004D56  B0D8               	btfsc	status,0,c
 13005  004D58  0012               	return	
 13006                           
 13007                           ; BSR set to: 0
 13008                           ;DisplayProtocol.h: 32: chanValdig[chanValSection - 1]++;
 13009  004D5A  0EFF               	movlw	255
 13010  004D5C  0100               	movlb	0	; () banked
 13011  004D5E  6F75               	movwf	??_chanValDigUP& (0+255),b
 13012  004D60  0EFF               	movlw	255
 13013  004D62  0100               	movlb	0	; () banked
 13014  004D64  6F76               	movwf	(??_chanValDigUP+1)& (0+255),b
 13015  004D66  C0E1  F077         	movff	_chanValSection,??_chanValDigUP+2
 13016  004D6A  0100               	movlb	0	; () banked
 13017  004D6C  6B78               	clrf	(??_chanValDigUP+3)& (0+255),b
 13018  004D6E  BF77               	btfsc	(??_chanValDigUP+2)& (0+255),7,b
 13019  004D70  0778               	decf	(??_chanValDigUP+3)& (0+255),f,b
 13020  004D72  0100               	movlb	0	; () banked
 13021  004D74  5175               	movf	??_chanValDigUP& (0+255),w,b
 13022  004D76  0100               	movlb	0	; () banked
 13023  004D78  2777               	addwf	(??_chanValDigUP+2)& (0+255),f,b
 13024  004D7A  0100               	movlb	0	; () banked
 13025  004D7C  5176               	movf	(??_chanValDigUP+1)& (0+255),w,b
 13026  004D7E  0100               	movlb	0	; () banked
 13027  004D80  2378               	addwfc	(??_chanValDigUP+3)& (0+255),f,b
 13028  004D82  0E31               	movlw	low _chanValdig
 13029  004D84  0100               	movlb	0	; () banked
 13030  004D86  2577               	addwf	(??_chanValDigUP+2)& (0+255),w,b
 13031  004D88  6ED9               	movwf	fsr2l,c
 13032  004D8A  0E01               	movlw	high _chanValdig
 13033  004D8C  0100               	movlb	0	; () banked
 13034  004D8E  2178               	addwfc	(??_chanValDigUP+3)& (0+255),w,b
 13035  004D90  6EDA               	movwf	fsr2h,c
 13036  004D92  2ADF               	incf	indf2,f,c
 13037                           
 13038                           ; BSR set to: 0
 13039  004D94  0012               	return	
 13040  004D96                     __end_of_chanValDigUP:
 13041                           	opt stack 0
 13042                           tblptru	equ	0xFF8
 13043                           tblptrh	equ	0xFF7
 13044                           tblptrl	equ	0xFF6
 13045                           tablat	equ	0xFF5
 13046                           prodh	equ	0xFF4
 13047                           prodl	equ	0xFF3
 13048                           intcon	equ	0xFF2
 13049                           postinc0	equ	0xFEE
 13050                           wreg	equ	0xFE8
 13051                           postdec1	equ	0xFE5
 13052                           fsr1l	equ	0xFE1
 13053                           indf2	equ	0xFDF
 13054                           postinc2	equ	0xFDE
 13055                           postdec2	equ	0xFDD
 13056                           fsr2h	equ	0xFDA
 13057                           fsr2l	equ	0xFD9
 13058                           status	equ	0xFD8
 13059                           
 13060 ;; *************** function _pressRETRO *****************
 13061 ;; Defined at:
 13062 ;;		line 275 in file "source/DisplayProtocol.h"
 13063 ;; Parameters:    Size  Location     Type
 13064 ;;		None
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;		None
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2, status,0
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13076 ;;      Params:         0       0       0       0       0       0       0
 13077 ;;      Locals:         0       0       0       0       0       0       0
 13078 ;;      Temps:          0       0       0       0       0       0       0
 13079 ;;      Totals:         0       0       0       0       0       0       0
 13080 ;;Total ram usage:        0 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:    8
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_buttonChecking
 13087 ;; This function uses a non-reentrant model
 13088 ;;
 13089                           
 13090                           	psect	text46
 13091  005894                     __ptext46:
 13092                           	opt stack 0
 13093  005894                     _pressRETRO:
 13094                           	opt stack 21
 13095                           
 13096                           ;DisplayProtocol.h: 276: if (actualScreen == 1) {
 13097                           
 13098                           ; BSR set to: 0
 13099                           ;incstack = 0
 13100  005894  0100               	movlb	0	; () banked
 13101  005896  05D3               	decf	_actualScreen& (0+255),w,b
 13102  005898  A4D8               	btfss	status,2,c
 13103  00589A  D004               	goto	l7246
 13104                           
 13105                           ; BSR set to: 0
 13106                           ;DisplayProtocol.h: 277: actualScreen = 0;
 13107  00589C  0E00               	movlw	0
 13108  00589E  0100               	movlb	0	; () banked
 13109  0058A0  6FD3               	movwf	_actualScreen& (0+255),b
 13110                           
 13111                           ;DisplayProtocol.h: 278: }else if (actualScreen == 2 || actualScreen == 3
 13112  0058A2  0012               	return	
 13113  0058A4                     l7246:
 13114                           
 13115                           ; BSR set to: 0
 13116                           ;DisplayProtocol.h: 279: || actualScreen == 10) {
 13117  0058A4  0E02               	movlw	2
 13118  0058A6  0100               	movlb	0	; () banked
 13119  0058A8  19D3               	xorwf	_actualScreen& (0+255),w,b
 13120  0058AA  B4D8               	btfsc	status,2,c
 13121  0058AC  D00A               	goto	l612
 13122                           
 13123                           ; BSR set to: 0
 13124  0058AE  0E03               	movlw	3
 13125  0058B0  0100               	movlb	0	; () banked
 13126  0058B2  19D3               	xorwf	_actualScreen& (0+255),w,b
 13127  0058B4  B4D8               	btfsc	status,2,c
 13128  0058B6  D005               	goto	l612
 13129                           
 13130                           ; BSR set to: 0
 13131  0058B8  0E0A               	movlw	10
 13132  0058BA  0100               	movlb	0	; () banked
 13133  0058BC  19D3               	xorwf	_actualScreen& (0+255),w,b
 13134  0058BE  A4D8               	btfss	status,2,c
 13135  0058C0  D003               	goto	l7252
 13136  0058C2                     l612:
 13137                           
 13138                           ; BSR set to: 0
 13139                           ;DisplayProtocol.h: 280: actualScreen = tempLastScreen;
 13140  0058C2  C0DA  F0D3         	movff	_tempLastScreen,_actualScreen
 13141                           
 13142                           ;DisplayProtocol.h: 281: }else if(actualScreen == 5) {
 13143  0058C6  0012               	return	
 13144  0058C8                     l7252:
 13145                           
 13146                           ; BSR set to: 0
 13147  0058C8  0E05               	movlw	5
 13148  0058CA  0100               	movlb	0	; () banked
 13149  0058CC  19D3               	xorwf	_actualScreen& (0+255),w,b
 13150  0058CE  A4D8               	btfss	status,2,c
 13151  0058D0  0012               	return	
 13152                           
 13153                           ; BSR set to: 0
 13154                           ;DisplayProtocol.h: 282: if(menuSection != 3 && menuSection != 1) {
 13155  0058D2  0E03               	movlw	3
 13156  0058D4  0100               	movlb	0	; () banked
 13157  0058D6  19D6               	xorwf	_menuSection& (0+255),w,b
 13158  0058D8  B4D8               	btfsc	status,2,c
 13159  0058DA  D010               	goto	l7264
 13160                           
 13161                           ; BSR set to: 0
 13162  0058DC  0100               	movlb	0	; () banked
 13163  0058DE  05D6               	decf	_menuSection& (0+255),w,b
 13164  0058E0  B4D8               	btfsc	status,2,c
 13165  0058E2  D00C               	goto	l7264
 13166                           
 13167                           ; BSR set to: 0
 13168                           ;DisplayProtocol.h: 283: chanValSection++;
 13169  0058E4  0100               	movlb	0	; () banked
 13170  0058E6  2BE1               	incf	_chanValSection& (0+255),f,b
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;DisplayProtocol.h: 284: if(chanValSection > 5)
 13174  0058E8  0100               	movlb	0	; () banked
 13175  0058EA  51E1               	movf	_chanValSection& (0+255),w,b
 13176  0058EC  0A80               	xorlw	128
 13177  0058EE  0F7A               	addlw	-134
 13178  0058F0  A0D8               	btfss	status,0,c
 13179  0058F2  0012               	return	
 13180                           
 13181                           ; BSR set to: 0
 13182                           ;DisplayProtocol.h: 285: chanValSection = 0;
 13183  0058F4  0E00               	movlw	0
 13184  0058F6  0100               	movlb	0	; () banked
 13185  0058F8  6FE1               	movwf	_chanValSection& (0+255),b
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;DisplayProtocol.h: 286: }else
 13189  0058FA  0012               	return	
 13190  0058FC                     l7264:
 13191                           
 13192                           ; BSR set to: 0
 13193                           ;DisplayProtocol.h: 287: actualScreen = 4;
 13194  0058FC  0E04               	movlw	4
 13195  0058FE  0100               	movlb	0	; () banked
 13196  005900  6FD3               	movwf	_actualScreen& (0+255),b
 13197                           
 13198                           ; BSR set to: 0
 13199                           
 13200                           ; BSR set to: 0
 13201                           
 13202                           ; BSR set to: 0
 13203  005902  0012               	return	
 13204  005904                     __end_of_pressRETRO:
 13205                           	opt stack 0
 13206                           tblptru	equ	0xFF8
 13207                           tblptrh	equ	0xFF7
 13208                           tblptrl	equ	0xFF6
 13209                           tablat	equ	0xFF5
 13210                           prodh	equ	0xFF4
 13211                           prodl	equ	0xFF3
 13212                           intcon	equ	0xFF2
 13213                           postinc0	equ	0xFEE
 13214                           wreg	equ	0xFE8
 13215                           postdec1	equ	0xFE5
 13216                           fsr1l	equ	0xFE1
 13217                           indf2	equ	0xFDF
 13218                           postinc2	equ	0xFDE
 13219                           postdec2	equ	0xFDD
 13220                           fsr2h	equ	0xFDA
 13221                           fsr2l	equ	0xFD9
 13222                           status	equ	0xFD8
 13223                           
 13224 ;; *************** function _pressENTER *****************
 13225 ;; Defined at:
 13226 ;;		line 311 in file "source/DisplayProtocol.h"
 13227 ;; Parameters:    Size  Location     Type
 13228 ;;		None
 13229 ;; Auto vars:     Size  Location     Type
 13230 ;;		None
 13231 ;; Return value:  Size  Location     Type
 13232 ;;                  1    wreg      void 
 13233 ;; Registers used:
 13234 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13235 ;; Tracked objects:
 13236 ;;		On entry : 0/0
 13237 ;;		On exit  : 0/0
 13238 ;;		Unchanged: 0/0
 13239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13240 ;;      Params:         0       0       0       0       0       0       0
 13241 ;;      Locals:         0       0       0       0       0       0       0
 13242 ;;      Temps:          0       0       0       0       0       0       0
 13243 ;;      Totals:         0       0       0       0       0       0       0
 13244 ;;Total ram usage:        0 bytes
 13245 ;; Hardware stack levels used:    1
 13246 ;; Hardware stack levels required when called:   12
 13247 ;; This function calls:
 13248 ;;		_checkPass
 13249 ;;		_confirmEdition
 13250 ;;		_desintegrator
 13251 ;; This function is called by:
 13252 ;;		_buttonChecking
 13253 ;; This function uses a non-reentrant model
 13254 ;;
 13255                           
 13256                           	psect	text47
 13257  002DE4                     __ptext47:
 13258                           	opt stack 0
 13259  002DE4                     _pressENTER:
 13260                           	opt stack 17
 13261                           
 13262                           ;DisplayProtocol.h: 312: if (actualScreen == 1) {
 13263                           
 13264                           ; BSR set to: 0
 13265                           ;incstack = 0
 13266  002DE4  0100               	movlb	0	; () banked
 13267  002DE6  05D3               	decf	_actualScreen& (0+255),w,b
 13268  002DE8  A4D8               	btfss	status,2,c
 13269  002DEA  D018               	goto	l10044
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;DisplayProtocol.h: 313: passSection++;
 13273  002DEC  0100               	movlb	0	; () banked
 13274  002DEE  2BD7               	incf	_passSection& (0+255),f,b
 13275                           
 13276                           ; BSR set to: 0
 13277                           ;DisplayProtocol.h: 314: if (passSection > 3) {
 13278  002DF0  0100               	movlb	0	; () banked
 13279  002DF2  51D7               	movf	_passSection& (0+255),w,b
 13280  002DF4  0A80               	xorlw	128
 13281  002DF6  0F7C               	addlw	-132
 13282  002DF8  A0D8               	btfss	status,0,c
 13283  002DFA  0012               	return	
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;DisplayProtocol.h: 315: passSection = 0;
 13287  002DFC  0E00               	movlw	0
 13288  002DFE  0100               	movlb	0	; () banked
 13289  002E00  6FD7               	movwf	_passSection& (0+255),b
 13290                           
 13291                           ; BSR set to: 0
 13292                           ;DisplayProtocol.h: 316: if (checkPass())
 13293  002E02  EC5E  F02A         	call	_checkPass	;wreg free
 13294  002E06  0900               	iorlw	0
 13295  002E08  B4D8               	btfsc	status,2,c
 13296  002E0A  D004               	goto	l10042
 13297                           
 13298                           ;DisplayProtocol.h: 317: actualScreen = 8;
 13299  002E0C  0E08               	movlw	8
 13300  002E0E  0100               	movlb	0	; () banked
 13301  002E10  6FD3               	movwf	_actualScreen& (0+255),b
 13302  002E12  0012               	return	
 13303  002E14                     l10042:
 13304                           
 13305                           ;DisplayProtocol.h: 318: else
 13306                           ;DisplayProtocol.h: 319: actualScreen = 7;
 13307  002E14  0E07               	movlw	7
 13308  002E16  0100               	movlb	0	; () banked
 13309  002E18  6FD3               	movwf	_actualScreen& (0+255),b
 13310                           
 13311                           ; BSR set to: 0
 13312                           ;DisplayProtocol.h: 320: }
 13313                           ;DisplayProtocol.h: 321: }else if(actualScreen == 4) {
 13314                           
 13315                           ; BSR set to: 0
 13316  002E1A  0012               	return	
 13317  002E1C                     l10044:
 13318                           
 13319                           ; BSR set to: 0
 13320  002E1C  0E04               	movlw	4
 13321  002E1E  0100               	movlb	0	; () banked
 13322  002E20  19D3               	xorwf	_actualScreen& (0+255),w,b
 13323  002E22  B4D8               	btfsc	status,2,c
 13324  002E24  D07C               	goto	l10088
 13325  002E26  D093               	goto	l10090
 13326  002E28                     l641:
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;DisplayProtocol.h: 324: tempLastScreen = actualScreen;
 13330  002E28  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;DisplayProtocol.h: 325: if(ProcessStarted) {
 13334  002E2C  0100               	movlb	0	; () banked
 13335  002E2E  51D2               	movf	_ProcessStarted& (0+255),w,b
 13336  002E30  B4D8               	btfsc	status,2,c
 13337  002E32  D007               	goto	l10052
 13338                           
 13339                           ; BSR set to: 0
 13340                           ;DisplayProtocol.h: 326: actualScreen = 3;
 13341  002E34  0E03               	movlw	3
 13342  002E36  0100               	movlb	0	; () banked
 13343  002E38  6FD3               	movwf	_actualScreen& (0+255),b
 13344                           
 13345                           ;DisplayProtocol.h: 327: selSN = 0;
 13346  002E3A  0E00               	movlw	0
 13347  002E3C  0100               	movlb	0	; () banked
 13348  002E3E  6FD9               	movwf	_selSN& (0+255),b
 13349                           
 13350                           ;DisplayProtocol.h: 328: }else {
 13351  002E40  0012               	return	
 13352  002E42                     l10052:
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;DisplayProtocol.h: 329: actualScreen = 2;
 13356  002E42  0E02               	movlw	2
 13357  002E44  0100               	movlb	0	; () banked
 13358  002E46  6FD3               	movwf	_actualScreen& (0+255),b
 13359                           
 13360                           ;DisplayProtocol.h: 330: selSN = 1;
 13361  002E48  0E01               	movlw	1
 13362  002E4A  0100               	movlb	0	; () banked
 13363  002E4C  6FD9               	movwf	_selSN& (0+255),b
 13364                           
 13365                           ; BSR set to: 0
 13366                           ;DisplayProtocol.h: 331: }
 13367                           ;DisplayProtocol.h: 332: break;
 13368  002E4E  0012               	return	
 13369  002E50                     l645:
 13370                           
 13371                           ; BSR set to: 0
 13372                           ;DisplayProtocol.h: 334: tempLastScreen = actualScreen;
 13373  002E50  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 13374                           
 13375                           ;DisplayProtocol.h: 335: selKMT = tVarProceso;
 13376  002E54  C0E3  F0D8         	movff	_tVarProceso,_selKMT
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;DisplayProtocol.h: 336: actualScreen = 5;
 13380  002E58  0E05               	movlw	5
 13381  002E5A  0100               	movlb	0	; () banked
 13382  002E5C  6FD3               	movwf	_actualScreen& (0+255),b
 13383                           
 13384                           ;DisplayProtocol.h: 337: break;
 13385  002E5E  0012               	return	
 13386  002E60                     l10056:
 13387                           
 13388                           ; BSR set to: 0
 13389                           ;DisplayProtocol.h: 339: if(tVarProceso == 0)
 13390  002E60  0100               	movlb	0	; () banked
 13391  002E62  51E3               	movf	_tVarProceso& (0+255),w,b
 13392  002E64  A4D8               	btfss	status,2,c
 13393  002E66  D009               	goto	l10060
 13394                           
 13395                           ; BSR set to: 0
 13396                           ;DisplayProtocol.h: 340: chanValf = kgXcorte;
 13397  002E68  C0DB  F046         	movff	_kgXcorte,_chanValf
 13398  002E6C  C0DC  F047         	movff	_kgXcorte+1,_chanValf+1
 13399  002E70  C0DD  F048         	movff	_kgXcorte+2,_chanValf+2
 13400  002E74  C0DE  F049         	movff	_kgXcorte+3,_chanValf+3
 13401  002E78  D01A               	goto	l10068
 13402  002E7A                     l10060:
 13403                           
 13404                           ; BSR set to: 0
 13405                           ;DisplayProtocol.h: 341: else if(tVarProceso == 1)
 13406  002E7A  0100               	movlb	0	; () banked
 13407  002E7C  05E3               	decf	_tVarProceso& (0+255),w,b
 13408  002E7E  A4D8               	btfss	status,2,c
 13409  002E80  D009               	goto	l10064
 13410                           
 13411                           ; BSR set to: 0
 13412                           ;DisplayProtocol.h: 342: chanValf = m3Xcorte;
 13413  002E82  C037  F046         	movff	_m3Xcorte,_chanValf
 13414  002E86  C038  F047         	movff	_m3Xcorte+1,_chanValf+1
 13415  002E8A  C039  F048         	movff	_m3Xcorte+2,_chanValf+2
 13416  002E8E  C03A  F049         	movff	_m3Xcorte+3,_chanValf+3
 13417  002E92  D00D               	goto	l10068
 13418  002E94                     l10064:
 13419                           
 13420                           ; BSR set to: 0
 13421                           ;DisplayProtocol.h: 343: else if(tVarProceso == 2)
 13422  002E94  0E02               	movlw	2
 13423  002E96  0100               	movlb	0	; () banked
 13424  002E98  19E3               	xorwf	_tVarProceso& (0+255),w,b
 13425  002E9A  A4D8               	btfss	status,2,c
 13426  002E9C  D008               	goto	l10068
 13427                           
 13428                           ; BSR set to: 0
 13429                           ;DisplayProtocol.h: 344: chanValf = tiXcorte;
 13430  002E9E  C03B  F046         	movff	_tiXcorte,_chanValf
 13431  002EA2  C03C  F047         	movff	_tiXcorte+1,_chanValf+1
 13432  002EA6  C03D  F048         	movff	_tiXcorte+2,_chanValf+2
 13433  002EAA  C03E  F049         	movff	_tiXcorte+3,_chanValf+3
 13434  002EAE                     l10068:
 13435                           
 13436                           ; BSR set to: 0
 13437                           ;DisplayProtocol.h: 346: desintegrator();
 13438  002EAE  EC38  F01C         	call	_desintegrator	;wreg free
 13439                           
 13440                           ;DisplayProtocol.h: 347: actualScreen = 5;
 13441  002EB2  0E05               	movlw	5
 13442  002EB4  0100               	movlb	0	; () banked
 13443  002EB6  6FD3               	movwf	_actualScreen& (0+255),b
 13444                           
 13445                           ;DisplayProtocol.h: 348: break;
 13446  002EB8  0012               	return	
 13447  002EBA                     l652:
 13448                           
 13449                           ; BSR set to: 0
 13450                           ;DisplayProtocol.h: 350: chanVals = numCortes;
 13451  002EBA  C0DF  F14A         	movff	_numCortes,_chanVals
 13452  002EBE  C0E0  F14B         	movff	_numCortes+1,_chanVals+1
 13453                           
 13454                           ; BSR set to: 0
 13455                           ;DisplayProtocol.h: 351: actualScreen = 5;
 13456  002EC2  0E05               	movlw	5
 13457  002EC4  0100               	movlb	0	; () banked
 13458  002EC6  6FD3               	movwf	_actualScreen& (0+255),b
 13459                           
 13460                           ;DisplayProtocol.h: 352: break;
 13461  002EC8  0012               	return	
 13462  002ECA                     l653:
 13463                           
 13464                           ; BSR set to: 0
 13465                           ;DisplayProtocol.h: 354: chanValf = diamTubo;
 13466  002ECA  C033  F046         	movff	_diamTubo,_chanValf
 13467  002ECE  C034  F047         	movff	_diamTubo+1,_chanValf+1
 13468  002ED2  C035  F048         	movff	_diamTubo+2,_chanValf+2
 13469  002ED6  C036  F049         	movff	_diamTubo+3,_chanValf+3
 13470                           
 13471                           ; BSR set to: 0
 13472                           ;DisplayProtocol.h: 355: desintegrator();
 13473  002EDA  EC38  F01C         	call	_desintegrator	;wreg free
 13474                           
 13475                           ;DisplayProtocol.h: 356: actualScreen = 5;
 13476  002EDE  0E05               	movlw	5
 13477  002EE0  0100               	movlb	0	; () banked
 13478  002EE2  6FD3               	movwf	_actualScreen& (0+255),b
 13479                           
 13480                           ;DisplayProtocol.h: 357: break;
 13481  002EE4  0012               	return	
 13482  002EE6                     l654:
 13483                           
 13484                           ; BSR set to: 0
 13485                           ;DisplayProtocol.h: 359: chanValf = densidadMasa;
 13486  002EE6  C02F  F046         	movff	_densidadMasa,_chanValf
 13487  002EEA  C030  F047         	movff	_densidadMasa+1,_chanValf+1
 13488  002EEE  C031  F048         	movff	_densidadMasa+2,_chanValf+2
 13489  002EF2  C032  F049         	movff	_densidadMasa+3,_chanValf+3
 13490                           
 13491                           ; BSR set to: 0
 13492                           ;DisplayProtocol.h: 360: desintegrator();
 13493  002EF6  EC38  F01C         	call	_desintegrator	;wreg free
 13494                           
 13495                           ;DisplayProtocol.h: 361: actualScreen = 5;
 13496  002EFA  0E05               	movlw	5
 13497  002EFC  0100               	movlb	0	; () banked
 13498  002EFE  6FD3               	movwf	_actualScreen& (0+255),b
 13499                           
 13500                           ;DisplayProtocol.h: 362: break;
 13501  002F00  0012               	return	
 13502  002F02                     l655:
 13503                           
 13504                           ; BSR set to: 0
 13505                           ;DisplayProtocol.h: 364: chanValf = velocidadMasa;
 13506  002F02  C03F  F046         	movff	_velocidadMasa,_chanValf
 13507  002F06  C040  F047         	movff	_velocidadMasa+1,_chanValf+1
 13508  002F0A  C041  F048         	movff	_velocidadMasa+2,_chanValf+2
 13509  002F0E  C042  F049         	movff	_velocidadMasa+3,_chanValf+3
 13510                           
 13511                           ; BSR set to: 0
 13512                           ;DisplayProtocol.h: 365: desintegrator();
 13513  002F12  EC38  F01C         	call	_desintegrator	;wreg free
 13514                           
 13515                           ;DisplayProtocol.h: 366: actualScreen = 5;
 13516  002F16  0E05               	movlw	5
 13517  002F18  0100               	movlb	0	; () banked
 13518  002F1A  6FD3               	movwf	_actualScreen& (0+255),b
 13519                           
 13520                           ; BSR set to: 0
 13521                           ;DisplayProtocol.h: 368: }
 13522                           ;DisplayProtocol.h: 369: }
 13523                           
 13524                           ;DisplayProtocol.h: 367: break;
 13525  002F1C  0012               	return	
 13526  002F1E                     l10088:
 13527                           
 13528                           ; BSR set to: 0
 13529  002F1E  0100               	movlb	0	; () banked
 13530  002F20  51D6               	movf	_menuSection& (0+255),w,b
 13531                           
 13532                           ; Switch size 1, requested type "space"
 13533                           ; Number of cases is 7, Range of values is 0 to 6
 13534                           ; switch strategies available:
 13535                           ; Name         Instructions Cycles
 13536                           ; simple_byte           22    12 (average)
 13537                           ;	Chosen strategy is simple_byte
 13538  002F22  0A00               	xorlw	0	; case 0
 13539  002F24  B4D8               	btfsc	status,2,c
 13540  002F26  D780               	goto	l641
 13541  002F28  0A01               	xorlw	1	; case 1
 13542  002F2A  B4D8               	btfsc	status,2,c
 13543  002F2C  D791               	goto	l645
 13544  002F2E  0A03               	xorlw	3	; case 2
 13545  002F30  B4D8               	btfsc	status,2,c
 13546  002F32  D796               	goto	l10056
 13547  002F34  0A01               	xorlw	1	; case 3
 13548  002F36  B4D8               	btfsc	status,2,c
 13549  002F38  D7C0               	goto	l652
 13550  002F3A  0A07               	xorlw	7	; case 4
 13551  002F3C  B4D8               	btfsc	status,2,c
 13552  002F3E  D7C5               	goto	l653
 13553  002F40  0A01               	xorlw	1	; case 5
 13554  002F42  B4D8               	btfsc	status,2,c
 13555  002F44  D7D0               	goto	l654
 13556  002F46  0A03               	xorlw	3	; case 6
 13557  002F48  A4D8               	btfss	status,2,c
 13558                           
 13559                           ; BSR set to: 0
 13560                           ;DisplayProtocol.h: 370: }else if(actualScreen == 7)
 13561  002F4A  0012               	return	
 13562  002F4C  D7DA               	goto	l655
 13563  002F4E                     l10090:
 13564                           
 13565                           ; BSR set to: 0
 13566  002F4E  0E07               	movlw	7
 13567  002F50  0100               	movlb	0	; () banked
 13568  002F52  19D3               	xorwf	_actualScreen& (0+255),w,b
 13569  002F54  A4D8               	btfss	status,2,c
 13570  002F56  D004               	goto	l10094
 13571                           
 13572                           ; BSR set to: 0
 13573                           ;DisplayProtocol.h: 371: actualScreen = 1;
 13574  002F58  0E01               	movlw	1
 13575  002F5A  0100               	movlb	0	; () banked
 13576  002F5C  6FD3               	movwf	_actualScreen& (0+255),b
 13577  002F5E  0012               	return	
 13578  002F60                     l10094:
 13579                           
 13580                           ; BSR set to: 0
 13581                           ;DisplayProtocol.h: 372: else if(actualScreen == 6) {
 13582  002F60  0E06               	movlw	6
 13583  002F62  0100               	movlb	0	; () banked
 13584  002F64  19D3               	xorwf	_actualScreen& (0+255),w,b
 13585  002F66  B4D8               	btfsc	status,2,c
 13586  002F68  0012               	return	
 13587                           
 13588                           ; BSR set to: 0
 13589                           
 13590                           ; BSR set to: 0
 13591                           
 13592                           ; BSR set to: 0
 13593                           ;DisplayProtocol.h: 374: }else if(actualScreen == 5) {
 13594  002F6A  0E05               	movlw	5
 13595  002F6C  0100               	movlb	0	; () banked
 13596  002F6E  19D3               	xorwf	_actualScreen& (0+255),w,b
 13597  002F70  A4D8               	btfss	status,2,c
 13598  002F72  D01C               	goto	l10112
 13599                           
 13600                           ; BSR set to: 0
 13601                           ;DisplayProtocol.h: 375: if(menuSection != 3 && menuSection != 1) {
 13602  002F74  0E03               	movlw	3
 13603  002F76  0100               	movlb	0	; () banked
 13604  002F78  19D6               	xorwf	_menuSection& (0+255),w,b
 13605  002F7A  B4D8               	btfsc	status,2,c
 13606  002F7C  D00D               	goto	l10110
 13607                           
 13608                           ; BSR set to: 0
 13609  002F7E  0100               	movlb	0	; () banked
 13610  002F80  05D6               	decf	_menuSection& (0+255),w,b
 13611  002F82  B4D8               	btfsc	status,2,c
 13612  002F84  D009               	goto	l10110
 13613                           
 13614                           ; BSR set to: 0
 13615                           ;DisplayProtocol.h: 376: chanValSection--;
 13616  002F86  0100               	movlb	0	; () banked
 13617  002F88  07E1               	decf	_chanValSection& (0+255),f,b
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;DisplayProtocol.h: 377: if(chanValSection < 0)
 13621  002F8A  0100               	movlb	0	; () banked
 13622  002F8C  AFE1               	btfss	_chanValSection& (0+255),7,b
 13623  002F8E  0012               	return	
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;DisplayProtocol.h: 378: chanValSection = 5;
 13627  002F90  0E05               	movlw	5
 13628  002F92  0100               	movlb	0	; () banked
 13629  002F94  6FE1               	movwf	_chanValSection& (0+255),b
 13630                           
 13631                           ; BSR set to: 0
 13632                           ;DisplayProtocol.h: 379: }else
 13633  002F96  0012               	return	
 13634  002F98                     l10110:
 13635                           
 13636                           ; BSR set to: 0
 13637                           ;DisplayProtocol.h: 380: confirmEdition(!ProcessStarted);
 13638  002F98  0100               	movlb	0	; () banked
 13639  002F9A  51D2               	movf	_ProcessStarted& (0+255),w,b
 13640  002F9C  A4D8               	btfss	status,2,c
 13641  002F9E  D002               	goto	u12800
 13642  002FA0  0E01               	movlw	1
 13643  002FA2  D001               	goto	u12810
 13644  002FA4                     u12800:
 13645  002FA4  0E00               	movlw	0
 13646  002FA6                     u12810:
 13647  002FA6  EC11  F01D         	call	_confirmEdition
 13648                           
 13649                           ;DisplayProtocol.h: 381: }else if(actualScreen == 2) {
 13650  002FAA  0012               	return	
 13651  002FAC                     l10112:
 13652  002FAC  0E02               	movlw	2
 13653  002FAE  0100               	movlb	0	; () banked
 13654  002FB0  19D3               	xorwf	_actualScreen& (0+255),w,b
 13655  002FB2  A4D8               	btfss	status,2,c
 13656  002FB4  D00C               	goto	l10118
 13657                           
 13658                           ; BSR set to: 0
 13659                           ;DisplayProtocol.h: 382: ProcessStarted = !selSN;
 13660  002FB6  0100               	movlb	0	; () banked
 13661  002FB8  51D9               	movf	_selSN& (0+255),w,b
 13662  002FBA  A4D8               	btfss	status,2,c
 13663  002FBC  D002               	goto	u12830
 13664  002FBE  0E01               	movlw	1
 13665  002FC0  D001               	goto	u12840
 13666  002FC2                     u12830:
 13667  002FC2  0E00               	movlw	0
 13668  002FC4                     u12840:
 13669  002FC4  0100               	movlb	0	; () banked
 13670  002FC6  6FD2               	movwf	_ProcessStarted& (0+255),b
 13671                           
 13672                           ; BSR set to: 0
 13673                           ;DisplayProtocol.h: 383: actualScreen = tempLastScreen;
 13674  002FC8  C0DA  F0D3         	movff	_tempLastScreen,_actualScreen
 13675                           
 13676                           ;DisplayProtocol.h: 384: }else if(actualScreen == 3) {
 13677  002FCC  0012               	return	
 13678  002FCE                     l10118:
 13679                           
 13680                           ; BSR set to: 0
 13681  002FCE  0E03               	movlw	3
 13682  002FD0  0100               	movlb	0	; () banked
 13683  002FD2  19D3               	xorwf	_actualScreen& (0+255),w,b
 13684  002FD4  A4D8               	btfss	status,2,c
 13685  002FD6  D005               	goto	l10122
 13686                           
 13687                           ; BSR set to: 0
 13688                           ;DisplayProtocol.h: 385: ProcessStarted = selSN;
 13689  002FD8  C0D9  F0D2         	movff	_selSN,_ProcessStarted
 13690                           
 13691                           ;DisplayProtocol.h: 386: actualScreen = tempLastScreen;
 13692  002FDC  C0DA  F0D3         	movff	_tempLastScreen,_actualScreen
 13693                           
 13694                           ;DisplayProtocol.h: 387: }else if(actualScreen == 10) {
 13695  002FE0  0012               	return	
 13696  002FE2                     l10122:
 13697                           
 13698                           ; BSR set to: 0
 13699  002FE2  0E0A               	movlw	10
 13700  002FE4  0100               	movlb	0	; () banked
 13701  002FE6  19D3               	xorwf	_actualScreen& (0+255),w,b
 13702  002FE8  A4D8               	btfss	status,2,c
 13703  002FEA  D00B               	goto	l10128
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;DisplayProtocol.h: 388: if(!selSN)
 13707  002FEC  0100               	movlb	0	; () banked
 13708  002FEE  51D9               	movf	_selSN& (0+255),w,b
 13709  002FF0  A4D8               	btfss	status,2,c
 13710  002FF2  D004               	goto	l671
 13711                           
 13712                           ; BSR set to: 0
 13713                           ;DisplayProtocol.h: 389: confirmEdition(1);
 13714  002FF4  0E01               	movlw	1
 13715  002FF6  EC11  F01D         	call	_confirmEdition
 13716  002FFA  0012               	return	
 13717  002FFC                     l671:
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;DisplayProtocol.h: 390: else
 13721                           ;DisplayProtocol.h: 391: actualScreen = tempLastScreen;
 13722  002FFC  C0DA  F0D3         	movff	_tempLastScreen,_actualScreen
 13723                           
 13724                           ; BSR set to: 0
 13725                           ;DisplayProtocol.h: 392: }else if(actualScreen == 8)
 13726  003000  0012               	return	
 13727  003002                     l10128:
 13728                           
 13729                           ; BSR set to: 0
 13730  003002  0E08               	movlw	8
 13731  003004  0100               	movlb	0	; () banked
 13732  003006  19D3               	xorwf	_actualScreen& (0+255),w,b
 13733  003008  A4D8               	btfss	status,2,c
 13734  00300A  D004               	goto	l10132
 13735                           
 13736                           ; BSR set to: 0
 13737                           ;DisplayProtocol.h: 393: actualScreen = 4;
 13738  00300C  0E04               	movlw	4
 13739  00300E  0100               	movlb	0	; () banked
 13740  003010  6FD3               	movwf	_actualScreen& (0+255),b
 13741  003012  0012               	return	
 13742  003014                     l10132:
 13743                           
 13744                           ; BSR set to: 0
 13745                           ;DisplayProtocol.h: 394: else if(actualScreen == 9)
 13746  003014  0E09               	movlw	9
 13747  003016  0100               	movlb	0	; () banked
 13748  003018  19D3               	xorwf	_actualScreen& (0+255),w,b
 13749  00301A  A4D8               	btfss	status,2,c
 13750  00301C  0012               	return	
 13751                           
 13752                           ; BSR set to: 0
 13753                           ;DisplayProtocol.h: 395: actualScreen = 0;
 13754  00301E  0E00               	movlw	0
 13755  003020  0100               	movlb	0	; () banked
 13756  003022  6FD3               	movwf	_actualScreen& (0+255),b
 13757                           
 13758                           ; BSR set to: 0
 13759                           
 13760                           ; BSR set to: 0
 13761                           
 13762                           ; BSR set to: 0
 13763                           
 13764                           ; BSR set to: 0
 13765                           
 13766                           ; BSR set to: 0
 13767                           
 13768                           ; BSR set to: 0
 13769                           
 13770                           ; BSR set to: 0
 13771                           
 13772                           ; BSR set to: 0
 13773                           
 13774                           ; BSR set to: 0
 13775  003024  0012               	return	
 13776  003026                     __end_of_pressENTER:
 13777                           	opt stack 0
 13778                           tblptru	equ	0xFF8
 13779                           tblptrh	equ	0xFF7
 13780                           tblptrl	equ	0xFF6
 13781                           tablat	equ	0xFF5
 13782                           prodh	equ	0xFF4
 13783                           prodl	equ	0xFF3
 13784                           intcon	equ	0xFF2
 13785                           postinc0	equ	0xFEE
 13786                           wreg	equ	0xFE8
 13787                           postdec1	equ	0xFE5
 13788                           fsr1l	equ	0xFE1
 13789                           indf2	equ	0xFDF
 13790                           postinc2	equ	0xFDE
 13791                           postdec2	equ	0xFDD
 13792                           fsr2h	equ	0xFDA
 13793                           fsr2l	equ	0xFD9
 13794                           status	equ	0xFD8
 13795                           
 13796 ;; *************** function _desintegrator *****************
 13797 ;; Defined at:
 13798 ;;		line 45 in file "source/DisplayProtocol.h"
 13799 ;; Parameters:    Size  Location     Type
 13800 ;;		None
 13801 ;; Auto vars:     Size  Location     Type
 13802 ;;  temp2           4   93[BANK0 ] long 
 13803 ;;  temp3           4   89[BANK0 ] long 
 13804 ;;  tempL           4   85[BANK0 ] long 
 13805 ;;  temp            4   81[BANK0 ] float 
 13806 ;;  i               2   97[BANK0 ] int 
 13807 ;; Return value:  Size  Location     Type
 13808 ;;                  1    wreg      void 
 13809 ;; Registers used:
 13810 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13811 ;; Tracked objects:
 13812 ;;		On entry : 0/0
 13813 ;;		On exit  : 0/0
 13814 ;;		Unchanged: 0/0
 13815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13816 ;;      Params:         0       0       0       0       0       0       0
 13817 ;;      Locals:         0      18       0       0       0       0       0
 13818 ;;      Temps:          0       2       0       0       0       0       0
 13819 ;;      Totals:         0      20       0       0       0       0       0
 13820 ;;Total ram usage:       20 bytes
 13821 ;; Hardware stack levels used:    1
 13822 ;; Hardware stack levels required when called:    9
 13823 ;; This function calls:
 13824 ;;		___aldiv
 13825 ;;		___flmul
 13826 ;;		___fltol
 13827 ;;		___lmul
 13828 ;; This function is called by:
 13829 ;;		_pressENTER
 13830 ;; This function uses a non-reentrant model
 13831 ;;
 13832                           
 13833                           	psect	text48
 13834  003870                     __ptext48:
 13835                           	opt stack 0
 13836  003870                     _desintegrator:
 13837                           	opt stack 19
 13838                           
 13839                           ;DisplayProtocol.h: 46: chanValSection = 5;
 13840                           
 13841                           ;incstack = 0
 13842  003870  0E05               	movlw	5
 13843  003872  0100               	movlb	0	; () banked
 13844  003874  6FE1               	movwf	_chanValSection& (0+255),b
 13845                           
 13846                           ; BSR set to: 0
 13847                           ;DisplayProtocol.h: 47: float temp = (float)chanValf*1000;
 13848  003876  C046  F083         	movff	_chanValf,___flmul@b
 13849  00387A  C047  F084         	movff	_chanValf+1,___flmul@b+1
 13850  00387E  C048  F085         	movff	_chanValf+2,___flmul@b+2
 13851  003882  C049  F086         	movff	_chanValf+3,___flmul@b+3
 13852  003886  0E00               	movlw	0
 13853  003888  0100               	movlb	0	; () banked
 13854  00388A  6F87               	movwf	___flmul@a& (0+255),b
 13855  00388C  0E00               	movlw	0
 13856  00388E  6F88               	movwf	(___flmul@a+1)& (0+255),b
 13857  003890  0E7A               	movlw	122
 13858  003892  6F89               	movwf	(___flmul@a+2)& (0+255),b
 13859  003894  0E44               	movlw	68
 13860  003896  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 13861  003898  EC4F  F00B         	call	___flmul	;wreg free
 13862  00389C  C083  F0B1         	movff	?___flmul,desintegrator@temp
 13863  0038A0  C084  F0B2         	movff	?___flmul+1,desintegrator@temp+1
 13864  0038A4  C085  F0B3         	movff	?___flmul+2,desintegrator@temp+2
 13865  0038A8  C086  F0B4         	movff	?___flmul+3,desintegrator@temp+3
 13866                           
 13867                           ;DisplayProtocol.h: 48: long tempL = (long)temp;
 13868  0038AC  C0B1  F0A5         	movff	desintegrator@temp,___fltol@f1
 13869  0038B0  C0B2  F0A6         	movff	desintegrator@temp+1,___fltol@f1+1
 13870  0038B4  C0B3  F0A7         	movff	desintegrator@temp+2,___fltol@f1+2
 13871  0038B8  C0B4  F0A8         	movff	desintegrator@temp+3,___fltol@f1+3
 13872  0038BC  EC5C  F024         	call	___fltol	;wreg free
 13873  0038C0  C0A5  F0B5         	movff	?___fltol,desintegrator@tempL
 13874  0038C4  C0A6  F0B6         	movff	?___fltol+1,desintegrator@tempL+1
 13875  0038C8  C0A7  F0B7         	movff	?___fltol+2,desintegrator@tempL+2
 13876  0038CC  C0A8  F0B8         	movff	?___fltol+3,desintegrator@tempL+3
 13877                           
 13878                           ;DisplayProtocol.h: 49: long temp2 = 0;
 13879  0038D0  0E00               	movlw	0
 13880  0038D2  0100               	movlb	0	; () banked
 13881  0038D4  6FBD               	movwf	desintegrator@temp2& (0+255),b
 13882  0038D6  0E00               	movlw	0
 13883  0038D8  6FBE               	movwf	(desintegrator@temp2+1)& (0+255),b
 13884  0038DA  0E00               	movlw	0
 13885  0038DC  6FBF               	movwf	(desintegrator@temp2+2)& (0+255),b
 13886  0038DE  0E00               	movlw	0
 13887  0038E0  6FC0               	movwf	(desintegrator@temp2+3)& (0+255),b
 13888                           
 13889                           ; BSR set to: 0
 13890                           ;DisplayProtocol.h: 50: long temp3 = 0;
 13891  0038E2  0E00               	movlw	0
 13892  0038E4  0100               	movlb	0	; () banked
 13893  0038E6  6FB9               	movwf	desintegrator@temp3& (0+255),b
 13894  0038E8  0E00               	movlw	0
 13895  0038EA  6FBA               	movwf	(desintegrator@temp3+1)& (0+255),b
 13896  0038EC  0E00               	movlw	0
 13897  0038EE  6FBB               	movwf	(desintegrator@temp3+2)& (0+255),b
 13898  0038F0  0E00               	movlw	0
 13899  0038F2  6FBC               	movwf	(desintegrator@temp3+3)& (0+255),b
 13900                           
 13901                           ; BSR set to: 0
 13902                           ;DisplayProtocol.h: 51: int i;
 13903                           ;DisplayProtocol.h: 52: for(i = 0; i < 6; i++) {
 13904  0038F4  0E00               	movlw	0
 13905  0038F6  0100               	movlb	0	; () banked
 13906  0038F8  6FC2               	movwf	(desintegrator@i+1)& (0+255),b
 13907  0038FA  0E00               	movlw	0
 13908  0038FC  6FC1               	movwf	desintegrator@i& (0+255),b
 13909                           
 13910                           ; BSR set to: 0
 13911  0038FE  0100               	movlb	0	; () banked
 13912  003900  BFC2               	btfsc	(desintegrator@i+1)& (0+255),7,b
 13913  003902  D00A               	goto	l9616
 13914  003904  0100               	movlb	0	; () banked
 13915  003906  51C2               	movf	(desintegrator@i+1)& (0+255),w,b
 13916  003908  E106               	bnz	u12220
 13917  00390A  0E06               	movlw	6
 13918  00390C  0100               	movlb	0	; () banked
 13919  00390E  5DC1               	subwf	desintegrator@i& (0+255),w,b
 13920  003910  B0D8               	btfsc	status,0,c
 13921  003912  0012               	return	
 13922  003914  D001               	goto	l9616
 13923  003916                     u12220:
 13924                           
 13925                           ; BSR set to: 0
 13926  003916  0012               	return	
 13927  003918                     l9616:
 13928                           
 13929                           ; BSR set to: 0
 13930                           ;DisplayProtocol.h: 53: temp2 = tempL/exp10[i];
 13931  003918  C0B5  F075         	movff	desintegrator@tempL,___aldiv@dividend
 13932  00391C  C0B6  F076         	movff	desintegrator@tempL+1,___aldiv@dividend+1
 13933  003920  C0B7  F077         	movff	desintegrator@tempL+2,___aldiv@dividend+2
 13934  003924  C0B8  F078         	movff	desintegrator@tempL+3,___aldiv@dividend+3
 13935  003928  0E5D               	movlw	low _exp10
 13936  00392A  0100               	movlb	0	; () banked
 13937  00392C  6FAF               	movwf	??_desintegrator& (0+255),b
 13938  00392E  0E01               	movlw	high _exp10
 13939  003930  0100               	movlb	0	; () banked
 13940  003932  6FB0               	movwf	(??_desintegrator+1)& (0+255),b
 13941  003934  90D8               	bcf	status,0,c
 13942  003936  0100               	movlb	0	; () banked
 13943  003938  35C1               	rlcf	desintegrator@i& (0+255),w,b
 13944  00393A  6ED9               	movwf	fsr2l,c
 13945  00393C  0100               	movlb	0	; () banked
 13946  00393E  35C2               	rlcf	(desintegrator@i+1)& (0+255),w,b
 13947  003940  6EDA               	movwf	fsr2h,c
 13948  003942  90D8               	bcf	status,0,c
 13949  003944  36D9               	rlcf	fsr2l,f,c
 13950  003946  36DA               	rlcf	fsr2h,f,c
 13951  003948  0100               	movlb	0	; () banked
 13952  00394A  51AF               	movf	??_desintegrator& (0+255),w,b
 13953  00394C  26D9               	addwf	fsr2l,f,c
 13954  00394E  0100               	movlb	0	; () banked
 13955  003950  51B0               	movf	(??_desintegrator+1)& (0+255),w,b
 13956  003952  22DA               	addwfc	fsr2h,f,c
 13957  003954  CFDE F079          	movff	postinc2,___aldiv@divisor
 13958  003958  CFDE F07A          	movff	postinc2,___aldiv@divisor+1
 13959  00395C  CFDE F07B          	movff	postinc2,___aldiv@divisor+2
 13960  003960  CFDE F07C          	movff	postinc2,___aldiv@divisor+3
 13961  003964  ECCF  F023         	call	___aldiv	;wreg free
 13962  003968  C075  F0BD         	movff	?___aldiv,desintegrator@temp2
 13963  00396C  C076  F0BE         	movff	?___aldiv+1,desintegrator@temp2+1
 13964  003970  C077  F0BF         	movff	?___aldiv+2,desintegrator@temp2+2
 13965  003974  C078  F0C0         	movff	?___aldiv+3,desintegrator@temp2+3
 13966                           
 13967                           ;DisplayProtocol.h: 54: temp3 = temp2*exp10[i];
 13968  003978  0E5D               	movlw	low _exp10
 13969  00397A  0100               	movlb	0	; () banked
 13970  00397C  6FAF               	movwf	??_desintegrator& (0+255),b
 13971  00397E  0E01               	movlw	high _exp10
 13972  003980  0100               	movlb	0	; () banked
 13973  003982  6FB0               	movwf	(??_desintegrator+1)& (0+255),b
 13974  003984  90D8               	bcf	status,0,c
 13975  003986  0100               	movlb	0	; () banked
 13976  003988  35C1               	rlcf	desintegrator@i& (0+255),w,b
 13977  00398A  6ED9               	movwf	fsr2l,c
 13978  00398C  0100               	movlb	0	; () banked
 13979  00398E  35C2               	rlcf	(desintegrator@i+1)& (0+255),w,b
 13980  003990  6EDA               	movwf	fsr2h,c
 13981  003992  90D8               	bcf	status,0,c
 13982  003994  36D9               	rlcf	fsr2l,f,c
 13983  003996  36DA               	rlcf	fsr2h,f,c
 13984  003998  0100               	movlb	0	; () banked
 13985  00399A  51AF               	movf	??_desintegrator& (0+255),w,b
 13986  00399C  26D9               	addwf	fsr2l,f,c
 13987  00399E  0100               	movlb	0	; () banked
 13988  0039A0  51B0               	movf	(??_desintegrator+1)& (0+255),w,b
 13989  0039A2  22DA               	addwfc	fsr2h,f,c
 13990  0039A4  CFDE F075          	movff	postinc2,___lmul@multiplier
 13991  0039A8  CFDE F076          	movff	postinc2,___lmul@multiplier+1
 13992  0039AC  CFDE F077          	movff	postinc2,___lmul@multiplier+2
 13993  0039B0  CFDE F078          	movff	postinc2,___lmul@multiplier+3
 13994  0039B4  C0BD  F079         	movff	desintegrator@temp2,___lmul@multiplicand
 13995  0039B8  C0BE  F07A         	movff	desintegrator@temp2+1,___lmul@multiplicand+1
 13996  0039BC  C0BF  F07B         	movff	desintegrator@temp2+2,___lmul@multiplicand+2
 13997  0039C0  C0C0  F07C         	movff	desintegrator@temp2+3,___lmul@multiplicand+3
 13998  0039C4  ECD6  F02B         	call	___lmul	;wreg free
 13999  0039C8  C075  F0B9         	movff	?___lmul,desintegrator@temp3
 14000  0039CC  C076  F0BA         	movff	?___lmul+1,desintegrator@temp3+1
 14001  0039D0  C077  F0BB         	movff	?___lmul+2,desintegrator@temp3+2
 14002  0039D4  C078  F0BC         	movff	?___lmul+3,desintegrator@temp3+3
 14003                           
 14004                           ;DisplayProtocol.h: 55: chanValdig[i] = temp2;
 14005  0039D8  0E31               	movlw	low _chanValdig
 14006  0039DA  0100               	movlb	0	; () banked
 14007  0039DC  25C1               	addwf	desintegrator@i& (0+255),w,b
 14008  0039DE  6ED9               	movwf	fsr2l,c
 14009  0039E0  0E01               	movlw	high _chanValdig
 14010  0039E2  0100               	movlb	0	; () banked
 14011  0039E4  21C2               	addwfc	(desintegrator@i+1)& (0+255),w,b
 14012  0039E6  6EDA               	movwf	fsr2h,c
 14013  0039E8  C0BD  FFDF         	movff	desintegrator@temp2,indf2
 14014                           
 14015                           ; BSR set to: 0
 14016                           ;DisplayProtocol.h: 56: tempL -= temp3;
 14017  0039EC  0100               	movlb	0	; () banked
 14018  0039EE  51B9               	movf	desintegrator@temp3& (0+255),w,b
 14019  0039F0  0100               	movlb	0	; () banked
 14020  0039F2  5FB5               	subwf	desintegrator@tempL& (0+255),f,b
 14021  0039F4  0100               	movlb	0	; () banked
 14022  0039F6  51BA               	movf	(desintegrator@temp3+1)& (0+255),w,b
 14023  0039F8  0100               	movlb	0	; () banked
 14024  0039FA  5BB6               	subwfb	(desintegrator@tempL+1)& (0+255),f,b
 14025  0039FC  0100               	movlb	0	; () banked
 14026  0039FE  51BB               	movf	(desintegrator@temp3+2)& (0+255),w,b
 14027  003A00  0100               	movlb	0	; () banked
 14028  003A02  5BB7               	subwfb	(desintegrator@tempL+2)& (0+255),f,b
 14029  003A04  0100               	movlb	0	; () banked
 14030  003A06  51BC               	movf	(desintegrator@temp3+3)& (0+255),w,b
 14031  003A08  0100               	movlb	0	; () banked
 14032  003A0A  5BB8               	subwfb	(desintegrator@tempL+3)& (0+255),f,b
 14033                           
 14034                           ; BSR set to: 0
 14035  003A0C  0100               	movlb	0	; () banked
 14036  003A0E  4BC1               	infsnz	desintegrator@i& (0+255),f,b
 14037  003A10  2BC2               	incf	(desintegrator@i+1)& (0+255),f,b
 14038                           
 14039                           ; BSR set to: 0
 14040  003A12  0100               	movlb	0	; () banked
 14041  003A14  BFC2               	btfsc	(desintegrator@i+1)& (0+255),7,b
 14042  003A16  D780               	goto	l9616
 14043  003A18  0100               	movlb	0	; () banked
 14044  003A1A  51C2               	movf	(desintegrator@i+1)& (0+255),w,b
 14045  003A1C  E101               	bnz	l490
 14046  003A1E  D775               	goto	L9
 14047  003A20                     l490:
 14048                           
 14049                           ; BSR set to: 0
 14050  003A20  0012               	return		;funcret
 14051  003A22                     __end_of_desintegrator:
 14052                           	opt stack 0
 14053                           tblptru	equ	0xFF8
 14054                           tblptrh	equ	0xFF7
 14055                           tblptrl	equ	0xFF6
 14056                           tablat	equ	0xFF5
 14057                           prodh	equ	0xFF4
 14058                           prodl	equ	0xFF3
 14059                           intcon	equ	0xFF2
 14060                           postinc0	equ	0xFEE
 14061                           wreg	equ	0xFE8
 14062                           postdec1	equ	0xFE5
 14063                           fsr1l	equ	0xFE1
 14064                           indf2	equ	0xFDF
 14065                           postinc2	equ	0xFDE
 14066                           postdec2	equ	0xFDD
 14067                           fsr2h	equ	0xFDA
 14068                           fsr2l	equ	0xFD9
 14069                           status	equ	0xFD8
 14070                           
 14071 ;; *************** function ___fltol *****************
 14072 ;; Defined at:
 14073 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fltol.c"
 14074 ;; Parameters:    Size  Location     Type
 14075 ;;  f1              4   69[BANK0 ] void 
 14076 ;; Auto vars:     Size  Location     Type
 14077 ;;  exp1            1   78[BANK0 ] unsigned char 
 14078 ;;  sign1           1   77[BANK0 ] unsigned char 
 14079 ;; Return value:  Size  Location     Type
 14080 ;;                  4   69[BANK0 ] long 
 14081 ;; Registers used:
 14082 ;;		wreg, status,2, status,0
 14083 ;; Tracked objects:
 14084 ;;		On entry : 0/0
 14085 ;;		On exit  : 0/0
 14086 ;;		Unchanged: 0/0
 14087 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14088 ;;      Params:         0       4       0       0       0       0       0
 14089 ;;      Locals:         0       2       0       0       0       0       0
 14090 ;;      Temps:          0       4       0       0       0       0       0
 14091 ;;      Totals:         0      10       0       0       0       0       0
 14092 ;;Total ram usage:       10 bytes
 14093 ;; Hardware stack levels used:    1
 14094 ;; Hardware stack levels required when called:    8
 14095 ;; This function calls:
 14096 ;;		Nothing
 14097 ;; This function is called by:
 14098 ;;		_desintegrator
 14099 ;;		_printf
 14100 ;; This function uses a non-reentrant model
 14101 ;;
 14102                           
 14103                           	psect	text49
 14104  0048B8                     __ptext49:
 14105                           	opt stack 0
 14106  0048B8                     ___fltol:
 14107                           	opt stack 19
 14108                           
 14109                           ; BSR set to: 0
 14110                           ;incstack = 0
 14111  0048B8  0100               	movlb	0	; () banked
 14112  0048BA  35A7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 14113  0048BC  35A8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 14114  0048BE  0100               	movlb	0	; () banked
 14115  0048C0  6FAE               	movwf	___fltol@exp1& (0+255),b
 14116  0048C2  0100               	movlb	0	; () banked
 14117  0048C4  51AE               	movf	___fltol@exp1& (0+255),w,b
 14118  0048C6  A4D8               	btfss	status,2,c
 14119  0048C8  D00A               	goto	l8836
 14120                           
 14121                           ; BSR set to: 0
 14122  0048CA  0E00               	movlw	0
 14123  0048CC  0100               	movlb	0	; () banked
 14124  0048CE  6FA5               	movwf	?___fltol& (0+255),b
 14125  0048D0  0E00               	movlw	0
 14126  0048D2  6FA6               	movwf	(?___fltol+1)& (0+255),b
 14127  0048D4  0E00               	movlw	0
 14128  0048D6  6FA7               	movwf	(?___fltol+2)& (0+255),b
 14129  0048D8  0E00               	movlw	0
 14130  0048DA  6FA8               	movwf	(?___fltol+3)& (0+255),b
 14131                           
 14132                           ; BSR set to: 0
 14133  0048DC  0012               	return	
 14134  0048DE                     l8836:
 14135                           
 14136                           ; BSR set to: 0
 14137  0048DE  C0A5  F0A9         	movff	___fltol@f1,??___fltol
 14138  0048E2  C0A6  F0AA         	movff	___fltol@f1+1,??___fltol+1
 14139  0048E6  C0A7  F0AB         	movff	___fltol@f1+2,??___fltol+2
 14140  0048EA  C0A8  F0AC         	movff	___fltol@f1+3,??___fltol+3
 14141  0048EE  0E20               	movlw	32
 14142  0048F0  D006               	goto	u11020
 14143  0048F2                     u11025:
 14144  0048F2  0100               	movlb	0	; () banked
 14145  0048F4  90D8               	bcf	status,0,c
 14146  0048F6  33AC               	rrcf	(??___fltol+3)& (0+255),f,b
 14147  0048F8  33AB               	rrcf	(??___fltol+2)& (0+255),f,b
 14148  0048FA  33AA               	rrcf	(??___fltol+1)& (0+255),f,b
 14149  0048FC  33A9               	rrcf	??___fltol& (0+255),f,b
 14150  0048FE                     u11020:
 14151  0048FE  2EE8               	decfsz	wreg,f,c
 14152  004900  D7F8               	goto	u11025
 14153  004902  0100               	movlb	0	; () banked
 14154  004904  51A9               	movf	??___fltol& (0+255),w,b
 14155  004906  0100               	movlb	0	; () banked
 14156  004908  6FAD               	movwf	___fltol@sign1& (0+255),b
 14157                           
 14158                           ; BSR set to: 0
 14159  00490A  0100               	movlb	0	; () banked
 14160  00490C  8FA7               	bsf	(___fltol@f1+2)& (0+255),7,b
 14161                           
 14162                           ; BSR set to: 0
 14163  00490E  0EFF               	movlw	255
 14164  004910  0100               	movlb	0	; () banked
 14165  004912  17A5               	andwf	___fltol@f1& (0+255),f,b
 14166  004914  0EFF               	movlw	255
 14167  004916  17A6               	andwf	(___fltol@f1+1)& (0+255),f,b
 14168  004918  0EFF               	movlw	255
 14169  00491A  17A7               	andwf	(___fltol@f1+2)& (0+255),f,b
 14170  00491C  0E00               	movlw	0
 14171  00491E  17A8               	andwf	(___fltol@f1+3)& (0+255),f,b
 14172                           
 14173                           ; BSR set to: 0
 14174  004920  0E96               	movlw	150
 14175  004922  0100               	movlb	0	; () banked
 14176  004924  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 14177                           
 14178                           ; BSR set to: 0
 14179  004926  0100               	movlb	0	; () banked
 14180  004928  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 14181  00492A  D01A               	goto	l8856
 14182                           
 14183                           ; BSR set to: 0
 14184  00492C  0100               	movlb	0	; () banked
 14185  00492E  51AE               	movf	___fltol@exp1& (0+255),w,b
 14186  004930  0A80               	xorlw	128
 14187  004932  0F97               	addlw	151
 14188  004934  B0D8               	btfsc	status,0,c
 14189  004936  D00A               	goto	l8852
 14190                           
 14191                           ; BSR set to: 0
 14192  004938  0E00               	movlw	0
 14193  00493A  0100               	movlb	0	; () banked
 14194  00493C  6FA5               	movwf	?___fltol& (0+255),b
 14195  00493E  0E00               	movlw	0
 14196  004940  6FA6               	movwf	(?___fltol+1)& (0+255),b
 14197  004942  0E00               	movlw	0
 14198  004944  6FA7               	movwf	(?___fltol+2)& (0+255),b
 14199  004946  0E00               	movlw	0
 14200  004948  6FA8               	movwf	(?___fltol+3)& (0+255),b
 14201                           
 14202                           ; BSR set to: 0
 14203  00494A  0012               	return	
 14204  00494C                     l8852:
 14205                           
 14206                           ; BSR set to: 0
 14207  00494C  0100               	movlb	0	; () banked
 14208  00494E  90D8               	bcf	status,0,c
 14209  004950  33A8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 14210  004952  33A7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 14211  004954  33A6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 14212  004956  33A5               	rrcf	___fltol@f1& (0+255),f,b
 14213                           
 14214                           ; BSR set to: 0
 14215  004958  0100               	movlb	0	; () banked
 14216  00495A  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 14217  00495C  D7F7               	goto	l8852
 14218                           
 14219                           ; BSR set to: 0
 14220  00495E  D01B               	goto	l8866
 14221  004960                     l8856:
 14222                           
 14223                           ; BSR set to: 0
 14224  004960  0E1F               	movlw	31
 14225  004962  0100               	movlb	0	; () banked
 14226  004964  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 14227  004966  D012               	goto	l8864
 14228                           
 14229                           ; BSR set to: 0
 14230  004968  0E00               	movlw	0
 14231  00496A  0100               	movlb	0	; () banked
 14232  00496C  6FA5               	movwf	?___fltol& (0+255),b
 14233  00496E  0E00               	movlw	0
 14234  004970  6FA6               	movwf	(?___fltol+1)& (0+255),b
 14235  004972  0E00               	movlw	0
 14236  004974  6FA7               	movwf	(?___fltol+2)& (0+255),b
 14237  004976  0E00               	movlw	0
 14238  004978  6FA8               	movwf	(?___fltol+3)& (0+255),b
 14239                           
 14240                           ; BSR set to: 0
 14241  00497A  0012               	return	
 14242  00497C                     l8862:
 14243                           
 14244                           ; BSR set to: 0
 14245  00497C  0100               	movlb	0	; () banked
 14246  00497E  90D8               	bcf	status,0,c
 14247  004980  37A5               	rlcf	___fltol@f1& (0+255),f,b
 14248  004982  37A6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 14249  004984  37A7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 14250  004986  37A8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 14251  004988  0100               	movlb	0	; () banked
 14252  00498A  07AE               	decf	___fltol@exp1& (0+255),f,b
 14253  00498C                     l8864:
 14254                           
 14255                           ; BSR set to: 0
 14256  00498C  0100               	movlb	0	; () banked
 14257  00498E  51AE               	movf	___fltol@exp1& (0+255),w,b
 14258  004990  0100               	movlb	0	; () banked
 14259  004992  A4D8               	btfss	status,2,c
 14260  004994  D7F3               	goto	l8862
 14261  004996                     l8866:
 14262                           
 14263                           ; BSR set to: 0
 14264  004996  0100               	movlb	0	; () banked
 14265  004998  51AD               	movf	___fltol@sign1& (0+255),w,b
 14266  00499A  0100               	movlb	0	; () banked
 14267  00499C  B4D8               	btfsc	status,2,c
 14268  00499E  D009               	goto	l8870
 14269                           
 14270                           ; BSR set to: 0
 14271  0049A0  0100               	movlb	0	; () banked
 14272  0049A2  1FA8               	comf	(___fltol@f1+3)& (0+255),f,b
 14273  0049A4  1FA7               	comf	(___fltol@f1+2)& (0+255),f,b
 14274  0049A6  1FA6               	comf	(___fltol@f1+1)& (0+255),f,b
 14275  0049A8  6DA5               	negf	___fltol@f1& (0+255),b
 14276  0049AA  0E00               	movlw	0
 14277  0049AC  23A6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 14278  0049AE  23A7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 14279  0049B0  23A8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 14280  0049B2                     l8870:
 14281                           
 14282                           ; BSR set to: 0
 14283  0049B2  C0A5  F0A5         	movff	___fltol@f1,?___fltol
 14284  0049B6  C0A6  F0A6         	movff	___fltol@f1+1,?___fltol+1
 14285  0049BA  C0A7  F0A7         	movff	___fltol@f1+2,?___fltol+2
 14286  0049BE  C0A8  F0A8         	movff	___fltol@f1+3,?___fltol+3
 14287  0049C2  0012               	return	
 14288  0049C4                     __end_of___fltol:
 14289                           	opt stack 0
 14290                           tblptru	equ	0xFF8
 14291                           tblptrh	equ	0xFF7
 14292                           tblptrl	equ	0xFF6
 14293                           tablat	equ	0xFF5
 14294                           prodh	equ	0xFF4
 14295                           prodl	equ	0xFF3
 14296                           intcon	equ	0xFF2
 14297                           postinc0	equ	0xFEE
 14298                           wreg	equ	0xFE8
 14299                           postdec1	equ	0xFE5
 14300                           fsr1l	equ	0xFE1
 14301                           indf2	equ	0xFDF
 14302                           postinc2	equ	0xFDE
 14303                           postdec2	equ	0xFDD
 14304                           fsr2h	equ	0xFDA
 14305                           fsr2l	equ	0xFD9
 14306                           status	equ	0xFD8
 14307                           
 14308 ;; *************** function ___aldiv *****************
 14309 ;; Defined at:
 14310 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\aldiv.c"
 14311 ;; Parameters:    Size  Location     Type
 14312 ;;  dividend        4   21[BANK0 ] long 
 14313 ;;  divisor         4   25[BANK0 ] long 
 14314 ;; Auto vars:     Size  Location     Type
 14315 ;;  quotient        4   31[BANK0 ] long 
 14316 ;;  sign            1   30[BANK0 ] unsigned char 
 14317 ;;  counter         1   29[BANK0 ] unsigned char 
 14318 ;; Return value:  Size  Location     Type
 14319 ;;                  4   21[BANK0 ] long 
 14320 ;; Registers used:
 14321 ;;		wreg, status,2, status,0
 14322 ;; Tracked objects:
 14323 ;;		On entry : 0/0
 14324 ;;		On exit  : 0/0
 14325 ;;		Unchanged: 0/0
 14326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14327 ;;      Params:         0       8       0       0       0       0       0
 14328 ;;      Locals:         0       6       0       0       0       0       0
 14329 ;;      Temps:          0       0       0       0       0       0       0
 14330 ;;      Totals:         0      14       0       0       0       0       0
 14331 ;;Total ram usage:       14 bytes
 14332 ;; Hardware stack levels used:    1
 14333 ;; Hardware stack levels required when called:    8
 14334 ;; This function calls:
 14335 ;;		Nothing
 14336 ;; This function is called by:
 14337 ;;		_desintegrator
 14338 ;; This function uses a non-reentrant model
 14339 ;;
 14340                           
 14341                           	psect	text50
 14342  00479E                     __ptext50:
 14343                           	opt stack 0
 14344  00479E                     ___aldiv:
 14345                           	opt stack 19
 14346                           
 14347                           ; BSR set to: 0
 14348                           ;incstack = 0
 14349  00479E  0E00               	movlw	0
 14350  0047A0  0100               	movlb	0	; () banked
 14351  0047A2  6F7E               	movwf	___aldiv@sign& (0+255),b
 14352                           
 14353                           ; BSR set to: 0
 14354  0047A4  0100               	movlb	0	; () banked
 14355  0047A6  AF7C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14356  0047A8  D00C               	goto	l6282
 14357                           
 14358                           ; BSR set to: 0
 14359  0047AA  0100               	movlb	0	; () banked
 14360  0047AC  1F7C               	comf	(___aldiv@divisor+3)& (0+255),f,b
 14361  0047AE  1F7B               	comf	(___aldiv@divisor+2)& (0+255),f,b
 14362  0047B0  1F7A               	comf	(___aldiv@divisor+1)& (0+255),f,b
 14363  0047B2  6D79               	negf	___aldiv@divisor& (0+255),b
 14364  0047B4  0E00               	movlw	0
 14365  0047B6  237A               	addwfc	(___aldiv@divisor+1)& (0+255),f,b
 14366  0047B8  237B               	addwfc	(___aldiv@divisor+2)& (0+255),f,b
 14367  0047BA  237C               	addwfc	(___aldiv@divisor+3)& (0+255),f,b
 14368                           
 14369                           ; BSR set to: 0
 14370  0047BC  0E01               	movlw	1
 14371  0047BE  0100               	movlb	0	; () banked
 14372  0047C0  6F7E               	movwf	___aldiv@sign& (0+255),b
 14373  0047C2                     l6282:
 14374                           
 14375                           ; BSR set to: 0
 14376  0047C2  0100               	movlb	0	; () banked
 14377  0047C4  AF78               	btfss	(___aldiv@dividend+3)& (0+255),7,b
 14378  0047C6  D00C               	goto	l6288
 14379                           
 14380                           ; BSR set to: 0
 14381  0047C8  0100               	movlb	0	; () banked
 14382  0047CA  1F78               	comf	(___aldiv@dividend+3)& (0+255),f,b
 14383  0047CC  1F77               	comf	(___aldiv@dividend+2)& (0+255),f,b
 14384  0047CE  1F76               	comf	(___aldiv@dividend+1)& (0+255),f,b
 14385  0047D0  6D75               	negf	___aldiv@dividend& (0+255),b
 14386  0047D2  0E00               	movlw	0
 14387  0047D4  2376               	addwfc	(___aldiv@dividend+1)& (0+255),f,b
 14388  0047D6  2377               	addwfc	(___aldiv@dividend+2)& (0+255),f,b
 14389  0047D8  2378               	addwfc	(___aldiv@dividend+3)& (0+255),f,b
 14390                           
 14391                           ; BSR set to: 0
 14392  0047DA  0E01               	movlw	1
 14393  0047DC  0100               	movlb	0	; () banked
 14394  0047DE  1B7E               	xorwf	___aldiv@sign& (0+255),f,b
 14395  0047E0                     l6288:
 14396                           
 14397                           ; BSR set to: 0
 14398  0047E0  0E00               	movlw	0
 14399  0047E2  0100               	movlb	0	; () banked
 14400  0047E4  6F7F               	movwf	___aldiv@quotient& (0+255),b
 14401  0047E6  0E00               	movlw	0
 14402  0047E8  6F80               	movwf	(___aldiv@quotient+1)& (0+255),b
 14403  0047EA  0E00               	movlw	0
 14404  0047EC  6F81               	movwf	(___aldiv@quotient+2)& (0+255),b
 14405  0047EE  0E00               	movlw	0
 14406  0047F0  6F82               	movwf	(___aldiv@quotient+3)& (0+255),b
 14407                           
 14408                           ; BSR set to: 0
 14409  0047F2  0100               	movlb	0	; () banked
 14410  0047F4  5179               	movf	___aldiv@divisor& (0+255),w,b
 14411  0047F6  0100               	movlb	0	; () banked
 14412  0047F8  117A               	iorwf	(___aldiv@divisor+1)& (0+255),w,b
 14413  0047FA  0100               	movlb	0	; () banked
 14414  0047FC  117B               	iorwf	(___aldiv@divisor+2)& (0+255),w,b
 14415  0047FE  0100               	movlb	0	; () banked
 14416  004800  117C               	iorwf	(___aldiv@divisor+3)& (0+255),w,b
 14417  004802  B4D8               	btfsc	status,2,c
 14418  004804  D042               	goto	l6310
 14419                           
 14420                           ; BSR set to: 0
 14421  004806  0E01               	movlw	1
 14422  004808  0100               	movlb	0	; () banked
 14423  00480A  6F7D               	movwf	___aldiv@counter& (0+255),b
 14424  00480C  D008               	goto	l6296
 14425  00480E                     l6294:
 14426                           
 14427                           ; BSR set to: 0
 14428  00480E  0100               	movlb	0	; () banked
 14429  004810  90D8               	bcf	status,0,c
 14430  004812  3779               	rlcf	___aldiv@divisor& (0+255),f,b
 14431  004814  377A               	rlcf	(___aldiv@divisor+1)& (0+255),f,b
 14432  004816  377B               	rlcf	(___aldiv@divisor+2)& (0+255),f,b
 14433  004818  377C               	rlcf	(___aldiv@divisor+3)& (0+255),f,b
 14434  00481A  0100               	movlb	0	; () banked
 14435  00481C  2B7D               	incf	___aldiv@counter& (0+255),f,b
 14436  00481E                     l6296:
 14437                           
 14438                           ; BSR set to: 0
 14439  00481E  0100               	movlb	0	; () banked
 14440  004820  AF7C               	btfss	(___aldiv@divisor+3)& (0+255),7,b
 14441  004822  D7F5               	goto	l6294
 14442  004824                     l6298:
 14443                           
 14444                           ; BSR set to: 0
 14445  004824  0100               	movlb	0	; () banked
 14446  004826  90D8               	bcf	status,0,c
 14447  004828  377F               	rlcf	___aldiv@quotient& (0+255),f,b
 14448  00482A  3780               	rlcf	(___aldiv@quotient+1)& (0+255),f,b
 14449  00482C  3781               	rlcf	(___aldiv@quotient+2)& (0+255),f,b
 14450  00482E  3782               	rlcf	(___aldiv@quotient+3)& (0+255),f,b
 14451                           
 14452                           ; BSR set to: 0
 14453  004830  0100               	movlb	0	; () banked
 14454  004832  5179               	movf	___aldiv@divisor& (0+255),w,b
 14455  004834  0100               	movlb	0	; () banked
 14456  004836  5D75               	subwf	___aldiv@dividend& (0+255),w,b
 14457  004838  0100               	movlb	0	; () banked
 14458  00483A  517A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14459  00483C  0100               	movlb	0	; () banked
 14460  00483E  5976               	subwfb	(___aldiv@dividend+1)& (0+255),w,b
 14461  004840  0100               	movlb	0	; () banked
 14462  004842  517B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14463  004844  0100               	movlb	0	; () banked
 14464  004846  5977               	subwfb	(___aldiv@dividend+2)& (0+255),w,b
 14465  004848  0100               	movlb	0	; () banked
 14466  00484A  517C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14467  00484C  0100               	movlb	0	; () banked
 14468  00484E  5978               	subwfb	(___aldiv@dividend+3)& (0+255),w,b
 14469  004850  A0D8               	btfss	status,0,c
 14470  004852  D012               	goto	l6306
 14471                           
 14472                           ; BSR set to: 0
 14473  004854  0100               	movlb	0	; () banked
 14474  004856  5179               	movf	___aldiv@divisor& (0+255),w,b
 14475  004858  0100               	movlb	0	; () banked
 14476  00485A  5F75               	subwf	___aldiv@dividend& (0+255),f,b
 14477  00485C  0100               	movlb	0	; () banked
 14478  00485E  517A               	movf	(___aldiv@divisor+1)& (0+255),w,b
 14479  004860  0100               	movlb	0	; () banked
 14480  004862  5B76               	subwfb	(___aldiv@dividend+1)& (0+255),f,b
 14481  004864  0100               	movlb	0	; () banked
 14482  004866  517B               	movf	(___aldiv@divisor+2)& (0+255),w,b
 14483  004868  0100               	movlb	0	; () banked
 14484  00486A  5B77               	subwfb	(___aldiv@dividend+2)& (0+255),f,b
 14485  00486C  0100               	movlb	0	; () banked
 14486  00486E  517C               	movf	(___aldiv@divisor+3)& (0+255),w,b
 14487  004870  0100               	movlb	0	; () banked
 14488  004872  5B78               	subwfb	(___aldiv@dividend+3)& (0+255),f,b
 14489                           
 14490                           ; BSR set to: 0
 14491  004874  0100               	movlb	0	; () banked
 14492  004876  817F               	bsf	___aldiv@quotient& (0+255),0,b
 14493  004878                     l6306:
 14494                           
 14495                           ; BSR set to: 0
 14496  004878  0100               	movlb	0	; () banked
 14497  00487A  90D8               	bcf	status,0,c
 14498  00487C  337C               	rrcf	(___aldiv@divisor+3)& (0+255),f,b
 14499  00487E  337B               	rrcf	(___aldiv@divisor+2)& (0+255),f,b
 14500  004880  337A               	rrcf	(___aldiv@divisor+1)& (0+255),f,b
 14501  004882  3379               	rrcf	___aldiv@divisor& (0+255),f,b
 14502                           
 14503                           ; BSR set to: 0
 14504  004884  0100               	movlb	0	; () banked
 14505  004886  2F7D               	decfsz	___aldiv@counter& (0+255),f,b
 14506  004888  D7CD               	goto	l6298
 14507  00488A                     l6310:
 14508                           
 14509                           ; BSR set to: 0
 14510  00488A  0100               	movlb	0	; () banked
 14511  00488C  517E               	movf	___aldiv@sign& (0+255),w,b
 14512  00488E  0100               	movlb	0	; () banked
 14513  004890  B4D8               	btfsc	status,2,c
 14514  004892  D009               	goto	l6314
 14515                           
 14516                           ; BSR set to: 0
 14517  004894  0100               	movlb	0	; () banked
 14518  004896  1F82               	comf	(___aldiv@quotient+3)& (0+255),f,b
 14519  004898  1F81               	comf	(___aldiv@quotient+2)& (0+255),f,b
 14520  00489A  1F80               	comf	(___aldiv@quotient+1)& (0+255),f,b
 14521  00489C  6D7F               	negf	___aldiv@quotient& (0+255),b
 14522  00489E  0E00               	movlw	0
 14523  0048A0  2380               	addwfc	(___aldiv@quotient+1)& (0+255),f,b
 14524  0048A2  2381               	addwfc	(___aldiv@quotient+2)& (0+255),f,b
 14525  0048A4  2382               	addwfc	(___aldiv@quotient+3)& (0+255),f,b
 14526  0048A6                     l6314:
 14527                           
 14528                           ; BSR set to: 0
 14529  0048A6  C07F  F075         	movff	___aldiv@quotient,?___aldiv
 14530  0048AA  C080  F076         	movff	___aldiv@quotient+1,?___aldiv+1
 14531  0048AE  C081  F077         	movff	___aldiv@quotient+2,?___aldiv+2
 14532  0048B2  C082  F078         	movff	___aldiv@quotient+3,?___aldiv+3
 14533  0048B6  0012               	return	
 14534  0048B8                     __end_of___aldiv:
 14535                           	opt stack 0
 14536                           tblptru	equ	0xFF8
 14537                           tblptrh	equ	0xFF7
 14538                           tblptrl	equ	0xFF6
 14539                           tablat	equ	0xFF5
 14540                           prodh	equ	0xFF4
 14541                           prodl	equ	0xFF3
 14542                           intcon	equ	0xFF2
 14543                           postinc0	equ	0xFEE
 14544                           wreg	equ	0xFE8
 14545                           postdec1	equ	0xFE5
 14546                           fsr1l	equ	0xFE1
 14547                           indf2	equ	0xFDF
 14548                           postinc2	equ	0xFDE
 14549                           postdec2	equ	0xFDD
 14550                           fsr2h	equ	0xFDA
 14551                           fsr2l	equ	0xFD9
 14552                           status	equ	0xFD8
 14553                           
 14554 ;; *************** function _checkPass *****************
 14555 ;; Defined at:
 14556 ;;		line 13 in file "source/DisplayProtocol.h"
 14557 ;; Parameters:    Size  Location     Type
 14558 ;;		None
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  i               2   26[BANK0 ] int 
 14561 ;;  passOK          1   25[BANK0 ] unsigned char 
 14562 ;; Return value:  Size  Location     Type
 14563 ;;                  1    wreg      unsigned char 
 14564 ;; Registers used:
 14565 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14566 ;; Tracked objects:
 14567 ;;		On entry : 0/0
 14568 ;;		On exit  : 0/0
 14569 ;;		Unchanged: 0/0
 14570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14571 ;;      Params:         0       0       0       0       0       0       0
 14572 ;;      Locals:         0       3       0       0       0       0       0
 14573 ;;      Temps:          0       4       0       0       0       0       0
 14574 ;;      Totals:         0       7       0       0       0       0       0
 14575 ;;Total ram usage:        7 bytes
 14576 ;; Hardware stack levels used:    1
 14577 ;; Hardware stack levels required when called:    8
 14578 ;; This function calls:
 14579 ;;		Nothing
 14580 ;; This function is called by:
 14581 ;;		_pressENTER
 14582 ;; This function uses a non-reentrant model
 14583 ;;
 14584                           
 14585                           	psect	text51
 14586  0054BC                     __ptext51:
 14587                           	opt stack 0
 14588  0054BC                     _checkPass:
 14589                           	opt stack 20
 14590                           
 14591                           ;DisplayProtocol.h: 14: int i;
 14592                           ;DisplayProtocol.h: 15: char passOK = 0;
 14593                           
 14594                           ; BSR set to: 0
 14595                           ;incstack = 0
 14596  0054BC  0E00               	movlw	0
 14597  0054BE  0100               	movlb	0	; () banked
 14598  0054C0  6F79               	movwf	checkPass@passOK& (0+255),b
 14599                           
 14600                           ;DisplayProtocol.h: 16: for (i = 0; i < 4; i++) {
 14601  0054C2  0E00               	movlw	0
 14602  0054C4  0100               	movlb	0	; () banked
 14603  0054C6  6F7B               	movwf	(checkPass@i+1)& (0+255),b
 14604  0054C8  0E00               	movlw	0
 14605  0054CA  6F7A               	movwf	checkPass@i& (0+255),b
 14606  0054CC                     l6612:
 14607                           
 14608                           ; BSR set to: 0
 14609  0054CC  0100               	movlb	0	; () banked
 14610  0054CE  BF7B               	btfsc	(checkPass@i+1)& (0+255),7,b
 14611  0054D0  D008               	goto	l6616
 14612  0054D2  0100               	movlb	0	; () banked
 14613  0054D4  517B               	movf	(checkPass@i+1)& (0+255),w,b
 14614  0054D6  E136               	bnz	l6626
 14615  0054D8  0E04               	movlw	4
 14616  0054DA  0100               	movlb	0	; () banked
 14617  0054DC  5D7A               	subwf	checkPass@i& (0+255),w,b
 14618  0054DE  B0D8               	btfsc	status,0,c
 14619  0054E0  D031               	goto	l6626
 14620  0054E2                     l6616:
 14621                           
 14622                           ; BSR set to: 0
 14623                           ;DisplayProtocol.h: 17: if (introducido[i] == contra[i])
 14624  0054E2  0E3B               	movlw	low _contra
 14625  0054E4  0100               	movlb	0	; () banked
 14626  0054E6  257A               	addwf	checkPass@i& (0+255),w,b
 14627  0054E8  6ED9               	movwf	fsr2l,c
 14628  0054EA  0E01               	movlw	high _contra
 14629  0054EC  0100               	movlb	0	; () banked
 14630  0054EE  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 14631  0054F0  6EDA               	movwf	fsr2h,c
 14632  0054F2  50DF               	movf	indf2,w,c
 14633  0054F4  0100               	movlb	0	; () banked
 14634  0054F6  6F75               	movwf	??_checkPass& (0+255),b
 14635  0054F8  6B76               	clrf	(??_checkPass+1)& (0+255),b
 14636  0054FA  0E3F               	movlw	low _introducido
 14637  0054FC  0100               	movlb	0	; () banked
 14638  0054FE  257A               	addwf	checkPass@i& (0+255),w,b
 14639  005500  6ED9               	movwf	fsr2l,c
 14640  005502  0E01               	movlw	high _introducido
 14641  005504  0100               	movlb	0	; () banked
 14642  005506  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 14643  005508  6EDA               	movwf	fsr2h,c
 14644  00550A  50DF               	movf	indf2,w,c
 14645  00550C  0100               	movlb	0	; () banked
 14646  00550E  6F77               	movwf	(??_checkPass+2)& (0+255),b
 14647  005510  6B78               	clrf	(??_checkPass+3)& (0+255),b
 14648  005512  BF77               	btfsc	(??_checkPass+2)& (0+255),7,b
 14649  005514  0778               	decf	(??_checkPass+3)& (0+255),f,b
 14650  005516  0100               	movlb	0	; () banked
 14651  005518  5175               	movf	??_checkPass& (0+255),w,b
 14652  00551A  0100               	movlb	0	; () banked
 14653  00551C  1977               	xorwf	(??_checkPass+2)& (0+255),w,b
 14654  00551E  E10A               	bnz	l6620
 14655  005520  0100               	movlb	0	; () banked
 14656  005522  5176               	movf	(??_checkPass+1)& (0+255),w,b
 14657  005524  0100               	movlb	0	; () banked
 14658  005526  1978               	xorwf	(??_checkPass+3)& (0+255),w,b
 14659  005528  A4D8               	btfss	status,2,c
 14660  00552A  D004               	goto	l6620
 14661                           
 14662                           ; BSR set to: 0
 14663                           ;DisplayProtocol.h: 18: passOK = 1;
 14664  00552C  0E01               	movlw	1
 14665  00552E  0100               	movlb	0	; () banked
 14666  005530  6F79               	movwf	checkPass@passOK& (0+255),b
 14667  005532  D004               	goto	l6622
 14668  005534                     l6620:
 14669                           
 14670                           ; BSR set to: 0
 14671                           ;DisplayProtocol.h: 19: else {
 14672                           ;DisplayProtocol.h: 20: passOK = 0;
 14673  005534  0E00               	movlw	0
 14674  005536  0100               	movlb	0	; () banked
 14675  005538  6F79               	movwf	checkPass@passOK& (0+255),b
 14676                           
 14677                           ;DisplayProtocol.h: 21: break;
 14678  00553A  D004               	goto	l6626
 14679  00553C                     l6622:
 14680                           
 14681                           ; BSR set to: 0
 14682  00553C  0100               	movlb	0	; () banked
 14683  00553E  4B7A               	infsnz	checkPass@i& (0+255),f,b
 14684  005540  2B7B               	incf	(checkPass@i+1)& (0+255),f,b
 14685  005542  D7C4               	goto	l6612
 14686  005544                     l6626:
 14687                           
 14688                           ; BSR set to: 0
 14689                           ;DisplayProtocol.h: 22: }
 14690                           ;DisplayProtocol.h: 23: }
 14691                           ;DisplayProtocol.h: 24: return passOK;
 14692  005544  0100               	movlb	0	; () banked
 14693  005546  5179               	movf	checkPass@passOK& (0+255),w,b
 14694  005548  0012               	return	
 14695  00554A                     __end_of_checkPass:
 14696                           	opt stack 0
 14697                           tblptru	equ	0xFF8
 14698                           tblptrh	equ	0xFF7
 14699                           tblptrl	equ	0xFF6
 14700                           tablat	equ	0xFF5
 14701                           prodh	equ	0xFF4
 14702                           prodl	equ	0xFF3
 14703                           intcon	equ	0xFF2
 14704                           postinc0	equ	0xFEE
 14705                           wreg	equ	0xFE8
 14706                           postdec1	equ	0xFE5
 14707                           fsr1l	equ	0xFE1
 14708                           indf2	equ	0xFDF
 14709                           postinc2	equ	0xFDE
 14710                           postdec2	equ	0xFDD
 14711                           fsr2h	equ	0xFDA
 14712                           fsr2l	equ	0xFD9
 14713                           status	equ	0xFD8
 14714                           
 14715 ;; *************** function _pressDOWN *****************
 14716 ;; Defined at:
 14717 ;;		line 217 in file "source/DisplayProtocol.h"
 14718 ;; Parameters:    Size  Location     Type
 14719 ;;		None
 14720 ;; Auto vars:     Size  Location     Type
 14721 ;;		None
 14722 ;; Return value:  Size  Location     Type
 14723 ;;                  1    wreg      void 
 14724 ;; Registers used:
 14725 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14726 ;; Tracked objects:
 14727 ;;		On entry : 0/0
 14728 ;;		On exit  : 0/0
 14729 ;;		Unchanged: 0/0
 14730 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14731 ;;      Params:         0       0       0       0       0       0       0
 14732 ;;      Locals:         0       0       0       0       0       0       0
 14733 ;;      Temps:          0       1       0       0       0       0       0
 14734 ;;      Totals:         0       1       0       0       0       0       0
 14735 ;;Total ram usage:        1 bytes
 14736 ;; Hardware stack levels used:    1
 14737 ;; Hardware stack levels required when called:    9
 14738 ;; This function calls:
 14739 ;;		_chanValDigDOWN
 14740 ;; This function is called by:
 14741 ;;		_buttonChecking
 14742 ;; This function uses a non-reentrant model
 14743 ;;
 14744                           
 14745                           	psect	text52
 14746  00467E                     __ptext52:
 14747                           	opt stack 0
 14748  00467E                     _pressDOWN:
 14749                           	opt stack 20
 14750                           
 14751                           ;DisplayProtocol.h: 218: if (actualScreen == 0 || actualScreen == 4) {
 14752                           
 14753                           ; BSR set to: 0
 14754                           ;incstack = 0
 14755  00467E  0100               	movlb	0	; () banked
 14756  004680  51D3               	movf	_actualScreen& (0+255),w,b
 14757  004682  B4D8               	btfsc	status,2,c
 14758  004684  D005               	goto	l7182
 14759                           
 14760                           ; BSR set to: 0
 14761  004686  0E04               	movlw	4
 14762  004688  0100               	movlb	0	; () banked
 14763  00468A  19D3               	xorwf	_actualScreen& (0+255),w,b
 14764  00468C  A4D8               	btfss	status,2,c
 14765  00468E  D009               	goto	l7188
 14766  004690                     l7182:
 14767                           
 14768                           ; BSR set to: 0
 14769                           ;DisplayProtocol.h: 219: menuSection--;
 14770  004690  0100               	movlb	0	; () banked
 14771  004692  07D6               	decf	_menuSection& (0+255),f,b
 14772                           
 14773                           ; BSR set to: 0
 14774                           ;DisplayProtocol.h: 220: if (menuSection < 0)
 14775  004694  0100               	movlb	0	; () banked
 14776  004696  AFD6               	btfss	_menuSection& (0+255),7,b
 14777  004698  0012               	return	
 14778                           
 14779                           ; BSR set to: 0
 14780                           ;DisplayProtocol.h: 221: menuSection = 6;
 14781  00469A  0E06               	movlw	6
 14782  00469C  0100               	movlb	0	; () banked
 14783  00469E  6FD6               	movwf	_menuSection& (0+255),b
 14784                           
 14785                           ; BSR set to: 0
 14786                           ;DisplayProtocol.h: 222: } else if (actualScreen == 1) {
 14787  0046A0  0012               	return	
 14788  0046A2                     l7188:
 14789                           
 14790                           ; BSR set to: 0
 14791  0046A2  0100               	movlb	0	; () banked
 14792  0046A4  05D3               	decf	_actualScreen& (0+255),w,b
 14793  0046A6  A4D8               	btfss	status,2,c
 14794  0046A8  D022               	goto	l7194
 14795                           
 14796                           ; BSR set to: 0
 14797                           ;DisplayProtocol.h: 223: introducido[passSection]--;
 14798  0046AA  0100               	movlb	0	; () banked
 14799  0046AC  51D7               	movf	_passSection& (0+255),w,b
 14800  0046AE  0D01               	mullw	1
 14801  0046B0  0E3F               	movlw	low _introducido
 14802  0046B2  24F3               	addwf	prodl,w,c
 14803  0046B4  6ED9               	movwf	fsr2l,c
 14804  0046B6  0E01               	movlw	high _introducido
 14805  0046B8  20F4               	addwfc	prodh,w,c
 14806  0046BA  6EDA               	movwf	fsr2h,c
 14807  0046BC  06DF               	decf	indf2,f,c
 14808                           
 14809                           ;DisplayProtocol.h: 224: if (introducido[passSection] < 0)
 14810  0046BE  0100               	movlb	0	; () banked
 14811  0046C0  51D7               	movf	_passSection& (0+255),w,b
 14812  0046C2  0D01               	mullw	1
 14813  0046C4  0E3F               	movlw	low _introducido
 14814  0046C6  24F3               	addwf	prodl,w,c
 14815  0046C8  6ED9               	movwf	fsr2l,c
 14816  0046CA  0E01               	movlw	high _introducido
 14817  0046CC  20F4               	addwfc	prodh,w,c
 14818  0046CE  6EDA               	movwf	fsr2h,c
 14819  0046D0  0E00               	movlw	0
 14820  0046D2  AEDB               	btfss	plusw2,7,c
 14821  0046D4  0012               	return	
 14822                           
 14823                           ; BSR set to: 0
 14824                           ;DisplayProtocol.h: 225: introducido[passSection] = 9;
 14825  0046D6  0100               	movlb	0	; () banked
 14826  0046D8  51D7               	movf	_passSection& (0+255),w,b
 14827  0046DA  0D01               	mullw	1
 14828  0046DC  0E3F               	movlw	low _introducido
 14829  0046DE  24F3               	addwf	prodl,w,c
 14830  0046E0  6ED9               	movwf	fsr2l,c
 14831  0046E2  0E01               	movlw	high _introducido
 14832  0046E4  20F4               	addwfc	prodh,w,c
 14833  0046E6  6EDA               	movwf	fsr2h,c
 14834  0046E8  0E09               	movlw	9
 14835  0046EA  6EDF               	movwf	indf2,c
 14836                           
 14837                           ; BSR set to: 0
 14838                           ;DisplayProtocol.h: 226: } else if (actualScreen == 2 || actualScreen == 3
 14839  0046EC  0012               	return	
 14840  0046EE                     l7194:
 14841                           
 14842                           ; BSR set to: 0
 14843                           ;DisplayProtocol.h: 227: || actualScreen == 10) {
 14844  0046EE  0E02               	movlw	2
 14845  0046F0  0100               	movlb	0	; () banked
 14846  0046F2  19D3               	xorwf	_actualScreen& (0+255),w,b
 14847  0046F4  B4D8               	btfsc	status,2,c
 14848  0046F6  D00A               	goto	l7200
 14849                           
 14850                           ; BSR set to: 0
 14851  0046F8  0E03               	movlw	3
 14852  0046FA  0100               	movlb	0	; () banked
 14853  0046FC  19D3               	xorwf	_actualScreen& (0+255),w,b
 14854  0046FE  B4D8               	btfsc	status,2,c
 14855  004700  D005               	goto	l7200
 14856                           
 14857                           ; BSR set to: 0
 14858  004702  0E0A               	movlw	10
 14859  004704  0100               	movlb	0	; () banked
 14860  004706  19D3               	xorwf	_actualScreen& (0+255),w,b
 14861  004708  A4D8               	btfss	status,2,c
 14862  00470A  D011               	goto	l7206
 14863  00470C                     l7200:
 14864                           
 14865                           ; BSR set to: 0
 14866                           ;DisplayProtocol.h: 228: selSN = !selSN;
 14867  00470C  0100               	movlb	0	; () banked
 14868  00470E  51D9               	movf	_selSN& (0+255),w,b
 14869  004710  A4D8               	btfss	status,2,c
 14870  004712  D002               	goto	u8500
 14871  004714  0E01               	movlw	1
 14872  004716  D001               	goto	u8510
 14873  004718                     u8500:
 14874  004718  0E00               	movlw	0
 14875  00471A                     u8510:
 14876  00471A  0100               	movlb	0	; () banked
 14877  00471C  6FD9               	movwf	_selSN& (0+255),b
 14878                           
 14879                           ; BSR set to: 0
 14880                           ;DisplayProtocol.h: 229: if(selSN > 1)
 14881  00471E  0E01               	movlw	1
 14882  004720  0100               	movlb	0	; () banked
 14883  004722  65D9               	cpfsgt	_selSN& (0+255),b
 14884  004724  0012               	return	
 14885                           
 14886                           ; BSR set to: 0
 14887                           ;DisplayProtocol.h: 230: selSN = 0;
 14888  004726  0E00               	movlw	0
 14889  004728  0100               	movlb	0	; () banked
 14890  00472A  6FD9               	movwf	_selSN& (0+255),b
 14891                           
 14892                           ; BSR set to: 0
 14893                           ;DisplayProtocol.h: 231: }else if(actualScreen == 5) {
 14894  00472C  0012               	return	
 14895  00472E                     l7206:
 14896                           
 14897                           ; BSR set to: 0
 14898  00472E  0E05               	movlw	5
 14899  004730  0100               	movlb	0	; () banked
 14900  004732  19D3               	xorwf	_actualScreen& (0+255),w,b
 14901  004734  A4D8               	btfss	status,2,c
 14902  004736  0012               	return	
 14903  004738  D01A               	goto	l7228
 14904  00473A                     l7210:
 14905                           
 14906                           ; BSR set to: 0
 14907                           ;DisplayProtocol.h: 236: selKMT--;
 14908  00473A  0100               	movlb	0	; () banked
 14909  00473C  07D8               	decf	_selKMT& (0+255),f,b
 14910                           
 14911                           ; BSR set to: 0
 14912                           ;DisplayProtocol.h: 237: if(selKMT < 0)
 14913  00473E  0100               	movlb	0	; () banked
 14914  004740  AFD8               	btfss	_selKMT& (0+255),7,b
 14915  004742  0012               	return	
 14916                           
 14917                           ; BSR set to: 0
 14918                           ;DisplayProtocol.h: 238: selKMT = 2;
 14919  004744  0E02               	movlw	2
 14920  004746  0100               	movlb	0	; () banked
 14921  004748  6FD8               	movwf	_selKMT& (0+255),b
 14922                           
 14923                           ; BSR set to: 0
 14924                           ;DisplayProtocol.h: 239: break;
 14925  00474A  0012               	return	
 14926  00474C                     l7216:
 14927                           
 14928                           ; BSR set to: 0
 14929                           ;DisplayProtocol.h: 241: chanValDigDOWN();
 14930  00474C  ECCB  F026         	call	_chanValDigDOWN	;wreg free
 14931                           
 14932                           ;DisplayProtocol.h: 242: break;
 14933  004750  0012               	return	
 14934  004752                     l7218:
 14935                           
 14936                           ;DisplayProtocol.h: 244: chanVals--;
 14937  004752  0101               	movlb	1	; () banked
 14938  004754  074A               	decf	_chanVals& (0+255),f,b
 14939  004756  A0D8               	btfss	status,0,c
 14940  004758  074B               	decf	(_chanVals+1)& (0+255),f,b
 14941                           
 14942                           ;DisplayProtocol.h: 245: break;
 14943  00475A  0012               	return	
 14944  00475C                     l7220:
 14945                           
 14946                           ;DisplayProtocol.h: 247: chanValDigDOWN();
 14947  00475C  ECCB  F026         	call	_chanValDigDOWN	;wreg free
 14948                           
 14949                           ;DisplayProtocol.h: 248: break;
 14950  004760  0012               	return	
 14951  004762                     l7222:
 14952                           
 14953                           ;DisplayProtocol.h: 250: chanValDigDOWN();
 14954  004762  ECCB  F026         	call	_chanValDigDOWN	;wreg free
 14955                           
 14956                           ;DisplayProtocol.h: 251: break;
 14957  004766  0012               	return	
 14958  004768                     l7224:
 14959                           
 14960                           ;DisplayProtocol.h: 253: chanValDigDOWN();
 14961  004768  ECCB  F026         	call	_chanValDigDOWN	;wreg free
 14962                           
 14963                           ;DisplayProtocol.h: 255: }
 14964                           ;DisplayProtocol.h: 256: }
 14965                           
 14966                           ;DisplayProtocol.h: 254: break;
 14967  00476C  0012               	return	
 14968  00476E                     l7228:
 14969  00476E  0100               	movlb	0	; () banked
 14970  004770  51D6               	movf	_menuSection& (0+255),w,b
 14971                           
 14972                           ; Switch size 1, requested type "space"
 14973                           ; Number of cases is 7, Range of values is 0 to 6
 14974                           ; switch strategies available:
 14975                           ; Name         Instructions Cycles
 14976                           ; simple_byte           22    12 (average)
 14977                           ;	Chosen strategy is simple_byte
 14978  004772  0A00               	xorlw	0	; case 0
 14979  004774  B4D8               	btfsc	status,2,c
 14980  004776  0012               	return	
 14981  004778  0A01               	xorlw	1	; case 1
 14982  00477A  B4D8               	btfsc	status,2,c
 14983  00477C  D7DE               	goto	l7210
 14984  00477E  0A03               	xorlw	3	; case 2
 14985  004780  B4D8               	btfsc	status,2,c
 14986  004782  D7E4               	goto	l7216
 14987  004784  0A01               	xorlw	1	; case 3
 14988  004786  B4D8               	btfsc	status,2,c
 14989  004788  D7E4               	goto	l7218
 14990  00478A  0A07               	xorlw	7	; case 4
 14991  00478C  B4D8               	btfsc	status,2,c
 14992  00478E  D7E6               	goto	l7220
 14993  004790  0A01               	xorlw	1	; case 5
 14994  004792  B4D8               	btfsc	status,2,c
 14995  004794  D7E6               	goto	l7222
 14996  004796  0A03               	xorlw	3	; case 6
 14997  004798  A4D8               	btfss	status,2,c
 14998                           
 14999                           ; BSR set to: 0
 15000                           
 15001                           ; BSR set to: 0
 15002                           
 15003                           ; BSR set to: 0
 15004                           
 15005                           ; BSR set to: 0
 15006  00479A  0012               	return	
 15007  00479C  D7E5               	goto	l7224
 15008  00479E                     __end_of_pressDOWN:
 15009                           	opt stack 0
 15010                           tblptru	equ	0xFF8
 15011                           tblptrh	equ	0xFF7
 15012                           tblptrl	equ	0xFF6
 15013                           tablat	equ	0xFF5
 15014                           prodh	equ	0xFF4
 15015                           prodl	equ	0xFF3
 15016                           intcon	equ	0xFF2
 15017                           postinc0	equ	0xFEE
 15018                           wreg	equ	0xFE8
 15019                           postdec1	equ	0xFE5
 15020                           fsr1l	equ	0xFE1
 15021                           indf2	equ	0xFDF
 15022                           postinc2	equ	0xFDE
 15023                           postdec2	equ	0xFDD
 15024                           plusw2	equ	0xFDB
 15025                           fsr2h	equ	0xFDA
 15026                           fsr2l	equ	0xFD9
 15027                           status	equ	0xFD8
 15028                           
 15029 ;; *************** function _chanValDigDOWN *****************
 15030 ;; Defined at:
 15031 ;;		line 36 in file "source/DisplayProtocol.h"
 15032 ;; Parameters:    Size  Location     Type
 15033 ;;		None
 15034 ;; Auto vars:     Size  Location     Type
 15035 ;;		None
 15036 ;; Return value:  Size  Location     Type
 15037 ;;                  1    wreg      void 
 15038 ;; Registers used:
 15039 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 15040 ;; Tracked objects:
 15041 ;;		On entry : 0/0
 15042 ;;		On exit  : 0/0
 15043 ;;		Unchanged: 0/0
 15044 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15045 ;;      Params:         0       0       0       0       0       0       0
 15046 ;;      Locals:         0       0       0       0       0       0       0
 15047 ;;      Temps:          0       5       0       0       0       0       0
 15048 ;;      Totals:         0       5       0       0       0       0       0
 15049 ;;Total ram usage:        5 bytes
 15050 ;; Hardware stack levels used:    1
 15051 ;; Hardware stack levels required when called:    8
 15052 ;; This function calls:
 15053 ;;		Nothing
 15054 ;; This function is called by:
 15055 ;;		_pressDOWN
 15056 ;; This function uses a non-reentrant model
 15057 ;;
 15058                           
 15059                           	psect	text53
 15060  004D96                     __ptext53:
 15061                           	opt stack 0
 15062  004D96                     _chanValDigDOWN:
 15063                           	opt stack 20
 15064                           
 15065                           ;DisplayProtocol.h: 37: chanValdig[chanValSection]--;
 15066                           
 15067                           ;incstack = 0
 15068  004D96  0100               	movlb	0	; () banked
 15069  004D98  51E1               	movf	_chanValSection& (0+255),w,b
 15070  004D9A  0D01               	mullw	1
 15071  004D9C  0E31               	movlw	low _chanValdig
 15072  004D9E  24F3               	addwf	prodl,w,c
 15073  004DA0  6ED9               	movwf	fsr2l,c
 15074  004DA2  0E01               	movlw	high _chanValdig
 15075  004DA4  20F4               	addwfc	prodh,w,c
 15076  004DA6  6EDA               	movwf	fsr2h,c
 15077  004DA8  06DF               	decf	indf2,f,c
 15078                           
 15079                           ;DisplayProtocol.h: 38: if(chanValdig[chanValSection] < 0) {
 15080  004DAA  0100               	movlb	0	; () banked
 15081  004DAC  51E1               	movf	_chanValSection& (0+255),w,b
 15082  004DAE  0D01               	mullw	1
 15083  004DB0  0E31               	movlw	low _chanValdig
 15084  004DB2  24F3               	addwf	prodl,w,c
 15085  004DB4  6ED9               	movwf	fsr2l,c
 15086  004DB6  0E01               	movlw	high _chanValdig
 15087  004DB8  20F4               	addwfc	prodh,w,c
 15088  004DBA  6EDA               	movwf	fsr2h,c
 15089  004DBC  0E00               	movlw	0
 15090  004DBE  AEDB               	btfss	plusw2,7,c
 15091  004DC0  0012               	return	
 15092                           
 15093                           ; BSR set to: 0
 15094                           ;DisplayProtocol.h: 39: chanValdig[chanValSection] = 9;
 15095  004DC2  0100               	movlb	0	; () banked
 15096  004DC4  51E1               	movf	_chanValSection& (0+255),w,b
 15097  004DC6  0D01               	mullw	1
 15098  004DC8  0E31               	movlw	low _chanValdig
 15099  004DCA  24F3               	addwf	prodl,w,c
 15100  004DCC  6ED9               	movwf	fsr2l,c
 15101  004DCE  0E01               	movlw	high _chanValdig
 15102  004DD0  20F4               	addwfc	prodh,w,c
 15103  004DD2  6EDA               	movwf	fsr2h,c
 15104  004DD4  0E09               	movlw	9
 15105  004DD6  6EDF               	movwf	indf2,c
 15106                           
 15107                           ; BSR set to: 0
 15108                           ;DisplayProtocol.h: 40: if(chanValSection > 1 && chanValdig[chanValSection - 1] > 0)
 15109  004DD8  0100               	movlb	0	; () banked
 15110  004DDA  51E1               	movf	_chanValSection& (0+255),w,b
 15111  004DDC  0A80               	xorlw	128
 15112  004DDE  0F7E               	addlw	-130
 15113  004DE0  A0D8               	btfss	status,0,c
 15114  004DE2  0012               	return	
 15115                           
 15116                           ; BSR set to: 0
 15117  004DE4  0EFF               	movlw	255
 15118  004DE6  0100               	movlb	0	; () banked
 15119  004DE8  6F75               	movwf	??_chanValDigDOWN& (0+255),b
 15120  004DEA  0EFF               	movlw	255
 15121  004DEC  0100               	movlb	0	; () banked
 15122  004DEE  6F76               	movwf	(??_chanValDigDOWN+1)& (0+255),b
 15123  004DF0  C0E1  F077         	movff	_chanValSection,??_chanValDigDOWN+2
 15124  004DF4  0100               	movlb	0	; () banked
 15125  004DF6  6B78               	clrf	(??_chanValDigDOWN+3)& (0+255),b
 15126  004DF8  BF77               	btfsc	(??_chanValDigDOWN+2)& (0+255),7,b
 15127  004DFA  0778               	decf	(??_chanValDigDOWN+3)& (0+255),f,b
 15128  004DFC  0100               	movlb	0	; () banked
 15129  004DFE  5175               	movf	??_chanValDigDOWN& (0+255),w,b
 15130  004E00  0100               	movlb	0	; () banked
 15131  004E02  2777               	addwf	(??_chanValDigDOWN+2)& (0+255),f,b
 15132  004E04  0100               	movlb	0	; () banked
 15133  004E06  5176               	movf	(??_chanValDigDOWN+1)& (0+255),w,b
 15134  004E08  0100               	movlb	0	; () banked
 15135  004E0A  2378               	addwfc	(??_chanValDigDOWN+3)& (0+255),f,b
 15136  004E0C  0E31               	movlw	low _chanValdig
 15137  004E0E  0100               	movlb	0	; () banked
 15138  004E10  2577               	addwf	(??_chanValDigDOWN+2)& (0+255),w,b
 15139  004E12  6ED9               	movwf	fsr2l,c
 15140  004E14  0E01               	movlw	high _chanValdig
 15141  004E16  0100               	movlb	0	; () banked
 15142  004E18  2178               	addwfc	(??_chanValDigDOWN+3)& (0+255),w,b
 15143  004E1A  6EDA               	movwf	fsr2h,c
 15144  004E1C  50DF               	movf	indf2,w,c
 15145  004E1E  0A80               	xorlw	128
 15146  004E20  0F7F               	addlw	-129
 15147  004E22  A0D8               	btfss	status,0,c
 15148  004E24  0012               	return	
 15149                           
 15150                           ; BSR set to: 0
 15151                           ;DisplayProtocol.h: 41: chanValdig[chanValSection - 1]--;
 15152  004E26  0EFF               	movlw	255
 15153  004E28  0100               	movlb	0	; () banked
 15154  004E2A  6F75               	movwf	??_chanValDigDOWN& (0+255),b
 15155  004E2C  0EFF               	movlw	255
 15156  004E2E  0100               	movlb	0	; () banked
 15157  004E30  6F76               	movwf	(??_chanValDigDOWN+1)& (0+255),b
 15158  004E32  C0E1  F077         	movff	_chanValSection,??_chanValDigDOWN+2
 15159  004E36  0100               	movlb	0	; () banked
 15160  004E38  6B78               	clrf	(??_chanValDigDOWN+3)& (0+255),b
 15161  004E3A  BF77               	btfsc	(??_chanValDigDOWN+2)& (0+255),7,b
 15162  004E3C  0778               	decf	(??_chanValDigDOWN+3)& (0+255),f,b
 15163  004E3E  0100               	movlb	0	; () banked
 15164  004E40  5175               	movf	??_chanValDigDOWN& (0+255),w,b
 15165  004E42  0100               	movlb	0	; () banked
 15166  004E44  2777               	addwf	(??_chanValDigDOWN+2)& (0+255),f,b
 15167  004E46  0100               	movlb	0	; () banked
 15168  004E48  5176               	movf	(??_chanValDigDOWN+1)& (0+255),w,b
 15169  004E4A  0100               	movlb	0	; () banked
 15170  004E4C  2378               	addwfc	(??_chanValDigDOWN+3)& (0+255),f,b
 15171  004E4E  0E31               	movlw	low _chanValdig
 15172  004E50  0100               	movlb	0	; () banked
 15173  004E52  2577               	addwf	(??_chanValDigDOWN+2)& (0+255),w,b
 15174  004E54  6ED9               	movwf	fsr2l,c
 15175  004E56  0E01               	movlw	high _chanValdig
 15176  004E58  0100               	movlb	0	; () banked
 15177  004E5A  2178               	addwfc	(??_chanValDigDOWN+3)& (0+255),w,b
 15178  004E5C  6EDA               	movwf	fsr2h,c
 15179  004E5E  06DF               	decf	indf2,f,c
 15180                           
 15181                           ; BSR set to: 0
 15182  004E60  0012               	return	
 15183  004E62                     __end_of_chanValDigDOWN:
 15184                           	opt stack 0
 15185                           tblptru	equ	0xFF8
 15186                           tblptrh	equ	0xFF7
 15187                           tblptrl	equ	0xFF6
 15188                           tablat	equ	0xFF5
 15189                           prodh	equ	0xFF4
 15190                           prodl	equ	0xFF3
 15191                           intcon	equ	0xFF2
 15192                           postinc0	equ	0xFEE
 15193                           wreg	equ	0xFE8
 15194                           postdec1	equ	0xFE5
 15195                           fsr1l	equ	0xFE1
 15196                           indf2	equ	0xFDF
 15197                           postinc2	equ	0xFDE
 15198                           postdec2	equ	0xFDD
 15199                           plusw2	equ	0xFDB
 15200                           fsr2h	equ	0xFDA
 15201                           fsr2l	equ	0xFD9
 15202                           status	equ	0xFD8
 15203                           
 15204 ;; *************** function _longPressUP *****************
 15205 ;; Defined at:
 15206 ;;		line 193 in file "source/DisplayProtocol.h"
 15207 ;; Parameters:    Size  Location     Type
 15208 ;;		None
 15209 ;; Auto vars:     Size  Location     Type
 15210 ;;		None
 15211 ;; Return value:  Size  Location     Type
 15212 ;;                  1    wreg      void 
 15213 ;; Registers used:
 15214 ;;		wreg, status,2, status,0
 15215 ;; Tracked objects:
 15216 ;;		On entry : 0/0
 15217 ;;		On exit  : 0/0
 15218 ;;		Unchanged: 0/0
 15219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15220 ;;      Params:         0       0       0       0       0       0       0
 15221 ;;      Locals:         0       0       0       0       0       0       0
 15222 ;;      Temps:          0       0       0       0       0       0       0
 15223 ;;      Totals:         0       0       0       0       0       0       0
 15224 ;;Total ram usage:        0 bytes
 15225 ;; Hardware stack levels used:    1
 15226 ;; Hardware stack levels required when called:    8
 15227 ;; This function calls:
 15228 ;;		Nothing
 15229 ;; This function is called by:
 15230 ;;		_buttonChecking
 15231 ;; This function uses a non-reentrant model
 15232 ;;
 15233                           
 15234                           	psect	text54
 15235  0056BA                     __ptext54:
 15236                           	opt stack 0
 15237  0056BA                     _longPressUP:
 15238                           	opt stack 21
 15239                           
 15240                           ;DisplayProtocol.h: 194: if (!UPisLP) {
 15241                           
 15242                           ; BSR set to: 0
 15243                           ;incstack = 0
 15244  0056BA  0101               	movlb	1	; () banked
 15245  0056BC  5156               	movf	_UPisLP& (0+255),w,b
 15246  0056BE  0101               	movlb	1	; () banked
 15247  0056C0  A4D8               	btfss	status,2,c
 15248  0056C2  0012               	return	
 15249                           
 15250                           ; BSR set to: 1
 15251                           ;DisplayProtocol.h: 195: UPisLP = 1;
 15252  0056C4  0E01               	movlw	1
 15253  0056C6  0101               	movlb	1	; () banked
 15254  0056C8  6F56               	movwf	_UPisLP& (0+255),b
 15255                           
 15256                           ;DisplayProtocol.h: 196: if (actualScreen == 0 || actualScreen == 4) {
 15257  0056CA  0100               	movlb	0	; () banked
 15258  0056CC  51D3               	movf	_actualScreen& (0+255),w,b
 15259  0056CE  B4D8               	btfsc	status,2,c
 15260  0056D0  D005               	goto	l7158
 15261                           
 15262                           ; BSR set to: 0
 15263  0056D2  0E04               	movlw	4
 15264  0056D4  0100               	movlb	0	; () banked
 15265  0056D6  19D3               	xorwf	_actualScreen& (0+255),w,b
 15266  0056D8  A4D8               	btfss	status,2,c
 15267  0056DA  D01C               	goto	l7170
 15268  0056DC                     l7158:
 15269                           
 15270                           ; BSR set to: 0
 15271                           ;DisplayProtocol.h: 197: if (holdENTERcont > 5) {
 15272  0056DC  0E05               	movlw	5
 15273  0056DE  0100               	movlb	0	; () banked
 15274  0056E0  65D4               	cpfsgt	_holdENTERcont& (0+255),b
 15275  0056E2  D014               	goto	l7168
 15276                           
 15277                           ; BSR set to: 0
 15278                           ;DisplayProtocol.h: 198: if (actualScreen == 0) {
 15279  0056E4  0100               	movlb	0	; () banked
 15280  0056E6  51D3               	movf	_actualScreen& (0+255),w,b
 15281  0056E8  A4D8               	btfss	status,2,c
 15282  0056EA  D007               	goto	l7164
 15283                           
 15284                           ; BSR set to: 0
 15285                           ;DisplayProtocol.h: 199: actualScreen = 1;
 15286  0056EC  0E01               	movlw	1
 15287  0056EE  0100               	movlb	0	; () banked
 15288  0056F0  6FD3               	movwf	_actualScreen& (0+255),b
 15289                           
 15290                           ;DisplayProtocol.h: 200: fd = 0;
 15291  0056F2  0E00               	movlw	0
 15292  0056F4  0101               	movlb	1	; () banked
 15293  0056F6  6F58               	movwf	_fd& (0+255),b
 15294                           
 15295                           ;DisplayProtocol.h: 201: } else if (actualScreen == 4)
 15296  0056F8  0012               	return	
 15297  0056FA                     l7164:
 15298  0056FA  0E04               	movlw	4
 15299  0056FC  0100               	movlb	0	; () banked
 15300  0056FE  19D3               	xorwf	_actualScreen& (0+255),w,b
 15301  005700  A4D8               	btfss	status,2,c
 15302  005702  0012               	return	
 15303                           
 15304                           ; BSR set to: 0
 15305                           ;DisplayProtocol.h: 202: actualScreen = 9;
 15306  005704  0E09               	movlw	9
 15307  005706  0100               	movlb	0	; () banked
 15308  005708  6FD3               	movwf	_actualScreen& (0+255),b
 15309                           
 15310                           ; BSR set to: 0
 15311                           ;DisplayProtocol.h: 203: } else
 15312                           
 15313                           ; BSR set to: 0
 15314  00570A  0012               	return	
 15315  00570C                     l7168:
 15316                           
 15317                           ; BSR set to: 0
 15318                           ;DisplayProtocol.h: 204: menuSection = 0;
 15319  00570C  0E00               	movlw	0
 15320  00570E  0100               	movlb	0	; () banked
 15321  005710  6FD6               	movwf	_menuSection& (0+255),b
 15322                           
 15323                           ; BSR set to: 0
 15324                           ;DisplayProtocol.h: 205: }else if(actualScreen == 5) {
 15325  005712  0012               	return	
 15326  005714                     l7170:
 15327                           
 15328                           ; BSR set to: 0
 15329  005714  0E05               	movlw	5
 15330  005716  0100               	movlb	0	; () banked
 15331  005718  19D3               	xorwf	_actualScreen& (0+255),w,b
 15332  00571A  A4D8               	btfss	status,2,c
 15333  00571C  0012               	return	
 15334                           
 15335                           ; BSR set to: 0
 15336                           ;DisplayProtocol.h: 206: if(menuSection == 3)
 15337  00571E  0E03               	movlw	3
 15338  005720  0100               	movlb	0	; () banked
 15339  005722  19D6               	xorwf	_menuSection& (0+255),w,b
 15340  005724  A4D8               	btfss	status,2,c
 15341  005726  0012               	return	
 15342                           
 15343                           ; BSR set to: 0
 15344                           ;DisplayProtocol.h: 207: chanVals += 10;
 15345  005728  0E0A               	movlw	10
 15346  00572A  0101               	movlb	1	; () banked
 15347  00572C  274A               	addwf	_chanVals& (0+255),f,b
 15348  00572E  0E00               	movlw	0
 15349  005730  234B               	addwfc	(_chanVals+1)& (0+255),f,b
 15350                           
 15351                           ; BSR set to: 1
 15352                           
 15353                           ; BSR set to: 1
 15354                           
 15355                           ; BSR set to: 1
 15356  005732  0012               	return	
 15357  005734                     __end_of_longPressUP:
 15358                           	opt stack 0
 15359                           tblptru	equ	0xFF8
 15360                           tblptrh	equ	0xFF7
 15361                           tblptrl	equ	0xFF6
 15362                           tablat	equ	0xFF5
 15363                           prodh	equ	0xFF4
 15364                           prodl	equ	0xFF3
 15365                           intcon	equ	0xFF2
 15366                           postinc0	equ	0xFEE
 15367                           wreg	equ	0xFE8
 15368                           postdec1	equ	0xFE5
 15369                           fsr1l	equ	0xFE1
 15370                           indf2	equ	0xFDF
 15371                           postinc2	equ	0xFDE
 15372                           postdec2	equ	0xFDD
 15373                           plusw2	equ	0xFDB
 15374                           fsr2h	equ	0xFDA
 15375                           fsr2l	equ	0xFD9
 15376                           status	equ	0xFD8
 15377                           
 15378 ;; *************** function _longPressRETRO *****************
 15379 ;; Defined at:
 15380 ;;		line 292 in file "source/DisplayProtocol.h"
 15381 ;; Parameters:    Size  Location     Type
 15382 ;;		None
 15383 ;; Auto vars:     Size  Location     Type
 15384 ;;		None
 15385 ;; Return value:  Size  Location     Type
 15386 ;;                  1    wreg      void 
 15387 ;; Registers used:
 15388 ;;		wreg, status,2, status,0
 15389 ;; Tracked objects:
 15390 ;;		On entry : 0/0
 15391 ;;		On exit  : 0/0
 15392 ;;		Unchanged: 0/0
 15393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15394 ;;      Params:         0       0       0       0       0       0       0
 15395 ;;      Locals:         0       0       0       0       0       0       0
 15396 ;;      Temps:          0       0       0       0       0       0       0
 15397 ;;      Totals:         0       0       0       0       0       0       0
 15398 ;;Total ram usage:        0 bytes
 15399 ;; Hardware stack levels used:    1
 15400 ;; Hardware stack levels required when called:    8
 15401 ;; This function calls:
 15402 ;;		Nothing
 15403 ;; This function is called by:
 15404 ;;		_buttonChecking
 15405 ;; This function uses a non-reentrant model
 15406 ;;
 15407                           
 15408                           	psect	text55
 15409  0059DA                     __ptext55:
 15410                           	opt stack 0
 15411  0059DA                     _longPressRETRO:
 15412                           	opt stack 21
 15413                           
 15414                           ;DisplayProtocol.h: 293: if (!RETROisLP) {
 15415                           
 15416                           ;incstack = 0
 15417  0059DA  0101               	movlb	1	; () banked
 15418  0059DC  5154               	movf	_RETROisLP& (0+255),w,b
 15419  0059DE  0101               	movlb	1	; () banked
 15420  0059E0  A4D8               	btfss	status,2,c
 15421  0059E2  0012               	return	
 15422                           
 15423                           ; BSR set to: 1
 15424                           ;DisplayProtocol.h: 294: RETROisLP = 1;
 15425  0059E4  0E01               	movlw	1
 15426  0059E6  0101               	movlb	1	; () banked
 15427  0059E8  6F54               	movwf	_RETROisLP& (0+255),b
 15428                           
 15429                           ;DisplayProtocol.h: 295: if(actualScreen == 0 || actualScreen == 4) {
 15430  0059EA  0100               	movlb	0	; () banked
 15431  0059EC  51D3               	movf	_actualScreen& (0+255),w,b
 15432  0059EE  B4D8               	btfsc	status,2,c
 15433  0059F0  D005               	goto	l7272
 15434                           
 15435                           ; BSR set to: 0
 15436  0059F2  0E04               	movlw	4
 15437  0059F4  0100               	movlb	0	; () banked
 15438  0059F6  19D3               	xorwf	_actualScreen& (0+255),w,b
 15439  0059F8  A4D8               	btfss	status,2,c
 15440  0059FA  D00D               	goto	l7278
 15441  0059FC                     l7272:
 15442                           
 15443                           ; BSR set to: 0
 15444                           ;DisplayProtocol.h: 296: if(ProcessStarted) {
 15445  0059FC  0100               	movlb	0	; () banked
 15446  0059FE  51D2               	movf	_ProcessStarted& (0+255),w,b
 15447  005A00  B4D8               	btfsc	status,2,c
 15448  005A02  0012               	return	
 15449                           
 15450                           ; BSR set to: 0
 15451                           ;DisplayProtocol.h: 297: tempLastScreen = actualScreen;
 15452  005A04  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 15453                           
 15454                           ; BSR set to: 0
 15455                           ;DisplayProtocol.h: 298: actualScreen = 3;
 15456  005A08  0E03               	movlw	3
 15457  005A0A  0100               	movlb	0	; () banked
 15458  005A0C  6FD3               	movwf	_actualScreen& (0+255),b
 15459                           
 15460                           ;DisplayProtocol.h: 299: selSN = 0;
 15461  005A0E  0E00               	movlw	0
 15462  005A10  0100               	movlb	0	; () banked
 15463  005A12  6FD9               	movwf	_selSN& (0+255),b
 15464                           
 15465                           ; BSR set to: 0
 15466                           ;DisplayProtocol.h: 300: }
 15467                           ;DisplayProtocol.h: 301: }else if(actualScreen == 5)
 15468  005A14  0012               	return	
 15469  005A16                     l7278:
 15470                           
 15471                           ; BSR set to: 0
 15472  005A16  0E05               	movlw	5
 15473  005A18  0100               	movlb	0	; () banked
 15474  005A1A  19D3               	xorwf	_actualScreen& (0+255),w,b
 15475  005A1C  A4D8               	btfss	status,2,c
 15476  005A1E  0012               	return	
 15477                           
 15478                           ; BSR set to: 0
 15479                           ;DisplayProtocol.h: 302: actualScreen = 4;
 15480  005A20  0E04               	movlw	4
 15481  005A22  0100               	movlb	0	; () banked
 15482  005A24  6FD3               	movwf	_actualScreen& (0+255),b
 15483                           
 15484                           ; BSR set to: 0
 15485                           
 15486                           ; BSR set to: 0
 15487  005A26  0012               	return	
 15488  005A28                     __end_of_longPressRETRO:
 15489                           	opt stack 0
 15490                           tblptru	equ	0xFF8
 15491                           tblptrh	equ	0xFF7
 15492                           tblptrl	equ	0xFF6
 15493                           tablat	equ	0xFF5
 15494                           prodh	equ	0xFF4
 15495                           prodl	equ	0xFF3
 15496                           intcon	equ	0xFF2
 15497                           postinc0	equ	0xFEE
 15498                           wreg	equ	0xFE8
 15499                           postdec1	equ	0xFE5
 15500                           fsr1l	equ	0xFE1
 15501                           indf2	equ	0xFDF
 15502                           postinc2	equ	0xFDE
 15503                           postdec2	equ	0xFDD
 15504                           plusw2	equ	0xFDB
 15505                           fsr2h	equ	0xFDA
 15506                           fsr2l	equ	0xFD9
 15507                           status	equ	0xFD8
 15508                           
 15509 ;; *************** function _longPressENTER *****************
 15510 ;; Defined at:
 15511 ;;		line 398 in file "source/DisplayProtocol.h"
 15512 ;; Parameters:    Size  Location     Type
 15513 ;;		None
 15514 ;; Auto vars:     Size  Location     Type
 15515 ;;		None
 15516 ;; Return value:  Size  Location     Type
 15517 ;;                  1    wreg      void 
 15518 ;; Registers used:
 15519 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15520 ;; Tracked objects:
 15521 ;;		On entry : 0/0
 15522 ;;		On exit  : 0/0
 15523 ;;		Unchanged: 0/0
 15524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15525 ;;      Params:         0       0       0       0       0       0       0
 15526 ;;      Locals:         0       0       0       0       0       0       0
 15527 ;;      Temps:          0       0       0       0       0       0       0
 15528 ;;      Totals:         0       0       0       0       0       0       0
 15529 ;;Total ram usage:        0 bytes
 15530 ;; Hardware stack levels used:    1
 15531 ;; Hardware stack levels required when called:   12
 15532 ;; This function calls:
 15533 ;;		_confirmEdition
 15534 ;;		_integrator
 15535 ;; This function is called by:
 15536 ;;		_buttonChecking
 15537 ;; This function uses a non-reentrant model
 15538 ;;
 15539                           
 15540                           	psect	text56
 15541  0051D4                     __ptext56:
 15542                           	opt stack 0
 15543  0051D4                     _longPressENTER:
 15544                           	opt stack 17
 15545                           
 15546                           ;DisplayProtocol.h: 399: if (!ENTERisLP) {
 15547                           
 15548                           ;incstack = 0
 15549  0051D4  0101               	movlb	1	; () banked
 15550  0051D6  5152               	movf	_ENTERisLP& (0+255),w,b
 15551  0051D8  0101               	movlb	1	; () banked
 15552  0051DA  A4D8               	btfss	status,2,c
 15553  0051DC  0012               	return	
 15554                           
 15555                           ; BSR set to: 1
 15556                           ;DisplayProtocol.h: 400: ENTERisLP = 1;
 15557  0051DE  0E01               	movlw	1
 15558  0051E0  0101               	movlb	1	; () banked
 15559  0051E2  6F52               	movwf	_ENTERisLP& (0+255),b
 15560                           
 15561                           ;DisplayProtocol.h: 401: if(actualScreen == 0 || actualScreen == 4) {
 15562  0051E4  0100               	movlb	0	; () banked
 15563  0051E6  51D3               	movf	_actualScreen& (0+255),w,b
 15564  0051E8  B4D8               	btfsc	status,2,c
 15565  0051EA  D005               	goto	l10142
 15566                           
 15567                           ; BSR set to: 0
 15568  0051EC  0E04               	movlw	4
 15569  0051EE  0100               	movlb	0	; () banked
 15570  0051F0  19D3               	xorwf	_actualScreen& (0+255),w,b
 15571  0051F2  A4D8               	btfss	status,2,c
 15572  0051F4  D025               	goto	l10158
 15573  0051F6                     l10142:
 15574                           
 15575                           ; BSR set to: 0
 15576                           ;DisplayProtocol.h: 402: if (holdUPcont > 5) {
 15577  0051F6  0E05               	movlw	5
 15578  0051F8  0100               	movlb	0	; () banked
 15579  0051FA  65D5               	cpfsgt	_holdUPcont& (0+255),b
 15580  0051FC  D014               	goto	l10152
 15581                           
 15582                           ; BSR set to: 0
 15583                           ;DisplayProtocol.h: 403: if (actualScreen == 0) {
 15584  0051FE  0100               	movlb	0	; () banked
 15585  005200  51D3               	movf	_actualScreen& (0+255),w,b
 15586  005202  A4D8               	btfss	status,2,c
 15587  005204  D007               	goto	l10148
 15588                           
 15589                           ; BSR set to: 0
 15590                           ;DisplayProtocol.h: 404: actualScreen = 1;
 15591  005206  0E01               	movlw	1
 15592  005208  0100               	movlb	0	; () banked
 15593  00520A  6FD3               	movwf	_actualScreen& (0+255),b
 15594                           
 15595                           ;DisplayProtocol.h: 405: fd = 0;
 15596  00520C  0E00               	movlw	0
 15597  00520E  0101               	movlb	1	; () banked
 15598  005210  6F58               	movwf	_fd& (0+255),b
 15599                           
 15600                           ;DisplayProtocol.h: 406: } else if (actualScreen == 4)
 15601  005212  0012               	return	
 15602  005214                     l10148:
 15603  005214  0E04               	movlw	4
 15604  005216  0100               	movlb	0	; () banked
 15605  005218  19D3               	xorwf	_actualScreen& (0+255),w,b
 15606  00521A  A4D8               	btfss	status,2,c
 15607  00521C  0012               	return	
 15608                           
 15609                           ; BSR set to: 0
 15610                           ;DisplayProtocol.h: 407: actualScreen = 9;
 15611  00521E  0E09               	movlw	9
 15612  005220  0100               	movlb	0	; () banked
 15613  005222  6FD3               	movwf	_actualScreen& (0+255),b
 15614                           
 15615                           ; BSR set to: 0
 15616                           ;DisplayProtocol.h: 408: } else if(!ProcessStarted) {
 15617                           
 15618                           ; BSR set to: 0
 15619  005224  0012               	return	
 15620  005226                     l10152:
 15621                           
 15622                           ; BSR set to: 0
 15623  005226  0100               	movlb	0	; () banked
 15624  005228  51D2               	movf	_ProcessStarted& (0+255),w,b
 15625  00522A  A4D8               	btfss	status,2,c
 15626  00522C  0012               	return	
 15627                           
 15628                           ; BSR set to: 0
 15629                           ;DisplayProtocol.h: 409: tempLastScreen = actualScreen;
 15630  00522E  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 15631                           
 15632                           ; BSR set to: 0
 15633                           ;DisplayProtocol.h: 410: actualScreen = 2;
 15634  005232  0E02               	movlw	2
 15635  005234  0100               	movlb	0	; () banked
 15636  005236  6FD3               	movwf	_actualScreen& (0+255),b
 15637                           
 15638                           ;DisplayProtocol.h: 411: selSN = 1;
 15639  005238  0E01               	movlw	1
 15640  00523A  0100               	movlb	0	; () banked
 15641  00523C  6FD9               	movwf	_selSN& (0+255),b
 15642                           
 15643                           ; BSR set to: 0
 15644                           ;DisplayProtocol.h: 412: }
 15645                           ;DisplayProtocol.h: 413: }else if(actualScreen == 5) {
 15646                           
 15647                           ; BSR set to: 0
 15648  00523E  0012               	return	
 15649  005240                     l10158:
 15650                           
 15651                           ; BSR set to: 0
 15652  005240  0E05               	movlw	5
 15653  005242  0100               	movlb	0	; () banked
 15654  005244  19D3               	xorwf	_actualScreen& (0+255),w,b
 15655  005246  A4D8               	btfss	status,2,c
 15656  005248  0012               	return	
 15657                           
 15658                           ; BSR set to: 0
 15659                           ;DisplayProtocol.h: 414: if(menuSection != 3 && menuSection != 1)
 15660  00524A  0E03               	movlw	3
 15661  00524C  0100               	movlb	0	; () banked
 15662  00524E  19D6               	xorwf	_menuSection& (0+255),w,b
 15663  005250  B4D8               	btfsc	status,2,c
 15664  005252  D005               	goto	l10166
 15665                           
 15666                           ; BSR set to: 0
 15667  005254  0100               	movlb	0	; () banked
 15668  005256  05D6               	decf	_menuSection& (0+255),w,b
 15669  005258  A4D8               	btfss	status,2,c
 15670                           
 15671                           ; BSR set to: 0
 15672                           ;DisplayProtocol.h: 415: integrator();
 15673  00525A  EC81  F021         	call	_integrator	;wreg free
 15674  00525E                     l10166:
 15675                           
 15676                           ;DisplayProtocol.h: 416: confirmEdition(!ProcessStarted);
 15677  00525E  0100               	movlb	0	; () banked
 15678  005260  51D2               	movf	_ProcessStarted& (0+255),w,b
 15679  005262  A4D8               	btfss	status,2,c
 15680  005264  D002               	goto	u13000
 15681  005266  0E01               	movlw	1
 15682  005268  D001               	goto	u13010
 15683  00526A                     u13000:
 15684  00526A  0E00               	movlw	0
 15685  00526C                     u13010:
 15686  00526C  EC11  F01D         	call	_confirmEdition
 15687  005270  0012               	return	
 15688  005272                     __end_of_longPressENTER:
 15689                           	opt stack 0
 15690                           tblptru	equ	0xFF8
 15691                           tblptrh	equ	0xFF7
 15692                           tblptrl	equ	0xFF6
 15693                           tablat	equ	0xFF5
 15694                           prodh	equ	0xFF4
 15695                           prodl	equ	0xFF3
 15696                           intcon	equ	0xFF2
 15697                           postinc0	equ	0xFEE
 15698                           wreg	equ	0xFE8
 15699                           postdec1	equ	0xFE5
 15700                           fsr1l	equ	0xFE1
 15701                           indf2	equ	0xFDF
 15702                           postinc2	equ	0xFDE
 15703                           postdec2	equ	0xFDD
 15704                           plusw2	equ	0xFDB
 15705                           fsr2h	equ	0xFDA
 15706                           fsr2l	equ	0xFD9
 15707                           status	equ	0xFD8
 15708                           
 15709 ;; *************** function _integrator *****************
 15710 ;; Defined at:
 15711 ;;		line 60 in file "source/DisplayProtocol.h"
 15712 ;; Parameters:    Size  Location     Type
 15713 ;;		None
 15714 ;; Auto vars:     Size  Location     Type
 15715 ;;  temp            4   66[BANK0 ] long 
 15716 ;;  acum            4   62[BANK0 ] long 
 15717 ;;  i               2   70[BANK0 ] int 
 15718 ;; Return value:  Size  Location     Type
 15719 ;;                  1    wreg      void 
 15720 ;; Registers used:
 15721 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 15722 ;; Tracked objects:
 15723 ;;		On entry : 0/0
 15724 ;;		On exit  : 0/0
 15725 ;;		Unchanged: 0/0
 15726 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15727 ;;      Params:         0       0       0       0       0       0       0
 15728 ;;      Locals:         0      10       0       0       0       0       0
 15729 ;;      Temps:          0       2       0       0       0       0       0
 15730 ;;      Totals:         0      12       0       0       0       0       0
 15731 ;;Total ram usage:       12 bytes
 15732 ;; Hardware stack levels used:    1
 15733 ;; Hardware stack levels required when called:    9
 15734 ;; This function calls:
 15735 ;;		___fldiv
 15736 ;;		___lmul
 15737 ;;		___xxtofl
 15738 ;; This function is called by:
 15739 ;;		_longPressENTER
 15740 ;; This function uses a non-reentrant model
 15741 ;;
 15742                           
 15743                           	psect	text57
 15744  004302                     __ptext57:
 15745                           	opt stack 0
 15746  004302                     _integrator:
 15747                           	opt stack 19
 15748                           
 15749                           ;DisplayProtocol.h: 61: long acum = 0;
 15750                           
 15751                           ;incstack = 0
 15752  004302  0E00               	movlw	0
 15753  004304  0100               	movlb	0	; () banked
 15754  004306  6F9E               	movwf	integrator@acum& (0+255),b
 15755  004308  0E00               	movlw	0
 15756  00430A  6F9F               	movwf	(integrator@acum+1)& (0+255),b
 15757  00430C  0E00               	movlw	0
 15758  00430E  6FA0               	movwf	(integrator@acum+2)& (0+255),b
 15759  004310  0E00               	movlw	0
 15760  004312  6FA1               	movwf	(integrator@acum+3)& (0+255),b
 15761                           
 15762                           ;DisplayProtocol.h: 62: long temp = 0;
 15763  004314  0E00               	movlw	0
 15764  004316  0100               	movlb	0	; () banked
 15765  004318  6FA2               	movwf	integrator@temp& (0+255),b
 15766  00431A  0E00               	movlw	0
 15767  00431C  6FA3               	movwf	(integrator@temp+1)& (0+255),b
 15768  00431E  0E00               	movlw	0
 15769  004320  6FA4               	movwf	(integrator@temp+2)& (0+255),b
 15770  004322  0E00               	movlw	0
 15771  004324  6FA5               	movwf	(integrator@temp+3)& (0+255),b
 15772                           
 15773                           ;DisplayProtocol.h: 63: int i;
 15774                           ;DisplayProtocol.h: 64: for(i = 0; i < 6; i++) {
 15775  004326  0E00               	movlw	0
 15776  004328  0100               	movlb	0	; () banked
 15777  00432A  6FA7               	movwf	(integrator@i+1)& (0+255),b
 15778  00432C  0E00               	movlw	0
 15779  00432E  6FA6               	movwf	integrator@i& (0+255),b
 15780  004330                     l9628:
 15781                           
 15782                           ; BSR set to: 0
 15783  004330  0100               	movlb	0	; () banked
 15784  004332  BFA7               	btfsc	(integrator@i+1)& (0+255),7,b
 15785  004334  D008               	goto	l9632
 15786  004336  0100               	movlb	0	; () banked
 15787  004338  51A7               	movf	(integrator@i+1)& (0+255),w,b
 15788  00433A  E152               	bnz	l9640
 15789  00433C  0E06               	movlw	6
 15790  00433E  0100               	movlb	0	; () banked
 15791  004340  5DA6               	subwf	integrator@i& (0+255),w,b
 15792  004342  B0D8               	btfsc	status,0,c
 15793  004344  D04D               	goto	l9640
 15794  004346                     l9632:
 15795                           
 15796                           ; BSR set to: 0
 15797                           ;DisplayProtocol.h: 65: temp = (long)chanValdig[i]*exp10[i];
 15798  004346  0E31               	movlw	low _chanValdig
 15799  004348  0100               	movlb	0	; () banked
 15800  00434A  25A6               	addwf	integrator@i& (0+255),w,b
 15801  00434C  6ED9               	movwf	fsr2l,c
 15802  00434E  0E01               	movlw	high _chanValdig
 15803  004350  0100               	movlb	0	; () banked
 15804  004352  21A7               	addwfc	(integrator@i+1)& (0+255),w,b
 15805  004354  6EDA               	movwf	fsr2h,c
 15806  004356  50DF               	movf	indf2,w,c
 15807  004358  0100               	movlb	0	; () banked
 15808  00435A  6F75               	movwf	___lmul@multiplier& (0+255),b
 15809  00435C  0E00               	movlw	0
 15810  00435E  BF75               	btfsc	___lmul@multiplier& (0+255),7,b
 15811  004360  0EFF               	movlw	-1
 15812  004362  6F76               	movwf	(___lmul@multiplier+1)& (0+255),b
 15813  004364  6F77               	movwf	(___lmul@multiplier+2)& (0+255),b
 15814  004366  6F78               	movwf	(___lmul@multiplier+3)& (0+255),b
 15815  004368  0E5D               	movlw	low _exp10
 15816  00436A  0100               	movlb	0	; () banked
 15817  00436C  6F9C               	movwf	??_integrator& (0+255),b
 15818  00436E  0E01               	movlw	high _exp10
 15819  004370  0100               	movlb	0	; () banked
 15820  004372  6F9D               	movwf	(??_integrator+1)& (0+255),b
 15821  004374  90D8               	bcf	status,0,c
 15822  004376  0100               	movlb	0	; () banked
 15823  004378  35A6               	rlcf	integrator@i& (0+255),w,b
 15824  00437A  6ED9               	movwf	fsr2l,c
 15825  00437C  0100               	movlb	0	; () banked
 15826  00437E  35A7               	rlcf	(integrator@i+1)& (0+255),w,b
 15827  004380  6EDA               	movwf	fsr2h,c
 15828  004382  90D8               	bcf	status,0,c
 15829  004384  36D9               	rlcf	fsr2l,f,c
 15830  004386  36DA               	rlcf	fsr2h,f,c
 15831  004388  0100               	movlb	0	; () banked
 15832  00438A  519C               	movf	??_integrator& (0+255),w,b
 15833  00438C  26D9               	addwf	fsr2l,f,c
 15834  00438E  0100               	movlb	0	; () banked
 15835  004390  519D               	movf	(??_integrator+1)& (0+255),w,b
 15836  004392  22DA               	addwfc	fsr2h,f,c
 15837  004394  CFDE F079          	movff	postinc2,___lmul@multiplicand
 15838  004398  CFDE F07A          	movff	postinc2,___lmul@multiplicand+1
 15839  00439C  CFDE F07B          	movff	postinc2,___lmul@multiplicand+2
 15840  0043A0  CFDE F07C          	movff	postinc2,___lmul@multiplicand+3
 15841  0043A4  ECD6  F02B         	call	___lmul	;wreg free
 15842  0043A8  C075  F0A2         	movff	?___lmul,integrator@temp
 15843  0043AC  C076  F0A3         	movff	?___lmul+1,integrator@temp+1
 15844  0043B0  C077  F0A4         	movff	?___lmul+2,integrator@temp+2
 15845  0043B4  C078  F0A5         	movff	?___lmul+3,integrator@temp+3
 15846                           
 15847                           ;DisplayProtocol.h: 66: acum += temp;
 15848  0043B8  0100               	movlb	0	; () banked
 15849  0043BA  51A2               	movf	integrator@temp& (0+255),w,b
 15850  0043BC  0100               	movlb	0	; () banked
 15851  0043BE  279E               	addwf	integrator@acum& (0+255),f,b
 15852  0043C0  0100               	movlb	0	; () banked
 15853  0043C2  51A3               	movf	(integrator@temp+1)& (0+255),w,b
 15854  0043C4  0100               	movlb	0	; () banked
 15855  0043C6  239F               	addwfc	(integrator@acum+1)& (0+255),f,b
 15856  0043C8  0100               	movlb	0	; () banked
 15857  0043CA  51A4               	movf	(integrator@temp+2)& (0+255),w,b
 15858  0043CC  0100               	movlb	0	; () banked
 15859  0043CE  23A0               	addwfc	(integrator@acum+2)& (0+255),f,b
 15860  0043D0  0100               	movlb	0	; () banked
 15861  0043D2  51A5               	movf	(integrator@temp+3)& (0+255),w,b
 15862  0043D4  0100               	movlb	0	; () banked
 15863  0043D6  23A1               	addwfc	(integrator@acum+3)& (0+255),f,b
 15864                           
 15865                           ; BSR set to: 0
 15866  0043D8  0100               	movlb	0	; () banked
 15867  0043DA  4BA6               	infsnz	integrator@i& (0+255),f,b
 15868  0043DC  2BA7               	incf	(integrator@i+1)& (0+255),f,b
 15869  0043DE  D7A8               	goto	l9628
 15870  0043E0                     l9640:
 15871                           
 15872                           ; BSR set to: 0
 15873                           ;DisplayProtocol.h: 67: }
 15874                           ;DisplayProtocol.h: 68: chanValf = (float)acum / 1000;
 15875  0043E0  C09E  F075         	movff	integrator@acum,___xxtofl@val
 15876  0043E4  C09F  F076         	movff	integrator@acum+1,___xxtofl@val+1
 15877  0043E8  C0A0  F077         	movff	integrator@acum+2,___xxtofl@val+2
 15878  0043EC  C0A1  F078         	movff	integrator@acum+3,___xxtofl@val+3
 15879  0043F0  0E01               	movlw	1
 15880  0043F2  EC51  F01B         	call	___xxtofl
 15881  0043F6  C075  F083         	movff	?___xxtofl,___fldiv@b
 15882  0043FA  C076  F084         	movff	?___xxtofl+1,___fldiv@b+1
 15883  0043FE  C077  F085         	movff	?___xxtofl+2,___fldiv@b+2
 15884  004402  C078  F086         	movff	?___xxtofl+3,___fldiv@b+3
 15885  004406  0E00               	movlw	0
 15886  004408  0100               	movlb	0	; () banked
 15887  00440A  6F87               	movwf	___fldiv@a& (0+255),b
 15888  00440C  0E00               	movlw	0
 15889  00440E  6F88               	movwf	(___fldiv@a+1)& (0+255),b
 15890  004410  0E7A               	movlw	122
 15891  004412  6F89               	movwf	(___fldiv@a+2)& (0+255),b
 15892  004414  0E44               	movlw	68
 15893  004416  6F8A               	movwf	(___fldiv@a+3)& (0+255),b
 15894  004418  ECA2  F00D         	call	___fldiv	;wreg free
 15895  00441C  C083  F046         	movff	?___fldiv,_chanValf
 15896  004420  C084  F047         	movff	?___fldiv+1,_chanValf+1
 15897  004424  C085  F048         	movff	?___fldiv+2,_chanValf+2
 15898  004428  C086  F049         	movff	?___fldiv+3,_chanValf+3
 15899  00442C  0012               	return		;funcret
 15900  00442E                     __end_of_integrator:
 15901                           	opt stack 0
 15902                           tblptru	equ	0xFF8
 15903                           tblptrh	equ	0xFF7
 15904                           tblptrl	equ	0xFF6
 15905                           tablat	equ	0xFF5
 15906                           prodh	equ	0xFF4
 15907                           prodl	equ	0xFF3
 15908                           intcon	equ	0xFF2
 15909                           postinc0	equ	0xFEE
 15910                           wreg	equ	0xFE8
 15911                           postdec1	equ	0xFE5
 15912                           fsr1l	equ	0xFE1
 15913                           indf2	equ	0xFDF
 15914                           postinc2	equ	0xFDE
 15915                           postdec2	equ	0xFDD
 15916                           plusw2	equ	0xFDB
 15917                           fsr2h	equ	0xFDA
 15918                           fsr2l	equ	0xFD9
 15919                           status	equ	0xFD8
 15920                           
 15921 ;; *************** function ___xxtofl *****************
 15922 ;; Defined at:
 15923 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
 15924 ;; Parameters:    Size  Location     Type
 15925 ;;  sign            1    wreg     unsigned char 
 15926 ;;  val             4   21[BANK0 ] long 
 15927 ;; Auto vars:     Size  Location     Type
 15928 ;;  sign            1   29[BANK0 ] unsigned char 
 15929 ;;  arg             4   31[BANK0 ] unsigned long 
 15930 ;;  exp             1   30[BANK0 ] unsigned char 
 15931 ;; Return value:  Size  Location     Type
 15932 ;;                  4   21[BANK0 ] unsigned char 
 15933 ;; Registers used:
 15934 ;;		wreg, status,2, status,0
 15935 ;; Tracked objects:
 15936 ;;		On entry : 0/0
 15937 ;;		On exit  : 0/0
 15938 ;;		Unchanged: 0/0
 15939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15940 ;;      Params:         0       4       0       0       0       0       0
 15941 ;;      Locals:         0       6       0       0       0       0       0
 15942 ;;      Temps:          0       4       0       0       0       0       0
 15943 ;;      Totals:         0      14       0       0       0       0       0
 15944 ;;Total ram usage:       14 bytes
 15945 ;; Hardware stack levels used:    1
 15946 ;; Hardware stack levels required when called:    8
 15947 ;; This function calls:
 15948 ;;		Nothing
 15949 ;; This function is called by:
 15950 ;;		_integrator
 15951 ;;		_printf
 15952 ;;		_preAutoCal
 15953 ;; This function uses a non-reentrant model
 15954 ;;
 15955                           
 15956                           	psect	text58
 15957  0036A2                     __ptext58:
 15958                           	opt stack 0
 15959  0036A2                     ___xxtofl:
 15960                           	opt stack 19
 15961                           
 15962                           ;incstack = 0
 15963                           ;___xxtofl@sign stored from wreg
 15964  0036A2  0100               	movlb	0	; () banked
 15965  0036A4  6F7D               	movwf	___xxtofl@sign& (0+255),b
 15966  0036A6  0100               	movlb	0	; () banked
 15967  0036A8  517D               	movf	___xxtofl@sign& (0+255),w,b
 15968  0036AA  0100               	movlb	0	; () banked
 15969  0036AC  B4D8               	btfsc	status,2,c
 15970  0036AE  D01E               	goto	l1534
 15971                           
 15972                           ; BSR set to: 0
 15973  0036B0  0100               	movlb	0	; () banked
 15974  0036B2  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
 15975  0036B4  D01B               	goto	l1534
 15976                           
 15977                           ; BSR set to: 0
 15978  0036B6  C075  F079         	movff	___xxtofl@val,??___xxtofl
 15979  0036BA  C076  F07A         	movff	___xxtofl@val+1,??___xxtofl+1
 15980  0036BE  C077  F07B         	movff	___xxtofl@val+2,??___xxtofl+2
 15981  0036C2  C078  F07C         	movff	___xxtofl@val+3,??___xxtofl+3
 15982  0036C6  0100               	movlb	0	; () banked
 15983  0036C8  1F79               	comf	??___xxtofl& (0+255),f,b
 15984  0036CA  1F7A               	comf	(??___xxtofl+1)& (0+255),f,b
 15985  0036CC  1F7B               	comf	(??___xxtofl+2)& (0+255),f,b
 15986  0036CE  1F7C               	comf	(??___xxtofl+3)& (0+255),f,b
 15987  0036D0  2B79               	incf	??___xxtofl& (0+255),f,b
 15988  0036D2  0E00               	movlw	0
 15989  0036D4  237A               	addwfc	(??___xxtofl+1)& (0+255),f,b
 15990  0036D6  237B               	addwfc	(??___xxtofl+2)& (0+255),f,b
 15991  0036D8  237C               	addwfc	(??___xxtofl+3)& (0+255),f,b
 15992  0036DA  C079  F07F         	movff	??___xxtofl,___xxtofl@arg
 15993  0036DE  C07A  F080         	movff	??___xxtofl+1,___xxtofl@arg+1
 15994  0036E2  C07B  F081         	movff	??___xxtofl+2,___xxtofl@arg+2
 15995  0036E6  C07C  F082         	movff	??___xxtofl+3,___xxtofl@arg+3
 15996  0036EA  D008               	goto	l8918
 15997  0036EC                     l1534:
 15998                           
 15999                           ; BSR set to: 0
 16000  0036EC  C075  F07F         	movff	___xxtofl@val,___xxtofl@arg
 16001  0036F0  C076  F080         	movff	___xxtofl@val+1,___xxtofl@arg+1
 16002  0036F4  C077  F081         	movff	___xxtofl@val+2,___xxtofl@arg+2
 16003  0036F8  C078  F082         	movff	___xxtofl@val+3,___xxtofl@arg+3
 16004  0036FC                     l8918:
 16005                           
 16006                           ; BSR set to: 0
 16007  0036FC  0100               	movlb	0	; () banked
 16008  0036FE  5175               	movf	___xxtofl@val& (0+255),w,b
 16009  003700  0100               	movlb	0	; () banked
 16010  003702  1176               	iorwf	(___xxtofl@val+1)& (0+255),w,b
 16011  003704  0100               	movlb	0	; () banked
 16012  003706  1177               	iorwf	(___xxtofl@val+2)& (0+255),w,b
 16013  003708  0100               	movlb	0	; () banked
 16014  00370A  1178               	iorwf	(___xxtofl@val+3)& (0+255),w,b
 16015  00370C  A4D8               	btfss	status,2,c
 16016  00370E  D00A               	goto	l8924
 16017                           
 16018                           ; BSR set to: 0
 16019  003710  0E00               	movlw	0
 16020  003712  0100               	movlb	0	; () banked
 16021  003714  6F75               	movwf	?___xxtofl& (0+255),b
 16022  003716  0E00               	movlw	0
 16023  003718  6F76               	movwf	(?___xxtofl+1)& (0+255),b
 16024  00371A  0E00               	movlw	0
 16025  00371C  6F77               	movwf	(?___xxtofl+2)& (0+255),b
 16026  00371E  0E00               	movlw	0
 16027  003720  6F78               	movwf	(?___xxtofl+3)& (0+255),b
 16028                           
 16029                           ; BSR set to: 0
 16030  003722  0012               	return	
 16031  003724                     l8924:
 16032                           
 16033                           ; BSR set to: 0
 16034  003724  0E96               	movlw	150
 16035  003726  0100               	movlb	0	; () banked
 16036  003728  6F7E               	movwf	___xxtofl@exp& (0+255),b
 16037  00372A  D008               	goto	l8928
 16038  00372C                     l8926:
 16039                           
 16040                           ; BSR set to: 0
 16041  00372C  0100               	movlb	0	; () banked
 16042  00372E  2B7E               	incf	___xxtofl@exp& (0+255),f,b
 16043  003730  0100               	movlb	0	; () banked
 16044  003732  90D8               	bcf	status,0,c
 16045  003734  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16046  003736  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16047  003738  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16048  00373A  337F               	rrcf	___xxtofl@arg& (0+255),f,b
 16049  00373C                     l8928:
 16050                           
 16051                           ; BSR set to: 0
 16052  00373C  0E00               	movlw	0
 16053  00373E  0100               	movlb	0	; () banked
 16054  003740  157F               	andwf	___xxtofl@arg& (0+255),w,b
 16055  003742  0100               	movlb	0	; () banked
 16056  003744  6F79               	movwf	??___xxtofl& (0+255),b
 16057  003746  0E00               	movlw	0
 16058  003748  0100               	movlb	0	; () banked
 16059  00374A  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16060  00374C  0100               	movlb	0	; () banked
 16061  00374E  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
 16062  003750  0E00               	movlw	0
 16063  003752  0100               	movlb	0	; () banked
 16064  003754  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16065  003756  0100               	movlb	0	; () banked
 16066  003758  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
 16067  00375A  0EFE               	movlw	254
 16068  00375C  0100               	movlb	0	; () banked
 16069  00375E  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16070  003760  0100               	movlb	0	; () banked
 16071  003762  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
 16072  003764  0100               	movlb	0	; () banked
 16073  003766  5179               	movf	??___xxtofl& (0+255),w,b
 16074  003768  0100               	movlb	0	; () banked
 16075  00376A  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16076  00376C  0100               	movlb	0	; () banked
 16077  00376E  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16078  003770  0100               	movlb	0	; () banked
 16079  003772  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16080  003774  B4D8               	btfsc	status,2,c
 16081  003776  D010               	goto	l1541
 16082  003778  D7D9               	goto	l8926
 16083  00377A                     l8930:
 16084                           
 16085                           ; BSR set to: 0
 16086  00377A  0100               	movlb	0	; () banked
 16087  00377C  2B7E               	incf	___xxtofl@exp& (0+255),f,b
 16088                           
 16089                           ; BSR set to: 0
 16090  00377E  0E01               	movlw	1
 16091  003780  0100               	movlb	0	; () banked
 16092  003782  277F               	addwf	___xxtofl@arg& (0+255),f,b
 16093  003784  0E00               	movlw	0
 16094  003786  2380               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
 16095  003788  2381               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
 16096  00378A  2382               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
 16097                           
 16098                           ; BSR set to: 0
 16099  00378C  0100               	movlb	0	; () banked
 16100  00378E  90D8               	bcf	status,0,c
 16101  003790  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
 16102  003792  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
 16103  003794  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
 16104  003796  337F               	rrcf	___xxtofl@arg& (0+255),f,b
 16105  003798                     l1541:
 16106                           
 16107                           ; BSR set to: 0
 16108  003798  0E00               	movlw	0
 16109  00379A  0100               	movlb	0	; () banked
 16110  00379C  157F               	andwf	___xxtofl@arg& (0+255),w,b
 16111  00379E  0100               	movlb	0	; () banked
 16112  0037A0  6F79               	movwf	??___xxtofl& (0+255),b
 16113  0037A2  0E00               	movlw	0
 16114  0037A4  0100               	movlb	0	; () banked
 16115  0037A6  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
 16116  0037A8  0100               	movlb	0	; () banked
 16117  0037AA  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
 16118  0037AC  0E00               	movlw	0
 16119  0037AE  0100               	movlb	0	; () banked
 16120  0037B0  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
 16121  0037B2  0100               	movlb	0	; () banked
 16122  0037B4  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
 16123  0037B6  0EFF               	movlw	255
 16124  0037B8  0100               	movlb	0	; () banked
 16125  0037BA  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
 16126  0037BC  0100               	movlb	0	; () banked
 16127  0037BE  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
 16128  0037C0  0100               	movlb	0	; () banked
 16129  0037C2  5179               	movf	??___xxtofl& (0+255),w,b
 16130  0037C4  0100               	movlb	0	; () banked
 16131  0037C6  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
 16132  0037C8  0100               	movlb	0	; () banked
 16133  0037CA  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
 16134  0037CC  0100               	movlb	0	; () banked
 16135  0037CE  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
 16136  0037D0  B4D8               	btfsc	status,2,c
 16137  0037D2  D009               	goto	l8938
 16138  0037D4  D7D2               	goto	l8930
 16139  0037D6                     l8936:
 16140                           
 16141                           ; BSR set to: 0
 16142  0037D6  0100               	movlb	0	; () banked
 16143  0037D8  077E               	decf	___xxtofl@exp& (0+255),f,b
 16144  0037DA  0100               	movlb	0	; () banked
 16145  0037DC  90D8               	bcf	status,0,c
 16146  0037DE  377F               	rlcf	___xxtofl@arg& (0+255),f,b
 16147  0037E0  3780               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
 16148  0037E2  3781               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
 16149  0037E4  3782               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
 16150  0037E6                     l8938:
 16151                           
 16152                           ; BSR set to: 0
 16153  0037E6  0100               	movlb	0	; () banked
 16154  0037E8  BF81               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
 16155  0037EA  D004               	goto	l1548
 16156                           
 16157                           ; BSR set to: 0
 16158  0037EC  0E02               	movlw	2
 16159  0037EE  0100               	movlb	0	; () banked
 16160  0037F0  617E               	cpfslt	___xxtofl@exp& (0+255),b
 16161  0037F2  D7F1               	goto	l8936
 16162  0037F4                     l1548:
 16163                           
 16164                           ; BSR set to: 0
 16165  0037F4  0100               	movlb	0	; () banked
 16166  0037F6  B17E               	btfsc	___xxtofl@exp& (0+255),0,b
 16167  0037F8  D009               	goto	l1549
 16168                           
 16169                           ; BSR set to: 0
 16170  0037FA  0EFF               	movlw	255
 16171  0037FC  0100               	movlb	0	; () banked
 16172  0037FE  177F               	andwf	___xxtofl@arg& (0+255),f,b
 16173  003800  0EFF               	movlw	255
 16174  003802  1780               	andwf	(___xxtofl@arg+1)& (0+255),f,b
 16175  003804  0E7F               	movlw	127
 16176  003806  1781               	andwf	(___xxtofl@arg+2)& (0+255),f,b
 16177  003808  0EFF               	movlw	255
 16178  00380A  1782               	andwf	(___xxtofl@arg+3)& (0+255),f,b
 16179  00380C                     l1549:
 16180                           
 16181                           ; BSR set to: 0
 16182  00380C  0100               	movlb	0	; () banked
 16183  00380E  90D8               	bcf	status,0,c
 16184  003810  337E               	rrcf	___xxtofl@exp& (0+255),f,b
 16185  003812  C07E  F079         	movff	___xxtofl@exp,??___xxtofl
 16186  003816  0100               	movlb	0	; () banked
 16187  003818  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
 16188  00381A  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
 16189  00381C  6B7C               	clrf	(??___xxtofl+3)& (0+255),b
 16190  00381E  C079  F07C         	movff	??___xxtofl,??___xxtofl+3
 16191  003822  0100               	movlb	0	; () banked
 16192  003824  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
 16193  003826  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
 16194  003828  6B79               	clrf	??___xxtofl& (0+255),b
 16195  00382A  0100               	movlb	0	; () banked
 16196  00382C  5179               	movf	??___xxtofl& (0+255),w,b
 16197  00382E  0100               	movlb	0	; () banked
 16198  003830  137F               	iorwf	___xxtofl@arg& (0+255),f,b
 16199  003832  0100               	movlb	0	; () banked
 16200  003834  517A               	movf	(??___xxtofl+1)& (0+255),w,b
 16201  003836  0100               	movlb	0	; () banked
 16202  003838  1380               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
 16203  00383A  0100               	movlb	0	; () banked
 16204  00383C  517B               	movf	(??___xxtofl+2)& (0+255),w,b
 16205  00383E  0100               	movlb	0	; () banked
 16206  003840  1381               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
 16207  003842  0100               	movlb	0	; () banked
 16208  003844  517C               	movf	(??___xxtofl+3)& (0+255),w,b
 16209  003846  0100               	movlb	0	; () banked
 16210  003848  1382               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
 16211                           
 16212                           ; BSR set to: 0
 16213  00384A  0100               	movlb	0	; () banked
 16214  00384C  517D               	movf	___xxtofl@sign& (0+255),w,b
 16215  00384E  0100               	movlb	0	; () banked
 16216  003850  B4D8               	btfsc	status,2,c
 16217  003852  D005               	goto	l8950
 16218                           
 16219                           ; BSR set to: 0
 16220  003854  0100               	movlb	0	; () banked
 16221  003856  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
 16222  003858  D002               	goto	l8950
 16223                           
 16224                           ; BSR set to: 0
 16225  00385A  0100               	movlb	0	; () banked
 16226  00385C  8F82               	bsf	(___xxtofl@arg+3)& (0+255),7,b
 16227  00385E                     l8950:
 16228                           
 16229                           ; BSR set to: 0
 16230  00385E  C07F  F075         	movff	___xxtofl@arg,?___xxtofl
 16231  003862  C080  F076         	movff	___xxtofl@arg+1,?___xxtofl+1
 16232  003866  C081  F077         	movff	___xxtofl@arg+2,?___xxtofl+2
 16233  00386A  C082  F078         	movff	___xxtofl@arg+3,?___xxtofl+3
 16234  00386E  0012               	return	
 16235  003870                     __end_of___xxtofl:
 16236                           	opt stack 0
 16237                           tblptru	equ	0xFF8
 16238                           tblptrh	equ	0xFF7
 16239                           tblptrl	equ	0xFF6
 16240                           tablat	equ	0xFF5
 16241                           prodh	equ	0xFF4
 16242                           prodl	equ	0xFF3
 16243                           intcon	equ	0xFF2
 16244                           postinc0	equ	0xFEE
 16245                           wreg	equ	0xFE8
 16246                           postdec1	equ	0xFE5
 16247                           fsr1l	equ	0xFE1
 16248                           indf2	equ	0xFDF
 16249                           postinc2	equ	0xFDE
 16250                           postdec2	equ	0xFDD
 16251                           plusw2	equ	0xFDB
 16252                           fsr2h	equ	0xFDA
 16253                           fsr2l	equ	0xFD9
 16254                           status	equ	0xFD8
 16255                           
 16256 ;; *************** function ___lmul *****************
 16257 ;; Defined at:
 16258 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul32.c"
 16259 ;; Parameters:    Size  Location     Type
 16260 ;;  multiplier      4   21[BANK0 ] unsigned long 
 16261 ;;  multiplicand    4   25[BANK0 ] unsigned long 
 16262 ;; Auto vars:     Size  Location     Type
 16263 ;;  product         4   29[BANK0 ] unsigned long 
 16264 ;; Return value:  Size  Location     Type
 16265 ;;                  4   21[BANK0 ] unsigned long 
 16266 ;; Registers used:
 16267 ;;		wreg, status,2, status,0
 16268 ;; Tracked objects:
 16269 ;;		On entry : 0/0
 16270 ;;		On exit  : 0/0
 16271 ;;		Unchanged: 0/0
 16272 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16273 ;;      Params:         0       8       0       0       0       0       0
 16274 ;;      Locals:         0       4       0       0       0       0       0
 16275 ;;      Temps:          0       0       0       0       0       0       0
 16276 ;;      Totals:         0      12       0       0       0       0       0
 16277 ;;Total ram usage:       12 bytes
 16278 ;; Hardware stack levels used:    1
 16279 ;; Hardware stack levels required when called:    8
 16280 ;; This function calls:
 16281 ;;		Nothing
 16282 ;; This function is called by:
 16283 ;;		_desintegrator
 16284 ;;		_integrator
 16285 ;; This function uses a non-reentrant model
 16286 ;;
 16287                           
 16288                           	psect	text59
 16289  0057AC                     __ptext59:
 16290                           	opt stack 0
 16291  0057AC                     ___lmul:
 16292                           	opt stack 19
 16293                           
 16294                           ; BSR set to: 0
 16295                           ;incstack = 0
 16296  0057AC  0E00               	movlw	0
 16297  0057AE  0100               	movlb	0	; () banked
 16298  0057B0  6F7D               	movwf	___lmul@product& (0+255),b
 16299  0057B2  0E00               	movlw	0
 16300  0057B4  6F7E               	movwf	(___lmul@product+1)& (0+255),b
 16301  0057B6  0E00               	movlw	0
 16302  0057B8  6F7F               	movwf	(___lmul@product+2)& (0+255),b
 16303  0057BA  0E00               	movlw	0
 16304  0057BC  6F80               	movwf	(___lmul@product+3)& (0+255),b
 16305  0057BE                     l6266:
 16306                           
 16307                           ; BSR set to: 0
 16308  0057BE  0100               	movlb	0	; () banked
 16309  0057C0  A175               	btfss	___lmul@multiplier& (0+255),0,b
 16310  0057C2  D010               	goto	l6270
 16311                           
 16312                           ; BSR set to: 0
 16313  0057C4  0100               	movlb	0	; () banked
 16314  0057C6  5179               	movf	___lmul@multiplicand& (0+255),w,b
 16315  0057C8  0100               	movlb	0	; () banked
 16316  0057CA  277D               	addwf	___lmul@product& (0+255),f,b
 16317  0057CC  0100               	movlb	0	; () banked
 16318  0057CE  517A               	movf	(___lmul@multiplicand+1)& (0+255),w,b
 16319  0057D0  0100               	movlb	0	; () banked
 16320  0057D2  237E               	addwfc	(___lmul@product+1)& (0+255),f,b
 16321  0057D4  0100               	movlb	0	; () banked
 16322  0057D6  517B               	movf	(___lmul@multiplicand+2)& (0+255),w,b
 16323  0057D8  0100               	movlb	0	; () banked
 16324  0057DA  237F               	addwfc	(___lmul@product+2)& (0+255),f,b
 16325  0057DC  0100               	movlb	0	; () banked
 16326  0057DE  517C               	movf	(___lmul@multiplicand+3)& (0+255),w,b
 16327  0057E0  0100               	movlb	0	; () banked
 16328  0057E2  2380               	addwfc	(___lmul@product+3)& (0+255),f,b
 16329  0057E4                     l6270:
 16330                           
 16331                           ; BSR set to: 0
 16332  0057E4  0100               	movlb	0	; () banked
 16333  0057E6  90D8               	bcf	status,0,c
 16334  0057E8  3779               	rlcf	___lmul@multiplicand& (0+255),f,b
 16335  0057EA  377A               	rlcf	(___lmul@multiplicand+1)& (0+255),f,b
 16336  0057EC  377B               	rlcf	(___lmul@multiplicand+2)& (0+255),f,b
 16337  0057EE  377C               	rlcf	(___lmul@multiplicand+3)& (0+255),f,b
 16338                           
 16339                           ; BSR set to: 0
 16340  0057F0  0100               	movlb	0	; () banked
 16341  0057F2  90D8               	bcf	status,0,c
 16342  0057F4  3378               	rrcf	(___lmul@multiplier+3)& (0+255),f,b
 16343  0057F6  3377               	rrcf	(___lmul@multiplier+2)& (0+255),f,b
 16344  0057F8  3376               	rrcf	(___lmul@multiplier+1)& (0+255),f,b
 16345  0057FA  3375               	rrcf	___lmul@multiplier& (0+255),f,b
 16346  0057FC  0100               	movlb	0	; () banked
 16347  0057FE  5175               	movf	___lmul@multiplier& (0+255),w,b
 16348  005800  0100               	movlb	0	; () banked
 16349  005802  1176               	iorwf	(___lmul@multiplier+1)& (0+255),w,b
 16350  005804  0100               	movlb	0	; () banked
 16351  005806  1177               	iorwf	(___lmul@multiplier+2)& (0+255),w,b
 16352  005808  0100               	movlb	0	; () banked
 16353  00580A  1178               	iorwf	(___lmul@multiplier+3)& (0+255),w,b
 16354  00580C  A4D8               	btfss	status,2,c
 16355  00580E  D7D7               	goto	l6266
 16356                           
 16357                           ; BSR set to: 0
 16358  005810  C07D  F075         	movff	___lmul@product,?___lmul
 16359  005814  C07E  F076         	movff	___lmul@product+1,?___lmul+1
 16360  005818  C07F  F077         	movff	___lmul@product+2,?___lmul+2
 16361  00581C  C080  F078         	movff	___lmul@product+3,?___lmul+3
 16362                           
 16363                           ; BSR set to: 0
 16364  005820  0012               	return		;funcret
 16365  005822                     __end_of___lmul:
 16366                           	opt stack 0
 16367                           tblptru	equ	0xFF8
 16368                           tblptrh	equ	0xFF7
 16369                           tblptrl	equ	0xFF6
 16370                           tablat	equ	0xFF5
 16371                           prodh	equ	0xFF4
 16372                           prodl	equ	0xFF3
 16373                           intcon	equ	0xFF2
 16374                           postinc0	equ	0xFEE
 16375                           wreg	equ	0xFE8
 16376                           postdec1	equ	0xFE5
 16377                           fsr1l	equ	0xFE1
 16378                           indf2	equ	0xFDF
 16379                           postinc2	equ	0xFDE
 16380                           postdec2	equ	0xFDD
 16381                           plusw2	equ	0xFDB
 16382                           fsr2h	equ	0xFDA
 16383                           fsr2l	equ	0xFD9
 16384                           status	equ	0xFD8
 16385                           
 16386 ;; *************** function _confirmEdition *****************
 16387 ;; Defined at:
 16388 ;;		line 71 in file "source/DisplayProtocol.h"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;  yes             1    wreg     unsigned char 
 16391 ;; Auto vars:     Size  Location     Type
 16392 ;;  yes             1   64[BANK0 ] unsigned char 
 16393 ;; Return value:  Size  Location     Type
 16394 ;;                  1    wreg      void 
 16395 ;; Registers used:
 16396 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16397 ;; Tracked objects:
 16398 ;;		On entry : 0/0
 16399 ;;		On exit  : 0/0
 16400 ;;		Unchanged: 0/0
 16401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16402 ;;      Params:         0       0       0       0       0       0       0
 16403 ;;      Locals:         0       1       0       0       0       0       0
 16404 ;;      Temps:          0       0       0       0       0       0       0
 16405 ;;      Totals:         0       1       0       0       0       0       0
 16406 ;;Total ram usage:        1 bytes
 16407 ;; Hardware stack levels used:    1
 16408 ;; Hardware stack levels required when called:   11
 16409 ;; This function calls:
 16410 ;;		_saveSysParams
 16411 ;; This function is called by:
 16412 ;;		_pressENTER
 16413 ;;		_longPressENTER
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text60
 16418  003A22                     __ptext60:
 16419                           	opt stack 0
 16420  003A22                     _confirmEdition:
 16421                           	opt stack 17
 16422                           
 16423                           ; BSR set to: 0
 16424                           ;incstack = 0
 16425                           ;confirmEdition@yes stored from wreg
 16426  003A22  0100               	movlb	0	; () banked
 16427  003A24  6FA0               	movwf	confirmEdition@yes& (0+255),b
 16428                           
 16429                           ;DisplayProtocol.h: 72: switch (menuSection) {
 16430  003A26  D0BD               	goto	l9716
 16431  003A28                     l9644:
 16432                           
 16433                           ;DisplayProtocol.h: 76: if(yes) {
 16434  003A28  0100               	movlb	0	; () banked
 16435  003A2A  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16436  003A2C  0100               	movlb	0	; () banked
 16437  003A2E  B4D8               	btfsc	status,2,c
 16438  003A30  D008               	goto	l502
 16439                           
 16440                           ; BSR set to: 0
 16441                           ;DisplayProtocol.h: 77: tVarProceso = selKMT;
 16442  003A32  C0D8  F0E3         	movff	_selKMT,_tVarProceso
 16443                           
 16444                           ; BSR set to: 0
 16445                           ;DisplayProtocol.h: 78: actualScreen = 4;
 16446  003A36  0E04               	movlw	4
 16447  003A38  0100               	movlb	0	; () banked
 16448  003A3A  6FD3               	movwf	_actualScreen& (0+255),b
 16449                           
 16450                           ; BSR set to: 0
 16451                           ;DisplayProtocol.h: 79: saveSysParams();
 16452  003A3C  EC17  F022         	call	_saveSysParams	;wreg free
 16453                           
 16454                           ;DisplayProtocol.h: 80: }else {
 16455  003A40  0012               	return	
 16456  003A42                     l502:
 16457                           
 16458                           ; BSR set to: 0
 16459                           ;DisplayProtocol.h: 81: tempLastScreen = actualScreen;
 16460  003A42  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16461                           
 16462                           ; BSR set to: 0
 16463                           ;DisplayProtocol.h: 82: actualScreen = 10;
 16464  003A46  0E0A               	movlw	10
 16465  003A48  0100               	movlb	0	; () banked
 16466  003A4A  6FD3               	movwf	_actualScreen& (0+255),b
 16467                           
 16468                           ;DisplayProtocol.h: 83: selSN = 1;
 16469  003A4C  0E01               	movlw	1
 16470  003A4E  0100               	movlb	0	; () banked
 16471  003A50  6FD9               	movwf	_selSN& (0+255),b
 16472                           
 16473                           ; BSR set to: 0
 16474                           ;DisplayProtocol.h: 84: }
 16475                           ;DisplayProtocol.h: 85: break;
 16476  003A52  0012               	return	
 16477  003A54                     l9654:
 16478                           
 16479                           ; BSR set to: 0
 16480                           ;DisplayProtocol.h: 87: if(yes) {
 16481  003A54  0100               	movlb	0	; () banked
 16482  003A56  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16483  003A58  0100               	movlb	0	; () banked
 16484  003A5A  B4D8               	btfsc	status,2,c
 16485  003A5C  D02D               	goto	l505
 16486                           
 16487                           ; BSR set to: 0
 16488                           ;DisplayProtocol.h: 88: if(tVarProceso == 0)
 16489  003A5E  0100               	movlb	0	; () banked
 16490  003A60  51E3               	movf	_tVarProceso& (0+255),w,b
 16491  003A62  A4D8               	btfss	status,2,c
 16492  003A64  D009               	goto	l9660
 16493                           
 16494                           ; BSR set to: 0
 16495                           ;DisplayProtocol.h: 89: kgXcorte = chanValf;
 16496  003A66  C046  F0DB         	movff	_chanValf,_kgXcorte
 16497  003A6A  C047  F0DC         	movff	_chanValf+1,_kgXcorte+1
 16498  003A6E  C048  F0DD         	movff	_chanValf+2,_kgXcorte+2
 16499  003A72  C049  F0DE         	movff	_chanValf+3,_kgXcorte+3
 16500  003A76  D01A               	goto	l9668
 16501  003A78                     l9660:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;DisplayProtocol.h: 90: else if(tVarProceso == 1)
 16505  003A78  0100               	movlb	0	; () banked
 16506  003A7A  05E3               	decf	_tVarProceso& (0+255),w,b
 16507  003A7C  A4D8               	btfss	status,2,c
 16508  003A7E  D009               	goto	l9664
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;DisplayProtocol.h: 91: m3Xcorte = chanValf;
 16512  003A80  C046  F037         	movff	_chanValf,_m3Xcorte
 16513  003A84  C047  F038         	movff	_chanValf+1,_m3Xcorte+1
 16514  003A88  C048  F039         	movff	_chanValf+2,_m3Xcorte+2
 16515  003A8C  C049  F03A         	movff	_chanValf+3,_m3Xcorte+3
 16516  003A90  D00D               	goto	l9668
 16517  003A92                     l9664:
 16518                           
 16519                           ; BSR set to: 0
 16520                           ;DisplayProtocol.h: 92: else if(tVarProceso == 2)
 16521  003A92  0E02               	movlw	2
 16522  003A94  0100               	movlb	0	; () banked
 16523  003A96  19E3               	xorwf	_tVarProceso& (0+255),w,b
 16524  003A98  A4D8               	btfss	status,2,c
 16525  003A9A  D008               	goto	l9668
 16526                           
 16527                           ; BSR set to: 0
 16528                           ;DisplayProtocol.h: 93: tiXcorte = chanValf;
 16529  003A9C  C046  F03B         	movff	_chanValf,_tiXcorte
 16530  003AA0  C047  F03C         	movff	_chanValf+1,_tiXcorte+1
 16531  003AA4  C048  F03D         	movff	_chanValf+2,_tiXcorte+2
 16532  003AA8  C049  F03E         	movff	_chanValf+3,_tiXcorte+3
 16533  003AAC                     l9668:
 16534                           
 16535                           ; BSR set to: 0
 16536                           ;DisplayProtocol.h: 94: actualScreen = 4;
 16537  003AAC  0E04               	movlw	4
 16538  003AAE  0100               	movlb	0	; () banked
 16539  003AB0  6FD3               	movwf	_actualScreen& (0+255),b
 16540                           
 16541                           ; BSR set to: 0
 16542                           ;DisplayProtocol.h: 95: saveSysParams();
 16543  003AB2  EC17  F022         	call	_saveSysParams	;wreg free
 16544                           
 16545                           ;DisplayProtocol.h: 96: }else {
 16546  003AB6  0012               	return	
 16547  003AB8                     l505:
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;DisplayProtocol.h: 97: tempLastScreen = actualScreen;
 16551  003AB8  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16552                           
 16553                           ; BSR set to: 0
 16554                           ;DisplayProtocol.h: 98: actualScreen = 10;
 16555  003ABC  0E0A               	movlw	10
 16556  003ABE  0100               	movlb	0	; () banked
 16557  003AC0  6FD3               	movwf	_actualScreen& (0+255),b
 16558                           
 16559                           ;DisplayProtocol.h: 99: selSN = 1;
 16560  003AC2  0E01               	movlw	1
 16561  003AC4  0100               	movlb	0	; () banked
 16562  003AC6  6FD9               	movwf	_selSN& (0+255),b
 16563                           
 16564                           ; BSR set to: 0
 16565                           ;DisplayProtocol.h: 100: }
 16566                           ;DisplayProtocol.h: 101: break;
 16567  003AC8  0012               	return	
 16568  003ACA                     l9674:
 16569                           
 16570                           ; BSR set to: 0
 16571                           ;DisplayProtocol.h: 103: if(yes) {
 16572  003ACA  0100               	movlb	0	; () banked
 16573  003ACC  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16574  003ACE  0100               	movlb	0	; () banked
 16575  003AD0  B4D8               	btfsc	status,2,c
 16576  003AD2  D00A               	goto	l513
 16577                           
 16578                           ; BSR set to: 0
 16579                           ;DisplayProtocol.h: 104: numCortes = chanVals;
 16580  003AD4  C14A  F0DF         	movff	_chanVals,_numCortes
 16581  003AD8  C14B  F0E0         	movff	_chanVals+1,_numCortes+1
 16582                           
 16583                           ; BSR set to: 0
 16584                           ;DisplayProtocol.h: 105: actualScreen = 4;
 16585  003ADC  0E04               	movlw	4
 16586  003ADE  0100               	movlb	0	; () banked
 16587  003AE0  6FD3               	movwf	_actualScreen& (0+255),b
 16588                           
 16589                           ; BSR set to: 0
 16590                           ;DisplayProtocol.h: 106: saveSysParams();
 16591  003AE2  EC17  F022         	call	_saveSysParams	;wreg free
 16592                           
 16593                           ;DisplayProtocol.h: 107: }else {
 16594  003AE6  0012               	return	
 16595  003AE8                     l513:
 16596                           
 16597                           ; BSR set to: 0
 16598                           ;DisplayProtocol.h: 108: tempLastScreen = actualScreen;
 16599  003AE8  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16600                           
 16601                           ; BSR set to: 0
 16602                           ;DisplayProtocol.h: 109: actualScreen = 10;
 16603  003AEC  0E0A               	movlw	10
 16604  003AEE  0100               	movlb	0	; () banked
 16605  003AF0  6FD3               	movwf	_actualScreen& (0+255),b
 16606                           
 16607                           ;DisplayProtocol.h: 110: selSN = 1;
 16608  003AF2  0E01               	movlw	1
 16609  003AF4  0100               	movlb	0	; () banked
 16610  003AF6  6FD9               	movwf	_selSN& (0+255),b
 16611                           
 16612                           ; BSR set to: 0
 16613                           ;DisplayProtocol.h: 111: }
 16614                           ;DisplayProtocol.h: 112: break;
 16615  003AF8  0012               	return	
 16616  003AFA                     l9684:
 16617                           
 16618                           ; BSR set to: 0
 16619                           ;DisplayProtocol.h: 114: if(yes) {
 16620  003AFA  0100               	movlb	0	; () banked
 16621  003AFC  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16622  003AFE  0100               	movlb	0	; () banked
 16623  003B00  B4D8               	btfsc	status,2,c
 16624  003B02  D00E               	goto	l516
 16625                           
 16626                           ; BSR set to: 0
 16627                           ;DisplayProtocol.h: 115: diamTubo = chanValf;
 16628  003B04  C046  F033         	movff	_chanValf,_diamTubo
 16629  003B08  C047  F034         	movff	_chanValf+1,_diamTubo+1
 16630  003B0C  C048  F035         	movff	_chanValf+2,_diamTubo+2
 16631  003B10  C049  F036         	movff	_chanValf+3,_diamTubo+3
 16632                           
 16633                           ; BSR set to: 0
 16634                           ;DisplayProtocol.h: 116: actualScreen = 4;
 16635  003B14  0E04               	movlw	4
 16636  003B16  0100               	movlb	0	; () banked
 16637  003B18  6FD3               	movwf	_actualScreen& (0+255),b
 16638                           
 16639                           ; BSR set to: 0
 16640                           ;DisplayProtocol.h: 117: saveSysParams();
 16641  003B1A  EC17  F022         	call	_saveSysParams	;wreg free
 16642                           
 16643                           ;DisplayProtocol.h: 118: }else {
 16644  003B1E  0012               	return	
 16645  003B20                     l516:
 16646                           
 16647                           ; BSR set to: 0
 16648                           ;DisplayProtocol.h: 119: tempLastScreen = actualScreen;
 16649  003B20  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16650                           
 16651                           ; BSR set to: 0
 16652                           ;DisplayProtocol.h: 120: actualScreen = 10;
 16653  003B24  0E0A               	movlw	10
 16654  003B26  0100               	movlb	0	; () banked
 16655  003B28  6FD3               	movwf	_actualScreen& (0+255),b
 16656                           
 16657                           ;DisplayProtocol.h: 121: selSN = 1;
 16658  003B2A  0E01               	movlw	1
 16659  003B2C  0100               	movlb	0	; () banked
 16660  003B2E  6FD9               	movwf	_selSN& (0+255),b
 16661                           
 16662                           ; BSR set to: 0
 16663                           ;DisplayProtocol.h: 122: }
 16664                           ;DisplayProtocol.h: 123: break;
 16665  003B30  0012               	return	
 16666  003B32                     l9694:
 16667                           
 16668                           ; BSR set to: 0
 16669                           ;DisplayProtocol.h: 125: if(yes) {
 16670  003B32  0100               	movlb	0	; () banked
 16671  003B34  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16672  003B36  0100               	movlb	0	; () banked
 16673  003B38  B4D8               	btfsc	status,2,c
 16674  003B3A  D00E               	goto	l519
 16675                           
 16676                           ; BSR set to: 0
 16677                           ;DisplayProtocol.h: 126: densidadMasa = chanValf;
 16678  003B3C  C046  F02F         	movff	_chanValf,_densidadMasa
 16679  003B40  C047  F030         	movff	_chanValf+1,_densidadMasa+1
 16680  003B44  C048  F031         	movff	_chanValf+2,_densidadMasa+2
 16681  003B48  C049  F032         	movff	_chanValf+3,_densidadMasa+3
 16682                           
 16683                           ; BSR set to: 0
 16684                           ;DisplayProtocol.h: 127: actualScreen = 4;
 16685  003B4C  0E04               	movlw	4
 16686  003B4E  0100               	movlb	0	; () banked
 16687  003B50  6FD3               	movwf	_actualScreen& (0+255),b
 16688                           
 16689                           ; BSR set to: 0
 16690                           ;DisplayProtocol.h: 128: saveSysParams();
 16691  003B52  EC17  F022         	call	_saveSysParams	;wreg free
 16692                           
 16693                           ;DisplayProtocol.h: 129: }else {
 16694  003B56  0012               	return	
 16695  003B58                     l519:
 16696                           
 16697                           ; BSR set to: 0
 16698                           ;DisplayProtocol.h: 130: tempLastScreen = actualScreen;
 16699  003B58  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16700                           
 16701                           ; BSR set to: 0
 16702                           ;DisplayProtocol.h: 131: actualScreen = 10;
 16703  003B5C  0E0A               	movlw	10
 16704  003B5E  0100               	movlb	0	; () banked
 16705  003B60  6FD3               	movwf	_actualScreen& (0+255),b
 16706                           
 16707                           ;DisplayProtocol.h: 132: selSN = 1;
 16708  003B62  0E01               	movlw	1
 16709  003B64  0100               	movlb	0	; () banked
 16710  003B66  6FD9               	movwf	_selSN& (0+255),b
 16711                           
 16712                           ; BSR set to: 0
 16713                           ;DisplayProtocol.h: 133: }
 16714                           ;DisplayProtocol.h: 134: break;
 16715  003B68  0012               	return	
 16716  003B6A                     l9704:
 16717                           
 16718                           ; BSR set to: 0
 16719                           ;DisplayProtocol.h: 136: if(yes) {
 16720  003B6A  0100               	movlb	0	; () banked
 16721  003B6C  51A0               	movf	confirmEdition@yes& (0+255),w,b
 16722  003B6E  0100               	movlb	0	; () banked
 16723  003B70  B4D8               	btfsc	status,2,c
 16724  003B72  D00E               	goto	l522
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;DisplayProtocol.h: 137: velocidadMasa = chanValf;
 16728  003B74  C046  F03F         	movff	_chanValf,_velocidadMasa
 16729  003B78  C047  F040         	movff	_chanValf+1,_velocidadMasa+1
 16730  003B7C  C048  F041         	movff	_chanValf+2,_velocidadMasa+2
 16731  003B80  C049  F042         	movff	_chanValf+3,_velocidadMasa+3
 16732                           
 16733                           ; BSR set to: 0
 16734                           ;DisplayProtocol.h: 138: actualScreen = 4;
 16735  003B84  0E04               	movlw	4
 16736  003B86  0100               	movlb	0	; () banked
 16737  003B88  6FD3               	movwf	_actualScreen& (0+255),b
 16738                           
 16739                           ; BSR set to: 0
 16740                           ;DisplayProtocol.h: 139: saveSysParams();
 16741  003B8A  EC17  F022         	call	_saveSysParams	;wreg free
 16742                           
 16743                           ;DisplayProtocol.h: 140: }else {
 16744  003B8E  0012               	return	
 16745  003B90                     l522:
 16746                           
 16747                           ; BSR set to: 0
 16748                           ;DisplayProtocol.h: 141: tempLastScreen = actualScreen;
 16749  003B90  C0D3  F0DA         	movff	_actualScreen,_tempLastScreen
 16750                           
 16751                           ; BSR set to: 0
 16752                           ;DisplayProtocol.h: 142: actualScreen = 10;
 16753  003B94  0E0A               	movlw	10
 16754  003B96  0100               	movlb	0	; () banked
 16755  003B98  6FD3               	movwf	_actualScreen& (0+255),b
 16756                           
 16757                           ;DisplayProtocol.h: 143: selSN = 1;
 16758  003B9A  0E01               	movlw	1
 16759  003B9C  0100               	movlb	0	; () banked
 16760  003B9E  6FD9               	movwf	_selSN& (0+255),b
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;DisplayProtocol.h: 146: }
 16764                           ;DisplayProtocol.h: 147: }
 16765                           
 16766                           ; BSR set to: 0
 16767                           ;DisplayProtocol.h: 144: }
 16768                           ;DisplayProtocol.h: 145: break;
 16769  003BA0  0012               	return	
 16770  003BA2                     l9716:
 16771  003BA2  0100               	movlb	0	; () banked
 16772  003BA4  51D6               	movf	_menuSection& (0+255),w,b
 16773                           
 16774                           ; Switch size 1, requested type "space"
 16775                           ; Number of cases is 7, Range of values is 0 to 6
 16776                           ; switch strategies available:
 16777                           ; Name         Instructions Cycles
 16778                           ; simple_byte           22    12 (average)
 16779                           ;	Chosen strategy is simple_byte
 16780  003BA6  0A00               	xorlw	0	; case 0
 16781  003BA8  B4D8               	btfsc	status,2,c
 16782  003BAA  0012               	return	
 16783  003BAC  0A01               	xorlw	1	; case 1
 16784  003BAE  B4D8               	btfsc	status,2,c
 16785  003BB0  D73B               	goto	l9644
 16786  003BB2  0A03               	xorlw	3	; case 2
 16787  003BB4  B4D8               	btfsc	status,2,c
 16788  003BB6  D74E               	goto	l9654
 16789  003BB8  0A01               	xorlw	1	; case 3
 16790  003BBA  B4D8               	btfsc	status,2,c
 16791  003BBC  D786               	goto	l9674
 16792  003BBE  0A07               	xorlw	7	; case 4
 16793  003BC0  B4D8               	btfsc	status,2,c
 16794  003BC2  D79B               	goto	l9684
 16795  003BC4  0A01               	xorlw	1	; case 5
 16796  003BC6  B4D8               	btfsc	status,2,c
 16797  003BC8  D7B4               	goto	l9694
 16798  003BCA  0A03               	xorlw	3	; case 6
 16799  003BCC  A4D8               	btfss	status,2,c
 16800  003BCE  0012               	return	
 16801  003BD0  D7CC               	goto	l9704
 16802  003BD2                     __end_of_confirmEdition:
 16803                           	opt stack 0
 16804                           tblptru	equ	0xFF8
 16805                           tblptrh	equ	0xFF7
 16806                           tblptrl	equ	0xFF6
 16807                           tablat	equ	0xFF5
 16808                           prodh	equ	0xFF4
 16809                           prodl	equ	0xFF3
 16810                           intcon	equ	0xFF2
 16811                           postinc0	equ	0xFEE
 16812                           wreg	equ	0xFE8
 16813                           postdec1	equ	0xFE5
 16814                           fsr1l	equ	0xFE1
 16815                           indf2	equ	0xFDF
 16816                           postinc2	equ	0xFDE
 16817                           postdec2	equ	0xFDD
 16818                           plusw2	equ	0xFDB
 16819                           fsr2h	equ	0xFDA
 16820                           fsr2l	equ	0xFD9
 16821                           status	equ	0xFD8
 16822                           
 16823 ;; *************** function _saveSysParams *****************
 16824 ;; Defined at:
 16825 ;;		line 90 in file "source/sysParams.h"
 16826 ;; Parameters:    Size  Location     Type
 16827 ;;		None
 16828 ;; Auto vars:     Size  Location     Type
 16829 ;;		None
 16830 ;; Return value:  Size  Location     Type
 16831 ;;                  1    wreg      void 
 16832 ;; Registers used:
 16833 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 16834 ;; Tracked objects:
 16835 ;;		On entry : 0/0
 16836 ;;		On exit  : 0/0
 16837 ;;		Unchanged: 0/0
 16838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16839 ;;      Params:         0       0       0       0       0       0       0
 16840 ;;      Locals:         0       0       0       0       0       0       0
 16841 ;;      Temps:          0       0       0       0       0       0       0
 16842 ;;      Totals:         0       0       0       0       0       0       0
 16843 ;;Total ram usage:        0 bytes
 16844 ;; Hardware stack levels used:    1
 16845 ;; Hardware stack levels required when called:   10
 16846 ;; This function calls:
 16847 ;;		_calcVars2ti
 16848 ;;		_writeEEPROM
 16849 ;; This function is called by:
 16850 ;;		_confirmEdition
 16851 ;;		_autoCal
 16852 ;; This function uses a non-reentrant model
 16853 ;;
 16854                           
 16855                           	psect	text61
 16856  00442E                     __ptext61:
 16857                           	opt stack 0
 16858  00442E                     _saveSysParams:
 16859                           	opt stack 17
 16860                           
 16861                           ;sysParams.h: 91: EECON1bits.WREN = 1;
 16862                           
 16863                           ;incstack = 0
 16864  00442E  84A6               	bsf	4006,2,c	;volatile
 16865                           
 16866                           ;sysParams.h: 92: ie = INTCONbits.GIE;
 16867  004430  0E00               	movlw	0
 16868  004432  BEF2               	btfsc	intcon,7,c	;volatile
 16869  004434  0E01               	movlw	1
 16870  004436  0101               	movlb	1	; () banked
 16871  004438  6F5B               	movwf	_ie& (0+255),b
 16872                           
 16873                           ; BSR set to: 1
 16874                           ;sysParams.h: 93: INTCONbits.GIE = 0;
 16875  00443A  9EF2               	bcf	intcon,7,c	;volatile
 16876                           
 16877                           ; BSR set to: 1
 16878                           ;sysParams.h: 94: writeEEPROM(1, tVarProceso);
 16879  00443C  C0E3  F075         	movff	_tVarProceso,writeEEPROM@data
 16880  004440  0E01               	movlw	1
 16881  004442  EC17  F02F         	call	_writeEEPROM
 16882                           
 16883                           ;sysParams.h: 95: fData.floatdat = tiXcorte;
 16884  004446  C03B  F0CC         	movff	_tiXcorte,_fData
 16885  00444A  C03C  F0CD         	movff	_tiXcorte+1,_fData+1
 16886  00444E  C03D  F0CE         	movff	_tiXcorte+2,_fData+2
 16887  004452  C03E  F0CF         	movff	_tiXcorte+3,_fData+3
 16888                           
 16889                           ;sysParams.h: 96: writeEEPROM(2, fData.floatMB);
 16890  004456  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 16891  00445A  0E02               	movlw	2
 16892  00445C  EC17  F02F         	call	_writeEEPROM
 16893                           
 16894                           ;sysParams.h: 97: writeEEPROM(3, fData.floatUB);
 16895  004460  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 16896  004464  0E03               	movlw	3
 16897  004466  EC17  F02F         	call	_writeEEPROM
 16898                           
 16899                           ;sysParams.h: 98: writeEEPROM(4, fData.floatHB);
 16900  00446A  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 16901  00446E  0E04               	movlw	4
 16902  004470  EC17  F02F         	call	_writeEEPROM
 16903                           
 16904                           ;sysParams.h: 99: writeEEPROM(5, fData.floatLB);
 16905  004474  C0CC  F075         	movff	_fData,writeEEPROM@data
 16906  004478  0E05               	movlw	5
 16907  00447A  EC17  F02F         	call	_writeEEPROM
 16908                           
 16909                           ;sysParams.h: 100: i16Data.int16dat = numCortes;
 16910  00447E  C0DF  F0D0         	movff	_numCortes,_i16Data
 16911  004482  C0E0  F0D1         	movff	_numCortes+1,_i16Data+1
 16912                           
 16913                           ;sysParams.h: 101: writeEEPROM(6, i16Data.int16HB);
 16914  004486  C0D1  F075         	movff	_i16Data+1,writeEEPROM@data
 16915  00448A  0E06               	movlw	6
 16916  00448C  EC17  F02F         	call	_writeEEPROM
 16917                           
 16918                           ;sysParams.h: 102: writeEEPROM(7, i16Data.int16LB);
 16919  004490  C0D0  F075         	movff	_i16Data,writeEEPROM@data
 16920  004494  0E07               	movlw	7
 16921  004496  EC17  F02F         	call	_writeEEPROM
 16922                           
 16923                           ;sysParams.h: 103: fData.floatdat = diamTubo;
 16924  00449A  C033  F0CC         	movff	_diamTubo,_fData
 16925  00449E  C034  F0CD         	movff	_diamTubo+1,_fData+1
 16926  0044A2  C035  F0CE         	movff	_diamTubo+2,_fData+2
 16927  0044A6  C036  F0CF         	movff	_diamTubo+3,_fData+3
 16928                           
 16929                           ;sysParams.h: 104: writeEEPROM(8, fData.floatMB);
 16930  0044AA  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 16931  0044AE  0E08               	movlw	8
 16932  0044B0  EC17  F02F         	call	_writeEEPROM
 16933                           
 16934                           ;sysParams.h: 105: writeEEPROM(9, fData.floatUB);
 16935  0044B4  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 16936  0044B8  0E09               	movlw	9
 16937  0044BA  EC17  F02F         	call	_writeEEPROM
 16938                           
 16939                           ;sysParams.h: 106: writeEEPROM(10, fData.floatHB);
 16940  0044BE  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 16941  0044C2  0E0A               	movlw	10
 16942  0044C4  EC17  F02F         	call	_writeEEPROM
 16943                           
 16944                           ;sysParams.h: 107: writeEEPROM(11, fData.floatLB);
 16945  0044C8  C0CC  F075         	movff	_fData,writeEEPROM@data
 16946  0044CC  0E0B               	movlw	11
 16947  0044CE  EC17  F02F         	call	_writeEEPROM
 16948                           
 16949                           ;sysParams.h: 108: fData.floatdat = densidadMasa;
 16950  0044D2  C02F  F0CC         	movff	_densidadMasa,_fData
 16951  0044D6  C030  F0CD         	movff	_densidadMasa+1,_fData+1
 16952  0044DA  C031  F0CE         	movff	_densidadMasa+2,_fData+2
 16953  0044DE  C032  F0CF         	movff	_densidadMasa+3,_fData+3
 16954                           
 16955                           ;sysParams.h: 109: writeEEPROM(12, fData.floatMB);
 16956  0044E2  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 16957  0044E6  0E0C               	movlw	12
 16958  0044E8  EC17  F02F         	call	_writeEEPROM
 16959                           
 16960                           ;sysParams.h: 110: writeEEPROM(13, fData.floatUB);
 16961  0044EC  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 16962  0044F0  0E0D               	movlw	13
 16963  0044F2  EC17  F02F         	call	_writeEEPROM
 16964                           
 16965                           ;sysParams.h: 111: writeEEPROM(14, fData.floatHB);
 16966  0044F6  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 16967  0044FA  0E0E               	movlw	14
 16968  0044FC  EC17  F02F         	call	_writeEEPROM
 16969                           
 16970                           ;sysParams.h: 112: writeEEPROM(15, fData.floatLB);
 16971  004500  C0CC  F075         	movff	_fData,writeEEPROM@data
 16972  004504  0E0F               	movlw	15
 16973  004506  EC17  F02F         	call	_writeEEPROM
 16974                           
 16975                           ;sysParams.h: 113: fData.floatdat = velocidadMasa;
 16976  00450A  C03F  F0CC         	movff	_velocidadMasa,_fData
 16977  00450E  C040  F0CD         	movff	_velocidadMasa+1,_fData+1
 16978  004512  C041  F0CE         	movff	_velocidadMasa+2,_fData+2
 16979  004516  C042  F0CF         	movff	_velocidadMasa+3,_fData+3
 16980                           
 16981                           ;sysParams.h: 114: writeEEPROM(16, fData.floatMB);
 16982  00451A  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 16983  00451E  0E10               	movlw	16
 16984  004520  EC17  F02F         	call	_writeEEPROM
 16985                           
 16986                           ;sysParams.h: 115: writeEEPROM(17, fData.floatUB);
 16987  004524  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 16988  004528  0E11               	movlw	17
 16989  00452A  EC17  F02F         	call	_writeEEPROM
 16990                           
 16991                           ;sysParams.h: 116: writeEEPROM(18, fData.floatHB);
 16992  00452E  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 16993  004532  0E12               	movlw	18
 16994  004534  EC17  F02F         	call	_writeEEPROM
 16995                           
 16996                           ;sysParams.h: 117: writeEEPROM(19, fData.floatLB);
 16997  004538  C0CC  F075         	movff	_fData,writeEEPROM@data
 16998  00453C  0E13               	movlw	19
 16999  00453E  EC17  F02F         	call	_writeEEPROM
 17000                           
 17001                           ;sysParams.h: 118: EECON1bits.WREN = 0;
 17002  004542  94A6               	bcf	4006,2,c	;volatile
 17003                           
 17004                           ;sysParams.h: 119: INTCONbits.GIE = ie;
 17005  004544  0101               	movlb	1	; () banked
 17006  004546  B15B               	btfsc	_ie& (0+255),0,b
 17007  004548  D002               	bra	u11245
 17008  00454A  9EF2               	bcf	intcon,7,c	;volatile
 17009  00454C  D001               	bra	u11246
 17010  00454E                     u11245:
 17011  00454E  8EF2               	bsf	intcon,7,c	;volatile
 17012  004550                     u11246:
 17013                           
 17014                           ;sysParams.h: 120: calcVars2ti();
 17015  004550  EC13  F018         	call	_calcVars2ti	;wreg free
 17016  004554  0012               	return		;funcret
 17017  004556                     __end_of_saveSysParams:
 17018                           	opt stack 0
 17019                           tblptru	equ	0xFF8
 17020                           tblptrh	equ	0xFF7
 17021                           tblptrl	equ	0xFF6
 17022                           tablat	equ	0xFF5
 17023                           prodh	equ	0xFF4
 17024                           prodl	equ	0xFF3
 17025                           intcon	equ	0xFF2
 17026                           postinc0	equ	0xFEE
 17027                           wreg	equ	0xFE8
 17028                           postdec1	equ	0xFE5
 17029                           fsr1l	equ	0xFE1
 17030                           indf2	equ	0xFDF
 17031                           postinc2	equ	0xFDE
 17032                           postdec2	equ	0xFDD
 17033                           plusw2	equ	0xFDB
 17034                           fsr2h	equ	0xFDA
 17035                           fsr2l	equ	0xFD9
 17036                           status	equ	0xFD8
 17037                           
 17038 ;; *************** function _writeEEPROM *****************
 17039 ;; Defined at:
 17040 ;;		line 36 in file "source/sysParams.h"
 17041 ;; Parameters:    Size  Location     Type
 17042 ;;  adr             1    wreg     unsigned char 
 17043 ;;  data            1   21[BANK0 ] unsigned char 
 17044 ;; Auto vars:     Size  Location     Type
 17045 ;;  adr             1   22[BANK0 ] unsigned char 
 17046 ;; Return value:  Size  Location     Type
 17047 ;;                  1    wreg      void 
 17048 ;; Registers used:
 17049 ;;		wreg, status,2
 17050 ;; Tracked objects:
 17051 ;;		On entry : 0/0
 17052 ;;		On exit  : 0/0
 17053 ;;		Unchanged: 0/0
 17054 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17055 ;;      Params:         0       1       0       0       0       0       0
 17056 ;;      Locals:         0       1       0       0       0       0       0
 17057 ;;      Temps:          0       0       0       0       0       0       0
 17058 ;;      Totals:         0       2       0       0       0       0       0
 17059 ;;Total ram usage:        2 bytes
 17060 ;; Hardware stack levels used:    1
 17061 ;; Hardware stack levels required when called:    8
 17062 ;; This function calls:
 17063 ;;		Nothing
 17064 ;; This function is called by:
 17065 ;;		_saveSysParams
 17066 ;; This function uses a non-reentrant model
 17067 ;;
 17068                           
 17069                           	psect	text62
 17070  005E2E                     __ptext62:
 17071                           	opt stack 0
 17072  005E2E                     _writeEEPROM:
 17073                           	opt stack 18
 17074                           
 17075                           ;incstack = 0
 17076                           ;writeEEPROM@adr stored from wreg
 17077  005E2E  0100               	movlb	0	; () banked
 17078  005E30  6F76               	movwf	writeEEPROM@adr& (0+255),b
 17079                           
 17080                           ;sysParams.h: 37: EEADR = adr;
 17081  005E32  C076  FFA9         	movff	writeEEPROM@adr,4009	;volatile
 17082                           
 17083                           ;sysParams.h: 38: EEDATA = data;
 17084  005E36  C075  FFA8         	movff	writeEEPROM@data,4008	;volatile
 17085                           
 17086                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 17087  005E3A  9EA6               	bcf	4006,7,c	;volatile
 17088                           
 17089                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 17090  005E3C  9CA6               	bcf	4006,6,c	;volatile
 17091                           
 17092                           ;sysParams.h: 41: EECON2 = 0x55;
 17093  005E3E  0E55               	movlw	85
 17094  005E40  6EA7               	movwf	4007,c	;volatile
 17095                           
 17096                           ;sysParams.h: 42: EECON2 = 0xAA;
 17097  005E42  0EAA               	movlw	170
 17098  005E44  6EA7               	movwf	4007,c	;volatile
 17099                           
 17100                           ;sysParams.h: 43: EECON1bits.WR = 1;
 17101  005E46  82A6               	bsf	4006,1,c	;volatile
 17102  005E48                     l282:
 17103  005E48  A2A6               	btfss	4006,1,c	;volatile
 17104  005E4A  0012               	return	
 17105  005E4C  D7FD               	goto	l282
 17106  005E4E                     __end_of_writeEEPROM:
 17107                           	opt stack 0
 17108                           tblptru	equ	0xFF8
 17109                           tblptrh	equ	0xFF7
 17110                           tblptrl	equ	0xFF6
 17111                           tablat	equ	0xFF5
 17112                           prodh	equ	0xFF4
 17113                           prodl	equ	0xFF3
 17114                           intcon	equ	0xFF2
 17115                           postinc0	equ	0xFEE
 17116                           wreg	equ	0xFE8
 17117                           postdec1	equ	0xFE5
 17118                           fsr1l	equ	0xFE1
 17119                           indf2	equ	0xFDF
 17120                           postinc2	equ	0xFDE
 17121                           postdec2	equ	0xFDD
 17122                           plusw2	equ	0xFDB
 17123                           fsr2h	equ	0xFDA
 17124                           fsr2l	equ	0xFD9
 17125                           status	equ	0xFD8
 17126                           
 17127 ;; *************** function _calcVars2ti *****************
 17128 ;; Defined at:
 17129 ;;		line 72 in file "source/sysParams.h"
 17130 ;; Parameters:    Size  Location     Type
 17131 ;;		None
 17132 ;; Auto vars:     Size  Location     Type
 17133 ;;  temp            4   60[BANK0 ] float 
 17134 ;; Return value:  Size  Location     Type
 17135 ;;                  1    wreg      void 
 17136 ;; Registers used:
 17137 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17138 ;; Tracked objects:
 17139 ;;		On entry : 0/0
 17140 ;;		On exit  : 0/0
 17141 ;;		Unchanged: 0/0
 17142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17143 ;;      Params:         0       0       0       0       0       0       0
 17144 ;;      Locals:         0       4       0       0       0       0       0
 17145 ;;      Temps:          0       0       0       0       0       0       0
 17146 ;;      Totals:         0       4       0       0       0       0       0
 17147 ;;Total ram usage:        4 bytes
 17148 ;; Hardware stack levels used:    1
 17149 ;; Hardware stack levels required when called:    9
 17150 ;; This function calls:
 17151 ;;		___fldiv
 17152 ;;		___flmul
 17153 ;; This function is called by:
 17154 ;;		_saveSysParams
 17155 ;; This function uses a non-reentrant model
 17156 ;;
 17157                           
 17158                           	psect	text63
 17159  003026                     __ptext63:
 17160                           	opt stack 0
 17161  003026                     _calcVars2ti:
 17162                           	opt stack 17
 17163                           
 17164                           ;sysParams.h: 73: float temp = 0;
 17165                           
 17166                           ;incstack = 0
 17167  003026  0E00               	movlw	0
 17168  003028  0100               	movlb	0	; () banked
 17169  00302A  6F9C               	movwf	calcVars2ti@temp& (0+255),b
 17170  00302C  0E00               	movlw	0
 17171  00302E  6F9D               	movwf	(calcVars2ti@temp+1)& (0+255),b
 17172  003030  0E00               	movlw	0
 17173  003032  6F9E               	movwf	(calcVars2ti@temp+2)& (0+255),b
 17174  003034  0E00               	movlw	0
 17175  003036  6F9F               	movwf	(calcVars2ti@temp+3)& (0+255),b
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;sysParams.h: 74: temp = (float)diamTubo / 2000.0f;
 17179  003038  C033  F083         	movff	_diamTubo,___fldiv@b
 17180  00303C  C034  F084         	movff	_diamTubo+1,___fldiv@b+1
 17181  003040  C035  F085         	movff	_diamTubo+2,___fldiv@b+2
 17182  003044  C036  F086         	movff	_diamTubo+3,___fldiv@b+3
 17183  003048  0E00               	movlw	0
 17184  00304A  0100               	movlb	0	; () banked
 17185  00304C  6F87               	movwf	___fldiv@a& (0+255),b
 17186  00304E  0E00               	movlw	0
 17187  003050  6F88               	movwf	(___fldiv@a+1)& (0+255),b
 17188  003052  0EFA               	movlw	250
 17189  003054  6F89               	movwf	(___fldiv@a+2)& (0+255),b
 17190  003056  0E44               	movlw	68
 17191  003058  6F8A               	movwf	(___fldiv@a+3)& (0+255),b
 17192  00305A  ECA2  F00D         	call	___fldiv	;wreg free
 17193  00305E  C083  F09C         	movff	?___fldiv,calcVars2ti@temp
 17194  003062  C084  F09D         	movff	?___fldiv+1,calcVars2ti@temp+1
 17195  003066  C085  F09E         	movff	?___fldiv+2,calcVars2ti@temp+2
 17196  00306A  C086  F09F         	movff	?___fldiv+3,calcVars2ti@temp+3
 17197                           
 17198                           ;sysParams.h: 75: temp *= temp;
 17199  00306E  C09C  F083         	movff	calcVars2ti@temp,___flmul@b
 17200  003072  C09D  F084         	movff	calcVars2ti@temp+1,___flmul@b+1
 17201  003076  C09E  F085         	movff	calcVars2ti@temp+2,___flmul@b+2
 17202  00307A  C09F  F086         	movff	calcVars2ti@temp+3,___flmul@b+3
 17203  00307E  C09C  F087         	movff	calcVars2ti@temp,___flmul@a
 17204  003082  C09D  F088         	movff	calcVars2ti@temp+1,___flmul@a+1
 17205  003086  C09E  F089         	movff	calcVars2ti@temp+2,___flmul@a+2
 17206  00308A  C09F  F08A         	movff	calcVars2ti@temp+3,___flmul@a+3
 17207  00308E  EC4F  F00B         	call	___flmul	;wreg free
 17208  003092  C083  F09C         	movff	?___flmul,calcVars2ti@temp
 17209  003096  C084  F09D         	movff	?___flmul+1,calcVars2ti@temp+1
 17210  00309A  C085  F09E         	movff	?___flmul+2,calcVars2ti@temp+2
 17211  00309E  C086  F09F         	movff	?___flmul+3,calcVars2ti@temp+3
 17212                           
 17213                           ;sysParams.h: 76: temp *= pi;
 17214  0030A2  C09C  F083         	movff	calcVars2ti@temp,___flmul@b
 17215  0030A6  C09D  F084         	movff	calcVars2ti@temp+1,___flmul@b+1
 17216  0030AA  C09E  F085         	movff	calcVars2ti@temp+2,___flmul@b+2
 17217  0030AE  C09F  F086         	movff	calcVars2ti@temp+3,___flmul@b+3
 17218  0030B2  C175  F087         	movff	_pi,___flmul@a
 17219  0030B6  C176  F088         	movff	_pi+1,___flmul@a+1
 17220  0030BA  C177  F089         	movff	_pi+2,___flmul@a+2
 17221  0030BE  C178  F08A         	movff	_pi+3,___flmul@a+3
 17222  0030C2  EC4F  F00B         	call	___flmul	;wreg free
 17223  0030C6  C083  F09C         	movff	?___flmul,calcVars2ti@temp
 17224  0030CA  C084  F09D         	movff	?___flmul+1,calcVars2ti@temp+1
 17225  0030CE  C085  F09E         	movff	?___flmul+2,calcVars2ti@temp+2
 17226  0030D2  C086  F09F         	movff	?___flmul+3,calcVars2ti@temp+3
 17227                           
 17228                           ;sysParams.h: 77: temp *= velocidadMasa;
 17229  0030D6  C09C  F083         	movff	calcVars2ti@temp,___flmul@b
 17230  0030DA  C09D  F084         	movff	calcVars2ti@temp+1,___flmul@b+1
 17231  0030DE  C09E  F085         	movff	calcVars2ti@temp+2,___flmul@b+2
 17232  0030E2  C09F  F086         	movff	calcVars2ti@temp+3,___flmul@b+3
 17233  0030E6  C03F  F087         	movff	_velocidadMasa,___flmul@a
 17234  0030EA  C040  F088         	movff	_velocidadMasa+1,___flmul@a+1
 17235  0030EE  C041  F089         	movff	_velocidadMasa+2,___flmul@a+2
 17236  0030F2  C042  F08A         	movff	_velocidadMasa+3,___flmul@a+3
 17237  0030F6  EC4F  F00B         	call	___flmul	;wreg free
 17238  0030FA  C083  F09C         	movff	?___flmul,calcVars2ti@temp
 17239  0030FE  C084  F09D         	movff	?___flmul+1,calcVars2ti@temp+1
 17240  003102  C085  F09E         	movff	?___flmul+2,calcVars2ti@temp+2
 17241  003106  C086  F09F         	movff	?___flmul+3,calcVars2ti@temp+3
 17242                           
 17243                           ;sysParams.h: 78: if(tVarProceso == 0) {
 17244  00310A  0100               	movlb	0	; () banked
 17245  00310C  51E3               	movf	_tVarProceso& (0+255),w,b
 17246  00310E  A4D8               	btfss	status,2,c
 17247  003110  D035               	goto	l8590
 17248                           
 17249                           ; BSR set to: 0
 17250                           ;sysParams.h: 79: m3Xcorte = (float)kgXcorte / densidadMasa;
 17251  003112  C0DB  F083         	movff	_kgXcorte,___fldiv@b
 17252  003116  C0DC  F084         	movff	_kgXcorte+1,___fldiv@b+1
 17253  00311A  C0DD  F085         	movff	_kgXcorte+2,___fldiv@b+2
 17254  00311E  C0DE  F086         	movff	_kgXcorte+3,___fldiv@b+3
 17255  003122  C02F  F087         	movff	_densidadMasa,___fldiv@a
 17256  003126  C030  F088         	movff	_densidadMasa+1,___fldiv@a+1
 17257  00312A  C031  F089         	movff	_densidadMasa+2,___fldiv@a+2
 17258  00312E  C032  F08A         	movff	_densidadMasa+3,___fldiv@a+3
 17259  003132  ECA2  F00D         	call	___fldiv	;wreg free
 17260  003136  C083  F037         	movff	?___fldiv,_m3Xcorte
 17261  00313A  C084  F038         	movff	?___fldiv+1,_m3Xcorte+1
 17262  00313E  C085  F039         	movff	?___fldiv+2,_m3Xcorte+2
 17263  003142  C086  F03A         	movff	?___fldiv+3,_m3Xcorte+3
 17264                           
 17265                           ;sysParams.h: 80: tiXcorte = (float)m3Xcorte / temp;
 17266  003146  C037  F083         	movff	_m3Xcorte,___fldiv@b
 17267  00314A  C038  F084         	movff	_m3Xcorte+1,___fldiv@b+1
 17268  00314E  C039  F085         	movff	_m3Xcorte+2,___fldiv@b+2
 17269  003152  C03A  F086         	movff	_m3Xcorte+3,___fldiv@b+3
 17270  003156  C09C  F087         	movff	calcVars2ti@temp,___fldiv@a
 17271  00315A  C09D  F088         	movff	calcVars2ti@temp+1,___fldiv@a+1
 17272  00315E  C09E  F089         	movff	calcVars2ti@temp+2,___fldiv@a+2
 17273  003162  C09F  F08A         	movff	calcVars2ti@temp+3,___fldiv@a+3
 17274  003166  ECA2  F00D         	call	___fldiv	;wreg free
 17275  00316A  C083  F03B         	movff	?___fldiv,_tiXcorte
 17276  00316E  C084  F03C         	movff	?___fldiv+1,_tiXcorte+1
 17277  003172  C085  F03D         	movff	?___fldiv+2,_tiXcorte+2
 17278  003176  C086  F03E         	movff	?___fldiv+3,_tiXcorte+3
 17279                           
 17280                           ;sysParams.h: 81: }else if(tVarProceso == 1) {
 17281  00317A  0012               	return	
 17282  00317C                     l8590:
 17283  00317C  0100               	movlb	0	; () banked
 17284  00317E  05E3               	decf	_tVarProceso& (0+255),w,b
 17285  003180  A4D8               	btfss	status,2,c
 17286  003182  D035               	goto	l8596
 17287                           
 17288                           ; BSR set to: 0
 17289                           ;sysParams.h: 82: tiXcorte = (float)m3Xcorte / temp;
 17290  003184  C037  F083         	movff	_m3Xcorte,___fldiv@b
 17291  003188  C038  F084         	movff	_m3Xcorte+1,___fldiv@b+1
 17292  00318C  C039  F085         	movff	_m3Xcorte+2,___fldiv@b+2
 17293  003190  C03A  F086         	movff	_m3Xcorte+3,___fldiv@b+3
 17294  003194  C09C  F087         	movff	calcVars2ti@temp,___fldiv@a
 17295  003198  C09D  F088         	movff	calcVars2ti@temp+1,___fldiv@a+1
 17296  00319C  C09E  F089         	movff	calcVars2ti@temp+2,___fldiv@a+2
 17297  0031A0  C09F  F08A         	movff	calcVars2ti@temp+3,___fldiv@a+3
 17298  0031A4  ECA2  F00D         	call	___fldiv	;wreg free
 17299  0031A8  C083  F03B         	movff	?___fldiv,_tiXcorte
 17300  0031AC  C084  F03C         	movff	?___fldiv+1,_tiXcorte+1
 17301  0031B0  C085  F03D         	movff	?___fldiv+2,_tiXcorte+2
 17302  0031B4  C086  F03E         	movff	?___fldiv+3,_tiXcorte+3
 17303                           
 17304                           ;sysParams.h: 83: kgXcorte = (float)densidadMasa * m3Xcorte;
 17305  0031B8  C02F  F083         	movff	_densidadMasa,___flmul@b
 17306  0031BC  C030  F084         	movff	_densidadMasa+1,___flmul@b+1
 17307  0031C0  C031  F085         	movff	_densidadMasa+2,___flmul@b+2
 17308  0031C4  C032  F086         	movff	_densidadMasa+3,___flmul@b+3
 17309  0031C8  C037  F087         	movff	_m3Xcorte,___flmul@a
 17310  0031CC  C038  F088         	movff	_m3Xcorte+1,___flmul@a+1
 17311  0031D0  C039  F089         	movff	_m3Xcorte+2,___flmul@a+2
 17312  0031D4  C03A  F08A         	movff	_m3Xcorte+3,___flmul@a+3
 17313  0031D8  EC4F  F00B         	call	___flmul	;wreg free
 17314  0031DC  C083  F0DB         	movff	?___flmul,_kgXcorte
 17315  0031E0  C084  F0DC         	movff	?___flmul+1,_kgXcorte+1
 17316  0031E4  C085  F0DD         	movff	?___flmul+2,_kgXcorte+2
 17317  0031E8  C086  F0DE         	movff	?___flmul+3,_kgXcorte+3
 17318                           
 17319                           ;sysParams.h: 84: }else if(tVarProceso == 2) {
 17320  0031EC  0012               	return	
 17321  0031EE                     l8596:
 17322  0031EE  0E02               	movlw	2
 17323  0031F0  0100               	movlb	0	; () banked
 17324  0031F2  19E3               	xorwf	_tVarProceso& (0+255),w,b
 17325  0031F4  A4D8               	btfss	status,2,c
 17326  0031F6  0012               	return	
 17327                           
 17328                           ; BSR set to: 0
 17329                           ;sysParams.h: 85: m3Xcorte = (float)temp * tiXcorte;
 17330  0031F8  C09C  F083         	movff	calcVars2ti@temp,___flmul@b
 17331  0031FC  C09D  F084         	movff	calcVars2ti@temp+1,___flmul@b+1
 17332  003200  C09E  F085         	movff	calcVars2ti@temp+2,___flmul@b+2
 17333  003204  C09F  F086         	movff	calcVars2ti@temp+3,___flmul@b+3
 17334  003208  C03B  F087         	movff	_tiXcorte,___flmul@a
 17335  00320C  C03C  F088         	movff	_tiXcorte+1,___flmul@a+1
 17336  003210  C03D  F089         	movff	_tiXcorte+2,___flmul@a+2
 17337  003214  C03E  F08A         	movff	_tiXcorte+3,___flmul@a+3
 17338  003218  EC4F  F00B         	call	___flmul	;wreg free
 17339  00321C  C083  F037         	movff	?___flmul,_m3Xcorte
 17340  003220  C084  F038         	movff	?___flmul+1,_m3Xcorte+1
 17341  003224  C085  F039         	movff	?___flmul+2,_m3Xcorte+2
 17342  003228  C086  F03A         	movff	?___flmul+3,_m3Xcorte+3
 17343                           
 17344                           ;sysParams.h: 86: kgXcorte = (float)densidadMasa * m3Xcorte;
 17345  00322C  C02F  F083         	movff	_densidadMasa,___flmul@b
 17346  003230  C030  F084         	movff	_densidadMasa+1,___flmul@b+1
 17347  003234  C031  F085         	movff	_densidadMasa+2,___flmul@b+2
 17348  003238  C032  F086         	movff	_densidadMasa+3,___flmul@b+3
 17349  00323C  C037  F087         	movff	_m3Xcorte,___flmul@a
 17350  003240  C038  F088         	movff	_m3Xcorte+1,___flmul@a+1
 17351  003244  C039  F089         	movff	_m3Xcorte+2,___flmul@a+2
 17352  003248  C03A  F08A         	movff	_m3Xcorte+3,___flmul@a+3
 17353  00324C  EC4F  F00B         	call	___flmul	;wreg free
 17354  003250  C083  F0DB         	movff	?___flmul,_kgXcorte
 17355  003254  C084  F0DC         	movff	?___flmul+1,_kgXcorte+1
 17356  003258  C085  F0DD         	movff	?___flmul+2,_kgXcorte+2
 17357  00325C  C086  F0DE         	movff	?___flmul+3,_kgXcorte+3
 17358  003260  0012               	return	
 17359  003262                     __end_of_calcVars2ti:
 17360                           	opt stack 0
 17361                           tblptru	equ	0xFF8
 17362                           tblptrh	equ	0xFF7
 17363                           tblptrl	equ	0xFF6
 17364                           tablat	equ	0xFF5
 17365                           prodh	equ	0xFF4
 17366                           prodl	equ	0xFF3
 17367                           intcon	equ	0xFF2
 17368                           postinc0	equ	0xFEE
 17369                           wreg	equ	0xFE8
 17370                           postdec1	equ	0xFE5
 17371                           fsr1l	equ	0xFE1
 17372                           indf2	equ	0xFDF
 17373                           postinc2	equ	0xFDE
 17374                           postdec2	equ	0xFDD
 17375                           plusw2	equ	0xFDB
 17376                           fsr2h	equ	0xFDA
 17377                           fsr2l	equ	0xFD9
 17378                           status	equ	0xFD8
 17379                           
 17380 ;; *************** function ___flmul *****************
 17381 ;; Defined at:
 17382 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 17383 ;; Parameters:    Size  Location     Type
 17384 ;;  b               4   35[BANK0 ] void 
 17385 ;;  a               4   39[BANK0 ] void 
 17386 ;; Auto vars:     Size  Location     Type
 17387 ;;  prod            4   54[BANK0 ] struct .
 17388 ;;  grs             4   49[BANK0 ] unsigned long 
 17389 ;;  temp            2   58[BANK0 ] struct .
 17390 ;;  bexp            1   53[BANK0 ] unsigned char 
 17391 ;;  aexp            1   48[BANK0 ] unsigned char 
 17392 ;;  sign            1   47[BANK0 ] unsigned char 
 17393 ;; Return value:  Size  Location     Type
 17394 ;;                  4   35[BANK0 ] unsigned char 
 17395 ;; Registers used:
 17396 ;;		wreg, status,2, status,0, prodl, prodh
 17397 ;; Tracked objects:
 17398 ;;		On entry : 0/0
 17399 ;;		On exit  : 0/0
 17400 ;;		Unchanged: 0/0
 17401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17402 ;;      Params:         0       8       0       0       0       0       0
 17403 ;;      Locals:         0      13       0       0       0       0       0
 17404 ;;      Temps:          0       4       0       0       0       0       0
 17405 ;;      Totals:         0      25       0       0       0       0       0
 17406 ;;Total ram usage:       25 bytes
 17407 ;; Hardware stack levels used:    1
 17408 ;; Hardware stack levels required when called:    8
 17409 ;; This function calls:
 17410 ;;		Nothing
 17411 ;; This function is called by:
 17412 ;;		_calcVars2ti
 17413 ;;		_desintegrator
 17414 ;;		_fround
 17415 ;;		_scale
 17416 ;;		_printf
 17417 ;;		_preAutoCal
 17418 ;;		_autoCal
 17419 ;; This function uses a non-reentrant model
 17420 ;;
 17421                           
 17422                           	psect	text64
 17423  00169E                     __ptext64:
 17424                           	opt stack 0
 17425  00169E                     ___flmul:
 17426                           	opt stack 18
 17427                           
 17428                           ;incstack = 0
 17429  00169E  0100               	movlb	0	; () banked
 17430  0016A0  5186               	movf	(___flmul@b+3)& (0+255),w,b
 17431  0016A2  0B80               	andlw	128
 17432  0016A4  0100               	movlb	0	; () banked
 17433  0016A6  6F8F               	movwf	___flmul@sign& (0+255),b
 17434  0016A8  0100               	movlb	0	; () banked
 17435  0016AA  5186               	movf	(___flmul@b+3)& (0+255),w,b
 17436  0016AC  2586               	addwf	(___flmul@b+3)& (0+255),w,b
 17437  0016AE  0100               	movlb	0	; () banked
 17438  0016B0  6F95               	movwf	___flmul@bexp& (0+255),b
 17439                           
 17440                           ; BSR set to: 0
 17441  0016B2  0100               	movlb	0	; () banked
 17442  0016B4  AF85               	btfss	(___flmul@b+2)& (0+255),7,b
 17443  0016B6  D002               	goto	l8370
 17444                           
 17445                           ; BSR set to: 0
 17446  0016B8  0100               	movlb	0	; () banked
 17447  0016BA  8195               	bsf	___flmul@bexp& (0+255),0,b
 17448  0016BC                     l8370:
 17449                           
 17450                           ; BSR set to: 0
 17451  0016BC  0100               	movlb	0	; () banked
 17452  0016BE  5195               	movf	___flmul@bexp& (0+255),w,b
 17453  0016C0  0100               	movlb	0	; () banked
 17454  0016C2  B4D8               	btfsc	status,2,c
 17455  0016C4  D010               	goto	l8378
 17456                           
 17457                           ; BSR set to: 0
 17458  0016C6  0100               	movlb	0	; () banked
 17459  0016C8  2995               	incf	___flmul@bexp& (0+255),w,b
 17460  0016CA  A4D8               	btfss	status,2,c
 17461  0016CC  D009               	goto	l8376
 17462                           
 17463                           ; BSR set to: 0
 17464  0016CE  0E00               	movlw	0
 17465  0016D0  0100               	movlb	0	; () banked
 17466  0016D2  6F83               	movwf	___flmul@b& (0+255),b
 17467  0016D4  0E00               	movlw	0
 17468  0016D6  6F84               	movwf	(___flmul@b+1)& (0+255),b
 17469  0016D8  0E00               	movlw	0
 17470  0016DA  6F85               	movwf	(___flmul@b+2)& (0+255),b
 17471  0016DC  0E00               	movlw	0
 17472  0016DE  6F86               	movwf	(___flmul@b+3)& (0+255),b
 17473  0016E0                     l8376:
 17474                           
 17475                           ; BSR set to: 0
 17476  0016E0  0100               	movlb	0	; () banked
 17477  0016E2  8F85               	bsf	(___flmul@b+2)& (0+255),7,b
 17478  0016E4  D009               	goto	l8380
 17479  0016E6                     l8378:
 17480                           
 17481                           ; BSR set to: 0
 17482  0016E6  0E00               	movlw	0
 17483  0016E8  0100               	movlb	0	; () banked
 17484  0016EA  6F83               	movwf	___flmul@b& (0+255),b
 17485  0016EC  0E00               	movlw	0
 17486  0016EE  6F84               	movwf	(___flmul@b+1)& (0+255),b
 17487  0016F0  0E00               	movlw	0
 17488  0016F2  6F85               	movwf	(___flmul@b+2)& (0+255),b
 17489  0016F4  0E00               	movlw	0
 17490  0016F6  6F86               	movwf	(___flmul@b+3)& (0+255),b
 17491  0016F8                     l8380:
 17492                           
 17493                           ; BSR set to: 0
 17494  0016F8  0100               	movlb	0	; () banked
 17495  0016FA  518A               	movf	(___flmul@a+3)& (0+255),w,b
 17496  0016FC  0B80               	andlw	128
 17497  0016FE  0100               	movlb	0	; () banked
 17498  001700  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 17499                           
 17500                           ; BSR set to: 0
 17501  001702  0100               	movlb	0	; () banked
 17502  001704  518A               	movf	(___flmul@a+3)& (0+255),w,b
 17503  001706  258A               	addwf	(___flmul@a+3)& (0+255),w,b
 17504  001708  0100               	movlb	0	; () banked
 17505  00170A  6F90               	movwf	___flmul@aexp& (0+255),b
 17506                           
 17507                           ; BSR set to: 0
 17508  00170C  0100               	movlb	0	; () banked
 17509  00170E  AF89               	btfss	(___flmul@a+2)& (0+255),7,b
 17510  001710  D002               	goto	l8388
 17511                           
 17512                           ; BSR set to: 0
 17513  001712  0100               	movlb	0	; () banked
 17514  001714  8190               	bsf	___flmul@aexp& (0+255),0,b
 17515  001716                     l8388:
 17516                           
 17517                           ; BSR set to: 0
 17518  001716  0100               	movlb	0	; () banked
 17519  001718  5190               	movf	___flmul@aexp& (0+255),w,b
 17520  00171A  0100               	movlb	0	; () banked
 17521  00171C  B4D8               	btfsc	status,2,c
 17522  00171E  D010               	goto	l8396
 17523                           
 17524                           ; BSR set to: 0
 17525  001720  0100               	movlb	0	; () banked
 17526  001722  2990               	incf	___flmul@aexp& (0+255),w,b
 17527  001724  A4D8               	btfss	status,2,c
 17528  001726  D009               	goto	l8394
 17529                           
 17530                           ; BSR set to: 0
 17531  001728  0E00               	movlw	0
 17532  00172A  0100               	movlb	0	; () banked
 17533  00172C  6F87               	movwf	___flmul@a& (0+255),b
 17534  00172E  0E00               	movlw	0
 17535  001730  6F88               	movwf	(___flmul@a+1)& (0+255),b
 17536  001732  0E00               	movlw	0
 17537  001734  6F89               	movwf	(___flmul@a+2)& (0+255),b
 17538  001736  0E00               	movlw	0
 17539  001738  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 17540  00173A                     l8394:
 17541                           
 17542                           ; BSR set to: 0
 17543  00173A  0100               	movlb	0	; () banked
 17544  00173C  8F89               	bsf	(___flmul@a+2)& (0+255),7,b
 17545  00173E  D009               	goto	l1512
 17546  001740                     l8396:
 17547                           
 17548                           ; BSR set to: 0
 17549  001740  0E00               	movlw	0
 17550  001742  0100               	movlb	0	; () banked
 17551  001744  6F87               	movwf	___flmul@a& (0+255),b
 17552  001746  0E00               	movlw	0
 17553  001748  6F88               	movwf	(___flmul@a+1)& (0+255),b
 17554  00174A  0E00               	movlw	0
 17555  00174C  6F89               	movwf	(___flmul@a+2)& (0+255),b
 17556  00174E  0E00               	movlw	0
 17557  001750  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 17558  001752                     l1512:
 17559                           
 17560                           ; BSR set to: 0
 17561  001752  0100               	movlb	0	; () banked
 17562  001754  5190               	movf	___flmul@aexp& (0+255),w,b
 17563  001756  0100               	movlb	0	; () banked
 17564  001758  B4D8               	btfsc	status,2,c
 17565  00175A  D005               	goto	l8400
 17566                           
 17567                           ; BSR set to: 0
 17568  00175C  0100               	movlb	0	; () banked
 17569  00175E  5195               	movf	___flmul@bexp& (0+255),w,b
 17570  001760  0100               	movlb	0	; () banked
 17571  001762  A4D8               	btfss	status,2,c
 17572  001764  D00A               	goto	l8404
 17573  001766                     l8400:
 17574                           
 17575                           ; BSR set to: 0
 17576  001766  0E00               	movlw	0
 17577  001768  0100               	movlb	0	; () banked
 17578  00176A  6F83               	movwf	?___flmul& (0+255),b
 17579  00176C  0E00               	movlw	0
 17580  00176E  6F84               	movwf	(?___flmul+1)& (0+255),b
 17581  001770  0E00               	movlw	0
 17582  001772  6F85               	movwf	(?___flmul+2)& (0+255),b
 17583  001774  0E00               	movlw	0
 17584  001776  6F86               	movwf	(?___flmul+3)& (0+255),b
 17585                           
 17586                           ; BSR set to: 0
 17587  001778  0012               	return	
 17588  00177A                     l8404:
 17589                           
 17590                           ; BSR set to: 0
 17591  00177A  0100               	movlb	0	; () banked
 17592  00177C  5189               	movf	(___flmul@a+2)& (0+255),w,b
 17593  00177E  0100               	movlb	0	; () banked
 17594  001780  0383               	mulwf	___flmul@b& (0+255),b
 17595  001782  CFF3 F09A          	movff	prodl,___flmul@temp
 17596  001786  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17597                           
 17598                           ; BSR set to: 0
 17599  00178A  0100               	movlb	0	; () banked
 17600  00178C  519A               	movf	___flmul@temp& (0+255),w,b
 17601  00178E  0100               	movlb	0	; () banked
 17602  001790  6F91               	movwf	___flmul@grs& (0+255),b
 17603  001792  6B92               	clrf	(___flmul@grs+1)& (0+255),b
 17604  001794  6B93               	clrf	(___flmul@grs+2)& (0+255),b
 17605  001796  6B94               	clrf	(___flmul@grs+3)& (0+255),b
 17606                           
 17607                           ; BSR set to: 0
 17608  001798  0100               	movlb	0	; () banked
 17609  00179A  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17610  00179C  0100               	movlb	0	; () banked
 17611  00179E  6F96               	movwf	___flmul@prod& (0+255),b
 17612  0017A0  6B97               	clrf	(___flmul@prod+1)& (0+255),b
 17613  0017A2  6B98               	clrf	(___flmul@prod+2)& (0+255),b
 17614  0017A4  6B99               	clrf	(___flmul@prod+3)& (0+255),b
 17615  0017A6  0100               	movlb	0	; () banked
 17616  0017A8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 17617  0017AA  0100               	movlb	0	; () banked
 17618  0017AC  0384               	mulwf	(___flmul@b+1)& (0+255),b
 17619  0017AE  CFF3 F09A          	movff	prodl,___flmul@temp
 17620  0017B2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17621                           
 17622                           ; BSR set to: 0
 17623  0017B6  0100               	movlb	0	; () banked
 17624  0017B8  519A               	movf	___flmul@temp& (0+255),w,b
 17625  0017BA  0100               	movlb	0	; () banked
 17626  0017BC  2791               	addwf	___flmul@grs& (0+255),f,b
 17627  0017BE  0E00               	movlw	0
 17628  0017C0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17629  0017C2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17630  0017C4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17631                           
 17632                           ; BSR set to: 0
 17633  0017C6  0100               	movlb	0	; () banked
 17634  0017C8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17635  0017CA  0100               	movlb	0	; () banked
 17636  0017CC  2796               	addwf	___flmul@prod& (0+255),f,b
 17637  0017CE  0E00               	movlw	0
 17638  0017D0  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17639  0017D2  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17640  0017D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17641  0017D6  0100               	movlb	0	; () banked
 17642  0017D8  5187               	movf	___flmul@a& (0+255),w,b
 17643  0017DA  0100               	movlb	0	; () banked
 17644  0017DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 17645  0017DE  CFF3 F09A          	movff	prodl,___flmul@temp
 17646  0017E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17647                           
 17648                           ; BSR set to: 0
 17649  0017E6  0100               	movlb	0	; () banked
 17650  0017E8  519A               	movf	___flmul@temp& (0+255),w,b
 17651  0017EA  0100               	movlb	0	; () banked
 17652  0017EC  2791               	addwf	___flmul@grs& (0+255),f,b
 17653  0017EE  0E00               	movlw	0
 17654  0017F0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17655  0017F2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17656  0017F4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17657                           
 17658                           ; BSR set to: 0
 17659  0017F6  0100               	movlb	0	; () banked
 17660  0017F8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17661  0017FA  0100               	movlb	0	; () banked
 17662  0017FC  2796               	addwf	___flmul@prod& (0+255),f,b
 17663  0017FE  0E00               	movlw	0
 17664  001800  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17665  001802  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17666  001804  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17667                           
 17668                           ; BSR set to: 0
 17669  001806  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 17670  00180A  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 17671  00180E  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 17672  001812  0100               	movlb	0	; () banked
 17673  001814  6B91               	clrf	___flmul@grs& (0+255),b
 17674                           
 17675                           ; BSR set to: 0
 17676  001816  0100               	movlb	0	; () banked
 17677  001818  5187               	movf	___flmul@a& (0+255),w,b
 17678  00181A  0100               	movlb	0	; () banked
 17679  00181C  0384               	mulwf	(___flmul@b+1)& (0+255),b
 17680  00181E  CFF3 F09A          	movff	prodl,___flmul@temp
 17681  001822  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17682                           
 17683                           ; BSR set to: 0
 17684  001826  0100               	movlb	0	; () banked
 17685  001828  519A               	movf	___flmul@temp& (0+255),w,b
 17686  00182A  0100               	movlb	0	; () banked
 17687  00182C  2791               	addwf	___flmul@grs& (0+255),f,b
 17688  00182E  0100               	movlb	0	; () banked
 17689  001830  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17690  001832  0100               	movlb	0	; () banked
 17691  001834  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17692  001836  0E00               	movlw	0
 17693  001838  0100               	movlb	0	; () banked
 17694  00183A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17695  00183C  0E00               	movlw	0
 17696  00183E  0100               	movlb	0	; () banked
 17697  001840  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17698                           
 17699                           ; BSR set to: 0
 17700  001842  0100               	movlb	0	; () banked
 17701  001844  5188               	movf	(___flmul@a+1)& (0+255),w,b
 17702  001846  0100               	movlb	0	; () banked
 17703  001848  0383               	mulwf	___flmul@b& (0+255),b
 17704  00184A  CFF3 F09A          	movff	prodl,___flmul@temp
 17705  00184E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17706                           
 17707                           ; BSR set to: 0
 17708  001852  0100               	movlb	0	; () banked
 17709  001854  519A               	movf	___flmul@temp& (0+255),w,b
 17710  001856  0100               	movlb	0	; () banked
 17711  001858  2791               	addwf	___flmul@grs& (0+255),f,b
 17712  00185A  0100               	movlb	0	; () banked
 17713  00185C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17714  00185E  0100               	movlb	0	; () banked
 17715  001860  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17716  001862  0E00               	movlw	0
 17717  001864  0100               	movlb	0	; () banked
 17718  001866  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17719  001868  0E00               	movlw	0
 17720  00186A  0100               	movlb	0	; () banked
 17721  00186C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17722                           
 17723                           ; BSR set to: 0
 17724  00186E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 17725  001872  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 17726  001876  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 17727  00187A  0100               	movlb	0	; () banked
 17728  00187C  6B91               	clrf	___flmul@grs& (0+255),b
 17729  00187E  0100               	movlb	0	; () banked
 17730  001880  5187               	movf	___flmul@a& (0+255),w,b
 17731  001882  0100               	movlb	0	; () banked
 17732  001884  0383               	mulwf	___flmul@b& (0+255),b
 17733  001886  CFF3 F09A          	movff	prodl,___flmul@temp
 17734  00188A  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17735                           
 17736                           ; BSR set to: 0
 17737  00188E  0100               	movlb	0	; () banked
 17738  001890  519A               	movf	___flmul@temp& (0+255),w,b
 17739  001892  0100               	movlb	0	; () banked
 17740  001894  2791               	addwf	___flmul@grs& (0+255),f,b
 17741  001896  0100               	movlb	0	; () banked
 17742  001898  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17743  00189A  0100               	movlb	0	; () banked
 17744  00189C  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 17745  00189E  0E00               	movlw	0
 17746  0018A0  0100               	movlb	0	; () banked
 17747  0018A2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 17748  0018A4  0E00               	movlw	0
 17749  0018A6  0100               	movlb	0	; () banked
 17750  0018A8  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 17751                           
 17752                           ; BSR set to: 0
 17753  0018AA  0100               	movlb	0	; () banked
 17754  0018AC  5189               	movf	(___flmul@a+2)& (0+255),w,b
 17755  0018AE  0100               	movlb	0	; () banked
 17756  0018B0  0384               	mulwf	(___flmul@b+1)& (0+255),b
 17757  0018B2  CFF3 F09A          	movff	prodl,___flmul@temp
 17758  0018B6  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17759  0018BA  0100               	movlb	0	; () banked
 17760  0018BC  519A               	movf	___flmul@temp& (0+255),w,b
 17761  0018BE  0100               	movlb	0	; () banked
 17762  0018C0  2796               	addwf	___flmul@prod& (0+255),f,b
 17763  0018C2  0100               	movlb	0	; () banked
 17764  0018C4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17765  0018C6  0100               	movlb	0	; () banked
 17766  0018C8  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17767  0018CA  0E00               	movlw	0
 17768  0018CC  0100               	movlb	0	; () banked
 17769  0018CE  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17770  0018D0  0E00               	movlw	0
 17771  0018D2  0100               	movlb	0	; () banked
 17772  0018D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17773                           
 17774                           ; BSR set to: 0
 17775  0018D6  0100               	movlb	0	; () banked
 17776  0018D8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 17777  0018DA  0100               	movlb	0	; () banked
 17778  0018DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 17779  0018DE  CFF3 F09A          	movff	prodl,___flmul@temp
 17780  0018E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17781                           
 17782                           ; BSR set to: 0
 17783  0018E6  0100               	movlb	0	; () banked
 17784  0018E8  519A               	movf	___flmul@temp& (0+255),w,b
 17785  0018EA  0100               	movlb	0	; () banked
 17786  0018EC  2796               	addwf	___flmul@prod& (0+255),f,b
 17787  0018EE  0100               	movlb	0	; () banked
 17788  0018F0  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17789  0018F2  0100               	movlb	0	; () banked
 17790  0018F4  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17791  0018F6  0E00               	movlw	0
 17792  0018F8  0100               	movlb	0	; () banked
 17793  0018FA  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17794  0018FC  0E00               	movlw	0
 17795  0018FE  0100               	movlb	0	; () banked
 17796  001900  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17797  001902  0100               	movlb	0	; () banked
 17798  001904  5189               	movf	(___flmul@a+2)& (0+255),w,b
 17799  001906  0100               	movlb	0	; () banked
 17800  001908  0385               	mulwf	(___flmul@b+2)& (0+255),b
 17801  00190A  CFF3 F09A          	movff	prodl,___flmul@temp
 17802  00190E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 17803                           
 17804                           ; BSR set to: 0
 17805  001912  0100               	movlb	0	; () banked
 17806  001914  519A               	movf	___flmul@temp& (0+255),w,b
 17807  001916  0100               	movlb	0	; () banked
 17808  001918  6F8B               	movwf	??___flmul& (0+255),b
 17809  00191A  0100               	movlb	0	; () banked
 17810  00191C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 17811  00191E  0100               	movlb	0	; () banked
 17812  001920  6F8C               	movwf	(??___flmul+1)& (0+255),b
 17813  001922  0100               	movlb	0	; () banked
 17814  001924  6B8D               	clrf	(??___flmul+2)& (0+255),b
 17815  001926  0100               	movlb	0	; () banked
 17816  001928  6B8E               	clrf	(??___flmul+3)& (0+255),b
 17817  00192A  C08D  F08E         	movff	??___flmul+2,??___flmul+3
 17818  00192E  C08C  F08D         	movff	??___flmul+1,??___flmul+2
 17819  001932  C08B  F08C         	movff	??___flmul,??___flmul+1
 17820  001936  0100               	movlb	0	; () banked
 17821  001938  6B8B               	clrf	??___flmul& (0+255),b
 17822  00193A  0100               	movlb	0	; () banked
 17823  00193C  518B               	movf	??___flmul& (0+255),w,b
 17824  00193E  0100               	movlb	0	; () banked
 17825  001940  2796               	addwf	___flmul@prod& (0+255),f,b
 17826  001942  0100               	movlb	0	; () banked
 17827  001944  518C               	movf	(??___flmul+1)& (0+255),w,b
 17828  001946  0100               	movlb	0	; () banked
 17829  001948  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17830  00194A  0100               	movlb	0	; () banked
 17831  00194C  518D               	movf	(??___flmul+2)& (0+255),w,b
 17832  00194E  0100               	movlb	0	; () banked
 17833  001950  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17834  001952  0100               	movlb	0	; () banked
 17835  001954  518E               	movf	(??___flmul+3)& (0+255),w,b
 17836  001956  0100               	movlb	0	; () banked
 17837  001958  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17838                           
 17839                           ; BSR set to: 0
 17840  00195A  C091  F08B         	movff	___flmul@grs,??___flmul
 17841  00195E  C092  F08C         	movff	___flmul@grs+1,??___flmul+1
 17842  001962  C093  F08D         	movff	___flmul@grs+2,??___flmul+2
 17843  001966  C094  F08E         	movff	___flmul@grs+3,??___flmul+3
 17844  00196A  0E19               	movlw	25
 17845  00196C  D006               	goto	u10440
 17846  00196E                     u10445:
 17847  00196E  0100               	movlb	0	; () banked
 17848  001970  90D8               	bcf	status,0,c
 17849  001972  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 17850  001974  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 17851  001976  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 17852  001978  338B               	rrcf	??___flmul& (0+255),f,b
 17853  00197A                     u10440:
 17854  00197A  2EE8               	decfsz	wreg,f,c
 17855  00197C  D7F8               	goto	u10445
 17856  00197E  0100               	movlb	0	; () banked
 17857  001980  518B               	movf	??___flmul& (0+255),w,b
 17858  001982  0100               	movlb	0	; () banked
 17859  001984  2796               	addwf	___flmul@prod& (0+255),f,b
 17860  001986  0100               	movlb	0	; () banked
 17861  001988  518C               	movf	(??___flmul+1)& (0+255),w,b
 17862  00198A  0100               	movlb	0	; () banked
 17863  00198C  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 17864  00198E  0100               	movlb	0	; () banked
 17865  001990  518D               	movf	(??___flmul+2)& (0+255),w,b
 17866  001992  0100               	movlb	0	; () banked
 17867  001994  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 17868  001996  0100               	movlb	0	; () banked
 17869  001998  518E               	movf	(??___flmul+3)& (0+255),w,b
 17870  00199A  0100               	movlb	0	; () banked
 17871  00199C  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 17872                           
 17873                           ; BSR set to: 0
 17874  00199E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 17875  0019A2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 17876  0019A6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 17877  0019AA  0100               	movlb	0	; () banked
 17878  0019AC  6B91               	clrf	___flmul@grs& (0+255),b
 17879                           
 17880                           ; BSR set to: 0
 17881  0019AE  0100               	movlb	0	; () banked
 17882  0019B0  5190               	movf	___flmul@aexp& (0+255),w,b
 17883  0019B2  C095  F08B         	movff	___flmul@bexp,??___flmul
 17884  0019B6  0100               	movlb	0	; () banked
 17885  0019B8  6B8C               	clrf	(??___flmul+1)& (0+255),b
 17886  0019BA  0100               	movlb	0	; () banked
 17887  0019BC  278B               	addwf	??___flmul& (0+255),f,b
 17888  0019BE  0E00               	movlw	0
 17889  0019C0  238C               	addwfc	(??___flmul+1)& (0+255),f,b
 17890  0019C2  0E82               	movlw	130
 17891  0019C4  0100               	movlb	0	; () banked
 17892  0019C6  258B               	addwf	??___flmul& (0+255),w,b
 17893  0019C8  0100               	movlb	0	; () banked
 17894  0019CA  6F9A               	movwf	___flmul@temp& (0+255),b
 17895  0019CC  0EFF               	movlw	255
 17896  0019CE  0100               	movlb	0	; () banked
 17897  0019D0  218C               	addwfc	(??___flmul+1)& (0+255),w,b
 17898  0019D2  0100               	movlb	0	; () banked
 17899  0019D4  6F9B               	movwf	(___flmul@temp+1)& (0+255),b
 17900  0019D6  D015               	goto	l8452
 17901  0019D8                     l8446:
 17902                           
 17903                           ; BSR set to: 0
 17904  0019D8  0100               	movlb	0	; () banked
 17905  0019DA  90D8               	bcf	status,0,c
 17906  0019DC  3796               	rlcf	___flmul@prod& (0+255),f,b
 17907  0019DE  3797               	rlcf	(___flmul@prod+1)& (0+255),f,b
 17908  0019E0  3798               	rlcf	(___flmul@prod+2)& (0+255),f,b
 17909  0019E2  3799               	rlcf	(___flmul@prod+3)& (0+255),f,b
 17910                           
 17911                           ; BSR set to: 0
 17912  0019E4  0100               	movlb	0	; () banked
 17913  0019E6  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 17914  0019E8  D002               	goto	l1519
 17915                           
 17916                           ; BSR set to: 0
 17917  0019EA  0100               	movlb	0	; () banked
 17918  0019EC  8196               	bsf	___flmul@prod& (0+255),0,b
 17919  0019EE                     l1519:
 17920                           
 17921                           ; BSR set to: 0
 17922  0019EE  0100               	movlb	0	; () banked
 17923  0019F0  90D8               	bcf	status,0,c
 17924  0019F2  3791               	rlcf	___flmul@grs& (0+255),f,b
 17925  0019F4  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
 17926  0019F6  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
 17927  0019F8  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
 17928  0019FA  0100               	movlb	0	; () banked
 17929  0019FC  079A               	decf	___flmul@temp& (0+255),f,b
 17930  0019FE  A0D8               	btfss	status,0,c
 17931  001A00  079B               	decf	(___flmul@temp+1)& (0+255),f,b
 17932  001A02                     l8452:
 17933                           
 17934                           ; BSR set to: 0
 17935  001A02  0100               	movlb	0	; () banked
 17936  001A04  AF98               	btfss	(___flmul@prod+2)& (0+255),7,b
 17937  001A06  D7E8               	goto	l8446
 17938                           
 17939                           ; BSR set to: 0
 17940                           
 17941                           ; BSR set to: 0
 17942  001A08  0E00               	movlw	0
 17943  001A0A  0100               	movlb	0	; () banked
 17944  001A0C  6F90               	movwf	___flmul@aexp& (0+255),b
 17945                           
 17946                           ; BSR set to: 0
 17947  001A0E  0100               	movlb	0	; () banked
 17948  001A10  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 17949  001A12  D024               	goto	l1521
 17950                           
 17951                           ; BSR set to: 0
 17952  001A14  0EFF               	movlw	255
 17953  001A16  0100               	movlb	0	; () banked
 17954  001A18  1591               	andwf	___flmul@grs& (0+255),w,b
 17955  001A1A  0100               	movlb	0	; () banked
 17956  001A1C  6F8B               	movwf	??___flmul& (0+255),b
 17957  001A1E  0EFF               	movlw	255
 17958  001A20  0100               	movlb	0	; () banked
 17959  001A22  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
 17960  001A24  0100               	movlb	0	; () banked
 17961  001A26  6F8C               	movwf	(??___flmul+1)& (0+255),b
 17962  001A28  0EFF               	movlw	255
 17963  001A2A  0100               	movlb	0	; () banked
 17964  001A2C  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
 17965  001A2E  0100               	movlb	0	; () banked
 17966  001A30  6F8D               	movwf	(??___flmul+2)& (0+255),b
 17967  001A32  0E7F               	movlw	127
 17968  001A34  0100               	movlb	0	; () banked
 17969  001A36  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
 17970  001A38  0100               	movlb	0	; () banked
 17971  001A3A  6F8E               	movwf	(??___flmul+3)& (0+255),b
 17972  001A3C  0100               	movlb	0	; () banked
 17973  001A3E  518B               	movf	??___flmul& (0+255),w,b
 17974  001A40  0100               	movlb	0	; () banked
 17975  001A42  118C               	iorwf	(??___flmul+1)& (0+255),w,b
 17976  001A44  0100               	movlb	0	; () banked
 17977  001A46  118D               	iorwf	(??___flmul+2)& (0+255),w,b
 17978  001A48  0100               	movlb	0	; () banked
 17979  001A4A  118E               	iorwf	(??___flmul+3)& (0+255),w,b
 17980  001A4C  A4D8               	btfss	status,2,c
 17981  001A4E  D003               	goto	l8462
 17982                           
 17983                           ; BSR set to: 0
 17984                           
 17985                           ; BSR set to: 0
 17986  001A50  0100               	movlb	0	; () banked
 17987  001A52  A196               	btfss	___flmul@prod& (0+255),0,b
 17988  001A54  D003               	goto	l1521
 17989  001A56                     l8462:
 17990                           
 17991                           ; BSR set to: 0
 17992  001A56  0E01               	movlw	1
 17993  001A58  0100               	movlb	0	; () banked
 17994  001A5A  6F90               	movwf	___flmul@aexp& (0+255),b
 17995  001A5C                     l1521:
 17996                           
 17997                           ; BSR set to: 0
 17998  001A5C  0100               	movlb	0	; () banked
 17999  001A5E  5190               	movf	___flmul@aexp& (0+255),w,b
 18000  001A60  0100               	movlb	0	; () banked
 18001  001A62  B4D8               	btfsc	status,2,c
 18002  001A64  D023               	goto	l8472
 18003                           
 18004                           ; BSR set to: 0
 18005  001A66  0E01               	movlw	1
 18006  001A68  0100               	movlb	0	; () banked
 18007  001A6A  2796               	addwf	___flmul@prod& (0+255),f,b
 18008  001A6C  0E00               	movlw	0
 18009  001A6E  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 18010  001A70  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 18011  001A72  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 18012                           
 18013                           ; BSR set to: 0
 18014  001A74  0100               	movlb	0	; () banked
 18015  001A76  A199               	btfss	(___flmul@prod+3)& (0+255),0,b
 18016  001A78  D019               	goto	l8472
 18017                           
 18018                           ; BSR set to: 0
 18019  001A7A  C096  F08B         	movff	___flmul@prod,??___flmul
 18020  001A7E  C097  F08C         	movff	___flmul@prod+1,??___flmul+1
 18021  001A82  C098  F08D         	movff	___flmul@prod+2,??___flmul+2
 18022  001A86  C099  F08E         	movff	___flmul@prod+3,??___flmul+3
 18023  001A8A  0100               	movlb	0	; () banked
 18024  001A8C  358E               	rlcf	(??___flmul+3)& (0+255),w,b
 18025  001A8E  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 18026  001A90  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 18027  001A92  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 18028  001A94  338B               	rrcf	??___flmul& (0+255),f,b
 18029  001A96  C08B  F096         	movff	??___flmul,___flmul@prod
 18030  001A9A  C08C  F097         	movff	??___flmul+1,___flmul@prod+1
 18031  001A9E  C08D  F098         	movff	??___flmul+2,___flmul@prod+2
 18032  001AA2  C08E  F099         	movff	??___flmul+3,___flmul@prod+3
 18033                           
 18034                           ; BSR set to: 0
 18035  001AA6  0100               	movlb	0	; () banked
 18036  001AA8  4B9A               	infsnz	___flmul@temp& (0+255),f,b
 18037  001AAA  2B9B               	incf	(___flmul@temp+1)& (0+255),f,b
 18038  001AAC                     l8472:
 18039                           
 18040                           ; BSR set to: 0
 18041  001AAC  0100               	movlb	0	; () banked
 18042  001AAE  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 18043  001AB0  D010               	goto	l8476
 18044  001AB2  0100               	movlb	0	; () banked
 18045  001AB4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 18046  001AB6  E104               	bnz	u10520
 18047  001AB8  0100               	movlb	0	; () banked
 18048  001ABA  299A               	incf	___flmul@temp& (0+255),w,b
 18049  001ABC  A0D8               	btfss	status,0,c
 18050  001ABE  D009               	goto	l8476
 18051  001AC0                     u10520:
 18052                           
 18053                           ; BSR set to: 0
 18054  001AC0  0E00               	movlw	0
 18055  001AC2  0100               	movlb	0	; () banked
 18056  001AC4  6F96               	movwf	___flmul@prod& (0+255),b
 18057  001AC6  0E00               	movlw	0
 18058  001AC8  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 18059  001ACA  0E80               	movlw	128
 18060  001ACC  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 18061  001ACE  0E7F               	movlw	127
 18062  001AD0  D02B               	goto	L10
 18063  001AD2                     l8476:
 18064                           
 18065                           ; BSR set to: 0
 18066  001AD2  0100               	movlb	0	; () banked
 18067  001AD4  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 18068  001AD6  D007               	goto	l8478
 18069  001AD8  0100               	movlb	0	; () banked
 18070  001ADA  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 18071  001ADC  E111               	bnz	l1529
 18072  001ADE  0100               	movlb	0	; () banked
 18073  001AE0  059A               	decf	___flmul@temp& (0+255),w,b
 18074  001AE2  B0D8               	btfsc	status,0,c
 18075  001AE4  D00D               	goto	l1529
 18076  001AE6                     l8478:
 18077                           
 18078                           ; BSR set to: 0
 18079  001AE6  0E00               	movlw	0
 18080  001AE8  0100               	movlb	0	; () banked
 18081  001AEA  6F96               	movwf	___flmul@prod& (0+255),b
 18082  001AEC  0E00               	movlw	0
 18083  001AEE  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 18084  001AF0  0E00               	movlw	0
 18085  001AF2  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 18086  001AF4  0E00               	movlw	0
 18087  001AF6  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 18088  001AF8  0E00               	movlw	0
 18089  001AFA  0100               	movlb	0	; () banked
 18090  001AFC  6F8F               	movwf	___flmul@sign& (0+255),b
 18091  001AFE  D015               	goto	l8488
 18092  001B00                     l1529:
 18093                           
 18094                           ; BSR set to: 0
 18095  001B00  C09A  F095         	movff	___flmul@temp,___flmul@bexp
 18096                           
 18097                           ; BSR set to: 0
 18098  001B04  0EFF               	movlw	255
 18099  001B06  0100               	movlb	0	; () banked
 18100  001B08  1796               	andwf	___flmul@prod& (0+255),f,b
 18101  001B0A  0EFF               	movlw	255
 18102  001B0C  1797               	andwf	(___flmul@prod+1)& (0+255),f,b
 18103  001B0E  0E7F               	movlw	127
 18104  001B10  1798               	andwf	(___flmul@prod+2)& (0+255),f,b
 18105  001B12  0E00               	movlw	0
 18106  001B14  1799               	andwf	(___flmul@prod+3)& (0+255),f,b
 18107                           
 18108                           ; BSR set to: 0
 18109  001B16  0100               	movlb	0	; () banked
 18110  001B18  A195               	btfss	___flmul@bexp& (0+255),0,b
 18111  001B1A  D002               	goto	l8486
 18112                           
 18113                           ; BSR set to: 0
 18114  001B1C  0100               	movlb	0	; () banked
 18115  001B1E  8F98               	bsf	(___flmul@prod+2)& (0+255),7,b
 18116  001B20                     l8486:
 18117                           
 18118                           ; BSR set to: 0
 18119  001B20  0100               	movlb	0	; () banked
 18120  001B22  90D8               	bcf	status,0,c
 18121  001B24  3195               	rrcf	___flmul@bexp& (0+255),w,b
 18122  001B26  0100               	movlb	0	; () banked
 18123  001B28                     L10:
 18124  001B28  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 18125  001B2A                     l8488:
 18126                           
 18127                           ; BSR set to: 0
 18128  001B2A  0100               	movlb	0	; () banked
 18129  001B2C  518F               	movf	___flmul@sign& (0+255),w,b
 18130  001B2E  0100               	movlb	0	; () banked
 18131  001B30  1399               	iorwf	(___flmul@prod+3)& (0+255),f,b
 18132                           
 18133                           ; BSR set to: 0
 18134  001B32  C096  F083         	movff	___flmul@prod,?___flmul
 18135  001B36  C097  F084         	movff	___flmul@prod+1,?___flmul+1
 18136  001B3A  C098  F085         	movff	___flmul@prod+2,?___flmul+2
 18137  001B3E  C099  F086         	movff	___flmul@prod+3,?___flmul+3
 18138  001B42  0012               	return	
 18139  001B44                     __end_of___flmul:
 18140                           	opt stack 0
 18141                           tblptru	equ	0xFF8
 18142                           tblptrh	equ	0xFF7
 18143                           tblptrl	equ	0xFF6
 18144                           tablat	equ	0xFF5
 18145                           prodh	equ	0xFF4
 18146                           prodl	equ	0xFF3
 18147                           intcon	equ	0xFF2
 18148                           postinc0	equ	0xFEE
 18149                           wreg	equ	0xFE8
 18150                           postdec1	equ	0xFE5
 18151                           fsr1l	equ	0xFE1
 18152                           indf2	equ	0xFDF
 18153                           postinc2	equ	0xFDE
 18154                           postdec2	equ	0xFDD
 18155                           plusw2	equ	0xFDB
 18156                           fsr2h	equ	0xFDA
 18157                           fsr2l	equ	0xFD9
 18158                           status	equ	0xFD8
 18159                           
 18160 ;; *************** function ___fldiv *****************
 18161 ;; Defined at:
 18162 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 18163 ;; Parameters:    Size  Location     Type
 18164 ;;  b               4   35[BANK0 ] unsigned char 
 18165 ;;  a               4   39[BANK0 ] unsigned char 
 18166 ;; Auto vars:     Size  Location     Type
 18167 ;;  grs             4   54[BANK0 ] unsigned long 
 18168 ;;  rem             4   48[BANK0 ] unsigned long 
 18169 ;;  new_exp         2   52[BANK0 ] int 
 18170 ;;  aexp            1   59[BANK0 ] unsigned char 
 18171 ;;  bexp            1   58[BANK0 ] unsigned char 
 18172 ;;  sign            1   47[BANK0 ] unsigned char 
 18173 ;; Return value:  Size  Location     Type
 18174 ;;                  4   35[BANK0 ] unsigned char 
 18175 ;; Registers used:
 18176 ;;		wreg, status,2, status,0
 18177 ;; Tracked objects:
 18178 ;;		On entry : 0/0
 18179 ;;		On exit  : 0/0
 18180 ;;		Unchanged: 0/0
 18181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18182 ;;      Params:         0       8       0       0       0       0       0
 18183 ;;      Locals:         0      13       0       0       0       0       0
 18184 ;;      Temps:          0       4       0       0       0       0       0
 18185 ;;      Totals:         0      25       0       0       0       0       0
 18186 ;;Total ram usage:       25 bytes
 18187 ;; Hardware stack levels used:    1
 18188 ;; Hardware stack levels required when called:    8
 18189 ;; This function calls:
 18190 ;;		Nothing
 18191 ;; This function is called by:
 18192 ;;		_calcVars2ti
 18193 ;;		_integrator
 18194 ;;		_preAutoCal
 18195 ;;		_autoCal
 18196 ;; This function uses a non-reentrant model
 18197 ;;
 18198                           
 18199                           	psect	text65
 18200  001B44                     __ptext65:
 18201                           	opt stack 0
 18202  001B44                     ___fldiv:
 18203                           	opt stack 17
 18204                           
 18205                           ; BSR set to: 0
 18206                           ;incstack = 0
 18207  001B44  0100               	movlb	0	; () banked
 18208  001B46  5186               	movf	(___fldiv@b+3)& (0+255),w,b
 18209  001B48  0B80               	andlw	128
 18210  001B4A  0100               	movlb	0	; () banked
 18211  001B4C  6F8F               	movwf	___fldiv@sign& (0+255),b
 18212  001B4E  0100               	movlb	0	; () banked
 18213  001B50  5186               	movf	(___fldiv@b+3)& (0+255),w,b
 18214  001B52  2586               	addwf	(___fldiv@b+3)& (0+255),w,b
 18215  001B54  0100               	movlb	0	; () banked
 18216  001B56  6F9A               	movwf	___fldiv@bexp& (0+255),b
 18217                           
 18218                           ; BSR set to: 0
 18219  001B58  0100               	movlb	0	; () banked
 18220  001B5A  AF85               	btfss	(___fldiv@b+2)& (0+255),7,b
 18221  001B5C  D002               	goto	l5168
 18222                           
 18223                           ; BSR set to: 0
 18224  001B5E  0100               	movlb	0	; () banked
 18225  001B60  819A               	bsf	___fldiv@bexp& (0+255),0,b
 18226  001B62                     l5168:
 18227                           
 18228                           ; BSR set to: 0
 18229  001B62  0100               	movlb	0	; () banked
 18230  001B64  519A               	movf	___fldiv@bexp& (0+255),w,b
 18231  001B66  0100               	movlb	0	; () banked
 18232  001B68  B4D8               	btfsc	status,2,c
 18233  001B6A  D012               	goto	l5178
 18234                           
 18235                           ; BSR set to: 0
 18236  001B6C  0100               	movlb	0	; () banked
 18237  001B6E  299A               	incf	___fldiv@bexp& (0+255),w,b
 18238  001B70  A4D8               	btfss	status,2,c
 18239  001B72  D009               	goto	l5174
 18240                           
 18241                           ; BSR set to: 0
 18242  001B74  0E00               	movlw	0
 18243  001B76  0100               	movlb	0	; () banked
 18244  001B78  6F83               	movwf	___fldiv@b& (0+255),b
 18245  001B7A  0E00               	movlw	0
 18246  001B7C  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18247  001B7E  0E00               	movlw	0
 18248  001B80  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18249  001B82  0E00               	movlw	0
 18250  001B84  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18251  001B86                     l5174:
 18252                           
 18253                           ; BSR set to: 0
 18254  001B86  0100               	movlb	0	; () banked
 18255  001B88  8F85               	bsf	(___fldiv@b+2)& (0+255),7,b
 18256                           
 18257                           ; BSR set to: 0
 18258  001B8A  0E00               	movlw	0
 18259  001B8C  0100               	movlb	0	; () banked
 18260  001B8E  D008               	goto	L11
 18261  001B90                     l5178:
 18262                           
 18263                           ; BSR set to: 0
 18264  001B90  0E00               	movlw	0
 18265  001B92  0100               	movlb	0	; () banked
 18266  001B94  6F83               	movwf	___fldiv@b& (0+255),b
 18267  001B96  0E00               	movlw	0
 18268  001B98  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18269  001B9A  0E00               	movlw	0
 18270  001B9C  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18271  001B9E  0E00               	movlw	0
 18272  001BA0                     L11:
 18273  001BA0  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18274                           
 18275                           ; BSR set to: 0
 18276                           
 18277                           ; BSR set to: 0
 18278  001BA2  0100               	movlb	0	; () banked
 18279  001BA4  518A               	movf	(___fldiv@a+3)& (0+255),w,b
 18280  001BA6  0B80               	andlw	128
 18281  001BA8  0100               	movlb	0	; () banked
 18282  001BAA  1B8F               	xorwf	___fldiv@sign& (0+255),f,b
 18283                           
 18284                           ; BSR set to: 0
 18285  001BAC  0100               	movlb	0	; () banked
 18286  001BAE  518A               	movf	(___fldiv@a+3)& (0+255),w,b
 18287  001BB0  258A               	addwf	(___fldiv@a+3)& (0+255),w,b
 18288  001BB2  0100               	movlb	0	; () banked
 18289  001BB4  6F9B               	movwf	___fldiv@aexp& (0+255),b
 18290                           
 18291                           ; BSR set to: 0
 18292  001BB6  0100               	movlb	0	; () banked
 18293  001BB8  AF89               	btfss	(___fldiv@a+2)& (0+255),7,b
 18294  001BBA  D002               	goto	l5188
 18295                           
 18296                           ; BSR set to: 0
 18297  001BBC  0100               	movlb	0	; () banked
 18298  001BBE  819B               	bsf	___fldiv@aexp& (0+255),0,b
 18299  001BC0                     l5188:
 18300                           
 18301                           ; BSR set to: 0
 18302  001BC0  0100               	movlb	0	; () banked
 18303  001BC2  519B               	movf	___fldiv@aexp& (0+255),w,b
 18304  001BC4  0100               	movlb	0	; () banked
 18305  001BC6  B4D8               	btfsc	status,2,c
 18306  001BC8  D012               	goto	l5198
 18307                           
 18308                           ; BSR set to: 0
 18309  001BCA  0100               	movlb	0	; () banked
 18310  001BCC  299B               	incf	___fldiv@aexp& (0+255),w,b
 18311  001BCE  A4D8               	btfss	status,2,c
 18312  001BD0  D009               	goto	l5194
 18313                           
 18314                           ; BSR set to: 0
 18315  001BD2  0E00               	movlw	0
 18316  001BD4  0100               	movlb	0	; () banked
 18317  001BD6  6F87               	movwf	___fldiv@a& (0+255),b
 18318  001BD8  0E00               	movlw	0
 18319  001BDA  6F88               	movwf	(___fldiv@a+1)& (0+255),b
 18320  001BDC  0E00               	movlw	0
 18321  001BDE  6F89               	movwf	(___fldiv@a+2)& (0+255),b
 18322  001BE0  0E00               	movlw	0
 18323  001BE2  6F8A               	movwf	(___fldiv@a+3)& (0+255),b
 18324  001BE4                     l5194:
 18325                           
 18326                           ; BSR set to: 0
 18327  001BE4  0100               	movlb	0	; () banked
 18328  001BE6  8F89               	bsf	(___fldiv@a+2)& (0+255),7,b
 18329                           
 18330                           ; BSR set to: 0
 18331  001BE8  0E00               	movlw	0
 18332  001BEA  0100               	movlb	0	; () banked
 18333  001BEC  D008               	goto	L12
 18334  001BEE                     l5198:
 18335                           
 18336                           ; BSR set to: 0
 18337  001BEE  0E00               	movlw	0
 18338  001BF0  0100               	movlb	0	; () banked
 18339  001BF2  6F87               	movwf	___fldiv@a& (0+255),b
 18340  001BF4  0E00               	movlw	0
 18341  001BF6  6F88               	movwf	(___fldiv@a+1)& (0+255),b
 18342  001BF8  0E00               	movlw	0
 18343  001BFA  6F89               	movwf	(___fldiv@a+2)& (0+255),b
 18344  001BFC  0E00               	movlw	0
 18345  001BFE                     L12:
 18346  001BFE  6F8A               	movwf	(___fldiv@a+3)& (0+255),b
 18347                           
 18348                           ; BSR set to: 0
 18349                           
 18350                           ; BSR set to: 0
 18351  001C00  0100               	movlb	0	; () banked
 18352  001C02  5187               	movf	___fldiv@a& (0+255),w,b
 18353  001C04  0100               	movlb	0	; () banked
 18354  001C06  1188               	iorwf	(___fldiv@a+1)& (0+255),w,b
 18355  001C08  0100               	movlb	0	; () banked
 18356  001C0A  1189               	iorwf	(___fldiv@a+2)& (0+255),w,b
 18357  001C0C  0100               	movlb	0	; () banked
 18358  001C0E  118A               	iorwf	(___fldiv@a+3)& (0+255),w,b
 18359  001C10  A4D8               	btfss	status,2,c
 18360  001C12  D017               	goto	l5210
 18361                           
 18362                           ; BSR set to: 0
 18363  001C14  0E00               	movlw	0
 18364  001C16  0100               	movlb	0	; () banked
 18365  001C18  6F83               	movwf	___fldiv@b& (0+255),b
 18366  001C1A  0E00               	movlw	0
 18367  001C1C  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18368  001C1E  0E00               	movlw	0
 18369  001C20  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18370  001C22  0E00               	movlw	0
 18371  001C24  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18372                           
 18373                           ; BSR set to: 0
 18374  001C26  0100               	movlb	0	; () banked
 18375  001C28  0E80               	movlw	128
 18376  001C2A  1385               	iorwf	(___fldiv@b+2)& (0+255),f,b
 18377  001C2C  0E7F               	movlw	127
 18378  001C2E  1386               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18379                           
 18380                           ; BSR set to: 0
 18381  001C30  C083  F083         	movff	___fldiv@b,?___fldiv
 18382  001C34  C084  F084         	movff	___fldiv@b+1,?___fldiv+1
 18383  001C38  C085  F085         	movff	___fldiv@b+2,?___fldiv+2
 18384  001C3C  C086  F086         	movff	___fldiv@b+3,?___fldiv+3
 18385                           
 18386                           ; BSR set to: 0
 18387  001C40  0012               	return	
 18388  001C42                     l5210:
 18389                           
 18390                           ; BSR set to: 0
 18391  001C42  0100               	movlb	0	; () banked
 18392  001C44  519A               	movf	___fldiv@bexp& (0+255),w,b
 18393  001C46  0100               	movlb	0	; () banked
 18394  001C48  A4D8               	btfss	status,2,c
 18395  001C4A  D012               	goto	l5218
 18396                           
 18397                           ; BSR set to: 0
 18398  001C4C  0E00               	movlw	0
 18399  001C4E  0100               	movlb	0	; () banked
 18400  001C50  6F83               	movwf	___fldiv@b& (0+255),b
 18401  001C52  0E00               	movlw	0
 18402  001C54  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18403  001C56  0E00               	movlw	0
 18404  001C58  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18405  001C5A  0E00               	movlw	0
 18406  001C5C  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18407                           
 18408                           ; BSR set to: 0
 18409  001C5E  C083  F083         	movff	___fldiv@b,?___fldiv
 18410  001C62  C084  F084         	movff	___fldiv@b+1,?___fldiv+1
 18411  001C66  C085  F085         	movff	___fldiv@b+2,?___fldiv+2
 18412  001C6A  C086  F086         	movff	___fldiv@b+3,?___fldiv+3
 18413                           
 18414                           ; BSR set to: 0
 18415  001C6E  0012               	return	
 18416  001C70                     l5218:
 18417                           
 18418                           ; BSR set to: 0
 18419  001C70  0100               	movlb	0	; () banked
 18420  001C72  519B               	movf	___fldiv@aexp& (0+255),w,b
 18421  001C74  0100               	movlb	0	; () banked
 18422  001C76  6F8B               	movwf	??___fldiv& (0+255),b
 18423  001C78  6B8C               	clrf	(??___fldiv+1)& (0+255),b
 18424  001C7A  0100               	movlb	0	; () banked
 18425  001C7C  1F8B               	comf	??___fldiv& (0+255),f,b
 18426  001C7E  1F8C               	comf	(??___fldiv+1)& (0+255),f,b
 18427  001C80  4B8B               	infsnz	??___fldiv& (0+255),f,b
 18428  001C82  2B8C               	incf	(??___fldiv+1)& (0+255),f,b
 18429  001C84  0100               	movlb	0	; () banked
 18430  001C86  519A               	movf	___fldiv@bexp& (0+255),w,b
 18431  001C88  0100               	movlb	0	; () banked
 18432  001C8A  6F8D               	movwf	(??___fldiv+2)& (0+255),b
 18433  001C8C  6B8E               	clrf	(??___fldiv+3)& (0+255),b
 18434  001C8E  0100               	movlb	0	; () banked
 18435  001C90  518B               	movf	??___fldiv& (0+255),w,b
 18436  001C92  0100               	movlb	0	; () banked
 18437  001C94  278D               	addwf	(??___fldiv+2)& (0+255),f,b
 18438  001C96  0100               	movlb	0	; () banked
 18439  001C98  518C               	movf	(??___fldiv+1)& (0+255),w,b
 18440  001C9A  0100               	movlb	0	; () banked
 18441  001C9C  238E               	addwfc	(??___fldiv+3)& (0+255),f,b
 18442  001C9E  0E7F               	movlw	127
 18443  001CA0  0100               	movlb	0	; () banked
 18444  001CA2  258D               	addwf	(??___fldiv+2)& (0+255),w,b
 18445  001CA4  0100               	movlb	0	; () banked
 18446  001CA6  6F94               	movwf	___fldiv@new_exp& (0+255),b
 18447  001CA8  0E00               	movlw	0
 18448  001CAA  0100               	movlb	0	; () banked
 18449  001CAC  218E               	addwfc	(??___fldiv+3)& (0+255),w,b
 18450  001CAE  0100               	movlb	0	; () banked
 18451  001CB0  6F95               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18452                           
 18453                           ; BSR set to: 0
 18454  001CB2  C083  F090         	movff	___fldiv@b,___fldiv@rem
 18455  001CB6  C084  F091         	movff	___fldiv@b+1,___fldiv@rem+1
 18456  001CBA  C085  F092         	movff	___fldiv@b+2,___fldiv@rem+2
 18457  001CBE  C086  F093         	movff	___fldiv@b+3,___fldiv@rem+3
 18458                           
 18459                           ; BSR set to: 0
 18460  001CC2  0E00               	movlw	0
 18461  001CC4  0100               	movlb	0	; () banked
 18462  001CC6  6F83               	movwf	___fldiv@b& (0+255),b
 18463  001CC8  0E00               	movlw	0
 18464  001CCA  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18465  001CCC  0E00               	movlw	0
 18466  001CCE  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18467  001CD0  0E00               	movlw	0
 18468  001CD2  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18469                           
 18470                           ; BSR set to: 0
 18471  001CD4  0E00               	movlw	0
 18472  001CD6  0100               	movlb	0	; () banked
 18473  001CD8  6F96               	movwf	___fldiv@grs& (0+255),b
 18474  001CDA  0E00               	movlw	0
 18475  001CDC  6F97               	movwf	(___fldiv@grs+1)& (0+255),b
 18476  001CDE  0E00               	movlw	0
 18477  001CE0  6F98               	movwf	(___fldiv@grs+2)& (0+255),b
 18478  001CE2  0E00               	movlw	0
 18479  001CE4  6F99               	movwf	(___fldiv@grs+3)& (0+255),b
 18480                           
 18481                           ; BSR set to: 0
 18482  001CE6  0E00               	movlw	0
 18483  001CE8  0100               	movlb	0	; () banked
 18484  001CEA  6F9B               	movwf	___fldiv@aexp& (0+255),b
 18485  001CEC  D042               	goto	l1482
 18486  001CEE                     l5228:
 18487                           
 18488                           ; BSR set to: 0
 18489  001CEE  0100               	movlb	0	; () banked
 18490  001CF0  519B               	movf	___fldiv@aexp& (0+255),w,b
 18491  001CF2  0100               	movlb	0	; () banked
 18492  001CF4  B4D8               	btfsc	status,2,c
 18493  001CF6  D017               	goto	l5236
 18494                           
 18495                           ; BSR set to: 0
 18496  001CF8  0100               	movlb	0	; () banked
 18497  001CFA  90D8               	bcf	status,0,c
 18498  001CFC  3790               	rlcf	___fldiv@rem& (0+255),f,b
 18499  001CFE  3791               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 18500  001D00  3792               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 18501  001D02  3793               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 18502  001D04  0100               	movlb	0	; () banked
 18503  001D06  90D8               	bcf	status,0,c
 18504  001D08  3783               	rlcf	___fldiv@b& (0+255),f,b
 18505  001D0A  3784               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18506  001D0C  3785               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18507  001D0E  3786               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18508                           
 18509                           ; BSR set to: 0
 18510  001D10  0100               	movlb	0	; () banked
 18511  001D12  AF99               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18512  001D14  D002               	goto	l1485
 18513                           
 18514                           ; BSR set to: 0
 18515  001D16  0100               	movlb	0	; () banked
 18516  001D18  8183               	bsf	___fldiv@b& (0+255),0,b
 18517  001D1A                     l1485:
 18518                           
 18519                           ; BSR set to: 0
 18520  001D1A  0100               	movlb	0	; () banked
 18521  001D1C  90D8               	bcf	status,0,c
 18522  001D1E  3796               	rlcf	___fldiv@grs& (0+255),f,b
 18523  001D20  3797               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18524  001D22  3798               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18525  001D24  3799               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18526  001D26                     l5236:
 18527                           
 18528                           ; BSR set to: 0
 18529  001D26  0100               	movlb	0	; () banked
 18530  001D28  5187               	movf	___fldiv@a& (0+255),w,b
 18531  001D2A  0100               	movlb	0	; () banked
 18532  001D2C  5D90               	subwf	___fldiv@rem& (0+255),w,b
 18533  001D2E  0100               	movlb	0	; () banked
 18534  001D30  5188               	movf	(___fldiv@a+1)& (0+255),w,b
 18535  001D32  0100               	movlb	0	; () banked
 18536  001D34  5991               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 18537  001D36  0100               	movlb	0	; () banked
 18538  001D38  5189               	movf	(___fldiv@a+2)& (0+255),w,b
 18539  001D3A  0100               	movlb	0	; () banked
 18540  001D3C  5992               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 18541  001D3E  0100               	movlb	0	; () banked
 18542  001D40  518A               	movf	(___fldiv@a+3)& (0+255),w,b
 18543  001D42  0100               	movlb	0	; () banked
 18544  001D44  5993               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 18545  001D46  A0D8               	btfss	status,0,c
 18546  001D48  D012               	goto	l5242
 18547                           
 18548                           ; BSR set to: 0
 18549  001D4A  0100               	movlb	0	; () banked
 18550  001D4C  8D99               	bsf	(___fldiv@grs+3)& (0+255),6,b
 18551                           
 18552                           ; BSR set to: 0
 18553  001D4E  0100               	movlb	0	; () banked
 18554  001D50  5187               	movf	___fldiv@a& (0+255),w,b
 18555  001D52  0100               	movlb	0	; () banked
 18556  001D54  5F90               	subwf	___fldiv@rem& (0+255),f,b
 18557  001D56  0100               	movlb	0	; () banked
 18558  001D58  5188               	movf	(___fldiv@a+1)& (0+255),w,b
 18559  001D5A  0100               	movlb	0	; () banked
 18560  001D5C  5B91               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 18561  001D5E  0100               	movlb	0	; () banked
 18562  001D60  5189               	movf	(___fldiv@a+2)& (0+255),w,b
 18563  001D62  0100               	movlb	0	; () banked
 18564  001D64  5B92               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 18565  001D66  0100               	movlb	0	; () banked
 18566  001D68  518A               	movf	(___fldiv@a+3)& (0+255),w,b
 18567  001D6A  0100               	movlb	0	; () banked
 18568  001D6C  5B93               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 18569  001D6E                     l5242:
 18570                           
 18571                           ; BSR set to: 0
 18572  001D6E  0100               	movlb	0	; () banked
 18573  001D70  2B9B               	incf	___fldiv@aexp& (0+255),f,b
 18574  001D72                     l1482:
 18575                           
 18576                           ; BSR set to: 0
 18577  001D72  0E19               	movlw	25
 18578  001D74  0100               	movlb	0	; () banked
 18579  001D76  659B               	cpfsgt	___fldiv@aexp& (0+255),b
 18580  001D78  D7BA               	goto	l5228
 18581                           
 18582                           ; BSR set to: 0
 18583                           
 18584                           ; BSR set to: 0
 18585  001D7A  0100               	movlb	0	; () banked
 18586  001D7C  5190               	movf	___fldiv@rem& (0+255),w,b
 18587  001D7E  0100               	movlb	0	; () banked
 18588  001D80  1191               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 18589  001D82  0100               	movlb	0	; () banked
 18590  001D84  1192               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 18591  001D86  0100               	movlb	0	; () banked
 18592  001D88  1193               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 18593  001D8A  B4D8               	btfsc	status,2,c
 18594  001D8C  D018               	goto	l5254
 18595                           
 18596                           ; BSR set to: 0
 18597  001D8E  0100               	movlb	0	; () banked
 18598  001D90  8196               	bsf	___fldiv@grs& (0+255),0,b
 18599                           
 18600                           ; BSR set to: 0
 18601  001D92  D015               	goto	l5254
 18602  001D94                     l5248:
 18603                           
 18604                           ; BSR set to: 0
 18605  001D94  0100               	movlb	0	; () banked
 18606  001D96  90D8               	bcf	status,0,c
 18607  001D98  3783               	rlcf	___fldiv@b& (0+255),f,b
 18608  001D9A  3784               	rlcf	(___fldiv@b+1)& (0+255),f,b
 18609  001D9C  3785               	rlcf	(___fldiv@b+2)& (0+255),f,b
 18610  001D9E  3786               	rlcf	(___fldiv@b+3)& (0+255),f,b
 18611                           
 18612                           ; BSR set to: 0
 18613  001DA0  0100               	movlb	0	; () banked
 18614  001DA2  AF99               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18615  001DA4  D002               	goto	l1491
 18616                           
 18617                           ; BSR set to: 0
 18618  001DA6  0100               	movlb	0	; () banked
 18619  001DA8  8183               	bsf	___fldiv@b& (0+255),0,b
 18620  001DAA                     l1491:
 18621                           
 18622                           ; BSR set to: 0
 18623  001DAA  0100               	movlb	0	; () banked
 18624  001DAC  90D8               	bcf	status,0,c
 18625  001DAE  3796               	rlcf	___fldiv@grs& (0+255),f,b
 18626  001DB0  3797               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 18627  001DB2  3798               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 18628  001DB4  3799               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 18629  001DB6  0100               	movlb	0	; () banked
 18630  001DB8  0794               	decf	___fldiv@new_exp& (0+255),f,b
 18631  001DBA  A0D8               	btfss	status,0,c
 18632  001DBC  0795               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 18633  001DBE                     l5254:
 18634                           
 18635                           ; BSR set to: 0
 18636  001DBE  0100               	movlb	0	; () banked
 18637  001DC0  AF85               	btfss	(___fldiv@b+2)& (0+255),7,b
 18638  001DC2  D7E8               	goto	l5248
 18639                           
 18640                           ; BSR set to: 0
 18641                           
 18642                           ; BSR set to: 0
 18643  001DC4  0E00               	movlw	0
 18644  001DC6  0100               	movlb	0	; () banked
 18645  001DC8  6F9B               	movwf	___fldiv@aexp& (0+255),b
 18646                           
 18647                           ; BSR set to: 0
 18648  001DCA  0100               	movlb	0	; () banked
 18649  001DCC  AF99               	btfss	(___fldiv@grs+3)& (0+255),7,b
 18650  001DCE  D024               	goto	l1493
 18651                           
 18652                           ; BSR set to: 0
 18653  001DD0  0EFF               	movlw	255
 18654  001DD2  0100               	movlb	0	; () banked
 18655  001DD4  1596               	andwf	___fldiv@grs& (0+255),w,b
 18656  001DD6  0100               	movlb	0	; () banked
 18657  001DD8  6F8B               	movwf	??___fldiv& (0+255),b
 18658  001DDA  0EFF               	movlw	255
 18659  001DDC  0100               	movlb	0	; () banked
 18660  001DDE  1597               	andwf	(___fldiv@grs+1)& (0+255),w,b
 18661  001DE0  0100               	movlb	0	; () banked
 18662  001DE2  6F8C               	movwf	(??___fldiv+1)& (0+255),b
 18663  001DE4  0EFF               	movlw	255
 18664  001DE6  0100               	movlb	0	; () banked
 18665  001DE8  1598               	andwf	(___fldiv@grs+2)& (0+255),w,b
 18666  001DEA  0100               	movlb	0	; () banked
 18667  001DEC  6F8D               	movwf	(??___fldiv+2)& (0+255),b
 18668  001DEE  0E7F               	movlw	127
 18669  001DF0  0100               	movlb	0	; () banked
 18670  001DF2  1599               	andwf	(___fldiv@grs+3)& (0+255),w,b
 18671  001DF4  0100               	movlb	0	; () banked
 18672  001DF6  6F8E               	movwf	(??___fldiv+3)& (0+255),b
 18673  001DF8  0100               	movlb	0	; () banked
 18674  001DFA  518B               	movf	??___fldiv& (0+255),w,b
 18675  001DFC  0100               	movlb	0	; () banked
 18676  001DFE  118C               	iorwf	(??___fldiv+1)& (0+255),w,b
 18677  001E00  0100               	movlb	0	; () banked
 18678  001E02  118D               	iorwf	(??___fldiv+2)& (0+255),w,b
 18679  001E04  0100               	movlb	0	; () banked
 18680  001E06  118E               	iorwf	(??___fldiv+3)& (0+255),w,b
 18681  001E08  A4D8               	btfss	status,2,c
 18682  001E0A  D003               	goto	l5264
 18683                           
 18684                           ; BSR set to: 0
 18685                           
 18686                           ; BSR set to: 0
 18687  001E0C  0100               	movlb	0	; () banked
 18688  001E0E  A183               	btfss	___fldiv@b& (0+255),0,b
 18689  001E10  D003               	goto	l1493
 18690  001E12                     l5264:
 18691                           
 18692                           ; BSR set to: 0
 18693  001E12  0E01               	movlw	1
 18694  001E14  0100               	movlb	0	; () banked
 18695  001E16  6F9B               	movwf	___fldiv@aexp& (0+255),b
 18696  001E18                     l1493:
 18697                           
 18698                           ; BSR set to: 0
 18699  001E18  0100               	movlb	0	; () banked
 18700  001E1A  519B               	movf	___fldiv@aexp& (0+255),w,b
 18701  001E1C  0100               	movlb	0	; () banked
 18702  001E1E  B4D8               	btfsc	status,2,c
 18703  001E20  D023               	goto	l5274
 18704                           
 18705                           ; BSR set to: 0
 18706  001E22  0E01               	movlw	1
 18707  001E24  0100               	movlb	0	; () banked
 18708  001E26  2783               	addwf	___fldiv@b& (0+255),f,b
 18709  001E28  0E00               	movlw	0
 18710  001E2A  2384               	addwfc	(___fldiv@b+1)& (0+255),f,b
 18711  001E2C  2385               	addwfc	(___fldiv@b+2)& (0+255),f,b
 18712  001E2E  2386               	addwfc	(___fldiv@b+3)& (0+255),f,b
 18713                           
 18714                           ; BSR set to: 0
 18715  001E30  0100               	movlb	0	; () banked
 18716  001E32  A186               	btfss	(___fldiv@b+3)& (0+255),0,b
 18717  001E34  D019               	goto	l5274
 18718                           
 18719                           ; BSR set to: 0
 18720  001E36  C083  F08B         	movff	___fldiv@b,??___fldiv
 18721  001E3A  C084  F08C         	movff	___fldiv@b+1,??___fldiv+1
 18722  001E3E  C085  F08D         	movff	___fldiv@b+2,??___fldiv+2
 18723  001E42  C086  F08E         	movff	___fldiv@b+3,??___fldiv+3
 18724  001E46  0100               	movlb	0	; () banked
 18725  001E48  358E               	rlcf	(??___fldiv+3)& (0+255),w,b
 18726  001E4A  338E               	rrcf	(??___fldiv+3)& (0+255),f,b
 18727  001E4C  338D               	rrcf	(??___fldiv+2)& (0+255),f,b
 18728  001E4E  338C               	rrcf	(??___fldiv+1)& (0+255),f,b
 18729  001E50  338B               	rrcf	??___fldiv& (0+255),f,b
 18730  001E52  C08B  F083         	movff	??___fldiv,___fldiv@b
 18731  001E56  C08C  F084         	movff	??___fldiv+1,___fldiv@b+1
 18732  001E5A  C08D  F085         	movff	??___fldiv+2,___fldiv@b+2
 18733  001E5E  C08E  F086         	movff	??___fldiv+3,___fldiv@b+3
 18734                           
 18735                           ; BSR set to: 0
 18736  001E62  0100               	movlb	0	; () banked
 18737  001E64  4B94               	infsnz	___fldiv@new_exp& (0+255),f,b
 18738  001E66  2B95               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 18739  001E68                     l5274:
 18740                           
 18741                           ; BSR set to: 0
 18742  001E68  0100               	movlb	0	; () banked
 18743  001E6A  BF95               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18744  001E6C  D014               	goto	l5278
 18745  001E6E  0100               	movlb	0	; () banked
 18746  001E70  5195               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18747  001E72  E104               	bnz	u5670
 18748  001E74  0100               	movlb	0	; () banked
 18749  001E76  2994               	incf	___fldiv@new_exp& (0+255),w,b
 18750  001E78  A0D8               	btfss	status,0,c
 18751  001E7A  D00D               	goto	l5278
 18752  001E7C                     u5670:
 18753                           
 18754                           ; BSR set to: 0
 18755  001E7C  0E00               	movlw	0
 18756  001E7E  0100               	movlb	0	; () banked
 18757  001E80  6F95               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18758  001E82  6994               	setf	___fldiv@new_exp& (0+255),b
 18759  001E84  0E00               	movlw	0
 18760  001E86  0100               	movlb	0	; () banked
 18761  001E88  6F83               	movwf	___fldiv@b& (0+255),b
 18762  001E8A  0E00               	movlw	0
 18763  001E8C  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18764  001E8E  0E00               	movlw	0
 18765  001E90  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18766  001E92  0E00               	movlw	0
 18767  001E94  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18768  001E96                     l5278:
 18769                           
 18770                           ; BSR set to: 0
 18771  001E96  0100               	movlb	0	; () banked
 18772  001E98  BF95               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 18773  001E9A  D007               	goto	l5280
 18774  001E9C  0100               	movlb	0	; () banked
 18775  001E9E  5195               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 18776  001EA0  E115               	bnz	l5282
 18777  001EA2  0100               	movlb	0	; () banked
 18778  001EA4  0594               	decf	___fldiv@new_exp& (0+255),w,b
 18779  001EA6  B0D8               	btfsc	status,0,c
 18780  001EA8  D011               	goto	l5282
 18781  001EAA                     l5280:
 18782                           
 18783                           ; BSR set to: 0
 18784  001EAA  0E00               	movlw	0
 18785  001EAC  0100               	movlb	0	; () banked
 18786  001EAE  6F95               	movwf	(___fldiv@new_exp+1)& (0+255),b
 18787  001EB0  0E00               	movlw	0
 18788  001EB2  6F94               	movwf	___fldiv@new_exp& (0+255),b
 18789  001EB4  0E00               	movlw	0
 18790  001EB6  0100               	movlb	0	; () banked
 18791  001EB8  6F83               	movwf	___fldiv@b& (0+255),b
 18792  001EBA  0E00               	movlw	0
 18793  001EBC  6F84               	movwf	(___fldiv@b+1)& (0+255),b
 18794  001EBE  0E00               	movlw	0
 18795  001EC0  6F85               	movwf	(___fldiv@b+2)& (0+255),b
 18796  001EC2  0E00               	movlw	0
 18797  001EC4  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18798  001EC6  0E00               	movlw	0
 18799  001EC8  0100               	movlb	0	; () banked
 18800  001ECA  6F8F               	movwf	___fldiv@sign& (0+255),b
 18801  001ECC                     l5282:
 18802                           
 18803                           ; BSR set to: 0
 18804  001ECC  C094  F09A         	movff	___fldiv@new_exp,___fldiv@bexp
 18805                           
 18806                           ; BSR set to: 0
 18807  001ED0  0100               	movlb	0	; () banked
 18808  001ED2  A19A               	btfss	___fldiv@bexp& (0+255),0,b
 18809  001ED4  D003               	goto	l5288
 18810                           
 18811                           ; BSR set to: 0
 18812  001ED6  0100               	movlb	0	; () banked
 18813  001ED8  8F85               	bsf	(___fldiv@b+2)& (0+255),7,b
 18814  001EDA  D002               	goto	l5290
 18815  001EDC                     l5288:
 18816                           
 18817                           ; BSR set to: 0
 18818  001EDC  0100               	movlb	0	; () banked
 18819  001EDE  9F85               	bcf	(___fldiv@b+2)& (0+255),7,b
 18820  001EE0                     l5290:
 18821                           
 18822                           ; BSR set to: 0
 18823  001EE0  0100               	movlb	0	; () banked
 18824  001EE2  90D8               	bcf	status,0,c
 18825  001EE4  319A               	rrcf	___fldiv@bexp& (0+255),w,b
 18826  001EE6  0100               	movlb	0	; () banked
 18827  001EE8  6F86               	movwf	(___fldiv@b+3)& (0+255),b
 18828                           
 18829                           ; BSR set to: 0
 18830  001EEA  0100               	movlb	0	; () banked
 18831  001EEC  518F               	movf	___fldiv@sign& (0+255),w,b
 18832  001EEE  0100               	movlb	0	; () banked
 18833  001EF0  1386               	iorwf	(___fldiv@b+3)& (0+255),f,b
 18834                           
 18835                           ; BSR set to: 0
 18836  001EF2  C083  F083         	movff	___fldiv@b,?___fldiv
 18837  001EF6  C084  F084         	movff	___fldiv@b+1,?___fldiv+1
 18838  001EFA  C085  F085         	movff	___fldiv@b+2,?___fldiv+2
 18839  001EFE  C086  F086         	movff	___fldiv@b+3,?___fldiv+3
 18840  001F02  0012               	return	
 18841  001F04                     __end_of___fldiv:
 18842                           	opt stack 0
 18843                           tblptru	equ	0xFF8
 18844                           tblptrh	equ	0xFF7
 18845                           tblptrl	equ	0xFF6
 18846                           tablat	equ	0xFF5
 18847                           prodh	equ	0xFF4
 18848                           prodl	equ	0xFF3
 18849                           intcon	equ	0xFF2
 18850                           postinc0	equ	0xFEE
 18851                           wreg	equ	0xFE8
 18852                           postdec1	equ	0xFE5
 18853                           fsr1l	equ	0xFE1
 18854                           indf2	equ	0xFDF
 18855                           postinc2	equ	0xFDE
 18856                           postdec2	equ	0xFDD
 18857                           plusw2	equ	0xFDB
 18858                           fsr2h	equ	0xFDA
 18859                           fsr2l	equ	0xFD9
 18860                           status	equ	0xFD8
 18861                           
 18862 ;; *************** function _longPressDOWN *****************
 18863 ;; Defined at:
 18864 ;;		line 260 in file "source/DisplayProtocol.h"
 18865 ;; Parameters:    Size  Location     Type
 18866 ;;		None
 18867 ;; Auto vars:     Size  Location     Type
 18868 ;;		None
 18869 ;; Return value:  Size  Location     Type
 18870 ;;                  1    wreg      void 
 18871 ;; Registers used:
 18872 ;;		wreg, status,2, status,0
 18873 ;; Tracked objects:
 18874 ;;		On entry : 0/0
 18875 ;;		On exit  : 0/0
 18876 ;;		Unchanged: 0/0
 18877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18878 ;;      Params:         0       0       0       0       0       0       0
 18879 ;;      Locals:         0       0       0       0       0       0       0
 18880 ;;      Temps:          0       0       0       0       0       0       0
 18881 ;;      Totals:         0       0       0       0       0       0       0
 18882 ;;Total ram usage:        0 bytes
 18883 ;; Hardware stack levels used:    1
 18884 ;; Hardware stack levels required when called:    8
 18885 ;; This function calls:
 18886 ;;		Nothing
 18887 ;; This function is called by:
 18888 ;;		_buttonChecking
 18889 ;; This function uses a non-reentrant model
 18890 ;;
 18891                           
 18892                           	psect	text66
 18893  005C78                     __ptext66:
 18894                           	opt stack 0
 18895  005C78                     _longPressDOWN:
 18896                           	opt stack 21
 18897                           
 18898                           ;DisplayProtocol.h: 261: if (!DOWNisLP) {
 18899                           
 18900                           ; BSR set to: 0
 18901                           ;incstack = 0
 18902  005C78  0101               	movlb	1	; () banked
 18903  005C7A  5150               	movf	_DOWNisLP& (0+255),w,b
 18904  005C7C  0101               	movlb	1	; () banked
 18905  005C7E  A4D8               	btfss	status,2,c
 18906  005C80  0012               	return	
 18907                           
 18908                           ; BSR set to: 1
 18909                           ;DisplayProtocol.h: 262: DOWNisLP = 1;
 18910  005C82  0E01               	movlw	1
 18911  005C84  0101               	movlb	1	; () banked
 18912  005C86  6F50               	movwf	_DOWNisLP& (0+255),b
 18913                           
 18914                           ; BSR set to: 1
 18915                           ;DisplayProtocol.h: 263: if(actualScreen == 5) {
 18916  005C88  0E05               	movlw	5
 18917  005C8A  0100               	movlb	0	; () banked
 18918  005C8C  19D3               	xorwf	_actualScreen& (0+255),w,b
 18919  005C8E  A4D8               	btfss	status,2,c
 18920  005C90  0012               	return	
 18921                           
 18922                           ; BSR set to: 0
 18923                           ;DisplayProtocol.h: 264: if(menuSection == 3)
 18924  005C92  0E03               	movlw	3
 18925  005C94  0100               	movlb	0	; () banked
 18926  005C96  19D6               	xorwf	_menuSection& (0+255),w,b
 18927  005C98  A4D8               	btfss	status,2,c
 18928  005C9A  0012               	return	
 18929                           
 18930                           ; BSR set to: 0
 18931                           ;DisplayProtocol.h: 265: chanVals -= 10;
 18932  005C9C  0101               	movlb	1	; () banked
 18933  005C9E  0EF6               	movlw	246
 18934  005CA0  274A               	addwf	_chanVals& (0+255),f,b
 18935  005CA2  0EFF               	movlw	255
 18936  005CA4  234B               	addwfc	(_chanVals+1)& (0+255),f,b
 18937                           
 18938                           ; BSR set to: 1
 18939                           
 18940                           ; BSR set to: 1
 18941  005CA6  0012               	return	
 18942  005CA8                     __end_of_longPressDOWN:
 18943                           	opt stack 0
 18944                           tblptru	equ	0xFF8
 18945                           tblptrh	equ	0xFF7
 18946                           tblptrl	equ	0xFF6
 18947                           tablat	equ	0xFF5
 18948                           prodh	equ	0xFF4
 18949                           prodl	equ	0xFF3
 18950                           intcon	equ	0xFF2
 18951                           postinc0	equ	0xFEE
 18952                           wreg	equ	0xFE8
 18953                           postdec1	equ	0xFE5
 18954                           fsr1l	equ	0xFE1
 18955                           indf2	equ	0xFDF
 18956                           postinc2	equ	0xFDE
 18957                           postdec2	equ	0xFDD
 18958                           plusw2	equ	0xFDB
 18959                           fsr2h	equ	0xFDA
 18960                           fsr2l	equ	0xFD9
 18961                           status	equ	0xFD8
 18962                           
 18963 ;; *************** function _delay_ms *****************
 18964 ;; Defined at:
 18965 ;;		line 13 in file "source/../../delay.h"
 18966 ;; Parameters:    Size  Location     Type
 18967 ;;  del             2   21[BANK0 ] int 
 18968 ;; Auto vars:     Size  Location     Type
 18969 ;;  i               2   24[BANK0 ] int 
 18970 ;; Return value:  Size  Location     Type
 18971 ;;                  1    wreg      void 
 18972 ;; Registers used:
 18973 ;;		wreg, status,2, status,0
 18974 ;; Tracked objects:
 18975 ;;		On entry : 0/0
 18976 ;;		On exit  : 0/0
 18977 ;;		Unchanged: 0/0
 18978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18979 ;;      Params:         0       2       0       0       0       0       0
 18980 ;;      Locals:         0       2       0       0       0       0       0
 18981 ;;      Temps:          0       1       0       0       0       0       0
 18982 ;;      Totals:         0       5       0       0       0       0       0
 18983 ;;Total ram usage:        5 bytes
 18984 ;; Hardware stack levels used:    1
 18985 ;; Hardware stack levels required when called:    8
 18986 ;; This function calls:
 18987 ;;		Nothing
 18988 ;; This function is called by:
 18989 ;;		_buttonChecking
 18990 ;; This function uses a non-reentrant model
 18991 ;;
 18992                           
 18993                           	psect	text67
 18994  005AB6                     __ptext67:
 18995                           	opt stack 0
 18996  005AB6                     _delay_ms:
 18997                           	opt stack 21
 18998                           
 18999                           ;delay.h: 14: for(int i = 1;i <= del;i++)
 19000                           
 19001                           ;incstack = 0
 19002  005AB6  0E00               	movlw	0
 19003  005AB8  0100               	movlb	0	; () banked
 19004  005ABA  6F79               	movwf	(delay_ms@i+1)& (0+255),b
 19005  005ABC  0E01               	movlw	1
 19006  005ABE  6F78               	movwf	delay_ms@i& (0+255),b
 19007  005AC0  D00C               	goto	l90
 19008  005AC2                     l6808:
 19009                           
 19010                           ; BSR set to: 0
 19011                           ;delay.h: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
 19012  005AC2  0E06               	movlw	6
 19013  005AC4  0100               	movlb	0	; () banked
 19014  005AC6  6F77               	movwf	??_delay_ms& (0+255),b
 19015  005AC8  0E30               	movlw	48
 19016  005ACA                     u13697:
 19017  005ACA  2EE8               	decfsz	wreg,f,c
 19018  005ACC  D7FE               	goto	u13697
 19019  005ACE  2F77               	decfsz	??_delay_ms& (0+255),f,b
 19020  005AD0  D7FC               	goto	u13697
 19021  005AD2  D000               	nop2	
 19022  005AD4  0100               	movlb	0	; () banked
 19023  005AD6  4B78               	infsnz	delay_ms@i& (0+255),f,b
 19024  005AD8  2B79               	incf	(delay_ms@i+1)& (0+255),f,b
 19025  005ADA                     l90:
 19026                           
 19027                           ; BSR set to: 0
 19028  005ADA  0100               	movlb	0	; () banked
 19029  005ADC  5178               	movf	delay_ms@i& (0+255),w,b
 19030  005ADE  0100               	movlb	0	; () banked
 19031  005AE0  5D75               	subwf	delay_ms@del& (0+255),w,b
 19032  005AE2  0100               	movlb	0	; () banked
 19033  005AE4  5176               	movf	(delay_ms@del+1)& (0+255),w,b
 19034  005AE6  0A80               	xorlw	128
 19035  005AE8  0100               	movlb	0	; () banked
 19036  005AEA  6F77               	movwf	??_delay_ms& (0+255),b
 19037  005AEC  0100               	movlb	0	; () banked
 19038  005AEE  5179               	movf	(delay_ms@i+1)& (0+255),w,b
 19039  005AF0  0A80               	xorlw	128
 19040  005AF2  0100               	movlb	0	; () banked
 19041  005AF4  5977               	subwfb	??_delay_ms& (0+255),w,b
 19042  005AF6  A0D8               	btfss	status,0,c
 19043  005AF8  0012               	return	
 19044  005AFA  D7E3               	goto	l6808
 19045  005AFC                     __end_of_delay_ms:
 19046                           	opt stack 0
 19047                           tblptru	equ	0xFF8
 19048                           tblptrh	equ	0xFF7
 19049                           tblptrl	equ	0xFF6
 19050                           tablat	equ	0xFF5
 19051                           prodh	equ	0xFF4
 19052                           prodl	equ	0xFF3
 19053                           intcon	equ	0xFF2
 19054                           postinc0	equ	0xFEE
 19055                           wreg	equ	0xFE8
 19056                           postdec1	equ	0xFE5
 19057                           fsr1l	equ	0xFE1
 19058                           indf2	equ	0xFDF
 19059                           postinc2	equ	0xFDE
 19060                           postdec2	equ	0xFDD
 19061                           plusw2	equ	0xFDB
 19062                           fsr2h	equ	0xFDA
 19063                           fsr2l	equ	0xFD9
 19064                           status	equ	0xFD8
 19065                           
 19066 ;; *************** function _UARTConfig *****************
 19067 ;; Defined at:
 19068 ;;		line 69 in file "source/UARTConfig.h"
 19069 ;; Parameters:    Size  Location     Type
 19070 ;;		None
 19071 ;; Auto vars:     Size  Location     Type
 19072 ;;		None
 19073 ;; Return value:  Size  Location     Type
 19074 ;;                  1    wreg      void 
 19075 ;; Registers used:
 19076 ;;		wreg, status,2
 19077 ;; Tracked objects:
 19078 ;;		On entry : 0/0
 19079 ;;		On exit  : 0/0
 19080 ;;		Unchanged: 0/0
 19081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19082 ;;      Params:         0       0       0       0       0       0       0
 19083 ;;      Locals:         0       0       0       0       0       0       0
 19084 ;;      Temps:          0       0       0       0       0       0       0
 19085 ;;      Totals:         0       0       0       0       0       0       0
 19086 ;;Total ram usage:        0 bytes
 19087 ;; Hardware stack levels used:    1
 19088 ;; Hardware stack levels required when called:    8
 19089 ;; This function calls:
 19090 ;;		Nothing
 19091 ;; This function is called by:
 19092 ;;		_main
 19093 ;; This function uses a non-reentrant model
 19094 ;;
 19095                           
 19096                           	psect	text68
 19097  005B76                     __ptext68:
 19098                           	opt stack 0
 19099  005B76                     _UARTConfig:
 19100                           	opt stack 22
 19101                           
 19102                           ;UARTConfig.h: 70: RCSTA1bits.SPEN = 0;
 19103                           
 19104                           ; BSR set to: 0
 19105                           ;incstack = 0
 19106  005B76  9EAB               	bcf	4011,7,c	;volatile
 19107                           
 19108                           ;UARTConfig.h: 71: SPBRGH1 = 0;
 19109  005B78  0E00               	movlw	0
 19110  005B7A  6EB0               	movwf	4016,c	;volatile
 19111                           
 19112                           ;UARTConfig.h: 72: SPBRG1 = 34;
 19113  005B7C  0E22               	movlw	34
 19114  005B7E  6EAF               	movwf	4015,c	;volatile
 19115                           
 19116                           ;UARTConfig.h: 73: ANSELCbits.ANSC6 = 0;
 19117  005B80  010F               	movlb	15	; () banked
 19118  005B82  9D3A               	bcf	58,6,b	;volatile
 19119                           
 19120                           ; BSR set to: 15
 19121                           ;UARTConfig.h: 74: ANSELCbits.ANSC7 = 0;
 19122  005B84  010F               	movlb	15	; () banked
 19123  005B86  9F3A               	bcf	58,7,b	;volatile
 19124                           
 19125                           ; BSR set to: 15
 19126                           ;UARTConfig.h: 75: TRISCbits.TRISC6 = 1;
 19127  005B88  8C94               	bsf	3988,6,c	;volatile
 19128                           
 19129                           ; BSR set to: 15
 19130                           ;UARTConfig.h: 76: TRISCbits.TRISC7 = 1;
 19131  005B8A  8E94               	bsf	3988,7,c	;volatile
 19132                           
 19133                           ; BSR set to: 15
 19134                           ;UARTConfig.h: 77: TXSTA1bits.TX9 = 0;
 19135  005B8C  9CAC               	bcf	4012,6,c	;volatile
 19136                           
 19137                           ; BSR set to: 15
 19138                           ;UARTConfig.h: 78: TXSTA1bits.SYNC = 0;
 19139  005B8E  98AC               	bcf	4012,4,c	;volatile
 19140                           
 19141                           ; BSR set to: 15
 19142                           ;UARTConfig.h: 79: TXSTA1bits.SENDB = 0;
 19143  005B90  96AC               	bcf	4012,3,c	;volatile
 19144                           
 19145                           ; BSR set to: 15
 19146                           ;UARTConfig.h: 80: TXSTA1bits.BRGH = 1;
 19147  005B92  84AC               	bsf	4012,2,c	;volatile
 19148                           
 19149                           ; BSR set to: 15
 19150                           ;UARTConfig.h: 81: RCSTA1bits.RX9 = 0;
 19151  005B94  9CAB               	bcf	4011,6,c	;volatile
 19152                           
 19153                           ; BSR set to: 15
 19154                           ;UARTConfig.h: 82: BAUDCON1bits.DTRXP = 0;
 19155  005B96  9AB8               	bcf	4024,5,c	;volatile
 19156                           
 19157                           ; BSR set to: 15
 19158                           ;UARTConfig.h: 83: BAUDCON1bits.CKTXP = 0;
 19159  005B98  98B8               	bcf	4024,4,c	;volatile
 19160                           
 19161                           ; BSR set to: 15
 19162                           ;UARTConfig.h: 84: BAUDCON1bits.BRG16 = 1;
 19163  005B9A  86B8               	bsf	4024,3,c	;volatile
 19164                           
 19165                           ; BSR set to: 15
 19166                           ;UARTConfig.h: 85: BAUDCON1bits.WUE = 0;
 19167  005B9C  92B8               	bcf	4024,1,c	;volatile
 19168                           
 19169                           ; BSR set to: 15
 19170                           ;UARTConfig.h: 86: BAUDCON1bits.ABDEN = 0;
 19171  005B9E  90B8               	bcf	4024,0,c	;volatile
 19172                           
 19173                           ; BSR set to: 15
 19174                           ;UARTConfig.h: 87: RCSTA1bits.CREN = 1;
 19175  005BA0  88AB               	bsf	4011,4,c	;volatile
 19176                           
 19177                           ; BSR set to: 15
 19178                           ;UARTConfig.h: 88: TXSTA1bits.TXEN = 1;
 19179  005BA2  8AAC               	bsf	4012,5,c	;volatile
 19180                           
 19181                           ; BSR set to: 15
 19182                           ;UARTConfig.h: 89: IPR1bits.RC1IP = 0;
 19183  005BA4  9A9F               	bcf	3999,5,c	;volatile
 19184                           
 19185                           ; BSR set to: 15
 19186                           ;UARTConfig.h: 90: PIR1bits.RC1IF = 0;
 19187  005BA6  9A9E               	bcf	3998,5,c	;volatile
 19188                           
 19189                           ; BSR set to: 15
 19190                           ;UARTConfig.h: 91: PIE1bits.RC1IE = 1;
 19191  005BA8  8A9D               	bsf	3997,5,c	;volatile
 19192                           
 19193                           ; BSR set to: 15
 19194                           ;UARTConfig.h: 92: RCSTA1bits.SPEN = 1;
 19195  005BAA  8EAB               	bsf	4011,7,c	;volatile
 19196                           
 19197                           ; BSR set to: 15
 19198  005BAC  0012               	return		;funcret
 19199  005BAE                     __end_of_UARTConfig:
 19200                           	opt stack 0
 19201                           tblptru	equ	0xFF8
 19202                           tblptrh	equ	0xFF7
 19203                           tblptrl	equ	0xFF6
 19204                           tablat	equ	0xFF5
 19205                           prodh	equ	0xFF4
 19206                           prodl	equ	0xFF3
 19207                           intcon	equ	0xFF2
 19208                           postinc0	equ	0xFEE
 19209                           wreg	equ	0xFE8
 19210                           postdec1	equ	0xFE5
 19211                           fsr1l	equ	0xFE1
 19212                           indf2	equ	0xFDF
 19213                           postinc2	equ	0xFDE
 19214                           postdec2	equ	0xFDD
 19215                           plusw2	equ	0xFDB
 19216                           fsr2h	equ	0xFDA
 19217                           fsr2l	equ	0xFD9
 19218                           status	equ	0xFD8
 19219                           
 19220 ;; *************** function _PWM2Config *****************
 19221 ;; Defined at:
 19222 ;;		line 45 in file "source/PWMConfig.h"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;		None
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      void 
 19229 ;; Registers used:
 19230 ;;		wreg, status,2, status,0, cstack
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19236 ;;      Params:         0       0       0       0       0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0
 19238 ;;      Temps:          0       0       0       0       0       0       0
 19239 ;;      Totals:         0       0       0       0       0       0       0
 19240 ;;Total ram usage:        0 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    9
 19243 ;; This function calls:
 19244 ;;		_setPWM2duty
 19245 ;;		_t2config
 19246 ;; This function is called by:
 19247 ;;		_main
 19248 ;; This function uses a non-reentrant model
 19249 ;;
 19250                           
 19251                           	psect	text69
 19252  005974                     __ptext69:
 19253                           	opt stack 0
 19254  005974                     _PWM2Config:
 19255                           	opt stack 21
 19256                           
 19257                           ;PWMConfig.h: 46: TRISCbits.TRISC0 = 1;
 19258                           
 19259                           ; BSR set to: 15
 19260                           ;incstack = 0
 19261  005974  8094               	bsf	3988,0,c	;volatile
 19262                           
 19263                           ;PWMConfig.h: 47: TRISCbits.TRISC1 = 1;
 19264  005976  8294               	bsf	3988,1,c	;volatile
 19265                           
 19266                           ;PWMConfig.h: 48: PSTR2CONbits.STR2A = 1;
 19267  005978  8063               	bsf	3939,0,c	;volatile
 19268                           
 19269                           ;PWMConfig.h: 49: PSTR2CONbits.STR2B = 1;
 19270  00597A  8263               	bsf	3939,1,c	;volatile
 19271                           
 19272                           ;PWMConfig.h: 50: PSTR2CONbits.STR2C = 0;
 19273  00597C  9463               	bcf	3939,2,c	;volatile
 19274                           
 19275                           ;PWMConfig.h: 51: PSTR2CONbits.STR2D = 0;
 19276  00597E  9663               	bcf	3939,3,c	;volatile
 19277                           
 19278                           ;PWMConfig.h: 52: CCPTMRS0bits.C2TSEL = 0b00;
 19279  005980  0EE7               	movlw	-25
 19280  005982  010F               	movlb	15	; () banked
 19281  005984  1749               	andwf	73,f,b	;volatile
 19282                           
 19283                           ;PWMConfig.h: 53: PR2 = 199;
 19284  005986  0EC7               	movlw	199
 19285  005988  6EBB               	movwf	4027,c	;volatile
 19286                           
 19287                           ; BSR set to: 15
 19288                           ;PWMConfig.h: 54: ECCP2ASbits.CCP2AS = 0b000;
 19289  00598A  9864               	bcf	3940,4,c	;volatile
 19290  00598C  9A64               	bcf	3940,5,c	;volatile
 19291  00598E  9C64               	bcf	3940,6,c	;volatile
 19292                           
 19293                           ;PWMConfig.h: 55: ECCP2ASbits.PSS2AC = 0b00;
 19294  005990  0EF3               	movlw	-13
 19295  005992  1664               	andwf	3940,f,c	;volatile
 19296                           
 19297                           ;PWMConfig.h: 56: ECCP2ASbits.PSS2BD = 0b00;
 19298  005994  0EFC               	movlw	-4
 19299  005996  1664               	andwf	3940,f,c	;volatile
 19300                           
 19301                           ; BSR set to: 15
 19302                           ;PWMConfig.h: 57: PWM2CONbits.P2RSEN = 0;
 19303  005998  9E65               	bcf	3941,7,c	;volatile
 19304                           
 19305                           ;PWMConfig.h: 58: ECCP2ASbits.CCP2AS = 1;
 19306  00599A  5064               	movf	3940,w,c	;volatile
 19307  00599C  0B8F               	andlw	-113
 19308  00599E  0910               	iorlw	16
 19309  0059A0  6E64               	movwf	3940,c	;volatile
 19310                           
 19311                           ;PWMConfig.h: 59: CCP2CONbits.P2M = 0b10;
 19312  0059A2  5066               	movf	3942,w,c	;volatile
 19313  0059A4  0B3F               	andlw	-193
 19314  0059A6  0980               	iorlw	128
 19315  0059A8  6E66               	movwf	3942,c	;volatile
 19316                           
 19317                           ;PWMConfig.h: 60: CCP2CONbits.CCP2M = 0b1100;
 19318  0059AA  5066               	movf	3942,w,c	;volatile
 19319  0059AC  0BF0               	andlw	-16
 19320  0059AE  090C               	iorlw	12
 19321  0059B0  6E66               	movwf	3942,c	;volatile
 19322                           
 19323                           ; BSR set to: 15
 19324                           ;PWMConfig.h: 61: setPWM2duty(0);
 19325  0059B2  0E00               	movlw	0
 19326  0059B4  0100               	movlb	0	; () banked
 19327  0059B6  6F76               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 19328  0059B8  0E00               	movlw	0
 19329  0059BA  6F75               	movwf	setPWM2duty@actuator& (0+255),b
 19330  0059BC  EC86  F029         	call	_setPWM2duty	;wreg free
 19331                           
 19332                           ;PWMConfig.h: 62: PWM2CONbits.P2DC = 16;
 19333  0059C0  9065               	bcf	3941,0,c	;volatile
 19334  0059C2  9265               	bcf	3941,1,c	;volatile
 19335  0059C4  9465               	bcf	3941,2,c	;volatile
 19336  0059C6  9665               	bcf	3941,3,c	;volatile
 19337  0059C8  8865               	bsf	3941,4,c	;volatile
 19338  0059CA  9A65               	bcf	3941,5,c	;volatile
 19339  0059CC  9C65               	bcf	3941,6,c	;volatile
 19340                           
 19341                           ;PWMConfig.h: 63: t2config();
 19342  0059CE  EC36  F02F         	call	_t2config	;wreg free
 19343                           
 19344                           ;PWMConfig.h: 64: TRISCbits.TRISC0 = 0;
 19345  0059D2  9094               	bcf	3988,0,c	;volatile
 19346                           
 19347                           ;PWMConfig.h: 65: TRISCbits.TRISC1 = 0;
 19348  0059D4  9294               	bcf	3988,1,c	;volatile
 19349                           
 19350                           ;PWMConfig.h: 66: ECCP2ASbits.CCP2ASE = 0;
 19351  0059D6  9E64               	bcf	3940,7,c	;volatile
 19352  0059D8  0012               	return		;funcret
 19353  0059DA                     __end_of_PWM2Config:
 19354                           	opt stack 0
 19355                           tblptru	equ	0xFF8
 19356                           tblptrh	equ	0xFF7
 19357                           tblptrl	equ	0xFF6
 19358                           tablat	equ	0xFF5
 19359                           prodh	equ	0xFF4
 19360                           prodl	equ	0xFF3
 19361                           intcon	equ	0xFF2
 19362                           postinc0	equ	0xFEE
 19363                           wreg	equ	0xFE8
 19364                           postdec1	equ	0xFE5
 19365                           fsr1l	equ	0xFE1
 19366                           indf2	equ	0xFDF
 19367                           postinc2	equ	0xFDE
 19368                           postdec2	equ	0xFDD
 19369                           plusw2	equ	0xFDB
 19370                           fsr2h	equ	0xFDA
 19371                           fsr2l	equ	0xFD9
 19372                           status	equ	0xFD8
 19373                           
 19374 ;; *************** function _t2config *****************
 19375 ;; Defined at:
 19376 ;;		line 12 in file "source/PWMConfig.h"
 19377 ;; Parameters:    Size  Location     Type
 19378 ;;		None
 19379 ;; Auto vars:     Size  Location     Type
 19380 ;;		None
 19381 ;; Return value:  Size  Location     Type
 19382 ;;                  1    wreg      void 
 19383 ;; Registers used:
 19384 ;;		wreg, status,2
 19385 ;; Tracked objects:
 19386 ;;		On entry : 0/0
 19387 ;;		On exit  : 0/0
 19388 ;;		Unchanged: 0/0
 19389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19390 ;;      Params:         0       0       0       0       0       0       0
 19391 ;;      Locals:         0       0       0       0       0       0       0
 19392 ;;      Temps:          0       0       0       0       0       0       0
 19393 ;;      Totals:         0       0       0       0       0       0       0
 19394 ;;Total ram usage:        0 bytes
 19395 ;; Hardware stack levels used:    1
 19396 ;; Hardware stack levels required when called:    8
 19397 ;; This function calls:
 19398 ;;		Nothing
 19399 ;; This function is called by:
 19400 ;;		_PWM2Config
 19401 ;; This function uses a non-reentrant model
 19402 ;;
 19403                           
 19404                           	psect	text70
 19405  005E6C                     __ptext70:
 19406                           	opt stack 0
 19407  005E6C                     _t2config:
 19408                           	opt stack 21
 19409                           
 19410                           ;PWMConfig.h: 13: T2CONbits.TMR2ON = 0;
 19411                           
 19412                           ;incstack = 0
 19413  005E6C  94BA               	bcf	4026,2,c	;volatile
 19414                           
 19415                           ;PWMConfig.h: 14: T2CONbits.T2CKPS = 0b00;
 19416  005E6E  0EFC               	movlw	-4
 19417  005E70  16BA               	andwf	4026,f,c	;volatile
 19418                           
 19419                           ;PWMConfig.h: 15: T2CONbits.T2OUTPS = 0b1111;
 19420  005E72  86BA               	bsf	4026,3,c	;volatile
 19421  005E74  88BA               	bsf	4026,4,c	;volatile
 19422  005E76  8ABA               	bsf	4026,5,c	;volatile
 19423  005E78  8CBA               	bsf	4026,6,c	;volatile
 19424                           
 19425                           ;PWMConfig.h: 17: PIR1bits.TMR2IF = 0;
 19426  005E7A  929E               	bcf	3998,1,c	;volatile
 19427                           
 19428                           ;PWMConfig.h: 18: IPR1bits.TMR2IP = 1;
 19429  005E7C  829F               	bsf	3999,1,c	;volatile
 19430                           
 19431                           ;PWMConfig.h: 19: PIE1bits.TMR2IE = 1;
 19432  005E7E  829D               	bsf	3997,1,c	;volatile
 19433                           
 19434                           ;PWMConfig.h: 20: T2CONbits.TMR2ON = 1;
 19435  005E80  84BA               	bsf	4026,2,c	;volatile
 19436  005E82  0012               	return		;funcret
 19437  005E84                     __end_of_t2config:
 19438                           	opt stack 0
 19439                           tblptru	equ	0xFF8
 19440                           tblptrh	equ	0xFF7
 19441                           tblptrl	equ	0xFF6
 19442                           tablat	equ	0xFF5
 19443                           prodh	equ	0xFF4
 19444                           prodl	equ	0xFF3
 19445                           intcon	equ	0xFF2
 19446                           postinc0	equ	0xFEE
 19447                           wreg	equ	0xFE8
 19448                           postdec1	equ	0xFE5
 19449                           fsr1l	equ	0xFE1
 19450                           indf2	equ	0xFDF
 19451                           postinc2	equ	0xFDE
 19452                           postdec2	equ	0xFDD
 19453                           plusw2	equ	0xFDB
 19454                           fsr2h	equ	0xFDA
 19455                           fsr2l	equ	0xFD9
 19456                           status	equ	0xFD8
 19457                           
 19458 ;; *************** function _setPWM2duty *****************
 19459 ;; Defined at:
 19460 ;;		line 23 in file "source/PWMConfig.h"
 19461 ;; Parameters:    Size  Location     Type
 19462 ;;  actuator        2   21[BANK0 ] short 
 19463 ;; Auto vars:     Size  Location     Type
 19464 ;;  act             2   25[BANK0 ] short 
 19465 ;; Return value:  Size  Location     Type
 19466 ;;                  1    wreg      void 
 19467 ;; Registers used:
 19468 ;;		wreg, status,2, status,0
 19469 ;; Tracked objects:
 19470 ;;		On entry : 0/0
 19471 ;;		On exit  : 0/0
 19472 ;;		Unchanged: 0/0
 19473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19474 ;;      Params:         0       2       0       0       0       0       0
 19475 ;;      Locals:         0       2       0       0       0       0       0
 19476 ;;      Temps:          0       2       0       0       0       0       0
 19477 ;;      Totals:         0       6       0       0       0       0       0
 19478 ;;Total ram usage:        6 bytes
 19479 ;; Hardware stack levels used:    1
 19480 ;; Hardware stack levels required when called:    8
 19481 ;; This function calls:
 19482 ;;		Nothing
 19483 ;; This function is called by:
 19484 ;;		_PWM2Config
 19485 ;; This function uses a non-reentrant model
 19486 ;;
 19487                           
 19488                           	psect	text71
 19489  00530C                     __ptext71:
 19490                           	opt stack 0
 19491  00530C                     _setPWM2duty:
 19492                           	opt stack 21
 19493                           
 19494                           ;PWMConfig.h: 24: short act = 400;
 19495                           
 19496                           ;incstack = 0
 19497  00530C  0E01               	movlw	1
 19498  00530E  0100               	movlb	0	; () banked
 19499  005310  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 19500  005312  0E90               	movlw	144
 19501  005314  6F79               	movwf	setPWM2duty@act& (0+255),b
 19502                           
 19503                           ; BSR set to: 0
 19504                           ;PWMConfig.h: 25: if(actuator > 400)
 19505  005316  0100               	movlb	0	; () banked
 19506  005318  BF76               	btfsc	(setPWM2duty@actuator+1)& (0+255),7,b
 19507  00531A  D00D               	goto	l7448
 19508  00531C  0E91               	movlw	145
 19509  00531E  0100               	movlb	0	; () banked
 19510  005320  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 19511  005322  0E01               	movlw	1
 19512  005324  0100               	movlb	0	; () banked
 19513  005326  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 19514  005328  A0D8               	btfss	status,0,c
 19515  00532A  D005               	goto	l7448
 19516                           
 19517                           ; BSR set to: 0
 19518                           ;PWMConfig.h: 26: act = 800;
 19519  00532C  0E03               	movlw	3
 19520  00532E  0100               	movlb	0	; () banked
 19521  005330  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 19522  005332  0E20               	movlw	32
 19523  005334  D00F               	goto	L13
 19524  005336                     l7448:
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;PWMConfig.h: 27: else if(actuator < -400)
 19528  005336  0100               	movlb	0	; () banked
 19529  005338  AF76               	btfss	(setPWM2duty@actuator+1)& (0+255),7,b
 19530  00533A  D00E               	goto	l7452
 19531  00533C  0E70               	movlw	112
 19532  00533E  0100               	movlb	0	; () banked
 19533  005340  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 19534  005342  0EFE               	movlw	254
 19535  005344  0100               	movlb	0	; () banked
 19536  005346  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 19537  005348  B0D8               	btfsc	status,0,c
 19538  00534A  D006               	goto	l7452
 19539                           
 19540                           ; BSR set to: 0
 19541                           ;PWMConfig.h: 28: act = 0;
 19542  00534C  0E00               	movlw	0
 19543  00534E  0100               	movlb	0	; () banked
 19544  005350  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 19545  005352  0E00               	movlw	0
 19546  005354                     L13:
 19547  005354  6F79               	movwf	setPWM2duty@act& (0+255),b
 19548  005356  D00A               	goto	l724
 19549  005358                     l7452:
 19550                           
 19551                           ; BSR set to: 0
 19552                           ;PWMConfig.h: 29: else
 19553                           ;PWMConfig.h: 30: act = actuator + 400;
 19554  005358  0E90               	movlw	144
 19555  00535A  0100               	movlb	0	; () banked
 19556  00535C  2575               	addwf	setPWM2duty@actuator& (0+255),w,b
 19557  00535E  0100               	movlb	0	; () banked
 19558  005360  6F79               	movwf	setPWM2duty@act& (0+255),b
 19559  005362  0E01               	movlw	1
 19560  005364  0100               	movlb	0	; () banked
 19561  005366  2176               	addwfc	(setPWM2duty@actuator+1)& (0+255),w,b
 19562  005368  0100               	movlb	0	; () banked
 19563  00536A  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 19564  00536C                     l724:
 19565                           
 19566                           ; BSR set to: 0
 19567                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 19568  00536C  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 19569  005370  0100               	movlb	0	; () banked
 19570  005372  3B77               	swapf	??_setPWM2duty& (0+255),f,b
 19571  005374  5066               	movf	3942,w,c	;volatile
 19572  005376  0100               	movlb	0	; () banked
 19573  005378  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 19574  00537A  0BCF               	andlw	-49
 19575  00537C  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 19576  00537E  6E66               	movwf	3942,c	;volatile
 19577                           
 19578                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 19579  005380  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 19580  005384  C07A  F078         	movff	setPWM2duty@act+1,??_setPWM2duty+1
 19581  005388  0100               	movlb	0	; () banked
 19582  00538A  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 19583  00538C  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 19584  00538E  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 19585  005390  0100               	movlb	0	; () banked
 19586  005392  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 19587  005394  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 19588  005396  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 19589  005398  0100               	movlb	0	; () banked
 19590  00539A  5177               	movf	??_setPWM2duty& (0+255),w,b
 19591  00539C  6E67               	movwf	3943,c	;volatile
 19592                           
 19593                           ; BSR set to: 0
 19594  00539E  0012               	return		;funcret
 19595  0053A0                     __end_of_setPWM2duty:
 19596                           	opt stack 0
 19597                           tblptru	equ	0xFF8
 19598                           tblptrh	equ	0xFF7
 19599                           tblptrl	equ	0xFF6
 19600                           tablat	equ	0xFF5
 19601                           prodh	equ	0xFF4
 19602                           prodl	equ	0xFF3
 19603                           intcon	equ	0xFF2
 19604                           postinc0	equ	0xFEE
 19605                           wreg	equ	0xFE8
 19606                           postdec1	equ	0xFE5
 19607                           fsr1l	equ	0xFE1
 19608                           indf2	equ	0xFDF
 19609                           postinc2	equ	0xFDE
 19610                           postdec2	equ	0xFDD
 19611                           plusw2	equ	0xFDB
 19612                           fsr2h	equ	0xFDA
 19613                           fsr2l	equ	0xFD9
 19614                           status	equ	0xFD8
 19615                           
 19616 ;; *************** function _EEPROMConfig *****************
 19617 ;; Defined at:
 19618 ;;		line 56 in file "source/sysParams.h"
 19619 ;; Parameters:    Size  Location     Type
 19620 ;;		None
 19621 ;; Auto vars:     Size  Location     Type
 19622 ;;		None
 19623 ;; Return value:  Size  Location     Type
 19624 ;;                  1    wreg      void 
 19625 ;; Registers used:
 19626 ;;		None
 19627 ;; Tracked objects:
 19628 ;;		On entry : 0/0
 19629 ;;		On exit  : 0/0
 19630 ;;		Unchanged: 0/0
 19631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19632 ;;      Params:         0       0       0       0       0       0       0
 19633 ;;      Locals:         0       0       0       0       0       0       0
 19634 ;;      Temps:          0       0       0       0       0       0       0
 19635 ;;      Totals:         0       0       0       0       0       0       0
 19636 ;;Total ram usage:        0 bytes
 19637 ;; Hardware stack levels used:    1
 19638 ;; Hardware stack levels required when called:    8
 19639 ;; This function calls:
 19640 ;;		Nothing
 19641 ;; This function is called by:
 19642 ;;		_main
 19643 ;; This function uses a non-reentrant model
 19644 ;;
 19645                           
 19646                           	psect	text72
 19647  005F28                     __ptext72:
 19648                           	opt stack 0
 19649  005F28                     _EEPROMConfig:
 19650                           	opt stack 22
 19651                           
 19652                           ;sysParams.h: 57: EECON1bits.WREN = 0;
 19653                           
 19654                           ; BSR set to: 0
 19655                           ;incstack = 0
 19656  005F28  94A6               	bcf	4006,2,c	;volatile
 19657                           
 19658                           ;sysParams.h: 58: EECON1bits.FREE = 0;
 19659  005F2A  98A6               	bcf	4006,4,c	;volatile
 19660  005F2C  0012               	return		;funcret
 19661  005F2E                     __end_of_EEPROMConfig:
 19662                           	opt stack 0
 19663                           tblptru	equ	0xFF8
 19664                           tblptrh	equ	0xFF7
 19665                           tblptrl	equ	0xFF6
 19666                           tablat	equ	0xFF5
 19667                           prodh	equ	0xFF4
 19668                           prodl	equ	0xFF3
 19669                           intcon	equ	0xFF2
 19670                           postinc0	equ	0xFEE
 19671                           wreg	equ	0xFE8
 19672                           postdec1	equ	0xFE5
 19673                           fsr1l	equ	0xFE1
 19674                           indf2	equ	0xFDF
 19675                           postinc2	equ	0xFDE
 19676                           postdec2	equ	0xFDD
 19677                           plusw2	equ	0xFDB
 19678                           fsr2h	equ	0xFDA
 19679                           fsr2l	equ	0xFD9
 19680                           status	equ	0xFD8
 19681                           
 19682 ;; *************** function _isr *****************
 19683 ;; Defined at:
 19684 ;;		line 20 in file "source/main.c"
 19685 ;; Parameters:    Size  Location     Type
 19686 ;;		None
 19687 ;; Auto vars:     Size  Location     Type
 19688 ;;		None
 19689 ;; Return value:  Size  Location     Type
 19690 ;;                  1    wreg      void 
 19691 ;; Registers used:
 19692 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19693 ;; Tracked objects:
 19694 ;;		On entry : 0/0
 19695 ;;		On exit  : 0/0
 19696 ;;		Unchanged: 0/0
 19697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19698 ;;      Params:         0       0       0       0       0       0       0
 19699 ;;      Locals:         0       0       0       0       0       0       0
 19700 ;;      Temps:          0      17       0       0       0       0       0
 19701 ;;      Totals:         0      17       0       0       0       0       0
 19702 ;;Total ram usage:       17 bytes
 19703 ;; Hardware stack levels used:    1
 19704 ;; Hardware stack levels required when called:    7
 19705 ;; This function calls:
 19706 ;;		_UARTint
 19707 ;; This function is called by:
 19708 ;;		Interrupt level 1
 19709 ;; This function uses a non-reentrant model
 19710 ;;
 19711                           
 19712                           	psect	intcodelo
 19713  000018                     __pintcodelo:
 19714                           	opt stack 0
 19715  000018                     _isr:
 19716                           	opt stack 13
 19717                           
 19718                           ;incstack = 0
 19719  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 19720  00001A  CFD8 F064          	movff	status,??_isr
 19721  00001E  CFE8 F065          	movff	wreg,??_isr+1
 19722  000022  CFE0 F066          	movff	bsr,??_isr+2
 19723  000026  CFFA F067          	movff	pclath,??_isr+3
 19724  00002A  CFFB F068          	movff	pclatu,??_isr+4
 19725  00002E  CFE9 F069          	movff	fsr0l,??_isr+5
 19726  000032  CFEA F06A          	movff	fsr0h,??_isr+6
 19727  000036  CFE1 F06B          	movff	fsr1l,??_isr+7
 19728  00003A  CFE2 F06C          	movff	fsr1h,??_isr+8
 19729  00003E  CFD9 F06D          	movff	fsr2l,??_isr+9
 19730  000042  CFDA F06E          	movff	fsr2h,??_isr+10
 19731  000046  CFF3 F06F          	movff	prodl,??_isr+11
 19732  00004A  CFF4 F070          	movff	prodh,??_isr+12
 19733  00004E  CFF6 F071          	movff	tblptrl,??_isr+13
 19734  000052  CFF7 F072          	movff	tblptrh,??_isr+14
 19735  000056  CFF8 F073          	movff	tblptru,??_isr+15
 19736  00005A  CFF5 F074          	movff	tablat,??_isr+16
 19737                           
 19738                           ;main.c: 21: if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
 19739  00005E  BA9D               	btfsc	3997,5,c	;volatile
 19740  000060  AA9E               	btfss	3998,5,c	;volatile
 19741  000062  D003               	goto	i1l802
 19742                           
 19743                           ;main.c: 22: UARTint();
 19744  000064  ECA5  F02A         	call	_UARTint	;wreg free
 19745                           
 19746                           ;main.c: 23: PIR1bits.RC1IF = 0;
 19747  000068  9A9E               	bcf	3998,5,c	;volatile
 19748  00006A                     i1l802:
 19749  00006A  C074  FFF5         	movff	??_isr+16,tablat
 19750  00006E  C073  FFF8         	movff	??_isr+15,tblptru
 19751  000072  C072  FFF7         	movff	??_isr+14,tblptrh
 19752  000076  C071  FFF6         	movff	??_isr+13,tblptrl
 19753  00007A  C070  FFF4         	movff	??_isr+12,prodh
 19754  00007E  C06F  FFF3         	movff	??_isr+11,prodl
 19755  000082  C06E  FFDA         	movff	??_isr+10,fsr2h
 19756  000086  C06D  FFD9         	movff	??_isr+9,fsr2l
 19757  00008A  C06C  FFE2         	movff	??_isr+8,fsr1h
 19758  00008E  C06B  FFE1         	movff	??_isr+7,fsr1l
 19759  000092  C06A  FFEA         	movff	??_isr+6,fsr0h
 19760  000096  C069  FFE9         	movff	??_isr+5,fsr0l
 19761  00009A  C068  FFFB         	movff	??_isr+4,pclatu
 19762  00009E  C067  FFFA         	movff	??_isr+3,pclath
 19763  0000A2  C066  FFE0         	movff	??_isr+2,bsr
 19764  0000A6  C065  FFE8         	movff	??_isr+1,wreg
 19765  0000AA  C064  FFD8         	movff	??_isr,status
 19766  0000AE  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 19767  0000B0  0010               	retfie	
 19768  0000B2                     __end_of_isr:
 19769                           	opt stack 0
 19770                           pclatu	equ	0xFFB
 19771                           pclath	equ	0xFFA
 19772                           tblptru	equ	0xFF8
 19773                           tblptrh	equ	0xFF7
 19774                           tblptrl	equ	0xFF6
 19775                           tablat	equ	0xFF5
 19776                           prodh	equ	0xFF4
 19777                           prodl	equ	0xFF3
 19778                           intcon	equ	0xFF2
 19779                           postinc0	equ	0xFEE
 19780                           fsr0h	equ	0xFEA
 19781                           fsr0l	equ	0xFE9
 19782                           wreg	equ	0xFE8
 19783                           postdec1	equ	0xFE5
 19784                           fsr1h	equ	0xFE2
 19785                           fsr1l	equ	0xFE1
 19786                           bsr	equ	0xFE0
 19787                           indf2	equ	0xFDF
 19788                           postinc2	equ	0xFDE
 19789                           postdec2	equ	0xFDD
 19790                           plusw2	equ	0xFDB
 19791                           fsr2h	equ	0xFDA
 19792                           fsr2l	equ	0xFD9
 19793                           status	equ	0xFD8
 19794                           
 19795 ;; *************** function _UARTint *****************
 19796 ;; Defined at:
 19797 ;;		line 16 in file "source/UARTConfig.h"
 19798 ;; Parameters:    Size  Location     Type
 19799 ;;		None
 19800 ;; Auto vars:     Size  Location     Type
 19801 ;;  sas             1   45[COMRAM] unsigned char 
 19802 ;; Return value:  Size  Location     Type
 19803 ;;                  1    wreg      void 
 19804 ;; Registers used:
 19805 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19806 ;; Tracked objects:
 19807 ;;		On entry : 0/0
 19808 ;;		On exit  : 0/0
 19809 ;;		Unchanged: 0/0
 19810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19811 ;;      Params:         0       0       0       0       0       0       0
 19812 ;;      Locals:         1       0       0       0       0       0       0
 19813 ;;      Temps:          0       0       0       0       0       0       0
 19814 ;;      Totals:         1       0       0       0       0       0       0
 19815 ;;Total ram usage:        1 bytes
 19816 ;; Hardware stack levels used:    1
 19817 ;; Hardware stack levels required when called:    6
 19818 ;; This function calls:
 19819 ;;		_putchUART
 19820 ;;		_sysParamInit
 19821 ;;		i1_saveSysParams
 19822 ;; This function is called by:
 19823 ;;		_isr
 19824 ;; This function uses a non-reentrant model
 19825 ;;
 19826                           
 19827                           	psect	text74
 19828  00554A                     __ptext74:
 19829                           	opt stack 0
 19830  00554A                     _UARTint:
 19831                           	opt stack 13
 19832                           
 19833                           ;UARTConfig.h: 17: char sas = RCREG1;
 19834                           
 19835                           ;incstack = 0
 19836  00554A  CFAE F02E          	movff	4014,UARTint@sas	;volatile
 19837                           
 19838                           ;UARTConfig.h: 18: if(sas == 'A') {
 19839  00554E  0E41               	movlw	65
 19840  005550  182E               	xorwf	UARTint@sas,w,c
 19841  005552  A4D8               	btfss	status,2,c
 19842  005554  D00D               	goto	i1l10346
 19843                           
 19844                           ;UARTConfig.h: 19: putchUART(actualScreen);
 19845  005556  0100               	movlb	0	; () banked
 19846  005558  51D3               	movf	_actualScreen& (0+255),w,b
 19847  00555A  EC7B  F02F         	call	_putchUART
 19848                           
 19849                           ;UARTConfig.h: 20: putchUART(menuSection);
 19850  00555E  0100               	movlb	0	; () banked
 19851  005560  51D6               	movf	_menuSection& (0+255),w,b
 19852  005562  EC7B  F02F         	call	_putchUART
 19853                           
 19854                           ;UARTConfig.h: 21: putchUART(passSection);
 19855  005566  0100               	movlb	0	; () banked
 19856  005568  51D7               	movf	_passSection& (0+255),w,b
 19857  00556A  EC7B  F02F         	call	_putchUART
 19858                           
 19859                           ;UARTConfig.h: 22: }else if(sas == 'B') {
 19860  00556E  0012               	return	
 19861  005570                     i1l10346:
 19862  005570  0E42               	movlw	66
 19863  005572  182E               	xorwf	UARTint@sas,w,c
 19864  005574  A4D8               	btfss	status,2,c
 19865  005576  D003               	goto	i1l10350
 19866                           
 19867                           ;UARTConfig.h: 23: saveSysParams();
 19868  005578  ECAB  F022         	call	i1_saveSysParams	;wreg free
 19869                           
 19870                           ;UARTConfig.h: 24: }else if(sas == 'C') {
 19871  00557C  0012               	return	
 19872  00557E                     i1l10350:
 19873  00557E  0E43               	movlw	67
 19874  005580  182E               	xorwf	UARTint@sas,w,c
 19875  005582  A4D8               	btfss	status,2,c
 19876  005584  D003               	goto	i1l10354
 19877                           
 19878                           ;UARTConfig.h: 25: sysParamInit();
 19879  005586  ECE2  F024         	call	_sysParamInit	;wreg free
 19880                           
 19881                           ;UARTConfig.h: 26: }else if(sas == 'D') {
 19882  00558A  0012               	return	
 19883  00558C                     i1l10354:
 19884  00558C  0E44               	movlw	68
 19885  00558E  182E               	xorwf	UARTint@sas,w,c
 19886  005590  A4D8               	btfss	status,2,c
 19887  005592  0012               	return	
 19888                           
 19889                           ;UARTConfig.h: 27: putchUART(chanValdig[0]);
 19890  005594  0101               	movlb	1	; () banked
 19891  005596  5131               	movf	_chanValdig& (0+255),w,b
 19892  005598  EC7B  F02F         	call	_putchUART
 19893                           
 19894                           ;UARTConfig.h: 28: putchUART(chanValdig[1]);
 19895  00559C  0101               	movlb	1	; () banked
 19896  00559E  5132               	movf	(_chanValdig+1)& (0+255),w,b
 19897  0055A0  EC7B  F02F         	call	_putchUART
 19898                           
 19899                           ;UARTConfig.h: 29: putchUART(chanValdig[2]);
 19900  0055A4  0101               	movlb	1	; () banked
 19901  0055A6  5133               	movf	(_chanValdig+2)& (0+255),w,b
 19902  0055A8  EC7B  F02F         	call	_putchUART
 19903                           
 19904                           ;UARTConfig.h: 30: putchUART(chanValdig[3]);
 19905  0055AC  0101               	movlb	1	; () banked
 19906  0055AE  5134               	movf	(_chanValdig+3)& (0+255),w,b
 19907  0055B0  EC7B  F02F         	call	_putchUART
 19908                           
 19909                           ;UARTConfig.h: 31: putchUART(chanValdig[4]);
 19910  0055B4  0101               	movlb	1	; () banked
 19911  0055B6  5135               	movf	(_chanValdig+4)& (0+255),w,b
 19912  0055B8  EC7B  F02F         	call	_putchUART
 19913                           
 19914                           ;UARTConfig.h: 32: putchUART(chanValdig[5]);
 19915  0055BC  0101               	movlb	1	; () banked
 19916  0055BE  5136               	movf	(_chanValdig+5)& (0+255),w,b
 19917  0055C0  EC7B  F02F         	call	_putchUART
 19918                           
 19919                           ;UARTConfig.h: 33: }else if(sas == 'E') {
 19920  0055C4  0012               	return	
 19921  0055C6                     __end_of_UARTint:
 19922                           	opt stack 0
 19923                           pclatu	equ	0xFFB
 19924                           pclath	equ	0xFFA
 19925                           tblptru	equ	0xFF8
 19926                           tblptrh	equ	0xFF7
 19927                           tblptrl	equ	0xFF6
 19928                           tablat	equ	0xFF5
 19929                           prodh	equ	0xFF4
 19930                           prodl	equ	0xFF3
 19931                           intcon	equ	0xFF2
 19932                           postinc0	equ	0xFEE
 19933                           fsr0h	equ	0xFEA
 19934                           fsr0l	equ	0xFE9
 19935                           wreg	equ	0xFE8
 19936                           postdec1	equ	0xFE5
 19937                           fsr1h	equ	0xFE2
 19938                           fsr1l	equ	0xFE1
 19939                           bsr	equ	0xFE0
 19940                           indf2	equ	0xFDF
 19941                           postinc2	equ	0xFDE
 19942                           postdec2	equ	0xFDD
 19943                           plusw2	equ	0xFDB
 19944                           fsr2h	equ	0xFDA
 19945                           fsr2l	equ	0xFD9
 19946                           status	equ	0xFD8
 19947                           
 19948 ;; *************** function i1_saveSysParams *****************
 19949 ;; Defined at:
 19950 ;;		line 90 in file "source/sysParams.h"
 19951 ;; Parameters:    Size  Location     Type
 19952 ;;		None
 19953 ;; Auto vars:     Size  Location     Type
 19954 ;;		None
 19955 ;; Return value:  Size  Location     Type
 19956 ;;                  1    wreg      void 
 19957 ;; Registers used:
 19958 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 19959 ;; Tracked objects:
 19960 ;;		On entry : 0/0
 19961 ;;		On exit  : 0/0
 19962 ;;		Unchanged: 0/0
 19963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19964 ;;      Params:         0       0       0       0       0       0       0
 19965 ;;      Locals:         0       0       0       0       0       0       0
 19966 ;;      Temps:          0       0       0       0       0       0       0
 19967 ;;      Totals:         0       0       0       0       0       0       0
 19968 ;;Total ram usage:        0 bytes
 19969 ;; Hardware stack levels used:    1
 19970 ;; Hardware stack levels required when called:    5
 19971 ;; This function calls:
 19972 ;;		i1_calcVars2ti
 19973 ;;		i1_writeEEPROM
 19974 ;; This function is called by:
 19975 ;;		_UARTint
 19976 ;; This function uses a non-reentrant model
 19977 ;;
 19978                           
 19979                           	psect	text75
 19980  004556                     __ptext75:
 19981                           	opt stack 0
 19982  004556                     i1_saveSysParams:
 19983                           	opt stack 13
 19984                           
 19985                           ;sysParams.h: 91: EECON1bits.WREN = 1;
 19986                           
 19987                           ;incstack = 0
 19988  004556  84A6               	bsf	4006,2,c	;volatile
 19989                           
 19990                           ;sysParams.h: 92: ie = INTCONbits.GIE;
 19991  004558  0E00               	movlw	0
 19992  00455A  BEF2               	btfsc	intcon,7,c	;volatile
 19993  00455C  0E01               	movlw	1
 19994  00455E  0101               	movlb	1	; () banked
 19995  004560  6F5B               	movwf	_ie& (0+255),b
 19996                           
 19997                           ; BSR set to: 1
 19998                           ;sysParams.h: 93: INTCONbits.GIE = 0;
 19999  004562  9EF2               	bcf	intcon,7,c	;volatile
 20000                           
 20001                           ; BSR set to: 1
 20002                           ;sysParams.h: 94: writeEEPROM(1, tVarProceso);
 20003  004564  C0E3  F015         	movff	_tVarProceso,i1writeEEPROM@data
 20004  004568  0E01               	movlw	1
 20005  00456A  EC27  F02F         	call	i1_writeEEPROM
 20006                           
 20007                           ;sysParams.h: 95: fData.floatdat = tiXcorte;
 20008  00456E  C03B  F0CC         	movff	_tiXcorte,_fData
 20009  004572  C03C  F0CD         	movff	_tiXcorte+1,_fData+1
 20010  004576  C03D  F0CE         	movff	_tiXcorte+2,_fData+2
 20011  00457A  C03E  F0CF         	movff	_tiXcorte+3,_fData+3
 20012                           
 20013                           ;sysParams.h: 96: writeEEPROM(2, fData.floatMB);
 20014  00457E  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 20015  004582  0E02               	movlw	2
 20016  004584  EC27  F02F         	call	i1_writeEEPROM
 20017                           
 20018                           ;sysParams.h: 97: writeEEPROM(3, fData.floatUB);
 20019  004588  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 20020  00458C  0E03               	movlw	3
 20021  00458E  EC27  F02F         	call	i1_writeEEPROM
 20022                           
 20023                           ;sysParams.h: 98: writeEEPROM(4, fData.floatHB);
 20024  004592  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 20025  004596  0E04               	movlw	4
 20026  004598  EC27  F02F         	call	i1_writeEEPROM
 20027                           
 20028                           ;sysParams.h: 99: writeEEPROM(5, fData.floatLB);
 20029  00459C  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 20030  0045A0  0E05               	movlw	5
 20031  0045A2  EC27  F02F         	call	i1_writeEEPROM
 20032                           
 20033                           ;sysParams.h: 100: i16Data.int16dat = numCortes;
 20034  0045A6  C0DF  F0D0         	movff	_numCortes,_i16Data
 20035  0045AA  C0E0  F0D1         	movff	_numCortes+1,_i16Data+1
 20036                           
 20037                           ;sysParams.h: 101: writeEEPROM(6, i16Data.int16HB);
 20038  0045AE  C0D1  F015         	movff	_i16Data+1,i1writeEEPROM@data
 20039  0045B2  0E06               	movlw	6
 20040  0045B4  EC27  F02F         	call	i1_writeEEPROM
 20041                           
 20042                           ;sysParams.h: 102: writeEEPROM(7, i16Data.int16LB);
 20043  0045B8  C0D0  F015         	movff	_i16Data,i1writeEEPROM@data
 20044  0045BC  0E07               	movlw	7
 20045  0045BE  EC27  F02F         	call	i1_writeEEPROM
 20046                           
 20047                           ;sysParams.h: 103: fData.floatdat = diamTubo;
 20048  0045C2  C033  F0CC         	movff	_diamTubo,_fData
 20049  0045C6  C034  F0CD         	movff	_diamTubo+1,_fData+1
 20050  0045CA  C035  F0CE         	movff	_diamTubo+2,_fData+2
 20051  0045CE  C036  F0CF         	movff	_diamTubo+3,_fData+3
 20052                           
 20053                           ;sysParams.h: 104: writeEEPROM(8, fData.floatMB);
 20054  0045D2  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 20055  0045D6  0E08               	movlw	8
 20056  0045D8  EC27  F02F         	call	i1_writeEEPROM
 20057                           
 20058                           ;sysParams.h: 105: writeEEPROM(9, fData.floatUB);
 20059  0045DC  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 20060  0045E0  0E09               	movlw	9
 20061  0045E2  EC27  F02F         	call	i1_writeEEPROM
 20062                           
 20063                           ;sysParams.h: 106: writeEEPROM(10, fData.floatHB);
 20064  0045E6  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 20065  0045EA  0E0A               	movlw	10
 20066  0045EC  EC27  F02F         	call	i1_writeEEPROM
 20067                           
 20068                           ;sysParams.h: 107: writeEEPROM(11, fData.floatLB);
 20069  0045F0  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 20070  0045F4  0E0B               	movlw	11
 20071  0045F6  EC27  F02F         	call	i1_writeEEPROM
 20072                           
 20073                           ;sysParams.h: 108: fData.floatdat = densidadMasa;
 20074  0045FA  C02F  F0CC         	movff	_densidadMasa,_fData
 20075  0045FE  C030  F0CD         	movff	_densidadMasa+1,_fData+1
 20076  004602  C031  F0CE         	movff	_densidadMasa+2,_fData+2
 20077  004606  C032  F0CF         	movff	_densidadMasa+3,_fData+3
 20078                           
 20079                           ;sysParams.h: 109: writeEEPROM(12, fData.floatMB);
 20080  00460A  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 20081  00460E  0E0C               	movlw	12
 20082  004610  EC27  F02F         	call	i1_writeEEPROM
 20083                           
 20084                           ;sysParams.h: 110: writeEEPROM(13, fData.floatUB);
 20085  004614  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 20086  004618  0E0D               	movlw	13
 20087  00461A  EC27  F02F         	call	i1_writeEEPROM
 20088                           
 20089                           ;sysParams.h: 111: writeEEPROM(14, fData.floatHB);
 20090  00461E  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 20091  004622  0E0E               	movlw	14
 20092  004624  EC27  F02F         	call	i1_writeEEPROM
 20093                           
 20094                           ;sysParams.h: 112: writeEEPROM(15, fData.floatLB);
 20095  004628  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 20096  00462C  0E0F               	movlw	15
 20097  00462E  EC27  F02F         	call	i1_writeEEPROM
 20098                           
 20099                           ;sysParams.h: 113: fData.floatdat = velocidadMasa;
 20100  004632  C03F  F0CC         	movff	_velocidadMasa,_fData
 20101  004636  C040  F0CD         	movff	_velocidadMasa+1,_fData+1
 20102  00463A  C041  F0CE         	movff	_velocidadMasa+2,_fData+2
 20103  00463E  C042  F0CF         	movff	_velocidadMasa+3,_fData+3
 20104                           
 20105                           ;sysParams.h: 114: writeEEPROM(16, fData.floatMB);
 20106  004642  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 20107  004646  0E10               	movlw	16
 20108  004648  EC27  F02F         	call	i1_writeEEPROM
 20109                           
 20110                           ;sysParams.h: 115: writeEEPROM(17, fData.floatUB);
 20111  00464C  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 20112  004650  0E11               	movlw	17
 20113  004652  EC27  F02F         	call	i1_writeEEPROM
 20114                           
 20115                           ;sysParams.h: 116: writeEEPROM(18, fData.floatHB);
 20116  004656  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 20117  00465A  0E12               	movlw	18
 20118  00465C  EC27  F02F         	call	i1_writeEEPROM
 20119                           
 20120                           ;sysParams.h: 117: writeEEPROM(19, fData.floatLB);
 20121  004660  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 20122  004664  0E13               	movlw	19
 20123  004666  EC27  F02F         	call	i1_writeEEPROM
 20124                           
 20125                           ;sysParams.h: 118: EECON1bits.WREN = 0;
 20126  00466A  94A6               	bcf	4006,2,c	;volatile
 20127                           
 20128                           ;sysParams.h: 119: INTCONbits.GIE = ie;
 20129  00466C  0101               	movlb	1	; () banked
 20130  00466E  B15B               	btfsc	_ie& (0+255),0,b
 20131  004670  D002               	bra	i1u1302_25
 20132  004672  9EF2               	bcf	intcon,7,c	;volatile
 20133  004674  D001               	bra	i1u1302_26
 20134  004676                     i1u1302_25:
 20135  004676  8EF2               	bsf	intcon,7,c	;volatile
 20136  004678                     i1u1302_26:
 20137                           
 20138                           ;sysParams.h: 120: calcVars2ti();
 20139  004678  EC31  F019         	call	i1_calcVars2ti	;wreg free
 20140  00467C  0012               	return		;funcret
 20141  00467E                     __end_ofi1_saveSysParams:
 20142                           	opt stack 0
 20143                           pclatu	equ	0xFFB
 20144                           pclath	equ	0xFFA
 20145                           tblptru	equ	0xFF8
 20146                           tblptrh	equ	0xFF7
 20147                           tblptrl	equ	0xFF6
 20148                           tablat	equ	0xFF5
 20149                           prodh	equ	0xFF4
 20150                           prodl	equ	0xFF3
 20151                           intcon	equ	0xFF2
 20152                           postinc0	equ	0xFEE
 20153                           fsr0h	equ	0xFEA
 20154                           fsr0l	equ	0xFE9
 20155                           wreg	equ	0xFE8
 20156                           postdec1	equ	0xFE5
 20157                           fsr1h	equ	0xFE2
 20158                           fsr1l	equ	0xFE1
 20159                           bsr	equ	0xFE0
 20160                           indf2	equ	0xFDF
 20161                           postinc2	equ	0xFDE
 20162                           postdec2	equ	0xFDD
 20163                           plusw2	equ	0xFDB
 20164                           fsr2h	equ	0xFDA
 20165                           fsr2l	equ	0xFD9
 20166                           status	equ	0xFD8
 20167                           
 20168 ;; *************** function i1_writeEEPROM *****************
 20169 ;; Defined at:
 20170 ;;		line 36 in file "source/sysParams.h"
 20171 ;; Parameters:    Size  Location     Type
 20172 ;;  adr             1    wreg     unsigned char 
 20173 ;;  data            1   20[COMRAM] unsigned char 
 20174 ;; Auto vars:     Size  Location     Type
 20175 ;;  adr             1   21[COMRAM] unsigned char 
 20176 ;; Return value:  Size  Location     Type
 20177 ;;                  1    wreg      void 
 20178 ;; Registers used:
 20179 ;;		wreg, status,2
 20180 ;; Tracked objects:
 20181 ;;		On entry : 0/0
 20182 ;;		On exit  : 0/0
 20183 ;;		Unchanged: 0/0
 20184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20185 ;;      Params:         1       0       0       0       0       0       0
 20186 ;;      Locals:         1       0       0       0       0       0       0
 20187 ;;      Temps:          0       0       0       0       0       0       0
 20188 ;;      Totals:         2       0       0       0       0       0       0
 20189 ;;Total ram usage:        2 bytes
 20190 ;; Hardware stack levels used:    1
 20191 ;; Hardware stack levels required when called:    3
 20192 ;; This function calls:
 20193 ;;		Nothing
 20194 ;; This function is called by:
 20195 ;;		i1_saveSysParams
 20196 ;; This function uses a non-reentrant model
 20197 ;;
 20198                           
 20199                           	psect	text76
 20200  005E4E                     __ptext76:
 20201                           	opt stack 0
 20202  005E4E                     i1_writeEEPROM:
 20203                           	opt stack 14
 20204                           
 20205                           ;incstack = 0
 20206                           ;i1writeEEPROM@adr stored from wreg
 20207  005E4E  6E16               	movwf	i1writeEEPROM@adr,c
 20208                           
 20209                           ;sysParams.h: 37: EEADR = adr;
 20210  005E50  C016  FFA9         	movff	i1writeEEPROM@adr,4009	;volatile
 20211                           
 20212                           ;sysParams.h: 38: EEDATA = data;
 20213  005E54  C015  FFA8         	movff	i1writeEEPROM@data,4008	;volatile
 20214                           
 20215                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 20216  005E58  9EA6               	bcf	4006,7,c	;volatile
 20217                           
 20218                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 20219  005E5A  9CA6               	bcf	4006,6,c	;volatile
 20220                           
 20221                           ;sysParams.h: 41: EECON2 = 0x55;
 20222  005E5C  0E55               	movlw	85
 20223  005E5E  6EA7               	movwf	4007,c	;volatile
 20224                           
 20225                           ;sysParams.h: 42: EECON2 = 0xAA;
 20226  005E60  0EAA               	movlw	170
 20227  005E62  6EA7               	movwf	4007,c	;volatile
 20228                           
 20229                           ;sysParams.h: 43: EECON1bits.WR = 1;
 20230  005E64  82A6               	bsf	4006,1,c	;volatile
 20231  005E66                     i1l282:
 20232  005E66  A2A6               	btfss	4006,1,c	;volatile
 20233  005E68  0012               	return	
 20234  005E6A  D7FD               	goto	i1l282
 20235  005E6C                     __end_ofi1_writeEEPROM:
 20236                           	opt stack 0
 20237                           pclatu	equ	0xFFB
 20238                           pclath	equ	0xFFA
 20239                           tblptru	equ	0xFF8
 20240                           tblptrh	equ	0xFF7
 20241                           tblptrl	equ	0xFF6
 20242                           tablat	equ	0xFF5
 20243                           prodh	equ	0xFF4
 20244                           prodl	equ	0xFF3
 20245                           intcon	equ	0xFF2
 20246                           postinc0	equ	0xFEE
 20247                           fsr0h	equ	0xFEA
 20248                           fsr0l	equ	0xFE9
 20249                           wreg	equ	0xFE8
 20250                           postdec1	equ	0xFE5
 20251                           fsr1h	equ	0xFE2
 20252                           fsr1l	equ	0xFE1
 20253                           bsr	equ	0xFE0
 20254                           indf2	equ	0xFDF
 20255                           postinc2	equ	0xFDE
 20256                           postdec2	equ	0xFDD
 20257                           plusw2	equ	0xFDB
 20258                           fsr2h	equ	0xFDA
 20259                           fsr2l	equ	0xFD9
 20260                           status	equ	0xFD8
 20261                           
 20262 ;; *************** function i1_calcVars2ti *****************
 20263 ;; Defined at:
 20264 ;;		line 72 in file "source/sysParams.h"
 20265 ;; Parameters:    Size  Location     Type
 20266 ;;		None
 20267 ;; Auto vars:     Size  Location     Type
 20268 ;;  calcVars2ti     4    0[BANK0 ] float 
 20269 ;; Return value:  Size  Location     Type
 20270 ;;                  1    wreg      void 
 20271 ;; Registers used:
 20272 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20273 ;; Tracked objects:
 20274 ;;		On entry : 0/0
 20275 ;;		On exit  : 0/0
 20276 ;;		Unchanged: 0/0
 20277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20278 ;;      Params:         0       0       0       0       0       0       0
 20279 ;;      Locals:         0       4       0       0       0       0       0
 20280 ;;      Temps:          0       0       0       0       0       0       0
 20281 ;;      Totals:         0       4       0       0       0       0       0
 20282 ;;Total ram usage:        4 bytes
 20283 ;; Hardware stack levels used:    1
 20284 ;; Hardware stack levels required when called:    4
 20285 ;; This function calls:
 20286 ;;		i1___fldiv
 20287 ;;		i1___flmul
 20288 ;; This function is called by:
 20289 ;;		i1_saveSysParams
 20290 ;; This function uses a non-reentrant model
 20291 ;;
 20292                           
 20293                           	psect	text77
 20294  003262                     __ptext77:
 20295                           	opt stack 0
 20296  003262                     i1_calcVars2ti:
 20297                           	opt stack 13
 20298                           
 20299                           ;sysParams.h: 73: float temp = 0;
 20300                           
 20301                           ;incstack = 0
 20302  003262  0E00               	movlw	0
 20303  003264  0100               	movlb	0	; () banked
 20304  003266  6F60               	movwf	i1calcVars2ti@temp& (0+255),b
 20305  003268  0E00               	movlw	0
 20306  00326A  6F61               	movwf	(i1calcVars2ti@temp+1)& (0+255),b
 20307  00326C  0E00               	movlw	0
 20308  00326E  6F62               	movwf	(i1calcVars2ti@temp+2)& (0+255),b
 20309  003270  0E00               	movlw	0
 20310  003272  6F63               	movwf	(i1calcVars2ti@temp+3)& (0+255),b
 20311                           
 20312                           ; BSR set to: 0
 20313                           ;sysParams.h: 74: temp = (float)diamTubo / 2000.0f;
 20314  003274  C033  F015         	movff	_diamTubo,i1___fldiv@b
 20315  003278  C034  F016         	movff	_diamTubo+1,i1___fldiv@b+1
 20316  00327C  C035  F017         	movff	_diamTubo+2,i1___fldiv@b+2
 20317  003280  C036  F018         	movff	_diamTubo+3,i1___fldiv@b+3
 20318  003284  0E00               	movlw	0
 20319  003286  6E19               	movwf	i1___fldiv@a,c
 20320  003288  0E00               	movlw	0
 20321  00328A  6E1A               	movwf	i1___fldiv@a+1,c
 20322  00328C  0EFA               	movlw	250
 20323  00328E  6E1B               	movwf	i1___fldiv@a+2,c
 20324  003290  0E44               	movlw	68
 20325  003292  6E1C               	movwf	i1___fldiv@a+3,c
 20326  003294  EC54  F014         	call	i1___fldiv	;wreg free
 20327  003298  C015  F060         	movff	?i1___fldiv,i1calcVars2ti@temp
 20328  00329C  C016  F061         	movff	?i1___fldiv+1,i1calcVars2ti@temp+1
 20329  0032A0  C017  F062         	movff	?i1___fldiv+2,i1calcVars2ti@temp+2
 20330  0032A4  C018  F063         	movff	?i1___fldiv+3,i1calcVars2ti@temp+3
 20331                           
 20332                           ;sysParams.h: 75: temp *= temp;
 20333  0032A8  C060  F015         	movff	i1calcVars2ti@temp,i1___flmul@b
 20334  0032AC  C061  F016         	movff	i1calcVars2ti@temp+1,i1___flmul@b+1
 20335  0032B0  C062  F017         	movff	i1calcVars2ti@temp+2,i1___flmul@b+2
 20336  0032B4  C063  F018         	movff	i1calcVars2ti@temp+3,i1___flmul@b+3
 20337  0032B8  C060  F019         	movff	i1calcVars2ti@temp,i1___flmul@a
 20338  0032BC  C061  F01A         	movff	i1calcVars2ti@temp+1,i1___flmul@a+1
 20339  0032C0  C062  F01B         	movff	i1calcVars2ti@temp+2,i1___flmul@a+2
 20340  0032C4  C063  F01C         	movff	i1calcVars2ti@temp+3,i1___flmul@a+3
 20341  0032C8  EC43  F011         	call	i1___flmul	;wreg free
 20342  0032CC  C015  F060         	movff	?i1___flmul,i1calcVars2ti@temp
 20343  0032D0  C016  F061         	movff	?i1___flmul+1,i1calcVars2ti@temp+1
 20344  0032D4  C017  F062         	movff	?i1___flmul+2,i1calcVars2ti@temp+2
 20345  0032D8  C018  F063         	movff	?i1___flmul+3,i1calcVars2ti@temp+3
 20346                           
 20347                           ;sysParams.h: 76: temp *= pi;
 20348  0032DC  C060  F015         	movff	i1calcVars2ti@temp,i1___flmul@b
 20349  0032E0  C061  F016         	movff	i1calcVars2ti@temp+1,i1___flmul@b+1
 20350  0032E4  C062  F017         	movff	i1calcVars2ti@temp+2,i1___flmul@b+2
 20351  0032E8  C063  F018         	movff	i1calcVars2ti@temp+3,i1___flmul@b+3
 20352  0032EC  C175  F019         	movff	_pi,i1___flmul@a
 20353  0032F0  C176  F01A         	movff	_pi+1,i1___flmul@a+1
 20354  0032F4  C177  F01B         	movff	_pi+2,i1___flmul@a+2
 20355  0032F8  C178  F01C         	movff	_pi+3,i1___flmul@a+3
 20356  0032FC  EC43  F011         	call	i1___flmul	;wreg free
 20357  003300  C015  F060         	movff	?i1___flmul,i1calcVars2ti@temp
 20358  003304  C016  F061         	movff	?i1___flmul+1,i1calcVars2ti@temp+1
 20359  003308  C017  F062         	movff	?i1___flmul+2,i1calcVars2ti@temp+2
 20360  00330C  C018  F063         	movff	?i1___flmul+3,i1calcVars2ti@temp+3
 20361                           
 20362                           ;sysParams.h: 77: temp *= velocidadMasa;
 20363  003310  C060  F015         	movff	i1calcVars2ti@temp,i1___flmul@b
 20364  003314  C061  F016         	movff	i1calcVars2ti@temp+1,i1___flmul@b+1
 20365  003318  C062  F017         	movff	i1calcVars2ti@temp+2,i1___flmul@b+2
 20366  00331C  C063  F018         	movff	i1calcVars2ti@temp+3,i1___flmul@b+3
 20367  003320  C03F  F019         	movff	_velocidadMasa,i1___flmul@a
 20368  003324  C040  F01A         	movff	_velocidadMasa+1,i1___flmul@a+1
 20369  003328  C041  F01B         	movff	_velocidadMasa+2,i1___flmul@a+2
 20370  00332C  C042  F01C         	movff	_velocidadMasa+3,i1___flmul@a+3
 20371  003330  EC43  F011         	call	i1___flmul	;wreg free
 20372  003334  C015  F060         	movff	?i1___flmul,i1calcVars2ti@temp
 20373  003338  C016  F061         	movff	?i1___flmul+1,i1calcVars2ti@temp+1
 20374  00333C  C017  F062         	movff	?i1___flmul+2,i1calcVars2ti@temp+2
 20375  003340  C018  F063         	movff	?i1___flmul+3,i1calcVars2ti@temp+3
 20376                           
 20377                           ;sysParams.h: 78: if(tVarProceso == 0) {
 20378  003344  0100               	movlb	0	; () banked
 20379  003346  51E3               	movf	_tVarProceso& (0+255),w,b
 20380  003348  A4D8               	btfss	status,2,c
 20381  00334A  D035               	goto	i1l9732
 20382                           
 20383                           ; BSR set to: 0
 20384                           ;sysParams.h: 79: m3Xcorte = (float)kgXcorte / densidadMasa;
 20385  00334C  C0DB  F015         	movff	_kgXcorte,i1___fldiv@b
 20386  003350  C0DC  F016         	movff	_kgXcorte+1,i1___fldiv@b+1
 20387  003354  C0DD  F017         	movff	_kgXcorte+2,i1___fldiv@b+2
 20388  003358  C0DE  F018         	movff	_kgXcorte+3,i1___fldiv@b+3
 20389  00335C  C02F  F019         	movff	_densidadMasa,i1___fldiv@a
 20390  003360  C030  F01A         	movff	_densidadMasa+1,i1___fldiv@a+1
 20391  003364  C031  F01B         	movff	_densidadMasa+2,i1___fldiv@a+2
 20392  003368  C032  F01C         	movff	_densidadMasa+3,i1___fldiv@a+3
 20393  00336C  EC54  F014         	call	i1___fldiv	;wreg free
 20394  003370  C015  F037         	movff	?i1___fldiv,_m3Xcorte
 20395  003374  C016  F038         	movff	?i1___fldiv+1,_m3Xcorte+1
 20396  003378  C017  F039         	movff	?i1___fldiv+2,_m3Xcorte+2
 20397  00337C  C018  F03A         	movff	?i1___fldiv+3,_m3Xcorte+3
 20398                           
 20399                           ;sysParams.h: 80: tiXcorte = (float)m3Xcorte / temp;
 20400  003380  C037  F015         	movff	_m3Xcorte,i1___fldiv@b
 20401  003384  C038  F016         	movff	_m3Xcorte+1,i1___fldiv@b+1
 20402  003388  C039  F017         	movff	_m3Xcorte+2,i1___fldiv@b+2
 20403  00338C  C03A  F018         	movff	_m3Xcorte+3,i1___fldiv@b+3
 20404  003390  C060  F019         	movff	i1calcVars2ti@temp,i1___fldiv@a
 20405  003394  C061  F01A         	movff	i1calcVars2ti@temp+1,i1___fldiv@a+1
 20406  003398  C062  F01B         	movff	i1calcVars2ti@temp+2,i1___fldiv@a+2
 20407  00339C  C063  F01C         	movff	i1calcVars2ti@temp+3,i1___fldiv@a+3
 20408  0033A0  EC54  F014         	call	i1___fldiv	;wreg free
 20409  0033A4  C015  F03B         	movff	?i1___fldiv,_tiXcorte
 20410  0033A8  C016  F03C         	movff	?i1___fldiv+1,_tiXcorte+1
 20411  0033AC  C017  F03D         	movff	?i1___fldiv+2,_tiXcorte+2
 20412  0033B0  C018  F03E         	movff	?i1___fldiv+3,_tiXcorte+3
 20413                           
 20414                           ;sysParams.h: 81: }else if(tVarProceso == 1) {
 20415  0033B4  0012               	return	
 20416  0033B6                     i1l9732:
 20417  0033B6  0100               	movlb	0	; () banked
 20418  0033B8  05E3               	decf	_tVarProceso& (0+255),w,b
 20419  0033BA  A4D8               	btfss	status,2,c
 20420  0033BC  D035               	goto	i1l9738
 20421                           
 20422                           ; BSR set to: 0
 20423                           ;sysParams.h: 82: tiXcorte = (float)m3Xcorte / temp;
 20424  0033BE  C037  F015         	movff	_m3Xcorte,i1___fldiv@b
 20425  0033C2  C038  F016         	movff	_m3Xcorte+1,i1___fldiv@b+1
 20426  0033C6  C039  F017         	movff	_m3Xcorte+2,i1___fldiv@b+2
 20427  0033CA  C03A  F018         	movff	_m3Xcorte+3,i1___fldiv@b+3
 20428  0033CE  C060  F019         	movff	i1calcVars2ti@temp,i1___fldiv@a
 20429  0033D2  C061  F01A         	movff	i1calcVars2ti@temp+1,i1___fldiv@a+1
 20430  0033D6  C062  F01B         	movff	i1calcVars2ti@temp+2,i1___fldiv@a+2
 20431  0033DA  C063  F01C         	movff	i1calcVars2ti@temp+3,i1___fldiv@a+3
 20432  0033DE  EC54  F014         	call	i1___fldiv	;wreg free
 20433  0033E2  C015  F03B         	movff	?i1___fldiv,_tiXcorte
 20434  0033E6  C016  F03C         	movff	?i1___fldiv+1,_tiXcorte+1
 20435  0033EA  C017  F03D         	movff	?i1___fldiv+2,_tiXcorte+2
 20436  0033EE  C018  F03E         	movff	?i1___fldiv+3,_tiXcorte+3
 20437                           
 20438                           ;sysParams.h: 83: kgXcorte = (float)densidadMasa * m3Xcorte;
 20439  0033F2  C02F  F015         	movff	_densidadMasa,i1___flmul@b
 20440  0033F6  C030  F016         	movff	_densidadMasa+1,i1___flmul@b+1
 20441  0033FA  C031  F017         	movff	_densidadMasa+2,i1___flmul@b+2
 20442  0033FE  C032  F018         	movff	_densidadMasa+3,i1___flmul@b+3
 20443  003402  C037  F019         	movff	_m3Xcorte,i1___flmul@a
 20444  003406  C038  F01A         	movff	_m3Xcorte+1,i1___flmul@a+1
 20445  00340A  C039  F01B         	movff	_m3Xcorte+2,i1___flmul@a+2
 20446  00340E  C03A  F01C         	movff	_m3Xcorte+3,i1___flmul@a+3
 20447  003412  EC43  F011         	call	i1___flmul	;wreg free
 20448  003416  C015  F0DB         	movff	?i1___flmul,_kgXcorte
 20449  00341A  C016  F0DC         	movff	?i1___flmul+1,_kgXcorte+1
 20450  00341E  C017  F0DD         	movff	?i1___flmul+2,_kgXcorte+2
 20451  003422  C018  F0DE         	movff	?i1___flmul+3,_kgXcorte+3
 20452                           
 20453                           ;sysParams.h: 84: }else if(tVarProceso == 2) {
 20454  003426  0012               	return	
 20455  003428                     i1l9738:
 20456  003428  0E02               	movlw	2
 20457  00342A  0100               	movlb	0	; () banked
 20458  00342C  19E3               	xorwf	_tVarProceso& (0+255),w,b
 20459  00342E  A4D8               	btfss	status,2,c
 20460  003430  0012               	return	
 20461                           
 20462                           ; BSR set to: 0
 20463                           ;sysParams.h: 85: m3Xcorte = (float)temp * tiXcorte;
 20464  003432  C060  F015         	movff	i1calcVars2ti@temp,i1___flmul@b
 20465  003436  C061  F016         	movff	i1calcVars2ti@temp+1,i1___flmul@b+1
 20466  00343A  C062  F017         	movff	i1calcVars2ti@temp+2,i1___flmul@b+2
 20467  00343E  C063  F018         	movff	i1calcVars2ti@temp+3,i1___flmul@b+3
 20468  003442  C03B  F019         	movff	_tiXcorte,i1___flmul@a
 20469  003446  C03C  F01A         	movff	_tiXcorte+1,i1___flmul@a+1
 20470  00344A  C03D  F01B         	movff	_tiXcorte+2,i1___flmul@a+2
 20471  00344E  C03E  F01C         	movff	_tiXcorte+3,i1___flmul@a+3
 20472  003452  EC43  F011         	call	i1___flmul	;wreg free
 20473  003456  C015  F037         	movff	?i1___flmul,_m3Xcorte
 20474  00345A  C016  F038         	movff	?i1___flmul+1,_m3Xcorte+1
 20475  00345E  C017  F039         	movff	?i1___flmul+2,_m3Xcorte+2
 20476  003462  C018  F03A         	movff	?i1___flmul+3,_m3Xcorte+3
 20477                           
 20478                           ;sysParams.h: 86: kgXcorte = (float)densidadMasa * m3Xcorte;
 20479  003466  C02F  F015         	movff	_densidadMasa,i1___flmul@b
 20480  00346A  C030  F016         	movff	_densidadMasa+1,i1___flmul@b+1
 20481  00346E  C031  F017         	movff	_densidadMasa+2,i1___flmul@b+2
 20482  003472  C032  F018         	movff	_densidadMasa+3,i1___flmul@b+3
 20483  003476  C037  F019         	movff	_m3Xcorte,i1___flmul@a
 20484  00347A  C038  F01A         	movff	_m3Xcorte+1,i1___flmul@a+1
 20485  00347E  C039  F01B         	movff	_m3Xcorte+2,i1___flmul@a+2
 20486  003482  C03A  F01C         	movff	_m3Xcorte+3,i1___flmul@a+3
 20487  003486  EC43  F011         	call	i1___flmul	;wreg free
 20488  00348A  C015  F0DB         	movff	?i1___flmul,_kgXcorte
 20489  00348E  C016  F0DC         	movff	?i1___flmul+1,_kgXcorte+1
 20490  003492  C017  F0DD         	movff	?i1___flmul+2,_kgXcorte+2
 20491  003496  C018  F0DE         	movff	?i1___flmul+3,_kgXcorte+3
 20492  00349A  0012               	return	
 20493  00349C                     __end_ofi1_calcVars2ti:
 20494                           	opt stack 0
 20495                           pclatu	equ	0xFFB
 20496                           pclath	equ	0xFFA
 20497                           tblptru	equ	0xFF8
 20498                           tblptrh	equ	0xFF7
 20499                           tblptrl	equ	0xFF6
 20500                           tablat	equ	0xFF5
 20501                           prodh	equ	0xFF4
 20502                           prodl	equ	0xFF3
 20503                           intcon	equ	0xFF2
 20504                           postinc0	equ	0xFEE
 20505                           fsr0h	equ	0xFEA
 20506                           fsr0l	equ	0xFE9
 20507                           wreg	equ	0xFE8
 20508                           postdec1	equ	0xFE5
 20509                           fsr1h	equ	0xFE2
 20510                           fsr1l	equ	0xFE1
 20511                           bsr	equ	0xFE0
 20512                           indf2	equ	0xFDF
 20513                           postinc2	equ	0xFDE
 20514                           postdec2	equ	0xFDD
 20515                           plusw2	equ	0xFDB
 20516                           fsr2h	equ	0xFDA
 20517                           fsr2l	equ	0xFD9
 20518                           status	equ	0xFD8
 20519                           
 20520 ;; *************** function _sysParamInit *****************
 20521 ;; Defined at:
 20522 ;;		line 152 in file "source/sysParams.h"
 20523 ;; Parameters:    Size  Location     Type
 20524 ;;		None
 20525 ;; Auto vars:     Size  Location     Type
 20526 ;;		None
 20527 ;; Return value:  Size  Location     Type
 20528 ;;                  1    wreg      void 
 20529 ;; Registers used:
 20530 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20531 ;; Tracked objects:
 20532 ;;		On entry : 0/0
 20533 ;;		On exit  : 0/0
 20534 ;;		Unchanged: 0/0
 20535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20536 ;;      Params:         0       0       0       0       0       0       0
 20537 ;;      Locals:         0       0       0       0       0       0       0
 20538 ;;      Temps:          0       0       0       0       0       0       0
 20539 ;;      Totals:         0       0       0       0       0       0       0
 20540 ;;Total ram usage:        0 bytes
 20541 ;; Hardware stack levels used:    1
 20542 ;; Hardware stack levels required when called:    5
 20543 ;; This function calls:
 20544 ;;		_calcSysVars
 20545 ;;		_readEEPROM
 20546 ;; This function is called by:
 20547 ;;		_UARTint
 20548 ;; This function uses a non-reentrant model
 20549 ;;
 20550                           
 20551                           	psect	text78
 20552  0049C4                     __ptext78:
 20553                           	opt stack 0
 20554  0049C4                     _sysParamInit:
 20555                           	opt stack 13
 20556                           
 20557                           ;sysParams.h: 153: tVarProceso = readEEPROM(1);
 20558                           
 20559                           ;incstack = 0
 20560  0049C4  0E01               	movlw	1
 20561  0049C6  EC4E  F02F         	call	_readEEPROM
 20562  0049CA  0100               	movlb	0	; () banked
 20563  0049CC  6FE3               	movwf	_tVarProceso& (0+255),b
 20564                           
 20565                           ;sysParams.h: 154: fData.floatMB = readEEPROM(2);
 20566  0049CE  0E02               	movlw	2
 20567  0049D0  EC4E  F02F         	call	_readEEPROM
 20568  0049D4  0100               	movlb	0	; () banked
 20569  0049D6  6FCF               	movwf	(_fData+3)& (0+255),b
 20570                           
 20571                           ;sysParams.h: 155: fData.floatUB = readEEPROM(3);
 20572  0049D8  0E03               	movlw	3
 20573  0049DA  EC4E  F02F         	call	_readEEPROM
 20574  0049DE  0100               	movlb	0	; () banked
 20575  0049E0  6FCE               	movwf	(_fData+2)& (0+255),b
 20576                           
 20577                           ;sysParams.h: 156: fData.floatHB = readEEPROM(4);
 20578  0049E2  0E04               	movlw	4
 20579  0049E4  EC4E  F02F         	call	_readEEPROM
 20580  0049E8  0100               	movlb	0	; () banked
 20581  0049EA  6FCD               	movwf	(_fData+1)& (0+255),b
 20582                           
 20583                           ;sysParams.h: 157: fData.floatLB = readEEPROM(5);
 20584  0049EC  0E05               	movlw	5
 20585  0049EE  EC4E  F02F         	call	_readEEPROM
 20586  0049F2  0100               	movlb	0	; () banked
 20587  0049F4  6FCC               	movwf	_fData& (0+255),b
 20588                           
 20589                           ; BSR set to: 0
 20590                           ;sysParams.h: 158: tiXcorte = fData.floatdat;
 20591  0049F6  C0CC  F03B         	movff	_fData,_tiXcorte
 20592  0049FA  C0CD  F03C         	movff	_fData+1,_tiXcorte+1
 20593  0049FE  C0CE  F03D         	movff	_fData+2,_tiXcorte+2
 20594  004A02  C0CF  F03E         	movff	_fData+3,_tiXcorte+3
 20595                           
 20596                           ;sysParams.h: 159: i16Data.int16HB = readEEPROM(6);
 20597  004A06  0E06               	movlw	6
 20598  004A08  EC4E  F02F         	call	_readEEPROM
 20599  004A0C  0100               	movlb	0	; () banked
 20600  004A0E  6FD1               	movwf	(_i16Data+1)& (0+255),b
 20601                           
 20602                           ;sysParams.h: 160: i16Data.int16LB = readEEPROM(7);
 20603  004A10  0E07               	movlw	7
 20604  004A12  EC4E  F02F         	call	_readEEPROM
 20605  004A16  0100               	movlb	0	; () banked
 20606  004A18  6FD0               	movwf	_i16Data& (0+255),b
 20607                           
 20608                           ; BSR set to: 0
 20609                           ;sysParams.h: 161: numCortes = i16Data.int16dat;
 20610  004A1A  C0D0  F0DF         	movff	_i16Data,_numCortes
 20611  004A1E  C0D1  F0E0         	movff	_i16Data+1,_numCortes+1
 20612                           
 20613                           ;sysParams.h: 162: fData.floatMB = readEEPROM(8);
 20614  004A22  0E08               	movlw	8
 20615  004A24  EC4E  F02F         	call	_readEEPROM
 20616  004A28  0100               	movlb	0	; () banked
 20617  004A2A  6FCF               	movwf	(_fData+3)& (0+255),b
 20618                           
 20619                           ;sysParams.h: 163: fData.floatUB = readEEPROM(9);
 20620  004A2C  0E09               	movlw	9
 20621  004A2E  EC4E  F02F         	call	_readEEPROM
 20622  004A32  0100               	movlb	0	; () banked
 20623  004A34  6FCE               	movwf	(_fData+2)& (0+255),b
 20624                           
 20625                           ;sysParams.h: 164: fData.floatHB = readEEPROM(10);
 20626  004A36  0E0A               	movlw	10
 20627  004A38  EC4E  F02F         	call	_readEEPROM
 20628  004A3C  0100               	movlb	0	; () banked
 20629  004A3E  6FCD               	movwf	(_fData+1)& (0+255),b
 20630                           
 20631                           ;sysParams.h: 165: fData.floatLB = readEEPROM(11);
 20632  004A40  0E0B               	movlw	11
 20633  004A42  EC4E  F02F         	call	_readEEPROM
 20634  004A46  0100               	movlb	0	; () banked
 20635  004A48  6FCC               	movwf	_fData& (0+255),b
 20636                           
 20637                           ; BSR set to: 0
 20638                           ;sysParams.h: 166: diamTubo = fData.floatdat;
 20639  004A4A  C0CC  F033         	movff	_fData,_diamTubo
 20640  004A4E  C0CD  F034         	movff	_fData+1,_diamTubo+1
 20641  004A52  C0CE  F035         	movff	_fData+2,_diamTubo+2
 20642  004A56  C0CF  F036         	movff	_fData+3,_diamTubo+3
 20643                           
 20644                           ;sysParams.h: 167: fData.floatMB = readEEPROM(12);
 20645  004A5A  0E0C               	movlw	12
 20646  004A5C  EC4E  F02F         	call	_readEEPROM
 20647  004A60  0100               	movlb	0	; () banked
 20648  004A62  6FCF               	movwf	(_fData+3)& (0+255),b
 20649                           
 20650                           ;sysParams.h: 168: fData.floatUB = readEEPROM(13);
 20651  004A64  0E0D               	movlw	13
 20652  004A66  EC4E  F02F         	call	_readEEPROM
 20653  004A6A  0100               	movlb	0	; () banked
 20654  004A6C  6FCE               	movwf	(_fData+2)& (0+255),b
 20655                           
 20656                           ;sysParams.h: 169: fData.floatHB = readEEPROM(14);
 20657  004A6E  0E0E               	movlw	14
 20658  004A70  EC4E  F02F         	call	_readEEPROM
 20659  004A74  0100               	movlb	0	; () banked
 20660  004A76  6FCD               	movwf	(_fData+1)& (0+255),b
 20661                           
 20662                           ;sysParams.h: 170: fData.floatLB = readEEPROM(15);
 20663  004A78  0E0F               	movlw	15
 20664  004A7A  EC4E  F02F         	call	_readEEPROM
 20665  004A7E  0100               	movlb	0	; () banked
 20666  004A80  6FCC               	movwf	_fData& (0+255),b
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;sysParams.h: 171: densidadMasa = fData.floatdat;
 20670  004A82  C0CC  F02F         	movff	_fData,_densidadMasa
 20671  004A86  C0CD  F030         	movff	_fData+1,_densidadMasa+1
 20672  004A8A  C0CE  F031         	movff	_fData+2,_densidadMasa+2
 20673  004A8E  C0CF  F032         	movff	_fData+3,_densidadMasa+3
 20674                           
 20675                           ;sysParams.h: 172: fData.floatMB = readEEPROM(16);
 20676  004A92  0E10               	movlw	16
 20677  004A94  EC4E  F02F         	call	_readEEPROM
 20678  004A98  0100               	movlb	0	; () banked
 20679  004A9A  6FCF               	movwf	(_fData+3)& (0+255),b
 20680                           
 20681                           ;sysParams.h: 173: fData.floatUB = readEEPROM(17);
 20682  004A9C  0E11               	movlw	17
 20683  004A9E  EC4E  F02F         	call	_readEEPROM
 20684  004AA2  0100               	movlb	0	; () banked
 20685  004AA4  6FCE               	movwf	(_fData+2)& (0+255),b
 20686                           
 20687                           ;sysParams.h: 174: fData.floatHB = readEEPROM(18);
 20688  004AA6  0E12               	movlw	18
 20689  004AA8  EC4E  F02F         	call	_readEEPROM
 20690  004AAC  0100               	movlb	0	; () banked
 20691  004AAE  6FCD               	movwf	(_fData+1)& (0+255),b
 20692                           
 20693                           ;sysParams.h: 175: fData.floatLB = readEEPROM(19);
 20694  004AB0  0E13               	movlw	19
 20695  004AB2  EC4E  F02F         	call	_readEEPROM
 20696  004AB6  0100               	movlb	0	; () banked
 20697  004AB8  6FCC               	movwf	_fData& (0+255),b
 20698                           
 20699                           ; BSR set to: 0
 20700                           ;sysParams.h: 176: velocidadMasa = fData.floatdat;
 20701  004ABA  C0CC  F03F         	movff	_fData,_velocidadMasa
 20702  004ABE  C0CD  F040         	movff	_fData+1,_velocidadMasa+1
 20703  004AC2  C0CE  F041         	movff	_fData+2,_velocidadMasa+2
 20704  004AC6  C0CF  F042         	movff	_fData+3,_velocidadMasa+3
 20705                           
 20706                           ; BSR set to: 0
 20707                           ;sysParams.h: 177: calcSysVars();
 20708  004ACA  EC44  F020         	call	_calcSysVars	;wreg free
 20709  004ACE  0012               	return		;funcret
 20710  004AD0                     __end_of_sysParamInit:
 20711                           	opt stack 0
 20712                           pclatu	equ	0xFFB
 20713                           pclath	equ	0xFFA
 20714                           tblptru	equ	0xFF8
 20715                           tblptrh	equ	0xFF7
 20716                           tblptrl	equ	0xFF6
 20717                           tablat	equ	0xFF5
 20718                           prodh	equ	0xFF4
 20719                           prodl	equ	0xFF3
 20720                           intcon	equ	0xFF2
 20721                           postinc0	equ	0xFEE
 20722                           fsr0h	equ	0xFEA
 20723                           fsr0l	equ	0xFE9
 20724                           wreg	equ	0xFE8
 20725                           postdec1	equ	0xFE5
 20726                           fsr1h	equ	0xFE2
 20727                           fsr1l	equ	0xFE1
 20728                           bsr	equ	0xFE0
 20729                           indf2	equ	0xFDF
 20730                           postinc2	equ	0xFDE
 20731                           postdec2	equ	0xFDD
 20732                           plusw2	equ	0xFDB
 20733                           fsr2h	equ	0xFDA
 20734                           fsr2l	equ	0xFD9
 20735                           status	equ	0xFD8
 20736                           
 20737 ;; *************** function _readEEPROM *****************
 20738 ;; Defined at:
 20739 ;;		line 47 in file "source/sysParams.h"
 20740 ;; Parameters:    Size  Location     Type
 20741 ;;  adr             1    wreg     unsigned char 
 20742 ;; Auto vars:     Size  Location     Type
 20743 ;;  adr             1   20[COMRAM] unsigned char 
 20744 ;; Return value:  Size  Location     Type
 20745 ;;                  1    wreg      unsigned char 
 20746 ;; Registers used:
 20747 ;;		wreg, status,2
 20748 ;; Tracked objects:
 20749 ;;		On entry : 0/0
 20750 ;;		On exit  : 0/0
 20751 ;;		Unchanged: 0/0
 20752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20753 ;;      Params:         0       0       0       0       0       0       0
 20754 ;;      Locals:         1       0       0       0       0       0       0
 20755 ;;      Temps:          0       0       0       0       0       0       0
 20756 ;;      Totals:         1       0       0       0       0       0       0
 20757 ;;Total ram usage:        1 bytes
 20758 ;; Hardware stack levels used:    1
 20759 ;; Hardware stack levels required when called:    3
 20760 ;; This function calls:
 20761 ;;		Nothing
 20762 ;; This function is called by:
 20763 ;;		_sysParamInit
 20764 ;; This function uses a non-reentrant model
 20765 ;;
 20766                           
 20767                           	psect	text79
 20768  005E9C                     __ptext79:
 20769                           	opt stack 0
 20770  005E9C                     _readEEPROM:
 20771                           	opt stack 14
 20772                           
 20773                           ;incstack = 0
 20774                           ;readEEPROM@adr stored from wreg
 20775  005E9C  6E15               	movwf	readEEPROM@adr,c
 20776                           
 20777                           ;sysParams.h: 48: EEADR = adr;
 20778  005E9E  C015  FFA9         	movff	readEEPROM@adr,4009	;volatile
 20779                           
 20780                           ;sysParams.h: 49: EECON1bits.EEPGD = 0;
 20781  005EA2  9EA6               	bcf	4006,7,c	;volatile
 20782                           
 20783                           ;sysParams.h: 50: EECON1bits.CFGS = 0;
 20784  005EA4  9CA6               	bcf	4006,6,c	;volatile
 20785                           
 20786                           ;sysParams.h: 51: EECON1bits.RD = 1;
 20787  005EA6  80A6               	bsf	4006,0,c	;volatile
 20788  005EA8                     i1l288:
 20789  005EA8  B0A6               	btfsc	4006,0,c	;volatile
 20790  005EAA  D7FE               	goto	i1l288
 20791                           
 20792                           ;sysParams.h: 53: return EEDATA;
 20793  005EAC  50A8               	movf	4008,w,c	;volatile
 20794  005EAE  0012               	return		;funcret
 20795  005EB0                     __end_of_readEEPROM:
 20796                           	opt stack 0
 20797                           pclatu	equ	0xFFB
 20798                           pclath	equ	0xFFA
 20799                           tblptru	equ	0xFF8
 20800                           tblptrh	equ	0xFF7
 20801                           tblptrl	equ	0xFF6
 20802                           tablat	equ	0xFF5
 20803                           prodh	equ	0xFF4
 20804                           prodl	equ	0xFF3
 20805                           intcon	equ	0xFF2
 20806                           postinc0	equ	0xFEE
 20807                           fsr0h	equ	0xFEA
 20808                           fsr0l	equ	0xFE9
 20809                           wreg	equ	0xFE8
 20810                           postdec1	equ	0xFE5
 20811                           fsr1h	equ	0xFE2
 20812                           fsr1l	equ	0xFE1
 20813                           bsr	equ	0xFE0
 20814                           indf2	equ	0xFDF
 20815                           postinc2	equ	0xFDE
 20816                           postdec2	equ	0xFDD
 20817                           plusw2	equ	0xFDB
 20818                           fsr2h	equ	0xFDA
 20819                           fsr2l	equ	0xFD9
 20820                           status	equ	0xFD8
 20821                           
 20822 ;; *************** function _calcSysVars *****************
 20823 ;; Defined at:
 20824 ;;		line 62 in file "source/sysParams.h"
 20825 ;; Parameters:    Size  Location     Type
 20826 ;;		None
 20827 ;; Auto vars:     Size  Location     Type
 20828 ;;  temp            4    0[BANK0 ] float 
 20829 ;; Return value:  Size  Location     Type
 20830 ;;                  1    wreg      void 
 20831 ;; Registers used:
 20832 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 20833 ;; Tracked objects:
 20834 ;;		On entry : 0/0
 20835 ;;		On exit  : 0/0
 20836 ;;		Unchanged: 0/0
 20837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 20838 ;;      Params:         0       0       0       0       0       0       0
 20839 ;;      Locals:         0       4       0       0       0       0       0
 20840 ;;      Temps:          0       0       0       0       0       0       0
 20841 ;;      Totals:         0       4       0       0       0       0       0
 20842 ;;Total ram usage:        4 bytes
 20843 ;; Hardware stack levels used:    1
 20844 ;; Hardware stack levels required when called:    4
 20845 ;; This function calls:
 20846 ;;		i1___fldiv
 20847 ;;		i1___flmul
 20848 ;; This function is called by:
 20849 ;;		_sysParamInit
 20850 ;; This function uses a non-reentrant model
 20851 ;;
 20852                           
 20853                           	psect	text80
 20854  004088                     __ptext80:
 20855                           	opt stack 0
 20856  004088                     _calcSysVars:
 20857                           	opt stack 13
 20858                           
 20859                           ;sysParams.h: 63: float temp = 0;
 20860                           
 20861                           ;incstack = 0
 20862  004088  0E00               	movlw	0
 20863  00408A  0100               	movlb	0	; () banked
 20864  00408C  6F60               	movwf	calcSysVars@temp& (0+255),b
 20865  00408E  0E00               	movlw	0
 20866  004090  6F61               	movwf	(calcSysVars@temp+1)& (0+255),b
 20867  004092  0E00               	movlw	0
 20868  004094  6F62               	movwf	(calcSysVars@temp+2)& (0+255),b
 20869  004096  0E00               	movlw	0
 20870  004098  6F63               	movwf	(calcSysVars@temp+3)& (0+255),b
 20871                           
 20872                           ; BSR set to: 0
 20873                           ;sysParams.h: 64: temp = (float)diamTubo / 2000.0f;
 20874  00409A  C033  F015         	movff	_diamTubo,i1___fldiv@b
 20875  00409E  C034  F016         	movff	_diamTubo+1,i1___fldiv@b+1
 20876  0040A2  C035  F017         	movff	_diamTubo+2,i1___fldiv@b+2
 20877  0040A6  C036  F018         	movff	_diamTubo+3,i1___fldiv@b+3
 20878  0040AA  0E00               	movlw	0
 20879  0040AC  6E19               	movwf	i1___fldiv@a,c
 20880  0040AE  0E00               	movlw	0
 20881  0040B0  6E1A               	movwf	i1___fldiv@a+1,c
 20882  0040B2  0EFA               	movlw	250
 20883  0040B4  6E1B               	movwf	i1___fldiv@a+2,c
 20884  0040B6  0E44               	movlw	68
 20885  0040B8  6E1C               	movwf	i1___fldiv@a+3,c
 20886  0040BA  EC54  F014         	call	i1___fldiv	;wreg free
 20887  0040BE  C015  F060         	movff	?i1___fldiv,calcSysVars@temp
 20888  0040C2  C016  F061         	movff	?i1___fldiv+1,calcSysVars@temp+1
 20889  0040C6  C017  F062         	movff	?i1___fldiv+2,calcSysVars@temp+2
 20890  0040CA  C018  F063         	movff	?i1___fldiv+3,calcSysVars@temp+3
 20891                           
 20892                           ;sysParams.h: 65: temp *= temp;
 20893  0040CE  C060  F015         	movff	calcSysVars@temp,i1___flmul@b
 20894  0040D2  C061  F016         	movff	calcSysVars@temp+1,i1___flmul@b+1
 20895  0040D6  C062  F017         	movff	calcSysVars@temp+2,i1___flmul@b+2
 20896  0040DA  C063  F018         	movff	calcSysVars@temp+3,i1___flmul@b+3
 20897  0040DE  C060  F019         	movff	calcSysVars@temp,i1___flmul@a
 20898  0040E2  C061  F01A         	movff	calcSysVars@temp+1,i1___flmul@a+1
 20899  0040E6  C062  F01B         	movff	calcSysVars@temp+2,i1___flmul@a+2
 20900  0040EA  C063  F01C         	movff	calcSysVars@temp+3,i1___flmul@a+3
 20901  0040EE  EC43  F011         	call	i1___flmul	;wreg free
 20902  0040F2  C015  F060         	movff	?i1___flmul,calcSysVars@temp
 20903  0040F6  C016  F061         	movff	?i1___flmul+1,calcSysVars@temp+1
 20904  0040FA  C017  F062         	movff	?i1___flmul+2,calcSysVars@temp+2
 20905  0040FE  C018  F063         	movff	?i1___flmul+3,calcSysVars@temp+3
 20906                           
 20907                           ;sysParams.h: 66: temp *= pi;
 20908  004102  C060  F015         	movff	calcSysVars@temp,i1___flmul@b
 20909  004106  C061  F016         	movff	calcSysVars@temp+1,i1___flmul@b+1
 20910  00410A  C062  F017         	movff	calcSysVars@temp+2,i1___flmul@b+2
 20911  00410E  C063  F018         	movff	calcSysVars@temp+3,i1___flmul@b+3
 20912  004112  C175  F019         	movff	_pi,i1___flmul@a
 20913  004116  C176  F01A         	movff	_pi+1,i1___flmul@a+1
 20914  00411A  C177  F01B         	movff	_pi+2,i1___flmul@a+2
 20915  00411E  C178  F01C         	movff	_pi+3,i1___flmul@a+3
 20916  004122  EC43  F011         	call	i1___flmul	;wreg free
 20917  004126  C015  F060         	movff	?i1___flmul,calcSysVars@temp
 20918  00412A  C016  F061         	movff	?i1___flmul+1,calcSysVars@temp+1
 20919  00412E  C017  F062         	movff	?i1___flmul+2,calcSysVars@temp+2
 20920  004132  C018  F063         	movff	?i1___flmul+3,calcSysVars@temp+3
 20921                           
 20922                           ;sysParams.h: 67: temp *= velocidadMasa;
 20923  004136  C060  F015         	movff	calcSysVars@temp,i1___flmul@b
 20924  00413A  C061  F016         	movff	calcSysVars@temp+1,i1___flmul@b+1
 20925  00413E  C062  F017         	movff	calcSysVars@temp+2,i1___flmul@b+2
 20926  004142  C063  F018         	movff	calcSysVars@temp+3,i1___flmul@b+3
 20927  004146  C03F  F019         	movff	_velocidadMasa,i1___flmul@a
 20928  00414A  C040  F01A         	movff	_velocidadMasa+1,i1___flmul@a+1
 20929  00414E  C041  F01B         	movff	_velocidadMasa+2,i1___flmul@a+2
 20930  004152  C042  F01C         	movff	_velocidadMasa+3,i1___flmul@a+3
 20931  004156  EC43  F011         	call	i1___flmul	;wreg free
 20932  00415A  C015  F060         	movff	?i1___flmul,calcSysVars@temp
 20933  00415E  C016  F061         	movff	?i1___flmul+1,calcSysVars@temp+1
 20934  004162  C017  F062         	movff	?i1___flmul+2,calcSysVars@temp+2
 20935  004166  C018  F063         	movff	?i1___flmul+3,calcSysVars@temp+3
 20936                           
 20937                           ;sysParams.h: 68: m3Xcorte = (float)temp * tiXcorte;
 20938  00416A  C060  F015         	movff	calcSysVars@temp,i1___flmul@b
 20939  00416E  C061  F016         	movff	calcSysVars@temp+1,i1___flmul@b+1
 20940  004172  C062  F017         	movff	calcSysVars@temp+2,i1___flmul@b+2
 20941  004176  C063  F018         	movff	calcSysVars@temp+3,i1___flmul@b+3
 20942  00417A  C03B  F019         	movff	_tiXcorte,i1___flmul@a
 20943  00417E  C03C  F01A         	movff	_tiXcorte+1,i1___flmul@a+1
 20944  004182  C03D  F01B         	movff	_tiXcorte+2,i1___flmul@a+2
 20945  004186  C03E  F01C         	movff	_tiXcorte+3,i1___flmul@a+3
 20946  00418A  EC43  F011         	call	i1___flmul	;wreg free
 20947  00418E  C015  F037         	movff	?i1___flmul,_m3Xcorte
 20948  004192  C016  F038         	movff	?i1___flmul+1,_m3Xcorte+1
 20949  004196  C017  F039         	movff	?i1___flmul+2,_m3Xcorte+2
 20950  00419A  C018  F03A         	movff	?i1___flmul+3,_m3Xcorte+3
 20951                           
 20952                           ;sysParams.h: 69: kgXcorte = (float)densidadMasa * m3Xcorte;
 20953  00419E  C02F  F015         	movff	_densidadMasa,i1___flmul@b
 20954  0041A2  C030  F016         	movff	_densidadMasa+1,i1___flmul@b+1
 20955  0041A6  C031  F017         	movff	_densidadMasa+2,i1___flmul@b+2
 20956  0041AA  C032  F018         	movff	_densidadMasa+3,i1___flmul@b+3
 20957  0041AE  C037  F019         	movff	_m3Xcorte,i1___flmul@a
 20958  0041B2  C038  F01A         	movff	_m3Xcorte+1,i1___flmul@a+1
 20959  0041B6  C039  F01B         	movff	_m3Xcorte+2,i1___flmul@a+2
 20960  0041BA  C03A  F01C         	movff	_m3Xcorte+3,i1___flmul@a+3
 20961  0041BE  EC43  F011         	call	i1___flmul	;wreg free
 20962  0041C2  C015  F0DB         	movff	?i1___flmul,_kgXcorte
 20963  0041C6  C016  F0DC         	movff	?i1___flmul+1,_kgXcorte+1
 20964  0041CA  C017  F0DD         	movff	?i1___flmul+2,_kgXcorte+2
 20965  0041CE  C018  F0DE         	movff	?i1___flmul+3,_kgXcorte+3
 20966  0041D2  0012               	return		;funcret
 20967  0041D4                     __end_of_calcSysVars:
 20968                           	opt stack 0
 20969                           pclatu	equ	0xFFB
 20970                           pclath	equ	0xFFA
 20971                           tblptru	equ	0xFF8
 20972                           tblptrh	equ	0xFF7
 20973                           tblptrl	equ	0xFF6
 20974                           tablat	equ	0xFF5
 20975                           prodh	equ	0xFF4
 20976                           prodl	equ	0xFF3
 20977                           intcon	equ	0xFF2
 20978                           postinc0	equ	0xFEE
 20979                           fsr0h	equ	0xFEA
 20980                           fsr0l	equ	0xFE9
 20981                           wreg	equ	0xFE8
 20982                           postdec1	equ	0xFE5
 20983                           fsr1h	equ	0xFE2
 20984                           fsr1l	equ	0xFE1
 20985                           bsr	equ	0xFE0
 20986                           indf2	equ	0xFDF
 20987                           postinc2	equ	0xFDE
 20988                           postdec2	equ	0xFDD
 20989                           plusw2	equ	0xFDB
 20990                           fsr2h	equ	0xFDA
 20991                           fsr2l	equ	0xFD9
 20992                           status	equ	0xFD8
 20993                           
 20994 ;; *************** function i1___flmul *****************
 20995 ;; Defined at:
 20996 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 20997 ;; Parameters:    Size  Location     Type
 20998 ;;  b               4   20[COMRAM] void 
 20999 ;;  a               4   24[COMRAM] void 
 21000 ;; Auto vars:     Size  Location     Type
 21001 ;;  __flmul         4   39[COMRAM] struct .
 21002 ;;  __flmul         4   34[COMRAM] unsigned long 
 21003 ;;  __flmul         2   43[COMRAM] struct .
 21004 ;;  __flmul         1   38[COMRAM] unsigned char 
 21005 ;;  __flmul         1   33[COMRAM] unsigned char 
 21006 ;;  __flmul         1   32[COMRAM] unsigned char 
 21007 ;; Return value:  Size  Location     Type
 21008 ;;                  4   20[COMRAM] unsigned char 
 21009 ;; Registers used:
 21010 ;;		wreg, status,2, status,0, prodl, prodh
 21011 ;; Tracked objects:
 21012 ;;		On entry : 0/0
 21013 ;;		On exit  : 0/0
 21014 ;;		Unchanged: 0/0
 21015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21016 ;;      Params:         8       0       0       0       0       0       0
 21017 ;;      Locals:        13       0       0       0       0       0       0
 21018 ;;      Temps:          4       0       0       0       0       0       0
 21019 ;;      Totals:        25       0       0       0       0       0       0
 21020 ;;Total ram usage:       25 bytes
 21021 ;; Hardware stack levels used:    1
 21022 ;; Hardware stack levels required when called:    3
 21023 ;; This function calls:
 21024 ;;		Nothing
 21025 ;; This function is called by:
 21026 ;;		_calcSysVars
 21027 ;;		i1_calcVars2ti
 21028 ;; This function uses a non-reentrant model
 21029 ;;
 21030                           
 21031                           	psect	text81
 21032  002286                     __ptext81:
 21033                           	opt stack 0
 21034  002286                     i1___flmul:
 21035                           	opt stack 13
 21036                           
 21037                           ;incstack = 0
 21038  002286  5018               	movf	i1___flmul@b+3,w,c
 21039  002288  0B80               	andlw	128
 21040  00228A  6E21               	movwf	i1___flmul@sign,c
 21041  00228C  5018               	movf	i1___flmul@b+3,w,c
 21042  00228E  2418               	addwf	i1___flmul@b+3,w,c
 21043  002290  6E27               	movwf	i1___flmul@bexp,c
 21044  002292  BE17               	btfsc	i1___flmul@b+2,7,c
 21045  002294  8027               	bsf	i1___flmul@bexp,0,c
 21046  002296  5027               	movf	i1___flmul@bexp,w,c
 21047  002298  B4D8               	btfsc	status,2,c
 21048  00229A  D00D               	goto	i1l9466
 21049  00229C  2827               	incf	i1___flmul@bexp,w,c
 21050  00229E  A4D8               	btfss	status,2,c
 21051  0022A0  D008               	goto	i1l9464
 21052  0022A2  0E00               	movlw	0
 21053  0022A4  6E15               	movwf	i1___flmul@b,c
 21054  0022A6  0E00               	movlw	0
 21055  0022A8  6E16               	movwf	i1___flmul@b+1,c
 21056  0022AA  0E00               	movlw	0
 21057  0022AC  6E17               	movwf	i1___flmul@b+2,c
 21058  0022AE  0E00               	movlw	0
 21059  0022B0  6E18               	movwf	i1___flmul@b+3,c
 21060  0022B2                     i1l9464:
 21061  0022B2  8E17               	bsf	i1___flmul@b+2,7,c
 21062  0022B4  D008               	goto	i1l9468
 21063  0022B6                     i1l9466:
 21064  0022B6  0E00               	movlw	0
 21065  0022B8  6E15               	movwf	i1___flmul@b,c
 21066  0022BA  0E00               	movlw	0
 21067  0022BC  6E16               	movwf	i1___flmul@b+1,c
 21068  0022BE  0E00               	movlw	0
 21069  0022C0  6E17               	movwf	i1___flmul@b+2,c
 21070  0022C2  0E00               	movlw	0
 21071  0022C4  6E18               	movwf	i1___flmul@b+3,c
 21072  0022C6                     i1l9468:
 21073  0022C6  501C               	movf	i1___flmul@a+3,w,c
 21074  0022C8  0B80               	andlw	128
 21075  0022CA  1A21               	xorwf	i1___flmul@sign,f,c
 21076  0022CC  501C               	movf	i1___flmul@a+3,w,c
 21077  0022CE  241C               	addwf	i1___flmul@a+3,w,c
 21078  0022D0  6E22               	movwf	i1___flmul@aexp,c
 21079  0022D2  BE1B               	btfsc	i1___flmul@a+2,7,c
 21080  0022D4  8022               	bsf	i1___flmul@aexp,0,c
 21081  0022D6  5022               	movf	i1___flmul@aexp,w,c
 21082  0022D8  B4D8               	btfsc	status,2,c
 21083  0022DA  D00D               	goto	i1l9484
 21084  0022DC  2822               	incf	i1___flmul@aexp,w,c
 21085  0022DE  A4D8               	btfss	status,2,c
 21086  0022E0  D008               	goto	i1l9482
 21087  0022E2  0E00               	movlw	0
 21088  0022E4  6E19               	movwf	i1___flmul@a,c
 21089  0022E6  0E00               	movlw	0
 21090  0022E8  6E1A               	movwf	i1___flmul@a+1,c
 21091  0022EA  0E00               	movlw	0
 21092  0022EC  6E1B               	movwf	i1___flmul@a+2,c
 21093  0022EE  0E00               	movlw	0
 21094  0022F0  6E1C               	movwf	i1___flmul@a+3,c
 21095  0022F2                     i1l9482:
 21096  0022F2  8E1B               	bsf	i1___flmul@a+2,7,c
 21097  0022F4  D008               	goto	i1l1512
 21098  0022F6                     i1l9484:
 21099  0022F6  0E00               	movlw	0
 21100  0022F8  6E19               	movwf	i1___flmul@a,c
 21101  0022FA  0E00               	movlw	0
 21102  0022FC  6E1A               	movwf	i1___flmul@a+1,c
 21103  0022FE  0E00               	movlw	0
 21104  002300  6E1B               	movwf	i1___flmul@a+2,c
 21105  002302  0E00               	movlw	0
 21106  002304  6E1C               	movwf	i1___flmul@a+3,c
 21107  002306                     i1l1512:
 21108  002306  5022               	movf	i1___flmul@aexp,w,c
 21109  002308  B4D8               	btfsc	status,2,c
 21110  00230A  D003               	goto	i1l9488
 21111  00230C  5027               	movf	i1___flmul@bexp,w,c
 21112  00230E  A4D8               	btfss	status,2,c
 21113  002310  D009               	goto	i1l9492
 21114  002312                     i1l9488:
 21115  002312  0E00               	movlw	0
 21116  002314  6E15               	movwf	?i1___flmul,c
 21117  002316  0E00               	movlw	0
 21118  002318  6E16               	movwf	?i1___flmul+1,c
 21119  00231A  0E00               	movlw	0
 21120  00231C  6E17               	movwf	?i1___flmul+2,c
 21121  00231E  0E00               	movlw	0
 21122  002320  6E18               	movwf	?i1___flmul+3,c
 21123  002322  0012               	return	
 21124  002324                     i1l9492:
 21125  002324  501B               	movf	i1___flmul@a+2,w,c
 21126  002326  0215               	mulwf	i1___flmul@b,c
 21127  002328  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21128  00232C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21129  002330  502C               	movf	i1___flmul@temp,w,c
 21130  002332  6E23               	movwf	i1___flmul@grs,c
 21131  002334  6A24               	clrf	i1___flmul@grs+1,c
 21132  002336  6A25               	clrf	i1___flmul@grs+2,c
 21133  002338  6A26               	clrf	i1___flmul@grs+3,c
 21134  00233A  502D               	movf	i1___flmul@temp+1,w,c
 21135  00233C  6E28               	movwf	i1___flmul@prod,c
 21136  00233E  6A29               	clrf	i1___flmul@prod+1,c
 21137  002340  6A2A               	clrf	i1___flmul@prod+2,c
 21138  002342  6A2B               	clrf	i1___flmul@prod+3,c
 21139  002344  501A               	movf	i1___flmul@a+1,w,c
 21140  002346  0216               	mulwf	i1___flmul@b+1,c
 21141  002348  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21142  00234C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21143  002350  502C               	movf	i1___flmul@temp,w,c
 21144  002352  2623               	addwf	i1___flmul@grs,f,c
 21145  002354  0E00               	movlw	0
 21146  002356  2224               	addwfc	i1___flmul@grs+1,f,c
 21147  002358  2225               	addwfc	i1___flmul@grs+2,f,c
 21148  00235A  2226               	addwfc	i1___flmul@grs+3,f,c
 21149  00235C  502D               	movf	i1___flmul@temp+1,w,c
 21150  00235E  2628               	addwf	i1___flmul@prod,f,c
 21151  002360  0E00               	movlw	0
 21152  002362  2229               	addwfc	i1___flmul@prod+1,f,c
 21153  002364  222A               	addwfc	i1___flmul@prod+2,f,c
 21154  002366  222B               	addwfc	i1___flmul@prod+3,f,c
 21155  002368  5019               	movf	i1___flmul@a,w,c
 21156  00236A  0217               	mulwf	i1___flmul@b+2,c
 21157  00236C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21158  002370  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21159  002374  502C               	movf	i1___flmul@temp,w,c
 21160  002376  2623               	addwf	i1___flmul@grs,f,c
 21161  002378  0E00               	movlw	0
 21162  00237A  2224               	addwfc	i1___flmul@grs+1,f,c
 21163  00237C  2225               	addwfc	i1___flmul@grs+2,f,c
 21164  00237E  2226               	addwfc	i1___flmul@grs+3,f,c
 21165  002380  502D               	movf	i1___flmul@temp+1,w,c
 21166  002382  2628               	addwf	i1___flmul@prod,f,c
 21167  002384  0E00               	movlw	0
 21168  002386  2229               	addwfc	i1___flmul@prod+1,f,c
 21169  002388  222A               	addwfc	i1___flmul@prod+2,f,c
 21170  00238A  222B               	addwfc	i1___flmul@prod+3,f,c
 21171  00238C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21172  002390  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21173  002394  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 21174  002398  6A23               	clrf	i1___flmul@grs,c
 21175  00239A  5019               	movf	i1___flmul@a,w,c
 21176  00239C  0216               	mulwf	i1___flmul@b+1,c
 21177  00239E  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21178  0023A2  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21179  0023A6  502C               	movf	i1___flmul@temp,w,c
 21180  0023A8  2623               	addwf	i1___flmul@grs,f,c
 21181  0023AA  502D               	movf	i1___flmul@temp+1,w,c
 21182  0023AC  2224               	addwfc	i1___flmul@grs+1,f,c
 21183  0023AE  0E00               	movlw	0
 21184  0023B0  2225               	addwfc	i1___flmul@grs+2,f,c
 21185  0023B2  0E00               	movlw	0
 21186  0023B4  2226               	addwfc	i1___flmul@grs+3,f,c
 21187  0023B6  501A               	movf	i1___flmul@a+1,w,c
 21188  0023B8  0215               	mulwf	i1___flmul@b,c
 21189  0023BA  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21190  0023BE  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21191  0023C2  502C               	movf	i1___flmul@temp,w,c
 21192  0023C4  2623               	addwf	i1___flmul@grs,f,c
 21193  0023C6  502D               	movf	i1___flmul@temp+1,w,c
 21194  0023C8  2224               	addwfc	i1___flmul@grs+1,f,c
 21195  0023CA  0E00               	movlw	0
 21196  0023CC  2225               	addwfc	i1___flmul@grs+2,f,c
 21197  0023CE  0E00               	movlw	0
 21198  0023D0  2226               	addwfc	i1___flmul@grs+3,f,c
 21199  0023D2  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21200  0023D6  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21201  0023DA  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 21202  0023DE  6A23               	clrf	i1___flmul@grs,c
 21203  0023E0  5019               	movf	i1___flmul@a,w,c
 21204  0023E2  0215               	mulwf	i1___flmul@b,c
 21205  0023E4  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21206  0023E8  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21207  0023EC  502C               	movf	i1___flmul@temp,w,c
 21208  0023EE  2623               	addwf	i1___flmul@grs,f,c
 21209  0023F0  502D               	movf	i1___flmul@temp+1,w,c
 21210  0023F2  2224               	addwfc	i1___flmul@grs+1,f,c
 21211  0023F4  0E00               	movlw	0
 21212  0023F6  2225               	addwfc	i1___flmul@grs+2,f,c
 21213  0023F8  0E00               	movlw	0
 21214  0023FA  2226               	addwfc	i1___flmul@grs+3,f,c
 21215  0023FC  501B               	movf	i1___flmul@a+2,w,c
 21216  0023FE  0216               	mulwf	i1___flmul@b+1,c
 21217  002400  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21218  002404  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21219  002408  502C               	movf	i1___flmul@temp,w,c
 21220  00240A  2628               	addwf	i1___flmul@prod,f,c
 21221  00240C  502D               	movf	i1___flmul@temp+1,w,c
 21222  00240E  2229               	addwfc	i1___flmul@prod+1,f,c
 21223  002410  0E00               	movlw	0
 21224  002412  222A               	addwfc	i1___flmul@prod+2,f,c
 21225  002414  0E00               	movlw	0
 21226  002416  222B               	addwfc	i1___flmul@prod+3,f,c
 21227  002418  501A               	movf	i1___flmul@a+1,w,c
 21228  00241A  0217               	mulwf	i1___flmul@b+2,c
 21229  00241C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21230  002420  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21231  002424  502C               	movf	i1___flmul@temp,w,c
 21232  002426  2628               	addwf	i1___flmul@prod,f,c
 21233  002428  502D               	movf	i1___flmul@temp+1,w,c
 21234  00242A  2229               	addwfc	i1___flmul@prod+1,f,c
 21235  00242C  0E00               	movlw	0
 21236  00242E  222A               	addwfc	i1___flmul@prod+2,f,c
 21237  002430  0E00               	movlw	0
 21238  002432  222B               	addwfc	i1___flmul@prod+3,f,c
 21239  002434  501B               	movf	i1___flmul@a+2,w,c
 21240  002436  0217               	mulwf	i1___flmul@b+2,c
 21241  002438  CFF3 F02C          	movff	prodl,i1___flmul@temp
 21242  00243C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 21243  002440  502C               	movf	i1___flmul@temp,w,c
 21244  002442  6E1D               	movwf	??i1___flmul& (0+255),c
 21245  002444  502D               	movf	i1___flmul@temp+1,w,c
 21246  002446  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 21247  002448  6A1F               	clrf	(??i1___flmul+2)& (0+255),c
 21248  00244A  6A20               	clrf	(??i1___flmul+3)& (0+255),c
 21249  00244C  C01F  F020         	movff	??i1___flmul+2,??i1___flmul+3
 21250  002450  C01E  F01F         	movff	??i1___flmul+1,??i1___flmul+2
 21251  002454  C01D  F01E         	movff	??i1___flmul,??i1___flmul+1
 21252  002458  6A1D               	clrf	??i1___flmul,c
 21253  00245A  501D               	movf	??i1___flmul,w,c
 21254  00245C  2628               	addwf	i1___flmul@prod,f,c
 21255  00245E  501E               	movf	??i1___flmul+1,w,c
 21256  002460  2229               	addwfc	i1___flmul@prod+1,f,c
 21257  002462  501F               	movf	??i1___flmul+2,w,c
 21258  002464  222A               	addwfc	i1___flmul@prod+2,f,c
 21259  002466  5020               	movf	??i1___flmul+3,w,c
 21260  002468  222B               	addwfc	i1___flmul@prod+3,f,c
 21261  00246A  C023  F01D         	movff	i1___flmul@grs,??i1___flmul
 21262  00246E  C024  F01E         	movff	i1___flmul@grs+1,??i1___flmul+1
 21263  002472  C025  F01F         	movff	i1___flmul@grs+2,??i1___flmul+2
 21264  002476  C026  F020         	movff	i1___flmul@grs+3,??i1___flmul+3
 21265  00247A  0E19               	movlw	25
 21266  00247C  D005               	goto	i1u1211_20
 21267  00247E                     i1u1211_25:
 21268  00247E  90D8               	bcf	status,0,c
 21269  002480  3220               	rrcf	??i1___flmul+3,f,c
 21270  002482  321F               	rrcf	??i1___flmul+2,f,c
 21271  002484  321E               	rrcf	??i1___flmul+1,f,c
 21272  002486  321D               	rrcf	??i1___flmul,f,c
 21273  002488                     i1u1211_20:
 21274  002488  2EE8               	decfsz	wreg,f,c
 21275  00248A  D7F9               	goto	i1u1211_25
 21276  00248C  501D               	movf	??i1___flmul,w,c
 21277  00248E  2628               	addwf	i1___flmul@prod,f,c
 21278  002490  501E               	movf	??i1___flmul+1,w,c
 21279  002492  2229               	addwfc	i1___flmul@prod+1,f,c
 21280  002494  501F               	movf	??i1___flmul+2,w,c
 21281  002496  222A               	addwfc	i1___flmul@prod+2,f,c
 21282  002498  5020               	movf	??i1___flmul+3,w,c
 21283  00249A  222B               	addwfc	i1___flmul@prod+3,f,c
 21284  00249C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 21285  0024A0  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 21286  0024A4  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 21287  0024A8  6A23               	clrf	i1___flmul@grs,c
 21288  0024AA  5022               	movf	i1___flmul@aexp,w,c
 21289  0024AC  C027  F01D         	movff	i1___flmul@bexp,??i1___flmul
 21290  0024B0  6A1E               	clrf	(??i1___flmul+1)& (0+255),c
 21291  0024B2  261D               	addwf	??i1___flmul,f,c
 21292  0024B4  0E00               	movlw	0
 21293  0024B6  221E               	addwfc	??i1___flmul+1,f,c
 21294  0024B8  0E82               	movlw	130
 21295  0024BA  241D               	addwf	??i1___flmul,w,c
 21296  0024BC  6E2C               	movwf	i1___flmul@temp,c
 21297  0024BE  0EFF               	movlw	255
 21298  0024C0  201E               	addwfc	??i1___flmul+1,w,c
 21299  0024C2  6E2D               	movwf	i1___flmul@temp+1,c
 21300  0024C4  D00F               	goto	i1l9540
 21301  0024C6                     i1l9534:
 21302  0024C6  90D8               	bcf	status,0,c
 21303  0024C8  3628               	rlcf	i1___flmul@prod,f,c
 21304  0024CA  3629               	rlcf	i1___flmul@prod+1,f,c
 21305  0024CC  362A               	rlcf	i1___flmul@prod+2,f,c
 21306  0024CE  362B               	rlcf	i1___flmul@prod+3,f,c
 21307  0024D0  BE26               	btfsc	i1___flmul@grs+3,7,c
 21308  0024D2  8028               	bsf	i1___flmul@prod,0,c
 21309  0024D4  90D8               	bcf	status,0,c
 21310  0024D6  3623               	rlcf	i1___flmul@grs,f,c
 21311  0024D8  3624               	rlcf	i1___flmul@grs+1,f,c
 21312  0024DA  3625               	rlcf	i1___flmul@grs+2,f,c
 21313  0024DC  3626               	rlcf	i1___flmul@grs+3,f,c
 21314  0024DE  062C               	decf	i1___flmul@temp,f,c
 21315  0024E0  A0D8               	btfss	status,0,c
 21316  0024E2  062D               	decf	i1___flmul@temp+1,f,c
 21317  0024E4                     i1l9540:
 21318  0024E4  AE2A               	btfss	i1___flmul@prod+2,7,c
 21319  0024E6  D7EF               	goto	i1l9534
 21320  0024E8  0E00               	movlw	0
 21321  0024EA  6E22               	movwf	i1___flmul@aexp,c
 21322  0024EC  AE26               	btfss	i1___flmul@grs+3,7,c
 21323  0024EE  D016               	goto	i1l1521
 21324  0024F0  0EFF               	movlw	255
 21325  0024F2  1423               	andwf	i1___flmul@grs,w,c
 21326  0024F4  6E1D               	movwf	??i1___flmul& (0+255),c
 21327  0024F6  0EFF               	movlw	255
 21328  0024F8  1424               	andwf	i1___flmul@grs+1,w,c
 21329  0024FA  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 21330  0024FC  0EFF               	movlw	255
 21331  0024FE  1425               	andwf	i1___flmul@grs+2,w,c
 21332  002500  6E1F               	movwf	(??i1___flmul+2)& (0+255),c
 21333  002502  0E7F               	movlw	127
 21334  002504  1426               	andwf	i1___flmul@grs+3,w,c
 21335  002506  6E20               	movwf	(??i1___flmul+3)& (0+255),c
 21336  002508  501D               	movf	??i1___flmul,w,c
 21337  00250A  101E               	iorwf	??i1___flmul+1,w,c
 21338  00250C  101F               	iorwf	??i1___flmul+2,w,c
 21339  00250E  1020               	iorwf	??i1___flmul+3,w,c
 21340  002510  A4D8               	btfss	status,2,c
 21341  002512  D002               	goto	i1l9550
 21342  002514  A028               	btfss	i1___flmul@prod,0,c
 21343  002516  D002               	goto	i1l1521
 21344  002518                     i1l9550:
 21345  002518  0E01               	movlw	1
 21346  00251A  6E22               	movwf	i1___flmul@aexp,c
 21347  00251C                     i1l1521:
 21348  00251C  5022               	movf	i1___flmul@aexp,w,c
 21349  00251E  B4D8               	btfsc	status,2,c
 21350  002520  D01F               	goto	i1l9560
 21351  002522  0E01               	movlw	1
 21352  002524  2628               	addwf	i1___flmul@prod,f,c
 21353  002526  0E00               	movlw	0
 21354  002528  2229               	addwfc	i1___flmul@prod+1,f,c
 21355  00252A  222A               	addwfc	i1___flmul@prod+2,f,c
 21356  00252C  222B               	addwfc	i1___flmul@prod+3,f,c
 21357  00252E  A02B               	btfss	i1___flmul@prod+3,0,c
 21358  002530  D017               	goto	i1l9560
 21359  002532  C028  F01D         	movff	i1___flmul@prod,??i1___flmul
 21360  002536  C029  F01E         	movff	i1___flmul@prod+1,??i1___flmul+1
 21361  00253A  C02A  F01F         	movff	i1___flmul@prod+2,??i1___flmul+2
 21362  00253E  C02B  F020         	movff	i1___flmul@prod+3,??i1___flmul+3
 21363  002542  3420               	rlcf	??i1___flmul+3,w,c
 21364  002544  3220               	rrcf	??i1___flmul+3,f,c
 21365  002546  321F               	rrcf	??i1___flmul+2,f,c
 21366  002548  321E               	rrcf	??i1___flmul+1,f,c
 21367  00254A  321D               	rrcf	??i1___flmul,f,c
 21368  00254C  C01D  F028         	movff	??i1___flmul,i1___flmul@prod
 21369  002550  C01E  F029         	movff	??i1___flmul+1,i1___flmul@prod+1
 21370  002554  C01F  F02A         	movff	??i1___flmul+2,i1___flmul@prod+2
 21371  002558  C020  F02B         	movff	??i1___flmul+3,i1___flmul@prod+3
 21372  00255C  4A2C               	infsnz	i1___flmul@temp,f,c
 21373  00255E  2A2D               	incf	i1___flmul@temp+1,f,c
 21374  002560                     i1l9560:
 21375  002560  BE2D               	btfsc	i1___flmul@temp+1,7,c
 21376  002562  D00D               	goto	i1l9564
 21377  002564  502D               	movf	i1___flmul@temp+1,w,c
 21378  002566  E103               	bnz	i1u1219_20
 21379  002568  282C               	incf	i1___flmul@temp,w,c
 21380  00256A  A0D8               	btfss	status,0,c
 21381  00256C  D008               	goto	i1l9564
 21382  00256E                     i1u1219_20:
 21383  00256E  0E00               	movlw	0
 21384  002570  6E28               	movwf	i1___flmul@prod,c
 21385  002572  0E00               	movlw	0
 21386  002574  6E29               	movwf	i1___flmul@prod+1,c
 21387  002576  0E80               	movlw	128
 21388  002578  6E2A               	movwf	i1___flmul@prod+2,c
 21389  00257A  0E7F               	movlw	127
 21390  00257C  D020               	goto	L14
 21391  00257E                     i1l9564:
 21392  00257E  BE2D               	btfsc	i1___flmul@temp+1,7,c
 21393  002580  D005               	goto	i1l9566
 21394  002582  502D               	movf	i1___flmul@temp+1,w,c
 21395  002584  E10E               	bnz	i1l1529
 21396  002586  042C               	decf	i1___flmul@temp,w,c
 21397  002588  B0D8               	btfsc	status,0,c
 21398  00258A  D00B               	goto	i1l1529
 21399  00258C                     i1l9566:
 21400  00258C  0E00               	movlw	0
 21401  00258E  6E28               	movwf	i1___flmul@prod,c
 21402  002590  0E00               	movlw	0
 21403  002592  6E29               	movwf	i1___flmul@prod+1,c
 21404  002594  0E00               	movlw	0
 21405  002596  6E2A               	movwf	i1___flmul@prod+2,c
 21406  002598  0E00               	movlw	0
 21407  00259A  6E2B               	movwf	i1___flmul@prod+3,c
 21408  00259C  0E00               	movlw	0
 21409  00259E  6E21               	movwf	i1___flmul@sign,c
 21410  0025A0  D00F               	goto	i1l9576
 21411  0025A2                     i1l1529:
 21412  0025A2  C02C  F027         	movff	i1___flmul@temp,i1___flmul@bexp
 21413  0025A6  0EFF               	movlw	255
 21414  0025A8  1628               	andwf	i1___flmul@prod,f,c
 21415  0025AA  0EFF               	movlw	255
 21416  0025AC  1629               	andwf	i1___flmul@prod+1,f,c
 21417  0025AE  0E7F               	movlw	127
 21418  0025B0  162A               	andwf	i1___flmul@prod+2,f,c
 21419  0025B2  0E00               	movlw	0
 21420  0025B4  162B               	andwf	i1___flmul@prod+3,f,c
 21421  0025B6  B027               	btfsc	i1___flmul@bexp,0,c
 21422  0025B8  8E2A               	bsf	i1___flmul@prod+2,7,c
 21423  0025BA  90D8               	bcf	status,0,c
 21424  0025BC  3027               	rrcf	i1___flmul@bexp,w,c
 21425  0025BE                     L14:
 21426  0025BE  6E2B               	movwf	i1___flmul@prod+3,c
 21427  0025C0                     i1l9576:
 21428  0025C0  5021               	movf	i1___flmul@sign,w,c
 21429  0025C2  122B               	iorwf	i1___flmul@prod+3,f,c
 21430  0025C4  C028  F015         	movff	i1___flmul@prod,?i1___flmul
 21431  0025C8  C029  F016         	movff	i1___flmul@prod+1,?i1___flmul+1
 21432  0025CC  C02A  F017         	movff	i1___flmul@prod+2,?i1___flmul+2
 21433  0025D0  C02B  F018         	movff	i1___flmul@prod+3,?i1___flmul+3
 21434  0025D4  0012               	return	
 21435  0025D6                     __end_ofi1___flmul:
 21436                           	opt stack 0
 21437                           pclatu	equ	0xFFB
 21438                           pclath	equ	0xFFA
 21439                           tblptru	equ	0xFF8
 21440                           tblptrh	equ	0xFF7
 21441                           tblptrl	equ	0xFF6
 21442                           tablat	equ	0xFF5
 21443                           prodh	equ	0xFF4
 21444                           prodl	equ	0xFF3
 21445                           intcon	equ	0xFF2
 21446                           postinc0	equ	0xFEE
 21447                           fsr0h	equ	0xFEA
 21448                           fsr0l	equ	0xFE9
 21449                           wreg	equ	0xFE8
 21450                           postdec1	equ	0xFE5
 21451                           fsr1h	equ	0xFE2
 21452                           fsr1l	equ	0xFE1
 21453                           bsr	equ	0xFE0
 21454                           indf2	equ	0xFDF
 21455                           postinc2	equ	0xFDE
 21456                           postdec2	equ	0xFDD
 21457                           plusw2	equ	0xFDB
 21458                           fsr2h	equ	0xFDA
 21459                           fsr2l	equ	0xFD9
 21460                           status	equ	0xFD8
 21461                           
 21462 ;; *************** function i1___fldiv *****************
 21463 ;; Defined at:
 21464 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 21465 ;; Parameters:    Size  Location     Type
 21466 ;;  b               4   20[COMRAM] unsigned char 
 21467 ;;  a               4   24[COMRAM] unsigned char 
 21468 ;; Auto vars:     Size  Location     Type
 21469 ;;  __fldiv         4   39[COMRAM] unsigned long 
 21470 ;;  __fldiv         4   33[COMRAM] unsigned long 
 21471 ;;  __fldiv         2   37[COMRAM] int 
 21472 ;;  __fldiv         1   44[COMRAM] unsigned char 
 21473 ;;  __fldiv         1   43[COMRAM] unsigned char 
 21474 ;;  __fldiv         1   32[COMRAM] unsigned char 
 21475 ;; Return value:  Size  Location     Type
 21476 ;;                  4   20[COMRAM] unsigned char 
 21477 ;; Registers used:
 21478 ;;		wreg, status,2, status,0
 21479 ;; Tracked objects:
 21480 ;;		On entry : 0/0
 21481 ;;		On exit  : 0/0
 21482 ;;		Unchanged: 0/0
 21483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21484 ;;      Params:         8       0       0       0       0       0       0
 21485 ;;      Locals:        13       0       0       0       0       0       0
 21486 ;;      Temps:          4       0       0       0       0       0       0
 21487 ;;      Totals:        25       0       0       0       0       0       0
 21488 ;;Total ram usage:       25 bytes
 21489 ;; Hardware stack levels used:    1
 21490 ;; Hardware stack levels required when called:    3
 21491 ;; This function calls:
 21492 ;;		Nothing
 21493 ;; This function is called by:
 21494 ;;		_calcSysVars
 21495 ;;		i1_calcVars2ti
 21496 ;; This function uses a non-reentrant model
 21497 ;;
 21498                           
 21499                           	psect	text82
 21500  0028A8                     __ptext82:
 21501                           	opt stack 0
 21502  0028A8                     i1___fldiv:
 21503                           	opt stack 13
 21504                           
 21505                           ;incstack = 0
 21506  0028A8  5018               	movf	i1___fldiv@b+3,w,c
 21507  0028AA  0B80               	andlw	128
 21508  0028AC  6E21               	movwf	i1___fldiv@sign,c
 21509  0028AE  5018               	movf	i1___fldiv@b+3,w,c
 21510  0028B0  2418               	addwf	i1___fldiv@b+3,w,c
 21511  0028B2  6E2C               	movwf	i1___fldiv@bexp,c
 21512  0028B4  BE17               	btfsc	i1___fldiv@b+2,7,c
 21513  0028B6  802C               	bsf	i1___fldiv@bexp,0,c
 21514  0028B8  502C               	movf	i1___fldiv@bexp,w,c
 21515  0028BA  B4D8               	btfsc	status,2,c
 21516  0028BC  D00D               	goto	i1l9332
 21517  0028BE  282C               	incf	i1___fldiv@bexp,w,c
 21518  0028C0  A4D8               	btfss	status,2,c
 21519  0028C2  D008               	goto	i1l9328
 21520  0028C4  0E00               	movlw	0
 21521  0028C6  6E15               	movwf	i1___fldiv@b,c
 21522  0028C8  0E00               	movlw	0
 21523  0028CA  6E16               	movwf	i1___fldiv@b+1,c
 21524  0028CC  0E00               	movlw	0
 21525  0028CE  6E17               	movwf	i1___fldiv@b+2,c
 21526  0028D0  0E00               	movlw	0
 21527  0028D2  6E18               	movwf	i1___fldiv@b+3,c
 21528  0028D4                     i1l9328:
 21529  0028D4  8E17               	bsf	i1___fldiv@b+2,7,c
 21530  0028D6  D006               	goto	L15
 21531  0028D8                     i1l9332:
 21532  0028D8  0E00               	movlw	0
 21533  0028DA  6E15               	movwf	i1___fldiv@b,c
 21534  0028DC  0E00               	movlw	0
 21535  0028DE  6E16               	movwf	i1___fldiv@b+1,c
 21536  0028E0  0E00               	movlw	0
 21537  0028E2  6E17               	movwf	i1___fldiv@b+2,c
 21538  0028E4                     L15:
 21539  0028E4  0E00               	movlw	0
 21540  0028E6  6E18               	movwf	i1___fldiv@b+3,c
 21541  0028E8  501C               	movf	i1___fldiv@a+3,w,c
 21542  0028EA  0B80               	andlw	128
 21543  0028EC  1A21               	xorwf	i1___fldiv@sign,f,c
 21544  0028EE  501C               	movf	i1___fldiv@a+3,w,c
 21545  0028F0  241C               	addwf	i1___fldiv@a+3,w,c
 21546  0028F2  6E2D               	movwf	i1___fldiv@aexp,c
 21547  0028F4  BE1B               	btfsc	i1___fldiv@a+2,7,c
 21548  0028F6  802D               	bsf	i1___fldiv@aexp,0,c
 21549  0028F8  502D               	movf	i1___fldiv@aexp,w,c
 21550  0028FA  B4D8               	btfsc	status,2,c
 21551  0028FC  D00D               	goto	i1l9352
 21552  0028FE  282D               	incf	i1___fldiv@aexp,w,c
 21553  002900  A4D8               	btfss	status,2,c
 21554  002902  D008               	goto	i1l9348
 21555  002904  0E00               	movlw	0
 21556  002906  6E19               	movwf	i1___fldiv@a,c
 21557  002908  0E00               	movlw	0
 21558  00290A  6E1A               	movwf	i1___fldiv@a+1,c
 21559  00290C  0E00               	movlw	0
 21560  00290E  6E1B               	movwf	i1___fldiv@a+2,c
 21561  002910  0E00               	movlw	0
 21562  002912  6E1C               	movwf	i1___fldiv@a+3,c
 21563  002914                     i1l9348:
 21564  002914  8E1B               	bsf	i1___fldiv@a+2,7,c
 21565  002916  D006               	goto	L16
 21566  002918                     i1l9352:
 21567  002918  0E00               	movlw	0
 21568  00291A  6E19               	movwf	i1___fldiv@a,c
 21569  00291C  0E00               	movlw	0
 21570  00291E  6E1A               	movwf	i1___fldiv@a+1,c
 21571  002920  0E00               	movlw	0
 21572  002922  6E1B               	movwf	i1___fldiv@a+2,c
 21573  002924                     L16:
 21574  002924  0E00               	movlw	0
 21575  002926  6E1C               	movwf	i1___fldiv@a+3,c
 21576  002928  5019               	movf	i1___fldiv@a,w,c
 21577  00292A  101A               	iorwf	i1___fldiv@a+1,w,c
 21578  00292C  101B               	iorwf	i1___fldiv@a+2,w,c
 21579  00292E  101C               	iorwf	i1___fldiv@a+3,w,c
 21580  002930  A4D8               	btfss	status,2,c
 21581  002932  D015               	goto	i1l9364
 21582  002934  0E00               	movlw	0
 21583  002936  6E15               	movwf	i1___fldiv@b,c
 21584  002938  0E00               	movlw	0
 21585  00293A  6E16               	movwf	i1___fldiv@b+1,c
 21586  00293C  0E00               	movlw	0
 21587  00293E  6E17               	movwf	i1___fldiv@b+2,c
 21588  002940  0E00               	movlw	0
 21589  002942  6E18               	movwf	i1___fldiv@b+3,c
 21590  002944  0E80               	movlw	128
 21591  002946  1217               	iorwf	i1___fldiv@b+2,f,c
 21592  002948  0E7F               	movlw	127
 21593  00294A  1218               	iorwf	i1___fldiv@b+3,f,c
 21594  00294C  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 21595  002950  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 21596  002954  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 21597  002958  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 21598  00295C  0012               	return	
 21599  00295E                     i1l9364:
 21600  00295E  502C               	movf	i1___fldiv@bexp,w,c
 21601  002960  A4D8               	btfss	status,2,c
 21602  002962  D011               	goto	i1l9372
 21603  002964  0E00               	movlw	0
 21604  002966  6E15               	movwf	i1___fldiv@b,c
 21605  002968  0E00               	movlw	0
 21606  00296A  6E16               	movwf	i1___fldiv@b+1,c
 21607  00296C  0E00               	movlw	0
 21608  00296E  6E17               	movwf	i1___fldiv@b+2,c
 21609  002970  0E00               	movlw	0
 21610  002972  6E18               	movwf	i1___fldiv@b+3,c
 21611  002974  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 21612  002978  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 21613  00297C  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 21614  002980  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 21615  002984  0012               	return	
 21616  002986                     i1l9372:
 21617  002986  502D               	movf	i1___fldiv@aexp,w,c
 21618  002988  6E1D               	movwf	??i1___fldiv& (0+255),c
 21619  00298A  6A1E               	clrf	(??i1___fldiv+1)& (0+255),c
 21620  00298C  1E1D               	comf	??i1___fldiv,f,c
 21621  00298E  1E1E               	comf	??i1___fldiv+1,f,c
 21622  002990  4A1D               	infsnz	??i1___fldiv,f,c
 21623  002992  2A1E               	incf	??i1___fldiv+1,f,c
 21624  002994  502C               	movf	i1___fldiv@bexp,w,c
 21625  002996  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 21626  002998  6A20               	clrf	(??i1___fldiv+3)& (0+255),c
 21627  00299A  501D               	movf	??i1___fldiv,w,c
 21628  00299C  261F               	addwf	??i1___fldiv+2,f,c
 21629  00299E  501E               	movf	??i1___fldiv+1,w,c
 21630  0029A0  2220               	addwfc	??i1___fldiv+3,f,c
 21631  0029A2  0E7F               	movlw	127
 21632  0029A4  241F               	addwf	??i1___fldiv+2,w,c
 21633  0029A6  6E26               	movwf	i1___fldiv@new_exp,c
 21634  0029A8  0E00               	movlw	0
 21635  0029AA  2020               	addwfc	??i1___fldiv+3,w,c
 21636  0029AC  6E27               	movwf	i1___fldiv@new_exp+1,c
 21637  0029AE  C015  F022         	movff	i1___fldiv@b,i1___fldiv@rem
 21638  0029B2  C016  F023         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 21639  0029B6  C017  F024         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 21640  0029BA  C018  F025         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 21641  0029BE  0E00               	movlw	0
 21642  0029C0  6E15               	movwf	i1___fldiv@b,c
 21643  0029C2  0E00               	movlw	0
 21644  0029C4  6E16               	movwf	i1___fldiv@b+1,c
 21645  0029C6  0E00               	movlw	0
 21646  0029C8  6E17               	movwf	i1___fldiv@b+2,c
 21647  0029CA  0E00               	movlw	0
 21648  0029CC  6E18               	movwf	i1___fldiv@b+3,c
 21649  0029CE  0E00               	movlw	0
 21650  0029D0  6E28               	movwf	i1___fldiv@grs,c
 21651  0029D2  0E00               	movlw	0
 21652  0029D4  6E29               	movwf	i1___fldiv@grs+1,c
 21653  0029D6  0E00               	movlw	0
 21654  0029D8  6E2A               	movwf	i1___fldiv@grs+2,c
 21655  0029DA  0E00               	movlw	0
 21656  0029DC  6E2B               	movwf	i1___fldiv@grs+3,c
 21657  0029DE  0E00               	movlw	0
 21658  0029E0  6E2D               	movwf	i1___fldiv@aexp,c
 21659  0029E2  D028               	goto	i1l1482
 21660  0029E4                     i1l9382:
 21661  0029E4  502D               	movf	i1___fldiv@aexp,w,c
 21662  0029E6  B4D8               	btfsc	status,2,c
 21663  0029E8  D011               	goto	i1l9390
 21664  0029EA  90D8               	bcf	status,0,c
 21665  0029EC  3622               	rlcf	i1___fldiv@rem,f,c
 21666  0029EE  3623               	rlcf	i1___fldiv@rem+1,f,c
 21667  0029F0  3624               	rlcf	i1___fldiv@rem+2,f,c
 21668  0029F2  3625               	rlcf	i1___fldiv@rem+3,f,c
 21669  0029F4  90D8               	bcf	status,0,c
 21670  0029F6  3615               	rlcf	i1___fldiv@b,f,c
 21671  0029F8  3616               	rlcf	i1___fldiv@b+1,f,c
 21672  0029FA  3617               	rlcf	i1___fldiv@b+2,f,c
 21673  0029FC  3618               	rlcf	i1___fldiv@b+3,f,c
 21674  0029FE  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 21675  002A00  8015               	bsf	i1___fldiv@b,0,c
 21676  002A02  90D8               	bcf	status,0,c
 21677  002A04  3628               	rlcf	i1___fldiv@grs,f,c
 21678  002A06  3629               	rlcf	i1___fldiv@grs+1,f,c
 21679  002A08  362A               	rlcf	i1___fldiv@grs+2,f,c
 21680  002A0A  362B               	rlcf	i1___fldiv@grs+3,f,c
 21681  002A0C                     i1l9390:
 21682  002A0C  5019               	movf	i1___fldiv@a,w,c
 21683  002A0E  5C22               	subwf	i1___fldiv@rem,w,c
 21684  002A10  501A               	movf	i1___fldiv@a+1,w,c
 21685  002A12  5823               	subwfb	i1___fldiv@rem+1,w,c
 21686  002A14  501B               	movf	i1___fldiv@a+2,w,c
 21687  002A16  5824               	subwfb	i1___fldiv@rem+2,w,c
 21688  002A18  501C               	movf	i1___fldiv@a+3,w,c
 21689  002A1A  5825               	subwfb	i1___fldiv@rem+3,w,c
 21690  002A1C  A0D8               	btfss	status,0,c
 21691  002A1E  D009               	goto	i1l9396
 21692  002A20  8C2B               	bsf	i1___fldiv@grs+3,6,c
 21693  002A22  5019               	movf	i1___fldiv@a,w,c
 21694  002A24  5E22               	subwf	i1___fldiv@rem,f,c
 21695  002A26  501A               	movf	i1___fldiv@a+1,w,c
 21696  002A28  5A23               	subwfb	i1___fldiv@rem+1,f,c
 21697  002A2A  501B               	movf	i1___fldiv@a+2,w,c
 21698  002A2C  5A24               	subwfb	i1___fldiv@rem+2,f,c
 21699  002A2E  501C               	movf	i1___fldiv@a+3,w,c
 21700  002A30  5A25               	subwfb	i1___fldiv@rem+3,f,c
 21701  002A32                     i1l9396:
 21702  002A32  2A2D               	incf	i1___fldiv@aexp,f,c
 21703  002A34                     i1l1482:
 21704  002A34  0E19               	movlw	25
 21705  002A36  642D               	cpfsgt	i1___fldiv@aexp,c
 21706  002A38  D7D5               	goto	i1l9382
 21707  002A3A  5022               	movf	i1___fldiv@rem,w,c
 21708  002A3C  1023               	iorwf	i1___fldiv@rem+1,w,c
 21709  002A3E  1024               	iorwf	i1___fldiv@rem+2,w,c
 21710  002A40  1025               	iorwf	i1___fldiv@rem+3,w,c
 21711  002A42  B4D8               	btfsc	status,2,c
 21712  002A44  D011               	goto	i1l9408
 21713  002A46  8028               	bsf	i1___fldiv@grs,0,c
 21714  002A48  D00F               	goto	i1l9408
 21715  002A4A                     i1l9402:
 21716  002A4A  90D8               	bcf	status,0,c
 21717  002A4C  3615               	rlcf	i1___fldiv@b,f,c
 21718  002A4E  3616               	rlcf	i1___fldiv@b+1,f,c
 21719  002A50  3617               	rlcf	i1___fldiv@b+2,f,c
 21720  002A52  3618               	rlcf	i1___fldiv@b+3,f,c
 21721  002A54  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 21722  002A56  8015               	bsf	i1___fldiv@b,0,c
 21723  002A58  90D8               	bcf	status,0,c
 21724  002A5A  3628               	rlcf	i1___fldiv@grs,f,c
 21725  002A5C  3629               	rlcf	i1___fldiv@grs+1,f,c
 21726  002A5E  362A               	rlcf	i1___fldiv@grs+2,f,c
 21727  002A60  362B               	rlcf	i1___fldiv@grs+3,f,c
 21728  002A62  0626               	decf	i1___fldiv@new_exp,f,c
 21729  002A64  A0D8               	btfss	status,0,c
 21730  002A66  0627               	decf	i1___fldiv@new_exp+1,f,c
 21731  002A68                     i1l9408:
 21732  002A68  AE17               	btfss	i1___fldiv@b+2,7,c
 21733  002A6A  D7EF               	goto	i1l9402
 21734  002A6C  0E00               	movlw	0
 21735  002A6E  6E2D               	movwf	i1___fldiv@aexp,c
 21736  002A70  AE2B               	btfss	i1___fldiv@grs+3,7,c
 21737  002A72  D016               	goto	i1l1493
 21738  002A74  0EFF               	movlw	255
 21739  002A76  1428               	andwf	i1___fldiv@grs,w,c
 21740  002A78  6E1D               	movwf	??i1___fldiv& (0+255),c
 21741  002A7A  0EFF               	movlw	255
 21742  002A7C  1429               	andwf	i1___fldiv@grs+1,w,c
 21743  002A7E  6E1E               	movwf	(??i1___fldiv+1)& (0+255),c
 21744  002A80  0EFF               	movlw	255
 21745  002A82  142A               	andwf	i1___fldiv@grs+2,w,c
 21746  002A84  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 21747  002A86  0E7F               	movlw	127
 21748  002A88  142B               	andwf	i1___fldiv@grs+3,w,c
 21749  002A8A  6E20               	movwf	(??i1___fldiv+3)& (0+255),c
 21750  002A8C  501D               	movf	??i1___fldiv,w,c
 21751  002A8E  101E               	iorwf	??i1___fldiv+1,w,c
 21752  002A90  101F               	iorwf	??i1___fldiv+2,w,c
 21753  002A92  1020               	iorwf	??i1___fldiv+3,w,c
 21754  002A94  A4D8               	btfss	status,2,c
 21755  002A96  D002               	goto	i1l9418
 21756  002A98  A015               	btfss	i1___fldiv@b,0,c
 21757  002A9A  D002               	goto	i1l1493
 21758  002A9C                     i1l9418:
 21759  002A9C  0E01               	movlw	1
 21760  002A9E  6E2D               	movwf	i1___fldiv@aexp,c
 21761  002AA0                     i1l1493:
 21762  002AA0  502D               	movf	i1___fldiv@aexp,w,c
 21763  002AA2  B4D8               	btfsc	status,2,c
 21764  002AA4  D01F               	goto	i1l9428
 21765  002AA6  0E01               	movlw	1
 21766  002AA8  2615               	addwf	i1___fldiv@b,f,c
 21767  002AAA  0E00               	movlw	0
 21768  002AAC  2216               	addwfc	i1___fldiv@b+1,f,c
 21769  002AAE  2217               	addwfc	i1___fldiv@b+2,f,c
 21770  002AB0  2218               	addwfc	i1___fldiv@b+3,f,c
 21771  002AB2  A018               	btfss	i1___fldiv@b+3,0,c
 21772  002AB4  D017               	goto	i1l9428
 21773  002AB6  C015  F01D         	movff	i1___fldiv@b,??i1___fldiv
 21774  002ABA  C016  F01E         	movff	i1___fldiv@b+1,??i1___fldiv+1
 21775  002ABE  C017  F01F         	movff	i1___fldiv@b+2,??i1___fldiv+2
 21776  002AC2  C018  F020         	movff	i1___fldiv@b+3,??i1___fldiv+3
 21777  002AC6  3420               	rlcf	??i1___fldiv+3,w,c
 21778  002AC8  3220               	rrcf	??i1___fldiv+3,f,c
 21779  002ACA  321F               	rrcf	??i1___fldiv+2,f,c
 21780  002ACC  321E               	rrcf	??i1___fldiv+1,f,c
 21781  002ACE  321D               	rrcf	??i1___fldiv,f,c
 21782  002AD0  C01D  F015         	movff	??i1___fldiv,i1___fldiv@b
 21783  002AD4  C01E  F016         	movff	??i1___fldiv+1,i1___fldiv@b+1
 21784  002AD8  C01F  F017         	movff	??i1___fldiv+2,i1___fldiv@b+2
 21785  002ADC  C020  F018         	movff	??i1___fldiv+3,i1___fldiv@b+3
 21786  002AE0  4A26               	infsnz	i1___fldiv@new_exp,f,c
 21787  002AE2  2A27               	incf	i1___fldiv@new_exp+1,f,c
 21788  002AE4                     i1l9428:
 21789  002AE4  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 21790  002AE6  D010               	goto	i1l9432
 21791  002AE8  5027               	movf	i1___fldiv@new_exp+1,w,c
 21792  002AEA  E103               	bnz	i1u1200_20
 21793  002AEC  2826               	incf	i1___fldiv@new_exp,w,c
 21794  002AEE  A0D8               	btfss	status,0,c
 21795  002AF0  D00B               	goto	i1l9432
 21796  002AF2                     i1u1200_20:
 21797  002AF2  0E00               	movlw	0
 21798  002AF4  6E27               	movwf	i1___fldiv@new_exp+1,c
 21799  002AF6  6826               	setf	i1___fldiv@new_exp,c
 21800  002AF8  0E00               	movlw	0
 21801  002AFA  6E15               	movwf	i1___fldiv@b,c
 21802  002AFC  0E00               	movlw	0
 21803  002AFE  6E16               	movwf	i1___fldiv@b+1,c
 21804  002B00  0E00               	movlw	0
 21805  002B02  6E17               	movwf	i1___fldiv@b+2,c
 21806  002B04  0E00               	movlw	0
 21807  002B06  6E18               	movwf	i1___fldiv@b+3,c
 21808  002B08                     i1l9432:
 21809  002B08  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 21810  002B0A  D005               	goto	i1l9434
 21811  002B0C  5027               	movf	i1___fldiv@new_exp+1,w,c
 21812  002B0E  E111               	bnz	i1l9436
 21813  002B10  0426               	decf	i1___fldiv@new_exp,w,c
 21814  002B12  B0D8               	btfsc	status,0,c
 21815  002B14  D00E               	goto	i1l9436
 21816  002B16                     i1l9434:
 21817  002B16  0E00               	movlw	0
 21818  002B18  6E27               	movwf	i1___fldiv@new_exp+1,c
 21819  002B1A  0E00               	movlw	0
 21820  002B1C  6E26               	movwf	i1___fldiv@new_exp,c
 21821  002B1E  0E00               	movlw	0
 21822  002B20  6E15               	movwf	i1___fldiv@b,c
 21823  002B22  0E00               	movlw	0
 21824  002B24  6E16               	movwf	i1___fldiv@b+1,c
 21825  002B26  0E00               	movlw	0
 21826  002B28  6E17               	movwf	i1___fldiv@b+2,c
 21827  002B2A  0E00               	movlw	0
 21828  002B2C  6E18               	movwf	i1___fldiv@b+3,c
 21829  002B2E  0E00               	movlw	0
 21830  002B30  6E21               	movwf	i1___fldiv@sign,c
 21831  002B32                     i1l9436:
 21832  002B32  C026  F02C         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 21833  002B36  A02C               	btfss	i1___fldiv@bexp,0,c
 21834  002B38  D002               	goto	i1l9442
 21835  002B3A  8E17               	bsf	i1___fldiv@b+2,7,c
 21836  002B3C  D001               	goto	i1l9444
 21837  002B3E                     i1l9442:
 21838  002B3E  9E17               	bcf	i1___fldiv@b+2,7,c
 21839  002B40                     i1l9444:
 21840  002B40  90D8               	bcf	status,0,c
 21841  002B42  302C               	rrcf	i1___fldiv@bexp,w,c
 21842  002B44  6E18               	movwf	i1___fldiv@b+3,c
 21843  002B46  5021               	movf	i1___fldiv@sign,w,c
 21844  002B48  1218               	iorwf	i1___fldiv@b+3,f,c
 21845  002B4A  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 21846  002B4E  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 21847  002B52  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 21848  002B56  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 21849  002B5A  0012               	return	
 21850  002B5C                     __end_ofi1___fldiv:
 21851                           	opt stack 0
 21852                           pclatu	equ	0xFFB
 21853                           pclath	equ	0xFFA
 21854                           tblptru	equ	0xFF8
 21855                           tblptrh	equ	0xFF7
 21856                           tblptrl	equ	0xFF6
 21857                           tablat	equ	0xFF5
 21858                           prodh	equ	0xFF4
 21859                           prodl	equ	0xFF3
 21860                           intcon	equ	0xFF2
 21861                           postinc0	equ	0xFEE
 21862                           fsr0h	equ	0xFEA
 21863                           fsr0l	equ	0xFE9
 21864                           wreg	equ	0xFE8
 21865                           postdec1	equ	0xFE5
 21866                           fsr1h	equ	0xFE2
 21867                           fsr1l	equ	0xFE1
 21868                           bsr	equ	0xFE0
 21869                           indf2	equ	0xFDF
 21870                           postinc2	equ	0xFDE
 21871                           postdec2	equ	0xFDD
 21872                           plusw2	equ	0xFDB
 21873                           fsr2h	equ	0xFDA
 21874                           fsr2l	equ	0xFD9
 21875                           status	equ	0xFD8
 21876                           
 21877 ;; *************** function _putchUART *****************
 21878 ;; Defined at:
 21879 ;;		line 11 in file "source/UARTConfig.h"
 21880 ;; Parameters:    Size  Location     Type
 21881 ;;  val             1    wreg     unsigned char 
 21882 ;; Auto vars:     Size  Location     Type
 21883 ;;  val             1   20[COMRAM] unsigned char 
 21884 ;; Return value:  Size  Location     Type
 21885 ;;                  1    wreg      void 
 21886 ;; Registers used:
 21887 ;;		wreg
 21888 ;; Tracked objects:
 21889 ;;		On entry : 0/0
 21890 ;;		On exit  : 0/0
 21891 ;;		Unchanged: 0/0
 21892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21893 ;;      Params:         0       0       0       0       0       0       0
 21894 ;;      Locals:         1       0       0       0       0       0       0
 21895 ;;      Temps:          0       0       0       0       0       0       0
 21896 ;;      Totals:         1       0       0       0       0       0       0
 21897 ;;Total ram usage:        1 bytes
 21898 ;; Hardware stack levels used:    1
 21899 ;; Hardware stack levels required when called:    3
 21900 ;; This function calls:
 21901 ;;		Nothing
 21902 ;; This function is called by:
 21903 ;;		_UARTint
 21904 ;; This function uses a non-reentrant model
 21905 ;;
 21906                           
 21907                           	psect	text83
 21908  005EF6                     __ptext83:
 21909                           	opt stack 0
 21910  005EF6                     _putchUART:
 21911                           	opt stack 15
 21912                           
 21913                           ;incstack = 0
 21914                           ;putchUART@val stored from wreg
 21915  005EF6  6E15               	movwf	putchUART@val,c
 21916  005EF8                     i1l699:
 21917  005EF8  A2AC               	btfss	4012,1,c	;volatile
 21918  005EFA  D7FE               	goto	i1l699
 21919                           
 21920                           ;UARTConfig.h: 13: TXREG1 = val;
 21921  005EFC  C015  FFAD         	movff	putchUART@val,4013	;volatile
 21922  005F00  0012               	return		;funcret
 21923  005F02                     __end_of_putchUART:
 21924                           	opt stack 0
 21925                           pclatu	equ	0xFFB
 21926                           pclath	equ	0xFFA
 21927                           tblptru	equ	0xFF8
 21928                           tblptrh	equ	0xFF7
 21929                           tblptrl	equ	0xFF6
 21930                           tablat	equ	0xFF5
 21931                           prodh	equ	0xFF4
 21932                           prodl	equ	0xFF3
 21933                           intcon	equ	0xFF2
 21934                           postinc0	equ	0xFEE
 21935                           fsr0h	equ	0xFEA
 21936                           fsr0l	equ	0xFE9
 21937                           wreg	equ	0xFE8
 21938                           postdec1	equ	0xFE5
 21939                           fsr1h	equ	0xFE2
 21940                           fsr1l	equ	0xFE1
 21941                           bsr	equ	0xFE0
 21942                           indf2	equ	0xFDF
 21943                           postinc2	equ	0xFDE
 21944                           postdec2	equ	0xFDD
 21945                           plusw2	equ	0xFDB
 21946                           fsr2h	equ	0xFDA
 21947                           fsr2l	equ	0xFD9
 21948                           status	equ	0xFD8
 21949                           
 21950 ;; *************** function _hp_isr *****************
 21951 ;; Defined at:
 21952 ;;		line 13 in file "source/main.c"
 21953 ;; Parameters:    Size  Location     Type
 21954 ;;		None
 21955 ;; Auto vars:     Size  Location     Type
 21956 ;;		None
 21957 ;; Return value:  Size  Location     Type
 21958 ;;                  1    wreg      void 
 21959 ;; Registers used:
 21960 ;;		wreg, status,2, status,0, cstack
 21961 ;; Tracked objects:
 21962 ;;		On entry : 0/0
 21963 ;;		On exit  : 0/0
 21964 ;;		Unchanged: 0/0
 21965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 21966 ;;      Params:         0       0       0       0       0       0       0
 21967 ;;      Locals:         0       0       0       0       0       0       0
 21968 ;;      Temps:         14       0       0       0       0       0       0
 21969 ;;      Totals:        14       0       0       0       0       0       0
 21970 ;;Total ram usage:       14 bytes
 21971 ;; Hardware stack levels used:    1
 21972 ;; Hardware stack levels required when called:    2
 21973 ;; This function calls:
 21974 ;;		_T2int
 21975 ;; This function is called by:
 21976 ;;		Interrupt level 2
 21977 ;; This function uses a non-reentrant model
 21978 ;;
 21979                           
 21980                           	psect	intcode
 21981  000008                     __pintcode:
 21982                           	opt stack 0
 21983  000008                     _hp_isr:
 21984                           	opt stack 13
 21985                           
 21986                           ;incstack = 0
 21987  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 21988  00000A  CFFA F007          	movff	pclath,??_hp_isr
 21989  00000E  CFFB F008          	movff	pclatu,??_hp_isr+1
 21990  000012  EF9A  F02B         	goto	int_func
 21991                           pclatu	equ	0xFFB
 21992                           pclath	equ	0xFFA
 21993                           tblptru	equ	0xFF8
 21994                           tblptrh	equ	0xFF7
 21995                           tblptrl	equ	0xFF6
 21996                           tablat	equ	0xFF5
 21997                           prodh	equ	0xFF4
 21998                           prodl	equ	0xFF3
 21999                           intcon	equ	0xFF2
 22000                           postinc0	equ	0xFEE
 22001                           fsr0h	equ	0xFEA
 22002                           fsr0l	equ	0xFE9
 22003                           wreg	equ	0xFE8
 22004                           postdec1	equ	0xFE5
 22005                           fsr1h	equ	0xFE2
 22006                           fsr1l	equ	0xFE1
 22007                           bsr	equ	0xFE0
 22008                           indf2	equ	0xFDF
 22009                           postinc2	equ	0xFDE
 22010                           postdec2	equ	0xFDD
 22011                           plusw2	equ	0xFDB
 22012                           fsr2h	equ	0xFDA
 22013                           fsr2l	equ	0xFD9
 22014                           status	equ	0xFD8
 22015                           
 22016                           	psect	intcode_body
 22017  005734                     __pintcode_body:
 22018                           	opt stack 13
 22019  005734                     int_func:
 22020                           	opt stack 13
 22021  005734  CFE9 F009          	movff	fsr0l,??_hp_isr+2
 22022  005738  CFEA F00A          	movff	fsr0h,??_hp_isr+3
 22023  00573C  CFE1 F00B          	movff	fsr1l,??_hp_isr+4
 22024  005740  CFE2 F00C          	movff	fsr1h,??_hp_isr+5
 22025  005744  CFD9 F00D          	movff	fsr2l,??_hp_isr+6
 22026  005748  CFDA F00E          	movff	fsr2h,??_hp_isr+7
 22027  00574C  CFF3 F00F          	movff	prodl,??_hp_isr+8
 22028  005750  CFF4 F010          	movff	prodh,??_hp_isr+9
 22029  005754  CFF6 F011          	movff	tblptrl,??_hp_isr+10
 22030  005758  CFF7 F012          	movff	tblptrh,??_hp_isr+11
 22031  00575C  CFF8 F013          	movff	tblptru,??_hp_isr+12
 22032  005760  CFF5 F014          	movff	tablat,??_hp_isr+13
 22033                           
 22034                           ;main.c: 14: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
 22035  005764  B29D               	btfsc	3997,1,c	;volatile
 22036  005766  A29E               	btfss	3998,1,c	;volatile
 22037  005768  D003               	goto	i2l798
 22038                           
 22039                           ;main.c: 15: T2int();
 22040  00576A  ECDB  F02E         	call	_T2int	;wreg free
 22041                           
 22042                           ;main.c: 16: PIR1bits.TMR2IF = 0;
 22043  00576E  929E               	bcf	3998,1,c	;volatile
 22044  005770                     i2l798:
 22045  005770  C014  FFF5         	movff	??_hp_isr+13,tablat
 22046  005774  C013  FFF8         	movff	??_hp_isr+12,tblptru
 22047  005778  C012  FFF7         	movff	??_hp_isr+11,tblptrh
 22048  00577C  C011  FFF6         	movff	??_hp_isr+10,tblptrl
 22049  005780  C010  FFF4         	movff	??_hp_isr+9,prodh
 22050  005784  C00F  FFF3         	movff	??_hp_isr+8,prodl
 22051  005788  C00E  FFDA         	movff	??_hp_isr+7,fsr2h
 22052  00578C  C00D  FFD9         	movff	??_hp_isr+6,fsr2l
 22053  005790  C00C  FFE2         	movff	??_hp_isr+5,fsr1h
 22054  005794  C00B  FFE1         	movff	??_hp_isr+4,fsr1l
 22055  005798  C00A  FFEA         	movff	??_hp_isr+3,fsr0h
 22056  00579C  C009  FFE9         	movff	??_hp_isr+2,fsr0l
 22057  0057A0  C008  FFFB         	movff	??_hp_isr+1,pclatu
 22058  0057A4  C007  FFFA         	movff	??_hp_isr,pclath
 22059  0057A8  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 22060  0057AA  0011               	retfie		f
 22061  0057AC                     __end_of_hp_isr:
 22062                           	opt stack 0
 22063                           pclatu	equ	0xFFB
 22064                           pclath	equ	0xFFA
 22065                           tblptru	equ	0xFF8
 22066                           tblptrh	equ	0xFF7
 22067                           tblptrl	equ	0xFF6
 22068                           tablat	equ	0xFF5
 22069                           prodh	equ	0xFF4
 22070                           prodl	equ	0xFF3
 22071                           intcon	equ	0xFF2
 22072                           postinc0	equ	0xFEE
 22073                           fsr0h	equ	0xFEA
 22074                           fsr0l	equ	0xFE9
 22075                           wreg	equ	0xFE8
 22076                           postdec1	equ	0xFE5
 22077                           fsr1h	equ	0xFE2
 22078                           fsr1l	equ	0xFE1
 22079                           bsr	equ	0xFE0
 22080                           indf2	equ	0xFDF
 22081                           postinc2	equ	0xFDE
 22082                           postdec2	equ	0xFDD
 22083                           plusw2	equ	0xFDB
 22084                           fsr2h	equ	0xFDA
 22085                           fsr2l	equ	0xFD9
 22086                           status	equ	0xFD8
 22087                           
 22088 ;; *************** function _T2int *****************
 22089 ;; Defined at:
 22090 ;;		line 35 in file "source/PWMConfig.h"
 22091 ;; Parameters:    Size  Location     Type
 22092 ;;		None
 22093 ;; Auto vars:     Size  Location     Type
 22094 ;;		None
 22095 ;; Return value:  Size  Location     Type
 22096 ;;                  1    wreg      void 
 22097 ;; Registers used:
 22098 ;;		wreg, status,2, status,0, cstack
 22099 ;; Tracked objects:
 22100 ;;		On entry : 0/0
 22101 ;;		On exit  : 0/0
 22102 ;;		Unchanged: 0/0
 22103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22104 ;;      Params:         0       0       0       0       0       0       0
 22105 ;;      Locals:         0       0       0       0       0       0       0
 22106 ;;      Temps:          0       0       0       0       0       0       0
 22107 ;;      Totals:         0       0       0       0       0       0       0
 22108 ;;Total ram usage:        0 bytes
 22109 ;; Hardware stack levels used:    1
 22110 ;; Hardware stack levels required when called:    1
 22111 ;; This function calls:
 22112 ;;		i2_putchUART
 22113 ;;		i2_setPWM2duty
 22114 ;; This function is called by:
 22115 ;;		_hp_isr
 22116 ;; This function uses a non-reentrant model
 22117 ;;
 22118                           
 22119                           	psect	text85
 22120  005DB6                     __ptext85:
 22121                           	opt stack 0
 22122  005DB6                     _T2int:
 22123                           	opt stack 13
 22124                           
 22125                           ;PWMConfig.h: 36: if(PORTAbits.RA7 || PORTAbits.RA6) {
 22126                           
 22127                           ;incstack = 0
 22128  005DB6  AE80               	btfss	3968,7,c	;volatile
 22129  005DB8  BC80               	btfsc	3968,6,c	;volatile
 22130  005DBA  D001               	goto	i2l7734
 22131  005DBC  0012               	return	
 22132  005DBE                     i2l7734:
 22133                           
 22134                           ;PWMConfig.h: 37: setPWM2duty(0);
 22135  005DBE  0E00               	movlw	0
 22136  005DC0  6E02               	movwf	i2setPWM2duty@actuator+1,c
 22137  005DC2  0E00               	movlw	0
 22138  005DC4  6E01               	movwf	i2setPWM2duty@actuator,c
 22139  005DC6  EC82  F02C         	call	i2_setPWM2duty	;wreg free
 22140                           
 22141                           ;PWMConfig.h: 38: if(PORTAbits.RA7)
 22142  005DCA  AE80               	btfss	3968,7,c	;volatile
 22143  005DCC  D003               	goto	i2l7740
 22144                           
 22145                           ;PWMConfig.h: 39: putchUART(101);
 22146  005DCE  0E65               	movlw	101
 22147  005DD0  EC81  F02F         	call	i2_putchUART
 22148  005DD4                     i2l7740:
 22149                           
 22150                           ;PWMConfig.h: 40: if(PORTAbits.RA6)
 22151  005DD4  AC80               	btfss	3968,6,c	;volatile
 22152  005DD6  0012               	return	
 22153                           
 22154                           ;PWMConfig.h: 41: putchUART(102);
 22155  005DD8  0E66               	movlw	102
 22156  005DDA  EC81  F02F         	call	i2_putchUART
 22157  005DDE  0012               	return	
 22158  005DE0                     __end_of_T2int:
 22159                           	opt stack 0
 22160                           pclatu	equ	0xFFB
 22161                           pclath	equ	0xFFA
 22162                           tblptru	equ	0xFF8
 22163                           tblptrh	equ	0xFF7
 22164                           tblptrl	equ	0xFF6
 22165                           tablat	equ	0xFF5
 22166                           prodh	equ	0xFF4
 22167                           prodl	equ	0xFF3
 22168                           intcon	equ	0xFF2
 22169                           postinc0	equ	0xFEE
 22170                           fsr0h	equ	0xFEA
 22171                           fsr0l	equ	0xFE9
 22172                           wreg	equ	0xFE8
 22173                           postdec1	equ	0xFE5
 22174                           fsr1h	equ	0xFE2
 22175                           fsr1l	equ	0xFE1
 22176                           bsr	equ	0xFE0
 22177                           indf2	equ	0xFDF
 22178                           postinc2	equ	0xFDE
 22179                           postdec2	equ	0xFDD
 22180                           plusw2	equ	0xFDB
 22181                           fsr2h	equ	0xFDA
 22182                           fsr2l	equ	0xFD9
 22183                           status	equ	0xFD8
 22184                           
 22185 ;; *************** function i2_setPWM2duty *****************
 22186 ;; Defined at:
 22187 ;;		line 23 in file "source/PWMConfig.h"
 22188 ;; Parameters:    Size  Location     Type
 22189 ;;  actuator        2    0[COMRAM] short 
 22190 ;; Auto vars:     Size  Location     Type
 22191 ;;  setPWM2duty     2    4[COMRAM] short 
 22192 ;; Return value:  Size  Location     Type
 22193 ;;                  1    wreg      void 
 22194 ;; Registers used:
 22195 ;;		wreg, status,2, status,0
 22196 ;; Tracked objects:
 22197 ;;		On entry : 0/0
 22198 ;;		On exit  : 0/0
 22199 ;;		Unchanged: 0/0
 22200 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22201 ;;      Params:         2       0       0       0       0       0       0
 22202 ;;      Locals:         2       0       0       0       0       0       0
 22203 ;;      Temps:          2       0       0       0       0       0       0
 22204 ;;      Totals:         6       0       0       0       0       0       0
 22205 ;;Total ram usage:        6 bytes
 22206 ;; Hardware stack levels used:    1
 22207 ;; This function calls:
 22208 ;;		Nothing
 22209 ;; This function is called by:
 22210 ;;		_T2int
 22211 ;; This function uses a non-reentrant model
 22212 ;;
 22213                           
 22214                           	psect	text86
 22215  005904                     __ptext86:
 22216                           	opt stack 0
 22217  005904                     i2_setPWM2duty:
 22218                           	opt stack 13
 22219                           
 22220                           ;PWMConfig.h: 24: short act = 400;
 22221                           
 22222                           ;incstack = 0
 22223  005904  0E01               	movlw	1
 22224  005906  6E06               	movwf	i2setPWM2duty@act+1,c
 22225  005908  0E90               	movlw	144
 22226  00590A  6E05               	movwf	i2setPWM2duty@act,c
 22227                           
 22228                           ;PWMConfig.h: 25: if(actuator > 400)
 22229  00590C  BE02               	btfsc	i2setPWM2duty@actuator+1,7,c
 22230  00590E  D00A               	goto	i2l7524
 22231  005910  0E91               	movlw	145
 22232  005912  5C01               	subwf	i2setPWM2duty@actuator,w,c
 22233  005914  0E01               	movlw	1
 22234  005916  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 22235  005918  A0D8               	btfss	status,0,c
 22236  00591A  D004               	goto	i2l7524
 22237                           
 22238                           ;PWMConfig.h: 26: act = 800;
 22239  00591C  0E03               	movlw	3
 22240  00591E  6E06               	movwf	i2setPWM2duty@act+1,c
 22241  005920  0E20               	movlw	32
 22242  005922  D00B               	goto	L17
 22243  005924                     i2l7524:
 22244                           
 22245                           ;PWMConfig.h: 27: else if(actuator < -400)
 22246  005924  AE02               	btfss	i2setPWM2duty@actuator+1,7,c
 22247  005926  D00B               	goto	i2l7528
 22248  005928  0E70               	movlw	112
 22249  00592A  5C01               	subwf	i2setPWM2duty@actuator,w,c
 22250  00592C  0EFE               	movlw	254
 22251  00592E  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 22252  005930  B0D8               	btfsc	status,0,c
 22253  005932  D005               	goto	i2l7528
 22254                           
 22255                           ;PWMConfig.h: 28: act = 0;
 22256  005934  0E00               	movlw	0
 22257  005936  6E06               	movwf	i2setPWM2duty@act+1,c
 22258  005938  0E00               	movlw	0
 22259  00593A                     L17:
 22260  00593A  6E05               	movwf	i2setPWM2duty@act,c
 22261  00593C  D006               	goto	i2l724
 22262  00593E                     i2l7528:
 22263                           
 22264                           ;PWMConfig.h: 29: else
 22265                           ;PWMConfig.h: 30: act = actuator + 400;
 22266  00593E  0E90               	movlw	144
 22267  005940  2401               	addwf	i2setPWM2duty@actuator,w,c
 22268  005942  6E05               	movwf	i2setPWM2duty@act,c
 22269  005944  0E01               	movlw	1
 22270  005946  2002               	addwfc	i2setPWM2duty@actuator+1,w,c
 22271  005948  6E06               	movwf	i2setPWM2duty@act+1,c
 22272  00594A                     i2l724:
 22273                           
 22274                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 22275  00594A  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 22276  00594E  3A03               	swapf	??i2_setPWM2duty,f,c
 22277  005950  5066               	movf	3942,w,c	;volatile
 22278  005952  1803               	xorwf	??i2_setPWM2duty,w,c
 22279  005954  0BCF               	andlw	-49
 22280  005956  1803               	xorwf	??i2_setPWM2duty,w,c
 22281  005958  6E66               	movwf	3942,c	;volatile
 22282                           
 22283                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 22284  00595A  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 22285  00595E  C006  F004         	movff	i2setPWM2duty@act+1,??i2_setPWM2duty+1
 22286  005962  3404               	rlcf	??i2_setPWM2duty+1,w,c
 22287  005964  3204               	rrcf	??i2_setPWM2duty+1,f,c
 22288  005966  3203               	rrcf	??i2_setPWM2duty,f,c
 22289  005968  3404               	rlcf	??i2_setPWM2duty+1,w,c
 22290  00596A  3204               	rrcf	??i2_setPWM2duty+1,f,c
 22291  00596C  3203               	rrcf	??i2_setPWM2duty,f,c
 22292  00596E  5003               	movf	??i2_setPWM2duty,w,c
 22293  005970  6E67               	movwf	3943,c	;volatile
 22294  005972  0012               	return		;funcret
 22295  005974                     __end_ofi2_setPWM2duty:
 22296                           	opt stack 0
 22297                           pclatu	equ	0xFFB
 22298                           pclath	equ	0xFFA
 22299                           tblptru	equ	0xFF8
 22300                           tblptrh	equ	0xFF7
 22301                           tblptrl	equ	0xFF6
 22302                           tablat	equ	0xFF5
 22303                           prodh	equ	0xFF4
 22304                           prodl	equ	0xFF3
 22305                           intcon	equ	0xFF2
 22306                           postinc0	equ	0xFEE
 22307                           fsr0h	equ	0xFEA
 22308                           fsr0l	equ	0xFE9
 22309                           wreg	equ	0xFE8
 22310                           postdec1	equ	0xFE5
 22311                           fsr1h	equ	0xFE2
 22312                           fsr1l	equ	0xFE1
 22313                           bsr	equ	0xFE0
 22314                           indf2	equ	0xFDF
 22315                           postinc2	equ	0xFDE
 22316                           postdec2	equ	0xFDD
 22317                           plusw2	equ	0xFDB
 22318                           fsr2h	equ	0xFDA
 22319                           fsr2l	equ	0xFD9
 22320                           status	equ	0xFD8
 22321                           
 22322 ;; *************** function i2_putchUART *****************
 22323 ;; Defined at:
 22324 ;;		line 11 in file "source/UARTConfig.h"
 22325 ;; Parameters:    Size  Location     Type
 22326 ;;  val             1    wreg     unsigned char 
 22327 ;; Auto vars:     Size  Location     Type
 22328 ;;  val             1    0[COMRAM] unsigned char 
 22329 ;; Return value:  Size  Location     Type
 22330 ;;                  1    wreg      void 
 22331 ;; Registers used:
 22332 ;;		wreg
 22333 ;; Tracked objects:
 22334 ;;		On entry : 0/0
 22335 ;;		On exit  : 0/0
 22336 ;;		Unchanged: 0/0
 22337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 22338 ;;      Params:         0       0       0       0       0       0       0
 22339 ;;      Locals:         1       0       0       0       0       0       0
 22340 ;;      Temps:          0       0       0       0       0       0       0
 22341 ;;      Totals:         1       0       0       0       0       0       0
 22342 ;;Total ram usage:        1 bytes
 22343 ;; Hardware stack levels used:    1
 22344 ;; This function calls:
 22345 ;;		Nothing
 22346 ;; This function is called by:
 22347 ;;		_T2int
 22348 ;; This function uses a non-reentrant model
 22349 ;;
 22350                           
 22351                           	psect	text87
 22352  005F02                     __ptext87:
 22353                           	opt stack 0
 22354  005F02                     i2_putchUART:
 22355                           	opt stack 13
 22356                           
 22357                           ;incstack = 0
 22358                           ;i2putchUART@val stored from wreg
 22359  005F02  6E01               	movwf	i2putchUART@val,c
 22360  005F04                     i2l699:
 22361  005F04  A2AC               	btfss	4012,1,c	;volatile
 22362  005F06  D7FE               	goto	i2l699
 22363                           
 22364                           ;UARTConfig.h: 13: TXREG1 = val;
 22365  005F08  C001  FFAD         	movff	i2putchUART@val,4013	;volatile
 22366  005F0C  0012               	return		;funcret
 22367  005F0E                     __end_ofi2_putchUART:
 22368                           	opt stack 0
 22369                           pclatu	equ	0xFFB
 22370                           pclath	equ	0xFFA
 22371                           tblptru	equ	0xFF8
 22372                           tblptrh	equ	0xFF7
 22373                           tblptrl	equ	0xFF6
 22374                           tablat	equ	0xFF5
 22375                           prodh	equ	0xFF4
 22376                           prodl	equ	0xFF3
 22377                           intcon	equ	0xFF2
 22378                           postinc0	equ	0xFEE
 22379                           fsr0h	equ	0xFEA
 22380                           fsr0l	equ	0xFE9
 22381                           wreg	equ	0xFE8
 22382                           postdec1	equ	0xFE5
 22383                           fsr1h	equ	0xFE2
 22384                           fsr1l	equ	0xFE1
 22385                           bsr	equ	0xFE0
 22386                           indf2	equ	0xFDF
 22387                           postinc2	equ	0xFDE
 22388                           postdec2	equ	0xFDD
 22389                           plusw2	equ	0xFDB
 22390                           fsr2h	equ	0xFDA
 22391                           fsr2l	equ	0xFD9
 22392                           status	equ	0xFD8
 22393                           pclatu	equ	0xFFB
 22394                           pclath	equ	0xFFA
 22395                           tblptru	equ	0xFF8
 22396                           tblptrh	equ	0xFF7
 22397                           tblptrl	equ	0xFF6
 22398                           tablat	equ	0xFF5
 22399                           prodh	equ	0xFF4
 22400                           prodl	equ	0xFF3
 22401                           intcon	equ	0xFF2
 22402                           postinc0	equ	0xFEE
 22403                           fsr0h	equ	0xFEA
 22404                           fsr0l	equ	0xFE9
 22405                           wreg	equ	0xFE8
 22406                           postdec1	equ	0xFE5
 22407                           fsr1h	equ	0xFE2
 22408                           fsr1l	equ	0xFE1
 22409                           bsr	equ	0xFE0
 22410                           indf2	equ	0xFDF
 22411                           postinc2	equ	0xFDE
 22412                           postdec2	equ	0xFDD
 22413                           plusw2	equ	0xFDB
 22414                           fsr2h	equ	0xFDA
 22415                           fsr2l	equ	0xFD9
 22416                           status	equ	0xFD8
 22417                           
 22418                           	psect	rparam
 22419  0000                     pclatu	equ	0xFFB
 22420                           pclath	equ	0xFFA
 22421                           tblptru	equ	0xFF8
 22422                           tblptrh	equ	0xFF7
 22423                           tblptrl	equ	0xFF6
 22424                           tablat	equ	0xFF5
 22425                           prodh	equ	0xFF4
 22426                           prodl	equ	0xFF3
 22427                           intcon	equ	0xFF2
 22428                           postinc0	equ	0xFEE
 22429                           fsr0h	equ	0xFEA
 22430                           fsr0l	equ	0xFE9
 22431                           wreg	equ	0xFE8
 22432                           postdec1	equ	0xFE5
 22433                           fsr1h	equ	0xFE2
 22434                           fsr1l	equ	0xFE1
 22435                           bsr	equ	0xFE0
 22436                           indf2	equ	0xFDF
 22437                           postinc2	equ	0xFDE
 22438                           postdec2	equ	0xFDD
 22439                           plusw2	equ	0xFDB
 22440                           fsr2h	equ	0xFDA
 22441                           fsr2l	equ	0xFD9
 22442                           status	equ	0xFD8
 22443                           
 22444                           	psect	temp
 22445  00004A                     btemp:
 22446                           	opt stack 0
 22447  00004A                     	ds	1
 22448  0000                     int$flags	set	btemp
 22449                           pclatu	equ	0xFFB
 22450                           pclath	equ	0xFFA
 22451                           tblptru	equ	0xFF8
 22452                           tblptrh	equ	0xFF7
 22453                           tblptrl	equ	0xFF6
 22454                           tablat	equ	0xFF5
 22455                           prodh	equ	0xFF4
 22456                           prodl	equ	0xFF3
 22457                           intcon	equ	0xFF2
 22458                           postinc0	equ	0xFEE
 22459                           fsr0h	equ	0xFEA
 22460                           fsr0l	equ	0xFE9
 22461                           wreg	equ	0xFE8
 22462                           postdec1	equ	0xFE5
 22463                           fsr1h	equ	0xFE2
 22464                           fsr1l	equ	0xFE1
 22465                           bsr	equ	0xFE0
 22466                           indf2	equ	0xFDF
 22467                           postinc2	equ	0xFDE
 22468                           postdec2	equ	0xFDD
 22469                           plusw2	equ	0xFDB
 22470                           fsr2h	equ	0xFDA
 22471                           fsr2l	equ	0xFD9
 22472                           status	equ	0xFD8


Data Sizes:
    Strings     661
    Constant    144
    Data        70
    BSS         63
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      73
    BANK0           160    108     132
    BANK1           256     49     131
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_51(CODE[7]), STR_50(CODE[17]), STR_49(CODE[17]), STR_48(CODE[18]), 
		 -> STR_47(CODE[19]), STR_46(CODE[18]), STR_45(CODE[18]), STR_44(CODE[18]), 
		 -> STR_43(CODE[18]), STR_42(CODE[17]), STR_41(CODE[18]), STR_40(CODE[17]), 
		 -> STR_39(CODE[18]), STR_38(CODE[17]), STR_37(CODE[18]), STR_36(CODE[25]), 
		 -> STR_35(CODE[18]), STR_34(CODE[7]), STR_33(CODE[18]), STR_32(CODE[7]), 
		 -> STR_31(CODE[18]), STR_30(CODE[7]), STR_29(CODE[18]), STR_28(CODE[16]), 
		 -> STR_27(CODE[18]), STR_26(CODE[7]), STR_25(CODE[7]), STR_24(CODE[7]), 
		 -> STR_23(CODE[18]), STR_22(CODE[20]), STR_21(CODE[18]), STR_20(CODE[15]), 
		 -> STR_19(CODE[18]), STR_18(CODE[15]), STR_17(CODE[18]), STR_16(CODE[15]), 
		 -> STR_15(CODE[18]), STR_14(CODE[16]), STR_13(CODE[18]), STR_12(CODE[15]), 
		 -> STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[18]), STR_8(CODE[17]), 
		 -> STR_7(CODE[17]), STR_6(CODE[18]), STR_5(CODE[18]), STR_4(CODE[17]), 
		 -> STR_3(CODE[15]), STR_2(CODE[18]), STR_1(CODE[17]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_UARTint
    i1_calcVars2ti->i1___fldiv
    i1_calcVars2ti->i1___flmul
    _calcSysVars->i1___fldiv
    _calcSysVars->i1___flmul

Critical Paths under _hp_isr in COMRAM

    _T2int->i2_setPWM2duty

Critical Paths under _main in BANK0

    _lcd_init->_lcd_send_byte
    _drawScreen->_drawSNquest
    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAutoCalibRes->_printf
    _drawAutoCalibRM->_printf
    _drawValEditor->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf
    _printf->___flsub
    _scale->___flmul
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_4bits
    _lcd_read_byte->_lcd_read_4bits
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___flsub->___fladd
    ___fladd->_fround
    _pressUP->_chanValDigUP
    _pressENTER->_desintegrator
    _desintegrator->___fltol
    ___fltol->_scale
    _pressDOWN->_chanValDigDOWN
    _longPressENTER->_integrator
    _integrator->___fldiv
    _saveSysParams->_calcVars2ti
    _calcVars2ti->___fldiv
    _calcVars2ti->___flmul
    ___flmul->___awdiv
    ___fldiv->___xxtofl
    _PWM2Config->_setPWM2duty

Critical Paths under _isr in BANK0

    i1_saveSysParams->i1_calcVars2ti
    _sysParamInit->_calcSysVars

Critical Paths under _hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAutoCalibRes->_printf
    _drawAutoCalibRM->_printf
    _drawValEditor->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _hp_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _hp_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _hp_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _hp_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  749496
                       _EEPROMConfig
                         _PWM2Config
                         _UARTConfig
                     _buttonChecking
                        _clockConfig
                         _drawScreen
                    _interruptConfig
                           _ioConfig
                          _ioInitStt
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     6      0    1879
                                             29 BANK0      6     6      0
                     _lcd_send_4bits
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ioInitStt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ioConfig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawScreen                                           0     0      0  709412
                         _drawAdvOFF
                          _drawAdvON
                    _drawAutoCalibRM
                   _drawAutoCalibRes
                        _drawBadPass
                        _drawChanVal
                           _drawMenu
                       _drawPassWord
                        _drawSNquest
 ---------------------------------------------------------------------------------
 (2) _drawSNquest                                          3     3      0   64170
                                            105 BANK0      3     3      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawPassWord                                         2     2      0   64046
                                            105 BANK0      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawMenu                                             1     1      0   69521
                                            105 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawChanVal                                          2     2      0  127993
                                            105 BANK0      2     2      0
                      _drawValEditor
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawBadPass                                          0     0      0   63947
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAutoCalibRes                                     0     0      0   63947
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAutoCalibRM                                      0     0      0  127894
                      _drawValEditor
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _drawValEditor                                        0     0      0   63947
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvON                                            0     0      0   63947
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvOFF                                           0     0      0   63947
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              54    36     18   60055
                                            101 BANK0      4     4      0
                                              0 BANK1     49    31     18
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4   12237
                                             60 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0    5388
                                             34 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             2     2      0    5357
                                             32 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    3892
                                             29 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1403
                                             26 BANK0      3     2      1
                      _lcd_read_byte
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       5     5      0     272
                                             21 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _lcd_read_byte                                        2     2      0     114
                                             23 BANK0      2     2      0
                     _lcd_read_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_read_4bits                                       2     2      0      46
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4   11958
                                             60 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             27 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             21 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             34 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3697
                                             93 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3364
                                             73 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             21 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     728
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _clockConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonChecking                                       0     0      0   37989
                           _delay_ms
                      _longPressDOWN
                     _longPressENTER
                     _longPressRETRO
                        _longPressUP
                          _pressDOWN
                         _pressENTER
                         _pressRETRO
                            _pressUP
                        _releaseDOWN
                       _releaseENTER
                       _releaseRETRO
                          _releaseUP
 ---------------------------------------------------------------------------------
 (2) _releaseUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseRETRO                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseENTER                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseDOWN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressUP                                              1     1      0       0
                                             26 BANK0      1     1      0
                       _chanValDigUP
 ---------------------------------------------------------------------------------
 (3) _chanValDigUP                                         5     5      0       0
                                             21 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _pressRETRO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressENTER                                           0     0      0   21550
                          _checkPass
                     _confirmEdition
                      _desintegrator
 ---------------------------------------------------------------------------------
 (3) _desintegrator                                       20    20      0    9596
                                             79 BANK0     20    20      0
                            ___aldiv
                            ___flmul
                            ___fltol
                             ___lmul
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     645
                                             69 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___aldiv                                             14     6      8     428
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (3) _checkPass                                            7     7      0     115
                                             21 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _pressDOWN                                            1     1      0       0
                                             26 BANK0      1     1      0
                     _chanValDigDOWN
 ---------------------------------------------------------------------------------
 (3) _chanValDigDOWN                                       5     5      0       0
                                             21 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (2) _longPressUP                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressRETRO                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressENTER                                       0     0      0   15625
                     _confirmEdition
                         _integrator
 ---------------------------------------------------------------------------------
 (3) _integrator                                          12    12      0    3786
                                             60 BANK0     12    12      0
                            ___fldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     707
                                             21 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___lmul                                              12     4      8     450
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (3) _confirmEdition                                       1     1      0   11839
                                             64 BANK0      1     1      0
                      _saveSysParams
 ---------------------------------------------------------------------------------
 (4) _saveSysParams                                        0     0      0   11653
                        _calcVars2ti
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          2     1      1    1260
                                             21 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _calcVars2ti                                          4     4      0   10393
                                             60 BANK0      4     4      0
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7736
                                             35 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    2425
                                             35 BANK0     25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) _longPressDOWN                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     814
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UARTConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2Config                                           0     0      0     216
                        _setPWM2duty
                           _t2config
 ---------------------------------------------------------------------------------
 (2) _t2config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPWM2duty                                          6     4      2     216
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _EEPROMConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _isr                                                17    17      0   10716
                                              4 BANK0     17    17      0
                            _UARTint
 ---------------------------------------------------------------------------------
 (12) _UARTint                                             1     1      0   10716
                                             45 COMRAM     1     1      0
                          _putchUART
                       _sysParamInit
                    i1_saveSysParams
 ---------------------------------------------------------------------------------
 (13) i1_saveSysParams                                     0     0      0    5557
                      i1_calcVars2ti
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (14) i1_writeEEPROM                                       2     1      1     538
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (14) i1_calcVars2ti                                       4     4      0    5019
                                              0 BANK0      4     4      0
                          i1___fldiv
                          i1___flmul
 ---------------------------------------------------------------------------------
 (13) _sysParamInit                                        0     0      0    4979
                        _calcSysVars
                         _readEEPROM
 ---------------------------------------------------------------------------------
 (14) _readEEPROM                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (14) _calcSysVars                                         4     4      0    4957
                                              0 BANK0      4     4      0
                          i1___fldiv
                          i1___flmul
 ---------------------------------------------------------------------------------
 (15) i1___flmul                                          25    17      8    2882
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (15) i1___fldiv                                          25    17      8    1905
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (13) _putchUART                                           1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 15
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (16) _hp_isr                                             14    14      0     162
                                              6 COMRAM    14    14      0
                              _T2int
 ---------------------------------------------------------------------------------
 (17) _T2int                                               0     0      0     162
                        i2_putchUART
                      i2_setPWM2duty
 ---------------------------------------------------------------------------------
 (18) i2_setPWM2duty                                       6     4      2     140
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (18) i2_putchUART                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 18
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMConfig
   _PWM2Config
     _setPWM2duty
     _t2config
   _UARTConfig
   _buttonChecking
     _delay_ms
     _longPressDOWN
     _longPressENTER
       _confirmEdition
         _saveSysParams
           _calcVars2ti
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
       _integrator
         ___fldiv
           ___xxtofl (ARG)
         ___lmul
         ___xxtofl
     _longPressRETRO
     _longPressUP
     _pressDOWN
       _chanValDigDOWN
     _pressENTER
       _checkPass
       _confirmEdition
         _saveSysParams
           _calcVars2ti
             ___fldiv
               ___xxtofl (ARG)
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
       _desintegrator
         ___aldiv
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lmul
     _pressRETRO
     _pressUP
       _chanValDigUP
     _releaseDOWN
     _releaseENTER
     _releaseRETRO
     _releaseUP
   _clockConfig
   _drawScreen
     _drawAdvOFF
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAdvON
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAutoCalibRM
       _drawValEditor
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _lcd_read_byte
                     _lcd_read_4bits
                   _lcd_send_4bits
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAutoCalibRes
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawBadPass
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawChanVal
       _drawValEditor
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _printf
           ___awdiv
             ___awmod (ARG)
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___flge
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           ___flneg
           ___flsub
             ___fladd
               _fround (ARG)
                 ___awdiv
                   ___awmod (ARG)
                 ___awmod
                 ___flmul
                   ___awdiv (ARG)
                     ___awmod (ARG)
                   ___awmod (ARG)
             ___xxtofl (ARG)
           ___fltol
             ___flmul (ARG)
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
             _scale (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___lldiv
           ___llmod
             ___lldiv (ARG)
           ___wmul
           ___xxtofl
           __div_to_l_
           __tdiv_to_l_
           _fround
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _isdigit
           _putch
             _lcd_putc
               _lcd_gotoxy
                 _lcd_send_byte
                   _lcd_read_byte
                     _lcd_read_4bits
                   _lcd_send_4bits
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
           _scale
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawMenu
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawPassWord
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawSNquest
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _interruptConfig
   _ioConfig
   _ioInitStt
   _lcd_init
     _lcd_send_4bits
     _lcd_send_byte
       _lcd_read_byte
         _lcd_read_4bits
       _lcd_send_4bits

 _isr (ROOT)
   _UARTint
     _putchUART
     _sysParamInit
       _calcSysVars
         i1___fldiv
         i1___flmul
       _readEEPROM
     i1_saveSysParams
       i1_calcVars2ti
         i1___fldiv
         i1___flmul
       i1_writeEEPROM

 _hp_isr (ROOT)
   _T2int
     i2_putchUART
     i2_setPWM2duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     31      83       6       51.2%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6C      84       4       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      49       1       77.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     150       9        0.0%
DATA                 0      0     150      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Thu Nov 03 00:52:54 2016

             ___fldiv@aexp 009B               ___fldiv@bexp 009A               ___fldiv@sign 008F  
          ?_lcd_send_4bits 0001            ??_desintegrator 00AF                i1___fldiv@a 0019  
              i1___fldiv@b 0015           i2setPWM2duty@act 0005                         l81 5DE8  
                       l90 5ADA             ?_lcd_send_byte 007A               ___awdiv@sign 0080  
                       _fd 0158                         _ie 015B              _holdRETROcont 015A  
              i1___flmul@a 0019                i1___flmul@b 0015           ?i1_saveSysParams 0001  
                       _pi 0175                         bsr 000FE0            ?_confirmEdition 0001  
      ___wmul@multiplicand 0077     __size_ofi1_calcVars2ti 023A               __CFG_CP0$OFF 000000  
             __CFG_CP1$OFF 000000               __CFG_CP2$OFF 000000               __CFG_CP3$OFF 000000  
              drawMenu@adv 00C9                        l502 3A42                        l513 3AE8  
                      l505 3AB8                        l282 5E48                        l522 3B90  
                      l371 1FBA                        l419 4AFE                        l516 3B20  
                      l612 58C2                        l365 1F3E                        l437 4CA4  
                      l390 2164                        l519 3B58                        l641 2E28  
                      l393 21C6                        l490 3A20                        l387 210A  
                      l379 204A                        l724 536C                        l652 2EBA  
                      l396 2228                        l653 2ECA                        l645 2E50  
                      l805 5D80                        l654 2EE6                        l910 0890  
                      l671 2FFC                        l655 2F02                        l770 2CC4  
                      l746 2B80                        l773 2CDE                        l782 2D62  
                      l758 2C26                        l876 0A20               __CFG_CPB$OFF 000000  
                      _PR2 000FBB               __CFG_CPD$OFF 000000                        _isr 0018  
  __end_of_interruptConfig 5F28               ___awmod@sign 007A                        prod 000FF3  
                      wreg 000FE8                 _TXSTA1bits 000FAC               __CFG_IESO$ON 000000  
             drawSNquest@i 00C9               ___flmul@aexp 0090               ___flmul@bexp 0095  
      __end_ofi2_putchUART 5F0E               ___flmul@sign 008F               ___flmul@temp 009A  
             ___flmul@prod 0096               __CFG_LVP$OFF 000000              i1___fldiv@grs 0028  
            i1___fldiv@rem 0022               ___fltol@exp1 00AE                       l1153 4076  
                     l1250 3C9A                       l1163 3EB0                       l1251 3CDE  
                     l1332 4FCA                       l1342 52FA                       l1512 1752  
                     l1521 1A5C                       l1257 3D5E                       l1426 13D6  
                     l1443 154A                       l1427 13CA                       l1452 15DE  
                     l1428 1396                       l1541 3798                       l1534 36EC  
                     l1519 19EE                       l1529 1B00                       l1482 1D72  
                     l1491 1DAA                       l1548 37F4                       l1493 1E18  
                     l1485 1D1A                       l1549 380C                       l5210 1C42  
                     l5242 1D6E                       l5218 1C70                       l5236 1D26  
                     l5228 1CEE                       l5254 1DBE                       l5174 1B86  
                     l6310 488A                       l7110 41FE                       l5280 1EAA  
                     l5264 1E12                       l5248 1D94                       l5168 1B62  
                     l7200 470C                       l7104 41E6                       l5290 1EE0  
                     l5282 1ECC                       l5274 1E68                       l5194 1BE4  
                     l5178 1B90                       l7210 473A                       l6314 48A6  
                     l6306 4878                       l7122 426C                       l5188 1BC0  
                     l7220 475C                       l7140 42B8                       l7132 429A  
                     l7116 424E                       l8100 5444                       l5278 1E96  
                     l5198 1BEE                       l6270 57E4                       l7222 4762  
                     l7206 472E                       l7142 42C0                       l7150 42D2  
                     l5288 1EDC                       l7224 4768                       l7216 474C  
                     l7144 42C6                       l7128 428E                       l8112 5480  
                     l6266 57BE                       l7170 5714                       l7218 4752  
                     l6282 47C2                       l7146 42CC                       l7138 42B2  
                     l8210 12DA                       l8202 12B0                       l8106 5462  
                     l8130 5B02                       l7164 56FA                       l7228 476E  
                     l6620 5534                       l6612 54CC                       l7252 58C8  
                     l9020 00DC                       l7158 56DC                       l7182 4690  
                     l6622 553C                       l6294 480E                       l7246 58A4  
                     l8310 1592                       l8118 549E                       l8400 1766  
                     l7272 59FC                       l7168 570C                       l6616 54E2  
                     l6296 481E                       l6288 47E0                       l7264 58FC  
                     l8304 157C                       l8320 15B2                       l8240 1316  
                     l8152 55FA                       l8160 5622                       l9200 0842  
                     l9120 0428                       l9104 03A4                       l9040 01AC  
                     l9016 00C6                       l7194 46EE                       l6626 5544  
                     l6298 4824                       l8330 15D8                       l8314 159E  
                     l8322 15B8                       l8138 5C58                       l8154 5608  
                     l8146 55CC                       l9202 0850                       l9050 0218  
                     l9026 010E                       l9034 0184                       l7452 5358  
                     l8404 177A                       l7188 46A2                       l8340 1634  
                     l8252 13AA                       l8156 5616                       l8148 55DA  
                     l9300 0C22                       l9212 0894                       l9132 04DE  
                     l9052 021E                       l9044 01F2                       ?_isr 0001  
                     l7278 5A16                       l8254 13B0                       l8174 1238  
                     l8502 4E7E                       l9230 0A04                       l9222 091A  
                     l9206 085E                       l9134 04F4                       l9062 026C  
                     l9046 0208                       l7448 5336                       l6808 5AC2  
                     l8360 168C                       l8352 1674                       l8344 1646  
                     l8192 1282                       l8168 1214                       l9312 0CEE  
                     l9304 0C3C                       l9208 0872                       l9144 0598  
                     l9136 0530                       l9128 04AC                       l9072 02AA  
                     l9064 0278                       l8370 16BC                       l8354 1678  
                     l8282 1448                       l8258 13BA                       l8186 126E  
                     l8178 1242                       l8514 4EB2                       l8530 4F02  
                     l8610 276A                       l9250 0A94                       l9234 0A12  
                     l9218 08B8                       l9162 06AC                       l9138 0546  
                     l9082 02F4                       l9074 02C4                       l9066 027E  
                     l9058 0246                       l9314 0D04                       l8452 1A02  
                     l8380 16F8                       l8348 1668                       l8276 1438  
                     l8268 13FA                       l8516 4EBE                       l8508 4E94  
                     l9308 0C64                       l9228 09F6                       l9180 0748  
                     l9164 06B2                       l9148 05CA                       l9068 0296  
                     l8462 1A56                       l8446 19D8                       l8278 143E  
                     l8286 145A                       l8198 12A6                       l8534 4F16  
                     l8526 4EF4                       l8518 4EC4                       l8550 515E  
                     l9270 0B06                       l9246 0A6C                       l9190 078C  
                     l9158 0634                       l9094 0352                       l9078 02DC  
                     l9086 02FA                       l8472 1AAC                       l8376 16E0  
                     l8296 152A                       l8632 0EA2                       l9256 0ABA  
                     l9184 076A                       l9176 06F8                       l9088 0338  
                     l8394 173A                       l8378 16E6                       l8714 3D14  
                     l8570 51CA                       l8562 51A8                       l8554 5172  
                     l8546 514E                       l8618 2856                       l8650 1104  
                     l8642 0F94                       l9290 0BCA                       l9274 0B2E  
                     l9258 0AC0                       l9194 07B4                       l9186 0770  
                     l8476 1AD2                       l8396 1740                       l8388 1716  
                     l8812 3E5E                       l8804 3DBE                       l8900 528E  
                     l8740 3F4C                       l8724 3D44                       l8556 517E  
                     l9292 0BD4                       l9284 0B92                       l9188 0778  
                     l8486 1B20                       l8478 1AE6                       l8590 317C  
                     l8902 529E                       l8734 3F26                       l8726 3D54  
                     l8718 3D28                       l8558 5184                       l8566 51B6  
                     l8638 0F68                       l9278 0B5E                       l8488 1B2A  
                     l9704 3B6A                       l9640 43E0                       l9632 4346  
                     l9616 3918                       l8808 3E0C                       l8904 52A4  
                     l8656 11CA                       l9296 0C0C                       l8930 377A  
                     l8818 3EFC                       l8826 5B64                       l8762 3FF4  
                     l8754 3FA0                       l9298 0C16                       l9810 2080  
                     l8596 31EE                       l9660 3A78                       l9644 3A28  
                     l9716 3BA2                       l8924 3724                       l9628 4330  
                     l8852 494C                       l8836 48DE                       l8908 52E8  
                     l8684 3C46                       l8668 5DAC                       l9804 2044  
                     l9654 3A54                       l8950 385E                       l8926 372C  
                     l8918 36FC                       l8870 49B2                       l8862 497C  
                     l8774 402C                       l8678 3C0C                       l9910 35A6  
                     l9902 3570                       l9830 2130                       l9814 20AA  
                     l9664 3A92                       l8936 37D6                       l8928 373C  
                     l8864 498C                       l8856 4960                       l8880 4F4E  
                     l8784 405C                       l9674 3ACA                       l8938 37E6  
                     l8866 4996                       l8882 4F5E                       l8786 406C  
                     l8778 4040                       l9906 358A                       l9850 21C0  
                     l9842 2192                       l9826 2104                       l9818 20D6  
                     l9684 3AFA                       l9668 3AAC                       l8892 4FB8  
                     l8884 4F64                       l9932 3640                       l9924 360E  
                     l9916 35DC                       l9772 1F74                       l9694 3B32  
                     l9942 3672                       l9862 2222                       l9854 21F4  
                     l9838 215E                       l9782 1FB4                       l9774 1F86  
                     l9766 1F38                       l9758 1F0A                       STR_1 7F40  
                     l9872 349E                       l9792 1FFA                       l9952 4B1E  
                     STR_2 7E15                       STR_3 7F72                       l9874 34A8  
                     STR_4 7F1E                       STR_5 7DCD                       l9892 3536  
                     l9884 34DA                       l9796 2016                       l9788 1FE0  
                     l9868 2256                       l9948 4B08                       STR_6 7EB7  
                     STR_7 7EDA                       l9878 34BE                       l9958 4B3A  
                     l9990 4BFA                       STR_8 7EEB                       STR_9 7E4B  
                     l9986 4BE4                       l9996 4C16               printf@tmpval 011E  
                     u8300 427A                       u5670 1E7C                       u8500 4718  
                     u8510 471A                       u8290 4278                       u9820 564E  
                     u9830 5660                       u9840 567A                       u9850 569A  
                     u9826 5650                       u9915 548A                       u9916 548C  
                     u9838 5664                       u9935 54A8                       u9848 567E  
                     u9936 54AA                       u9858 569E                       u9875 544E  
                     u9955 5B1A                       u9876 5450                       u9956 5B1C  
                     u9895 546C                       u9896 546E              __CFG_FCMEN$ON 000000  
              lcd_putc@cha 0081            __end_of_UARTint 55C6                       _main 5D60  
     __size_of_calcVars2ti 023C              i1___flmul@grs 0023           lcd_read_byte@low 0077  
                     fsr0h 000FEA                       fsr1h 000FE2                       fsr0l 000FE9  
                     fsr2h 000FDA                       fsr1l 000FE1                       indf2 000FDF  
                     fsr2l 000FD9                       btemp 004A              __CFG_BORV$285 000000  
           ??_drawPassWord 00C9                       pclat 000FFA                       prodh 000FF4  
                     prodl 000FF3                       start 00B2            ?_longPressENTER 0001  
          ___fldiv@new_exp 0094       __size_of_calcSysVars 014C            ?_longPressRETRO 0001  
            drawSNquest@tq 00CB      __size_of_sysParamInit 010C       __end_of_EEPROMConfig 5F2E  
             ___param_bank 000010                _writeEEPROM 5E2E                      ??_isr 0064  
           i1___fldiv@aexp 002D             i1___fldiv@bexp 002C               _BAUDCON1bits 000FB8  
           i1___fldiv@sign 0021                      l10012 4C8A                      l10004 4C54  
                    l10110 2F98                      l10112 2FAC                      l10008 4C6E  
                    l10122 2FE2                      l10042 2E14                      l10132 3014  
                    l10060 2E7A                      l10052 2E42                      l10044 2E1C  
                    l10142 51F6                      l10118 2FCE                      l10310 4FE6  
                    l10152 5226                      l10128 3002                      l10064 2E94  
                    l10056 2E60                      l10400 2C08                      l10320 5006  
                    l10312 4FEC                      l10090 2F4E                      l10322 500C  
                    l10314 4FF2                      l10234 50BE                      l10148 5214  
                    l10068 2EAE                      l10332 5034                      l10324 5014  
                    l10316 4FFA                      l10308 4FDE                      l10252 5104  
                    l10166 525E                      l10158 5240                      l10094 2F60  
                    l10430 2C7C                      l10334 503C                      l10326 501C  
                    l10318 5000                      l10246 50E6                      l10238 50C8  
                    l10088 2F1E                      l10504 2DAC                      l10416 2C40  
                    l10440 2CA6                      l10328 5024                      l10256 510E  
                    l10514 2DCE                      l10426 2C70                      l10418 2C50  
                    l10338 5042                      l10516 2DD4                      l10508 2DB8  
                    l10436 2C92                      l10438 2C98                      l10390 2BDE  
                    l10464 2D0E                      l10456 2CEE                      l10376 2BA0  
                    l10474 2D30                      l10386 2BD2                      l10378 2BB0  
                    l10476 2D36                      l10468 2D1A                      l10396 2BF4  
                    l10494 2D7C                      l10478 2D44                      l10398 2BFA  
                    l10496 2D8C              ___fltol@sign1 00AD            __end_of___aldiv 48B8  
          __end_of___fladd 169E                      ?_main 0001            __end_of___fldiv 1F04  
          __end_of___awdiv 4F20            __end_of___flneg 5B76                      _EEADR 000FA9  
                    STR_10 7F90                      STR_11 7F81                      STR_20 7FBD  
                    STR_12 7FAE                      STR_21 7DCD                      STR_13 7E6F  
                    STR_30 7FE9                      STR_14 7F62                      STR_22 7D82  
                    STR_31 7DDF                      STR_23 7E4B                      STR_15 7DF1  
                    STR_32 7FD4                      STR_24 7FE2                      STR_16 7F9F  
                    STR_40 7F0D                      STR_33 7E03                      STR_41 7E5D  
                    STR_25 7FDB                      STR_17 7DDF                      STR_34 7FF7  
                    STR_26 7FF0                      STR_18 7FCC                      STR_42 7F2F  
                    STR_50 7EC9                      STR_27 7E6F                      STR_51 7FE2  
                    STR_43 7E81                      STR_19 7E03                      STR_35 7DBB  
                    STR_28 7F62                      STR_44 7E93                      STR_36 7D69  
          __end_of___awmod 51D4                      STR_29 7DF1                      STR_45 7E39  
                    STR_37 7DA9                      STR_38 7EFC                      STR_46 7E27  
                    STR_39 7E5D                      STR_47 7D96                      STR_48 7EA5  
                    STR_49 7F51            __end_of___flmul 1B44            __end_of___flsub 5A70  
          __end_of___fltol 49C4            __end_of___lldiv 4FDC                      u11020 48FE  
                    u10060 1360                      u10070 1378                      u10080 137A  
                    u11025 48F2                      u10520 1AC0                      u10440 197A  
                    u13000 526A                      u13010 526C                      u12220 3916  
          ___awdiv@divisor 007D                      u10445 196E                      u11245 454E  
                    u11246 4550            __end_of___llmod 530C                      u10811 3C22  
            lcd_init@F7567 017D                      u13170 2BB8                      u11570 0888  
                    u13500 2D94                      u10791 3BE8                      u12800 2FA4  
                    u13280 2C58                      u13176 2BBA                      u12810 2FA6  
                    u13506 2D96                      u12830 2FC2                      u13390 2CF6  
                    u13286 2C5A                      u12840 2FC4                      u13396 2CF8  
                    u13647 50AE                      u13657 50D6                      u13667 50F4  
                    u13677 55EE                      u13687 54B2                      u13697 5ACA  
                    i1l282 5E66                      i1l288 5EA8                      i1l802 006A  
              ?_UARTConfig 0001                      i1l699 5EF8                      i2l724 594A  
                    i2l699 5F04            ___awdiv@counter 007F                      i2l798 5770  
                    _T2int 5DB6                ?_PWM2Config 0001              __CFG_WRT0$OFF 000000  
            __CFG_WRT1$OFF 000000              __CFG_WRT2$OFF 000000        ___lmul@multiplicand 0079  
            __CFG_WRT3$OFF 000000             __CFG_EBTR0$OFF 000000             __CFG_EBTR1$OFF 000000  
           __CFG_EBTR2$OFF 000000                      _fData 00CC             __CFG_EBTR3$OFF 000000  
            __CFG_WRTB$OFF 000000              __CFG_WRTC$OFF 000000              __CFG_WRTD$OFF 000000  
           __CFG_EBTRB$OFF 000000                      _exp10 015D            __end_of_dpowers 7D69  
           i1___flmul@aexp 0022             i1___flmul@bexp 0027                      _selSN 00D9  
        lcd_read_byte@high 0078                      _scale 0D24            __end_of_isdigit 5DB6  
       __CFG_MCLRE$EXTMCLR 000000             i1___flmul@sign 0021             i1___flmul@temp 002C  
          ??_drawValEditor 00C9             i1___flmul@prod 0028                      _putch 5EB0  
                    tablat 000FF5              drawPassWord@i 00C9              i1_calcVars2ti 3262  
          __end_of_pressUP 4302               _sysParamInit 49C4                      plusw2 000FDB  
             ?_setPWM2duty 0075                      status 000FD8            ??_lcd_read_byte 0077  
       __size_ofi1___fldiv 02B4             __CFG_HFOFST$ON 000000         __size_ofi1___flmul 0350  
             putchUART@val 0015               ?_longPressUP 0001            __initialization 53A0  
    __end_ofi1_writeEEPROM 5E6C               __end_of_main 5D8C            ??_lcd_send_byte 007B  
    __end_of_saveSysParams 4556           _drawAutoCalibRes 5CD6              lcd_gotoxy@pos 007E  
             ?_releaseDOWN 0001                i2_putchUART 5F02                     ??_main 00CC  
        i1calcVars2ti@temp 0060              __activetblptr 000002             __CFG_PLLCFG$ON 000000  
                   ?_T2int 0001       __size_of__tdiv_to_l_ 019E           ?_interruptConfig 0001  
       desintegrator@temp2 00BD         desintegrator@temp3 00B9         desintegrator@tempL 00B5  
     __size_of_clockConfig 0028      __size_of_chanValDigUP 00D0           __end_of_t2config 5E84  
                ??_UARTint 002E             setPWM2duty@act 0079           ___llmod@dividend 0082  
                   ?_scale 009C                     _EEDATA 000FA8                     _CCPR2L 000F67  
                   _EECON2 000FA7           ___awdiv@dividend 007B                     ?_putch 0001  
 __size_of_drawAutoCalibRM 0032             ?i1_calcVars2ti 0001                     i1l1512 2306  
                   i1l1521 251C                     i1l1529 25A2                     i1l1482 2A34  
                   i1l1493 2AA0                     i1l9402 2A4A                     i1l9332 28D8  
                   i1l9432 2B08                     i1l9408 2A68                     i1l9352 2918  
                   i1l9328 28D4                     i1l9442 2B3E                     i1l9434 2B16  
                   i1l9418 2A9C                     i1l9444 2B40                     i1l9436 2B32  
                   i1l9428 2AE4                     i1l9372 2986                     i1l9364 295E  
                   i1l9348 2914                     i1l9540 24E4                     i1l9390 2A0C  
                   i1l9382 29E4                     i1l9550 2518                     i1l9534 24C6  
                   i1l9560 2560                     i1l9464 22B2                     i1l9482 22F2  
                   i1l9466 22B6                     i1l9396 2A32                     i1l9564 257E  
                   i1l9492 2324                     i1l9484 22F6                     i1l9468 22C6  
                   i1l9732 33B6                     i1l9566 258C                     i1l9576 25C0  
                   i1l9488 2312                     i1l9738 3428                     i2l7524 5924  
                   i2l7528 593E                     i2l7740 5DD4                     i2l7734 5DBE  
                   _RCREG1 000FAE       __size_of_drawBadPass 002E                     _SPBRG1 000FAF  
                   _TXREG1 000FAD           __end_of___xxtofl 3870       __size_of_drawChanVal 0206  
         __end_of_delay_ms 5AFC                     _UPisLP 0156             integrator@acum 009E  
         __end_of_ioConfig 5C16        __size_of_UARTConfig 0038             integrator@temp 00A2  
           __CFG_PWRTEN$ON 000000             __CFG_XINST$OFF 000000              _DOWNsecurLock 0151  
      __size_of_PWM2Config 0066           __end_of__powers_ 7D41       __size_of_drawSNquest 00F0  
             _CCPTMRS0bits 000F49           __end_of_drawMenu 2286           __end_of_lcd_init 5132  
                   ___flge 3D70           __end_of_lcd_putc 5640                     ___lmul 57AC  
                ??___aldiv 007D                  ??___fladd 00B1                     ___wmul 5BAE  
                ??___fldiv 008B                  ??___awdiv 007F                  ??___flneg 0079  
           __CFG_STVREN$ON 000000                  ??___awmod 0079                  ??___flmul 008B  
                ??___flsub 00C5                  ??___fltol 00A9                  ??___lldiv 007D  
                ??___llmod 008A                     _contra 013B                     _hp_isr 0008  
                   _selKMT 00D8                     _fround 25D6                     clear_0 5406  
                   clear_1 5412           ___awdiv@quotient 0081            ___awmod@divisor 0077  
             _chanValDigUP 4CC6            ___awmod@counter 0079                     _printf 00B6  
        __end_ofi1___fldiv 2B5C        _lcd_send_4bits$1602 0075        _lcd_send_4bits$1603 0076  
      _lcd_send_4bits$1604 0077        _lcd_send_4bits$1605 0078          __end_ofi1___flmul 25D6  
         ??_lcd_read_4bits 0075       __end_of_drawPassWord 4BD6               __pdataCOMRAM 002F  
                ??_isdigit 0075               __mediumconst 7CD8                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_pressUP 007A  
         ??_chanValDigDOWN 0075                 ___flge@ff1 0075                 ___flge@ff2 0079  
             ___xxtofl@arg 007F               ___xxtofl@exp 007E               ___xxtofl@val 0075  
               __accesstop 0060    __end_of__initialization 5420            __CFG_PBADEN$OFF 000000  
    __size_of_EEPROMConfig 0006                 ___flneg@f1 0075                _UPsecurLock 0157  
            ___rparam_used 000001                 ___fltol@f1 00A5           ??_lcd_send_4bits 0075  
          writeEEPROM@data 0075              __end_of_T2int 5DE0           ??_confirmEdition 00A0  
           __pcstackCOMRAM 0001               __pidataBANK0 5F0E               __pidataBANK1 5E08  
       __size_of_checkPass 008E                integrator@i 00A6              __end_of_scale 11F6  
            __end_of_putch 5EBE               _actualScreen 00D3             lcd_gotoxy@fila 007D  
               __div_to_l_ 3F00                    ??_T2int 0007         __size_of_ioInitStt 0008  
            ?_releaseENTER 0001         __size_of_drawAdvON 002E              ?_releaseRETRO 0001  
             _EEPROMConfig 5F28          lcd_gotoxy@address 007F            ??i1_calcVars2ti 002E  
          __div_to_l_@exp1 0082            __div_to_l_@cntr 0081                 _chanValdig 0131  
                  ??_scale 00A0            __div_to_l_@quot 007D                    ??_putch 0082  
         ??_longPressENTER 00A8                 __pbssBANK0 00CC                 __pbssBANK1 0131  
         ??_longPressRETRO 0075              __div_to_l_@f1 0075              __div_to_l_@f2 0079  
        ??_drawAutoCalibRM 00C9       __size_of_setPWM2duty 0094             _RETROsecurLock 0155  
       __CFG_CCP2MX$PORTC1 000000             i2putchUART@val 0001               ?_writeEEPROM 0075  
           lcd_send_byte@n 007A                    ?___flge 0075                    ?___lmul 0075  
                  ?___wmul 0075         __size_of_releaseUP 000E         __CFG_CCP3MX$PORTB5 000000  
     __size_of_longPressUP 007A                  ?_t2config 0001                    ?_hp_isr 0001  
                  ?_fround 009C             ___lmul@product 007D      __end_of_desintegrator 3A22  
                  ?_printf 0100                 _drawAdvOFF 5D32         __size_of_pressDOWN 0120  
    i2setPWM2duty@actuator 0001               ??_UARTConfig 0075       __size_of_releaseDOWN 000E  
           ??_releaseENTER 0075                    i1l10350 557E                    i1l10354 558C  
                  i1l10346 5570     __size_ofi2_setPWM2duty 0070             ??_releaseRETRO 0075  
             ??_PWM2Config 007B                  ?___xxtofl 0075            __CFG_WDTEN$SWON 000000  
                ?_delay_ms 0075   __size_ofi1_saveSysParams 0128                 _drawScreen 4FDC  
               _lcd_gotoxy 5C48                  ?_ioConfig 0001         __size_of_putchUART 000C  
   __size_of_longPressDOWN 0030                    _SPBRGH1 000FB0                    _UARTint 554A  
                ?_drawMenu 0001                  ?_lcd_init 0001               _densidadMasa 002F  
                  _i16Data 00D0              ??_calcVars2ti 009C          __end_of_checkPass 554A  
                ?_lcd_putc 0001   __end_of_drawAutoCalibRes 5D04    __size_of_buttonChecking 0288  
           _tempLastScreen 00DA              ??_calcSysVars 002E                 _holdUPcont 00D5  
               _readEEPROM 5E9C          __end_of_ioInitStt 5F20          __end_of__npowers_ 7D0D  
                  __Hparam 0000                 _scale$2891 00A0                    __Lparam 0000  
        __end_of_drawAdvON 5D32         __end_of_UARTConfig 5BAE                 checkPass@i 007A  
       __end_of_PWM2Config 59DA                    ___aldiv 479E            __size_of___flge 0190  
                  ___fladd 11F6                    ___fldiv 1B44                    ___awdiv 4E62  
                  ___flneg 5B3E            __size_of___lmul 0076                    ___awmod 5132  
                  ___flmul 169E                    ___flsub 5A28                    ___fltol 48B8  
                  ___lldiv 4F20            __size_of___wmul 0036                    ___llmod 5272  
               ??_t2config 0075      __size_of_drawPassWord 0106            __size_of_hp_isr 57A4  
                  __pcinit 53A0            __size_of_fround 02D2               ?i2_putchUART 0001  
                  __ramtop 0600                    __ptext0 5D60                    __ptext1 5090  
                  __ptext2 5F18                    __ptext3 5BE4                    __ptext4 5F20  
                  __ptext5 4FDC                    __ptext6 4BD6                    __ptext7 4AD0  
                  __ptext8 1F04                    __ptext9 349C            __size_of_printf 0C6E  
              ?__div_to_l_ 0075                    _dpowers 7D41                  _T2CONbits 000FBA  
               _integrator 4302                    _isdigit 5D8C               __size_of_isr 009A  
               ??___xxtofl 0079           ___awmod@dividend 0075           ___aldiv@dividend 0075  
               ??_delay_ms 0077                 ??_ioConfig 0075                    _pressUP 41D4  
                _ENTERisLP 0152                    _proceso 014C                    _questSN 014E  
               ??_drawMenu 00C9                 ??_lcd_init 007D          __end_of_releaseUP 5ECC  
           __pintcode_body 5734                 ??_lcd_putc 0080       end_of_initialization 5420  
    __end_of_drawValEditor 5894       lcd_send_byte@address 007C                  i1u1200_20 2AF2  
                i1u1211_20 2488                  i1u1211_25 247E                  i1u1302_25 4676  
                i1u1302_26 4678              __Lmediumconst 7CD8                  i1u1219_20 256E  
                  int_func 5734              i2_setPWM2duty 5904          __end_of_pressDOWN 479E  
      __end_of_calcVars2ti 3262      __end_of_lcd_read_byte 5AB6            ___lldiv@divisor 0079  
             _drawPassWord 4AD0            ___lldiv@counter 0081            lcd_read_4bits@n 0076  
            _longPressDOWN 5C78        __end_of_calcSysVars 41D4              readEEPROM@adr 0015  
                  printf@c 0130                    printf@f 0100          __end_of_putchUART 5F02  
         ___aldiv@quotient 007F                    postdec1 000FE5                    postdec2 000FDD  
                  postinc0 000FEE                    postinc2 000FDE                 _pressENTER 2DE4  
               _pressRETRO 5894                  _RETROisLP 0154             __tdiv_to_l_@f1 0075  
           __tdiv_to_l_@f2 0079      __end_of_lcd_send_byte 5B3E              ??__tdiv_to_l_ 007D  
                _PORTAbits 000F80                  _PORTBbits 000F81                ?_drawAdvOFF 0001  
            ??_clockConfig 0075               _holdDOWNcont 0159                ___fladd@grs 00BC  
            ___xxtofl@sign 007D                  _TRISAbits 000F92                  _TRISBbits 000F93  
                _TRISCbits 000F94                ?_drawScreen 0001                ?_lcd_gotoxy 007D  
                i1___fldiv 28A8                  i1___flmul 2286                ___fldiv@grs 0096  
              ___fldiv@rem 0090              ??_drawBadPass 00C9             _ProcessStarted 00D2  
   __size_ofi1_writeEEPROM 001E              ??_drawChanVal 00C9     __size_of_saveSysParams 0128  
 __size_of_interruptConfig 0008                ___flmul@grs 0091          ??i1_saveSysParams 002E  
           ?i2_setPWM2duty 0001                ?_readEEPROM 0001              ??_drawSNquest 00C9  
              printf@width 0128                _CCP2CONbits 000F66          confirmEdition@yes 00A0  
     __end_of_releaseENTER 5EE8        __size_of__div_to_l_ 0188       __end_of_releaseRETRO 5EDA  
           ?_longPressDOWN 0001                _ECCP2ASbits 000F64             __end_of___flge 3F00  
     __size_of_writeEEPROM 0020             __end_of___lmul 5822             __end_of___wmul 5BE4  
            __pidataCOMRAM 5E84             __end_of_hp_isr 57AC             __end_of_fround 28A8  
      setPWM2duty@actuator 0075             __end_of_printf 0D24                ?_integrator 0001  
          calcVars2ti@temp 009C        start_initialization 53A0        __end_of__tdiv_to_l_ 3D70  
               ?i1___fldiv 0015                __end_of_isr 00B2                 ?i1___flmul 0015  
          _drawAutoCalibRM 5C16        __end_of_clockConfig 5E08                _calcVars2ti 3026  
           _buttonChecking 2B5C          desintegrator@temp 00B1                _calcSysVars 4088  
          ___llmod@divisor 0086        __end_of_drawBadPass 5CD6            ___llmod@counter 008A  
      __size_of_drawAdvOFF 002E               _lastSttENTER 0044               _lastSttRETRO 0045  
      __end_of_drawChanVal 36A2                   ??___flge 007D        __size_of_drawScreen 00B4  
                 ??___lmul 007D        __size_of_lcd_gotoxy 0030              i1_writeEEPROM 5E4E  
                 ??___wmul 0079        __end_of_drawSNquest 4CC6                ?_pressENTER 0001  
              ?_pressRETRO 0001                __pdataBANK0 00DB                __pdataBANK1 015D  
          lcd_send_4bits@n 0079                   ??_hp_isr 0007              _saveSysParams 442E  
                 ??_fround 00A0                   ??_printf 00C5          __size_of_t2config 0018  
                ___fladd@a 00AD                  ___fladd@b 00A9                 fround@prec 00A8  
      __size_of_readEEPROM 0014                  ___fldiv@a 0087                  ___fldiv@b 0083  
     __size_ofi2_putchUART 000C                  ___flmul@a 0087                  ___flmul@b 0083  
              __pbssCOMRAM 0046                  ___flsub@a 00C1                  ___flsub@b 00BD  
           writeEEPROM@adr 0076              __pcstackBANK0 0060              __pcstackBANK1 0100  
                _calFactor 0137     __end_of_buttonChecking 2DE4          __size_of___xxtofl 01CE  
                 ?_UARTint 0001               _isdigit$2391 0076          __size_of_delay_ms 0046  
        __size_of_ioConfig 0032      __end_ofi1_calcVars2ti 349C            ??i2_setPWM2duty 0003  
            ?_sysParamInit 0001          ?_drawAutoCalibRes 0001    __size_of_lcd_read_4bits 007A  
            ??_setPWM2duty 0077          __size_of_drawMenu 0382          __size_of_lcd_init 00A2  
        __size_of_lcd_putc 007A          i1___fldiv@new_exp 0026                  _checkPass 54BC  
          ??_longPressDOWN 0075         ??_drawAutoCalibRes 00C9        __size_of_integrator 012C  
            ??_longPressUP 0075          ??_interruptConfig 0075             ?i1_writeEEPROM 0015  
  __size_of_chanValDigDOWN 00CC                  __pintcode 0008              __pmediumconst 7CD8  
                 ?___aldiv 0075                   ?___fladd 00A9                   ?___fldiv 0083  
                 ?___awdiv 007B                   ?___flneg 0075                   ?___awmod 0075  
                 ?___flmul 0083                   ?___flsub 00BD                   ?___fltol 00A5  
                _ioInitStt 5F18                   ?___lldiv 0075                   ?___llmod 0082  
                __npowers_ 7CD9             ?_saveSysParams 0001                  _drawAdvON 5D04  
            ??_releaseDOWN 0075                __pintcodelo 0018           __CFG_PRICLKEN$ON 000000  
              __tdiv_to_l_ 3BD2    __size_of_lcd_send_4bits 008E    __end_of_drawAutoCalibRM 5C48  
             ??__div_to_l_ 007D    __size_of_confirmEdition 01B0                _clockConfig 5DE0  
                 ?_isdigit 0001             __size_of_T2int 002A                  _lastSttUP 00E2  
                 ?_pressUP 0001                ??i1___fldiv 001D                ??i1___flmul 001D  
          ?_buttonChecking 0001                _drawBadPass 5CA8             __size_of_scale 04D2  
           ??_sysParamInit 002E             __size_of_putch 000E        __size_of_pressENTER 0242  
    __size_of_releaseENTER 000E        __size_of_pressRETRO 0070                _drawChanVal 349C  
    __size_of_releaseRETRO 000E            ___aldiv@divisor 0079            ___aldiv@counter 007D  
            _tempNumCortes 0181             ___wmul@product 0079                   _LATBbits 000F8A  
                 _LATCbits 000F8B                  _releaseUP 5EBE                 ?_checkPass 0001  
  lcd_init@LCD_INIT_STRING 007E                  delay_ms@i 0078     __size_of_desintegrator 01B2  
                 _DOWNisLP 0150                _drawSNquest 4BD6                   _IPR1bits 000F9F  
                 _PIE1bits 000F9D                  _numCortes 00DF                   _PIR1bits 000F9E  
       __end_of__div_to_l_ 4088        __end_of_setPWM2duty 53A0                   _RCONbits 000FD0  
               UARTint@sas 002E    __size_of_longPressENTER 009E           __CFG_WDTPS$32768 000000  
                _pressDOWN 467E    __size_of_longPressRETRO 004E                 ?_ioInitStt 0001  
               ?_drawAdvON 0001              ?_chanValDigUP 0001                  _putchUART 5EF6  
      __end_of_longPressUP 5734               ??_drawAdvOFF 00C9          ___wmul@multiplier 0075  
                lcd_init@i 0082                 printf@flag 011C                 printf@fval 012A  
               printf@prec 012E                _tVarProceso 00E3            i1_saveSysParams 4556  
             _releaseENTER 5EDA        __end_of_releaseDOWN 5EF6               ??_drawScreen 00CC  
             _releaseRETRO 5ECC               ??_lcd_gotoxy 007E          ___lmul@multiplier 0075  
                copy_data0 53B4                  copy_data1 53D4                  copy_data2 53F4  
         __size_of_UARTint 007C               ??_readEEPROM 0015                 ?_releaseUP 0001  
                 _m3Xcorte 0037                 _EECON1bits 000FA6            ??i1_writeEEPROM 0016  
       __end_of_drawAdvOFF 5D60                   __Hrparam 0000                _lastSttDOWN 0043  
                 __Lrparam 0000         __CFG_BOREN$SBORDIS 000000            ??_saveSysParams 00A0  
               ?_pressDOWN 0001          __CFG_P2BMX$PORTC0 000000         __end_of_drawScreen 5090  
       __end_of_lcd_gotoxy 5C78           __size_of___aldiv 011A                   _t2config 5E6C  
         __size_of___fladd 04A8           __size_of___fldiv 03C0           __size_of___awdiv 00BE  
         __size_of___flneg 0038             ??_chanValDigUP 0075           __size_of___awmod 00A2  
         __size_of___flmul 04A6           __size_of___flsub 0048           __size_of___fltol 010C  
         __size_of___lldiv 00BC           __size_of___llmod 009A                 ?_putchUART 0001  
              _fround$2890 00A0                _fround$2889 00A4              _desintegrator 3870  
   __size_of_drawValEditor 0072                 _ANSELAbits 000F38                 _ANSELCbits 000F3A  
           desintegrator@i 00C1           ?_drawAutoCalibRM 0001               ??_integrator 009C  
              _menuSection 00D6                   _chanValf 0046                   _chanVals 014A  
                 ___xxtofl 36A2         __end_of_readEEPROM 5EB0                   _diamTubo 0033  
         __size_of_isdigit 002A     __size_of_lcd_read_byte 0046                   _delay_ms 5AB6  
            ?_EEPROMConfig 0001                   _ioConfig 5BE4                   __ptext10 5CA8  
                 __ptext11 5CD6                   __ptext20 5C48                   __ptext12 5C16  
                 __ptext21 5AFC                   __ptext13 5822                   __ptext30 3F00  
                 __ptext22 542E                   __ptext14 5D04                   __ptext31 5BAE  
                 __ptext23 5A70                   __ptext15 5D32                   __ptext40 5EBE  
                 __ptext32 5272                   __ptext24 5640                   __ptext16 00B6  
                 __ptext41 5ECC                   __ptext33 4F20                   __ptext25 5D8C  
                 __ptext17 0D24                   __ptext50 479E                   __ptext42 5EDA  
                 __ptext34 5A28                   __ptext26 25D6                   __ptext18 5EB0  
                 __ptext51 54BC                   __ptext43 5EE8                   __ptext35 11F6  
                 __ptext27 5132                   __ptext19 55C6                   __ptext60 3A22  
                 __ptext52 467E                   __ptext44 41D4                   __ptext36 5B3E  
                 __ptext28 4E62                   __ptext61 442E                   __ptext53 4D96  
                 __ptext45 4CC6                   __ptext37 3D70                   __ptext29 3BD2  
                 __ptext70 5E6C                   __ptext62 5E2E                   __ptext54 56BA  
                 __ptext46 5894                   __ptext38 5DE0                   __ptext71 530C  
                 __ptext63 3026                   __ptext55 59DA                   __ptext47 2DE4  
                 __ptext39 2B5C                   __ptext80 4088                   __ptext72 5F28  
                 __ptext64 169E                   __ptext56 51D4                   __ptext48 3870  
                 __ptext81 2286                   __ptext65 1B44                   __ptext57 4302  
                 __ptext49 48B8                   __ptext82 28A8                   __ptext74 554A  
                 __ptext66 5C78                   __ptext58 36A2                   __ptext83 5EF6  
                 __ptext75 4556                   __ptext67 5AB6                   __ptext59 57AC  
                 __ptext76 5E4E                   __ptext68 5B76                   __ptext85 5DB6  
                 __ptext77 3262                   __ptext69 5974                   __ptext86 5904  
                 __ptext78 49C4                   __ptext87 5F02                   __ptext79 5E9C  
                 _kgXcorte 00DB                   __powers_ 7D0D           __size_of_pressUP 012E  
                 _drawMenu 1F04                   _lcd_init 5090                   _lcd_putc 55C6  
             ?_calcVars2ti 0001                _OSCCON2bits 000FD2             _lcd_read_4bits 5640  
   __size_of_lcd_send_byte 0042                _setPWM2duty 530C          i1writeEEPROM@data 0015  
             ?_calcSysVars 0001              __size_of_main 002C                ??_checkPass 0075  
          calcSysVars@temp 0060                   _passChar 0143                _passSection 00D7  
                 _tiXcorte 003B              ??_writeEEPROM 0076             _chanValDigDOWN 4D96  
              _longPressUP 56BA         __end_of_integrator 442E               _PSTR2CONbits 000F63  
             ??_pressENTER 00C3                   int$flags 004A                ??_ioInitStt 0075  
                 _questKMT 0147               ??_pressRETRO 0075                ??_drawAdvON 00C9  
  __end_ofi1_saveSysParams 467E                  printf@len 0118                  printf@exp 0126  
                printf@val 0122       __end_of_sysParamInit 4AD0                _releaseDOWN 5EE8  
           _lcd_send_4bits 542E            checkPass@passOK 0079             ?_desintegrator 0001  
              _introducido 013F                delay_ms@del 0075             _confirmEdition 3A22  
           _chanValSection 00E1              _velocidadMasa 003F                _OSCTUNEbits 000F9B  
               _INTCONbits 000FF2             ??_EEPROMConfig 0075                _PWM2CONbits 000F65  
                 isdigit@c 0077               _tempkgXcorte 0179                   scale@scl 00A4  
   __end_of_lcd_read_4bits 56BA            _interruptConfig 5F20                   intlevel1 0000  
                 intlevel2 0000           __tdiv_to_l_@exp1 0085           __tdiv_to_l_@cntr 0084  
       __end_of_pressENTER 3026           __tdiv_to_l_@quot 0080         __end_of_pressRETRO 5904  
         ___lldiv@dividend 0075              _drawValEditor 5822                ??_releaseUP 0075  
   __end_of_chanValDigDOWN 4E62                 _RCSTA1bits 000FAB           i1writeEEPROM@adr 0016  
               _OSCCONbits 000FD3              _lcd_read_byte 5A70         _screen_calibVelRes 015C  
           _longPressENTER 51D4             _longPressRETRO 59DA                ??_pressDOWN 007A  
                 printf@ap 011A                   printf@cp 0116     __end_of_lcd_send_4bits 54BC  
__size_of_drawAutoCalibRes 002E     __end_of_confirmEdition 3BD2                   putch@val 0082  
            ??i2_putchUART 0001                ??_putchUART 0015              _lcd_send_byte 5AFC  
      __end_of_writeEEPROM 5E4E               ?__tdiv_to_l_ 0075                _printf$2892 0112  
         ??_buttonChecking 00C3               ?_clockConfig 0001                 _UARTConfig 5B76  
         ___lldiv@quotient 007D                 _PWM2Config 5974               ___aldiv@sign 007E  
        __CFG_T3CMX$PORTC0 000000                 _WDTCONbits 000FD1              _holdENTERcont 00D4  
          ?_lcd_read_4bits 0001               ?_drawBadPass 0001              ___fladd@signs 00B9  
             ?_drawChanVal 0001       __end_of_chanValDigUP 4D96             _ENTERsecurLock 0153  
           ?_drawValEditor 0001               ___fladd@aexp 00BA               ___fladd@bexp 00BB  
    __end_ofi2_setPWM2duty 5974          __CFG_FOSC$INTIO67 000000               ?_drawSNquest 0001  
          ?_chanValDigDOWN 0001               drawChanVal@i 00C9     __end_of_longPressENTER 5272  
            ?_drawPassWord 0001             ?_lcd_read_byte 0001     __end_of_longPressRETRO 5A28  
    __end_of_longPressDOWN 5CA8  
