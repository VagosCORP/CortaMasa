

Microchip Technology PIC18 LITE Macro Assembler V1.38 build -256452561 
                                                                                               Mon Oct 31 00:43:26 2016

Microchip Technology Omniscient Code Generator v1.38 (Free mode) build 201607010351
     1                           	processor	18F25K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	idataBANK1,global,class=CODE,delta=1
     8                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	text60,global,reloc=2,class=CODE,delta=1
    80                           	psect	text61,global,reloc=2,class=CODE,delta=1
    81                           	psect	text62,global,reloc=2,class=CODE,delta=1
    82                           	psect	text63,global,reloc=2,class=CODE,delta=1
    83                           	psect	intcodelo,global,reloc=2,class=CODE,delta=1
    84                           	psect	text65,global,reloc=2,class=CODE,delta=1
    85                           	psect	text66,global,reloc=2,class=CODE,delta=1
    86                           	psect	text67,global,reloc=2,class=CODE,delta=1
    87                           	psect	text68,global,reloc=2,class=CODE,delta=1
    88                           	psect	text69,global,reloc=2,class=CODE,delta=1
    89                           	psect	text70,global,reloc=2,class=CODE,delta=1
    90                           	psect	text71,global,reloc=2,class=CODE,delta=1
    91                           	psect	text72,global,reloc=2,class=CODE,delta=1
    92                           	psect	text73,global,reloc=2,class=CODE,delta=1
    93                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    94                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    95                           	psect	text75,global,reloc=2,class=CODE,delta=1
    96                           	psect	text76,global,reloc=2,class=CODE,delta=1
    97                           	psect	text77,global,reloc=2,class=CODE,delta=1
    98                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    99                           	psect	rparam,global,class=COMRAM,space=1,delta=1
   100                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
   101  0000                     
   102                           	psect	idataCOMRAM
   103  0051E0                     __pidataCOMRAM:
   104                           	opt stack 0
   105                           
   106                           ;initializer for _kgXcorte
   107  0051E0  CCCD               	dw	52429
   108  0051E2  3DCC               	dw	15820
   109                           
   110                           ;initializer for _m3Xcorte
   111  0051E4  CCCD               	dw	52429
   112  0051E6  3DCC               	dw	15820
   113                           
   114                           ;initializer for _tiXcorte
   115  0051E8  0000               	dw	0
   116  0051EA  4000               	dw	16384
   117                           
   118                           ;initializer for _velocidadMasa
   119  0051EC  0000               	dw	0
   120  0051EE  4000               	dw	16384
   121                           
   122                           ;initializer for _lastSttDOWN
   123  0051F0  01                 	db	1
   124                           
   125                           ;initializer for _lastSttENTER
   126  0051F1  01                 	db	1
   127                           
   128                           ;initializer for _lastSttRETRO
   129  0051F2  01                 	db	1
   130                           
   131                           ;initializer for _lastSttUP
   132  0051F3  01                 	db	1
   133                           
   134                           	psect	idataBANK0
   135  005280                     __pidataBANK0:
   136                           	opt stack 0
   137                           
   138                           ;initializer for _densidadMasa
   139  005280  0000               	dw	0
   140  005282  3FC0               	dw	16320
   141                           
   142                           ;initializer for _diamTubo
   143  005284  0000               	dw	0
   144  005286  41A0               	dw	16800
   145                           
   146                           ;initializer for _numCortes
   147  005288  0001               	dw	1
   148                           
   149                           ;initializer for _tVarProceso
   150  00528A  01                 	db	1
   151                           
   152                           	psect	idataBANK1
   153  005208                     __pidataBANK1:
   154                           	opt stack 0
   155                           
   156                           ;initializer for _contra
   157  005208  01                 	db	1
   158  005209  02                 	db	2
   159  00520A  03                 	db	3
   160  00520B  04                 	db	4
   161                           
   162                           ;initializer for _pi
   163  00520C  0FDB               	dw	4059
   164  00520E  4049               	dw	16457
   165                           
   166                           ;initializer for _tempkgXcorte
   167  005210  CCCD               	dw	52429
   168  005212  3DCC               	dw	15820
   169                           
   170                           ;initializer for lcd_init@F7567
   171  005214  28                 	db	40
   172  005215  0C                 	db	12
   173  005216  01                 	db	1
   174  005217  06                 	db	6
   175                           
   176                           ;initializer for _tempNumCortes
   177  005218  0001               	dw	1
   178                           
   179                           	psect	mediumconst
   180  007D52                     __pmediumconst:
   181                           	opt stack 0
   182  007D52  00                 	db	0
   183  007D53                     __npowers_:
   184                           	opt stack 0
   185  007D53  0000               	dw	0
   186  007D55  3F80               	dw	16256
   187  007D57  CCCD               	dw	52429
   188  007D59  3DCC               	dw	15820
   189  007D5B  D70A               	dw	55050
   190  007D5D  3C23               	dw	15395
   191  007D5F  126F               	dw	4719
   192  007D61  3A83               	dw	14979
   193  007D63  B717               	dw	46871
   194  007D65  38D1               	dw	14545
   195  007D67  C5AC               	dw	50604
   196  007D69  3727               	dw	14119
   197  007D6B  37BD               	dw	14269
   198  007D6D  3586               	dw	13702
   199  007D6F  BF95               	dw	49045
   200  007D71  33D6               	dw	13270
   201  007D73  CC77               	dw	52343
   202  007D75  322B               	dw	12843
   203  007D77  705F               	dw	28767
   204  007D79  3089               	dw	12425
   205  007D7B  E6FF               	dw	59135
   206  007D7D  2EDB               	dw	11995
   207  007D7F  E508               	dw	58632
   208  007D81  1E3C               	dw	7740
   209  007D83  4260               	dw	16992
   210  007D85  0DA2               	dw	3490
   211  007D87                     __end_of__npowers_:
   212                           	opt stack 0
   213  007D87                     __powers_:
   214                           	opt stack 0
   215  007D87  0000               	dw	0
   216  007D89  3F80               	dw	16256
   217  007D8B  0000               	dw	0
   218  007D8D  4120               	dw	16672
   219  007D8F  0000               	dw	0
   220  007D91  42C8               	dw	17096
   221  007D93  0000               	dw	0
   222  007D95  447A               	dw	17530
   223  007D97  4000               	dw	16384
   224  007D99  461C               	dw	17948
   225  007D9B  5000               	dw	20480
   226  007D9D  47C3               	dw	18371
   227  007D9F  2400               	dw	9216
   228  007DA1  4974               	dw	18804
   229  007DA3  9680               	dw	38528
   230  007DA5  4B18               	dw	19224
   231  007DA7  BC20               	dw	48160
   232  007DA9  4CBE               	dw	19646
   233  007DAB  6B28               	dw	27432
   234  007DAD  4E6E               	dw	20078
   235  007DAF  02F9               	dw	761
   236  007DB1  5015               	dw	20501
   237  007DB3  78EC               	dw	30956
   238  007DB5  60AD               	dw	24749
   239  007DB7  F2CA               	dw	62154
   240  007DB9  7149               	dw	29001
   241  007DBB                     __end_of__powers_:
   242                           	opt stack 0
   243  007DBB                     _dpowers:
   244                           	opt stack 0
   245  007DBB  0001               	dw	1
   246  007DBD  0000               	dw	0
   247  007DBF  000A               	dw	10
   248  007DC1  0000               	dw	0
   249  007DC3  0064               	dw	100
   250  007DC5  0000               	dw	0
   251  007DC7  03E8               	dw	1000
   252  007DC9  0000               	dw	0
   253  007DCB  2710               	dw	10000
   254  007DCD  0000               	dw	0
   255  007DCF  86A0               	dw	34464
   256  007DD1  0001               	dw	1
   257  007DD3  4240               	dw	16960
   258  007DD5  000F               	dw	15
   259  007DD7  9680               	dw	38528
   260  007DD9  0098               	dw	152
   261  007DDB  E100               	dw	57600
   262  007DDD  05F5               	dw	1525
   263  007DDF  CA00               	dw	51712
   264  007DE1  3B9A               	dw	15258
   265  007DE3                     __end_of_dpowers:
   266                           	opt stack 0
   267  0000                     _ANSELAbits	set	3896
   268  0000                     _ANSELCbits	set	3898
   269  0000                     _CCPTMRS0bits	set	3913
   270  0000                     _BAUDCON1bits	set	4024
   271  0000                     _CCP2CONbits	set	3942
   272  0000                     _CCPR2L	set	3943
   273  0000                     _ECCP2ASbits	set	3940
   274  0000                     _EEADR	set	4009
   275  0000                     _EECON1bits	set	4006
   276  0000                     _EECON2	set	4007
   277  0000                     _EEDATA	set	4008
   278  0000                     _INTCONbits	set	4082
   279  0000                     _IPR1bits	set	3999
   280  0000                     _LATBbits	set	3978
   281  0000                     _LATCbits	set	3979
   282  0000                     _OSCCON2bits	set	4050
   283  0000                     _OSCCONbits	set	4051
   284  0000                     _OSCTUNEbits	set	3995
   285  0000                     _PIE1bits	set	3997
   286  0000                     _PIR1bits	set	3998
   287  0000                     _PORTAbits	set	3968
   288  0000                     _PORTBbits	set	3969
   289  0000                     _PR2	set	4027
   290  0000                     _PSTR2CONbits	set	3939
   291  0000                     _PWM2CONbits	set	3941
   292  0000                     _RCONbits	set	4048
   293  0000                     _RCREG1	set	4014
   294  0000                     _RCSTA1bits	set	4011
   295  0000                     _SPBRG1	set	4015
   296  0000                     _SPBRGH1	set	4016
   297  0000                     _T2CONbits	set	4026
   298  0000                     _TRISAbits	set	3986
   299  0000                     _TRISBbits	set	3987
   300  0000                     _TRISCbits	set	3988
   301  0000                     _TXREG1	set	4013
   302  0000                     _TXSTA1bits	set	4012
   303  0000                     _WDTCONbits	set	4049
   304  007DE3                     STR_38:
   305  007DE3  20                 	db	32
   306  007DE4  20                 	db	32
   307  007DE5  20                 	db	32
   308  007DE6  20                 	db	32
   309  007DE7  25                 	db	37
   310  007DE8  63                 	db	99	;'c'
   311  007DE9  25                 	db	37
   312  007DEA  75                 	db	117	;'u'
   313  007DEB  25                 	db	37
   314  007DEC  63                 	db	99	;'c'
   315  007DED  25                 	db	37
   316  007DEE  75                 	db	117	;'u'
   317  007DEF  25                 	db	37
   318  007DF0  63                 	db	99	;'c'
   319  007DF1  25                 	db	37
   320  007DF2  75                 	db	117	;'u'
   321  007DF3  25                 	db	37
   322  007DF4  63                 	db	99	;'c'
   323  007DF5  25                 	db	37
   324  007DF6  75                 	db	117	;'u'
   325  007DF7  20                 	db	32
   326  007DF8  20                 	db	32
   327  007DF9  20                 	db	32
   328  007DFA  20                 	db	32
   329  007DFB  00                 	db	0
   330  007DFC                     STR_24:
   331  007DFC  20                 	db	32
   332  007DFD  25                 	db	37
   333  007DFE  63                 	db	99	;'c'
   334  007DFF  6B                 	db	107	;'k'
   335  007E00  67                 	db	103	;'g'
   336  007E01  20                 	db	32
   337  007E02  20                 	db	32
   338  007E03  25                 	db	37
   339  007E04  63                 	db	99	;'c'
   340  007E05  6D                 	db	109	;'m'
   341  007E06  33                 	db	51	;'3'
   342  007E07  20                 	db	32
   343  007E08  20                 	db	32
   344  007E09  25                 	db	37
   345  007E0A  63                 	db	99	;'c'
   346  007E0B  73                 	db	115	;'s'
   347  007E0C  65                 	db	101	;'e'
   348  007E0D  63                 	db	99	;'c'
   349  007E0E  20                 	db	32
   350  007E0F  00                 	db	0
   351  007E10                     STR_48:
   352  007E10  20                 	db	32
   353  007E11  20                 	db	32
   354  007E12  20                 	db	32
   355  007E13  25                 	db	37
   356  007E14  63                 	db	99	;'c'
   357  007E15  53                 	db	83	;'S'
   358  007E16  49                 	db	73	;'I'
   359  007E17  20                 	db	32
   360  007E18  20                 	db	32
   361  007E19  20                 	db	32
   362  007E1A  20                 	db	32
   363  007E1B  25                 	db	37
   364  007E1C  63                 	db	99	;'c'
   365  007E1D  4E                 	db	78	;'N'
   366  007E1E  4F                 	db	79	;'O'
   367  007E1F  20                 	db	32
   368  007E20  20                 	db	32
   369  007E21  20                 	db	32
   370  007E22  00                 	db	0
   371  007E23                     STR_39:
   372  007E23  43                 	db	67	;'C'
   373  007E24  6F                 	db	111	;'o'
   374  007E25  6E                 	db	110	;'n'
   375  007E26  74                 	db	116	;'t'
   376  007E27  72                 	db	114	;'r'
   377  007E28  61                 	db	97	;'a'
   378  007E29  73                 	db	115	;'s'
   379  007E2A  65                 	db	101	;'e'
   380  007E2B  6E                 	db	110	;'n'
   381  007E2C  61                 	db	97	;'a'
   382  007E2D  20                 	db	32
   383  007E2E  20                 	db	32
   384  007E2F  20                 	db	32
   385  007E30  20                 	db	32
   386  007E31  20                 	db	32
   387  007E32  20                 	db	32
   388  007E33  0A                 	db	10
   389  007E34  00                 	db	0
   390  007E35                     STR_37:
   391  007E35  43                 	db	67	;'C'
   392  007E36  6F                 	db	111	;'o'
   393  007E37  6E                 	db	110	;'n'
   394  007E38  74                 	db	116	;'t'
   395  007E39  72                 	db	114	;'r'
   396  007E3A  61                 	db	97	;'a'
   397  007E3B  73                 	db	115	;'s'
   398  007E3C  65                 	db	101	;'e'
   399  007E3D  6E                 	db	110	;'n'
   400  007E3E  61                 	db	97	;'a'
   401  007E3F  3A                 	db	58	;':'
   402  007E40  20                 	db	32
   403  007E41  20                 	db	32
   404  007E42  20                 	db	32
   405  007E43  20                 	db	32
   406  007E44  20                 	db	32
   407  007E45  0A                 	db	10
   408  007E46  00                 	db	0
   409  007E47                     STR_4:
   410  007E47  50                 	db	80	;'P'
   411  007E48  72                 	db	114	;'r'
   412  007E49  6F                 	db	111	;'o'
   413  007E4A  63                 	db	99	;'c'
   414  007E4B  65                 	db	101	;'e'
   415  007E4C  73                 	db	115	;'s'
   416  007E4D  6F                 	db	111	;'o'
   417  007E4E  20                 	db	32
   418  007E4F  65                 	db	101	;'e'
   419  007E50  6E                 	db	110	;'n'
   420  007E51  3A                 	db	58	;':'
   421  007E52  20                 	db	32
   422  007E53  20                 	db	32
   423  007E54  20                 	db	32
   424  007E55  20                 	db	32
   425  007E56  20                 	db	32
   426  007E57  0A                 	db	10
   427  007E58  00                 	db	0
   428  007E59                     STR_16:
   429  007E59  44                 	db	68	;'D'
   430  007E5A  65                 	db	101	;'e'
   431  007E5B  6E                 	db	110	;'n'
   432  007E5C  73                 	db	115	;'s'
   433  007E5D  69                 	db	105	;'i'
   434  007E5E  64                 	db	100	;'d'
   435  007E5F  61                 	db	97	;'a'
   436  007E60  64                 	db	100	;'d'
   437  007E61  20                 	db	32
   438  007E62  4D                 	db	77	;'M'
   439  007E63  61                 	db	97	;'a'
   440  007E64  73                 	db	115	;'s'
   441  007E65  61                 	db	97	;'a'
   442  007E66  3A                 	db	58	;':'
   443  007E67  20                 	db	32
   444  007E68  20                 	db	32
   445  007E69  0A                 	db	10
   446  007E6A  00                 	db	0
   447  007E6B                     STR_14:
   448  007E6B  44                 	db	68	;'D'
   449  007E6C  69                 	db	105	;'i'
   450  007E6D  61                 	db	97	;'a'
   451  007E6E  6D                 	db	109	;'m'
   452  007E6F  65                 	db	101	;'e'
   453  007E70  74                 	db	116	;'t'
   454  007E71  72                 	db	114	;'r'
   455  007E72  6F                 	db	111	;'o'
   456  007E73  20                 	db	32
   457  007E74  54                 	db	84	;'T'
   458  007E75  75                 	db	117	;'u'
   459  007E76  62                 	db	98	;'b'
   460  007E77  6F                 	db	111	;'o'
   461  007E78  3A                 	db	58	;':'
   462  007E79  20                 	db	32
   463  007E7A  20                 	db	32
   464  007E7B  0A                 	db	10
   465  007E7C  00                 	db	0
   466  007E7D                     STR_18:
   467  007E7D  56                 	db	86	;'V'
   468  007E7E  65                 	db	101	;'e'
   469  007E7F  6C                 	db	108	;'l'
   470  007E80  6F                 	db	111	;'o'
   471  007E81  63                 	db	99	;'c'
   472  007E82  69                 	db	105	;'i'
   473  007E83  64                 	db	100	;'d'
   474  007E84  61                 	db	97	;'a'
   475  007E85  64                 	db	100	;'d'
   476  007E86  20                 	db	32
   477  007E87  4D                 	db	77	;'M'
   478  007E88  61                 	db	97	;'a'
   479  007E89  73                 	db	115	;'s'
   480  007E8A  61                 	db	97	;'a'
   481  007E8B  3A                 	db	58	;':'
   482  007E8C  20                 	db	32
   483  007E8D  0A                 	db	10
   484  007E8E  00                 	db	0
   485  007E8F                     STR_1:
   486  007E8F  45                 	db	69	;'E'
   487  007E90  73                 	db	115	;'s'
   488  007E91  74                 	db	116	;'t'
   489  007E92  61                 	db	97	;'a'
   490  007E93  64                 	db	100	;'d'
   491  007E94  6F                 	db	111	;'o'
   492  007E95  20                 	db	32
   493  007E96  70                 	db	112	;'p'
   494  007E97  72                 	db	114	;'r'
   495  007E98  6F                 	db	111	;'o'
   496  007E99  63                 	db	99	;'c'
   497  007E9A  65                 	db	101	;'e'
   498  007E9B  73                 	db	115	;'s'
   499  007E9C  6F                 	db	111	;'o'
   500  007E9D  3A                 	db	58	;':'
   501  007E9E  20                 	db	32
   502  007E9F  0A                 	db	10
   503  007EA0  00                 	db	0
   504  007EA1                     STR_47:
   505  007EA1  47                 	db	71	;'G'
   506  007EA2  75                 	db	117	;'u'
   507  007EA3  61                 	db	97	;'a'
   508  007EA4  72                 	db	114	;'r'
   509  007EA5  64                 	db	100	;'d'
   510  007EA6  61                 	db	97	;'a'
   511  007EA7  72                 	db	114	;'r'
   512  007EA8  20                 	db	32
   513  007EA9  43                 	db	67	;'C'
   514  007EAA  61                 	db	97	;'a'
   515  007EAB  6D                 	db	109	;'m'
   516  007EAC  62                 	db	98	;'b'
   517  007EAD  69                 	db	105	;'i'
   518  007EAE  6F                 	db	111	;'o'
   519  007EAF  3F                 	db	63	;'?'
   520  007EB0  20                 	db	32
   521  007EB1  0A                 	db	10
   522  007EB2  00                 	db	0
   523  007EB3                     STR_8:
   524  007EB3  56                 	db	86	;'V'
   525  007EB4  61                 	db	97	;'a'
   526  007EB5  6C                 	db	108	;'l'
   527  007EB6  6F                 	db	111	;'o'
   528  007EB7  72                 	db	114	;'r'
   529  007EB8  20                 	db	32
   530  007EB9  70                 	db	112	;'p'
   531  007EBA  6F                 	db	111	;'o'
   532  007EBB  72                 	db	114	;'r'
   533  007EBC  20                 	db	32
   534  007EBD  43                 	db	67	;'C'
   535  007EBE  6F                 	db	111	;'o'
   536  007EBF  72                 	db	114	;'r'
   537  007EC0  74                 	db	116	;'t'
   538  007EC1  65                 	db	101	;'e'
   539  007EC2  3A                 	db	58	;':'
   540  007EC3  0A                 	db	10
   541  007EC4  00                 	db	0
   542  007EC5                     STR_41:
   543  007EC5  4D                 	db	77	;'M'
   544  007EC6  6F                 	db	111	;'o'
   545  007EC7  64                 	db	100	;'d'
   546  007EC8  6F                 	db	111	;'o'
   547  007EC9  20                 	db	32
   548  007ECA  43                 	db	67	;'C'
   549  007ECB  6F                 	db	111	;'o'
   550  007ECC  6E                 	db	110	;'n'
   551  007ECD  66                 	db	102	;'f'
   552  007ECE  69                 	db	105	;'i'
   553  007ECF  67                 	db	103	;'g'
   554  007ED0  75                 	db	117	;'u'
   555  007ED1  72                 	db	114	;'r'
   556  007ED2  61                 	db	97	;'a'
   557  007ED3  72                 	db	114	;'r'
   558  007ED4  3A                 	db	58	;':'
   559  007ED5  0A                 	db	10
   560  007ED6  00                 	db	0
   561  007ED7                     STR_12:
   562  007ED7  43                 	db	67	;'C'
   563  007ED8  61                 	db	97	;'a'
   564  007ED9  6E                 	db	110	;'n'
   565  007EDA  74                 	db	116	;'t'
   566  007EDB  69                 	db	105	;'i'
   567  007EDC  64                 	db	100	;'d'
   568  007EDD  61                 	db	97	;'a'
   569  007EDE  64                 	db	100	;'d'
   570  007EDF  20                 	db	32
   571  007EE0  43                 	db	67	;'C'
   572  007EE1  6F                 	db	111	;'o'
   573  007EE2  72                 	db	114	;'r'
   574  007EE3  74                 	db	116	;'t'
   575  007EE4  65                 	db	101	;'e'
   576  007EE5  73                 	db	115	;'s'
   577  007EE6  3A                 	db	58	;':'
   578  007EE7  0A                 	db	10
   579  007EE8  00                 	db	0
   580  007EE9                     STR_45:
   581  007EE9  49                 	db	73	;'I'
   582  007EEA  6E                 	db	110	;'n'
   583  007EEB  69                 	db	105	;'i'
   584  007EEC  63                 	db	99	;'c'
   585  007EED  69                 	db	105	;'i'
   586  007EEE  61                 	db	97	;'a'
   587  007EEF  72                 	db	114	;'r'
   588  007EF0  20                 	db	32
   589  007EF1  50                 	db	80	;'P'
   590  007EF2  72                 	db	114	;'r'
   591  007EF3  6F                 	db	111	;'o'
   592  007EF4  63                 	db	99	;'c'
   593  007EF5  65                 	db	101	;'e'
   594  007EF6  73                 	db	115	;'s'
   595  007EF7  6F                 	db	111	;'o'
   596  007EF8  3F                 	db	63	;'?'
   597  007EF9  0A                 	db	10
   598  007EFA  00                 	db	0
   599  007EFB                     STR_46:
   600  007EFB  44                 	db	68	;'D'
   601  007EFC  65                 	db	101	;'e'
   602  007EFD  74                 	db	116	;'t'
   603  007EFE  65                 	db	101	;'e'
   604  007EFF  6E                 	db	110	;'n'
   605  007F00  65                 	db	101	;'e'
   606  007F01  72                 	db	114	;'r'
   607  007F02  20                 	db	32
   608  007F03  50                 	db	80	;'P'
   609  007F04  72                 	db	114	;'r'
   610  007F05  6F                 	db	111	;'o'
   611  007F06  63                 	db	99	;'c'
   612  007F07  65                 	db	101	;'e'
   613  007F08  73                 	db	115	;'s'
   614  007F09  6F                 	db	111	;'o'
   615  007F0A  3F                 	db	63	;'?'
   616  007F0B  0A                 	db	10
   617  007F0C  00                 	db	0
   618  007F0D                     STR_5:
   619  007F0D  20                 	db	32
   620  007F0E  20                 	db	32
   621  007F0F  20                 	db	32
   622  007F10  20                 	db	32
   623  007F11  20                 	db	32
   624  007F12  20                 	db	32
   625  007F13  20                 	db	32
   626  007F14  6B                 	db	107	;'k'
   627  007F15  67                 	db	103	;'g'
   628  007F16  20                 	db	32
   629  007F17  20                 	db	32
   630  007F18  20                 	db	32
   631  007F19  20                 	db	32
   632  007F1A  20                 	db	32
   633  007F1B  20                 	db	32
   634  007F1C  20                 	db	32
   635  007F1D  20                 	db	32
   636  007F1E  00                 	db	0
   637  007F1F                     STR_6:
   638  007F1F  20                 	db	32
   639  007F20  20                 	db	32
   640  007F21  20                 	db	32
   641  007F22  20                 	db	32
   642  007F23  20                 	db	32
   643  007F24  20                 	db	32
   644  007F25  20                 	db	32
   645  007F26  6D                 	db	109	;'m'
   646  007F27  33                 	db	51	;'3'
   647  007F28  20                 	db	32
   648  007F29  20                 	db	32
   649  007F2A  20                 	db	32
   650  007F2B  20                 	db	32
   651  007F2C  20                 	db	32
   652  007F2D  20                 	db	32
   653  007F2E  20                 	db	32
   654  007F2F  00                 	db	0
   655  007F30                     STR_7:
   656  007F30  20                 	db	32
   657  007F31  20                 	db	32
   658  007F32  20                 	db	32
   659  007F33  20                 	db	32
   660  007F34  20                 	db	32
   661  007F35  20                 	db	32
   662  007F36  73                 	db	115	;'s'
   663  007F37  65                 	db	101	;'e'
   664  007F38  63                 	db	99	;'c'
   665  007F39  20                 	db	32
   666  007F3A  20                 	db	32
   667  007F3B  20                 	db	32
   668  007F3C  20                 	db	32
   669  007F3D  20                 	db	32
   670  007F3E  20                 	db	32
   671  007F3F  20                 	db	32
   672  007F40  00                 	db	0
   673  007F41                     STR_40:
   674  007F41  20                 	db	32
   675  007F42  20                 	db	32
   676  007F43  20                 	db	32
   677  007F44  20                 	db	32
   678  007F45  20                 	db	32
   679  007F46  45                 	db	69	;'E'
   680  007F47  72                 	db	114	;'r'
   681  007F48  72                 	db	114	;'r'
   682  007F49  6F                 	db	111	;'o'
   683  007F4A  6E                 	db	110	;'n'
   684  007F4B  65                 	db	101	;'e'
   685  007F4C  61                 	db	97	;'a'
   686  007F4D  20                 	db	32
   687  007F4E  20                 	db	32
   688  007F4F  20                 	db	32
   689  007F50  20                 	db	32
   690  007F51  00                 	db	0
   691  007F52                     STR_42:
   692  007F52  20                 	db	32
   693  007F53  20                 	db	32
   694  007F54  20                 	db	32
   695  007F55  20                 	db	32
   696  007F56  49                 	db	73	;'I'
   697  007F57  6E                 	db	110	;'n'
   698  007F58  69                 	db	105	;'i'
   699  007F59  63                 	db	99	;'c'
   700  007F5A  69                 	db	105	;'i'
   701  007F5B  61                 	db	97	;'a'
   702  007F5C  64                 	db	100	;'d'
   703  007F5D  6F                 	db	111	;'o'
   704  007F5E  20                 	db	32
   705  007F5F  20                 	db	32
   706  007F60  20                 	db	32
   707  007F61  20                 	db	32
   708  007F62  00                 	db	0
   709  007F63                     STR_3:
   710  007F63  20                 	db	32
   711  007F64  20                 	db	32
   712  007F65  20                 	db	32
   713  007F66  20                 	db	32
   714  007F67  44                 	db	68	;'D'
   715  007F68  65                 	db	101	;'e'
   716  007F69  74                 	db	116	;'t'
   717  007F6A  65                 	db	101	;'e'
   718  007F6B  6E                 	db	110	;'n'
   719  007F6C  69                 	db	105	;'i'
   720  007F6D  64                 	db	100	;'d'
   721  007F6E  6F                 	db	111	;'o'
   722  007F6F  20                 	db	32
   723  007F70  20                 	db	32
   724  007F71  20                 	db	32
   725  007F72  20                 	db	32
   726  007F73  00                 	db	0
   727  007F74                     STR_44:
   728  007F74  20                 	db	32
   729  007F75  20                 	db	32
   730  007F76  20                 	db	32
   731  007F77  46                 	db	70	;'F'
   732  007F78  69                 	db	105	;'i'
   733  007F79  6E                 	db	110	;'n'
   734  007F7A  61                 	db	97	;'a'
   735  007F7B  6C                 	db	108	;'l'
   736  007F7C  69                 	db	105	;'i'
   737  007F7D  7A                 	db	122	;'z'
   738  007F7E  61                 	db	97	;'a'
   739  007F7F  64                 	db	100	;'d'
   740  007F80  6F                 	db	111	;'o'
   741  007F81  20                 	db	32
   742  007F82  20                 	db	32
   743  007F83  20                 	db	32
   744  007F84  00                 	db	0
   745  007F85                     STR_13:
   746  007F85  20                 	db	32
   747  007F86  20                 	db	32
   748  007F87  20                 	db	32
   749  007F88  20                 	db	32
   750  007F89  20                 	db	32
   751  007F8A  20                 	db	32
   752  007F8B  25                 	db	37
   753  007F8C  64                 	db	100	;'d'
   754  007F8D  20                 	db	32
   755  007F8E  20                 	db	32
   756  007F8F  20                 	db	32
   757  007F90  20                 	db	32
   758  007F91  20                 	db	32
   759  007F92  20                 	db	32
   760  007F93  20                 	db	32
   761  007F94  00                 	db	0
   762  007F95                     STR_2:
   763  007F95  20                 	db	32
   764  007F96  20                 	db	32
   765  007F97  20                 	db	32
   766  007F98  25                 	db	37
   767  007F99  64                 	db	100	;'d'
   768  007F9A  20                 	db	32
   769  007F9B  2F                 	db	47
   770  007F9C  20                 	db	32
   771  007F9D  25                 	db	37
   772  007F9E  64                 	db	100	;'d'
   773  007F9F  20                 	db	32
   774  007FA0  20                 	db	32
   775  007FA1  20                 	db	32
   776  007FA2  20                 	db	32
   777  007FA3  00                 	db	0
   778  007FA4                     STR_10:
   779  007FA4  20                 	db	32
   780  007FA5  20                 	db	32
   781  007FA6  20                 	db	32
   782  007FA7  25                 	db	37
   783  007FA8  33                 	db	51	;'3'
   784  007FA9  2E                 	db	46
   785  007FAA  33                 	db	51	;'3'
   786  007FAB  66                 	db	102	;'f'
   787  007FAC  20                 	db	32
   788  007FAD  6D                 	db	109	;'m'
   789  007FAE  33                 	db	51	;'3'
   790  007FAF  20                 	db	32
   791  007FB0  20                 	db	32
   792  007FB1  20                 	db	32
   793  007FB2  00                 	db	0
   794  007FB3                     STR_9:
   795  007FB3  20                 	db	32
   796  007FB4  20                 	db	32
   797  007FB5  20                 	db	32
   798  007FB6  25                 	db	37
   799  007FB7  33                 	db	51	;'3'
   800  007FB8  2E                 	db	46
   801  007FB9  33                 	db	51	;'3'
   802  007FBA  66                 	db	102	;'f'
   803  007FBB  20                 	db	32
   804  007FBC  6B                 	db	107	;'k'
   805  007FBD  67                 	db	103	;'g'
   806  007FBE  20                 	db	32
   807  007FBF  20                 	db	32
   808  007FC0  20                 	db	32
   809  007FC1  00                 	db	0
   810  007FC2                     STR_15:
   811  007FC2  20                 	db	32
   812  007FC3  20                 	db	32
   813  007FC4  20                 	db	32
   814  007FC5  25                 	db	37
   815  007FC6  33                 	db	51	;'3'
   816  007FC7  2E                 	db	46
   817  007FC8  33                 	db	51	;'3'
   818  007FC9  66                 	db	102	;'f'
   819  007FCA  20                 	db	32
   820  007FCB  6D                 	db	109	;'m'
   821  007FCC  6D                 	db	109	;'m'
   822  007FCD  20                 	db	32
   823  007FCE  20                 	db	32
   824  007FCF  20                 	db	32
   825  007FD0  00                 	db	0
   826  007FD1                     STR_11:
   827  007FD1  20                 	db	32
   828  007FD2  20                 	db	32
   829  007FD3  20                 	db	32
   830  007FD4  25                 	db	37
   831  007FD5  33                 	db	51	;'3'
   832  007FD6  2E                 	db	46
   833  007FD7  33                 	db	51	;'3'
   834  007FD8  66                 	db	102	;'f'
   835  007FD9  20                 	db	32
   836  007FDA  73                 	db	115	;'s'
   837  007FDB  65                 	db	101	;'e'
   838  007FDC  63                 	db	99	;'c'
   839  007FDD  20                 	db	32
   840  007FDE  20                 	db	32
   841  007FDF  00                 	db	0
   842  007FE0                     STR_19:
   843  007FE0  20                 	db	32
   844  007FE1  20                 	db	32
   845  007FE2  20                 	db	32
   846  007FE3  25                 	db	37
   847  007FE4  33                 	db	51	;'3'
   848  007FE5  2E                 	db	46
   849  007FE6  33                 	db	51	;'3'
   850  007FE7  66                 	db	102	;'f'
   851  007FE8  20                 	db	32
   852  007FE9  6D                 	db	109	;'m'
   853  007FEA  2F                 	db	47
   854  007FEB  73                 	db	115	;'s'
   855  007FEC  20                 	db	32
   856  007FED  20                 	db	32
   857  007FEE  00                 	db	0
   858  007FEF                     STR_17:
   859  007FEF  20                 	db	32
   860  007FF0  20                 	db	32
   861  007FF1  25                 	db	37
   862  007FF2  33                 	db	51	;'3'
   863  007FF3  2E                 	db	46
   864  007FF4  33                 	db	51	;'3'
   865  007FF5  66                 	db	102	;'f'
   866  007FF6  20                 	db	32
   867  007FF7  6B                 	db	107	;'k'
   868  007FF8  67                 	db	103	;'g'
   869  007FF9  2F                 	db	47
   870  007FFA  6D                 	db	109	;'m'
   871  007FFB  33                 	db	51	;'3'
   872  007FFC  20                 	db	32
   873  007FFD  00                 	db	0
   874  0000                     
   875                           ; #config settings
   876  007FFE  00                 	db	0	; dummy byte at the end
   877  0000                     
   878                           	psect	cinit
   879  004836                     __pcinit:
   880                           	opt stack 0
   881  004836                     start_initialization:
   882                           	opt stack 0
   883  004836                     __initialization:
   884                           	opt stack 0
   885                           
   886                           ; Initialize objects allocated to BANK1 (18 bytes)
   887                           ; load TBLPTR registers with __pidataBANK1
   888  004836  0E08               	movlw	low __pidataBANK1
   889  004838  6EF6               	movwf	tblptrl,c
   890  00483A  0E52               	movlw	high __pidataBANK1
   891  00483C  6EF7               	movwf	tblptrh,c
   892  00483E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   893  004840  6EF8               	movwf	tblptru,c
   894  004842  EE01  F04B         	lfsr	0,__pdataBANK1
   895  004846  EE10 F012          	lfsr	1,18
   896  00484A                     copy_data0:
   897  00484A  0009               	tblrd		*+
   898  00484C  CFF5 FFEE          	movff	tablat,postinc0
   899  004850  50E5               	movf	postdec1,w,c
   900  004852  50E1               	movf	fsr1l,w,c
   901  004854  E1FA               	bnz	copy_data0
   902                           
   903                           ; Initialize objects allocated to BANK0 (11 bytes)
   904                           ; load TBLPTR registers with __pidataBANK0
   905  004856  0E80               	movlw	low __pidataBANK0
   906  004858  6EF6               	movwf	tblptrl,c
   907  00485A  0E52               	movlw	high __pidataBANK0
   908  00485C  6EF7               	movwf	tblptrh,c
   909  00485E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   910  004860  6EF8               	movwf	tblptru,c
   911  004862  EE00  F0D9         	lfsr	0,__pdataBANK0
   912  004866  EE10 F00B          	lfsr	1,11
   913  00486A                     copy_data1:
   914  00486A  0009               	tblrd		*+
   915  00486C  CFF5 FFEE          	movff	tablat,postinc0
   916  004870  50E5               	movf	postdec1,w,c
   917  004872  50E1               	movf	fsr1l,w,c
   918  004874  E1FA               	bnz	copy_data1
   919                           
   920                           ; Initialize objects allocated to COMRAM (20 bytes)
   921                           ; load TBLPTR registers with __pidataCOMRAM
   922  004876  0EE0               	movlw	low __pidataCOMRAM
   923  004878  6EF6               	movwf	tblptrl,c
   924  00487A  0E51               	movlw	high __pidataCOMRAM
   925  00487C  6EF7               	movwf	tblptrh,c
   926  00487E  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   927  004880  6EF8               	movwf	tblptru,c
   928  004882  EE00  F02F         	lfsr	0,__pdataCOMRAM
   929  004886  EE10 F014          	lfsr	1,20
   930  00488A                     copy_data2:
   931  00488A  0009               	tblrd		*+
   932  00488C  CFF5 FFEE          	movff	tablat,postinc0
   933  004890  50E5               	movf	postdec1,w,c
   934  004892  50E1               	movf	fsr1l,w,c
   935  004894  E1FA               	bnz	copy_data2
   936                           
   937                           ; Clear objects allocated to BANK1 (26 bytes)
   938  004896  EE01  F031         	lfsr	0,__pbssBANK1
   939  00489A  0E1A               	movlw	26
   940  00489C                     clear_0:
   941  00489C  6AEE               	clrf	postinc0,c
   942  00489E  06E8               	decf	wreg,f,c
   943  0048A0  E1FD               	bnz	clear_0
   944                           
   945                           ; Clear objects allocated to BANK0 (13 bytes)
   946  0048A2  EE00  F0CC         	lfsr	0,__pbssBANK0
   947  0048A6  0E0D               	movlw	13
   948  0048A8                     clear_1:
   949  0048A8  6AEE               	clrf	postinc0,c
   950  0048AA  06E8               	decf	wreg,f,c
   951  0048AC  E1FD               	bnz	clear_1
   952                           
   953                           ; Clear objects allocated to COMRAM (7 bytes)
   954  0048AE  EE00  F043         	lfsr	0,__pbssCOMRAM
   955  0048B2  0E07               	movlw	7
   956  0048B4                     clear_2:
   957  0048B4  6AEE               	clrf	postinc0,c
   958  0048B6  06E8               	decf	wreg,f,c
   959  0048B8  E1FD               	bnz	clear_2
   960  0048BA                     end_of_initialization:
   961                           	opt stack 0
   962  0048BA                     __end_of__initialization:
   963                           	opt stack 0
   964  0048BA  904A               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   965  0048BC  924A               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   966  0048BE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   967  0048C0  6EF8               	movwf	tblptru,c
   968  0048C2  0100               	movlb	0
   969  0048C4  EF71  F028         	goto	_main	;jump to C main() function
   970                           tblptru	equ	0xFF8
   971                           tblptrh	equ	0xFF7
   972                           tblptrl	equ	0xFF6
   973                           tablat	equ	0xFF5
   974                           postinc0	equ	0xFEE
   975                           wreg	equ	0xFE8
   976                           postdec1	equ	0xFE5
   977                           fsr1l	equ	0xFE1
   978                           
   979                           	psect	bssCOMRAM
   980  000043                     __pbssCOMRAM:
   981                           	opt stack 0
   982  000043                     _i16Data:
   983                           	opt stack 0
   984  000043                     	ds	2
   985  000045                     _DOWNisLP:
   986                           	opt stack 0
   987  000045                     	ds	1
   988  000046                     _UPisLP:
   989                           	opt stack 0
   990  000046                     	ds	1
   991  000047                     _holdDOWNcont:
   992                           	opt stack 0
   993  000047                     	ds	1
   994  000048                     _holdRETROcont:
   995                           	opt stack 0
   996  000048                     	ds	1
   997  000049                     _ie:
   998                           	opt stack 0
   999  000049                     	ds	1
  1000                           tblptru	equ	0xFF8
  1001                           tblptrh	equ	0xFF7
  1002                           tblptrl	equ	0xFF6
  1003                           tablat	equ	0xFF5
  1004                           postinc0	equ	0xFEE
  1005                           wreg	equ	0xFE8
  1006                           postdec1	equ	0xFE5
  1007                           fsr1l	equ	0xFE1
  1008                           
  1009                           	psect	dataCOMRAM
  1010  00002F                     __pdataCOMRAM:
  1011                           	opt stack 0
  1012  00002F                     _kgXcorte:
  1013                           	opt stack 0
  1014  00002F                     	ds	4
  1015  000033                     _m3Xcorte:
  1016                           	opt stack 0
  1017  000033                     	ds	4
  1018  000037                     _tiXcorte:
  1019                           	opt stack 0
  1020  000037                     	ds	4
  1021  00003B                     _velocidadMasa:
  1022                           	opt stack 0
  1023  00003B                     	ds	4
  1024  00003F                     _lastSttDOWN:
  1025                           	opt stack 0
  1026  00003F                     	ds	1
  1027  000040                     _lastSttENTER:
  1028                           	opt stack 0
  1029  000040                     	ds	1
  1030  000041                     _lastSttRETRO:
  1031                           	opt stack 0
  1032  000041                     	ds	1
  1033  000042                     _lastSttUP:
  1034                           	opt stack 0
  1035  000042                     	ds	1
  1036                           tblptru	equ	0xFF8
  1037                           tblptrh	equ	0xFF7
  1038                           tblptrl	equ	0xFF6
  1039                           tablat	equ	0xFF5
  1040                           postinc0	equ	0xFEE
  1041                           wreg	equ	0xFE8
  1042                           postdec1	equ	0xFE5
  1043                           fsr1l	equ	0xFE1
  1044                           
  1045                           	psect	bssBANK0
  1046  0000CC                     __pbssBANK0:
  1047                           	opt stack 0
  1048  0000CC                     _fData:
  1049                           	opt stack 0
  1050  0000CC                     	ds	4
  1051  0000D0                     _ProcessStarted:
  1052                           	opt stack 0
  1053  0000D0                     	ds	1
  1054  0000D1                     _actualScreen:
  1055                           	opt stack 0
  1056  0000D1                     	ds	1
  1057  0000D2                     _holdENTERcont:
  1058                           	opt stack 0
  1059  0000D2                     	ds	1
  1060  0000D3                     _holdUPcont:
  1061                           	opt stack 0
  1062  0000D3                     	ds	1
  1063  0000D4                     _menuSection:
  1064                           	opt stack 0
  1065  0000D4                     	ds	1
  1066  0000D5                     _passSection:
  1067                           	opt stack 0
  1068  0000D5                     	ds	1
  1069  0000D6                     _selKMT:
  1070                           	opt stack 0
  1071  0000D6                     	ds	1
  1072  0000D7                     _selSN:
  1073                           	opt stack 0
  1074  0000D7                     	ds	1
  1075  0000D8                     _tempLastScreen:
  1076                           	opt stack 0
  1077  0000D8                     	ds	1
  1078                           tblptru	equ	0xFF8
  1079                           tblptrh	equ	0xFF7
  1080                           tblptrl	equ	0xFF6
  1081                           tablat	equ	0xFF5
  1082                           postinc0	equ	0xFEE
  1083                           wreg	equ	0xFE8
  1084                           postdec1	equ	0xFE5
  1085                           fsr1l	equ	0xFE1
  1086                           
  1087                           	psect	dataBANK0
  1088  0000D9                     __pdataBANK0:
  1089                           	opt stack 0
  1090  0000D9                     _densidadMasa:
  1091                           	opt stack 0
  1092  0000D9                     	ds	4
  1093  0000DD                     _diamTubo:
  1094                           	opt stack 0
  1095  0000DD                     	ds	4
  1096  0000E1                     _numCortes:
  1097                           	opt stack 0
  1098  0000E1                     	ds	2
  1099  0000E3                     _tVarProceso:
  1100                           	opt stack 0
  1101  0000E3                     	ds	1
  1102                           tblptru	equ	0xFF8
  1103                           tblptrh	equ	0xFF7
  1104                           tblptrl	equ	0xFF6
  1105                           tablat	equ	0xFF5
  1106                           postinc0	equ	0xFEE
  1107                           wreg	equ	0xFE8
  1108                           postdec1	equ	0xFE5
  1109                           fsr1l	equ	0xFE1
  1110                           
  1111                           	psect	bssBANK1
  1112  000131                     __pbssBANK1:
  1113                           	opt stack 0
  1114  000131                     _calFactor:
  1115                           	opt stack 0
  1116  000131                     	ds	4
  1117  000135                     _introducido:
  1118                           	opt stack 0
  1119  000135                     	ds	4
  1120  000139                     _passChar:
  1121                           	opt stack 0
  1122  000139                     	ds	4
  1123  00013D                     _questKMT:
  1124                           	opt stack 0
  1125  00013D                     	ds	3
  1126  000140                     _proceso:
  1127                           	opt stack 0
  1128  000140                     	ds	2
  1129  000142                     _questSN:
  1130                           	opt stack 0
  1131  000142                     	ds	2
  1132  000144                     _DOWNsecurLock:
  1133                           	opt stack 0
  1134  000144                     	ds	1
  1135  000145                     _ENTERisLP:
  1136                           	opt stack 0
  1137  000145                     	ds	1
  1138  000146                     _ENTERsecurLock:
  1139                           	opt stack 0
  1140  000146                     	ds	1
  1141  000147                     _RETROisLP:
  1142                           	opt stack 0
  1143  000147                     	ds	1
  1144  000148                     _RETROsecurLock:
  1145                           	opt stack 0
  1146  000148                     	ds	1
  1147  000149                     _UPsecurLock:
  1148                           	opt stack 0
  1149  000149                     	ds	1
  1150  00014A                     _fd:
  1151                           	opt stack 0
  1152  00014A                     	ds	1
  1153                           tblptru	equ	0xFF8
  1154                           tblptrh	equ	0xFF7
  1155                           tblptrl	equ	0xFF6
  1156                           tablat	equ	0xFF5
  1157                           postinc0	equ	0xFEE
  1158                           wreg	equ	0xFE8
  1159                           postdec1	equ	0xFE5
  1160                           fsr1l	equ	0xFE1
  1161                           
  1162                           	psect	dataBANK1
  1163  00014B                     __pdataBANK1:
  1164                           	opt stack 0
  1165  00014B                     _contra:
  1166                           	opt stack 0
  1167  00014B                     	ds	4
  1168  00014F                     _pi:
  1169                           	opt stack 0
  1170  00014F                     	ds	4
  1171  000153                     _tempkgXcorte:
  1172                           	opt stack 0
  1173  000153                     	ds	4
  1174  000157                     lcd_init@F7567:
  1175                           	opt stack 0
  1176  000157                     	ds	4
  1177  00015B                     _tempNumCortes:
  1178                           	opt stack 0
  1179  00015B                     	ds	2
  1180                           tblptru	equ	0xFF8
  1181                           tblptrh	equ	0xFF7
  1182                           tblptrl	equ	0xFF6
  1183                           tablat	equ	0xFF5
  1184                           postinc0	equ	0xFEE
  1185                           wreg	equ	0xFE8
  1186                           postdec1	equ	0xFE5
  1187                           fsr1l	equ	0xFE1
  1188                           
  1189                           	psect	cstackBANK1
  1190  000100                     __pcstackBANK1:
  1191                           	opt stack 0
  1192  000100                     ?_printf:
  1193                           	opt stack 0
  1194  000100                     printf@f:
  1195                           	opt stack 0
  1196                           
  1197                           ; 2 bytes @ 0x0
  1198  000100                     	ds	18
  1199  000112                     _printf$2842:
  1200                           	opt stack 0
  1201                           
  1202                           ; 4 bytes @ 0x12
  1203  000112                     	ds	4
  1204  000116                     printf@cp:
  1205                           	opt stack 0
  1206                           
  1207                           ; 2 bytes @ 0x16
  1208  000116                     	ds	2
  1209  000118                     printf@len:
  1210                           	opt stack 0
  1211                           
  1212                           ; 2 bytes @ 0x18
  1213  000118                     	ds	2
  1214  00011A                     printf@ap:
  1215                           	opt stack 0
  1216                           
  1217                           ; 2 bytes @ 0x1A
  1218  00011A                     	ds	2
  1219  00011C                     printf@flag:
  1220                           	opt stack 0
  1221                           
  1222                           ; 2 bytes @ 0x1C
  1223  00011C                     	ds	2
  1224  00011E                     printf@tmpval:
  1225                           	opt stack 0
  1226                           
  1227                           ; 4 bytes @ 0x1E
  1228  00011E                     	ds	4
  1229  000122                     printf@val:
  1230                           	opt stack 0
  1231                           
  1232                           ; 4 bytes @ 0x22
  1233  000122                     	ds	4
  1234  000126                     printf@exp:
  1235                           	opt stack 0
  1236                           
  1237                           ; 2 bytes @ 0x26
  1238  000126                     	ds	2
  1239  000128                     printf@width:
  1240                           	opt stack 0
  1241                           
  1242                           ; 2 bytes @ 0x28
  1243  000128                     	ds	2
  1244  00012A                     printf@fval:
  1245                           	opt stack 0
  1246                           
  1247                           ; 4 bytes @ 0x2A
  1248  00012A                     	ds	4
  1249  00012E                     printf@prec:
  1250                           	opt stack 0
  1251                           
  1252                           ; 2 bytes @ 0x2E
  1253  00012E                     	ds	2
  1254  000130                     printf@c:
  1255                           	opt stack 0
  1256                           
  1257                           ; 1 bytes @ 0x30
  1258  000130                     	ds	1
  1259                           tblptru	equ	0xFF8
  1260                           tblptrh	equ	0xFF7
  1261                           tblptrl	equ	0xFF6
  1262                           tablat	equ	0xFF5
  1263                           postinc0	equ	0xFEE
  1264                           wreg	equ	0xFE8
  1265                           postdec1	equ	0xFE5
  1266                           fsr1l	equ	0xFE1
  1267                           
  1268                           	psect	cstackBANK0
  1269  000060                     __pcstackBANK0:
  1270                           	opt stack 0
  1271  000060                     i1calcSysVars@temp:
  1272                           	opt stack 0
  1273                           
  1274                           ; 4 bytes @ 0x0
  1275  000060                     	ds	4
  1276  000064                     ??_isr:
  1277                           
  1278                           ; 1 bytes @ 0x4
  1279  000064                     	ds	17
  1280  000075                     ??_isdigit:
  1281  000075                     ??_lcd_read_4bits:
  1282  000075                     ??_checkPass:
  1283  000075                     ?___wmul:
  1284                           	opt stack 0
  1285  000075                     ?___awmod:
  1286                           	opt stack 0
  1287  000075                     ?__tdiv_to_l_:
  1288                           	opt stack 0
  1289  000075                     ?__div_to_l_:
  1290                           	opt stack 0
  1291  000075                     ?___fldiv:
  1292                           	opt stack 0
  1293  000075                     ?___flneg:
  1294                           	opt stack 0
  1295  000075                     ?___lldiv:
  1296                           	opt stack 0
  1297  000075                     ?___xxtofl:
  1298                           	opt stack 0
  1299  000075                     _lcd_send_4bits$1602:
  1300                           	opt stack 0
  1301  000075                     writeEEPROM@data:
  1302                           	opt stack 0
  1303  000075                     delay_ms@del:
  1304                           	opt stack 0
  1305  000075                     setPWM2duty@actuator:
  1306                           	opt stack 0
  1307  000075                     ___wmul@multiplier:
  1308                           	opt stack 0
  1309  000075                     ___awmod@dividend:
  1310                           	opt stack 0
  1311  000075                     __div_to_l_@f1:
  1312                           	opt stack 0
  1313  000075                     ___flge@ff1:
  1314                           	opt stack 0
  1315  000075                     ___flneg@f1:
  1316                           	opt stack 0
  1317  000075                     __tdiv_to_l_@f1:
  1318                           	opt stack 0
  1319  000075                     ___lldiv@dividend:
  1320                           	opt stack 0
  1321  000075                     ___fldiv@b:
  1322                           	opt stack 0
  1323  000075                     ___xxtofl@val:
  1324                           	opt stack 0
  1325                           
  1326                           ; 4 bytes @ 0x15
  1327  000075                     	ds	1
  1328  000076                     lcd_read_4bits@n:
  1329                           	opt stack 0
  1330  000076                     _lcd_send_4bits$1603:
  1331                           	opt stack 0
  1332  000076                     writeEEPROM@adr:
  1333                           	opt stack 0
  1334  000076                     _isdigit$2357:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x16
  1338  000076                     	ds	1
  1339  000077                     ??_delay_ms:
  1340  000077                     ??_setPWM2duty:
  1341  000077                     lcd_read_byte@low:
  1342                           	opt stack 0
  1343  000077                     _lcd_send_4bits$1604:
  1344                           	opt stack 0
  1345  000077                     isdigit@c:
  1346                           	opt stack 0
  1347  000077                     ___wmul@multiplicand:
  1348                           	opt stack 0
  1349  000077                     ___awmod@divisor:
  1350                           	opt stack 0
  1351                           
  1352                           ; 2 bytes @ 0x17
  1353  000077                     	ds	1
  1354  000078                     lcd_read_byte@high:
  1355                           	opt stack 0
  1356  000078                     _lcd_send_4bits$1605:
  1357                           	opt stack 0
  1358  000078                     delay_ms@i:
  1359                           	opt stack 0
  1360                           
  1361                           ; 2 bytes @ 0x18
  1362  000078                     	ds	1
  1363  000079                     ??___xxtofl:
  1364  000079                     lcd_send_4bits@n:
  1365                           	opt stack 0
  1366  000079                     checkPass@passOK:
  1367                           	opt stack 0
  1368  000079                     ___awmod@counter:
  1369                           	opt stack 0
  1370  000079                     setPWM2duty@act:
  1371                           	opt stack 0
  1372  000079                     ___wmul@product:
  1373                           	opt stack 0
  1374  000079                     __div_to_l_@f2:
  1375                           	opt stack 0
  1376  000079                     ___flge@ff2:
  1377                           	opt stack 0
  1378  000079                     __tdiv_to_l_@f2:
  1379                           	opt stack 0
  1380  000079                     ___lldiv@divisor:
  1381                           	opt stack 0
  1382  000079                     ___fldiv@a:
  1383                           	opt stack 0
  1384                           
  1385                           ; 4 bytes @ 0x19
  1386  000079                     	ds	1
  1387  00007A                     lcd_send_byte@n:
  1388                           	opt stack 0
  1389  00007A                     ___awmod@sign:
  1390                           	opt stack 0
  1391  00007A                     checkPass@i:
  1392                           	opt stack 0
  1393                           
  1394                           ; 2 bytes @ 0x1A
  1395  00007A                     	ds	1
  1396  00007B                     ??_lcd_send_byte:
  1397  00007B                     ?___awdiv:
  1398                           	opt stack 0
  1399  00007B                     ___awdiv@dividend:
  1400                           	opt stack 0
  1401                           
  1402                           ; 2 bytes @ 0x1B
  1403  00007B                     	ds	1
  1404  00007C                     lcd_send_byte@address:
  1405                           	opt stack 0
  1406                           
  1407                           ; 1 bytes @ 0x1C
  1408  00007C                     	ds	1
  1409  00007D                     ??__tdiv_to_l_:
  1410  00007D                     ??___fldiv:
  1411  00007D                     ??_lcd_init:
  1412  00007D                     ??___flge:
  1413  00007D                     lcd_gotoxy@fila:
  1414                           	opt stack 0
  1415  00007D                     ___xxtofl@sign:
  1416                           	opt stack 0
  1417  00007D                     ___awdiv@divisor:
  1418                           	opt stack 0
  1419  00007D                     __div_to_l_@quot:
  1420                           	opt stack 0
  1421  00007D                     ___lldiv@quotient:
  1422                           	opt stack 0
  1423                           
  1424                           ; 4 bytes @ 0x1D
  1425  00007D                     	ds	1
  1426  00007E                     lcd_gotoxy@pos:
  1427                           	opt stack 0
  1428  00007E                     ___xxtofl@exp:
  1429                           	opt stack 0
  1430  00007E                     lcd_init@LCD_INIT_STRING:
  1431                           	opt stack 0
  1432                           
  1433                           ; 4 bytes @ 0x1E
  1434  00007E                     	ds	1
  1435  00007F                     lcd_gotoxy@address:
  1436                           	opt stack 0
  1437  00007F                     ___awdiv@counter:
  1438                           	opt stack 0
  1439  00007F                     ___xxtofl@arg:
  1440                           	opt stack 0
  1441                           
  1442                           ; 4 bytes @ 0x1F
  1443  00007F                     	ds	1
  1444  000080                     ??_lcd_putc:
  1445  000080                     ___awdiv@sign:
  1446                           	opt stack 0
  1447  000080                     __tdiv_to_l_@quot:
  1448                           	opt stack 0
  1449                           
  1450                           ; 4 bytes @ 0x20
  1451  000080                     	ds	1
  1452  000081                     lcd_putc@cha:
  1453                           	opt stack 0
  1454  000081                     __div_to_l_@cntr:
  1455                           	opt stack 0
  1456  000081                     ___lldiv@counter:
  1457                           	opt stack 0
  1458  000081                     ___fldiv@sign:
  1459                           	opt stack 0
  1460  000081                     ___awdiv@quotient:
  1461                           	opt stack 0
  1462                           
  1463                           ; 2 bytes @ 0x21
  1464  000081                     	ds	1
  1465  000082                     ?___llmod:
  1466                           	opt stack 0
  1467  000082                     lcd_init@i:
  1468                           	opt stack 0
  1469  000082                     putch@val:
  1470                           	opt stack 0
  1471  000082                     __div_to_l_@exp1:
  1472                           	opt stack 0
  1473  000082                     ___llmod@dividend:
  1474                           	opt stack 0
  1475  000082                     ___fldiv@rem:
  1476                           	opt stack 0
  1477                           
  1478                           ; 4 bytes @ 0x22
  1479  000082                     	ds	1
  1480  000083                     ?___flmul:
  1481                           	opt stack 0
  1482  000083                     ___flmul@b:
  1483                           	opt stack 0
  1484                           
  1485                           ; 4 bytes @ 0x23
  1486  000083                     	ds	1
  1487  000084                     __tdiv_to_l_@cntr:
  1488                           	opt stack 0
  1489                           
  1490                           ; 1 bytes @ 0x24
  1491  000084                     	ds	1
  1492  000085                     __tdiv_to_l_@exp1:
  1493                           	opt stack 0
  1494                           
  1495                           ; 1 bytes @ 0x25
  1496  000085                     	ds	1
  1497  000086                     ___fldiv@new_exp:
  1498                           	opt stack 0
  1499  000086                     ___llmod@divisor:
  1500                           	opt stack 0
  1501                           
  1502                           ; 4 bytes @ 0x26
  1503  000086                     	ds	1
  1504  000087                     ___flmul@a:
  1505                           	opt stack 0
  1506                           
  1507                           ; 4 bytes @ 0x27
  1508  000087                     	ds	1
  1509  000088                     ___fldiv@grs:
  1510                           	opt stack 0
  1511                           
  1512                           ; 4 bytes @ 0x28
  1513  000088                     	ds	2
  1514  00008A                     ___llmod@counter:
  1515                           	opt stack 0
  1516                           
  1517                           ; 1 bytes @ 0x2A
  1518  00008A                     	ds	1
  1519  00008B                     ??___flmul:
  1520                           
  1521                           ; 1 bytes @ 0x2B
  1522  00008B                     	ds	1
  1523  00008C                     ___fldiv@bexp:
  1524                           	opt stack 0
  1525                           
  1526                           ; 1 bytes @ 0x2C
  1527  00008C                     	ds	1
  1528  00008D                     ___fldiv@aexp:
  1529                           	opt stack 0
  1530                           
  1531                           ; 1 bytes @ 0x2D
  1532  00008D                     	ds	2
  1533  00008F                     ___flmul@sign:
  1534                           	opt stack 0
  1535                           
  1536                           ; 1 bytes @ 0x2F
  1537  00008F                     	ds	1
  1538  000090                     ___flmul@aexp:
  1539                           	opt stack 0
  1540                           
  1541                           ; 1 bytes @ 0x30
  1542  000090                     	ds	1
  1543  000091                     ___flmul@grs:
  1544                           	opt stack 0
  1545                           
  1546                           ; 4 bytes @ 0x31
  1547  000091                     	ds	4
  1548  000095                     ___flmul@bexp:
  1549                           	opt stack 0
  1550                           
  1551                           ; 1 bytes @ 0x35
  1552  000095                     	ds	1
  1553  000096                     ___flmul@prod:
  1554                           	opt stack 0
  1555                           
  1556                           ; 4 bytes @ 0x36
  1557  000096                     	ds	4
  1558  00009A                     ___flmul@temp:
  1559                           	opt stack 0
  1560                           
  1561                           ; 2 bytes @ 0x3A
  1562  00009A                     	ds	2
  1563  00009C                     ?_fround:
  1564                           	opt stack 0
  1565  00009C                     ?_scale:
  1566                           	opt stack 0
  1567  00009C                     calcSysVars@temp:
  1568                           	opt stack 0
  1569                           
  1570                           ; 4 bytes @ 0x3C
  1571  00009C                     	ds	4
  1572  0000A0                     confirmEdition@yes:
  1573                           	opt stack 0
  1574  0000A0                     _fround$2840:
  1575                           	opt stack 0
  1576  0000A0                     _scale$2841:
  1577                           	opt stack 0
  1578                           
  1579                           ; 4 bytes @ 0x40
  1580  0000A0                     	ds	1
  1581  0000A1                     
  1582                           ; 1 bytes @ 0x41
  1583  0000A1                     	ds	3
  1584  0000A4                     scale@scl:
  1585                           	opt stack 0
  1586  0000A4                     _fround$2839:
  1587                           	opt stack 0
  1588                           
  1589                           ; 4 bytes @ 0x44
  1590  0000A4                     	ds	1
  1591  0000A5                     ?___fltol:
  1592                           	opt stack 0
  1593  0000A5                     ___fltol@f1:
  1594                           	opt stack 0
  1595                           
  1596                           ; 4 bytes @ 0x45
  1597  0000A5                     	ds	3
  1598  0000A8                     fround@prec:
  1599                           	opt stack 0
  1600                           
  1601                           ; 1 bytes @ 0x48
  1602  0000A8                     	ds	1
  1603  0000A9                     ??___fltol:
  1604  0000A9                     ?___fladd:
  1605                           	opt stack 0
  1606  0000A9                     ___fladd@b:
  1607                           	opt stack 0
  1608                           
  1609                           ; 4 bytes @ 0x49
  1610  0000A9                     	ds	4
  1611  0000AD                     ___fltol@sign1:
  1612                           	opt stack 0
  1613  0000AD                     ___fladd@a:
  1614                           	opt stack 0
  1615                           
  1616                           ; 4 bytes @ 0x4D
  1617  0000AD                     	ds	1
  1618  0000AE                     ___fltol@exp1:
  1619                           	opt stack 0
  1620                           
  1621                           ; 1 bytes @ 0x4E
  1622  0000AE                     	ds	3
  1623  0000B1                     ??___fladd:
  1624                           
  1625                           ; 1 bytes @ 0x51
  1626  0000B1                     	ds	8
  1627  0000B9                     ___fladd@signs:
  1628                           	opt stack 0
  1629                           
  1630                           ; 1 bytes @ 0x59
  1631  0000B9                     	ds	1
  1632  0000BA                     ___fladd@aexp:
  1633                           	opt stack 0
  1634                           
  1635                           ; 1 bytes @ 0x5A
  1636  0000BA                     	ds	1
  1637  0000BB                     ___fladd@bexp:
  1638                           	opt stack 0
  1639                           
  1640                           ; 1 bytes @ 0x5B
  1641  0000BB                     	ds	1
  1642  0000BC                     ___fladd@grs:
  1643                           	opt stack 0
  1644                           
  1645                           ; 1 bytes @ 0x5C
  1646  0000BC                     	ds	1
  1647  0000BD                     ?___flsub:
  1648                           	opt stack 0
  1649  0000BD                     ___flsub@b:
  1650                           	opt stack 0
  1651                           
  1652                           ; 4 bytes @ 0x5D
  1653  0000BD                     	ds	4
  1654  0000C1                     ___flsub@a:
  1655                           	opt stack 0
  1656                           
  1657                           ; 4 bytes @ 0x61
  1658  0000C1                     	ds	4
  1659  0000C5                     ??_printf:
  1660  0000C5                     
  1661                           ; 1 bytes @ 0x65
  1662  0000C5                     	ds	4
  1663  0000C9                     drawMenu@adv:
  1664                           	opt stack 0
  1665  0000C9                     drawSNquest@tq:
  1666                           	opt stack 0
  1667  0000C9                     drawChanVal@i:
  1668                           	opt stack 0
  1669  0000C9                     drawPassWord@i:
  1670                           	opt stack 0
  1671                           
  1672                           ; 2 bytes @ 0x69
  1673  0000C9                     	ds	1
  1674  0000CA                     drawSNquest@i:
  1675                           	opt stack 0
  1676                           
  1677                           ; 2 bytes @ 0x6A
  1678  0000CA                     	ds	2
  1679  0000CC                     tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           postdec1	equ	0xFE5
  1686                           fsr1l	equ	0xFE1
  1687                           
  1688                           ; 1 bytes @ 0x6C
  1689                           
  1690                           	psect	cstackCOMRAM
  1691  000001                     __pcstackCOMRAM:
  1692                           	opt stack 0
  1693  000001                     i2putchUART@val:
  1694                           	opt stack 0
  1695  000001                     i2setPWM2duty@actuator:
  1696                           	opt stack 0
  1697                           
  1698                           ; 2 bytes @ 0x0
  1699  000001                     	ds	2
  1700  000003                     ??i2_setPWM2duty:
  1701                           
  1702                           ; 1 bytes @ 0x2
  1703  000003                     	ds	2
  1704  000005                     i2setPWM2duty@act:
  1705                           	opt stack 0
  1706                           
  1707                           ; 2 bytes @ 0x4
  1708  000005                     	ds	2
  1709  000007                     ??_hp_isr:
  1710                           
  1711                           ; 1 bytes @ 0x6
  1712  000007                     	ds	14
  1713  000015                     ?i1___fldiv:
  1714                           	opt stack 0
  1715  000015                     ?i1___flmul:
  1716                           	opt stack 0
  1717  000015                     readEEPROM@adr:
  1718                           	opt stack 0
  1719  000015                     putchUART@val:
  1720                           	opt stack 0
  1721  000015                     i1writeEEPROM@data:
  1722                           	opt stack 0
  1723  000015                     i1___fldiv@b:
  1724                           	opt stack 0
  1725  000015                     i1___flmul@b:
  1726                           	opt stack 0
  1727                           
  1728                           ; 4 bytes @ 0x14
  1729  000015                     	ds	1
  1730  000016                     i1writeEEPROM@adr:
  1731                           	opt stack 0
  1732                           
  1733                           ; 1 bytes @ 0x15
  1734  000016                     	ds	3
  1735  000019                     i1___fldiv@a:
  1736                           	opt stack 0
  1737  000019                     i1___flmul@a:
  1738                           	opt stack 0
  1739                           
  1740                           ; 4 bytes @ 0x18
  1741  000019                     	ds	4
  1742  00001D                     ??i1___fldiv:
  1743  00001D                     ??i1___flmul:
  1744                           
  1745                           ; 1 bytes @ 0x1C
  1746  00001D                     	ds	4
  1747  000021                     i1___fldiv@sign:
  1748                           	opt stack 0
  1749  000021                     i1___flmul@sign:
  1750                           	opt stack 0
  1751                           
  1752                           ; 1 bytes @ 0x20
  1753  000021                     	ds	1
  1754  000022                     i1___flmul@aexp:
  1755                           	opt stack 0
  1756  000022                     i1___fldiv@rem:
  1757                           	opt stack 0
  1758                           
  1759                           ; 4 bytes @ 0x21
  1760  000022                     	ds	1
  1761  000023                     i1___flmul@grs:
  1762                           	opt stack 0
  1763                           
  1764                           ; 4 bytes @ 0x22
  1765  000023                     	ds	3
  1766  000026                     i1___fldiv@new_exp:
  1767                           	opt stack 0
  1768                           
  1769                           ; 2 bytes @ 0x25
  1770  000026                     	ds	1
  1771  000027                     i1___flmul@bexp:
  1772                           	opt stack 0
  1773                           
  1774                           ; 1 bytes @ 0x26
  1775  000027                     	ds	1
  1776  000028                     i1___fldiv@grs:
  1777                           	opt stack 0
  1778  000028                     i1___flmul@prod:
  1779                           	opt stack 0
  1780                           
  1781                           ; 4 bytes @ 0x27
  1782  000028                     	ds	4
  1783  00002C                     i1___fldiv@bexp:
  1784                           	opt stack 0
  1785  00002C                     i1___flmul@temp:
  1786                           	opt stack 0
  1787                           
  1788                           ; 2 bytes @ 0x2B
  1789  00002C                     	ds	1
  1790  00002D                     i1___fldiv@aexp:
  1791                           	opt stack 0
  1792                           
  1793                           ; 1 bytes @ 0x2C
  1794  00002D                     	ds	1
  1795  00002E                     UARTint@sas:
  1796                           	opt stack 0
  1797                           
  1798                           ; 1 bytes @ 0x2D
  1799  00002E                     	ds	1
  1800                           tblptru	equ	0xFF8
  1801                           tblptrh	equ	0xFF7
  1802                           tblptrl	equ	0xFF6
  1803                           tablat	equ	0xFF5
  1804                           postinc0	equ	0xFEE
  1805                           wreg	equ	0xFE8
  1806                           postdec1	equ	0xFE5
  1807                           fsr1l	equ	0xFE1
  1808                           
  1809 ;;
  1810 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1811 ;;
  1812 ;; *************** function _main *****************
  1813 ;; Defined at:
  1814 ;;		line 27 in file "source/main.c"
  1815 ;; Parameters:    Size  Location     Type
  1816 ;;		None
  1817 ;; Auto vars:     Size  Location     Type
  1818 ;;		None
  1819 ;; Return value:  Size  Location     Type
  1820 ;;                  1    wreg      void 
  1821 ;; Registers used:
  1822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1823 ;; Tracked objects:
  1824 ;;		On entry : 0/0
  1825 ;;		On exit  : 0/0
  1826 ;;		Unchanged: 0/0
  1827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1828 ;;      Params:         0       0       0       0       0       0       0
  1829 ;;      Locals:         0       0       0       0       0       0       0
  1830 ;;      Temps:          0       0       0       0       0       0       0
  1831 ;;      Totals:         0       0       0       0       0       0       0
  1832 ;;Total ram usage:        0 bytes
  1833 ;; Hardware stack levels required when called:   17
  1834 ;; This function calls:
  1835 ;;		_EEPROMConfig
  1836 ;;		_PWM2Config
  1837 ;;		_UARTConfig
  1838 ;;		_buttonChecking
  1839 ;;		_clockConfig
  1840 ;;		_drawScreen
  1841 ;;		_interruptConfig
  1842 ;;		_ioConfig
  1843 ;;		_ioInitStt
  1844 ;;		_lcd_init
  1845 ;; This function is called by:
  1846 ;;		Startup code after reset
  1847 ;; This function uses a non-reentrant model
  1848 ;;
  1849                           
  1850                           	psect	text0
  1851  0050E2                     __ptext0:
  1852                           	opt stack 0
  1853  0050E2                     _main:
  1854                           	opt stack 14
  1855                           
  1856                           ;main.c: 29: clockConfig();
  1857                           
  1858                           ;incstack = 0
  1859  0050E2  ECB1  F028         	call	_clockConfig	;wreg free
  1860                           
  1861                           ;main.c: 30: ioInitStt();
  1862  0050E6  EC46  F029         	call	_ioInitStt	;wreg free
  1863                           
  1864                           ;main.c: 31: EEPROMConfig();
  1865  0050EA  EC4E  F029         	call	_EEPROMConfig	;wreg free
  1866                           
  1867                           ;main.c: 34: ioConfig();
  1868  0050EE  ECFB  F027         	call	_ioConfig	;wreg free
  1869                           
  1870                           ;main.c: 35: lcd_init();
  1871  0050F2  ECE2  F022         	call	_lcd_init	;wreg free
  1872                           
  1873                           ;main.c: 36: PWM2Config();
  1874  0050F6  EC5E  F026         	call	_PWM2Config	;wreg free
  1875                           
  1876                           ;main.c: 37: UARTConfig();
  1877  0050FA  ECC4  F027         	call	_UARTConfig	;wreg free
  1878                           
  1879                           ;main.c: 38: interruptConfig();
  1880  0050FE  EC4A  F029         	call	_interruptConfig	;wreg free
  1881  005102                     l723:
  1882  005102  0004               	clrwdt		;# 
  1883                           
  1884                           ;main.c: 42: drawScreen();
  1885  005104  EC64  F024         	call	_drawScreen	;wreg free
  1886                           
  1887                           ;main.c: 43: buttonChecking();
  1888  005108  EC05  F017         	call	_buttonChecking	;wreg free
  1889  00510C  D7FA               	goto	l723
  1890  00510E                     __end_of_main:
  1891                           	opt stack 0
  1892                           tblptru	equ	0xFF8
  1893                           tblptrh	equ	0xFF7
  1894                           tblptrl	equ	0xFF6
  1895                           tablat	equ	0xFF5
  1896                           postinc0	equ	0xFEE
  1897                           wreg	equ	0xFE8
  1898                           postdec1	equ	0xFE5
  1899                           fsr1l	equ	0xFE1
  1900                           
  1901 ;; *************** function _lcd_init *****************
  1902 ;; Defined at:
  1903 ;;		line 179 in file "source/../../vclib_lcd.h"
  1904 ;; Parameters:    Size  Location     Type
  1905 ;;		None
  1906 ;; Auto vars:     Size  Location     Type
  1907 ;;  LCD_INIT_STR    4   30[BANK0 ] unsigned char [4]
  1908 ;;  i               1   34[BANK0 ] unsigned char 
  1909 ;; Return value:  Size  Location     Type
  1910 ;;                  1    wreg      void 
  1911 ;; Registers used:
  1912 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1918 ;;      Params:         0       0       0       0       0       0       0
  1919 ;;      Locals:         0       5       0       0       0       0       0
  1920 ;;      Temps:          0       1       0       0       0       0       0
  1921 ;;      Totals:         0       6       0       0       0       0       0
  1922 ;;Total ram usage:        6 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:   11
  1925 ;; This function calls:
  1926 ;;		_lcd_send_4bits
  1927 ;;		_lcd_send_byte
  1928 ;; This function is called by:
  1929 ;;		_main
  1930 ;; This function uses a non-reentrant model
  1931 ;;
  1932                           
  1933                           	psect	text1
  1934  0045C4                     __ptext1:
  1935                           	opt stack 0
  1936  0045C4                     _lcd_init:
  1937                           	opt stack 19
  1938                           
  1939                           ;vclib_lcd.h: 180: unsigned char i;
  1940                           ;vclib_lcd.h: 181: unsigned char LCD_INIT_STRING[4] = {0x20 | (2 << 2), 0xc, 1, 6};
  1941                           
  1942                           ;incstack = 0
  1943  0045C4  C157  F07E         	movff	lcd_init@F7567,lcd_init@LCD_INIT_STRING
  1944  0045C8  C158  F07F         	movff	lcd_init@F7567+1,lcd_init@LCD_INIT_STRING+1
  1945  0045CC  C159  F080         	movff	lcd_init@F7567+2,lcd_init@LCD_INIT_STRING+2
  1946  0045D0  C15A  F081         	movff	lcd_init@F7567+3,lcd_init@LCD_INIT_STRING+3
  1947                           
  1948                           ;vclib_lcd.h: 184: PORTBbits.RB3 = 0;
  1949  0045D4  9681               	bcf	3969,3,c	;volatile
  1950                           
  1951                           ;vclib_lcd.h: 185: PORTBbits.RB1 = 0;
  1952  0045D6  9281               	bcf	3969,1,c	;volatile
  1953                           
  1954                           ;vclib_lcd.h: 186: PORTBbits.RB2 = 0;
  1955  0045D8  9481               	bcf	3969,2,c	;volatile
  1956                           
  1957                           ;vclib_lcd.h: 187: _delay((unsigned long)((15)*(16000000/4000.0)));
  1958  0045DA  0E4E               	movlw	78
  1959  0045DC  0100               	movlb	0	; () banked
  1960  0045DE  6F7D               	movwf	??_lcd_init& (0+255),b
  1961  0045E0  0EEB               	movlw	235
  1962  0045E2                     u12087:
  1963  0045E2  2EE8               	decfsz	wreg,f,c
  1964  0045E4  D7FE               	goto	u12087
  1965  0045E6  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  1966  0045E8  D7FC               	goto	u12087
  1967  0045EA  F000               	nop	
  1968                           
  1969                           ;vclib_lcd.h: 188: for (i = 1; i <= 3; ++i) {
  1970  0045EC  0E01               	movlw	1
  1971  0045EE  0100               	movlb	0	; () banked
  1972  0045F0  6F82               	movwf	lcd_init@i& (0+255),b
  1973  0045F2                     l9346:
  1974                           
  1975                           ; BSR set to: 0
  1976  0045F2  0E03               	movlw	3
  1977  0045F4  0100               	movlb	0	; () banked
  1978  0045F6  6582               	cpfsgt	lcd_init@i& (0+255),b
  1979  0045F8  D001               	goto	l9350
  1980  0045FA  D00F               	goto	l9358
  1981  0045FC                     l9350:
  1982                           
  1983                           ; BSR set to: 0
  1984                           ;vclib_lcd.h: 189: lcd_send_4bits(3);
  1985  0045FC  0E03               	movlw	3
  1986  0045FE  ECAC  F024         	call	_lcd_send_4bits
  1987                           
  1988                           ;vclib_lcd.h: 190: _delay((unsigned long)((5)*(16000000/4000.0)));
  1989  004602  0E1A               	movlw	26
  1990  004604  0100               	movlb	0	; () banked
  1991  004606  6F7D               	movwf	??_lcd_init& (0+255),b
  1992  004608  0EF8               	movlw	248
  1993  00460A                     u12097:
  1994  00460A  2EE8               	decfsz	wreg,f,c
  1995  00460C  D7FE               	goto	u12097
  1996  00460E  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  1997  004610  D7FC               	goto	u12097
  1998  004612  D000               	nop2	
  1999  004614  0100               	movlb	0	; () banked
  2000  004616  2B82               	incf	lcd_init@i& (0+255),f,b
  2001  004618  D7EC               	goto	l9346
  2002  00461A                     l9358:
  2003                           
  2004                           ; BSR set to: 0
  2005                           ;vclib_lcd.h: 191: }
  2006                           ;vclib_lcd.h: 192: lcd_send_4bits(2);
  2007  00461A  0E02               	movlw	2
  2008  00461C  ECAC  F024         	call	_lcd_send_4bits
  2009                           
  2010                           ;vclib_lcd.h: 193: _delay((unsigned long)((5)*(16000000/4000.0)));
  2011  004620  0E1A               	movlw	26
  2012  004622  0100               	movlb	0	; () banked
  2013  004624  6F7D               	movwf	??_lcd_init& (0+255),b
  2014  004626  0EF8               	movlw	248
  2015  004628                     u12107:
  2016  004628  2EE8               	decfsz	wreg,f,c
  2017  00462A  D7FE               	goto	u12107
  2018  00462C  2F7D               	decfsz	??_lcd_init& (0+255),f,b
  2019  00462E  D7FC               	goto	u12107
  2020  004630  D000               	nop2	
  2021                           
  2022                           ;vclib_lcd.h: 194: for (i = 0; i <= 3; ++i)
  2023  004632  0E00               	movlw	0
  2024  004634  0100               	movlb	0	; () banked
  2025  004636  6F82               	movwf	lcd_init@i& (0+255),b
  2026  004638                     l9364:
  2027                           
  2028                           ; BSR set to: 0
  2029  004638  0E03               	movlw	3
  2030  00463A  0100               	movlb	0	; () banked
  2031  00463C  6582               	cpfsgt	lcd_init@i& (0+255),b
  2032  00463E  D001               	goto	l9368
  2033  004640  0012               	return	
  2034  004642                     l9368:
  2035                           
  2036                           ; BSR set to: 0
  2037                           ;vclib_lcd.h: 195: lcd_send_byte(0, LCD_INIT_STRING[i]);
  2038  004642  0100               	movlb	0	; () banked
  2039  004644  5182               	movf	lcd_init@i& (0+255),w,b
  2040  004646  0D01               	mullw	1
  2041  004648  0E7E               	movlw	low lcd_init@LCD_INIT_STRING
  2042  00464A  24F3               	addwf	prodl,w,c
  2043  00464C  6ED9               	movwf	fsr2l,c
  2044  00464E  0E00               	movlw	high lcd_init@LCD_INIT_STRING
  2045  004650  20F4               	addwfc	prodh,w,c
  2046  004652  6EDA               	movwf	fsr2h,c
  2047  004654  50DF               	movf	indf2,w,c
  2048  004656  0100               	movlb	0	; () banked
  2049  004658  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  2050  00465A  0E00               	movlw	0
  2051  00465C  EC48  F027         	call	_lcd_send_byte
  2052  004660  0100               	movlb	0	; () banked
  2053  004662  2B82               	incf	lcd_init@i& (0+255),f,b
  2054  004664  D7E9               	goto	l9364
  2055  004666                     __end_of_lcd_init:
  2056                           	opt stack 0
  2057                           tblptru	equ	0xFF8
  2058                           tblptrh	equ	0xFF7
  2059                           tblptrl	equ	0xFF6
  2060                           tablat	equ	0xFF5
  2061                           prodh	equ	0xFF4
  2062                           prodl	equ	0xFF3
  2063                           postinc0	equ	0xFEE
  2064                           wreg	equ	0xFE8
  2065                           postdec1	equ	0xFE5
  2066                           fsr1l	equ	0xFE1
  2067                           indf2	equ	0xFDF
  2068                           fsr2h	equ	0xFDA
  2069                           fsr2l	equ	0xFD9
  2070                           
  2071 ;; *************** function _ioInitStt *****************
  2072 ;; Defined at:
  2073 ;;		line 80 in file "source/IOConfig.h"
  2074 ;; Parameters:    Size  Location     Type
  2075 ;;		None
  2076 ;; Auto vars:     Size  Location     Type
  2077 ;;		None
  2078 ;; Return value:  Size  Location     Type
  2079 ;;                  1    wreg      void 
  2080 ;; Registers used:
  2081 ;;		None
  2082 ;; Tracked objects:
  2083 ;;		On entry : 0/0
  2084 ;;		On exit  : 0/0
  2085 ;;		Unchanged: 0/0
  2086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2087 ;;      Params:         0       0       0       0       0       0       0
  2088 ;;      Locals:         0       0       0       0       0       0       0
  2089 ;;      Temps:          0       0       0       0       0       0       0
  2090 ;;      Totals:         0       0       0       0       0       0       0
  2091 ;;Total ram usage:        0 bytes
  2092 ;; Hardware stack levels used:    1
  2093 ;; Hardware stack levels required when called:    8
  2094 ;; This function calls:
  2095 ;;		Nothing
  2096 ;; This function is called by:
  2097 ;;		_main
  2098 ;; This function uses a non-reentrant model
  2099 ;;
  2100                           
  2101                           	psect	text2
  2102  00528C                     __ptext2:
  2103                           	opt stack 0
  2104  00528C                     _ioInitStt:
  2105                           	opt stack 22
  2106                           
  2107                           ;IOConfig.h: 81: LATCbits.LATC4 = 0;
  2108                           
  2109                           ; BSR set to: 0
  2110                           ;incstack = 0
  2111  00528C  988B               	bcf	3979,4,c	;volatile
  2112                           
  2113                           ;IOConfig.h: 82: LATBbits.LATB0 = 0;
  2114  00528E  908A               	bcf	3978,0,c	;volatile
  2115                           
  2116                           ;IOConfig.h: 83: LATCbits.LATC5 = 0;
  2117  005290  9A8B               	bcf	3979,5,c	;volatile
  2118  005292  0012               	return		;funcret
  2119  005294                     __end_of_ioInitStt:
  2120                           	opt stack 0
  2121                           tblptru	equ	0xFF8
  2122                           tblptrh	equ	0xFF7
  2123                           tblptrl	equ	0xFF6
  2124                           tablat	equ	0xFF5
  2125                           prodh	equ	0xFF4
  2126                           prodl	equ	0xFF3
  2127                           postinc0	equ	0xFEE
  2128                           wreg	equ	0xFE8
  2129                           postdec1	equ	0xFE5
  2130                           fsr1l	equ	0xFE1
  2131                           indf2	equ	0xFDF
  2132                           fsr2h	equ	0xFDA
  2133                           fsr2l	equ	0xFD9
  2134                           
  2135 ;; *************** function _ioConfig *****************
  2136 ;; Defined at:
  2137 ;;		line 63 in file "source/IOConfig.h"
  2138 ;; Parameters:    Size  Location     Type
  2139 ;;		None
  2140 ;; Auto vars:     Size  Location     Type
  2141 ;;		None
  2142 ;; Return value:  Size  Location     Type
  2143 ;;                  1    wreg      void 
  2144 ;; Registers used:
  2145 ;;		None
  2146 ;; Tracked objects:
  2147 ;;		On entry : 0/0
  2148 ;;		On exit  : 0/0
  2149 ;;		Unchanged: 0/0
  2150 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2151 ;;      Params:         0       0       0       0       0       0       0
  2152 ;;      Locals:         0       0       0       0       0       0       0
  2153 ;;      Temps:          0       0       0       0       0       0       0
  2154 ;;      Totals:         0       0       0       0       0       0       0
  2155 ;;Total ram usage:        0 bytes
  2156 ;; Hardware stack levels used:    1
  2157 ;; Hardware stack levels required when called:    8
  2158 ;; This function calls:
  2159 ;;		Nothing
  2160 ;; This function is called by:
  2161 ;;		_main
  2162 ;; This function uses a non-reentrant model
  2163 ;;
  2164                           
  2165                           	psect	text3
  2166  004FF6                     __ptext3:
  2167                           	opt stack 0
  2168  004FF6                     _ioConfig:
  2169                           	opt stack 22
  2170                           
  2171                           ;IOConfig.h: 64: TRISBbits.TRISB1 = 0;
  2172                           
  2173                           ;incstack = 0
  2174  004FF6  9293               	bcf	3987,1,c	;volatile
  2175                           
  2176                           ;IOConfig.h: 65: TRISBbits.TRISB2 = 0;
  2177  004FF8  9493               	bcf	3987,2,c	;volatile
  2178                           
  2179                           ;IOConfig.h: 66: TRISBbits.TRISB3 = 0;
  2180  004FFA  9693               	bcf	3987,3,c	;volatile
  2181                           
  2182                           ;IOConfig.h: 67: TRISBbits.TRISB0 = 0;
  2183  004FFC  9093               	bcf	3987,0,c	;volatile
  2184                           
  2185                           ;IOConfig.h: 68: TRISCbits.TRISC5 = 0;
  2186  004FFE  9A94               	bcf	3988,5,c	;volatile
  2187                           
  2188                           ;IOConfig.h: 69: TRISAbits.TRISA7 = 1;
  2189  005000  8E92               	bsf	3986,7,c	;volatile
  2190                           
  2191                           ;IOConfig.h: 70: TRISAbits.TRISA6 = 1;
  2192  005002  8C92               	bsf	3986,6,c	;volatile
  2193                           
  2194                           ;IOConfig.h: 71: TRISCbits.TRISC2 = 1; ANSELCbits.ANSC2 = 0;
  2195  005004  8494               	bsf	3988,2,c	;volatile
  2196  005006  010F               	movlb	15	; () banked
  2197  005008  953A               	bcf	58,2,b	;volatile
  2198                           
  2199                           ;IOConfig.h: 72: TRISCbits.TRISC3 = 1; ANSELCbits.ANSC3 = 0;
  2200  00500A  8694               	bsf	3988,3,c	;volatile
  2201  00500C  010F               	movlb	15	; () banked
  2202  00500E  973A               	bcf	58,3,b	;volatile
  2203                           
  2204                           ;IOConfig.h: 73: TRISAbits.TRISA2 = 1; ANSELAbits.ANSA2 = 0;
  2205  005010  8492               	bsf	3986,2,c	;volatile
  2206  005012  010F               	movlb	15	; () banked
  2207  005014  9538               	bcf	56,2,b	;volatile
  2208                           
  2209                           ;IOConfig.h: 74: TRISAbits.TRISA3 = 1; ANSELAbits.ANSA3 = 0;
  2210  005016  8692               	bsf	3986,3,c	;volatile
  2211  005018  010F               	movlb	15	; () banked
  2212  00501A  9738               	bcf	56,3,b	;volatile
  2213                           
  2214                           ;IOConfig.h: 75: TRISAbits.TRISA4 = 1;
  2215  00501C  8892               	bsf	3986,4,c	;volatile
  2216                           
  2217                           ;IOConfig.h: 76: TRISAbits.TRISA5 = 1; ANSELAbits.ANSA5 = 0;
  2218  00501E  8A92               	bsf	3986,5,c	;volatile
  2219  005020  010F               	movlb	15	; () banked
  2220  005022  9B38               	bcf	56,5,b	;volatile
  2221                           
  2222                           ;IOConfig.h: 77: TRISCbits.TRISC4 = 0;
  2223  005024  9894               	bcf	3988,4,c	;volatile
  2224                           
  2225                           ; BSR set to: 15
  2226  005026  0012               	return		;funcret
  2227  005028                     __end_of_ioConfig:
  2228                           	opt stack 0
  2229                           tblptru	equ	0xFF8
  2230                           tblptrh	equ	0xFF7
  2231                           tblptrl	equ	0xFF6
  2232                           tablat	equ	0xFF5
  2233                           prodh	equ	0xFF4
  2234                           prodl	equ	0xFF3
  2235                           postinc0	equ	0xFEE
  2236                           wreg	equ	0xFE8
  2237                           postdec1	equ	0xFE5
  2238                           fsr1l	equ	0xFE1
  2239                           indf2	equ	0xFDF
  2240                           fsr2h	equ	0xFDA
  2241                           fsr2l	equ	0xFD9
  2242                           
  2243 ;; *************** function _interruptConfig *****************
  2244 ;; Defined at:
  2245 ;;		line 90 in file "source/SYSConfig.h"
  2246 ;; Parameters:    Size  Location     Type
  2247 ;;		None
  2248 ;; Auto vars:     Size  Location     Type
  2249 ;;		None
  2250 ;; Return value:  Size  Location     Type
  2251 ;;                  1    wreg      void 
  2252 ;; Registers used:
  2253 ;;		None
  2254 ;; Tracked objects:
  2255 ;;		On entry : 0/0
  2256 ;;		On exit  : 0/0
  2257 ;;		Unchanged: 0/0
  2258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2259 ;;      Params:         0       0       0       0       0       0       0
  2260 ;;      Locals:         0       0       0       0       0       0       0
  2261 ;;      Temps:          0       0       0       0       0       0       0
  2262 ;;      Totals:         0       0       0       0       0       0       0
  2263 ;;Total ram usage:        0 bytes
  2264 ;; Hardware stack levels used:    1
  2265 ;; Hardware stack levels required when called:    8
  2266 ;; This function calls:
  2267 ;;		Nothing
  2268 ;; This function is called by:
  2269 ;;		_main
  2270 ;; This function uses a non-reentrant model
  2271 ;;
  2272                           
  2273                           	psect	text4
  2274  005294                     __ptext4:
  2275                           	opt stack 0
  2276  005294                     _interruptConfig:
  2277                           	opt stack 22
  2278                           
  2279                           ;SYSConfig.h: 91: RCONbits.IPEN = 1;
  2280                           
  2281                           ; BSR set to: 15
  2282                           ;incstack = 0
  2283  005294  8ED0               	bsf	4048,7,c	;volatile
  2284                           
  2285                           ;SYSConfig.h: 92: INTCONbits.PEIE = 1;
  2286  005296  8CF2               	bsf	intcon,6,c	;volatile
  2287                           
  2288                           ;SYSConfig.h: 93: INTCONbits.GIE = 1;
  2289  005298  8EF2               	bsf	intcon,7,c	;volatile
  2290  00529A  0012               	return		;funcret
  2291  00529C                     __end_of_interruptConfig:
  2292                           	opt stack 0
  2293                           tblptru	equ	0xFF8
  2294                           tblptrh	equ	0xFF7
  2295                           tblptrl	equ	0xFF6
  2296                           tablat	equ	0xFF5
  2297                           prodh	equ	0xFF4
  2298                           prodl	equ	0xFF3
  2299                           intcon	equ	0xFF2
  2300                           postinc0	equ	0xFEE
  2301                           wreg	equ	0xFE8
  2302                           postdec1	equ	0xFE5
  2303                           fsr1l	equ	0xFE1
  2304                           indf2	equ	0xFDF
  2305                           fsr2h	equ	0xFDA
  2306                           fsr2l	equ	0xFD9
  2307                           
  2308 ;; *************** function _drawScreen *****************
  2309 ;; Defined at:
  2310 ;;		line 292 in file "source/screenDrawers.h"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:   16
  2331 ;; This function calls:
  2332 ;;		_drawAdvOFF
  2333 ;;		_drawAdvON
  2334 ;;		_drawBadPass
  2335 ;;		_drawChanVal
  2336 ;;		_drawMenu
  2337 ;;		_drawPassWord
  2338 ;;		_drawSNquest
  2339 ;; This function is called by:
  2340 ;;		_main
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           	psect	text5
  2345  0048C8                     __ptext5:
  2346                           	opt stack 0
  2347  0048C8                     _drawScreen:
  2348                           	opt stack 14
  2349                           
  2350                           ;screenDrawers.h: 293: switch (actualScreen) {
  2351                           
  2352                           ;incstack = 0
  2353  0048C8  D023               	goto	l9442
  2354  0048CA                     l9420:
  2355                           
  2356                           ;screenDrawers.h: 295: {
  2357                           ;screenDrawers.h: 296: drawMenu(0);
  2358  0048CA  0E00               	movlw	0
  2359  0048CC  EC82  F00F         	call	_drawMenu
  2360                           
  2361                           ;screenDrawers.h: 297: break;
  2362  0048D0  0012               	return	
  2363  0048D2                     l9422:
  2364                           
  2365                           ;screenDrawers.h: 300: {
  2366                           ;screenDrawers.h: 301: drawPassWord();
  2367  0048D2  ECBB  F020         	call	_drawPassWord	;wreg free
  2368                           
  2369                           ;screenDrawers.h: 302: break;
  2370  0048D6  0012               	return	
  2371  0048D8                     l9424:
  2372                           
  2373                           ;screenDrawers.h: 305: {
  2374                           ;screenDrawers.h: 306: drawBadPass();
  2375  0048D8  EC2C  F028         	call	_drawBadPass	;wreg free
  2376                           
  2377                           ;screenDrawers.h: 307: break;
  2378  0048DC  0012               	return	
  2379  0048DE                     l9426:
  2380                           
  2381                           ;screenDrawers.h: 310: {
  2382                           ;screenDrawers.h: 311: drawMenu(1);
  2383  0048DE  0E01               	movlw	1
  2384  0048E0  EC82  F00F         	call	_drawMenu
  2385                           
  2386                           ;screenDrawers.h: 312: break;
  2387  0048E4  0012               	return	
  2388  0048E6                     l9428:
  2389                           
  2390                           ;screenDrawers.h: 315: {
  2391                           ;screenDrawers.h: 316: drawAdvON();
  2392  0048E6  EC43  F028         	call	_drawAdvON	;wreg free
  2393                           
  2394                           ;screenDrawers.h: 317: break;
  2395  0048EA  0012               	return	
  2396  0048EC                     l9430:
  2397                           
  2398                           ;screenDrawers.h: 320: {
  2399                           ;screenDrawers.h: 321: drawAdvOFF();
  2400  0048EC  EC5A  F028         	call	_drawAdvOFF	;wreg free
  2401                           
  2402                           ;screenDrawers.h: 325: {
  2403                           ;screenDrawers.h: 327: break;
  2404                           
  2405                           ;screenDrawers.h: 323: }
  2406                           ;screenDrawers.h: 324: case (6):
  2407                           
  2408                           ;screenDrawers.h: 322: break;
  2409  0048F0  0012               	return	
  2410  0048F2                     l9432:
  2411                           
  2412                           ;screenDrawers.h: 330: {
  2413                           ;screenDrawers.h: 331: drawChanVal();
  2414  0048F2  ECAE  F015         	call	_drawChanVal	;wreg free
  2415                           
  2416                           ;screenDrawers.h: 332: break;
  2417  0048F6  0012               	return	
  2418  0048F8                     l9434:
  2419                           
  2420                           ;screenDrawers.h: 335: {
  2421                           ;screenDrawers.h: 336: drawSNquest(0);
  2422  0048F8  0E00               	movlw	0
  2423  0048FA  ECBB  F021         	call	_drawSNquest
  2424                           
  2425                           ;screenDrawers.h: 337: break;
  2426  0048FE  0012               	return	
  2427  004900                     l9436:
  2428                           
  2429                           ;screenDrawers.h: 340: {
  2430                           ;screenDrawers.h: 341: drawSNquest(1);
  2431  004900  0E01               	movlw	1
  2432  004902  ECBB  F021         	call	_drawSNquest
  2433                           
  2434                           ;screenDrawers.h: 342: break;
  2435  004906  0012               	return	
  2436  004908                     l9438:
  2437                           
  2438                           ;screenDrawers.h: 345: {
  2439                           ;screenDrawers.h: 346: drawSNquest(2);
  2440  004908  0E02               	movlw	2
  2441  00490A  ECBB  F021         	call	_drawSNquest
  2442                           
  2443                           ;screenDrawers.h: 348: }
  2444                           ;screenDrawers.h: 349: }
  2445                           
  2446                           ;screenDrawers.h: 347: break;
  2447  00490E  0012               	return	
  2448  004910                     l9442:
  2449  004910  0100               	movlb	0	; () banked
  2450  004912  51D1               	movf	_actualScreen& (0+255),w,b
  2451                           
  2452                           ; Switch size 1, requested type "space"
  2453                           ; Number of cases is 11, Range of values is 0 to 10
  2454                           ; switch strategies available:
  2455                           ; Name         Instructions Cycles
  2456                           ; simple_byte           34    18 (average)
  2457                           ;	Chosen strategy is simple_byte
  2458  004914  0A00               	xorlw	0	; case 0
  2459  004916  B4D8               	btfsc	status,2,c
  2460  004918  D7D8               	goto	l9420
  2461  00491A  0A01               	xorlw	1	; case 1
  2462  00491C  B4D8               	btfsc	status,2,c
  2463  00491E  D7D9               	goto	l9422
  2464  004920  0A03               	xorlw	3	; case 2
  2465  004922  B4D8               	btfsc	status,2,c
  2466  004924  D7E9               	goto	l9434
  2467  004926  0A01               	xorlw	1	; case 3
  2468  004928  B4D8               	btfsc	status,2,c
  2469  00492A  D7EA               	goto	l9436
  2470  00492C  0A07               	xorlw	7	; case 4
  2471  00492E  B4D8               	btfsc	status,2,c
  2472  004930  D7D6               	goto	l9426
  2473  004932  0A01               	xorlw	1	; case 5
  2474  004934  B4D8               	btfsc	status,2,c
  2475  004936  D7DD               	goto	l9432
  2476  004938  0A03               	xorlw	3	; case 6
  2477  00493A  B4D8               	btfsc	status,2,c
  2478  00493C  0012               	return	
  2479  00493E  0A01               	xorlw	1	; case 7
  2480  004940  B4D8               	btfsc	status,2,c
  2481  004942  D7CA               	goto	l9424
  2482  004944  0A0F               	xorlw	15	; case 8
  2483  004946  B4D8               	btfsc	status,2,c
  2484  004948  D7CE               	goto	l9428
  2485  00494A  0A01               	xorlw	1	; case 9
  2486  00494C  B4D8               	btfsc	status,2,c
  2487  00494E  D7CE               	goto	l9430
  2488  004950  0A03               	xorlw	3	; case 10
  2489  004952  A4D8               	btfss	status,2,c
  2490  004954  0012               	return	
  2491  004956  D7D8               	goto	l9438
  2492  004958                     __end_of_drawScreen:
  2493                           	opt stack 0
  2494                           tblptru	equ	0xFF8
  2495                           tblptrh	equ	0xFF7
  2496                           tblptrl	equ	0xFF6
  2497                           tablat	equ	0xFF5
  2498                           prodh	equ	0xFF4
  2499                           prodl	equ	0xFF3
  2500                           intcon	equ	0xFF2
  2501                           postinc0	equ	0xFEE
  2502                           wreg	equ	0xFE8
  2503                           postdec1	equ	0xFE5
  2504                           fsr1l	equ	0xFE1
  2505                           indf2	equ	0xFDF
  2506                           fsr2h	equ	0xFDA
  2507                           fsr2l	equ	0xFD9
  2508                           status	equ	0xFD8
  2509                           
  2510 ;; *************** function _drawSNquest *****************
  2511 ;; Defined at:
  2512 ;;		line 277 in file "source/screenDrawers.h"
  2513 ;; Parameters:    Size  Location     Type
  2514 ;;  tq              1    wreg     unsigned char 
  2515 ;; Auto vars:     Size  Location     Type
  2516 ;;  tq              1  105[BANK0 ] unsigned char 
  2517 ;;  i               2  106[BANK0 ] int 
  2518 ;; Return value:  Size  Location     Type
  2519 ;;                  1    wreg      void 
  2520 ;; Registers used:
  2521 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2522 ;; Tracked objects:
  2523 ;;		On entry : 0/0
  2524 ;;		On exit  : 0/0
  2525 ;;		Unchanged: 0/0
  2526 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2527 ;;      Params:         0       0       0       0       0       0       0
  2528 ;;      Locals:         0       3       0       0       0       0       0
  2529 ;;      Temps:          0       0       0       0       0       0       0
  2530 ;;      Totals:         0       3       0       0       0       0       0
  2531 ;;Total ram usage:        3 bytes
  2532 ;; Hardware stack levels used:    1
  2533 ;; Hardware stack levels required when called:   15
  2534 ;; This function calls:
  2535 ;;		_lcd_gotoxy
  2536 ;;		_printf
  2537 ;; This function is called by:
  2538 ;;		_drawScreen
  2539 ;; This function uses a non-reentrant model
  2540 ;;
  2541                           
  2542                           	psect	text6
  2543  004376                     __ptext6:
  2544                           	opt stack 0
  2545  004376                     _drawSNquest:
  2546                           	opt stack 14
  2547                           
  2548                           ;incstack = 0
  2549                           ;drawSNquest@tq stored from wreg
  2550  004376  0100               	movlb	0	; () banked
  2551  004378  6FC9               	movwf	drawSNquest@tq& (0+255),b
  2552                           
  2553                           ;screenDrawers.h: 278: int i;
  2554                           ;screenDrawers.h: 279: for (i = 0; i < 2; i++)
  2555  00437A  0E00               	movlw	0
  2556  00437C  0100               	movlb	0	; () banked
  2557  00437E  6FCB               	movwf	(drawSNquest@i+1)& (0+255),b
  2558  004380  0E00               	movlw	0
  2559  004382  6FCA               	movwf	drawSNquest@i& (0+255),b
  2560  004384                     l9188:
  2561                           
  2562                           ; BSR set to: 0
  2563  004384  0100               	movlb	0	; () banked
  2564  004386  BFCB               	btfsc	(drawSNquest@i+1)& (0+255),7,b
  2565  004388  D008               	goto	l9192
  2566  00438A  0100               	movlb	0	; () banked
  2567  00438C  51CB               	movf	(drawSNquest@i+1)& (0+255),w,b
  2568  00438E  E113               	bnz	l9198
  2569  004390  0E02               	movlw	2
  2570  004392  0100               	movlb	0	; () banked
  2571  004394  5DCA               	subwf	drawSNquest@i& (0+255),w,b
  2572  004396  B0D8               	btfsc	status,0,c
  2573  004398  D00E               	goto	l9198
  2574  00439A                     l9192:
  2575                           
  2576                           ; BSR set to: 0
  2577                           ;screenDrawers.h: 280: questSN[i] = ' ';
  2578  00439A  0E42               	movlw	low _questSN
  2579  00439C  0100               	movlb	0	; () banked
  2580  00439E  25CA               	addwf	drawSNquest@i& (0+255),w,b
  2581  0043A0  6ED9               	movwf	fsr2l,c
  2582  0043A2  0E01               	movlw	high _questSN
  2583  0043A4  0100               	movlb	0	; () banked
  2584  0043A6  21CB               	addwfc	(drawSNquest@i+1)& (0+255),w,b
  2585  0043A8  6EDA               	movwf	fsr2h,c
  2586  0043AA  0E20               	movlw	32
  2587  0043AC  6EDF               	movwf	indf2,c
  2588                           
  2589                           ; BSR set to: 0
  2590  0043AE  0100               	movlb	0	; () banked
  2591  0043B0  4BCA               	infsnz	drawSNquest@i& (0+255),f,b
  2592  0043B2  2BCB               	incf	(drawSNquest@i+1)& (0+255),f,b
  2593  0043B4  D7E7               	goto	l9188
  2594  0043B6                     l9198:
  2595                           
  2596                           ; BSR set to: 0
  2597                           ;screenDrawers.h: 281: questSN[selSN] = 0b01111110;
  2598  0043B6  0100               	movlb	0	; () banked
  2599  0043B8  51D7               	movf	_selSN& (0+255),w,b
  2600  0043BA  0D01               	mullw	1
  2601  0043BC  0E42               	movlw	low _questSN
  2602  0043BE  24F3               	addwf	prodl,w,c
  2603  0043C0  6ED9               	movwf	fsr2l,c
  2604  0043C2  0E01               	movlw	high _questSN
  2605  0043C4  20F4               	addwfc	prodh,w,c
  2606  0043C6  6EDA               	movwf	fsr2h,c
  2607  0043C8  0E7E               	movlw	126
  2608  0043CA  6EDF               	movwf	indf2,c
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;screenDrawers.h: 282: lcd_gotoxy(1, 1);
  2612  0043CC  0E01               	movlw	1
  2613  0043CE  0100               	movlb	0	; () banked
  2614  0043D0  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2615  0043D2  0E01               	movlw	1
  2616  0043D4  EC14  F028         	call	_lcd_gotoxy
  2617                           
  2618                           ;screenDrawers.h: 283: if (tq == 0)
  2619  0043D8  0100               	movlb	0	; () banked
  2620  0043DA  51C9               	movf	drawSNquest@tq& (0+255),w,b
  2621  0043DC  0100               	movlb	0	; () banked
  2622  0043DE  A4D8               	btfss	status,2,c
  2623  0043E0  D009               	goto	l9206
  2624                           
  2625                           ; BSR set to: 0
  2626                           ;screenDrawers.h: 284: printf("Iniciar Proceso?\n");
  2627  0043E2  0EE9               	movlw	low STR_45
  2628  0043E4  0101               	movlb	1	; () banked
  2629  0043E6  6F00               	movwf	printf@f& (0+255),b
  2630  0043E8  0E7E               	movlw	high STR_45
  2631  0043EA  0101               	movlb	1	; () banked
  2632  0043EC  6F01               	movwf	(printf@f+1)& (0+255),b
  2633  0043EE  EC5B  F000         	call	_printf	;wreg free
  2634  0043F2  D01A               	goto	l416
  2635  0043F4                     l9206:
  2636                           
  2637                           ;screenDrawers.h: 285: else if(tq == 1)
  2638  0043F4  0100               	movlb	0	; () banked
  2639  0043F6  05C9               	decf	drawSNquest@tq& (0+255),w,b
  2640  0043F8  A4D8               	btfss	status,2,c
  2641  0043FA  D009               	goto	l9210
  2642                           
  2643                           ; BSR set to: 0
  2644                           ;screenDrawers.h: 286: printf("Detener Proceso?\n");
  2645  0043FC  0EFB               	movlw	low STR_46
  2646  0043FE  0101               	movlb	1	; () banked
  2647  004400  6F00               	movwf	printf@f& (0+255),b
  2648  004402  0E7E               	movlw	high STR_46
  2649  004404  0101               	movlb	1	; () banked
  2650  004406  6F01               	movwf	(printf@f+1)& (0+255),b
  2651  004408  EC5B  F000         	call	_printf	;wreg free
  2652  00440C  D00D               	goto	l416
  2653  00440E                     l9210:
  2654                           
  2655                           ;screenDrawers.h: 287: else if(tq == 2)
  2656  00440E  0E02               	movlw	2
  2657  004410  0100               	movlb	0	; () banked
  2658  004412  19C9               	xorwf	drawSNquest@tq& (0+255),w,b
  2659  004414  A4D8               	btfss	status,2,c
  2660  004416  D008               	goto	l416
  2661                           
  2662                           ; BSR set to: 0
  2663                           ;screenDrawers.h: 288: printf("Guardar Cambio? \n");
  2664  004418  0EA1               	movlw	low STR_47
  2665  00441A  0101               	movlb	1	; () banked
  2666  00441C  6F00               	movwf	printf@f& (0+255),b
  2667  00441E  0E7E               	movlw	high STR_47
  2668  004420  0101               	movlb	1	; () banked
  2669  004422  6F01               	movwf	(printf@f+1)& (0+255),b
  2670  004424  EC5B  F000         	call	_printf	;wreg free
  2671  004428                     l416:
  2672                           
  2673                           ;screenDrawers.h: 289: printf("   %cSI    %cNO   ", questSN[0], questSN[1]);
  2674  004428  0E10               	movlw	low STR_48
  2675  00442A  0101               	movlb	1	; () banked
  2676  00442C  6F00               	movwf	printf@f& (0+255),b
  2677  00442E  0E7E               	movlw	high STR_48
  2678  004430  0101               	movlb	1	; () banked
  2679  004432  6F01               	movwf	(printf@f+1)& (0+255),b
  2680  004434  C142  F102         	movff	_questSN,?_printf+2
  2681  004438  0101               	movlb	1	; () banked
  2682  00443A  6B03               	clrf	(?_printf+3)& (0+255),b
  2683  00443C  C143  F104         	movff	_questSN+1,?_printf+4
  2684  004440  0101               	movlb	1	; () banked
  2685  004442  6B05               	clrf	(?_printf+5)& (0+255),b
  2686  004444  EC5B  F000         	call	_printf	;wreg free
  2687  004448  0012               	return		;funcret
  2688  00444A                     __end_of_drawSNquest:
  2689                           	opt stack 0
  2690                           tblptru	equ	0xFF8
  2691                           tblptrh	equ	0xFF7
  2692                           tblptrl	equ	0xFF6
  2693                           tablat	equ	0xFF5
  2694                           prodh	equ	0xFF4
  2695                           prodl	equ	0xFF3
  2696                           intcon	equ	0xFF2
  2697                           postinc0	equ	0xFEE
  2698                           wreg	equ	0xFE8
  2699                           postdec1	equ	0xFE5
  2700                           fsr1l	equ	0xFE1
  2701                           indf2	equ	0xFDF
  2702                           fsr2h	equ	0xFDA
  2703                           fsr2l	equ	0xFD9
  2704                           status	equ	0xFD8
  2705                           
  2706 ;; *************** function _drawPassWord *****************
  2707 ;; Defined at:
  2708 ;;		line 240 in file "source/screenDrawers.h"
  2709 ;; Parameters:    Size  Location     Type
  2710 ;;		None
  2711 ;; Auto vars:     Size  Location     Type
  2712 ;;  i               2  105[BANK0 ] int 
  2713 ;; Return value:  Size  Location     Type
  2714 ;;                  1    wreg      void 
  2715 ;; Registers used:
  2716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2717 ;; Tracked objects:
  2718 ;;		On entry : 0/0
  2719 ;;		On exit  : 0/0
  2720 ;;		Unchanged: 0/0
  2721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2722 ;;      Params:         0       0       0       0       0       0       0
  2723 ;;      Locals:         0       2       0       0       0       0       0
  2724 ;;      Temps:          0       0       0       0       0       0       0
  2725 ;;      Totals:         0       2       0       0       0       0       0
  2726 ;;Total ram usage:        2 bytes
  2727 ;; Hardware stack levels used:    1
  2728 ;; Hardware stack levels required when called:   15
  2729 ;; This function calls:
  2730 ;;		_lcd_gotoxy
  2731 ;;		_printf
  2732 ;; This function is called by:
  2733 ;;		_drawScreen
  2734 ;; This function uses a non-reentrant model
  2735 ;;
  2736                           
  2737                           	psect	text7
  2738  004176                     __ptext7:
  2739                           	opt stack 0
  2740  004176                     _drawPassWord:
  2741                           	opt stack 14
  2742                           
  2743                           ;screenDrawers.h: 241: if (!fd) {
  2744                           
  2745                           ;incstack = 0
  2746  004176  0101               	movlb	1	; () banked
  2747  004178  514A               	movf	_fd& (0+255),w,b
  2748  00417A  0101               	movlb	1	; () banked
  2749  00417C  A4D8               	btfss	status,2,c
  2750  00417E  D012               	goto	l398
  2751                           
  2752                           ; BSR set to: 1
  2753                           ;screenDrawers.h: 242: passSection = 0;
  2754  004180  0E00               	movlw	0
  2755  004182  0100               	movlb	0	; () banked
  2756  004184  6FD5               	movwf	_passSection& (0+255),b
  2757                           
  2758                           ;screenDrawers.h: 243: introducido[0] = 0;
  2759  004186  0E00               	movlw	0
  2760  004188  0101               	movlb	1	; () banked
  2761  00418A  6F35               	movwf	_introducido& (0+255),b
  2762                           
  2763                           ;screenDrawers.h: 244: introducido[1] = 0;
  2764  00418C  0E00               	movlw	0
  2765  00418E  0101               	movlb	1	; () banked
  2766  004190  6F36               	movwf	(_introducido+1)& (0+255),b
  2767                           
  2768                           ;screenDrawers.h: 245: introducido[2] = 0;
  2769  004192  0E00               	movlw	0
  2770  004194  0101               	movlb	1	; () banked
  2771  004196  6F37               	movwf	(_introducido+2)& (0+255),b
  2772                           
  2773                           ;screenDrawers.h: 246: introducido[3] = 0;
  2774  004198  0E00               	movlw	0
  2775  00419A  0101               	movlb	1	; () banked
  2776  00419C  6F38               	movwf	(_introducido+3)& (0+255),b
  2777                           
  2778                           ;screenDrawers.h: 247: fd = 1;
  2779  00419E  0E01               	movlw	1
  2780  0041A0  0101               	movlb	1	; () banked
  2781  0041A2  6F4A               	movwf	_fd& (0+255),b
  2782  0041A4                     l398:
  2783                           
  2784                           ; BSR set to: 1
  2785                           ;screenDrawers.h: 248: }
  2786                           ;screenDrawers.h: 249: int i;
  2787                           ;screenDrawers.h: 250: for (i = 0; i < 4; i++)
  2788  0041A4  0E00               	movlw	0
  2789  0041A6  0100               	movlb	0	; () banked
  2790  0041A8  6FCA               	movwf	(drawPassWord@i+1)& (0+255),b
  2791  0041AA  0E00               	movlw	0
  2792  0041AC  6FC9               	movwf	drawPassWord@i& (0+255),b
  2793  0041AE                     l9150:
  2794                           
  2795                           ; BSR set to: 0
  2796  0041AE  0100               	movlb	0	; () banked
  2797  0041B0  BFCA               	btfsc	(drawPassWord@i+1)& (0+255),7,b
  2798  0041B2  D008               	goto	l9154
  2799  0041B4  0100               	movlb	0	; () banked
  2800  0041B6  51CA               	movf	(drawPassWord@i+1)& (0+255),w,b
  2801  0041B8  E113               	bnz	l9160
  2802  0041BA  0E04               	movlw	4
  2803  0041BC  0100               	movlb	0	; () banked
  2804  0041BE  5DC9               	subwf	drawPassWord@i& (0+255),w,b
  2805  0041C0  B0D8               	btfsc	status,0,c
  2806  0041C2  D00E               	goto	l9160
  2807  0041C4                     l9154:
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;screenDrawers.h: 251: passChar[i] = ' ';
  2811  0041C4  0E39               	movlw	low _passChar
  2812  0041C6  0100               	movlb	0	; () banked
  2813  0041C8  25C9               	addwf	drawPassWord@i& (0+255),w,b
  2814  0041CA  6ED9               	movwf	fsr2l,c
  2815  0041CC  0E01               	movlw	high _passChar
  2816  0041CE  0100               	movlb	0	; () banked
  2817  0041D0  21CA               	addwfc	(drawPassWord@i+1)& (0+255),w,b
  2818  0041D2  6EDA               	movwf	fsr2h,c
  2819  0041D4  0E20               	movlw	32
  2820  0041D6  6EDF               	movwf	indf2,c
  2821                           
  2822                           ; BSR set to: 0
  2823  0041D8  0100               	movlb	0	; () banked
  2824  0041DA  4BC9               	infsnz	drawPassWord@i& (0+255),f,b
  2825  0041DC  2BCA               	incf	(drawPassWord@i+1)& (0+255),f,b
  2826  0041DE  D7E7               	goto	l9150
  2827  0041E0                     l9160:
  2828                           
  2829                           ; BSR set to: 0
  2830                           ;screenDrawers.h: 252: passChar[passSection] = 0b01111110;
  2831  0041E0  0100               	movlb	0	; () banked
  2832  0041E2  51D5               	movf	_passSection& (0+255),w,b
  2833  0041E4  0D01               	mullw	1
  2834  0041E6  0E39               	movlw	low _passChar
  2835  0041E8  24F3               	addwf	prodl,w,c
  2836  0041EA  6ED9               	movwf	fsr2l,c
  2837  0041EC  0E01               	movlw	high _passChar
  2838  0041EE  20F4               	addwfc	prodh,w,c
  2839  0041F0  6EDA               	movwf	fsr2h,c
  2840  0041F2  0E7E               	movlw	126
  2841  0041F4  6EDF               	movwf	indf2,c
  2842                           
  2843                           ; BSR set to: 0
  2844                           ;screenDrawers.h: 253: lcd_gotoxy(1, 1);
  2845  0041F6  0E01               	movlw	1
  2846  0041F8  0100               	movlb	0	; () banked
  2847  0041FA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2848  0041FC  0E01               	movlw	1
  2849  0041FE  EC14  F028         	call	_lcd_gotoxy
  2850                           
  2851                           ;screenDrawers.h: 254: printf("Contrasena:     \n");
  2852  004202  0E35               	movlw	low STR_37
  2853  004204  0101               	movlb	1	; () banked
  2854  004206  6F00               	movwf	printf@f& (0+255),b
  2855  004208  0E7E               	movlw	high STR_37
  2856  00420A  0101               	movlb	1	; () banked
  2857  00420C  6F01               	movwf	(printf@f+1)& (0+255),b
  2858  00420E  EC5B  F000         	call	_printf	;wreg free
  2859                           
  2860                           ;screenDrawers.h: 255: printf("    %c%u%c%u%c%u%c%u    ", passChar[0], introducido[0], p
      +                          assChar[1], introducido[1],
  2861                           ;screenDrawers.h: 256: passChar[2], introducido[2], passChar[3], introducido[3]);
  2862  004212  0EE3               	movlw	low STR_38
  2863  004214  0101               	movlb	1	; () banked
  2864  004216  6F00               	movwf	printf@f& (0+255),b
  2865  004218  0E7D               	movlw	high STR_38
  2866  00421A  0101               	movlb	1	; () banked
  2867  00421C  6F01               	movwf	(printf@f+1)& (0+255),b
  2868  00421E  C139  F102         	movff	_passChar,?_printf+2
  2869  004222  0101               	movlb	1	; () banked
  2870  004224  6B03               	clrf	(?_printf+3)& (0+255),b
  2871  004226  0101               	movlb	1	; () banked
  2872  004228  5135               	movf	_introducido& (0+255),w,b
  2873  00422A  0101               	movlb	1	; () banked
  2874  00422C  6F04               	movwf	(?_printf+4)& (0+255),b
  2875  00422E  6B05               	clrf	(?_printf+5)& (0+255),b
  2876  004230  BF04               	btfsc	(?_printf+4)& (0+255),7,b
  2877  004232  0705               	decf	(?_printf+5)& (0+255),f,b
  2878  004234  C13A  F106         	movff	_passChar+1,?_printf+6
  2879  004238  0101               	movlb	1	; () banked
  2880  00423A  6B07               	clrf	(?_printf+7)& (0+255),b
  2881  00423C  0101               	movlb	1	; () banked
  2882  00423E  5136               	movf	(_introducido+1)& (0+255),w,b
  2883  004240  0101               	movlb	1	; () banked
  2884  004242  6F08               	movwf	(?_printf+8)& (0+255),b
  2885  004244  6B09               	clrf	(?_printf+9)& (0+255),b
  2886  004246  BF08               	btfsc	(?_printf+8)& (0+255),7,b
  2887  004248  0709               	decf	(?_printf+9)& (0+255),f,b
  2888  00424A  C13B  F10A         	movff	_passChar+2,?_printf+10
  2889  00424E  0101               	movlb	1	; () banked
  2890  004250  6B0B               	clrf	(?_printf+11)& (0+255),b
  2891  004252  0101               	movlb	1	; () banked
  2892  004254  5137               	movf	(_introducido+2)& (0+255),w,b
  2893  004256  0101               	movlb	1	; () banked
  2894  004258  6F0C               	movwf	(?_printf+12)& (0+255),b
  2895  00425A  6B0D               	clrf	(?_printf+13)& (0+255),b
  2896  00425C  BF0C               	btfsc	(?_printf+12)& (0+255),7,b
  2897  00425E  070D               	decf	(?_printf+13)& (0+255),f,b
  2898  004260  C13C  F10E         	movff	_passChar+3,?_printf+14
  2899  004264  0101               	movlb	1	; () banked
  2900  004266  6B0F               	clrf	(?_printf+15)& (0+255),b
  2901  004268  0101               	movlb	1	; () banked
  2902  00426A  5138               	movf	(_introducido+3)& (0+255),w,b
  2903  00426C  0101               	movlb	1	; () banked
  2904  00426E  6F10               	movwf	(?_printf+16)& (0+255),b
  2905  004270  6B11               	clrf	(?_printf+17)& (0+255),b
  2906  004272  BF10               	btfsc	(?_printf+16)& (0+255),7,b
  2907  004274  0711               	decf	(?_printf+17)& (0+255),f,b
  2908  004276  EC5B  F000         	call	_printf	;wreg free
  2909  00427A  0012               	return		;funcret
  2910  00427C                     __end_of_drawPassWord:
  2911                           	opt stack 0
  2912                           tblptru	equ	0xFF8
  2913                           tblptrh	equ	0xFF7
  2914                           tblptrl	equ	0xFF6
  2915                           tablat	equ	0xFF5
  2916                           prodh	equ	0xFF4
  2917                           prodl	equ	0xFF3
  2918                           intcon	equ	0xFF2
  2919                           postinc0	equ	0xFEE
  2920                           wreg	equ	0xFE8
  2921                           postdec1	equ	0xFE5
  2922                           fsr1l	equ	0xFE1
  2923                           indf2	equ	0xFDF
  2924                           fsr2h	equ	0xFDA
  2925                           fsr2l	equ	0xFD9
  2926                           status	equ	0xFD8
  2927                           
  2928 ;; *************** function _drawMenu *****************
  2929 ;; Defined at:
  2930 ;;		line 39 in file "source/screenDrawers.h"
  2931 ;; Parameters:    Size  Location     Type
  2932 ;;  adv             1    wreg     unsigned char 
  2933 ;; Auto vars:     Size  Location     Type
  2934 ;;  adv             1  105[BANK0 ] unsigned char 
  2935 ;; Return value:  Size  Location     Type
  2936 ;;                  1    wreg      void 
  2937 ;; Registers used:
  2938 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2939 ;; Tracked objects:
  2940 ;;		On entry : 0/0
  2941 ;;		On exit  : 0/0
  2942 ;;		Unchanged: 0/0
  2943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2944 ;;      Params:         0       0       0       0       0       0       0
  2945 ;;      Locals:         0       1       0       0       0       0       0
  2946 ;;      Temps:          0       0       0       0       0       0       0
  2947 ;;      Totals:         0       1       0       0       0       0       0
  2948 ;;Total ram usage:        1 bytes
  2949 ;; Hardware stack levels used:    1
  2950 ;; Hardware stack levels required when called:   15
  2951 ;; This function calls:
  2952 ;;		_lcd_gotoxy
  2953 ;;		_lcd_putc
  2954 ;;		_printf
  2955 ;; This function is called by:
  2956 ;;		_drawScreen
  2957 ;; This function uses a non-reentrant model
  2958 ;;
  2959                           
  2960                           	psect	text8
  2961  001F04                     __ptext8:
  2962                           	opt stack 0
  2963  001F04                     _drawMenu:
  2964                           	opt stack 14
  2965                           
  2966                           ;incstack = 0
  2967                           ;drawMenu@adv stored from wreg
  2968  001F04  0100               	movlb	0	; () banked
  2969  001F06  6FC9               	movwf	drawMenu@adv& (0+255),b
  2970                           
  2971                           ;screenDrawers.h: 40: switch (menuSection) {
  2972  001F08  D1A6               	goto	l9070
  2973  001F0A                     l8964:
  2974                           
  2975                           ;screenDrawers.h: 42: {
  2976                           ;screenDrawers.h: 43: lcd_gotoxy(1, 1);
  2977  001F0A  0E01               	movlw	1
  2978  001F0C  0100               	movlb	0	; () banked
  2979  001F0E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  2980  001F10  0E01               	movlw	1
  2981  001F12  EC14  F028         	call	_lcd_gotoxy
  2982                           
  2983                           ;screenDrawers.h: 44: printf("Estado proceso: \n");
  2984  001F16  0E8F               	movlw	low STR_1
  2985  001F18  0101               	movlb	1	; () banked
  2986  001F1A  6F00               	movwf	printf@f& (0+255),b
  2987  001F1C  0E7E               	movlw	high STR_1
  2988  001F1E  0101               	movlb	1	; () banked
  2989  001F20  6F01               	movwf	(printf@f+1)& (0+255),b
  2990  001F22  EC5B  F000         	call	_printf	;wreg free
  2991                           
  2992                           ;screenDrawers.h: 45: if (adv)
  2993  001F26  0100               	movlb	0	; () banked
  2994  001F28  51C9               	movf	drawMenu@adv& (0+255),w,b
  2995  001F2A  0100               	movlb	0	; () banked
  2996  001F2C  B4D8               	btfsc	status,2,c
  2997  001F2E  D004               	goto	l8972
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;screenDrawers.h: 46: lcd_putc('A');
  3001  001F30  0E41               	movlw	65
  3002  001F32  EC3A  F025         	call	_lcd_putc
  3003  001F36  D003               	goto	l342
  3004  001F38                     l8972:
  3005                           
  3006                           ;screenDrawers.h: 47: else
  3007                           ;screenDrawers.h: 48: lcd_putc(' ');
  3008  001F38  0E20               	movlw	32
  3009  001F3A  EC3A  F025         	call	_lcd_putc
  3010  001F3E                     l342:
  3011                           
  3012                           ;screenDrawers.h: 49: lcd_gotoxy(2, 2);
  3013  001F3E  0E02               	movlw	2
  3014  001F40  0100               	movlb	0	; () banked
  3015  001F42  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3016  001F44  0E02               	movlw	2
  3017  001F46  EC14  F028         	call	_lcd_gotoxy
  3018                           
  3019                           ;screenDrawers.h: 50: if (ProcessStarted)
  3020  001F4A  0100               	movlb	0	; () banked
  3021  001F4C  51D0               	movf	_ProcessStarted& (0+255),w,b
  3022  001F4E  B4D8               	btfsc	status,2,c
  3023  001F50  D011               	goto	l8978
  3024                           
  3025                           ; BSR set to: 0
  3026                           ;screenDrawers.h: 51: printf("   %d / %d    ", proceso, numCortes);
  3027  001F52  0E95               	movlw	low STR_2
  3028  001F54  0101               	movlb	1	; () banked
  3029  001F56  6F00               	movwf	printf@f& (0+255),b
  3030  001F58  0E7F               	movlw	high STR_2
  3031  001F5A  0101               	movlb	1	; () banked
  3032  001F5C  6F01               	movwf	(printf@f+1)& (0+255),b
  3033  001F5E  C140  F102         	movff	_proceso,?_printf+2
  3034  001F62  C141  F103         	movff	_proceso+1,?_printf+3
  3035  001F66  C0E1  F104         	movff	_numCortes,?_printf+4
  3036  001F6A  C0E2  F105         	movff	_numCortes+1,?_printf+5
  3037  001F6E  EC5B  F000         	call	_printf	;wreg free
  3038  001F72  0012               	return	
  3039  001F74                     l8978:
  3040                           
  3041                           ;screenDrawers.h: 52: else
  3042                           ;screenDrawers.h: 53: printf("    Detenido    ");
  3043  001F74  0E63               	movlw	low STR_3
  3044  001F76  0101               	movlb	1	; () banked
  3045  001F78  6F00               	movwf	printf@f& (0+255),b
  3046  001F7A  0E7F               	movlw	high STR_3
  3047  001F7C  0101               	movlb	1	; () banked
  3048  001F7E  6F01               	movwf	(printf@f+1)& (0+255),b
  3049  001F80  EC5B  F000         	call	_printf	;wreg free
  3050                           
  3051                           ;screenDrawers.h: 54: break;
  3052  001F84  0012               	return	
  3053  001F86                     l8980:
  3054                           
  3055                           ;screenDrawers.h: 57: {
  3056                           ;screenDrawers.h: 58: lcd_gotoxy(1, 1);
  3057  001F86  0E01               	movlw	1
  3058  001F88  0100               	movlb	0	; () banked
  3059  001F8A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3060  001F8C  0E01               	movlw	1
  3061  001F8E  EC14  F028         	call	_lcd_gotoxy
  3062                           
  3063                           ;screenDrawers.h: 59: printf("Proceso en:     \n");
  3064  001F92  0E47               	movlw	low STR_4
  3065  001F94  0101               	movlb	1	; () banked
  3066  001F96  6F00               	movwf	printf@f& (0+255),b
  3067  001F98  0E7E               	movlw	high STR_4
  3068  001F9A  0101               	movlb	1	; () banked
  3069  001F9C  6F01               	movwf	(printf@f+1)& (0+255),b
  3070  001F9E  EC5B  F000         	call	_printf	;wreg free
  3071                           
  3072                           ;screenDrawers.h: 60: if (adv)
  3073  001FA2  0100               	movlb	0	; () banked
  3074  001FA4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3075  001FA6  0100               	movlb	0	; () banked
  3076  001FA8  B4D8               	btfsc	status,2,c
  3077  001FAA  D004               	goto	l8988
  3078                           
  3079                           ; BSR set to: 0
  3080                           ;screenDrawers.h: 61: lcd_putc('A');
  3081  001FAC  0E41               	movlw	65
  3082  001FAE  EC3A  F025         	call	_lcd_putc
  3083  001FB2  D003               	goto	l348
  3084  001FB4                     l8988:
  3085                           
  3086                           ;screenDrawers.h: 62: else
  3087                           ;screenDrawers.h: 63: lcd_putc(' ');
  3088  001FB4  0E20               	movlw	32
  3089  001FB6  EC3A  F025         	call	_lcd_putc
  3090  001FBA                     l348:
  3091                           
  3092                           ;screenDrawers.h: 64: lcd_gotoxy(2, 2);
  3093  001FBA  0E02               	movlw	2
  3094  001FBC  0100               	movlb	0	; () banked
  3095  001FBE  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3096  001FC0  0E02               	movlw	2
  3097  001FC2  EC14  F028         	call	_lcd_gotoxy
  3098                           
  3099                           ;screenDrawers.h: 65: switch (tVarProceso) {
  3100  001FC6  D01B               	goto	l8998
  3101  001FC8                     l8990:
  3102                           
  3103                           ;screenDrawers.h: 67: {
  3104                           ;screenDrawers.h: 68: printf("       kg        ");
  3105  001FC8  0E0D               	movlw	low STR_5
  3106  001FCA  0101               	movlb	1	; () banked
  3107  001FCC  6F00               	movwf	printf@f& (0+255),b
  3108  001FCE  0E7F               	movlw	high STR_5
  3109  001FD0  0101               	movlb	1	; () banked
  3110  001FD2  6F01               	movwf	(printf@f+1)& (0+255),b
  3111  001FD4  EC5B  F000         	call	_printf	;wreg free
  3112                           
  3113                           ;screenDrawers.h: 69: break;
  3114  001FD8  0012               	return	
  3115  001FDA                     l8992:
  3116                           
  3117                           ;screenDrawers.h: 72: {
  3118                           ;screenDrawers.h: 73: printf("       m3       ");
  3119  001FDA  0E1F               	movlw	low STR_6
  3120  001FDC  0101               	movlb	1	; () banked
  3121  001FDE  6F00               	movwf	printf@f& (0+255),b
  3122  001FE0  0E7F               	movlw	high STR_6
  3123  001FE2  0101               	movlb	1	; () banked
  3124  001FE4  6F01               	movwf	(printf@f+1)& (0+255),b
  3125  001FE6  EC5B  F000         	call	_printf	;wreg free
  3126                           
  3127                           ;screenDrawers.h: 74: break;
  3128  001FEA  0012               	return	
  3129  001FEC                     l8994:
  3130                           
  3131                           ;screenDrawers.h: 77: {
  3132                           ;screenDrawers.h: 78: printf("      sec       ");
  3133  001FEC  0E30               	movlw	low STR_7
  3134  001FEE  0101               	movlb	1	; () banked
  3135  001FF0  6F00               	movwf	printf@f& (0+255),b
  3136  001FF2  0E7F               	movlw	high STR_7
  3137  001FF4  0101               	movlb	1	; () banked
  3138  001FF6  6F01               	movwf	(printf@f+1)& (0+255),b
  3139  001FF8  EC5B  F000         	call	_printf	;wreg free
  3140                           
  3141                           ;screenDrawers.h: 80: }
  3142                           ;screenDrawers.h: 81: }
  3143                           
  3144                           ;screenDrawers.h: 79: break;
  3145  001FFC  0012               	return	
  3146  001FFE                     l8998:
  3147  001FFE  0100               	movlb	0	; () banked
  3148  002000  51E3               	movf	_tVarProceso& (0+255),w,b
  3149                           
  3150                           ; Switch size 1, requested type "space"
  3151                           ; Number of cases is 3, Range of values is 0 to 2
  3152                           ; switch strategies available:
  3153                           ; Name         Instructions Cycles
  3154                           ; simple_byte           10     6 (average)
  3155                           ;	Chosen strategy is simple_byte
  3156  002002  0A00               	xorlw	0	; case 0
  3157  002004  B4D8               	btfsc	status,2,c
  3158  002006  D7E0               	goto	l8990
  3159  002008  0A01               	xorlw	1	; case 1
  3160  00200A  B4D8               	btfsc	status,2,c
  3161  00200C  D7E6               	goto	l8992
  3162  00200E  0A03               	xorlw	3	; case 2
  3163  002010  A4D8               	btfss	status,2,c
  3164                           
  3165                           ; BSR set to: 0
  3166                           ;screenDrawers.h: 82: break;
  3167  002012  0012               	return	
  3168  002014  D7EB               	goto	l8994
  3169  002016                     l9000:
  3170                           
  3171                           ; BSR set to: 0
  3172                           ;screenDrawers.h: 85: {
  3173                           ;screenDrawers.h: 86: lcd_gotoxy(1, 1);
  3174  002016  0E01               	movlw	1
  3175  002018  0100               	movlb	0	; () banked
  3176  00201A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3177  00201C  0E01               	movlw	1
  3178  00201E  EC14  F028         	call	_lcd_gotoxy
  3179                           
  3180                           ;screenDrawers.h: 87: printf("Valor por Corte:\n");
  3181  002022  0EB3               	movlw	low STR_8
  3182  002024  0101               	movlb	1	; () banked
  3183  002026  6F00               	movwf	printf@f& (0+255),b
  3184  002028  0E7E               	movlw	high STR_8
  3185  00202A  0101               	movlb	1	; () banked
  3186  00202C  6F01               	movwf	(printf@f+1)& (0+255),b
  3187  00202E  EC5B  F000         	call	_printf	;wreg free
  3188                           
  3189                           ;screenDrawers.h: 88: if (adv)
  3190  002032  0100               	movlb	0	; () banked
  3191  002034  51C9               	movf	drawMenu@adv& (0+255),w,b
  3192  002036  0100               	movlb	0	; () banked
  3193  002038  B4D8               	btfsc	status,2,c
  3194  00203A  D004               	goto	l9008
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;screenDrawers.h: 89: lcd_putc('A');
  3198  00203C  0E41               	movlw	65
  3199  00203E  EC3A  F025         	call	_lcd_putc
  3200  002042  D003               	goto	l356
  3201  002044                     l9008:
  3202                           
  3203                           ;screenDrawers.h: 90: else
  3204                           ;screenDrawers.h: 91: lcd_putc(' ');
  3205  002044  0E20               	movlw	32
  3206  002046  EC3A  F025         	call	_lcd_putc
  3207  00204A                     l356:
  3208                           
  3209                           ;screenDrawers.h: 92: lcd_gotoxy(2, 2);
  3210  00204A  0E02               	movlw	2
  3211  00204C  0100               	movlb	0	; () banked
  3212  00204E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3213  002050  0E02               	movlw	2
  3214  002052  EC14  F028         	call	_lcd_gotoxy
  3215                           
  3216                           ;screenDrawers.h: 93: switch (tVarProceso) {
  3217  002056  D033               	goto	l9018
  3218  002058                     l9010:
  3219                           
  3220                           ;screenDrawers.h: 95: {
  3221                           ;screenDrawers.h: 96: printf("   %3.3f kg   ", kgXcorte);
  3222  002058  0EB3               	movlw	low STR_9
  3223  00205A  0101               	movlb	1	; () banked
  3224  00205C  6F00               	movwf	printf@f& (0+255),b
  3225  00205E  0E7F               	movlw	high STR_9
  3226  002060  0101               	movlb	1	; () banked
  3227  002062  6F01               	movwf	(printf@f+1)& (0+255),b
  3228  002064  C02F  F102         	movff	_kgXcorte,?_printf+2
  3229  002068  C030  F103         	movff	_kgXcorte+1,?_printf+3
  3230  00206C  C031  F104         	movff	_kgXcorte+2,?_printf+4
  3231  002070  C032  F105         	movff	_kgXcorte+3,?_printf+5
  3232  002074  EC5B  F000         	call	_printf	;wreg free
  3233                           
  3234                           ;screenDrawers.h: 97: break;
  3235  002078  0012               	return	
  3236  00207A                     l9012:
  3237                           
  3238                           ;screenDrawers.h: 100: {
  3239                           ;screenDrawers.h: 101: printf("   %3.3f m3   ", m3Xcorte);
  3240  00207A  0EA4               	movlw	low STR_10
  3241  00207C  0101               	movlb	1	; () banked
  3242  00207E  6F00               	movwf	printf@f& (0+255),b
  3243  002080  0E7F               	movlw	high STR_10
  3244  002082  0101               	movlb	1	; () banked
  3245  002084  6F01               	movwf	(printf@f+1)& (0+255),b
  3246  002086  C033  F102         	movff	_m3Xcorte,?_printf+2
  3247  00208A  C034  F103         	movff	_m3Xcorte+1,?_printf+3
  3248  00208E  C035  F104         	movff	_m3Xcorte+2,?_printf+4
  3249  002092  C036  F105         	movff	_m3Xcorte+3,?_printf+5
  3250  002096  EC5B  F000         	call	_printf	;wreg free
  3251                           
  3252                           ;screenDrawers.h: 102: break;
  3253  00209A  0012               	return	
  3254  00209C                     l9014:
  3255                           
  3256                           ;screenDrawers.h: 105: {
  3257                           ;screenDrawers.h: 106: printf("   %3.3f sec  ", tiXcorte);
  3258  00209C  0ED1               	movlw	low STR_11
  3259  00209E  0101               	movlb	1	; () banked
  3260  0020A0  6F00               	movwf	printf@f& (0+255),b
  3261  0020A2  0E7F               	movlw	high STR_11
  3262  0020A4  0101               	movlb	1	; () banked
  3263  0020A6  6F01               	movwf	(printf@f+1)& (0+255),b
  3264  0020A8  C037  F102         	movff	_tiXcorte,?_printf+2
  3265  0020AC  C038  F103         	movff	_tiXcorte+1,?_printf+3
  3266  0020B0  C039  F104         	movff	_tiXcorte+2,?_printf+4
  3267  0020B4  C03A  F105         	movff	_tiXcorte+3,?_printf+5
  3268  0020B8  EC5B  F000         	call	_printf	;wreg free
  3269                           
  3270                           ;screenDrawers.h: 108: }
  3271                           ;screenDrawers.h: 109: }
  3272                           
  3273                           ;screenDrawers.h: 107: break;
  3274  0020BC  0012               	return	
  3275  0020BE                     l9018:
  3276  0020BE  0100               	movlb	0	; () banked
  3277  0020C0  51E3               	movf	_tVarProceso& (0+255),w,b
  3278                           
  3279                           ; Switch size 1, requested type "space"
  3280                           ; Number of cases is 3, Range of values is 0 to 2
  3281                           ; switch strategies available:
  3282                           ; Name         Instructions Cycles
  3283                           ; simple_byte           10     6 (average)
  3284                           ;	Chosen strategy is simple_byte
  3285  0020C2  0A00               	xorlw	0	; case 0
  3286  0020C4  B4D8               	btfsc	status,2,c
  3287  0020C6  D7C8               	goto	l9010
  3288  0020C8  0A01               	xorlw	1	; case 1
  3289  0020CA  B4D8               	btfsc	status,2,c
  3290  0020CC  D7D6               	goto	l9012
  3291  0020CE  0A03               	xorlw	3	; case 2
  3292  0020D0  A4D8               	btfss	status,2,c
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;screenDrawers.h: 110: break;
  3296  0020D2  0012               	return	
  3297  0020D4  D7E3               	goto	l9014
  3298  0020D6                     l9020:
  3299                           
  3300                           ; BSR set to: 0
  3301                           ;screenDrawers.h: 113: {
  3302                           ;screenDrawers.h: 114: lcd_gotoxy(1, 1);
  3303  0020D6  0E01               	movlw	1
  3304  0020D8  0100               	movlb	0	; () banked
  3305  0020DA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3306  0020DC  0E01               	movlw	1
  3307  0020DE  EC14  F028         	call	_lcd_gotoxy
  3308                           
  3309                           ;screenDrawers.h: 115: printf("Cantidad Cortes:\n");
  3310  0020E2  0ED7               	movlw	low STR_12
  3311  0020E4  0101               	movlb	1	; () banked
  3312  0020E6  6F00               	movwf	printf@f& (0+255),b
  3313  0020E8  0E7E               	movlw	high STR_12
  3314  0020EA  0101               	movlb	1	; () banked
  3315  0020EC  6F01               	movwf	(printf@f+1)& (0+255),b
  3316  0020EE  EC5B  F000         	call	_printf	;wreg free
  3317                           
  3318                           ;screenDrawers.h: 116: if (adv)
  3319  0020F2  0100               	movlb	0	; () banked
  3320  0020F4  51C9               	movf	drawMenu@adv& (0+255),w,b
  3321  0020F6  0100               	movlb	0	; () banked
  3322  0020F8  B4D8               	btfsc	status,2,c
  3323  0020FA  D004               	goto	l9028
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;screenDrawers.h: 117: lcd_putc('A');
  3327  0020FC  0E41               	movlw	65
  3328  0020FE  EC3A  F025         	call	_lcd_putc
  3329  002102  D003               	goto	l364
  3330  002104                     l9028:
  3331                           
  3332                           ;screenDrawers.h: 118: else
  3333                           ;screenDrawers.h: 119: lcd_putc(' ');
  3334  002104  0E20               	movlw	32
  3335  002106  EC3A  F025         	call	_lcd_putc
  3336  00210A                     l364:
  3337                           
  3338                           ;screenDrawers.h: 120: lcd_gotoxy(2, 2);
  3339  00210A  0E02               	movlw	2
  3340  00210C  0100               	movlb	0	; () banked
  3341  00210E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3342  002110  0E02               	movlw	2
  3343  002112  EC14  F028         	call	_lcd_gotoxy
  3344                           
  3345                           ;screenDrawers.h: 121: printf("      %d       ", numCortes);
  3346  002116  0E85               	movlw	low STR_13
  3347  002118  0101               	movlb	1	; () banked
  3348  00211A  6F00               	movwf	printf@f& (0+255),b
  3349  00211C  0E7F               	movlw	high STR_13
  3350  00211E  0101               	movlb	1	; () banked
  3351  002120  6F01               	movwf	(printf@f+1)& (0+255),b
  3352  002122  C0E1  F102         	movff	_numCortes,?_printf+2
  3353  002126  C0E2  F103         	movff	_numCortes+1,?_printf+3
  3354  00212A  EC5B  F000         	call	_printf	;wreg free
  3355                           
  3356                           ;screenDrawers.h: 122: break;
  3357  00212E  0012               	return	
  3358  002130                     l9032:
  3359                           
  3360                           ;screenDrawers.h: 125: {
  3361                           ;screenDrawers.h: 126: lcd_gotoxy(1, 1);
  3362  002130  0E01               	movlw	1
  3363  002132  0100               	movlb	0	; () banked
  3364  002134  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3365  002136  0E01               	movlw	1
  3366  002138  EC14  F028         	call	_lcd_gotoxy
  3367                           
  3368                           ;screenDrawers.h: 127: printf("Diametro Tubo:  \n");
  3369  00213C  0E6B               	movlw	low STR_14
  3370  00213E  0101               	movlb	1	; () banked
  3371  002140  6F00               	movwf	printf@f& (0+255),b
  3372  002142  0E7E               	movlw	high STR_14
  3373  002144  0101               	movlb	1	; () banked
  3374  002146  6F01               	movwf	(printf@f+1)& (0+255),b
  3375  002148  EC5B  F000         	call	_printf	;wreg free
  3376                           
  3377                           ;screenDrawers.h: 128: if (adv)
  3378  00214C  0100               	movlb	0	; () banked
  3379  00214E  51C9               	movf	drawMenu@adv& (0+255),w,b
  3380  002150  0100               	movlb	0	; () banked
  3381  002152  B4D8               	btfsc	status,2,c
  3382  002154  D004               	goto	l9040
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;screenDrawers.h: 129: lcd_putc('A');
  3386  002156  0E41               	movlw	65
  3387  002158  EC3A  F025         	call	_lcd_putc
  3388  00215C  D003               	goto	l367
  3389  00215E                     l9040:
  3390                           
  3391                           ;screenDrawers.h: 130: else
  3392                           ;screenDrawers.h: 131: lcd_putc(' ');
  3393  00215E  0E20               	movlw	32
  3394  002160  EC3A  F025         	call	_lcd_putc
  3395  002164                     l367:
  3396                           
  3397                           ;screenDrawers.h: 132: lcd_gotoxy(2, 2);
  3398  002164  0E02               	movlw	2
  3399  002166  0100               	movlb	0	; () banked
  3400  002168  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3401  00216A  0E02               	movlw	2
  3402  00216C  EC14  F028         	call	_lcd_gotoxy
  3403                           
  3404                           ;screenDrawers.h: 133: printf("   %3.3f mm   ", diamTubo);
  3405  002170  0EC2               	movlw	low STR_15
  3406  002172  0101               	movlb	1	; () banked
  3407  002174  6F00               	movwf	printf@f& (0+255),b
  3408  002176  0E7F               	movlw	high STR_15
  3409  002178  0101               	movlb	1	; () banked
  3410  00217A  6F01               	movwf	(printf@f+1)& (0+255),b
  3411  00217C  C0DD  F102         	movff	_diamTubo,?_printf+2
  3412  002180  C0DE  F103         	movff	_diamTubo+1,?_printf+3
  3413  002184  C0DF  F104         	movff	_diamTubo+2,?_printf+4
  3414  002188  C0E0  F105         	movff	_diamTubo+3,?_printf+5
  3415  00218C  EC5B  F000         	call	_printf	;wreg free
  3416                           
  3417                           ;screenDrawers.h: 134: break;
  3418  002190  0012               	return	
  3419  002192                     l9044:
  3420                           
  3421                           ;screenDrawers.h: 137: {
  3422                           ;screenDrawers.h: 138: lcd_gotoxy(1, 1);
  3423  002192  0E01               	movlw	1
  3424  002194  0100               	movlb	0	; () banked
  3425  002196  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3426  002198  0E01               	movlw	1
  3427  00219A  EC14  F028         	call	_lcd_gotoxy
  3428                           
  3429                           ;screenDrawers.h: 139: printf("Densidad Masa:  \n");
  3430  00219E  0E59               	movlw	low STR_16
  3431  0021A0  0101               	movlb	1	; () banked
  3432  0021A2  6F00               	movwf	printf@f& (0+255),b
  3433  0021A4  0E7E               	movlw	high STR_16
  3434  0021A6  0101               	movlb	1	; () banked
  3435  0021A8  6F01               	movwf	(printf@f+1)& (0+255),b
  3436  0021AA  EC5B  F000         	call	_printf	;wreg free
  3437                           
  3438                           ;screenDrawers.h: 140: if (adv)
  3439  0021AE  0100               	movlb	0	; () banked
  3440  0021B0  51C9               	movf	drawMenu@adv& (0+255),w,b
  3441  0021B2  0100               	movlb	0	; () banked
  3442  0021B4  B4D8               	btfsc	status,2,c
  3443  0021B6  D004               	goto	l9052
  3444                           
  3445                           ; BSR set to: 0
  3446                           ;screenDrawers.h: 141: lcd_putc('A');
  3447  0021B8  0E41               	movlw	65
  3448  0021BA  EC3A  F025         	call	_lcd_putc
  3449  0021BE  D003               	goto	l370
  3450  0021C0                     l9052:
  3451                           
  3452                           ;screenDrawers.h: 142: else
  3453                           ;screenDrawers.h: 143: lcd_putc(' ');
  3454  0021C0  0E20               	movlw	32
  3455  0021C2  EC3A  F025         	call	_lcd_putc
  3456  0021C6                     l370:
  3457                           
  3458                           ;screenDrawers.h: 144: lcd_gotoxy(2, 2);
  3459  0021C6  0E02               	movlw	2
  3460  0021C8  0100               	movlb	0	; () banked
  3461  0021CA  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3462  0021CC  0E02               	movlw	2
  3463  0021CE  EC14  F028         	call	_lcd_gotoxy
  3464                           
  3465                           ;screenDrawers.h: 145: printf("  %3.3f kg/m3 ", densidadMasa);
  3466  0021D2  0EEF               	movlw	low STR_17
  3467  0021D4  0101               	movlb	1	; () banked
  3468  0021D6  6F00               	movwf	printf@f& (0+255),b
  3469  0021D8  0E7F               	movlw	high STR_17
  3470  0021DA  0101               	movlb	1	; () banked
  3471  0021DC  6F01               	movwf	(printf@f+1)& (0+255),b
  3472  0021DE  C0D9  F102         	movff	_densidadMasa,?_printf+2
  3473  0021E2  C0DA  F103         	movff	_densidadMasa+1,?_printf+3
  3474  0021E6  C0DB  F104         	movff	_densidadMasa+2,?_printf+4
  3475  0021EA  C0DC  F105         	movff	_densidadMasa+3,?_printf+5
  3476  0021EE  EC5B  F000         	call	_printf	;wreg free
  3477                           
  3478                           ;screenDrawers.h: 146: break;
  3479  0021F2  0012               	return	
  3480  0021F4                     l9056:
  3481                           
  3482                           ;screenDrawers.h: 149: {
  3483                           ;screenDrawers.h: 150: lcd_gotoxy(1, 1);
  3484  0021F4  0E01               	movlw	1
  3485  0021F6  0100               	movlb	0	; () banked
  3486  0021F8  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3487  0021FA  0E01               	movlw	1
  3488  0021FC  EC14  F028         	call	_lcd_gotoxy
  3489                           
  3490                           ;screenDrawers.h: 151: printf("Velocidad Masa: \n");
  3491  002200  0E7D               	movlw	low STR_18
  3492  002202  0101               	movlb	1	; () banked
  3493  002204  6F00               	movwf	printf@f& (0+255),b
  3494  002206  0E7E               	movlw	high STR_18
  3495  002208  0101               	movlb	1	; () banked
  3496  00220A  6F01               	movwf	(printf@f+1)& (0+255),b
  3497  00220C  EC5B  F000         	call	_printf	;wreg free
  3498                           
  3499                           ;screenDrawers.h: 152: if (adv)
  3500  002210  0100               	movlb	0	; () banked
  3501  002212  51C9               	movf	drawMenu@adv& (0+255),w,b
  3502  002214  0100               	movlb	0	; () banked
  3503  002216  B4D8               	btfsc	status,2,c
  3504  002218  D004               	goto	l9064
  3505                           
  3506                           ; BSR set to: 0
  3507                           ;screenDrawers.h: 153: lcd_putc('A');
  3508  00221A  0E41               	movlw	65
  3509  00221C  EC3A  F025         	call	_lcd_putc
  3510  002220  D003               	goto	l373
  3511  002222                     l9064:
  3512                           
  3513                           ;screenDrawers.h: 154: else
  3514                           ;screenDrawers.h: 155: lcd_putc(' ');
  3515  002222  0E20               	movlw	32
  3516  002224  EC3A  F025         	call	_lcd_putc
  3517  002228                     l373:
  3518                           
  3519                           ;screenDrawers.h: 156: lcd_gotoxy(2, 2);
  3520  002228  0E02               	movlw	2
  3521  00222A  0100               	movlb	0	; () banked
  3522  00222C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3523  00222E  0E02               	movlw	2
  3524  002230  EC14  F028         	call	_lcd_gotoxy
  3525                           
  3526                           ;screenDrawers.h: 157: printf("   %3.3f m/s  ", velocidadMasa);
  3527  002234  0EE0               	movlw	low STR_19
  3528  002236  0101               	movlb	1	; () banked
  3529  002238  6F00               	movwf	printf@f& (0+255),b
  3530  00223A  0E7F               	movlw	high STR_19
  3531  00223C  0101               	movlb	1	; () banked
  3532  00223E  6F01               	movwf	(printf@f+1)& (0+255),b
  3533  002240  C03B  F102         	movff	_velocidadMasa,?_printf+2
  3534  002244  C03C  F103         	movff	_velocidadMasa+1,?_printf+3
  3535  002248  C03D  F104         	movff	_velocidadMasa+2,?_printf+4
  3536  00224C  C03E  F105         	movff	_velocidadMasa+3,?_printf+5
  3537  002250  EC5B  F000         	call	_printf	;wreg free
  3538                           
  3539                           ;screenDrawers.h: 159: }
  3540                           ;screenDrawers.h: 160: }
  3541                           
  3542                           ;screenDrawers.h: 158: break;
  3543  002254  0012               	return	
  3544  002256                     l9070:
  3545  002256  0100               	movlb	0	; () banked
  3546  002258  51D4               	movf	_menuSection& (0+255),w,b
  3547                           
  3548                           ; Switch size 1, requested type "space"
  3549                           ; Number of cases is 7, Range of values is 0 to 6
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte           22    12 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554  00225A  0A00               	xorlw	0	; case 0
  3555  00225C  B4D8               	btfsc	status,2,c
  3556  00225E  D655               	goto	l8964
  3557  002260  0A01               	xorlw	1	; case 1
  3558  002262  B4D8               	btfsc	status,2,c
  3559  002264  D690               	goto	l8980
  3560  002266  0A03               	xorlw	3	; case 2
  3561  002268  B4D8               	btfsc	status,2,c
  3562  00226A  D6D5               	goto	l9000
  3563  00226C  0A01               	xorlw	1	; case 3
  3564  00226E  B4D8               	btfsc	status,2,c
  3565  002270  D732               	goto	l9020
  3566  002272  0A07               	xorlw	7	; case 4
  3567  002274  B4D8               	btfsc	status,2,c
  3568  002276  D75C               	goto	l9032
  3569  002278  0A01               	xorlw	1	; case 5
  3570  00227A  B4D8               	btfsc	status,2,c
  3571  00227C  D78A               	goto	l9044
  3572  00227E  0A03               	xorlw	3	; case 6
  3573  002280  A4D8               	btfss	status,2,c
  3574  002282  0012               	return	
  3575  002284  D7B7               	goto	l9056
  3576  002286                     __end_of_drawMenu:
  3577                           	opt stack 0
  3578                           tblptru	equ	0xFF8
  3579                           tblptrh	equ	0xFF7
  3580                           tblptrl	equ	0xFF6
  3581                           tablat	equ	0xFF5
  3582                           prodh	equ	0xFF4
  3583                           prodl	equ	0xFF3
  3584                           intcon	equ	0xFF2
  3585                           postinc0	equ	0xFEE
  3586                           wreg	equ	0xFE8
  3587                           postdec1	equ	0xFE5
  3588                           fsr1l	equ	0xFE1
  3589                           indf2	equ	0xFDF
  3590                           fsr2h	equ	0xFDA
  3591                           fsr2l	equ	0xFD9
  3592                           status	equ	0xFD8
  3593                           
  3594 ;; *************** function _drawChanVal *****************
  3595 ;; Defined at:
  3596 ;;		line 163 in file "source/screenDrawers.h"
  3597 ;; Parameters:    Size  Location     Type
  3598 ;;		None
  3599 ;; Auto vars:     Size  Location     Type
  3600 ;;  i               2  105[BANK0 ] int 
  3601 ;; Return value:  Size  Location     Type
  3602 ;;                  1    wreg      void 
  3603 ;; Registers used:
  3604 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3605 ;; Tracked objects:
  3606 ;;		On entry : 0/0
  3607 ;;		On exit  : 0/0
  3608 ;;		Unchanged: 0/0
  3609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3610 ;;      Params:         0       0       0       0       0       0       0
  3611 ;;      Locals:         0       2       0       0       0       0       0
  3612 ;;      Temps:          0       0       0       0       0       0       0
  3613 ;;      Totals:         0       2       0       0       0       0       0
  3614 ;;Total ram usage:        2 bytes
  3615 ;; Hardware stack levels used:    1
  3616 ;; Hardware stack levels required when called:   15
  3617 ;; This function calls:
  3618 ;;		_lcd_gotoxy
  3619 ;;		_printf
  3620 ;; This function is called by:
  3621 ;;		_drawScreen
  3622 ;; This function uses a non-reentrant model
  3623 ;;
  3624                           
  3625                           	psect	text9
  3626  002B5C                     __ptext9:
  3627                           	opt stack 0
  3628  002B5C                     _drawChanVal:
  3629                           	opt stack 14
  3630                           
  3631                           ;screenDrawers.h: 164: switch (menuSection) {
  3632                           
  3633                           ;incstack = 0
  3634  002B5C  D13E               	goto	l9144
  3635  002B5E                     l9074:
  3636                           
  3637                           ;screenDrawers.h: 166: {
  3638                           ;screenDrawers.h: 167: lcd_gotoxy(1, 1);
  3639  002B5E  0E01               	movlw	1
  3640  002B60  0100               	movlb	0	; () banked
  3641  002B62  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3642  002B64  0E01               	movlw	1
  3643  002B66  EC14  F028         	call	_lcd_gotoxy
  3644                           
  3645                           ;screenDrawers.h: 168: printf("Estado proceso: \n");
  3646  002B6A  0E8F               	movlw	low STR_1
  3647  002B6C  0101               	movlb	1	; () banked
  3648  002B6E  6F00               	movwf	printf@f& (0+255),b
  3649  002B70  0E7E               	movlw	high STR_1
  3650  002B72  0101               	movlb	1	; () banked
  3651  002B74  6F01               	movwf	(printf@f+1)& (0+255),b
  3652  002B76  EC5B  F000         	call	_printf	;wreg free
  3653                           
  3654                           ;screenDrawers.h: 169: if (ProcessStarted)
  3655  002B7A  0100               	movlb	0	; () banked
  3656  002B7C  51D0               	movf	_ProcessStarted& (0+255),w,b
  3657  002B7E  B4D8               	btfsc	status,2,c
  3658  002B80  D011               	goto	l9082
  3659                           
  3660                           ; BSR set to: 0
  3661                           ;screenDrawers.h: 170: printf("   %d / %d    ", proceso, numCortes);
  3662  002B82  0E95               	movlw	low STR_2
  3663  002B84  0101               	movlb	1	; () banked
  3664  002B86  6F00               	movwf	printf@f& (0+255),b
  3665  002B88  0E7F               	movlw	high STR_2
  3666  002B8A  0101               	movlb	1	; () banked
  3667  002B8C  6F01               	movwf	(printf@f+1)& (0+255),b
  3668  002B8E  C140  F102         	movff	_proceso,?_printf+2
  3669  002B92  C141  F103         	movff	_proceso+1,?_printf+3
  3670  002B96  C0E1  F104         	movff	_numCortes,?_printf+4
  3671  002B9A  C0E2  F105         	movff	_numCortes+1,?_printf+5
  3672  002B9E  EC5B  F000         	call	_printf	;wreg free
  3673  002BA2  0012               	return	
  3674  002BA4                     l9082:
  3675                           
  3676                           ;screenDrawers.h: 171: else
  3677                           ;screenDrawers.h: 172: printf("    Detenido    ");
  3678  002BA4  0E63               	movlw	low STR_3
  3679  002BA6  0101               	movlb	1	; () banked
  3680  002BA8  6F00               	movwf	printf@f& (0+255),b
  3681  002BAA  0E7F               	movlw	high STR_3
  3682  002BAC  0101               	movlb	1	; () banked
  3683  002BAE  6F01               	movwf	(printf@f+1)& (0+255),b
  3684  002BB0  EC5B  F000         	call	_printf	;wreg free
  3685                           
  3686                           ;screenDrawers.h: 173: break;
  3687  002BB4  0012               	return	
  3688  002BB6                     l9084:
  3689                           
  3690                           ;screenDrawers.h: 176: {
  3691                           ;screenDrawers.h: 177: int i;
  3692                           ;screenDrawers.h: 178: for (i = 0; i < 4; i++)
  3693  002BB6  0E00               	movlw	0
  3694  002BB8  0100               	movlb	0	; () banked
  3695  002BBA  6FCA               	movwf	(drawChanVal@i+1)& (0+255),b
  3696  002BBC  0E00               	movlw	0
  3697  002BBE  6FC9               	movwf	drawChanVal@i& (0+255),b
  3698  002BC0                     l9086:
  3699                           
  3700                           ; BSR set to: 0
  3701  002BC0  0100               	movlb	0	; () banked
  3702  002BC2  BFCA               	btfsc	(drawChanVal@i+1)& (0+255),7,b
  3703  002BC4  D008               	goto	l9090
  3704  002BC6  0100               	movlb	0	; () banked
  3705  002BC8  51CA               	movf	(drawChanVal@i+1)& (0+255),w,b
  3706  002BCA  E113               	bnz	l9096
  3707  002BCC  0E04               	movlw	4
  3708  002BCE  0100               	movlb	0	; () banked
  3709  002BD0  5DC9               	subwf	drawChanVal@i& (0+255),w,b
  3710  002BD2  B0D8               	btfsc	status,0,c
  3711  002BD4  D00E               	goto	l9096
  3712  002BD6                     l9090:
  3713                           
  3714                           ; BSR set to: 0
  3715                           ;screenDrawers.h: 179: questKMT[i] = ' ';
  3716  002BD6  0E3D               	movlw	low _questKMT
  3717  002BD8  0100               	movlb	0	; () banked
  3718  002BDA  25C9               	addwf	drawChanVal@i& (0+255),w,b
  3719  002BDC  6ED9               	movwf	fsr2l,c
  3720  002BDE  0E01               	movlw	high _questKMT
  3721  002BE0  0100               	movlb	0	; () banked
  3722  002BE2  21CA               	addwfc	(drawChanVal@i+1)& (0+255),w,b
  3723  002BE4  6EDA               	movwf	fsr2h,c
  3724  002BE6  0E20               	movlw	32
  3725  002BE8  6EDF               	movwf	indf2,c
  3726                           
  3727                           ; BSR set to: 0
  3728  002BEA  0100               	movlb	0	; () banked
  3729  002BEC  4BC9               	infsnz	drawChanVal@i& (0+255),f,b
  3730  002BEE  2BCA               	incf	(drawChanVal@i+1)& (0+255),f,b
  3731  002BF0  D7E7               	goto	l9086
  3732  002BF2                     l9096:
  3733                           
  3734                           ; BSR set to: 0
  3735                           ;screenDrawers.h: 180: questKMT[selKMT] = 0b01111110;
  3736  002BF2  0100               	movlb	0	; () banked
  3737  002BF4  51D6               	movf	_selKMT& (0+255),w,b
  3738  002BF6  0D01               	mullw	1
  3739  002BF8  0E3D               	movlw	low _questKMT
  3740  002BFA  24F3               	addwf	prodl,w,c
  3741  002BFC  6ED9               	movwf	fsr2l,c
  3742  002BFE  0E01               	movlw	high _questKMT
  3743  002C00  20F4               	addwfc	prodh,w,c
  3744  002C02  6EDA               	movwf	fsr2h,c
  3745  002C04  0E7E               	movlw	126
  3746  002C06  6EDF               	movwf	indf2,c
  3747                           
  3748                           ; BSR set to: 0
  3749                           ;screenDrawers.h: 181: lcd_gotoxy(1, 1);
  3750  002C08  0E01               	movlw	1
  3751  002C0A  0100               	movlb	0	; () banked
  3752  002C0C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3753  002C0E  0E01               	movlw	1
  3754  002C10  EC14  F028         	call	_lcd_gotoxy
  3755                           
  3756                           ;screenDrawers.h: 182: printf("Proceso en:     \n");
  3757  002C14  0E47               	movlw	low STR_4
  3758  002C16  0101               	movlb	1	; () banked
  3759  002C18  6F00               	movwf	printf@f& (0+255),b
  3760  002C1A  0E7E               	movlw	high STR_4
  3761  002C1C  0101               	movlb	1	; () banked
  3762  002C1E  6F01               	movwf	(printf@f+1)& (0+255),b
  3763  002C20  EC5B  F000         	call	_printf	;wreg free
  3764                           
  3765                           ;screenDrawers.h: 183: printf(" %ckg  %cm3  %csec ", questKMT[0], questKMT[1], questKMT[
      +                          2]);
  3766  002C24  0EFC               	movlw	low STR_24
  3767  002C26  0101               	movlb	1	; () banked
  3768  002C28  6F00               	movwf	printf@f& (0+255),b
  3769  002C2A  0E7D               	movlw	high STR_24
  3770  002C2C  0101               	movlb	1	; () banked
  3771  002C2E  6F01               	movwf	(printf@f+1)& (0+255),b
  3772  002C30  C13D  F102         	movff	_questKMT,?_printf+2
  3773  002C34  0101               	movlb	1	; () banked
  3774  002C36  6B03               	clrf	(?_printf+3)& (0+255),b
  3775  002C38  C13E  F104         	movff	_questKMT+1,?_printf+4
  3776  002C3C  0101               	movlb	1	; () banked
  3777  002C3E  6B05               	clrf	(?_printf+5)& (0+255),b
  3778  002C40  C13F  F106         	movff	_questKMT+2,?_printf+6
  3779  002C44  0101               	movlb	1	; () banked
  3780  002C46  6B07               	clrf	(?_printf+7)& (0+255),b
  3781  002C48  EC5B  F000         	call	_printf	;wreg free
  3782                           
  3783                           ;screenDrawers.h: 184: break;
  3784  002C4C  0012               	return	
  3785  002C4E                     l9104:
  3786                           
  3787                           ;screenDrawers.h: 187: {
  3788                           ;screenDrawers.h: 188: lcd_gotoxy(1, 1);
  3789  002C4E  0E01               	movlw	1
  3790  002C50  0100               	movlb	0	; () banked
  3791  002C52  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3792  002C54  0E01               	movlw	1
  3793  002C56  EC14  F028         	call	_lcd_gotoxy
  3794                           
  3795                           ;screenDrawers.h: 189: printf("Valor por Corte:\n");
  3796  002C5A  0EB3               	movlw	low STR_8
  3797  002C5C  0101               	movlb	1	; () banked
  3798  002C5E  6F00               	movwf	printf@f& (0+255),b
  3799  002C60  0E7E               	movlw	high STR_8
  3800  002C62  0101               	movlb	1	; () banked
  3801  002C64  6F01               	movwf	(printf@f+1)& (0+255),b
  3802  002C66  EC5B  F000         	call	_printf	;wreg free
  3803                           
  3804                           ;screenDrawers.h: 190: switch (tVarProceso) {
  3805  002C6A  D033               	goto	l9116
  3806  002C6C                     l9108:
  3807                           
  3808                           ;screenDrawers.h: 192: {
  3809                           ;screenDrawers.h: 193: printf("   %3.3f kg   ", kgXcorte);
  3810  002C6C  0EB3               	movlw	low STR_9
  3811  002C6E  0101               	movlb	1	; () banked
  3812  002C70  6F00               	movwf	printf@f& (0+255),b
  3813  002C72  0E7F               	movlw	high STR_9
  3814  002C74  0101               	movlb	1	; () banked
  3815  002C76  6F01               	movwf	(printf@f+1)& (0+255),b
  3816  002C78  C02F  F102         	movff	_kgXcorte,?_printf+2
  3817  002C7C  C030  F103         	movff	_kgXcorte+1,?_printf+3
  3818  002C80  C031  F104         	movff	_kgXcorte+2,?_printf+4
  3819  002C84  C032  F105         	movff	_kgXcorte+3,?_printf+5
  3820  002C88  EC5B  F000         	call	_printf	;wreg free
  3821                           
  3822                           ;screenDrawers.h: 194: break;
  3823  002C8C  0012               	return	
  3824  002C8E                     l9110:
  3825                           
  3826                           ;screenDrawers.h: 197: {
  3827                           ;screenDrawers.h: 198: printf("   %3.3f m3   ", m3Xcorte);
  3828  002C8E  0EA4               	movlw	low STR_10
  3829  002C90  0101               	movlb	1	; () banked
  3830  002C92  6F00               	movwf	printf@f& (0+255),b
  3831  002C94  0E7F               	movlw	high STR_10
  3832  002C96  0101               	movlb	1	; () banked
  3833  002C98  6F01               	movwf	(printf@f+1)& (0+255),b
  3834  002C9A  C033  F102         	movff	_m3Xcorte,?_printf+2
  3835  002C9E  C034  F103         	movff	_m3Xcorte+1,?_printf+3
  3836  002CA2  C035  F104         	movff	_m3Xcorte+2,?_printf+4
  3837  002CA6  C036  F105         	movff	_m3Xcorte+3,?_printf+5
  3838  002CAA  EC5B  F000         	call	_printf	;wreg free
  3839                           
  3840                           ;screenDrawers.h: 199: break;
  3841  002CAE  0012               	return	
  3842  002CB0                     l9112:
  3843                           
  3844                           ;screenDrawers.h: 202: {
  3845                           ;screenDrawers.h: 203: printf("   %3.3f sec  ", tiXcorte);
  3846  002CB0  0ED1               	movlw	low STR_11
  3847  002CB2  0101               	movlb	1	; () banked
  3848  002CB4  6F00               	movwf	printf@f& (0+255),b
  3849  002CB6  0E7F               	movlw	high STR_11
  3850  002CB8  0101               	movlb	1	; () banked
  3851  002CBA  6F01               	movwf	(printf@f+1)& (0+255),b
  3852  002CBC  C037  F102         	movff	_tiXcorte,?_printf+2
  3853  002CC0  C038  F103         	movff	_tiXcorte+1,?_printf+3
  3854  002CC4  C039  F104         	movff	_tiXcorte+2,?_printf+4
  3855  002CC8  C03A  F105         	movff	_tiXcorte+3,?_printf+5
  3856  002CCC  EC5B  F000         	call	_printf	;wreg free
  3857                           
  3858                           ;screenDrawers.h: 205: }
  3859                           ;screenDrawers.h: 206: }
  3860                           
  3861                           ;screenDrawers.h: 204: break;
  3862  002CD0  0012               	return	
  3863  002CD2                     l9116:
  3864  002CD2  0100               	movlb	0	; () banked
  3865  002CD4  51E3               	movf	_tVarProceso& (0+255),w,b
  3866                           
  3867                           ; Switch size 1, requested type "space"
  3868                           ; Number of cases is 3, Range of values is 0 to 2
  3869                           ; switch strategies available:
  3870                           ; Name         Instructions Cycles
  3871                           ; simple_byte           10     6 (average)
  3872                           ;	Chosen strategy is simple_byte
  3873  002CD6  0A00               	xorlw	0	; case 0
  3874  002CD8  B4D8               	btfsc	status,2,c
  3875  002CDA  D7C8               	goto	l9108
  3876  002CDC  0A01               	xorlw	1	; case 1
  3877  002CDE  B4D8               	btfsc	status,2,c
  3878  002CE0  D7D6               	goto	l9110
  3879  002CE2  0A03               	xorlw	3	; case 2
  3880  002CE4  A4D8               	btfss	status,2,c
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;screenDrawers.h: 207: break;
  3884  002CE6  0012               	return	
  3885  002CE8  D7E3               	goto	l9112
  3886  002CEA                     l9118:
  3887                           
  3888                           ; BSR set to: 0
  3889                           ;screenDrawers.h: 210: {
  3890                           ;screenDrawers.h: 211: lcd_gotoxy(1, 1);
  3891  002CEA  0E01               	movlw	1
  3892  002CEC  0100               	movlb	0	; () banked
  3893  002CEE  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3894  002CF0  0E01               	movlw	1
  3895  002CF2  EC14  F028         	call	_lcd_gotoxy
  3896                           
  3897                           ;screenDrawers.h: 212: printf("Cantidad Cortes:\n");
  3898  002CF6  0ED7               	movlw	low STR_12
  3899  002CF8  0101               	movlb	1	; () banked
  3900  002CFA  6F00               	movwf	printf@f& (0+255),b
  3901  002CFC  0E7E               	movlw	high STR_12
  3902  002CFE  0101               	movlb	1	; () banked
  3903  002D00  6F01               	movwf	(printf@f+1)& (0+255),b
  3904  002D02  EC5B  F000         	call	_printf	;wreg free
  3905                           
  3906                           ;screenDrawers.h: 213: printf("      %d       ", numCortes);
  3907  002D06  0E85               	movlw	low STR_13
  3908  002D08  0101               	movlb	1	; () banked
  3909  002D0A  6F00               	movwf	printf@f& (0+255),b
  3910  002D0C  0E7F               	movlw	high STR_13
  3911  002D0E  0101               	movlb	1	; () banked
  3912  002D10  6F01               	movwf	(printf@f+1)& (0+255),b
  3913  002D12  C0E1  F102         	movff	_numCortes,?_printf+2
  3914  002D16  C0E2  F103         	movff	_numCortes+1,?_printf+3
  3915  002D1A  EC5B  F000         	call	_printf	;wreg free
  3916                           
  3917                           ;screenDrawers.h: 214: break;
  3918  002D1E  0012               	return	
  3919  002D20                     l9124:
  3920                           
  3921                           ;screenDrawers.h: 217: {
  3922                           ;screenDrawers.h: 218: lcd_gotoxy(1, 1);
  3923  002D20  0E01               	movlw	1
  3924  002D22  0100               	movlb	0	; () banked
  3925  002D24  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3926  002D26  0E01               	movlw	1
  3927  002D28  EC14  F028         	call	_lcd_gotoxy
  3928                           
  3929                           ;screenDrawers.h: 219: printf("Diametro Tubo:  \n");
  3930  002D2C  0E6B               	movlw	low STR_14
  3931  002D2E  0101               	movlb	1	; () banked
  3932  002D30  6F00               	movwf	printf@f& (0+255),b
  3933  002D32  0E7E               	movlw	high STR_14
  3934  002D34  0101               	movlb	1	; () banked
  3935  002D36  6F01               	movwf	(printf@f+1)& (0+255),b
  3936  002D38  EC5B  F000         	call	_printf	;wreg free
  3937                           
  3938                           ;screenDrawers.h: 220: printf("   %3.3f mm   ", diamTubo);
  3939  002D3C  0EC2               	movlw	low STR_15
  3940  002D3E  0101               	movlb	1	; () banked
  3941  002D40  6F00               	movwf	printf@f& (0+255),b
  3942  002D42  0E7F               	movlw	high STR_15
  3943  002D44  0101               	movlb	1	; () banked
  3944  002D46  6F01               	movwf	(printf@f+1)& (0+255),b
  3945  002D48  C0DD  F102         	movff	_diamTubo,?_printf+2
  3946  002D4C  C0DE  F103         	movff	_diamTubo+1,?_printf+3
  3947  002D50  C0DF  F104         	movff	_diamTubo+2,?_printf+4
  3948  002D54  C0E0  F105         	movff	_diamTubo+3,?_printf+5
  3949  002D58  EC5B  F000         	call	_printf	;wreg free
  3950                           
  3951                           ;screenDrawers.h: 221: break;
  3952  002D5C  0012               	return	
  3953  002D5E                     l9130:
  3954                           
  3955                           ;screenDrawers.h: 224: {
  3956                           ;screenDrawers.h: 225: lcd_gotoxy(1, 1);
  3957  002D5E  0E01               	movlw	1
  3958  002D60  0100               	movlb	0	; () banked
  3959  002D62  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3960  002D64  0E01               	movlw	1
  3961  002D66  EC14  F028         	call	_lcd_gotoxy
  3962                           
  3963                           ;screenDrawers.h: 226: printf("Densidad Masa:  \n");
  3964  002D6A  0E59               	movlw	low STR_16
  3965  002D6C  0101               	movlb	1	; () banked
  3966  002D6E  6F00               	movwf	printf@f& (0+255),b
  3967  002D70  0E7E               	movlw	high STR_16
  3968  002D72  0101               	movlb	1	; () banked
  3969  002D74  6F01               	movwf	(printf@f+1)& (0+255),b
  3970  002D76  EC5B  F000         	call	_printf	;wreg free
  3971                           
  3972                           ;screenDrawers.h: 227: printf("  %3.3f kg/m3 ", densidadMasa);
  3973  002D7A  0EEF               	movlw	low STR_17
  3974  002D7C  0101               	movlb	1	; () banked
  3975  002D7E  6F00               	movwf	printf@f& (0+255),b
  3976  002D80  0E7F               	movlw	high STR_17
  3977  002D82  0101               	movlb	1	; () banked
  3978  002D84  6F01               	movwf	(printf@f+1)& (0+255),b
  3979  002D86  C0D9  F102         	movff	_densidadMasa,?_printf+2
  3980  002D8A  C0DA  F103         	movff	_densidadMasa+1,?_printf+3
  3981  002D8E  C0DB  F104         	movff	_densidadMasa+2,?_printf+4
  3982  002D92  C0DC  F105         	movff	_densidadMasa+3,?_printf+5
  3983  002D96  EC5B  F000         	call	_printf	;wreg free
  3984                           
  3985                           ;screenDrawers.h: 228: break;
  3986  002D9A  0012               	return	
  3987  002D9C                     l9136:
  3988                           
  3989                           ;screenDrawers.h: 231: {
  3990                           ;screenDrawers.h: 232: lcd_gotoxy(1, 1);
  3991  002D9C  0E01               	movlw	1
  3992  002D9E  0100               	movlb	0	; () banked
  3993  002DA0  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  3994  002DA2  0E01               	movlw	1
  3995  002DA4  EC14  F028         	call	_lcd_gotoxy
  3996                           
  3997                           ;screenDrawers.h: 233: printf("Velocidad Masa: \n");
  3998  002DA8  0E7D               	movlw	low STR_18
  3999  002DAA  0101               	movlb	1	; () banked
  4000  002DAC  6F00               	movwf	printf@f& (0+255),b
  4001  002DAE  0E7E               	movlw	high STR_18
  4002  002DB0  0101               	movlb	1	; () banked
  4003  002DB2  6F01               	movwf	(printf@f+1)& (0+255),b
  4004  002DB4  EC5B  F000         	call	_printf	;wreg free
  4005                           
  4006                           ;screenDrawers.h: 234: printf("   %3.3f m/s  ", velocidadMasa);
  4007  002DB8  0EE0               	movlw	low STR_19
  4008  002DBA  0101               	movlb	1	; () banked
  4009  002DBC  6F00               	movwf	printf@f& (0+255),b
  4010  002DBE  0E7F               	movlw	high STR_19
  4011  002DC0  0101               	movlb	1	; () banked
  4012  002DC2  6F01               	movwf	(printf@f+1)& (0+255),b
  4013  002DC4  C03B  F102         	movff	_velocidadMasa,?_printf+2
  4014  002DC8  C03C  F103         	movff	_velocidadMasa+1,?_printf+3
  4015  002DCC  C03D  F104         	movff	_velocidadMasa+2,?_printf+4
  4016  002DD0  C03E  F105         	movff	_velocidadMasa+3,?_printf+5
  4017  002DD4  EC5B  F000         	call	_printf	;wreg free
  4018                           
  4019                           ;screenDrawers.h: 236: }
  4020                           ;screenDrawers.h: 237: }
  4021                           
  4022                           ;screenDrawers.h: 235: break;
  4023  002DD8  0012               	return	
  4024  002DDA                     l9144:
  4025  002DDA  0100               	movlb	0	; () banked
  4026  002DDC  51D4               	movf	_menuSection& (0+255),w,b
  4027                           
  4028                           ; Switch size 1, requested type "space"
  4029                           ; Number of cases is 7, Range of values is 0 to 6
  4030                           ; switch strategies available:
  4031                           ; Name         Instructions Cycles
  4032                           ; simple_byte           22    12 (average)
  4033                           ;	Chosen strategy is simple_byte
  4034  002DDE  0A00               	xorlw	0	; case 0
  4035  002DE0  B4D8               	btfsc	status,2,c
  4036  002DE2  D6BD               	goto	l9074
  4037  002DE4  0A01               	xorlw	1	; case 1
  4038  002DE6  B4D8               	btfsc	status,2,c
  4039  002DE8  D6E6               	goto	l9084
  4040  002DEA  0A03               	xorlw	3	; case 2
  4041  002DEC  B4D8               	btfsc	status,2,c
  4042  002DEE  D72F               	goto	l9104
  4043  002DF0  0A01               	xorlw	1	; case 3
  4044  002DF2  B4D8               	btfsc	status,2,c
  4045  002DF4  D77A               	goto	l9118
  4046  002DF6  0A07               	xorlw	7	; case 4
  4047  002DF8  B4D8               	btfsc	status,2,c
  4048  002DFA  D792               	goto	l9124
  4049  002DFC  0A01               	xorlw	1	; case 5
  4050  002DFE  B4D8               	btfsc	status,2,c
  4051  002E00  D7AE               	goto	l9130
  4052  002E02  0A03               	xorlw	3	; case 6
  4053  002E04  A4D8               	btfss	status,2,c
  4054  002E06  0012               	return	
  4055  002E08  D7C9               	goto	l9136
  4056  002E0A                     __end_of_drawChanVal:
  4057                           	opt stack 0
  4058                           tblptru	equ	0xFF8
  4059                           tblptrh	equ	0xFF7
  4060                           tblptrl	equ	0xFF6
  4061                           tablat	equ	0xFF5
  4062                           prodh	equ	0xFF4
  4063                           prodl	equ	0xFF3
  4064                           intcon	equ	0xFF2
  4065                           postinc0	equ	0xFEE
  4066                           wreg	equ	0xFE8
  4067                           postdec1	equ	0xFE5
  4068                           fsr1l	equ	0xFE1
  4069                           indf2	equ	0xFDF
  4070                           fsr2h	equ	0xFDA
  4071                           fsr2l	equ	0xFD9
  4072                           status	equ	0xFD8
  4073                           
  4074 ;; *************** function _drawBadPass *****************
  4075 ;; Defined at:
  4076 ;;		line 259 in file "source/screenDrawers.h"
  4077 ;; Parameters:    Size  Location     Type
  4078 ;;		None
  4079 ;; Auto vars:     Size  Location     Type
  4080 ;;		None
  4081 ;; Return value:  Size  Location     Type
  4082 ;;                  1    wreg      void 
  4083 ;; Registers used:
  4084 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4085 ;; Tracked objects:
  4086 ;;		On entry : 0/0
  4087 ;;		On exit  : 0/0
  4088 ;;		Unchanged: 0/0
  4089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4090 ;;      Params:         0       0       0       0       0       0       0
  4091 ;;      Locals:         0       0       0       0       0       0       0
  4092 ;;      Temps:          0       0       0       0       0       0       0
  4093 ;;      Totals:         0       0       0       0       0       0       0
  4094 ;;Total ram usage:        0 bytes
  4095 ;; Hardware stack levels used:    1
  4096 ;; Hardware stack levels required when called:   15
  4097 ;; This function calls:
  4098 ;;		_lcd_gotoxy
  4099 ;;		_printf
  4100 ;; This function is called by:
  4101 ;;		_drawScreen
  4102 ;; This function uses a non-reentrant model
  4103 ;;
  4104                           
  4105                           	psect	text10
  4106  005058                     __ptext10:
  4107                           	opt stack 0
  4108  005058                     _drawBadPass:
  4109                           	opt stack 14
  4110                           
  4111                           ;screenDrawers.h: 260: lcd_gotoxy(1, 1);
  4112                           
  4113                           ;incstack = 0
  4114  005058  0E01               	movlw	1
  4115  00505A  0100               	movlb	0	; () banked
  4116  00505C  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4117  00505E  0E01               	movlw	1
  4118  005060  EC14  F028         	call	_lcd_gotoxy
  4119                           
  4120                           ;screenDrawers.h: 261: printf("Contrasena      \n");
  4121  005064  0E23               	movlw	low STR_39
  4122  005066  0101               	movlb	1	; () banked
  4123  005068  6F00               	movwf	printf@f& (0+255),b
  4124  00506A  0E7E               	movlw	high STR_39
  4125  00506C  0101               	movlb	1	; () banked
  4126  00506E  6F01               	movwf	(printf@f+1)& (0+255),b
  4127  005070  EC5B  F000         	call	_printf	;wreg free
  4128                           
  4129                           ;screenDrawers.h: 262: printf("     Erronea    ");
  4130  005074  0E41               	movlw	low STR_40
  4131  005076  0101               	movlb	1	; () banked
  4132  005078  6F00               	movwf	printf@f& (0+255),b
  4133  00507A  0E7F               	movlw	high STR_40
  4134  00507C  0101               	movlb	1	; () banked
  4135  00507E  6F01               	movwf	(printf@f+1)& (0+255),b
  4136  005080  EC5B  F000         	call	_printf	;wreg free
  4137  005084  0012               	return		;funcret
  4138  005086                     __end_of_drawBadPass:
  4139                           	opt stack 0
  4140                           tblptru	equ	0xFF8
  4141                           tblptrh	equ	0xFF7
  4142                           tblptrl	equ	0xFF6
  4143                           tablat	equ	0xFF5
  4144                           prodh	equ	0xFF4
  4145                           prodl	equ	0xFF3
  4146                           intcon	equ	0xFF2
  4147                           postinc0	equ	0xFEE
  4148                           wreg	equ	0xFE8
  4149                           postdec1	equ	0xFE5
  4150                           fsr1l	equ	0xFE1
  4151                           indf2	equ	0xFDF
  4152                           fsr2h	equ	0xFDA
  4153                           fsr2l	equ	0xFD9
  4154                           status	equ	0xFD8
  4155                           
  4156 ;; *************** function _drawAdvON *****************
  4157 ;; Defined at:
  4158 ;;		line 265 in file "source/screenDrawers.h"
  4159 ;; Parameters:    Size  Location     Type
  4160 ;;		None
  4161 ;; Auto vars:     Size  Location     Type
  4162 ;;		None
  4163 ;; Return value:  Size  Location     Type
  4164 ;;                  1    wreg      void 
  4165 ;; Registers used:
  4166 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4167 ;; Tracked objects:
  4168 ;;		On entry : 0/0
  4169 ;;		On exit  : 0/0
  4170 ;;		Unchanged: 0/0
  4171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4172 ;;      Params:         0       0       0       0       0       0       0
  4173 ;;      Locals:         0       0       0       0       0       0       0
  4174 ;;      Temps:          0       0       0       0       0       0       0
  4175 ;;      Totals:         0       0       0       0       0       0       0
  4176 ;;Total ram usage:        0 bytes
  4177 ;; Hardware stack levels used:    1
  4178 ;; Hardware stack levels required when called:   15
  4179 ;; This function calls:
  4180 ;;		_lcd_gotoxy
  4181 ;;		_printf
  4182 ;; This function is called by:
  4183 ;;		_drawScreen
  4184 ;; This function uses a non-reentrant model
  4185 ;;
  4186                           
  4187                           	psect	text11
  4188  005086                     __ptext11:
  4189                           	opt stack 0
  4190  005086                     _drawAdvON:
  4191                           	opt stack 14
  4192                           
  4193                           ;screenDrawers.h: 266: lcd_gotoxy(1, 1);
  4194                           
  4195                           ;incstack = 0
  4196  005086  0E01               	movlw	1
  4197  005088  0100               	movlb	0	; () banked
  4198  00508A  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4199  00508C  0E01               	movlw	1
  4200  00508E  EC14  F028         	call	_lcd_gotoxy
  4201                           
  4202                           ;screenDrawers.h: 267: printf("Modo Configurar:\n");
  4203  005092  0EC5               	movlw	low STR_41
  4204  005094  0101               	movlb	1	; () banked
  4205  005096  6F00               	movwf	printf@f& (0+255),b
  4206  005098  0E7E               	movlw	high STR_41
  4207  00509A  0101               	movlb	1	; () banked
  4208  00509C  6F01               	movwf	(printf@f+1)& (0+255),b
  4209  00509E  EC5B  F000         	call	_printf	;wreg free
  4210                           
  4211                           ;screenDrawers.h: 268: printf("    Iniciado    ");
  4212  0050A2  0E52               	movlw	low STR_42
  4213  0050A4  0101               	movlb	1	; () banked
  4214  0050A6  6F00               	movwf	printf@f& (0+255),b
  4215  0050A8  0E7F               	movlw	high STR_42
  4216  0050AA  0101               	movlb	1	; () banked
  4217  0050AC  6F01               	movwf	(printf@f+1)& (0+255),b
  4218  0050AE  EC5B  F000         	call	_printf	;wreg free
  4219  0050B2  0012               	return		;funcret
  4220  0050B4                     __end_of_drawAdvON:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           intcon	equ	0xFF2
  4229                           postinc0	equ	0xFEE
  4230                           wreg	equ	0xFE8
  4231                           postdec1	equ	0xFE5
  4232                           fsr1l	equ	0xFE1
  4233                           indf2	equ	0xFDF
  4234                           fsr2h	equ	0xFDA
  4235                           fsr2l	equ	0xFD9
  4236                           status	equ	0xFD8
  4237                           
  4238 ;; *************** function _drawAdvOFF *****************
  4239 ;; Defined at:
  4240 ;;		line 271 in file "source/screenDrawers.h"
  4241 ;; Parameters:    Size  Location     Type
  4242 ;;		None
  4243 ;; Auto vars:     Size  Location     Type
  4244 ;;		None
  4245 ;; Return value:  Size  Location     Type
  4246 ;;                  1    wreg      void 
  4247 ;; Registers used:
  4248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4249 ;; Tracked objects:
  4250 ;;		On entry : 0/0
  4251 ;;		On exit  : 0/0
  4252 ;;		Unchanged: 0/0
  4253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4254 ;;      Params:         0       0       0       0       0       0       0
  4255 ;;      Locals:         0       0       0       0       0       0       0
  4256 ;;      Temps:          0       0       0       0       0       0       0
  4257 ;;      Totals:         0       0       0       0       0       0       0
  4258 ;;Total ram usage:        0 bytes
  4259 ;; Hardware stack levels used:    1
  4260 ;; Hardware stack levels required when called:   15
  4261 ;; This function calls:
  4262 ;;		_lcd_gotoxy
  4263 ;;		_printf
  4264 ;; This function is called by:
  4265 ;;		_drawScreen
  4266 ;; This function uses a non-reentrant model
  4267 ;;
  4268                           
  4269                           	psect	text12
  4270  0050B4                     __ptext12:
  4271                           	opt stack 0
  4272  0050B4                     _drawAdvOFF:
  4273                           	opt stack 14
  4274                           
  4275                           ;screenDrawers.h: 272: lcd_gotoxy(1, 1);
  4276                           
  4277                           ;incstack = 0
  4278  0050B4  0E01               	movlw	1
  4279  0050B6  0100               	movlb	0	; () banked
  4280  0050B8  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  4281  0050BA  0E01               	movlw	1
  4282  0050BC  EC14  F028         	call	_lcd_gotoxy
  4283                           
  4284                           ;screenDrawers.h: 273: printf("Modo Configurar:\n");
  4285  0050C0  0EC5               	movlw	low STR_41
  4286  0050C2  0101               	movlb	1	; () banked
  4287  0050C4  6F00               	movwf	printf@f& (0+255),b
  4288  0050C6  0E7E               	movlw	high STR_41
  4289  0050C8  0101               	movlb	1	; () banked
  4290  0050CA  6F01               	movwf	(printf@f+1)& (0+255),b
  4291  0050CC  EC5B  F000         	call	_printf	;wreg free
  4292                           
  4293                           ;screenDrawers.h: 274: printf("   Finalizado   ");
  4294  0050D0  0E74               	movlw	low STR_44
  4295  0050D2  0101               	movlb	1	; () banked
  4296  0050D4  6F00               	movwf	printf@f& (0+255),b
  4297  0050D6  0E7F               	movlw	high STR_44
  4298  0050D8  0101               	movlb	1	; () banked
  4299  0050DA  6F01               	movwf	(printf@f+1)& (0+255),b
  4300  0050DC  EC5B  F000         	call	_printf	;wreg free
  4301  0050E0  0012               	return		;funcret
  4302  0050E2                     __end_of_drawAdvOFF:
  4303                           	opt stack 0
  4304                           tblptru	equ	0xFF8
  4305                           tblptrh	equ	0xFF7
  4306                           tblptrl	equ	0xFF6
  4307                           tablat	equ	0xFF5
  4308                           prodh	equ	0xFF4
  4309                           prodl	equ	0xFF3
  4310                           intcon	equ	0xFF2
  4311                           postinc0	equ	0xFEE
  4312                           wreg	equ	0xFE8
  4313                           postdec1	equ	0xFE5
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           fsr2h	equ	0xFDA
  4317                           fsr2l	equ	0xFD9
  4318                           status	equ	0xFD8
  4319                           
  4320 ;; *************** function _printf *****************
  4321 ;; Defined at:
  4322 ;;		line 464 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  4323 ;; Parameters:    Size  Location     Type
  4324 ;;  f               2    0[BANK1 ] PTR const unsigned char 
  4325 ;;		 -> STR_48(19), STR_47(18), STR_46(18), STR_45(18), 
  4326 ;;		 -> STR_44(17), STR_43(18), STR_42(17), STR_41(18), 
  4327 ;;		 -> STR_40(17), STR_39(18), STR_38(25), STR_37(18), 
  4328 ;;		 -> STR_36(15), STR_35(18), STR_34(15), STR_33(18), 
  4329 ;;		 -> STR_32(15), STR_31(18), STR_30(16), STR_29(18), 
  4330 ;;		 -> STR_28(15), STR_27(15), STR_26(15), STR_25(18), 
  4331 ;;		 -> STR_24(20), STR_23(18), STR_22(17), STR_21(15), 
  4332 ;;		 -> STR_20(18), STR_19(15), STR_18(18), STR_17(15), 
  4333 ;;		 -> STR_16(18), STR_15(15), STR_14(18), STR_13(16), 
  4334 ;;		 -> STR_12(18), STR_11(15), STR_10(15), STR_9(15), 
  4335 ;;		 -> STR_8(18), STR_7(17), STR_6(17), STR_5(18), 
  4336 ;;		 -> STR_4(18), STR_3(17), STR_2(15), STR_1(18), 
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  fval            4   42[BANK1 ] PTR const unsigned char 
  4339 ;;  val             4   34[BANK1 ] unsigned long 
  4340 ;;  tmpval          4   30[BANK1 ] struct .
  4341 ;;  prec            2   46[BANK1 ] int 
  4342 ;;  width           2   40[BANK1 ] int 
  4343 ;;  exp             2   38[BANK1 ] int 
  4344 ;;  flag            2   28[BANK1 ] unsigned short 
  4345 ;;  ap              2   26[BANK1 ] PTR void [1]
  4346 ;;		 -> ?_printf(2), 
  4347 ;;  len             2   24[BANK1 ] unsigned int 
  4348 ;;  cp              2   22[BANK1 ] PTR const unsigned char 
  4349 ;;		 -> printf@c(1), 
  4350 ;;  c               1   48[BANK1 ] char 
  4351 ;;  d               1    0        unsigned char 
  4352 ;; Return value:  Size  Location     Type
  4353 ;;                  2    0[BANK1 ] int 
  4354 ;; Registers used:
  4355 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4356 ;; Tracked objects:
  4357 ;;		On entry : 0/0
  4358 ;;		On exit  : 0/0
  4359 ;;		Unchanged: 0/0
  4360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4361 ;;      Params:         0       0      18       0       0       0       0
  4362 ;;      Locals:         0       0      31       0       0       0       0
  4363 ;;      Temps:          0       4       0       0       0       0       0
  4364 ;;      Totals:         0       4      49       0       0       0       0
  4365 ;;Total ram usage:       53 bytes
  4366 ;; Hardware stack levels used:    1
  4367 ;; Hardware stack levels required when called:   14
  4368 ;; This function calls:
  4369 ;;		___awdiv
  4370 ;;		___fladd
  4371 ;;		___flge
  4372 ;;		___flmul
  4373 ;;		___flneg
  4374 ;;		___flsub
  4375 ;;		___fltol
  4376 ;;		___lldiv
  4377 ;;		___llmod
  4378 ;;		___wmul
  4379 ;;		___xxtofl
  4380 ;;		__div_to_l_
  4381 ;;		__tdiv_to_l_
  4382 ;;		_fround
  4383 ;;		_isdigit
  4384 ;;		_putch
  4385 ;;		_scale
  4386 ;; This function is called by:
  4387 ;;		_drawMenu
  4388 ;;		_drawChanVal
  4389 ;;		_drawPassWord
  4390 ;;		_drawBadPass
  4391 ;;		_drawAdvON
  4392 ;;		_drawAdvOFF
  4393 ;;		_drawSNquest
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text13
  4398  0000B6                     __ptext13:
  4399                           	opt stack 0
  4400  0000B6                     _printf:
  4401                           	opt stack 14
  4402                           
  4403                           ;doprnt.c: 466: va_list ap;
  4404                           ;doprnt.c: 499: signed char c;
  4405                           ;doprnt.c: 501: int width;
  4406                           ;doprnt.c: 504: int prec;
  4407                           ;doprnt.c: 508: unsigned short flag;
  4408                           ;doprnt.c: 515: char d;
  4409                           ;doprnt.c: 516: double fval;
  4410                           ;doprnt.c: 517: int exp;
  4411                           ;doprnt.c: 523: union {
  4412                           ;doprnt.c: 524: unsigned long vd;
  4413                           ;doprnt.c: 525: double integ;
  4414                           ;doprnt.c: 526: } tmpval;
  4415                           ;doprnt.c: 528: unsigned long val;
  4416                           ;doprnt.c: 529: unsigned len;
  4417                           ;doprnt.c: 530: const char * cp;
  4418                           ;doprnt.c: 533: *ap = __va_start();
  4419                           
  4420                           ;incstack = 0
  4421  0000B6  0E02               	movlw	low (?_printf+2)
  4422  0000B8  0101               	movlb	1	; () banked
  4423  0000BA  6F1A               	movwf	printf@ap& (0+255),b
  4424  0000BC  0E01               	movlw	high (?_printf+2)
  4425  0000BE  0101               	movlb	1	; () banked
  4426  0000C0  6F1B               	movwf	(printf@ap+1)& (0+255),b
  4427                           
  4428                           ;doprnt.c: 536: while(c = *f++) {
  4429  0000C2  EF82  F006         	goto	l8876
  4430  0000C6                     l8578:
  4431                           
  4432                           ; BSR set to: 1
  4433                           ;doprnt.c: 538: if(c != '%')
  4434  0000C6  0E25               	movlw	37
  4435  0000C8  0101               	movlb	1	; () banked
  4436  0000CA  1930               	xorwf	printf@c& (0+255),w,b
  4437  0000CC  B4D8               	btfsc	status,2,c
  4438  0000CE  D006               	goto	l8582
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;doprnt.c: 540: {
  4442                           ;doprnt.c: 541: (putch(c) );
  4443  0000D0  0101               	movlb	1	; () banked
  4444  0000D2  5130               	movf	printf@c& (0+255),w,b
  4445  0000D4  EC0D  F029         	call	_putch
  4446                           
  4447                           ;doprnt.c: 542: continue;
  4448  0000D8  EF82  F006         	goto	l8876
  4449  0000DC                     l8582:
  4450                           
  4451                           ;doprnt.c: 543: }
  4452                           ;doprnt.c: 546: width = 0;
  4453  0000DC  0E00               	movlw	0
  4454  0000DE  0101               	movlb	1	; () banked
  4455  0000E0  6F29               	movwf	(printf@width+1)& (0+255),b
  4456  0000E2  0E00               	movlw	0
  4457  0000E4  6F28               	movwf	printf@width& (0+255),b
  4458                           
  4459                           ;doprnt.c: 548: flag = 0;
  4460  0000E6  0E00               	movlw	0
  4461  0000E8  0101               	movlb	1	; () banked
  4462  0000EA  6F1D               	movwf	(printf@flag+1)& (0+255),b
  4463  0000EC  0E00               	movlw	0
  4464  0000EE  6F1C               	movwf	printf@flag& (0+255),b
  4465                           
  4466                           ; BSR set to: 1
  4467                           ;doprnt.c: 597: if(isdigit((unsigned)*f)) {
  4468  0000F0  C100  FFF6         	movff	printf@f,tblptrl
  4469  0000F4  C101  FFF7         	movff	printf@f+1,tblptrh
  4470  0000F8                     	if	0	;tblptru may be non-zero
  4471  0000F8                     	endif
  4472  0000F8                     	if	0	;tblptru may be non-zero
  4473  0000F8                     	endif
  4474  0000F8  0008               	tblrd		*
  4475  0000FA  50F5               	movf	tablat,w,c
  4476  0000FC  EC87  F028         	call	_isdigit
  4477  000100  A0D8               	btfss	status,0,c
  4478  000102  D040               	goto	l8596
  4479                           
  4480                           ;doprnt.c: 598: width = 0;
  4481  000104  0E00               	movlw	0
  4482  000106  0101               	movlb	1	; () banked
  4483  000108  6F29               	movwf	(printf@width+1)& (0+255),b
  4484  00010A  0E00               	movlw	0
  4485  00010C  6F28               	movwf	printf@width& (0+255),b
  4486  00010E                     l8588:
  4487                           
  4488                           ;doprnt.c: 600: width *= 10;
  4489  00010E  C128  F075         	movff	printf@width,___wmul@multiplier
  4490  000112  C129  F076         	movff	printf@width+1,___wmul@multiplier+1
  4491  000116  0E00               	movlw	0
  4492  000118  0100               	movlb	0	; () banked
  4493  00011A  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4494  00011C  0E0A               	movlw	10
  4495  00011E  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4496  000120  ECE0  F027         	call	___wmul	;wreg free
  4497  000124  C075  F128         	movff	?___wmul,printf@width
  4498  000128  C076  F129         	movff	?___wmul+1,printf@width+1
  4499                           
  4500                           ;doprnt.c: 601: width += *f++ - '0';
  4501  00012C  0ED0               	movlw	208
  4502  00012E  0100               	movlb	0	; () banked
  4503  000130  6FC5               	movwf	??_printf& (0+255),b
  4504  000132  0EFF               	movlw	255
  4505  000134  0100               	movlb	0	; () banked
  4506  000136  6FC6               	movwf	(??_printf+1)& (0+255),b
  4507  000138  C100  FFF6         	movff	printf@f,tblptrl
  4508  00013C  C101  FFF7         	movff	printf@f+1,tblptrh
  4509  000140                     	if	0	;tblptru may be non-zero
  4510  000140                     	endif
  4511  000140                     	if	0	;tblptru may be non-zero
  4512  000140                     	endif
  4513  000140  0008               	tblrd		*
  4514  000142  50F5               	movf	tablat,w,c
  4515  000144  0100               	movlb	0	; () banked
  4516  000146  6FC7               	movwf	(??_printf+2)& (0+255),b
  4517  000148  6BC8               	clrf	(??_printf+3)& (0+255),b
  4518  00014A  0100               	movlb	0	; () banked
  4519  00014C  51C5               	movf	??_printf& (0+255),w,b
  4520  00014E  0100               	movlb	0	; () banked
  4521  000150  27C7               	addwf	(??_printf+2)& (0+255),f,b
  4522  000152  0100               	movlb	0	; () banked
  4523  000154  51C6               	movf	(??_printf+1)& (0+255),w,b
  4524  000156  0100               	movlb	0	; () banked
  4525  000158  23C8               	addwfc	(??_printf+3)& (0+255),f,b
  4526  00015A  0100               	movlb	0	; () banked
  4527  00015C  51C7               	movf	(??_printf+2)& (0+255),w,b
  4528  00015E  0101               	movlb	1	; () banked
  4529  000160  2728               	addwf	printf@width& (0+255),f,b
  4530  000162  0100               	movlb	0	; () banked
  4531  000164  51C8               	movf	(??_printf+3)& (0+255),w,b
  4532  000166  0101               	movlb	1	; () banked
  4533  000168  2329               	addwfc	(printf@width+1)& (0+255),f,b
  4534                           
  4535                           ; BSR set to: 1
  4536  00016A  0101               	movlb	1	; () banked
  4537  00016C  4B00               	infsnz	printf@f& (0+255),f,b
  4538  00016E  2B01               	incf	(printf@f+1)& (0+255),f,b
  4539                           
  4540                           ; BSR set to: 1
  4541                           ;doprnt.c: 602: } while(isdigit((unsigned)*f));
  4542  000170  C100  FFF6         	movff	printf@f,tblptrl
  4543  000174  C101  FFF7         	movff	printf@f+1,tblptrh
  4544  000178                     	if	0	;tblptru may be non-zero
  4545  000178                     	endif
  4546  000178                     	if	0	;tblptru may be non-zero
  4547  000178                     	endif
  4548  000178  0008               	tblrd		*
  4549  00017A  50F5               	movf	tablat,w,c
  4550  00017C  EC87  F028         	call	_isdigit
  4551  000180  B0D8               	btfsc	status,0,c
  4552  000182  D7C5               	goto	l8588
  4553  000184                     l8596:
  4554                           
  4555                           ;doprnt.c: 608: }
  4556                           ;doprnt.c: 611: if(*f == '.') {
  4557  000184  C100  FFF6         	movff	printf@f,tblptrl
  4558  000188  C101  FFF7         	movff	printf@f+1,tblptrh
  4559  00018C                     	if	0	;tblptru may be non-zero
  4560  00018C                     	endif
  4561  00018C                     	if	0	;tblptru may be non-zero
  4562  00018C                     	endif
  4563  00018C  0008               	tblrd		*
  4564  00018E  50F5               	movf	tablat,w,c
  4565  000190  0A2E               	xorlw	46
  4566  000192  A4D8               	btfss	status,2,c
  4567  000194  D039               	goto	l8608
  4568                           
  4569                           ;doprnt.c: 612: flag |= 0x4000;
  4570  000196  0101               	movlb	1	; () banked
  4571  000198  8D1D               	bsf	(printf@flag+1)& (0+255),6,b
  4572                           
  4573                           ;doprnt.c: 613: f++;
  4574  00019A  0101               	movlb	1	; () banked
  4575  00019C  4B00               	infsnz	printf@f& (0+255),f,b
  4576  00019E  2B01               	incf	(printf@f+1)& (0+255),f,b
  4577                           
  4578                           ; BSR set to: 1
  4579                           ;doprnt.c: 620: {
  4580                           ;doprnt.c: 621: prec = 0;
  4581  0001A0  0E00               	movlw	0
  4582  0001A2  0101               	movlb	1	; () banked
  4583  0001A4  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4584  0001A6  0E00               	movlw	0
  4585  0001A8  6F2E               	movwf	printf@prec& (0+255),b
  4586                           
  4587                           ;doprnt.c: 622: while(isdigit((unsigned)*f))
  4588  0001AA  D023               	goto	l8606
  4589  0001AC                     l8602:
  4590                           
  4591                           ;doprnt.c: 623: prec = prec*10 + *f++ - '0';
  4592  0001AC  C12E  F075         	movff	printf@prec,___wmul@multiplier
  4593  0001B0  C12F  F076         	movff	printf@prec+1,___wmul@multiplier+1
  4594  0001B4  0E00               	movlw	0
  4595  0001B6  0100               	movlb	0	; () banked
  4596  0001B8  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4597  0001BA  0E0A               	movlw	10
  4598  0001BC  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4599  0001BE  ECE0  F027         	call	___wmul	;wreg free
  4600  0001C2  C100  FFF6         	movff	printf@f,tblptrl
  4601  0001C6  C101  FFF7         	movff	printf@f+1,tblptrh
  4602  0001CA                     	if	0	;tblptru may be non-zero
  4603  0001CA                     	endif
  4604  0001CA                     	if	0	;tblptru may be non-zero
  4605  0001CA                     	endif
  4606  0001CA  0008               	tblrd		*
  4607  0001CC  50F5               	movf	tablat,w,c
  4608  0001CE  0100               	movlb	0	; () banked
  4609  0001D0  2775               	addwf	?___wmul& (0+255),f,b
  4610  0001D2  0E00               	movlw	0
  4611  0001D4  0100               	movlb	0	; () banked
  4612  0001D6  2376               	addwfc	(?___wmul+1)& (0+255),f,b
  4613  0001D8  0ED0               	movlw	208
  4614  0001DA  0100               	movlb	0	; () banked
  4615  0001DC  2575               	addwf	?___wmul& (0+255),w,b
  4616  0001DE  0101               	movlb	1	; () banked
  4617  0001E0  6F2E               	movwf	printf@prec& (0+255),b
  4618  0001E2  0EFF               	movlw	255
  4619  0001E4  0100               	movlb	0	; () banked
  4620  0001E6  2176               	addwfc	(?___wmul+1)& (0+255),w,b
  4621  0001E8  0101               	movlb	1	; () banked
  4622  0001EA  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4623                           
  4624                           ; BSR set to: 1
  4625  0001EC  0101               	movlb	1	; () banked
  4626  0001EE  4B00               	infsnz	printf@f& (0+255),f,b
  4627  0001F0  2B01               	incf	(printf@f+1)& (0+255),f,b
  4628  0001F2                     l8606:
  4629                           
  4630                           ; BSR set to: 1
  4631  0001F2  C100  FFF6         	movff	printf@f,tblptrl
  4632  0001F6  C101  FFF7         	movff	printf@f+1,tblptrh
  4633  0001FA                     	if	0	;tblptru may be non-zero
  4634  0001FA                     	endif
  4635  0001FA                     	if	0	;tblptru may be non-zero
  4636  0001FA                     	endif
  4637  0001FA  0008               	tblrd		*
  4638  0001FC  50F5               	movf	tablat,w,c
  4639  0001FE  EC87  F028         	call	_isdigit
  4640  000202  A0D8               	btfss	status,0,c
  4641  000204  D07A               	goto	l8648
  4642  000206  D7D2               	goto	l8602
  4643  000208                     l8608:
  4644                           
  4645                           ;doprnt.c: 626: prec = 0;
  4646  000208  0E00               	movlw	0
  4647  00020A  0101               	movlb	1	; () banked
  4648  00020C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4649  00020E  0E00               	movlw	0
  4650  000210  6F2E               	movwf	printf@prec& (0+255),b
  4651                           
  4652                           ; BSR set to: 1
  4653                           ;doprnt.c: 628: flag |= 0x1000;
  4654  000212  0101               	movlb	1	; () banked
  4655  000214  891D               	bsf	(printf@flag+1)& (0+255),4,b
  4656                           
  4657                           ; BSR set to: 1
  4658                           ;doprnt.c: 630: }
  4659                           ;doprnt.c: 635: switch(c = *f++) {
  4660  000216  D071               	goto	l8648
  4661  000218                     l8612:
  4662                           
  4663                           ; BSR set to: 1
  4664                           ;doprnt.c: 663: flag |= 0x400;
  4665  000218  0101               	movlb	1	; () banked
  4666  00021A  851D               	bsf	(printf@flag+1)& (0+255),2,b
  4667                           
  4668                           ; BSR set to: 1
  4669                           ;doprnt.c: 698: case 'i':
  4670                           ;doprnt.c: 699: break;
  4671                           
  4672                           ; BSR set to: 1
  4673                           
  4674                           ;doprnt.c: 697: case 'd':
  4675                           
  4676                           ;doprnt.c: 664: break;
  4677  00021C  D08D               	goto	l8650
  4678  00021E                     l8614:
  4679                           
  4680                           ; BSR set to: 1
  4681                           ;doprnt.c: 753: if(prec && prec < len)
  4682  00021E  0101               	movlb	1	; () banked
  4683  000220  512E               	movf	printf@prec& (0+255),w,b
  4684  000222  0101               	movlb	1	; () banked
  4685  000224  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  4686  000226  B4D8               	btfsc	status,2,c
  4687  000228  D00E               	goto	l8620
  4688                           
  4689                           ; BSR set to: 1
  4690  00022A  0101               	movlb	1	; () banked
  4691  00022C  5118               	movf	printf@len& (0+255),w,b
  4692  00022E  0101               	movlb	1	; () banked
  4693  000230  5D2E               	subwf	printf@prec& (0+255),w,b
  4694  000232  0101               	movlb	1	; () banked
  4695  000234  5119               	movf	(printf@len+1)& (0+255),w,b
  4696  000236  0101               	movlb	1	; () banked
  4697  000238  592F               	subwfb	(printf@prec+1)& (0+255),w,b
  4698  00023A  B0D8               	btfsc	status,0,c
  4699  00023C  D004               	goto	l8620
  4700                           
  4701                           ; BSR set to: 1
  4702                           ;doprnt.c: 754: len = prec;
  4703  00023E  C12E  F118         	movff	printf@prec,printf@len
  4704  000242  C12F  F119         	movff	printf@prec+1,printf@len+1
  4705  000246                     l8620:
  4706                           
  4707                           ; BSR set to: 1
  4708                           ;doprnt.c: 757: if(width > len)
  4709  000246  0101               	movlb	1	; () banked
  4710  000248  5128               	movf	printf@width& (0+255),w,b
  4711  00024A  0101               	movlb	1	; () banked
  4712  00024C  5D18               	subwf	printf@len& (0+255),w,b
  4713  00024E  0101               	movlb	1	; () banked
  4714  000250  5129               	movf	(printf@width+1)& (0+255),w,b
  4715  000252  0101               	movlb	1	; () banked
  4716  000254  5919               	subwfb	(printf@len+1)& (0+255),w,b
  4717  000256  B0D8               	btfsc	status,0,c
  4718  000258  D009               	goto	l8624
  4719                           
  4720                           ; BSR set to: 1
  4721                           ;doprnt.c: 758: width -= len;
  4722  00025A  0101               	movlb	1	; () banked
  4723  00025C  5118               	movf	printf@len& (0+255),w,b
  4724  00025E  0101               	movlb	1	; () banked
  4725  000260  5F28               	subwf	printf@width& (0+255),f,b
  4726  000262  0101               	movlb	1	; () banked
  4727  000264  5119               	movf	(printf@len+1)& (0+255),w,b
  4728  000266  0101               	movlb	1	; () banked
  4729  000268  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  4730  00026A  D009               	goto	l8628
  4731  00026C                     l8624:
  4732                           
  4733                           ; BSR set to: 1
  4734                           ;doprnt.c: 759: else
  4735                           ;doprnt.c: 760: width = 0;
  4736  00026C  0E00               	movlw	0
  4737  00026E  0101               	movlb	1	; () banked
  4738  000270  6F29               	movwf	(printf@width+1)& (0+255),b
  4739  000272  0E00               	movlw	0
  4740  000274  6F28               	movwf	printf@width& (0+255),b
  4741                           
  4742                           ; BSR set to: 1
  4743                           ;doprnt.c: 764: while(width--)
  4744  000276  D003               	goto	l8628
  4745  000278                     l8626:
  4746                           
  4747                           ; BSR set to: 1
  4748                           ;doprnt.c: 765: (putch(' ') );
  4749  000278  0E20               	movlw	32
  4750  00027A  EC0D  F029         	call	_putch
  4751  00027E                     l8628:
  4752  00027E  0101               	movlb	1	; () banked
  4753  000280  0728               	decf	printf@width& (0+255),f,b
  4754  000282  A0D8               	btfss	status,0,c
  4755  000284  0729               	decf	(printf@width+1)& (0+255),f,b
  4756  000286  0101               	movlb	1	; () banked
  4757  000288  2928               	incf	printf@width& (0+255),w,b
  4758  00028A  E1F6               	bnz	l8626
  4759  00028C  0101               	movlb	1	; () banked
  4760  00028E  2929               	incf	(printf@width+1)& (0+255),w,b
  4761  000290  B4D8               	btfsc	status,2,c
  4762  000292  D00B               	goto	l8634
  4763  000294  D7F1               	goto	l8626
  4764  000296                     l8630:
  4765                           
  4766                           ; BSR set to: 1
  4767                           ;doprnt.c: 768: (putch(*cp++) );
  4768  000296  C116  FFD9         	movff	printf@cp,fsr2l
  4769  00029A  C117  FFDA         	movff	printf@cp+1,fsr2h
  4770  00029E  50DF               	movf	indf2,w,c
  4771  0002A0  EC0D  F029         	call	_putch
  4772  0002A4  0101               	movlb	1	; () banked
  4773  0002A6  4B16               	infsnz	printf@cp& (0+255),f,b
  4774  0002A8  2B17               	incf	(printf@cp+1)& (0+255),f,b
  4775  0002AA                     l8634:
  4776                           
  4777                           ; BSR set to: 1
  4778  0002AA  0101               	movlb	1	; () banked
  4779  0002AC  0718               	decf	printf@len& (0+255),f,b
  4780  0002AE  A0D8               	btfss	status,0,c
  4781  0002B0  0719               	decf	(printf@len+1)& (0+255),f,b
  4782  0002B2  0101               	movlb	1	; () banked
  4783  0002B4  2918               	incf	printf@len& (0+255),w,b
  4784  0002B6  E1EF               	bnz	l8630
  4785  0002B8  0101               	movlb	1	; () banked
  4786  0002BA  2919               	incf	(printf@len+1)& (0+255),w,b
  4787  0002BC  B4D8               	btfsc	status,2,c
  4788  0002BE  EF82  F006         	goto	l8876
  4789  0002C2  D7E9               	goto	l8630
  4790  0002C4                     l8636:
  4791                           
  4792                           ; BSR set to: 1
  4793                           ;doprnt.c: 799: c = (*(int *)__va_arg((*(int **)ap), (int)0));
  4794  0002C4  C11A  FFD9         	movff	printf@ap,fsr2l
  4795  0002C8  C11B  FFDA         	movff	printf@ap+1,fsr2h
  4796  0002CC  50DF               	movf	indf2,w,c
  4797  0002CE  0101               	movlb	1	; () banked
  4798  0002D0  6F30               	movwf	printf@c& (0+255),b
  4799                           
  4800                           ; BSR set to: 1
  4801  0002D2  0E02               	movlw	2
  4802  0002D4  0101               	movlb	1	; () banked
  4803  0002D6  271A               	addwf	printf@ap& (0+255),f,b
  4804  0002D8  0E00               	movlw	0
  4805  0002DA  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  4806  0002DC                     l8640:
  4807                           
  4808                           ; BSR set to: 1
  4809                           ;doprnt.c: 805: cp = (char *)&c;
  4810  0002DC  0E30               	movlw	low printf@c
  4811  0002DE  0101               	movlb	1	; () banked
  4812  0002E0  6F16               	movwf	printf@cp& (0+255),b
  4813  0002E2  0E01               	movlw	high printf@c
  4814  0002E4  0101               	movlb	1	; () banked
  4815  0002E6  6F17               	movwf	(printf@cp+1)& (0+255),b
  4816                           
  4817                           ; BSR set to: 1
  4818                           ;doprnt.c: 806: len = 1;
  4819  0002E8  0E00               	movlw	0
  4820  0002EA  0101               	movlb	1	; () banked
  4821  0002EC  6F19               	movwf	(printf@len+1)& (0+255),b
  4822  0002EE  0E01               	movlw	1
  4823  0002F0  6F18               	movwf	printf@len& (0+255),b
  4824                           
  4825                           ;doprnt.c: 807: goto dostring;
  4826  0002F2  D795               	goto	l8614
  4827  0002F4                     l8644:
  4828                           
  4829                           ; BSR set to: 1
  4830                           ;doprnt.c: 818: flag |= 0x40;
  4831  0002F4  0101               	movlb	1	; () banked
  4832  0002F6  8D1C               	bsf	printf@flag& (0+255),6,b
  4833                           
  4834                           ; BSR set to: 1
  4835                           ;doprnt.c: 822: }
  4836                           
  4837                           ;doprnt.c: 819: break;
  4838  0002F8  D01F               	goto	l8650
  4839  0002FA                     l8648:
  4840  0002FA  C100  FFF6         	movff	printf@f,tblptrl
  4841  0002FE  C101  FFF7         	movff	printf@f+1,tblptrh
  4842  000302  0101               	movlb	1	; () banked
  4843  000304  4B00               	infsnz	printf@f& (0+255),f,b
  4844  000306  2B01               	incf	(printf@f+1)& (0+255),f,b
  4845  000308                     	if	0	;tblptru may be non-zero
  4846  000308                     	endif
  4847  000308                     	if	0	;tblptru may be non-zero
  4848  000308                     	endif
  4849  000308  0008               	tblrd		*
  4850  00030A  CFF5 F130          	movff	tablat,printf@c
  4851  00030E  0101               	movlb	1	; () banked
  4852  000310  5130               	movf	printf@c& (0+255),w,b
  4853                           
  4854                           ; Switch size 1, requested type "space"
  4855                           ; Number of cases is 6, Range of values is 0 to 117
  4856                           ; switch strategies available:
  4857                           ; Name         Instructions Cycles
  4858                           ; simple_byte           19    10 (average)
  4859                           ;	Chosen strategy is simple_byte
  4860  000312  0A00               	xorlw	0	; case 0
  4861  000314  B4D8               	btfsc	status,2,c
  4862  000316  0012               	return	
  4863  000318  0A63               	xorlw	99	; case 99
  4864  00031A  B4D8               	btfsc	status,2,c
  4865  00031C  D7D3               	goto	l8636
  4866  00031E  0A07               	xorlw	7	; case 100
  4867  000320  B4D8               	btfsc	status,2,c
  4868  000322  D00A               	goto	l8650
  4869  000324  0A02               	xorlw	2	; case 102
  4870  000326  B4D8               	btfsc	status,2,c
  4871  000328  D777               	goto	l8612
  4872  00032A  0A0F               	xorlw	15	; case 105
  4873  00032C  B4D8               	btfsc	status,2,c
  4874  00032E  D004               	goto	l8650
  4875  000330  0A1C               	xorlw	28	; case 117
  4876  000332  B4D8               	btfsc	status,2,c
  4877  000334  D7DF               	goto	l8644
  4878  000336  D7D2               	goto	l8640
  4879  000338                     l8650:
  4880                           
  4881                           ; BSR set to: 1
  4882                           ;doprnt.c: 825: if(flag & (0x700)) {
  4883  000338  0E07               	movlw	7
  4884  00033A  0101               	movlb	1	; () banked
  4885  00033C  151D               	andwf	(printf@flag+1)& (0+255),w,b
  4886  00033E  B4D8               	btfsc	status,2,c
  4887  000340  D36F               	goto	l794
  4888                           
  4889                           ; BSR set to: 1
  4890                           ;doprnt.c: 827: if(flag & 0x1000)
  4891  000342  0101               	movlb	1	; () banked
  4892  000344  A91D               	btfss	(printf@flag+1)& (0+255),4,b
  4893  000346  D005               	goto	l8656
  4894                           
  4895                           ; BSR set to: 1
  4896                           ;doprnt.c: 829: prec = 6;
  4897  000348  0E00               	movlw	0
  4898  00034A  0101               	movlb	1	; () banked
  4899  00034C  6F2F               	movwf	(printf@prec+1)& (0+255),b
  4900  00034E  0E06               	movlw	6
  4901  000350  6F2E               	movwf	printf@prec& (0+255),b
  4902  000352                     l8656:
  4903                           
  4904                           ; BSR set to: 1
  4905                           ;doprnt.c: 830: fval = (*(double *)__va_arg((*(double **)ap), (double)0));
  4906  000352  C11A  FFD9         	movff	printf@ap,fsr2l
  4907  000356  C11B  FFDA         	movff	printf@ap+1,fsr2h
  4908  00035A  CFDE F12A          	movff	postinc2,printf@fval
  4909  00035E  CFDE F12B          	movff	postinc2,printf@fval+1
  4910  000362  CFDE F12C          	movff	postinc2,printf@fval+2
  4911  000366  CFDE F12D          	movff	postinc2,printf@fval+3
  4912                           
  4913                           ; BSR set to: 1
  4914  00036A  0E04               	movlw	4
  4915  00036C  0101               	movlb	1	; () banked
  4916  00036E  271A               	addwf	printf@ap& (0+255),f,b
  4917  000370  0E00               	movlw	0
  4918  000372  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  4919                           
  4920                           ; BSR set to: 1
  4921                           ;doprnt.c: 831: if(fval < 0.0) {
  4922  000374  0101               	movlb	1	; () banked
  4923  000376  AF2D               	btfss	(printf@fval+3)& (0+255),7,b
  4924  000378  D015               	goto	l8666
  4925                           
  4926                           ; BSR set to: 1
  4927                           ;doprnt.c: 832: fval = -fval;
  4928  00037A  C12A  F075         	movff	printf@fval,___flneg@f1
  4929  00037E  C12B  F076         	movff	printf@fval+1,___flneg@f1+1
  4930  000382  C12C  F077         	movff	printf@fval+2,___flneg@f1+2
  4931  000386  C12D  F078         	movff	printf@fval+3,___flneg@f1+3
  4932  00038A  ECA8  F027         	call	___flneg	;wreg free
  4933  00038E  C075  F12A         	movff	?___flneg,printf@fval
  4934  000392  C076  F12B         	movff	?___flneg+1,printf@fval+1
  4935  000396  C077  F12C         	movff	?___flneg+2,printf@fval+2
  4936  00039A  C078  F12D         	movff	?___flneg+3,printf@fval+3
  4937                           
  4938                           ;doprnt.c: 833: flag |= 0x03;
  4939  00039E  0E03               	movlw	3
  4940  0003A0  0101               	movlb	1	; () banked
  4941  0003A2  131C               	iorwf	printf@flag& (0+255),f,b
  4942  0003A4                     l8666:
  4943                           
  4944                           ; BSR set to: 1
  4945                           ;doprnt.c: 834: }
  4946                           ;doprnt.c: 835: exp = 0;
  4947  0003A4  0E00               	movlw	0
  4948  0003A6  0101               	movlb	1	; () banked
  4949  0003A8  6F27               	movwf	(printf@exp+1)& (0+255),b
  4950  0003AA  0E00               	movlw	0
  4951  0003AC  6F26               	movwf	printf@exp& (0+255),b
  4952                           
  4953                           ; BSR set to: 1
  4954                           ;doprnt.c: 836: if( fval!=0) {
  4955  0003AE  0101               	movlb	1	; () banked
  4956  0003B0  512A               	movf	printf@fval& (0+255),w,b
  4957  0003B2  0101               	movlb	1	; () banked
  4958  0003B4  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  4959  0003B6  0101               	movlb	1	; () banked
  4960  0003B8  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  4961  0003BA  0101               	movlb	1	; () banked
  4962  0003BC  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  4963  0003BE  B4D8               	btfsc	status,2,c
  4964  0003C0  D08E               	goto	l8694
  4965                           
  4966                           ; BSR set to: 1
  4967                           ;doprnt.c: 837: (void)(*(&exp) = (unsigned char)((*(unsigned long *)&fval >> 23) & 255) 
      +                          - 126);
  4968  0003C2  0101               	movlb	1	; () banked
  4969  0003C4  352C               	rlcf	(printf@fval+2)& (0+255),w,b
  4970  0003C6  352D               	rlcf	(printf@fval+3)& (0+255),w,b
  4971  0003C8  0F82               	addlw	130
  4972  0003CA  0101               	movlb	1	; () banked
  4973  0003CC  6F26               	movwf	printf@exp& (0+255),b
  4974  0003CE  0101               	movlb	1	; () banked
  4975  0003D0  6B27               	clrf	(printf@exp+1)& (0+255),b
  4976  0003D2  0EFF               	movlw	255
  4977  0003D4  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  4978                           
  4979                           ; BSR set to: 1
  4980                           ;doprnt.c: 838: exp--;
  4981  0003D6  0101               	movlb	1	; () banked
  4982  0003D8  0726               	decf	printf@exp& (0+255),f,b
  4983  0003DA  A0D8               	btfss	status,0,c
  4984  0003DC  0727               	decf	(printf@exp+1)& (0+255),f,b
  4985                           
  4986                           ; BSR set to: 1
  4987                           ;doprnt.c: 839: exp *= 3;
  4988  0003DE  C126  F075         	movff	printf@exp,___wmul@multiplier
  4989  0003E2  C127  F076         	movff	printf@exp+1,___wmul@multiplier+1
  4990  0003E6  0E00               	movlw	0
  4991  0003E8  0100               	movlb	0	; () banked
  4992  0003EA  6F78               	movwf	(___wmul@multiplicand+1)& (0+255),b
  4993  0003EC  0E03               	movlw	3
  4994  0003EE  6F77               	movwf	___wmul@multiplicand& (0+255),b
  4995  0003F0  ECE0  F027         	call	___wmul	;wreg free
  4996  0003F4  C075  F126         	movff	?___wmul,printf@exp
  4997  0003F8  C076  F127         	movff	?___wmul+1,printf@exp+1
  4998                           
  4999                           ;doprnt.c: 840: exp /= 10;
  5000  0003FC  C126  F07B         	movff	printf@exp,___awdiv@dividend
  5001  000400  C127  F07C         	movff	printf@exp+1,___awdiv@dividend+1
  5002  000404  0E00               	movlw	0
  5003  000406  0100               	movlb	0	; () banked
  5004  000408  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  5005  00040A  0E0A               	movlw	10
  5006  00040C  6F7D               	movwf	___awdiv@divisor& (0+255),b
  5007  00040E  EC25  F022         	call	___awdiv	;wreg free
  5008  000412  C07B  F126         	movff	?___awdiv,printf@exp
  5009  000416  C07C  F127         	movff	?___awdiv+1,printf@exp+1
  5010                           
  5011                           ;doprnt.c: 841: if(exp < 0)
  5012  00041A  0101               	movlb	1	; () banked
  5013  00041C  AF27               	btfss	(printf@exp+1)& (0+255),7,b
  5014  00041E  D004               	goto	l8682
  5015                           
  5016                           ; BSR set to: 1
  5017                           ;doprnt.c: 842: exp--;
  5018  000420  0101               	movlb	1	; () banked
  5019  000422  0726               	decf	printf@exp& (0+255),f,b
  5020  000424  A0D8               	btfss	status,0,c
  5021  000426  0727               	decf	(printf@exp+1)& (0+255),f,b
  5022  000428                     l8682:
  5023                           
  5024                           ; BSR set to: 1
  5025                           ;doprnt.c: 846: tmpval.integ = scale(-exp);
  5026  000428  0101               	movlb	1	; () banked
  5027  00042A  5126               	movf	printf@exp& (0+255),w,b
  5028  00042C  0800               	sublw	0
  5029  00042E  EC92  F006         	call	_scale
  5030  000432  C09C  F11E         	movff	?_scale,printf@tmpval
  5031  000436  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  5032  00043A  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  5033  00043E  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  5034                           
  5035                           ;doprnt.c: 847: tmpval.integ *= fval;
  5036  000442  C11E  F083         	movff	printf@tmpval,___flmul@b
  5037  000446  C11F  F084         	movff	printf@tmpval+1,___flmul@b+1
  5038  00044A  C120  F085         	movff	printf@tmpval+2,___flmul@b+2
  5039  00044E  C121  F086         	movff	printf@tmpval+3,___flmul@b+3
  5040  000452  C12A  F087         	movff	printf@fval,___flmul@a
  5041  000456  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  5042  00045A  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  5043  00045E  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  5044  000462  EC4F  F00B         	call	___flmul	;wreg free
  5045  000466  C083  F11E         	movff	?___flmul,printf@tmpval
  5046  00046A  C084  F11F         	movff	?___flmul+1,printf@tmpval+1
  5047  00046E  C085  F120         	movff	?___flmul+2,printf@tmpval+2
  5048  000472  C086  F121         	movff	?___flmul+3,printf@tmpval+3
  5049                           
  5050                           ;doprnt.c: 848: if(tmpval.integ < 1.0)
  5051  000476  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5052  00047A  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5053  00047E  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5054  000482  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5055  000486  0E00               	movlw	0
  5056  000488  0100               	movlb	0	; () banked
  5057  00048A  6F79               	movwf	___flge@ff2& (0+255),b
  5058  00048C  0E00               	movlw	0
  5059  00048E  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5060  000490  0E80               	movlw	128
  5061  000492  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5062  000494  0E3F               	movlw	63
  5063  000496  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5064  000498  ECEC  F019         	call	___flge	;wreg free
  5065  00049C  0100               	movlb	0	; () banked
  5066  00049E  B0D8               	btfsc	status,0,c
  5067  0004A0  D005               	goto	l8690
  5068                           
  5069                           ; BSR set to: 0
  5070                           ;doprnt.c: 849: exp--;
  5071  0004A2  0101               	movlb	1	; () banked
  5072  0004A4  0726               	decf	printf@exp& (0+255),f,b
  5073  0004A6  A0D8               	btfss	status,0,c
  5074  0004A8  0727               	decf	(printf@exp+1)& (0+255),f,b
  5075  0004AA  D019               	goto	l8694
  5076  0004AC                     l8690:
  5077                           
  5078                           ;doprnt.c: 850: else if(tmpval.integ >= 10.0)
  5079  0004AC  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5080  0004B0  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5081  0004B4  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5082  0004B8  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5083  0004BC  0E00               	movlw	0
  5084  0004BE  0100               	movlb	0	; () banked
  5085  0004C0  6F79               	movwf	___flge@ff2& (0+255),b
  5086  0004C2  0E00               	movlw	0
  5087  0004C4  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5088  0004C6  0E20               	movlw	32
  5089  0004C8  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5090  0004CA  0E41               	movlw	65
  5091  0004CC  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5092  0004CE  ECEC  F019         	call	___flge	;wreg free
  5093  0004D2  0100               	movlb	0	; () banked
  5094  0004D4  A0D8               	btfss	status,0,c
  5095  0004D6  D003               	goto	l8694
  5096                           
  5097                           ; BSR set to: 0
  5098                           ;doprnt.c: 851: exp++;
  5099  0004D8  0101               	movlb	1	; () banked
  5100  0004DA  4B26               	infsnz	printf@exp& (0+255),f,b
  5101  0004DC  2B27               	incf	(printf@exp+1)& (0+255),f,b
  5102  0004DE                     l8694:
  5103                           
  5104                           ;doprnt.c: 852: }
  5105                           ;doprnt.c: 1112: if(prec <= 12)
  5106  0004DE  0101               	movlb	1	; () banked
  5107  0004E0  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  5108  0004E2  D008               	goto	l8696
  5109  0004E4  0101               	movlb	1	; () banked
  5110  0004E6  512F               	movf	(printf@prec+1)& (0+255),w,b
  5111  0004E8  E123               	bnz	l8698
  5112  0004EA  0E0D               	movlw	13
  5113  0004EC  0101               	movlb	1	; () banked
  5114  0004EE  5D2E               	subwf	printf@prec& (0+255),w,b
  5115  0004F0  B0D8               	btfsc	status,0,c
  5116  0004F2  D01E               	goto	l8698
  5117  0004F4                     l8696:
  5118                           
  5119                           ; BSR set to: 1
  5120                           ;doprnt.c: 1113: fval += fround(prec);
  5121  0004F4  C12A  F0A9         	movff	printf@fval,___fladd@b
  5122  0004F8  C12B  F0AA         	movff	printf@fval+1,___fladd@b+1
  5123  0004FC  C12C  F0AB         	movff	printf@fval+2,___fladd@b+2
  5124  000500  C12D  F0AC         	movff	printf@fval+3,___fladd@b+3
  5125  000504  0101               	movlb	1	; () banked
  5126  000506  512E               	movf	printf@prec& (0+255),w,b
  5127  000508  ECEB  F012         	call	_fround
  5128  00050C  C09C  F0AD         	movff	?_fround,___fladd@a
  5129  000510  C09D  F0AE         	movff	?_fround+1,___fladd@a+1
  5130  000514  C09E  F0AF         	movff	?_fround+2,___fladd@a+2
  5131  000518  C09F  F0B0         	movff	?_fround+3,___fladd@a+3
  5132  00051C  ECFB  F008         	call	___fladd	;wreg free
  5133  000520  C0A9  F12A         	movff	?___fladd,printf@fval
  5134  000524  C0AA  F12B         	movff	?___fladd+1,printf@fval+1
  5135  000528  C0AB  F12C         	movff	?___fladd+2,printf@fval+2
  5136  00052C  C0AC  F12D         	movff	?___fladd+3,printf@fval+3
  5137  000530                     l8698:
  5138                           
  5139                           ;doprnt.c: 1116: if((exp > 9)||(fval != 0 && (unsigned long)fval == 0 && exp > 1)) {
  5140  000530  0101               	movlb	1	; () banked
  5141  000532  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5142  000534  D008               	goto	l8700
  5143  000536  0101               	movlb	1	; () banked
  5144  000538  5127               	movf	(printf@exp+1)& (0+255),w,b
  5145  00053A  E12E               	bnz	l8706
  5146  00053C  0E0A               	movlw	10
  5147  00053E  0101               	movlb	1	; () banked
  5148  000540  5D26               	subwf	printf@exp& (0+255),w,b
  5149  000542  B0D8               	btfsc	status,0,c
  5150  000544  D029               	goto	l8706
  5151  000546                     l8700:
  5152                           
  5153                           ; BSR set to: 1
  5154  000546  0101               	movlb	1	; () banked
  5155  000548  512A               	movf	printf@fval& (0+255),w,b
  5156  00054A  0101               	movlb	1	; () banked
  5157  00054C  112B               	iorwf	(printf@fval+1)& (0+255),w,b
  5158  00054E  0101               	movlb	1	; () banked
  5159  000550  112C               	iorwf	(printf@fval+2)& (0+255),w,b
  5160  000552  0101               	movlb	1	; () banked
  5161  000554  112D               	iorwf	(printf@fval+3)& (0+255),w,b
  5162  000556  B4D8               	btfsc	status,2,c
  5163  000558  D06D               	goto	l8720
  5164                           
  5165                           ; BSR set to: 1
  5166  00055A  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5167  00055E  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5168  000562  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5169  000566  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5170  00056A  EC2C  F01F         	call	___fltol	;wreg free
  5171  00056E  0100               	movlb	0	; () banked
  5172  000570  51A5               	movf	?___fltol& (0+255),w,b
  5173  000572  0100               	movlb	0	; () banked
  5174  000574  11A6               	iorwf	(?___fltol+1)& (0+255),w,b
  5175  000576  0100               	movlb	0	; () banked
  5176  000578  11A7               	iorwf	(?___fltol+2)& (0+255),w,b
  5177  00057A  0100               	movlb	0	; () banked
  5178  00057C  11A8               	iorwf	(?___fltol+3)& (0+255),w,b
  5179  00057E  A4D8               	btfss	status,2,c
  5180  000580  D059               	goto	l8720
  5181                           
  5182                           ; BSR set to: 0
  5183  000582  0101               	movlb	1	; () banked
  5184  000584  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5185  000586  D056               	goto	l8720
  5186  000588  0101               	movlb	1	; () banked
  5187  00058A  5127               	movf	(printf@exp+1)& (0+255),w,b
  5188  00058C  E105               	bnz	l8706
  5189  00058E  0E02               	movlw	2
  5190  000590  0101               	movlb	1	; () banked
  5191  000592  5D26               	subwf	printf@exp& (0+255),w,b
  5192  000594  A0D8               	btfss	status,0,c
  5193  000596  D04E               	goto	l8720
  5194  000598                     l8706:
  5195                           
  5196                           ; BSR set to: 1
  5197                           ;doprnt.c: 1120: if(tmpval.integ < 4.294967296){
  5198  000598  C11E  F075         	movff	printf@tmpval,___flge@ff1
  5199  00059C  C11F  F076         	movff	printf@tmpval+1,___flge@ff1+1
  5200  0005A0  C120  F077         	movff	printf@tmpval+2,___flge@ff1+2
  5201  0005A4  C121  F078         	movff	printf@tmpval+3,___flge@ff1+3
  5202  0005A8  0E5F               	movlw	95
  5203  0005AA  0100               	movlb	0	; () banked
  5204  0005AC  6F79               	movwf	___flge@ff2& (0+255),b
  5205  0005AE  0E70               	movlw	112
  5206  0005B0  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
  5207  0005B2  0E89               	movlw	137
  5208  0005B4  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
  5209  0005B6  0E40               	movlw	64
  5210  0005B8  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
  5211  0005BA  ECEC  F019         	call	___flge	;wreg free
  5212  0005BE  0100               	movlb	0	; () banked
  5213  0005C0  B0D8               	btfsc	status,0,c
  5214  0005C2  D003               	goto	l8710
  5215                           
  5216                           ; BSR set to: 0
  5217                           ;doprnt.c: 1121: exp -= (sizeof dpowers/sizeof dpowers[0])-1;
  5218  0005C4  0101               	movlb	1	; () banked
  5219  0005C6  0EF7               	movlw	247
  5220  0005C8  D002               	goto	L1
  5221  0005CA                     l8710:
  5222                           
  5223                           ;doprnt.c: 1123: exp -= (sizeof dpowers/sizeof dpowers[0])-2;
  5224  0005CA  0101               	movlb	1	; () banked
  5225  0005CC  0EF8               	movlw	248
  5226  0005CE                     L1:
  5227  0005CE  2726               	addwf	printf@exp& (0+255),f,b
  5228  0005D0  0EFF               	movlw	255
  5229  0005D2  2327               	addwfc	(printf@exp+1)& (0+255),f,b
  5230                           
  5231                           ; BSR set to: 1
  5232                           ;doprnt.c: 1126: val = ((sizeof(double)== 3) ? _tdiv_to_l_(fval,tmpval.integ) : _div_to_
      +                          l_(fval,tmpval.integ));
  5233                           
  5234                           ; BSR set to: 1
  5235  0005D4  0101               	movlb	1	; () banked
  5236  0005D6  5126               	movf	printf@exp& (0+255),w,b
  5237  0005D8  EC92  F006         	call	_scale
  5238  0005DC  C09C  F11E         	movff	?_scale,printf@tmpval
  5239  0005E0  C09D  F11F         	movff	?_scale+1,printf@tmpval+1
  5240  0005E4  C09E  F120         	movff	?_scale+2,printf@tmpval+2
  5241  0005E8  C09F  F121         	movff	?_scale+3,printf@tmpval+3
  5242  0005EC  C12A  F075         	movff	printf@fval,__div_to_l_@f1
  5243  0005F0  C12B  F076         	movff	printf@fval+1,__div_to_l_@f1+1
  5244  0005F4  C12C  F077         	movff	printf@fval+2,__div_to_l_@f1+2
  5245  0005F8  C12D  F078         	movff	printf@fval+3,__div_to_l_@f1+3
  5246  0005FC  C11E  F079         	movff	printf@tmpval,__div_to_l_@f2
  5247  000600  C11F  F07A         	movff	printf@tmpval+1,__div_to_l_@f2+1
  5248  000604  C120  F07B         	movff	printf@tmpval+2,__div_to_l_@f2+2
  5249  000608  C121  F07C         	movff	printf@tmpval+3,__div_to_l_@f2+3
  5250  00060C  ECB4  F01A         	call	__div_to_l_	;wreg free
  5251  000610  C075  F122         	movff	?__div_to_l_,printf@val
  5252  000614  C076  F123         	movff	?__div_to_l_+1,printf@val+1
  5253  000618  C077  F124         	movff	?__div_to_l_+2,printf@val+2
  5254  00061C  C078  F125         	movff	?__div_to_l_+3,printf@val+3
  5255                           
  5256                           ;doprnt.c: 1129: fval = 0.0;
  5257  000620  0E00               	movlw	0
  5258  000622  0101               	movlb	1	; () banked
  5259  000624  6F2A               	movwf	printf@fval& (0+255),b
  5260  000626  0E00               	movlw	0
  5261  000628  6F2B               	movwf	(printf@fval+1)& (0+255),b
  5262  00062A  0E00               	movlw	0
  5263  00062C  6F2C               	movwf	(printf@fval+2)& (0+255),b
  5264  00062E  0E00               	movlw	0
  5265  000630  6F2D               	movwf	(printf@fval+3)& (0+255),b
  5266                           
  5267                           ;doprnt.c: 1130: } else {
  5268  000632  D03C               	goto	l8724
  5269  000634                     l8720:
  5270                           
  5271                           ;doprnt.c: 1131: val = (unsigned long)fval;
  5272  000634  C12A  F0A5         	movff	printf@fval,___fltol@f1
  5273  000638  C12B  F0A6         	movff	printf@fval+1,___fltol@f1+1
  5274  00063C  C12C  F0A7         	movff	printf@fval+2,___fltol@f1+2
  5275  000640  C12D  F0A8         	movff	printf@fval+3,___fltol@f1+3
  5276  000644  EC2C  F01F         	call	___fltol	;wreg free
  5277  000648  C0A5  F122         	movff	?___fltol,printf@val
  5278  00064C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  5279  000650  C0A7  F124         	movff	?___fltol+2,printf@val+2
  5280  000654  C0A8  F125         	movff	?___fltol+3,printf@val+3
  5281                           
  5282                           ;doprnt.c: 1132: fval -= (double)val;
  5283  000658  C12A  F0BD         	movff	printf@fval,___flsub@b
  5284  00065C  C12B  F0BE         	movff	printf@fval+1,___flsub@b+1
  5285  000660  C12C  F0BF         	movff	printf@fval+2,___flsub@b+2
  5286  000664  C12D  F0C0         	movff	printf@fval+3,___flsub@b+3
  5287  000668  C122  F075         	movff	printf@val,___xxtofl@val
  5288  00066C  C123  F076         	movff	printf@val+1,___xxtofl@val+1
  5289  000670  C124  F077         	movff	printf@val+2,___xxtofl@val+2
  5290  000674  C125  F078         	movff	printf@val+3,___xxtofl@val+3
  5291  000678  0E00               	movlw	0
  5292  00067A  EC36  F018         	call	___xxtofl
  5293  00067E  C075  F0C1         	movff	?___xxtofl,___flsub@a
  5294  000682  C076  F0C2         	movff	?___xxtofl+1,___flsub@a+1
  5295  000686  C077  F0C3         	movff	?___xxtofl+2,___flsub@a+2
  5296  00068A  C078  F0C4         	movff	?___xxtofl+3,___flsub@a+3
  5297  00068E  ECBB  F026         	call	___flsub	;wreg free
  5298  000692  C0BD  F12A         	movff	?___flsub,printf@fval
  5299  000696  C0BE  F12B         	movff	?___flsub+1,printf@fval+1
  5300  00069A  C0BF  F12C         	movff	?___flsub+2,printf@fval+2
  5301  00069E  C0C0  F12D         	movff	?___flsub+3,printf@fval+3
  5302                           
  5303                           ;doprnt.c: 1133: exp = 0;
  5304  0006A2  0E00               	movlw	0
  5305  0006A4  0101               	movlb	1	; () banked
  5306  0006A6  6F27               	movwf	(printf@exp+1)& (0+255),b
  5307  0006A8  0E00               	movlw	0
  5308  0006AA  6F26               	movwf	printf@exp& (0+255),b
  5309  0006AC                     l8724:
  5310                           
  5311                           ; BSR set to: 1
  5312                           ;doprnt.c: 1134: }
  5313                           ;doprnt.c: 1136: for(c = 1 ; c != (sizeof dpowers/sizeof dpowers[0]) ; c++)
  5314  0006AC  0E01               	movlw	1
  5315  0006AE  0101               	movlb	1	; () banked
  5316  0006B0  6F30               	movwf	printf@c& (0+255),b
  5317  0006B2                     l8726:
  5318                           
  5319                           ; BSR set to: 1
  5320  0006B2  0E0A               	movlw	10
  5321  0006B4  0101               	movlb	1	; () banked
  5322  0006B6  1930               	xorwf	printf@c& (0+255),w,b
  5323  0006B8  B4D8               	btfsc	status,2,c
  5324  0006BA  D01E               	goto	l8738
  5325                           
  5326                           ; BSR set to: 1
  5327                           ;doprnt.c: 1137: if(val < dpowers[c])
  5328                           
  5329                           ; BSR set to: 1
  5330                           
  5331                           ; BSR set to: 1
  5332  0006BC  0101               	movlb	1	; () banked
  5333  0006BE  5130               	movf	printf@c& (0+255),w,b
  5334  0006C0  0D04               	mullw	4
  5335  0006C2  0EBB               	movlw	low _dpowers
  5336  0006C4  24F3               	addwf	prodl,w,c
  5337  0006C6  6EF6               	movwf	tblptrl,c
  5338  0006C8  0E7D               	movlw	high _dpowers
  5339  0006CA  20F4               	addwfc	prodh,w,c
  5340  0006CC  6EF7               	movwf	tblptrh,c
  5341  0006CE                     	if	0	;There are less than 3 active tblptr bytes
  5342  0006CE                     	endif
  5343  0006CE  0009               	tblrd		*+
  5344  0006D0  50F5               	movf	tablat,w,c
  5345  0006D2  0101               	movlb	1	; () banked
  5346  0006D4  5D22               	subwf	printf@val& (0+255),w,b
  5347  0006D6  0009               	tblrd		*+
  5348  0006D8  50F5               	movf	tablat,w,c
  5349  0006DA  0101               	movlb	1	; () banked
  5350  0006DC  5923               	subwfb	(printf@val+1)& (0+255),w,b
  5351  0006DE  0009               	tblrd		*+
  5352  0006E0  50F5               	movf	tablat,w,c
  5353  0006E2  0101               	movlb	1	; () banked
  5354  0006E4  5924               	subwfb	(printf@val+2)& (0+255),w,b
  5355  0006E6  0009               	tblrd		*+
  5356  0006E8  50F5               	movf	tablat,w,c
  5357  0006EA  0101               	movlb	1	; () banked
  5358  0006EC  5925               	subwfb	(printf@val+3)& (0+255),w,b
  5359  0006EE  A0D8               	btfss	status,0,c
  5360  0006F0  D003               	goto	l8738
  5361                           
  5362                           ; BSR set to: 1
  5363                           
  5364                           ; BSR set to: 1
  5365                           
  5366                           ; BSR set to: 1
  5367                           ;doprnt.c: 1138: break;
  5368  0006F2  0101               	movlb	1	; () banked
  5369  0006F4  2B30               	incf	printf@c& (0+255),f,b
  5370  0006F6  D7DD               	goto	l8726
  5371  0006F8                     l8738:
  5372                           
  5373                           ; BSR set to: 1
  5374                           ;doprnt.c: 1142: width -= prec + c + exp;
  5375  0006F8  C130  F0C5         	movff	printf@c,??_printf
  5376  0006FC  0100               	movlb	0	; () banked
  5377  0006FE  6BC6               	clrf	(??_printf+1)& (0+255),b
  5378  000700  BFC5               	btfsc	??_printf& (0+255),7,b
  5379  000702  07C6               	decf	(??_printf+1)& (0+255),f,b
  5380  000704  0101               	movlb	1	; () banked
  5381  000706  512E               	movf	printf@prec& (0+255),w,b
  5382  000708  0100               	movlb	0	; () banked
  5383  00070A  27C5               	addwf	??_printf& (0+255),f,b
  5384  00070C  0101               	movlb	1	; () banked
  5385  00070E  512F               	movf	(printf@prec+1)& (0+255),w,b
  5386  000710  0100               	movlb	0	; () banked
  5387  000712  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5388  000714  0101               	movlb	1	; () banked
  5389  000716  5126               	movf	printf@exp& (0+255),w,b
  5390  000718  0100               	movlb	0	; () banked
  5391  00071A  27C5               	addwf	??_printf& (0+255),f,b
  5392  00071C  0101               	movlb	1	; () banked
  5393  00071E  5127               	movf	(printf@exp+1)& (0+255),w,b
  5394  000720  0100               	movlb	0	; () banked
  5395  000722  23C6               	addwfc	(??_printf+1)& (0+255),f,b
  5396  000724  0100               	movlb	0	; () banked
  5397  000726  51C5               	movf	??_printf& (0+255),w,b
  5398  000728  0101               	movlb	1	; () banked
  5399  00072A  5F28               	subwf	printf@width& (0+255),f,b
  5400  00072C  0100               	movlb	0	; () banked
  5401  00072E  51C6               	movf	(??_printf+1)& (0+255),w,b
  5402  000730  0101               	movlb	1	; () banked
  5403  000732  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  5404                           
  5405                           ;doprnt.c: 1143: if(
  5406                           ;doprnt.c: 1147: prec)
  5407  000734  0101               	movlb	1	; () banked
  5408  000736  512E               	movf	printf@prec& (0+255),w,b
  5409  000738  0101               	movlb	1	; () banked
  5410  00073A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5411  00073C  B4D8               	btfsc	status,2,c
  5412  00073E  D004               	goto	l8742
  5413                           
  5414                           ; BSR set to: 1
  5415                           ;doprnt.c: 1148: width--;
  5416  000740  0101               	movlb	1	; () banked
  5417  000742  0728               	decf	printf@width& (0+255),f,b
  5418  000744  A0D8               	btfss	status,0,c
  5419  000746  0729               	decf	(printf@width+1)& (0+255),f,b
  5420  000748                     l8742:
  5421                           
  5422                           ; BSR set to: 1
  5423                           ;doprnt.c: 1149: if(flag & 0x03)
  5424  000748  0E03               	movlw	3
  5425  00074A  0101               	movlb	1	; () banked
  5426  00074C  151C               	andwf	printf@flag& (0+255),w,b
  5427  00074E  0100               	movlb	0	; () banked
  5428  000750  6FC5               	movwf	??_printf& (0+255),b
  5429  000752  0E00               	movlw	0
  5430  000754  0101               	movlb	1	; () banked
  5431  000756  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5432  000758  0100               	movlb	0	; () banked
  5433  00075A  6FC6               	movwf	(??_printf+1)& (0+255),b
  5434  00075C  0100               	movlb	0	; () banked
  5435  00075E  51C5               	movf	??_printf& (0+255),w,b
  5436  000760  0100               	movlb	0	; () banked
  5437  000762  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5438  000764  B4D8               	btfsc	status,2,c
  5439  000766  D008               	goto	l8750
  5440  000768  D003               	goto	l8748
  5441  00076A                     l8746:
  5442                           
  5443                           ; BSR set to: 1
  5444                           ;doprnt.c: 1181: (putch(' ') );
  5445  00076A  0E20               	movlw	32
  5446  00076C  EC0D  F029         	call	_putch
  5447  000770                     l8748:
  5448                           
  5449                           ;doprnt.c: 1182: width--;
  5450  000770  0101               	movlb	1	; () banked
  5451  000772  0728               	decf	printf@width& (0+255),f,b
  5452  000774  A0D8               	btfss	status,0,c
  5453  000776  0729               	decf	(printf@width+1)& (0+255),f,b
  5454  000778                     l8750:
  5455  000778  0101               	movlb	1	; () banked
  5456  00077A  BF29               	btfsc	(printf@width+1)& (0+255),7,b
  5457  00077C  D007               	goto	l8752
  5458  00077E  0101               	movlb	1	; () banked
  5459  000780  5129               	movf	(printf@width+1)& (0+255),w,b
  5460  000782  E1F3               	bnz	l8746
  5461  000784  0101               	movlb	1	; () banked
  5462  000786  0528               	decf	printf@width& (0+255),w,b
  5463  000788  B0D8               	btfsc	status,0,c
  5464  00078A  D7EF               	goto	l8746
  5465  00078C                     l8752:
  5466                           
  5467                           ; BSR set to: 1
  5468                           ;doprnt.c: 1183: }
  5469                           ;doprnt.c: 1188: if(flag & 0x03)
  5470  00078C  0E03               	movlw	3
  5471  00078E  0101               	movlb	1	; () banked
  5472  000790  151C               	andwf	printf@flag& (0+255),w,b
  5473  000792  0100               	movlb	0	; () banked
  5474  000794  6FC5               	movwf	??_printf& (0+255),b
  5475  000796  0E00               	movlw	0
  5476  000798  0101               	movlb	1	; () banked
  5477  00079A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  5478  00079C  0100               	movlb	0	; () banked
  5479  00079E  6FC6               	movwf	(??_printf+1)& (0+255),b
  5480  0007A0  0100               	movlb	0	; () banked
  5481  0007A2  51C5               	movf	??_printf& (0+255),w,b
  5482  0007A4  0100               	movlb	0	; () banked
  5483  0007A6  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  5484  0007A8  B4D8               	btfsc	status,2,c
  5485  0007AA  D04B               	goto	l8762
  5486                           
  5487                           ; BSR set to: 0
  5488                           ;doprnt.c: 1190: (putch('-') );
  5489  0007AC  0E2D               	movlw	45
  5490  0007AE  EC0D  F029         	call	_putch
  5491                           
  5492                           ;doprnt.c: 1195: }
  5493                           ;doprnt.c: 1196: while(c--) {
  5494  0007B2  D047               	goto	l8762
  5495  0007B4                     l8756:
  5496                           
  5497                           ;doprnt.c: 1200: {
  5498                           ;doprnt.c: 1201: tmpval.vd = val/dpowers[c];
  5499  0007B4  C122  F075         	movff	printf@val,___lldiv@dividend
  5500  0007B8  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  5501  0007BC  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  5502  0007C0  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  5503  0007C4  0101               	movlb	1	; () banked
  5504  0007C6  5130               	movf	printf@c& (0+255),w,b
  5505  0007C8  0D04               	mullw	4
  5506  0007CA  0EBB               	movlw	low _dpowers
  5507  0007CC  24F3               	addwf	prodl,w,c
  5508  0007CE  6EF6               	movwf	tblptrl,c
  5509  0007D0  0E7D               	movlw	high _dpowers
  5510  0007D2  20F4               	addwfc	prodh,w,c
  5511  0007D4  6EF7               	movwf	tblptrh,c
  5512  0007D6                     	if	0	;There are less than 3 active tblptr bytes
  5513  0007D6                     	endif
  5514  0007D6  0009               	tblrd		*+
  5515  0007D8  CFF5 F079          	movff	tablat,___lldiv@divisor
  5516  0007DC  0009               	tblrd		*+
  5517  0007DE  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  5518  0007E2  0009               	tblrd		*+
  5519  0007E4  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  5520  0007E8  000A               	tblrd		*-
  5521  0007EA  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  5522  0007EE  EC84  F022         	call	___lldiv	;wreg free
  5523  0007F2  C075  F11E         	movff	?___lldiv,printf@tmpval
  5524  0007F6  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  5525  0007FA  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  5526  0007FE  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  5527                           
  5528                           ;doprnt.c: 1202: tmpval.vd %= 10;
  5529  000802  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  5530  000806  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  5531  00080A  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  5532  00080E  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  5533  000812  0E0A               	movlw	10
  5534  000814  0100               	movlb	0	; () banked
  5535  000816  6F86               	movwf	___llmod@divisor& (0+255),b
  5536  000818  0E00               	movlw	0
  5537  00081A  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  5538  00081C  0E00               	movlw	0
  5539  00081E  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  5540  000820  0E00               	movlw	0
  5541  000822  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  5542  000824  EC84  F023         	call	___llmod	;wreg free
  5543  000828  C082  F11E         	movff	?___llmod,printf@tmpval
  5544  00082C  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  5545  000830  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  5546  000834  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  5547                           
  5548                           ;doprnt.c: 1203: (putch('0' + tmpval.vd) );
  5549  000838  0101               	movlb	1	; () banked
  5550  00083A  511E               	movf	printf@tmpval& (0+255),w,b
  5551  00083C  0F30               	addlw	48
  5552  00083E  EC0D  F029         	call	_putch
  5553  000842                     l8762:
  5554  000842  0101               	movlb	1	; () banked
  5555  000844  0730               	decf	printf@c& (0+255),f,b
  5556  000846  0101               	movlb	1	; () banked
  5557  000848  2930               	incf	printf@c& (0+255),w,b
  5558  00084A  B4D8               	btfsc	status,2,c
  5559  00084C  D008               	goto	l8768
  5560  00084E  D7B2               	goto	l8756
  5561  000850                     l8764:
  5562                           
  5563                           ; BSR set to: 1
  5564                           ;doprnt.c: 1208: (putch('0') );
  5565  000850  0E30               	movlw	48
  5566  000852  EC0D  F029         	call	_putch
  5567                           
  5568                           ;doprnt.c: 1209: exp--;
  5569  000856  0101               	movlb	1	; () banked
  5570  000858  0726               	decf	printf@exp& (0+255),f,b
  5571  00085A  A0D8               	btfss	status,0,c
  5572  00085C  0727               	decf	(printf@exp+1)& (0+255),f,b
  5573  00085E                     l8768:
  5574                           
  5575                           ; BSR set to: 1
  5576  00085E  0101               	movlb	1	; () banked
  5577  000860  BF27               	btfsc	(printf@exp+1)& (0+255),7,b
  5578  000862  D007               	goto	l8770
  5579  000864  0101               	movlb	1	; () banked
  5580  000866  5127               	movf	(printf@exp+1)& (0+255),w,b
  5581  000868  E1F3               	bnz	l8764
  5582  00086A  0101               	movlb	1	; () banked
  5583  00086C  0526               	decf	printf@exp& (0+255),w,b
  5584  00086E  B0D8               	btfsc	status,0,c
  5585  000870  D7EF               	goto	l8764
  5586  000872                     l8770:
  5587                           
  5588                           ; BSR set to: 1
  5589                           ;doprnt.c: 1210: }
  5590                           ;doprnt.c: 1211: if(prec > (int)((sizeof dpowers/sizeof dpowers[0])-2))
  5591  000872  0101               	movlb	1	; () banked
  5592  000874  BF2F               	btfsc	(printf@prec+1)& (0+255),7,b
  5593  000876  D00C               	goto	l828
  5594  000878  0101               	movlb	1	; () banked
  5595  00087A  512F               	movf	(printf@prec+1)& (0+255),w,b
  5596  00087C  E105               	bnz	u10820
  5597  00087E  0E09               	movlw	9
  5598  000880  0101               	movlb	1	; () banked
  5599  000882  5D2E               	subwf	printf@prec& (0+255),w,b
  5600  000884  A0D8               	btfss	status,0,c
  5601  000886  D004               	goto	l828
  5602  000888                     u10820:
  5603                           
  5604                           ; BSR set to: 1
  5605                           ;doprnt.c: 1212: c = (sizeof dpowers/sizeof dpowers[0])-2;
  5606  000888  0E08               	movlw	8
  5607  00088A  0101               	movlb	1	; () banked
  5608  00088C  6F30               	movwf	printf@c& (0+255),b
  5609  00088E  D002               	goto	l8774
  5610  000890                     l828:
  5611                           
  5612                           ; BSR set to: 1
  5613                           ;doprnt.c: 1213: else
  5614                           ;doprnt.c: 1214: c = prec;
  5615  000890  C12E  F130         	movff	printf@prec,printf@c
  5616  000894                     l8774:
  5617                           
  5618                           ; BSR set to: 1
  5619                           ;doprnt.c: 1215: prec -= c;
  5620  000894  0101               	movlb	1	; () banked
  5621  000896  5130               	movf	printf@c& (0+255),w,b
  5622  000898  0101               	movlb	1	; () banked
  5623  00089A  5F2E               	subwf	printf@prec& (0+255),f,b
  5624  00089C  0E00               	movlw	0
  5625  00089E  0101               	movlb	1	; () banked
  5626  0008A0  BF30               	btfsc	printf@c& (0+255),7,b
  5627  0008A2  0EFF               	movlw	255
  5628  0008A4  0101               	movlb	1	; () banked
  5629  0008A6  5B2F               	subwfb	(printf@prec+1)& (0+255),f,b
  5630                           
  5631                           ; BSR set to: 1
  5632                           ;doprnt.c: 1219: if(c)
  5633  0008A8  0101               	movlb	1	; () banked
  5634  0008AA  5130               	movf	printf@c& (0+255),w,b
  5635  0008AC  0101               	movlb	1	; () banked
  5636  0008AE  B4D8               	btfsc	status,2,c
  5637  0008B0  D003               	goto	l8780
  5638                           
  5639                           ; BSR set to: 1
  5640                           ;doprnt.c: 1221: (putch('.') );
  5641  0008B2  0E2E               	movlw	46
  5642  0008B4  EC0D  F029         	call	_putch
  5643  0008B8                     l8780:
  5644                           
  5645                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5646  0008B8  0101               	movlb	1	; () banked
  5647  0008BA  5130               	movf	printf@c& (0+255),w,b
  5648  0008BC  EC92  F006         	call	_scale
  5649  0008C0  C09C  F112         	movff	?_scale,_printf$2842
  5650  0008C4  C09D  F113         	movff	?_scale+1,_printf$2842+1
  5651  0008C8  C09E  F114         	movff	?_scale+2,_printf$2842+2
  5652  0008CC  C09F  F115         	movff	?_scale+3,_printf$2842+3
  5653                           
  5654                           ;doprnt.c: 1227: val = (long)(fval * scale(c));
  5655  0008D0  C12A  F087         	movff	printf@fval,___flmul@a
  5656  0008D4  C12B  F088         	movff	printf@fval+1,___flmul@a+1
  5657  0008D8  C12C  F089         	movff	printf@fval+2,___flmul@a+2
  5658  0008DC  C12D  F08A         	movff	printf@fval+3,___flmul@a+3
  5659  0008E0  C112  F083         	movff	_printf$2842,___flmul@b
  5660  0008E4  C113  F084         	movff	_printf$2842+1,___flmul@b+1
  5661  0008E8  C114  F085         	movff	_printf$2842+2,___flmul@b+2
  5662  0008EC  C115  F086         	movff	_printf$2842+3,___flmul@b+3
  5663  0008F0  EC4F  F00B         	call	___flmul	;wreg free
  5664  0008F4  C083  F0A5         	movff	?___flmul,___fltol@f1
  5665  0008F8  C084  F0A6         	movff	?___flmul+1,___fltol@f1+1
  5666  0008FC  C085  F0A7         	movff	?___flmul+2,___fltol@f1+2
  5667  000900  C086  F0A8         	movff	?___flmul+3,___fltol@f1+3
  5668  000904  EC2C  F01F         	call	___fltol	;wreg free
  5669  000908  C0A5  F122         	movff	?___fltol,printf@val
  5670  00090C  C0A6  F123         	movff	?___fltol+1,printf@val+1
  5671  000910  C0A7  F124         	movff	?___fltol+2,printf@val+2
  5672  000914  C0A8  F125         	movff	?___fltol+3,printf@val+3
  5673                           
  5674                           ;doprnt.c: 1228: while(c--) {
  5675  000918  D06E               	goto	l8790
  5676  00091A                     l8784:
  5677                           
  5678                           ;doprnt.c: 1229: tmpval.vd = val/dpowers[c];
  5679  00091A  C122  F075         	movff	printf@val,___lldiv@dividend
  5680  00091E  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  5681  000922  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  5682  000926  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  5683  00092A  0101               	movlb	1	; () banked
  5684  00092C  5130               	movf	printf@c& (0+255),w,b
  5685  00092E  0D04               	mullw	4
  5686  000930  0EBB               	movlw	low _dpowers
  5687  000932  24F3               	addwf	prodl,w,c
  5688  000934  6EF6               	movwf	tblptrl,c
  5689  000936  0E7D               	movlw	high _dpowers
  5690  000938  20F4               	addwfc	prodh,w,c
  5691  00093A  6EF7               	movwf	tblptrh,c
  5692  00093C                     	if	0	;There are less than 3 active tblptr bytes
  5693  00093C                     	endif
  5694  00093C  0009               	tblrd		*+
  5695  00093E  CFF5 F079          	movff	tablat,___lldiv@divisor
  5696  000942  0009               	tblrd		*+
  5697  000944  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  5698  000948  0009               	tblrd		*+
  5699  00094A  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  5700  00094E  000A               	tblrd		*-
  5701  000950  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  5702  000954  EC84  F022         	call	___lldiv	;wreg free
  5703  000958  C075  F11E         	movff	?___lldiv,printf@tmpval
  5704  00095C  C076  F11F         	movff	?___lldiv+1,printf@tmpval+1
  5705  000960  C077  F120         	movff	?___lldiv+2,printf@tmpval+2
  5706  000964  C078  F121         	movff	?___lldiv+3,printf@tmpval+3
  5707                           
  5708                           ;doprnt.c: 1230: tmpval.vd %= 10;
  5709  000968  C11E  F082         	movff	printf@tmpval,___llmod@dividend
  5710  00096C  C11F  F083         	movff	printf@tmpval+1,___llmod@dividend+1
  5711  000970  C120  F084         	movff	printf@tmpval+2,___llmod@dividend+2
  5712  000974  C121  F085         	movff	printf@tmpval+3,___llmod@dividend+3
  5713  000978  0E0A               	movlw	10
  5714  00097A  0100               	movlb	0	; () banked
  5715  00097C  6F86               	movwf	___llmod@divisor& (0+255),b
  5716  00097E  0E00               	movlw	0
  5717  000980  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  5718  000982  0E00               	movlw	0
  5719  000984  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  5720  000986  0E00               	movlw	0
  5721  000988  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  5722  00098A  EC84  F023         	call	___llmod	;wreg free
  5723  00098E  C082  F11E         	movff	?___llmod,printf@tmpval
  5724  000992  C083  F11F         	movff	?___llmod+1,printf@tmpval+1
  5725  000996  C084  F120         	movff	?___llmod+2,printf@tmpval+2
  5726  00099A  C085  F121         	movff	?___llmod+3,printf@tmpval+3
  5727                           
  5728                           ;doprnt.c: 1231: (putch('0' + tmpval.vd) );
  5729  00099E  0101               	movlb	1	; () banked
  5730  0009A0  511E               	movf	printf@tmpval& (0+255),w,b
  5731  0009A2  0F30               	addlw	48
  5732  0009A4  EC0D  F029         	call	_putch
  5733                           
  5734                           ;doprnt.c: 1232: val %= dpowers[c];
  5735  0009A8  C122  F082         	movff	printf@val,___llmod@dividend
  5736  0009AC  C123  F083         	movff	printf@val+1,___llmod@dividend+1
  5737  0009B0  C124  F084         	movff	printf@val+2,___llmod@dividend+2
  5738  0009B4  C125  F085         	movff	printf@val+3,___llmod@dividend+3
  5739  0009B8  0101               	movlb	1	; () banked
  5740  0009BA  5130               	movf	printf@c& (0+255),w,b
  5741  0009BC  0D04               	mullw	4
  5742  0009BE  0EBB               	movlw	low _dpowers
  5743  0009C0  24F3               	addwf	prodl,w,c
  5744  0009C2  6EF6               	movwf	tblptrl,c
  5745  0009C4  0E7D               	movlw	high _dpowers
  5746  0009C6  20F4               	addwfc	prodh,w,c
  5747  0009C8  6EF7               	movwf	tblptrh,c
  5748  0009CA                     	if	0	;There are less than 3 active tblptr bytes
  5749  0009CA                     	endif
  5750  0009CA  0009               	tblrd		*+
  5751  0009CC  CFF5 F086          	movff	tablat,___llmod@divisor
  5752  0009D0  0009               	tblrd		*+
  5753  0009D2  CFF5 F087          	movff	tablat,___llmod@divisor+1
  5754  0009D6  0009               	tblrd		*+
  5755  0009D8  CFF5 F088          	movff	tablat,___llmod@divisor+2
  5756  0009DC  000A               	tblrd		*-
  5757  0009DE  CFF5 F089          	movff	tablat,___llmod@divisor+3
  5758  0009E2  EC84  F023         	call	___llmod	;wreg free
  5759  0009E6  C082  F122         	movff	?___llmod,printf@val
  5760  0009EA  C083  F123         	movff	?___llmod+1,printf@val+1
  5761  0009EE  C084  F124         	movff	?___llmod+2,printf@val+2
  5762  0009F2  C085  F125         	movff	?___llmod+3,printf@val+3
  5763  0009F6                     l8790:
  5764  0009F6  0101               	movlb	1	; () banked
  5765  0009F8  0730               	decf	printf@c& (0+255),f,b
  5766  0009FA  0101               	movlb	1	; () banked
  5767  0009FC  2930               	incf	printf@c& (0+255),w,b
  5768  0009FE  B4D8               	btfsc	status,2,c
  5769  000A00  D008               	goto	l8796
  5770  000A02  D78B               	goto	l8784
  5771  000A04                     l8792:
  5772                           
  5773                           ; BSR set to: 1
  5774                           ;doprnt.c: 1236: (putch('0') );
  5775  000A04  0E30               	movlw	48
  5776  000A06  EC0D  F029         	call	_putch
  5777                           
  5778                           ;doprnt.c: 1237: prec--;
  5779  000A0A  0101               	movlb	1	; () banked
  5780  000A0C  072E               	decf	printf@prec& (0+255),f,b
  5781  000A0E  A0D8               	btfss	status,0,c
  5782  000A10  072F               	decf	(printf@prec+1)& (0+255),f,b
  5783  000A12                     l8796:
  5784                           
  5785                           ; BSR set to: 1
  5786  000A12  0101               	movlb	1	; () banked
  5787  000A14  512E               	movf	printf@prec& (0+255),w,b
  5788  000A16  0101               	movlb	1	; () banked
  5789  000A18  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5790  000A1A  B4D8               	btfsc	status,2,c
  5791  000A1C  D173               	goto	l8876
  5792  000A1E  D7F2               	goto	l8792
  5793  000A20                     l794:
  5794                           
  5795                           ; BSR set to: 1
  5796                           ;doprnt.c: 1246: }
  5797                           ;doprnt.c: 1251: if((flag & 0x40) == 0x00)
  5798  000A20  0101               	movlb	1	; () banked
  5799  000A22  BD1C               	btfsc	printf@flag& (0+255),6,b
  5800  000A24  D023               	goto	l8808
  5801                           
  5802                           ; BSR set to: 1
  5803                           ;doprnt.c: 1253: {
  5804                           ;doprnt.c: 1259: val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  5805  000A26  C11A  FFD9         	movff	printf@ap,fsr2l
  5806  000A2A  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5807  000A2E  CFDE F122          	movff	postinc2,printf@val
  5808  000A32  CFDD F123          	movff	postdec2,printf@val+1
  5809  000A36  0101               	movlb	1	; () banked
  5810  000A38  0E00               	movlw	0
  5811  000A3A  BF23               	btfsc	(printf@val+1)& (0+255),7,b
  5812  000A3C  0EFF               	movlw	-1
  5813  000A3E  6F24               	movwf	(printf@val+2)& (0+255),b
  5814  000A40  6F25               	movwf	(printf@val+3)& (0+255),b
  5815                           
  5816                           ; BSR set to: 1
  5817  000A42  0E02               	movlw	2
  5818  000A44  0101               	movlb	1	; () banked
  5819  000A46  271A               	addwf	printf@ap& (0+255),f,b
  5820  000A48  0E00               	movlw	0
  5821  000A4A  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5822                           
  5823                           ; BSR set to: 1
  5824                           ;doprnt.c: 1261: if((long)val < 0) {
  5825  000A4C  0101               	movlb	1	; () banked
  5826  000A4E  AF25               	btfss	(printf@val+3)& (0+255),7,b
  5827  000A50  D021               	goto	l8812
  5828                           
  5829                           ; BSR set to: 1
  5830                           ;doprnt.c: 1262: flag |= 0x03;
  5831  000A52  0E03               	movlw	3
  5832  000A54  0101               	movlb	1	; () banked
  5833  000A56  131C               	iorwf	printf@flag& (0+255),f,b
  5834                           
  5835                           ; BSR set to: 1
  5836                           ;doprnt.c: 1263: val = -val;
  5837  000A58  0101               	movlb	1	; () banked
  5838  000A5A  1F25               	comf	(printf@val+3)& (0+255),f,b
  5839  000A5C  1F24               	comf	(printf@val+2)& (0+255),f,b
  5840  000A5E  1F23               	comf	(printf@val+1)& (0+255),f,b
  5841  000A60  6D22               	negf	printf@val& (0+255),b
  5842  000A62  0E00               	movlw	0
  5843  000A64  2323               	addwfc	(printf@val+1)& (0+255),f,b
  5844  000A66  2324               	addwfc	(printf@val+2)& (0+255),f,b
  5845  000A68  2325               	addwfc	(printf@val+3)& (0+255),f,b
  5846                           
  5847                           ; BSR set to: 1
  5848                           ;doprnt.c: 1264: }
  5849                           ;doprnt.c: 1266: }
  5850  000A6A  D014               	goto	l8812
  5851  000A6C                     l8808:
  5852                           
  5853                           ; BSR set to: 1
  5854                           ;doprnt.c: 1268: else
  5855                           ;doprnt.c: 1273: {
  5856                           ;doprnt.c: 1286: val = (*(unsigned *)__va_arg((*(unsigned **)ap), (unsigned)0));
  5857  000A6C  C11A  FFD9         	movff	printf@ap,fsr2l
  5858  000A70  C11B  FFDA         	movff	printf@ap+1,fsr2h
  5859  000A74  CFDE F0C5          	movff	postinc2,??_printf
  5860  000A78  CFDD F0C6          	movff	postdec2,??_printf+1
  5861  000A7C  C0C5  F122         	movff	??_printf,printf@val
  5862  000A80  C0C6  F123         	movff	??_printf+1,printf@val+1
  5863  000A84  0101               	movlb	1	; () banked
  5864  000A86  6B24               	clrf	(printf@val+2)& (0+255),b
  5865  000A88  6B25               	clrf	(printf@val+3)& (0+255),b
  5866                           
  5867                           ; BSR set to: 1
  5868  000A8A  0E02               	movlw	2
  5869  000A8C  0101               	movlb	1	; () banked
  5870  000A8E  271A               	addwf	printf@ap& (0+255),f,b
  5871  000A90  0E00               	movlw	0
  5872  000A92  231B               	addwfc	(printf@ap+1)& (0+255),f,b
  5873  000A94                     l8812:
  5874                           
  5875                           ; BSR set to: 1
  5876                           ;doprnt.c: 1287: }
  5877                           ;doprnt.c: 1290: if(prec == 0 && val == 0)
  5878  000A94  0101               	movlb	1	; () banked
  5879  000A96  512E               	movf	printf@prec& (0+255),w,b
  5880  000A98  0101               	movlb	1	; () banked
  5881  000A9A  112F               	iorwf	(printf@prec+1)& (0+255),w,b
  5882  000A9C  A4D8               	btfss	status,2,c
  5883  000A9E  D00D               	goto	l8818
  5884                           
  5885                           ; BSR set to: 1
  5886  000AA0  0101               	movlb	1	; () banked
  5887  000AA2  5122               	movf	printf@val& (0+255),w,b
  5888  000AA4  0101               	movlb	1	; () banked
  5889  000AA6  1123               	iorwf	(printf@val+1)& (0+255),w,b
  5890  000AA8  0101               	movlb	1	; () banked
  5891  000AAA  1124               	iorwf	(printf@val+2)& (0+255),w,b
  5892  000AAC  0101               	movlb	1	; () banked
  5893  000AAE  1125               	iorwf	(printf@val+3)& (0+255),w,b
  5894  000AB0  A4D8               	btfss	status,2,c
  5895  000AB2  D003               	goto	l8818
  5896                           
  5897                           ; BSR set to: 1
  5898                           ;doprnt.c: 1291: prec++;
  5899  000AB4  0101               	movlb	1	; () banked
  5900  000AB6  4B2E               	infsnz	printf@prec& (0+255),f,b
  5901  000AB8  2B2F               	incf	(printf@prec+1)& (0+255),f,b
  5902  000ABA                     l8818:
  5903                           
  5904                           ; BSR set to: 1
  5905                           ;doprnt.c: 1305: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  5906  000ABA  0E01               	movlw	1
  5907  000ABC  0101               	movlb	1	; () banked
  5908  000ABE  6F30               	movwf	printf@c& (0+255),b
  5909  000AC0                     l8820:
  5910                           
  5911                           ; BSR set to: 1
  5912  000AC0  0E0A               	movlw	10
  5913  000AC2  0101               	movlb	1	; () banked
  5914  000AC4  1930               	xorwf	printf@c& (0+255),w,b
  5915  000AC6  B4D8               	btfsc	status,2,c
  5916  000AC8  D01E               	goto	l8832
  5917                           
  5918                           ; BSR set to: 1
  5919                           ;doprnt.c: 1306: if(val < dpowers[c])
  5920                           
  5921                           ; BSR set to: 1
  5922                           
  5923                           ; BSR set to: 1
  5924  000ACA  0101               	movlb	1	; () banked
  5925  000ACC  5130               	movf	printf@c& (0+255),w,b
  5926  000ACE  0D04               	mullw	4
  5927  000AD0  0EBB               	movlw	low _dpowers
  5928  000AD2  24F3               	addwf	prodl,w,c
  5929  000AD4  6EF6               	movwf	tblptrl,c
  5930  000AD6  0E7D               	movlw	high _dpowers
  5931  000AD8  20F4               	addwfc	prodh,w,c
  5932  000ADA  6EF7               	movwf	tblptrh,c
  5933  000ADC                     	if	0	;There are less than 3 active tblptr bytes
  5934  000ADC                     	endif
  5935  000ADC  0009               	tblrd		*+
  5936  000ADE  50F5               	movf	tablat,w,c
  5937  000AE0  0101               	movlb	1	; () banked
  5938  000AE2  5D22               	subwf	printf@val& (0+255),w,b
  5939  000AE4  0009               	tblrd		*+
  5940  000AE6  50F5               	movf	tablat,w,c
  5941  000AE8  0101               	movlb	1	; () banked
  5942  000AEA  5923               	subwfb	(printf@val+1)& (0+255),w,b
  5943  000AEC  0009               	tblrd		*+
  5944  000AEE  50F5               	movf	tablat,w,c
  5945  000AF0  0101               	movlb	1	; () banked
  5946  000AF2  5924               	subwfb	(printf@val+2)& (0+255),w,b
  5947  000AF4  0009               	tblrd		*+
  5948  000AF6  50F5               	movf	tablat,w,c
  5949  000AF8  0101               	movlb	1	; () banked
  5950  000AFA  5925               	subwfb	(printf@val+3)& (0+255),w,b
  5951  000AFC  A0D8               	btfss	status,0,c
  5952  000AFE  D003               	goto	l8832
  5953                           
  5954                           ; BSR set to: 1
  5955                           
  5956                           ; BSR set to: 1
  5957                           
  5958                           ; BSR set to: 1
  5959                           ;doprnt.c: 1307: break;
  5960  000B00  0101               	movlb	1	; () banked
  5961  000B02  2B30               	incf	printf@c& (0+255),f,b
  5962  000B04  D7DD               	goto	l8820
  5963  000B06                     l8832:
  5964                           
  5965                           ; BSR set to: 1
  5966                           ;doprnt.c: 1339: if(c < prec)
  5967  000B06  0E80               	movlw	128
  5968  000B08  0101               	movlb	1	; () banked
  5969  000B0A  BF30               	btfsc	printf@c& (0+255),7,b
  5970  000B0C  0E7F               	movlw	127
  5971  000B0E  0100               	movlb	0	; () banked
  5972  000B10  6FC5               	movwf	??_printf& (0+255),b
  5973  000B12  0101               	movlb	1	; () banked
  5974  000B14  512E               	movf	printf@prec& (0+255),w,b
  5975  000B16  0101               	movlb	1	; () banked
  5976  000B18  5D30               	subwf	printf@c& (0+255),w,b
  5977  000B1A  0101               	movlb	1	; () banked
  5978  000B1C  512F               	movf	(printf@prec+1)& (0+255),w,b
  5979  000B1E  0A80               	xorlw	128
  5980  000B20  0100               	movlb	0	; () banked
  5981  000B22  59C5               	subwfb	??_printf& (0+255),w,b
  5982  000B24  B0D8               	btfsc	status,0,c
  5983  000B26  D003               	goto	l8836
  5984                           
  5985                           ; BSR set to: 0
  5986                           ;doprnt.c: 1340: c = prec;
  5987  000B28  C12E  F130         	movff	printf@prec,printf@c
  5988  000B2C  D018               	goto	l8840
  5989  000B2E                     l8836:
  5990                           
  5991                           ; BSR set to: 0
  5992                           ;doprnt.c: 1341: else if(prec < c)
  5993  000B2E  0101               	movlb	1	; () banked
  5994  000B30  512F               	movf	(printf@prec+1)& (0+255),w,b
  5995  000B32  0A80               	xorlw	128
  5996  000B34  0100               	movlb	0	; () banked
  5997  000B36  6FC5               	movwf	??_printf& (0+255),b
  5998  000B38  0101               	movlb	1	; () banked
  5999  000B3A  5130               	movf	printf@c& (0+255),w,b
  6000  000B3C  0101               	movlb	1	; () banked
  6001  000B3E  5D2E               	subwf	printf@prec& (0+255),w,b
  6002  000B40  0E80               	movlw	128
  6003  000B42  0101               	movlb	1	; () banked
  6004  000B44  BF30               	btfsc	printf@c& (0+255),7,b
  6005  000B46  0E7F               	movlw	127
  6006  000B48  0100               	movlb	0	; () banked
  6007  000B4A  59C5               	subwfb	??_printf& (0+255),w,b
  6008  000B4C  B0D8               	btfsc	status,0,c
  6009  000B4E  D007               	goto	l8840
  6010                           
  6011                           ; BSR set to: 0
  6012                           ;doprnt.c: 1342: prec = c;
  6013  000B50  0101               	movlb	1	; () banked
  6014  000B52  5130               	movf	printf@c& (0+255),w,b
  6015  000B54  0101               	movlb	1	; () banked
  6016  000B56  6F2E               	movwf	printf@prec& (0+255),b
  6017  000B58  6B2F               	clrf	(printf@prec+1)& (0+255),b
  6018  000B5A  BF2E               	btfsc	printf@prec& (0+255),7,b
  6019  000B5C  072F               	decf	(printf@prec+1)& (0+255),f,b
  6020  000B5E                     l8840:
  6021                           
  6022                           ;doprnt.c: 1345: if(width && flag & 0x03)
  6023  000B5E  0101               	movlb	1	; () banked
  6024  000B60  5128               	movf	printf@width& (0+255),w,b
  6025  000B62  0101               	movlb	1	; () banked
  6026  000B64  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6027  000B66  B4D8               	btfsc	status,2,c
  6028  000B68  D014               	goto	l8846
  6029                           
  6030                           ; BSR set to: 1
  6031  000B6A  0E03               	movlw	3
  6032  000B6C  0101               	movlb	1	; () banked
  6033  000B6E  151C               	andwf	printf@flag& (0+255),w,b
  6034  000B70  0100               	movlb	0	; () banked
  6035  000B72  6FC5               	movwf	??_printf& (0+255),b
  6036  000B74  0E00               	movlw	0
  6037  000B76  0101               	movlb	1	; () banked
  6038  000B78  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6039  000B7A  0100               	movlb	0	; () banked
  6040  000B7C  6FC6               	movwf	(??_printf+1)& (0+255),b
  6041  000B7E  0100               	movlb	0	; () banked
  6042  000B80  51C5               	movf	??_printf& (0+255),w,b
  6043  000B82  0100               	movlb	0	; () banked
  6044  000B84  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  6045  000B86  B4D8               	btfsc	status,2,c
  6046  000B88  D004               	goto	l8846
  6047                           
  6048                           ; BSR set to: 0
  6049                           ;doprnt.c: 1346: width--;
  6050  000B8A  0101               	movlb	1	; () banked
  6051  000B8C  0728               	decf	printf@width& (0+255),f,b
  6052  000B8E  A0D8               	btfss	status,0,c
  6053  000B90  0729               	decf	(printf@width+1)& (0+255),f,b
  6054  000B92                     l8846:
  6055                           
  6056                           ;doprnt.c: 1348: if(flag & 0x4000) {
  6057  000B92  0101               	movlb	1	; () banked
  6058  000B94  AD1D               	btfss	(printf@flag+1)& (0+255),6,b
  6059  000B96  D01E               	goto	l8854
  6060                           
  6061                           ; BSR set to: 1
  6062                           ;doprnt.c: 1349: if(width > prec)
  6063  000B98  0101               	movlb	1	; () banked
  6064  000B9A  5128               	movf	printf@width& (0+255),w,b
  6065  000B9C  0101               	movlb	1	; () banked
  6066  000B9E  5D2E               	subwf	printf@prec& (0+255),w,b
  6067  000BA0  0101               	movlb	1	; () banked
  6068  000BA2  512F               	movf	(printf@prec+1)& (0+255),w,b
  6069  000BA4  0A80               	xorlw	128
  6070  000BA6  0100               	movlb	0	; () banked
  6071  000BA8  6FC5               	movwf	??_printf& (0+255),b
  6072  000BAA  0101               	movlb	1	; () banked
  6073  000BAC  5129               	movf	(printf@width+1)& (0+255),w,b
  6074  000BAE  0A80               	xorlw	128
  6075  000BB0  0100               	movlb	0	; () banked
  6076  000BB2  59C5               	subwfb	??_printf& (0+255),w,b
  6077  000BB4  B0D8               	btfsc	status,0,c
  6078  000BB6  D009               	goto	l8852
  6079                           
  6080                           ; BSR set to: 0
  6081                           ;doprnt.c: 1350: width -= prec;
  6082  000BB8  0101               	movlb	1	; () banked
  6083  000BBA  512E               	movf	printf@prec& (0+255),w,b
  6084  000BBC  0101               	movlb	1	; () banked
  6085  000BBE  5F28               	subwf	printf@width& (0+255),f,b
  6086  000BC0  0101               	movlb	1	; () banked
  6087  000BC2  512F               	movf	(printf@prec+1)& (0+255),w,b
  6088  000BC4  0101               	movlb	1	; () banked
  6089  000BC6  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  6090  000BC8  D005               	goto	l8854
  6091  000BCA                     l8852:
  6092                           
  6093                           ;doprnt.c: 1351: else
  6094                           ;doprnt.c: 1352: width = 0;
  6095  000BCA  0E00               	movlw	0
  6096  000BCC  0101               	movlb	1	; () banked
  6097  000BCE  6F29               	movwf	(printf@width+1)& (0+255),b
  6098  000BD0  0E00               	movlw	0
  6099  000BD2  6F28               	movwf	printf@width& (0+255),b
  6100  000BD4                     l8854:
  6101                           
  6102                           ; BSR set to: 1
  6103                           ;doprnt.c: 1353: }
  6104                           ;doprnt.c: 1381: if(width > c)
  6105  000BD4  0E80               	movlw	128
  6106  000BD6  0101               	movlb	1	; () banked
  6107  000BD8  BF30               	btfsc	printf@c& (0+255),7,b
  6108  000BDA  0E7F               	movlw	127
  6109  000BDC  0100               	movlb	0	; () banked
  6110  000BDE  6FC5               	movwf	??_printf& (0+255),b
  6111  000BE0  0101               	movlb	1	; () banked
  6112  000BE2  5128               	movf	printf@width& (0+255),w,b
  6113  000BE4  0101               	movlb	1	; () banked
  6114  000BE6  5D30               	subwf	printf@c& (0+255),w,b
  6115  000BE8  0101               	movlb	1	; () banked
  6116  000BEA  5129               	movf	(printf@width+1)& (0+255),w,b
  6117  000BEC  0A80               	xorlw	128
  6118  000BEE  0100               	movlb	0	; () banked
  6119  000BF0  59C5               	subwfb	??_printf& (0+255),w,b
  6120  000BF2  B0D8               	btfsc	status,0,c
  6121  000BF4  D00B               	goto	l8858
  6122                           
  6123                           ; BSR set to: 0
  6124                           ;doprnt.c: 1382: width -= c;
  6125  000BF6  0101               	movlb	1	; () banked
  6126  000BF8  5130               	movf	printf@c& (0+255),w,b
  6127  000BFA  0101               	movlb	1	; () banked
  6128  000BFC  5F28               	subwf	printf@width& (0+255),f,b
  6129  000BFE  0E00               	movlw	0
  6130  000C00  0101               	movlb	1	; () banked
  6131  000C02  BF30               	btfsc	printf@c& (0+255),7,b
  6132  000C04  0EFF               	movlw	255
  6133  000C06  0101               	movlb	1	; () banked
  6134  000C08  5B29               	subwfb	(printf@width+1)& (0+255),f,b
  6135  000C0A  D005               	goto	l8860
  6136  000C0C                     l8858:
  6137                           
  6138                           ;doprnt.c: 1383: else
  6139                           ;doprnt.c: 1384: width = 0;
  6140  000C0C  0E00               	movlw	0
  6141  000C0E  0101               	movlb	1	; () banked
  6142  000C10  6F29               	movwf	(printf@width+1)& (0+255),b
  6143  000C12  0E00               	movlw	0
  6144  000C14  6F28               	movwf	printf@width& (0+255),b
  6145  000C16                     l8860:
  6146                           
  6147                           ; BSR set to: 1
  6148                           ;doprnt.c: 1422: {
  6149                           ;doprnt.c: 1424: if(width
  6150                           ;doprnt.c: 1428: )
  6151  000C16  0101               	movlb	1	; () banked
  6152  000C18  5128               	movf	printf@width& (0+255),w,b
  6153  000C1A  0101               	movlb	1	; () banked
  6154  000C1C  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6155  000C1E  B4D8               	btfsc	status,2,c
  6156  000C20  D00D               	goto	l8866
  6157  000C22                     l8862:
  6158                           
  6159                           ; BSR set to: 1
  6160                           ;doprnt.c: 1430: (putch(' ') );
  6161  000C22  0E20               	movlw	32
  6162  000C24  EC0D  F029         	call	_putch
  6163                           
  6164                           ;doprnt.c: 1431: while(--width);
  6165  000C28  0101               	movlb	1	; () banked
  6166  000C2A  0728               	decf	printf@width& (0+255),f,b
  6167  000C2C  A0D8               	btfss	status,0,c
  6168  000C2E  0729               	decf	(printf@width+1)& (0+255),f,b
  6169  000C30  0101               	movlb	1	; () banked
  6170  000C32  5128               	movf	printf@width& (0+255),w,b
  6171  000C34  0101               	movlb	1	; () banked
  6172  000C36  1129               	iorwf	(printf@width+1)& (0+255),w,b
  6173  000C38  A4D8               	btfss	status,2,c
  6174  000C3A  D7F3               	goto	l8862
  6175  000C3C                     l8866:
  6176                           
  6177                           ; BSR set to: 1
  6178                           ;doprnt.c: 1438: if(flag & 0x03)
  6179  000C3C  0E03               	movlw	3
  6180  000C3E  0101               	movlb	1	; () banked
  6181  000C40  151C               	andwf	printf@flag& (0+255),w,b
  6182  000C42  0100               	movlb	0	; () banked
  6183  000C44  6FC5               	movwf	??_printf& (0+255),b
  6184  000C46  0E00               	movlw	0
  6185  000C48  0101               	movlb	1	; () banked
  6186  000C4A  151D               	andwf	(printf@flag+1)& (0+255),w,b
  6187  000C4C  0100               	movlb	0	; () banked
  6188  000C4E  6FC6               	movwf	(??_printf+1)& (0+255),b
  6189  000C50  0100               	movlb	0	; () banked
  6190  000C52  51C5               	movf	??_printf& (0+255),w,b
  6191  000C54  0100               	movlb	0	; () banked
  6192  000C56  11C6               	iorwf	(??_printf+1)& (0+255),w,b
  6193  000C58  B4D8               	btfsc	status,2,c
  6194  000C5A  D049               	goto	l8874
  6195                           
  6196                           ; BSR set to: 0
  6197                           ;doprnt.c: 1439: (putch('-') );
  6198  000C5C  0E2D               	movlw	45
  6199  000C5E  EC0D  F029         	call	_putch
  6200                           
  6201                           ;doprnt.c: 1469: }
  6202                           ;doprnt.c: 1474: while(prec--) {
  6203  000C62  D045               	goto	l8874
  6204  000C64                     l8870:
  6205                           
  6206                           ;doprnt.c: 1478: {
  6207                           ;doprnt.c: 1489: c = (val / dpowers[prec]) % 10 + '0';
  6208  000C64  C12E  F0C5         	movff	printf@prec,??_printf
  6209  000C68  C12F  F0C6         	movff	printf@prec+1,??_printf+1
  6210  000C6C  0100               	movlb	0	; () banked
  6211  000C6E  90D8               	bcf	status,0,c
  6212  000C70  37C5               	rlcf	??_printf& (0+255),f,b
  6213  000C72  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6214  000C74  0100               	movlb	0	; () banked
  6215  000C76  90D8               	bcf	status,0,c
  6216  000C78  37C5               	rlcf	??_printf& (0+255),f,b
  6217  000C7A  37C6               	rlcf	(??_printf+1)& (0+255),f,b
  6218  000C7C  0EBB               	movlw	low _dpowers
  6219  000C7E  0100               	movlb	0	; () banked
  6220  000C80  25C5               	addwf	??_printf& (0+255),w,b
  6221  000C82  6EF6               	movwf	tblptrl,c
  6222  000C84  0E7D               	movlw	high _dpowers
  6223  000C86  21C6               	addwfc	(??_printf+1)& (0+255),w,b
  6224  000C88  6EF7               	movwf	tblptrh,c
  6225  000C8A                     	if	0	;There are less than 3 active tblptr bytes
  6226  000C8A                     	endif
  6227  000C8A  0009               	tblrd		*+
  6228  000C8C  CFF5 F079          	movff	tablat,___lldiv@divisor
  6229  000C90  0009               	tblrd		*+
  6230  000C92  CFF5 F07A          	movff	tablat,___lldiv@divisor+1
  6231  000C96  0009               	tblrd		*+
  6232  000C98  CFF5 F07B          	movff	tablat,___lldiv@divisor+2
  6233  000C9C  000A               	tblrd		*-
  6234  000C9E  CFF5 F07C          	movff	tablat,___lldiv@divisor+3
  6235  000CA2  C122  F075         	movff	printf@val,___lldiv@dividend
  6236  000CA6  C123  F076         	movff	printf@val+1,___lldiv@dividend+1
  6237  000CAA  C124  F077         	movff	printf@val+2,___lldiv@dividend+2
  6238  000CAE  C125  F078         	movff	printf@val+3,___lldiv@dividend+3
  6239  000CB2  EC84  F022         	call	___lldiv	;wreg free
  6240  000CB6  C075  F082         	movff	?___lldiv,___llmod@dividend
  6241  000CBA  C076  F083         	movff	?___lldiv+1,___llmod@dividend+1
  6242  000CBE  C077  F084         	movff	?___lldiv+2,___llmod@dividend+2
  6243  000CC2  C078  F085         	movff	?___lldiv+3,___llmod@dividend+3
  6244  000CC6  0E0A               	movlw	10
  6245  000CC8  0100               	movlb	0	; () banked
  6246  000CCA  6F86               	movwf	___llmod@divisor& (0+255),b
  6247  000CCC  0E00               	movlw	0
  6248  000CCE  6F87               	movwf	(___llmod@divisor+1)& (0+255),b
  6249  000CD0  0E00               	movlw	0
  6250  000CD2  6F88               	movwf	(___llmod@divisor+2)& (0+255),b
  6251  000CD4  0E00               	movlw	0
  6252  000CD6  6F89               	movwf	(___llmod@divisor+3)& (0+255),b
  6253  000CD8  EC84  F023         	call	___llmod	;wreg free
  6254  000CDC  0100               	movlb	0	; () banked
  6255  000CDE  5182               	movf	?___llmod& (0+255),w,b
  6256  000CE0  0F30               	addlw	48
  6257  000CE2  0101               	movlb	1	; () banked
  6258  000CE4  6F30               	movwf	printf@c& (0+255),b
  6259                           
  6260                           ; BSR set to: 1
  6261                           ;doprnt.c: 1523: }
  6262                           ;doprnt.c: 1524: (putch(c) );
  6263  000CE6  0101               	movlb	1	; () banked
  6264  000CE8  5130               	movf	printf@c& (0+255),w,b
  6265  000CEA  EC0D  F029         	call	_putch
  6266  000CEE                     l8874:
  6267  000CEE  0101               	movlb	1	; () banked
  6268  000CF0  072E               	decf	printf@prec& (0+255),f,b
  6269  000CF2  A0D8               	btfss	status,0,c
  6270  000CF4  072F               	decf	(printf@prec+1)& (0+255),f,b
  6271  000CF6  0101               	movlb	1	; () banked
  6272  000CF8  292E               	incf	printf@prec& (0+255),w,b
  6273  000CFA  E1B4               	bnz	l8870
  6274  000CFC  0101               	movlb	1	; () banked
  6275  000CFE  292F               	incf	(printf@prec+1)& (0+255),w,b
  6276  000D00  A4D8               	btfss	status,2,c
  6277  000D02  D7B0               	goto	l8870
  6278  000D04                     l8876:
  6279  000D04  C100  FFF6         	movff	printf@f,tblptrl
  6280  000D08  C101  FFF7         	movff	printf@f+1,tblptrh
  6281  000D0C  0101               	movlb	1	; () banked
  6282  000D0E  4B00               	infsnz	printf@f& (0+255),f,b
  6283  000D10  2B01               	incf	(printf@f+1)& (0+255),f,b
  6284  000D12                     	if	0	;tblptru may be non-zero
  6285  000D12                     	endif
  6286  000D12                     	if	0	;tblptru may be non-zero
  6287  000D12                     	endif
  6288  000D12  0008               	tblrd		*
  6289  000D14  CFF5 F130          	movff	tablat,printf@c
  6290  000D18  0101               	movlb	1	; () banked
  6291  000D1A  5130               	movf	printf@c& (0+255),w,b
  6292  000D1C  B4D8               	btfsc	status,2,c
  6293  000D1E  0012               	return	
  6294  000D20  EF63  F000         	goto	l8578
  6295  000D24                     __end_of_printf:
  6296                           	opt stack 0
  6297                           tblptru	equ	0xFF8
  6298                           tblptrh	equ	0xFF7
  6299                           tblptrl	equ	0xFF6
  6300                           tablat	equ	0xFF5
  6301                           prodh	equ	0xFF4
  6302                           prodl	equ	0xFF3
  6303                           intcon	equ	0xFF2
  6304                           postinc0	equ	0xFEE
  6305                           wreg	equ	0xFE8
  6306                           postdec1	equ	0xFE5
  6307                           fsr1l	equ	0xFE1
  6308                           indf2	equ	0xFDF
  6309                           postinc2	equ	0xFDE
  6310                           postdec2	equ	0xFDD
  6311                           fsr2h	equ	0xFDA
  6312                           fsr2l	equ	0xFD9
  6313                           status	equ	0xFD8
  6314                           
  6315 ;; *************** function _scale *****************
  6316 ;; Defined at:
  6317 ;;		line 425 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  6318 ;; Parameters:    Size  Location     Type
  6319 ;;  scl             1    wreg     char 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  scl             1   68[BANK0 ] char 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  4   60[BANK0 ] char 
  6324 ;; Registers used:
  6325 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6331 ;;      Params:         0       4       0       0       0       0       0
  6332 ;;      Locals:         0       5       0       0       0       0       0
  6333 ;;      Temps:          0       0       0       0       0       0       0
  6334 ;;      Totals:         0       9       0       0       0       0       0
  6335 ;;Total ram usage:        9 bytes
  6336 ;; Hardware stack levels used:    1
  6337 ;; Hardware stack levels required when called:    9
  6338 ;; This function calls:
  6339 ;;		___awdiv
  6340 ;;		___awmod
  6341 ;;		___flmul
  6342 ;; This function is called by:
  6343 ;;		_printf
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text14
  6348  000D24                     __ptext14:
  6349                           	opt stack 0
  6350  000D24                     _scale:
  6351                           	opt stack 18
  6352                           
  6353                           ; BSR set to: 1
  6354                           ;incstack = 0
  6355                           ;scale@scl stored from wreg
  6356  000D24  0100               	movlb	0	; () banked
  6357  000D26  6FA4               	movwf	scale@scl& (0+255),b
  6358                           
  6359                           ;doprnt.c: 428: if(scl < 0) {
  6360  000D28  0100               	movlb	0	; () banked
  6361  000D2A  AFA4               	btfss	scale@scl& (0+255),7,b
  6362  000D2C  D133               	goto	l7998
  6363                           
  6364                           ; BSR set to: 0
  6365                           ;doprnt.c: 429: scl = -scl;
  6366  000D2E  0100               	movlb	0	; () banked
  6367  000D30  6DA4               	negf	scale@scl& (0+255),b
  6368                           
  6369                           ;doprnt.c: 430: if(scl>=110)
  6370  000D32  0100               	movlb	0	; () banked
  6371  000D34  51A4               	movf	scale@scl& (0+255),w,b
  6372  000D36  0A80               	xorlw	128
  6373  000D38  0F12               	addlw	-238
  6374  000D3A  A0D8               	btfss	status,0,c
  6375  000D3C  D0B2               	goto	l7988
  6376                           
  6377                           ; BSR set to: 0
  6378                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6379  000D3E  0E00               	movlw	0
  6380  000D40  0100               	movlb	0	; () banked
  6381  000D42  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6382  000D44  0E0A               	movlw	10
  6383  000D46  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6384  000D48  0E00               	movlw	0
  6385  000D4A  0100               	movlb	0	; () banked
  6386  000D4C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6387  000D4E  0E64               	movlw	100
  6388  000D50  6F77               	movwf	___awmod@divisor& (0+255),b
  6389  000D52  0100               	movlb	0	; () banked
  6390  000D54  51A4               	movf	scale@scl& (0+255),w,b
  6391  000D56  0100               	movlb	0	; () banked
  6392  000D58  6F75               	movwf	___awmod@dividend& (0+255),b
  6393  000D5A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6394  000D5C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6395  000D5E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6396  000D60  EC33  F023         	call	___awmod	;wreg free
  6397  000D64  C075  F07B         	movff	?___awmod,___awdiv@dividend
  6398  000D68  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  6399  000D6C  EC25  F022         	call	___awdiv	;wreg free
  6400  000D70  0100               	movlb	0	; () banked
  6401  000D72  90D8               	bcf	status,0,c
  6402  000D74  377B               	rlcf	?___awdiv& (0+255),f,b
  6403  000D76  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6404  000D78  0100               	movlb	0	; () banked
  6405  000D7A  90D8               	bcf	status,0,c
  6406  000D7C  377B               	rlcf	?___awdiv& (0+255),f,b
  6407  000D7E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6408  000D80  0E24               	movlw	36
  6409  000D82  0100               	movlb	0	; () banked
  6410  000D84  277B               	addwf	?___awdiv& (0+255),f,b
  6411  000D86  0E00               	movlw	0
  6412  000D88  0100               	movlb	0	; () banked
  6413  000D8A  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6414  000D8C  0E53               	movlw	low __npowers_
  6415  000D8E  0100               	movlb	0	; () banked
  6416  000D90  257B               	addwf	?___awdiv& (0+255),w,b
  6417  000D92  6EF6               	movwf	tblptrl,c
  6418  000D94  0E7D               	movlw	high __npowers_
  6419  000D96  0100               	movlb	0	; () banked
  6420  000D98  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6421  000D9A  6EF7               	movwf	tblptrh,c
  6422  000D9C                     	if	0	;There are less than 3 active tblptr bytes
  6423  000D9C                     	endif
  6424  000D9C  0009               	tblrd		*+
  6425  000D9E  CFF5 F087          	movff	tablat,___flmul@a
  6426  000DA2  0009               	tblrd		*+
  6427  000DA4  CFF5 F088          	movff	tablat,___flmul@a+1
  6428  000DA8  0009               	tblrd		*+
  6429  000DAA  CFF5 F089          	movff	tablat,___flmul@a+2
  6430  000DAE  000A               	tblrd		*-
  6431  000DB0  CFF5 F08A          	movff	tablat,___flmul@a+3
  6432  000DB4  0E00               	movlw	0
  6433  000DB6  0100               	movlb	0	; () banked
  6434  000DB8  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6435  000DBA  0E64               	movlw	100
  6436  000DBC  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6437  000DBE  0100               	movlb	0	; () banked
  6438  000DC0  51A4               	movf	scale@scl& (0+255),w,b
  6439  000DC2  0100               	movlb	0	; () banked
  6440  000DC4  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6441  000DC6  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6442  000DC8  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6443  000DCA  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6444  000DCC  EC25  F022         	call	___awdiv	;wreg free
  6445  000DD0  0100               	movlb	0	; () banked
  6446  000DD2  90D8               	bcf	status,0,c
  6447  000DD4  377B               	rlcf	?___awdiv& (0+255),f,b
  6448  000DD6  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6449  000DD8  0100               	movlb	0	; () banked
  6450  000DDA  90D8               	bcf	status,0,c
  6451  000DDC  377B               	rlcf	?___awdiv& (0+255),f,b
  6452  000DDE  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6453  000DE0  0E48               	movlw	72
  6454  000DE2  0100               	movlb	0	; () banked
  6455  000DE4  277B               	addwf	?___awdiv& (0+255),f,b
  6456  000DE6  0E00               	movlw	0
  6457  000DE8  0100               	movlb	0	; () banked
  6458  000DEA  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6459  000DEC  0E53               	movlw	low __npowers_
  6460  000DEE  0100               	movlb	0	; () banked
  6461  000DF0  257B               	addwf	?___awdiv& (0+255),w,b
  6462  000DF2  6EF6               	movwf	tblptrl,c
  6463  000DF4  0E7D               	movlw	high __npowers_
  6464  000DF6  0100               	movlb	0	; () banked
  6465  000DF8  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6466  000DFA  6EF7               	movwf	tblptrh,c
  6467  000DFC                     	if	0	;There are less than 3 active tblptr bytes
  6468  000DFC                     	endif
  6469  000DFC  0009               	tblrd		*+
  6470  000DFE  CFF5 F083          	movff	tablat,___flmul@b
  6471  000E02  0009               	tblrd		*+
  6472  000E04  CFF5 F084          	movff	tablat,___flmul@b+1
  6473  000E08  0009               	tblrd		*+
  6474  000E0A  CFF5 F085          	movff	tablat,___flmul@b+2
  6475  000E0E  000A               	tblrd		*-
  6476  000E10  CFF5 F086          	movff	tablat,___flmul@b+3
  6477  000E14  EC4F  F00B         	call	___flmul	;wreg free
  6478  000E18  C083  F0A0         	movff	?___flmul,_scale$2841
  6479  000E1C  C084  F0A1         	movff	?___flmul+1,_scale$2841+1
  6480  000E20  C085  F0A2         	movff	?___flmul+2,_scale$2841+2
  6481  000E24  C086  F0A3         	movff	?___flmul+3,_scale$2841+3
  6482                           
  6483                           ;doprnt.c: 431: return _npowers_[scl/100+18] * _npowers_[(scl%100)/10+9] * _npowers_[scl
      +                          %10];
  6484  000E28  C0A0  F083         	movff	_scale$2841,___flmul@b
  6485  000E2C  C0A1  F084         	movff	_scale$2841+1,___flmul@b+1
  6486  000E30  C0A2  F085         	movff	_scale$2841+2,___flmul@b+2
  6487  000E34  C0A3  F086         	movff	_scale$2841+3,___flmul@b+3
  6488  000E38  0E00               	movlw	0
  6489  000E3A  0100               	movlb	0	; () banked
  6490  000E3C  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6491  000E3E  0E0A               	movlw	10
  6492  000E40  6F77               	movwf	___awmod@divisor& (0+255),b
  6493  000E42  0100               	movlb	0	; () banked
  6494  000E44  51A4               	movf	scale@scl& (0+255),w,b
  6495  000E46  0100               	movlb	0	; () banked
  6496  000E48  6F75               	movwf	___awmod@dividend& (0+255),b
  6497  000E4A  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6498  000E4C  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6499  000E4E  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6500  000E50  EC33  F023         	call	___awmod	;wreg free
  6501  000E54  0100               	movlb	0	; () banked
  6502  000E56  90D8               	bcf	status,0,c
  6503  000E58  3775               	rlcf	?___awmod& (0+255),f,b
  6504  000E5A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6505  000E5C  0100               	movlb	0	; () banked
  6506  000E5E  90D8               	bcf	status,0,c
  6507  000E60  3775               	rlcf	?___awmod& (0+255),f,b
  6508  000E62  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6509  000E64  0E53               	movlw	low __npowers_
  6510  000E66  0100               	movlb	0	; () banked
  6511  000E68  2575               	addwf	?___awmod& (0+255),w,b
  6512  000E6A  6EF6               	movwf	tblptrl,c
  6513  000E6C  0E7D               	movlw	high __npowers_
  6514  000E6E  0100               	movlb	0	; () banked
  6515  000E70  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6516  000E72  6EF7               	movwf	tblptrh,c
  6517  000E74                     	if	0	;There are less than 3 active tblptr bytes
  6518  000E74                     	endif
  6519  000E74  0009               	tblrd		*+
  6520  000E76  CFF5 F087          	movff	tablat,___flmul@a
  6521  000E7A  0009               	tblrd		*+
  6522  000E7C  CFF5 F088          	movff	tablat,___flmul@a+1
  6523  000E80  0009               	tblrd		*+
  6524  000E82  CFF5 F089          	movff	tablat,___flmul@a+2
  6525  000E86  000A               	tblrd		*-
  6526  000E88  CFF5 F08A          	movff	tablat,___flmul@a+3
  6527  000E8C  EC4F  F00B         	call	___flmul	;wreg free
  6528  000E90  C083  F09C         	movff	?___flmul,?_scale
  6529  000E94  C084  F09D         	movff	?___flmul+1,?_scale+1
  6530  000E98  C085  F09E         	movff	?___flmul+2,?_scale+2
  6531  000E9C  C086  F09F         	movff	?___flmul+3,?_scale+3
  6532  000EA0  0012               	return	
  6533  000EA2                     l7988:
  6534                           
  6535                           ;doprnt.c: 432: else if(scl > 10)
  6536  000EA2  0100               	movlb	0	; () banked
  6537  000EA4  51A4               	movf	scale@scl& (0+255),w,b
  6538  000EA6  0A80               	xorlw	128
  6539  000EA8  0F75               	addlw	-139
  6540  000EAA  A0D8               	btfss	status,0,c
  6541  000EAC  D05D               	goto	l7994
  6542                           
  6543                           ; BSR set to: 0
  6544                           ;doprnt.c: 433: return _npowers_[scl/10+9] * _npowers_[scl%10];
  6545  000EAE  0E00               	movlw	0
  6546  000EB0  0100               	movlb	0	; () banked
  6547  000EB2  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6548  000EB4  0E0A               	movlw	10
  6549  000EB6  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6550  000EB8  0100               	movlb	0	; () banked
  6551  000EBA  51A4               	movf	scale@scl& (0+255),w,b
  6552  000EBC  0100               	movlb	0	; () banked
  6553  000EBE  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6554  000EC0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6555  000EC2  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6556  000EC4  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6557  000EC6  EC25  F022         	call	___awdiv	;wreg free
  6558  000ECA  0100               	movlb	0	; () banked
  6559  000ECC  90D8               	bcf	status,0,c
  6560  000ECE  377B               	rlcf	?___awdiv& (0+255),f,b
  6561  000ED0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6562  000ED2  0100               	movlb	0	; () banked
  6563  000ED4  90D8               	bcf	status,0,c
  6564  000ED6  377B               	rlcf	?___awdiv& (0+255),f,b
  6565  000ED8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6566  000EDA  0E24               	movlw	36
  6567  000EDC  0100               	movlb	0	; () banked
  6568  000EDE  277B               	addwf	?___awdiv& (0+255),f,b
  6569  000EE0  0E00               	movlw	0
  6570  000EE2  0100               	movlb	0	; () banked
  6571  000EE4  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6572  000EE6  0E53               	movlw	low __npowers_
  6573  000EE8  0100               	movlb	0	; () banked
  6574  000EEA  257B               	addwf	?___awdiv& (0+255),w,b
  6575  000EEC  6EF6               	movwf	tblptrl,c
  6576  000EEE  0E7D               	movlw	high __npowers_
  6577  000EF0  0100               	movlb	0	; () banked
  6578  000EF2  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6579  000EF4  6EF7               	movwf	tblptrh,c
  6580  000EF6                     	if	0	;There are less than 3 active tblptr bytes
  6581  000EF6                     	endif
  6582  000EF6  0009               	tblrd		*+
  6583  000EF8  CFF5 F083          	movff	tablat,___flmul@b
  6584  000EFC  0009               	tblrd		*+
  6585  000EFE  CFF5 F084          	movff	tablat,___flmul@b+1
  6586  000F02  0009               	tblrd		*+
  6587  000F04  CFF5 F085          	movff	tablat,___flmul@b+2
  6588  000F08  000A               	tblrd		*-
  6589  000F0A  CFF5 F086          	movff	tablat,___flmul@b+3
  6590  000F0E  0E00               	movlw	0
  6591  000F10  0100               	movlb	0	; () banked
  6592  000F12  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6593  000F14  0E0A               	movlw	10
  6594  000F16  6F77               	movwf	___awmod@divisor& (0+255),b
  6595  000F18  0100               	movlb	0	; () banked
  6596  000F1A  51A4               	movf	scale@scl& (0+255),w,b
  6597  000F1C  0100               	movlb	0	; () banked
  6598  000F1E  6F75               	movwf	___awmod@dividend& (0+255),b
  6599  000F20  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6600  000F22  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6601  000F24  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6602  000F26  EC33  F023         	call	___awmod	;wreg free
  6603  000F2A  0100               	movlb	0	; () banked
  6604  000F2C  90D8               	bcf	status,0,c
  6605  000F2E  3775               	rlcf	?___awmod& (0+255),f,b
  6606  000F30  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6607  000F32  0100               	movlb	0	; () banked
  6608  000F34  90D8               	bcf	status,0,c
  6609  000F36  3775               	rlcf	?___awmod& (0+255),f,b
  6610  000F38  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6611  000F3A  0E53               	movlw	low __npowers_
  6612  000F3C  0100               	movlb	0	; () banked
  6613  000F3E  2575               	addwf	?___awmod& (0+255),w,b
  6614  000F40  6EF6               	movwf	tblptrl,c
  6615  000F42  0E7D               	movlw	high __npowers_
  6616  000F44  0100               	movlb	0	; () banked
  6617  000F46  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6618  000F48  6EF7               	movwf	tblptrh,c
  6619  000F4A                     	if	0	;There are less than 3 active tblptr bytes
  6620  000F4A                     	endif
  6621  000F4A  0009               	tblrd		*+
  6622  000F4C  CFF5 F087          	movff	tablat,___flmul@a
  6623  000F50  0009               	tblrd		*+
  6624  000F52  CFF5 F088          	movff	tablat,___flmul@a+1
  6625  000F56  0009               	tblrd		*+
  6626  000F58  CFF5 F089          	movff	tablat,___flmul@a+2
  6627  000F5C  000A               	tblrd		*-
  6628  000F5E  CFF5 F08A          	movff	tablat,___flmul@a+3
  6629  000F62  EC4F  F00B         	call	___flmul	;wreg free
  6630  000F66  D794               	goto	L2
  6631  000F68                     l7994:
  6632                           
  6633                           ;doprnt.c: 434: return _npowers_[scl];
  6634  000F68  0100               	movlb	0	; () banked
  6635  000F6A  51A4               	movf	scale@scl& (0+255),w,b
  6636  000F6C  0D04               	mullw	4
  6637  000F6E  0E53               	movlw	low __npowers_
  6638  000F70  24F3               	addwf	prodl,w,c
  6639  000F72  6EF6               	movwf	tblptrl,c
  6640  000F74  0E7D               	movlw	high __npowers_
  6641  000F76  20F4               	addwfc	prodh,w,c
  6642  000F78  6EF7               	movwf	tblptrh,c
  6643  000F7A                     	if	0	;There are less than 3 active tblptr bytes
  6644  000F7A                     	endif
  6645  000F7A  0009               	tblrd		*+
  6646  000F7C  CFF5 F09C          	movff	tablat,?_scale
  6647  000F80  0009               	tblrd		*+
  6648  000F82  CFF5 F09D          	movff	tablat,?_scale+1
  6649  000F86  0009               	tblrd		*+
  6650  000F88  CFF5 F09E          	movff	tablat,?_scale+2
  6651  000F8C  000A               	tblrd		*-
  6652  000F8E  CFF5 F09F          	movff	tablat,?_scale+3
  6653                           
  6654                           ; BSR set to: 0
  6655  000F92  0012               	return	
  6656  000F94                     l7998:
  6657                           
  6658                           ; BSR set to: 0
  6659                           ;doprnt.c: 435: }
  6660                           ;doprnt.c: 436: if(scl>=110)
  6661  000F94  0100               	movlb	0	; () banked
  6662  000F96  51A4               	movf	scale@scl& (0+255),w,b
  6663  000F98  0A80               	xorlw	128
  6664  000F9A  0F12               	addlw	-238
  6665  000F9C  A0D8               	btfss	status,0,c
  6666  000F9E  D0B2               	goto	l8006
  6667                           
  6668                           ; BSR set to: 0
  6669                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6670  000FA0  0E00               	movlw	0
  6671  000FA2  0100               	movlb	0	; () banked
  6672  000FA4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6673  000FA6  0E0A               	movlw	10
  6674  000FA8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6675  000FAA  0E00               	movlw	0
  6676  000FAC  0100               	movlb	0	; () banked
  6677  000FAE  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6678  000FB0  0E64               	movlw	100
  6679  000FB2  6F77               	movwf	___awmod@divisor& (0+255),b
  6680  000FB4  0100               	movlb	0	; () banked
  6681  000FB6  51A4               	movf	scale@scl& (0+255),w,b
  6682  000FB8  0100               	movlb	0	; () banked
  6683  000FBA  6F75               	movwf	___awmod@dividend& (0+255),b
  6684  000FBC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6685  000FBE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6686  000FC0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6687  000FC2  EC33  F023         	call	___awmod	;wreg free
  6688  000FC6  C075  F07B         	movff	?___awmod,___awdiv@dividend
  6689  000FCA  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  6690  000FCE  EC25  F022         	call	___awdiv	;wreg free
  6691  000FD2  0100               	movlb	0	; () banked
  6692  000FD4  90D8               	bcf	status,0,c
  6693  000FD6  377B               	rlcf	?___awdiv& (0+255),f,b
  6694  000FD8  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6695  000FDA  0100               	movlb	0	; () banked
  6696  000FDC  90D8               	bcf	status,0,c
  6697  000FDE  377B               	rlcf	?___awdiv& (0+255),f,b
  6698  000FE0  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6699  000FE2  0E24               	movlw	36
  6700  000FE4  0100               	movlb	0	; () banked
  6701  000FE6  277B               	addwf	?___awdiv& (0+255),f,b
  6702  000FE8  0E00               	movlw	0
  6703  000FEA  0100               	movlb	0	; () banked
  6704  000FEC  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6705  000FEE  0E87               	movlw	low __powers_
  6706  000FF0  0100               	movlb	0	; () banked
  6707  000FF2  257B               	addwf	?___awdiv& (0+255),w,b
  6708  000FF4  6EF6               	movwf	tblptrl,c
  6709  000FF6  0E7D               	movlw	high __powers_
  6710  000FF8  0100               	movlb	0	; () banked
  6711  000FFA  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6712  000FFC  6EF7               	movwf	tblptrh,c
  6713  000FFE                     	if	0	;There are less than 3 active tblptr bytes
  6714  000FFE                     	endif
  6715  000FFE  0009               	tblrd		*+
  6716  001000  CFF5 F087          	movff	tablat,___flmul@a
  6717  001004  0009               	tblrd		*+
  6718  001006  CFF5 F088          	movff	tablat,___flmul@a+1
  6719  00100A  0009               	tblrd		*+
  6720  00100C  CFF5 F089          	movff	tablat,___flmul@a+2
  6721  001010  000A               	tblrd		*-
  6722  001012  CFF5 F08A          	movff	tablat,___flmul@a+3
  6723  001016  0E00               	movlw	0
  6724  001018  0100               	movlb	0	; () banked
  6725  00101A  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6726  00101C  0E64               	movlw	100
  6727  00101E  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6728  001020  0100               	movlb	0	; () banked
  6729  001022  51A4               	movf	scale@scl& (0+255),w,b
  6730  001024  0100               	movlb	0	; () banked
  6731  001026  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6732  001028  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6733  00102A  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6734  00102C  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6735  00102E  EC25  F022         	call	___awdiv	;wreg free
  6736  001032  0100               	movlb	0	; () banked
  6737  001034  90D8               	bcf	status,0,c
  6738  001036  377B               	rlcf	?___awdiv& (0+255),f,b
  6739  001038  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6740  00103A  0100               	movlb	0	; () banked
  6741  00103C  90D8               	bcf	status,0,c
  6742  00103E  377B               	rlcf	?___awdiv& (0+255),f,b
  6743  001040  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6744  001042  0E48               	movlw	72
  6745  001044  0100               	movlb	0	; () banked
  6746  001046  277B               	addwf	?___awdiv& (0+255),f,b
  6747  001048  0E00               	movlw	0
  6748  00104A  0100               	movlb	0	; () banked
  6749  00104C  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6750  00104E  0E87               	movlw	low __powers_
  6751  001050  0100               	movlb	0	; () banked
  6752  001052  257B               	addwf	?___awdiv& (0+255),w,b
  6753  001054  6EF6               	movwf	tblptrl,c
  6754  001056  0E7D               	movlw	high __powers_
  6755  001058  0100               	movlb	0	; () banked
  6756  00105A  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6757  00105C  6EF7               	movwf	tblptrh,c
  6758  00105E                     	if	0	;There are less than 3 active tblptr bytes
  6759  00105E                     	endif
  6760  00105E  0009               	tblrd		*+
  6761  001060  CFF5 F083          	movff	tablat,___flmul@b
  6762  001064  0009               	tblrd		*+
  6763  001066  CFF5 F084          	movff	tablat,___flmul@b+1
  6764  00106A  0009               	tblrd		*+
  6765  00106C  CFF5 F085          	movff	tablat,___flmul@b+2
  6766  001070  000A               	tblrd		*-
  6767  001072  CFF5 F086          	movff	tablat,___flmul@b+3
  6768  001076  EC4F  F00B         	call	___flmul	;wreg free
  6769  00107A  C083  F0A0         	movff	?___flmul,_scale$2841
  6770  00107E  C084  F0A1         	movff	?___flmul+1,_scale$2841+1
  6771  001082  C085  F0A2         	movff	?___flmul+2,_scale$2841+2
  6772  001086  C086  F0A3         	movff	?___flmul+3,_scale$2841+3
  6773                           
  6774                           ;doprnt.c: 437: return _powers_[scl/100+18] * _powers_[(scl%100)/10+9] * _powers_[scl%10
      +                          ];
  6775  00108A  C0A0  F083         	movff	_scale$2841,___flmul@b
  6776  00108E  C0A1  F084         	movff	_scale$2841+1,___flmul@b+1
  6777  001092  C0A2  F085         	movff	_scale$2841+2,___flmul@b+2
  6778  001096  C0A3  F086         	movff	_scale$2841+3,___flmul@b+3
  6779  00109A  0E00               	movlw	0
  6780  00109C  0100               	movlb	0	; () banked
  6781  00109E  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6782  0010A0  0E0A               	movlw	10
  6783  0010A2  6F77               	movwf	___awmod@divisor& (0+255),b
  6784  0010A4  0100               	movlb	0	; () banked
  6785  0010A6  51A4               	movf	scale@scl& (0+255),w,b
  6786  0010A8  0100               	movlb	0	; () banked
  6787  0010AA  6F75               	movwf	___awmod@dividend& (0+255),b
  6788  0010AC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6789  0010AE  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6790  0010B0  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6791  0010B2  EC33  F023         	call	___awmod	;wreg free
  6792  0010B6  0100               	movlb	0	; () banked
  6793  0010B8  90D8               	bcf	status,0,c
  6794  0010BA  3775               	rlcf	?___awmod& (0+255),f,b
  6795  0010BC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6796  0010BE  0100               	movlb	0	; () banked
  6797  0010C0  90D8               	bcf	status,0,c
  6798  0010C2  3775               	rlcf	?___awmod& (0+255),f,b
  6799  0010C4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6800  0010C6  0E87               	movlw	low __powers_
  6801  0010C8  0100               	movlb	0	; () banked
  6802  0010CA  2575               	addwf	?___awmod& (0+255),w,b
  6803  0010CC  6EF6               	movwf	tblptrl,c
  6804  0010CE  0E7D               	movlw	high __powers_
  6805  0010D0  0100               	movlb	0	; () banked
  6806  0010D2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6807  0010D4  6EF7               	movwf	tblptrh,c
  6808  0010D6                     	if	0	;There are less than 3 active tblptr bytes
  6809  0010D6                     	endif
  6810  0010D6  0009               	tblrd		*+
  6811  0010D8  CFF5 F087          	movff	tablat,___flmul@a
  6812  0010DC  0009               	tblrd		*+
  6813  0010DE  CFF5 F088          	movff	tablat,___flmul@a+1
  6814  0010E2  0009               	tblrd		*+
  6815  0010E4  CFF5 F089          	movff	tablat,___flmul@a+2
  6816  0010E8  000A               	tblrd		*-
  6817  0010EA  CFF5 F08A          	movff	tablat,___flmul@a+3
  6818  0010EE  EC4F  F00B         	call	___flmul	;wreg free
  6819  0010F2  C083  F09C         	movff	?___flmul,?_scale
  6820  0010F6  C084  F09D         	movff	?___flmul+1,?_scale+1
  6821  0010FA  C085  F09E         	movff	?___flmul+2,?_scale+2
  6822  0010FE  C086  F09F         	movff	?___flmul+3,?_scale+3
  6823  001102  0012               	return	
  6824  001104                     l8006:
  6825                           
  6826                           ;doprnt.c: 438: else if(scl > 10)
  6827  001104  0100               	movlb	0	; () banked
  6828  001106  51A4               	movf	scale@scl& (0+255),w,b
  6829  001108  0A80               	xorlw	128
  6830  00110A  0F75               	addlw	-139
  6831  00110C  A0D8               	btfss	status,0,c
  6832  00110E  D05D               	goto	l8012
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;doprnt.c: 439: return _powers_[scl/10+9] * _powers_[scl%10];
  6836  001110  0E00               	movlw	0
  6837  001112  0100               	movlb	0	; () banked
  6838  001114  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  6839  001116  0E0A               	movlw	10
  6840  001118  6F7D               	movwf	___awdiv@divisor& (0+255),b
  6841  00111A  0100               	movlb	0	; () banked
  6842  00111C  51A4               	movf	scale@scl& (0+255),w,b
  6843  00111E  0100               	movlb	0	; () banked
  6844  001120  6F7B               	movwf	___awdiv@dividend& (0+255),b
  6845  001122  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  6846  001124  BF7B               	btfsc	___awdiv@dividend& (0+255),7,b
  6847  001126  077C               	decf	(___awdiv@dividend+1)& (0+255),f,b
  6848  001128  EC25  F022         	call	___awdiv	;wreg free
  6849  00112C  0100               	movlb	0	; () banked
  6850  00112E  90D8               	bcf	status,0,c
  6851  001130  377B               	rlcf	?___awdiv& (0+255),f,b
  6852  001132  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6853  001134  0100               	movlb	0	; () banked
  6854  001136  90D8               	bcf	status,0,c
  6855  001138  377B               	rlcf	?___awdiv& (0+255),f,b
  6856  00113A  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  6857  00113C  0E24               	movlw	36
  6858  00113E  0100               	movlb	0	; () banked
  6859  001140  277B               	addwf	?___awdiv& (0+255),f,b
  6860  001142  0E00               	movlw	0
  6861  001144  0100               	movlb	0	; () banked
  6862  001146  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  6863  001148  0E87               	movlw	low __powers_
  6864  00114A  0100               	movlb	0	; () banked
  6865  00114C  257B               	addwf	?___awdiv& (0+255),w,b
  6866  00114E  6EF6               	movwf	tblptrl,c
  6867  001150  0E7D               	movlw	high __powers_
  6868  001152  0100               	movlb	0	; () banked
  6869  001154  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  6870  001156  6EF7               	movwf	tblptrh,c
  6871  001158                     	if	0	;There are less than 3 active tblptr bytes
  6872  001158                     	endif
  6873  001158  0009               	tblrd		*+
  6874  00115A  CFF5 F083          	movff	tablat,___flmul@b
  6875  00115E  0009               	tblrd		*+
  6876  001160  CFF5 F084          	movff	tablat,___flmul@b+1
  6877  001164  0009               	tblrd		*+
  6878  001166  CFF5 F085          	movff	tablat,___flmul@b+2
  6879  00116A  000A               	tblrd		*-
  6880  00116C  CFF5 F086          	movff	tablat,___flmul@b+3
  6881  001170  0E00               	movlw	0
  6882  001172  0100               	movlb	0	; () banked
  6883  001174  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  6884  001176  0E0A               	movlw	10
  6885  001178  6F77               	movwf	___awmod@divisor& (0+255),b
  6886  00117A  0100               	movlb	0	; () banked
  6887  00117C  51A4               	movf	scale@scl& (0+255),w,b
  6888  00117E  0100               	movlb	0	; () banked
  6889  001180  6F75               	movwf	___awmod@dividend& (0+255),b
  6890  001182  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  6891  001184  BF75               	btfsc	___awmod@dividend& (0+255),7,b
  6892  001186  0776               	decf	(___awmod@dividend+1)& (0+255),f,b
  6893  001188  EC33  F023         	call	___awmod	;wreg free
  6894  00118C  0100               	movlb	0	; () banked
  6895  00118E  90D8               	bcf	status,0,c
  6896  001190  3775               	rlcf	?___awmod& (0+255),f,b
  6897  001192  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6898  001194  0100               	movlb	0	; () banked
  6899  001196  90D8               	bcf	status,0,c
  6900  001198  3775               	rlcf	?___awmod& (0+255),f,b
  6901  00119A  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  6902  00119C  0E87               	movlw	low __powers_
  6903  00119E  0100               	movlb	0	; () banked
  6904  0011A0  2575               	addwf	?___awmod& (0+255),w,b
  6905  0011A2  6EF6               	movwf	tblptrl,c
  6906  0011A4  0E7D               	movlw	high __powers_
  6907  0011A6  0100               	movlb	0	; () banked
  6908  0011A8  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  6909  0011AA  6EF7               	movwf	tblptrh,c
  6910  0011AC                     	if	0	;There are less than 3 active tblptr bytes
  6911  0011AC                     	endif
  6912  0011AC  0009               	tblrd		*+
  6913  0011AE  CFF5 F087          	movff	tablat,___flmul@a
  6914  0011B2  0009               	tblrd		*+
  6915  0011B4  CFF5 F088          	movff	tablat,___flmul@a+1
  6916  0011B8  0009               	tblrd		*+
  6917  0011BA  CFF5 F089          	movff	tablat,___flmul@a+2
  6918  0011BE  000A               	tblrd		*-
  6919  0011C0  CFF5 F08A          	movff	tablat,___flmul@a+3
  6920  0011C4  EC4F  F00B         	call	___flmul	;wreg free
  6921  0011C8  D794               	goto	L3
  6922  0011CA                     l8012:
  6923                           
  6924                           ;doprnt.c: 440: return _powers_[scl];
  6925  0011CA  0100               	movlb	0	; () banked
  6926  0011CC  51A4               	movf	scale@scl& (0+255),w,b
  6927  0011CE  0D04               	mullw	4
  6928  0011D0  0E87               	movlw	low __powers_
  6929  0011D2  24F3               	addwf	prodl,w,c
  6930  0011D4  6EF6               	movwf	tblptrl,c
  6931  0011D6  0E7D               	movlw	high __powers_
  6932  0011D8  20F4               	addwfc	prodh,w,c
  6933  0011DA  6EF7               	movwf	tblptrh,c
  6934  0011DC                     	if	0	;There are less than 3 active tblptr bytes
  6935  0011DC                     	endif
  6936  0011DC  0009               	tblrd		*+
  6937  0011DE  CFF5 F09C          	movff	tablat,?_scale
  6938  0011E2  0009               	tblrd		*+
  6939  0011E4  CFF5 F09D          	movff	tablat,?_scale+1
  6940  0011E8  0009               	tblrd		*+
  6941  0011EA  CFF5 F09E          	movff	tablat,?_scale+2
  6942  0011EE  000A               	tblrd		*-
  6943  0011F0  CFF5 F09F          	movff	tablat,?_scale+3
  6944  0011F4  0012               	return	
  6945  0011F6                     __end_of_scale:
  6946                           	opt stack 0
  6947                           tblptru	equ	0xFF8
  6948                           tblptrh	equ	0xFF7
  6949                           tblptrl	equ	0xFF6
  6950                           tablat	equ	0xFF5
  6951                           prodh	equ	0xFF4
  6952                           prodl	equ	0xFF3
  6953                           intcon	equ	0xFF2
  6954                           postinc0	equ	0xFEE
  6955                           wreg	equ	0xFE8
  6956                           postdec1	equ	0xFE5
  6957                           fsr1l	equ	0xFE1
  6958                           indf2	equ	0xFDF
  6959                           postinc2	equ	0xFDE
  6960                           postdec2	equ	0xFDD
  6961                           fsr2h	equ	0xFDA
  6962                           fsr2l	equ	0xFD9
  6963                           status	equ	0xFD8
  6964                           
  6965 ;; *************** function _putch *****************
  6966 ;; Defined at:
  6967 ;;		line 59 in file "source/IOConfig.h"
  6968 ;; Parameters:    Size  Location     Type
  6969 ;;  val             1    wreg     unsigned char 
  6970 ;; Auto vars:     Size  Location     Type
  6971 ;;  val             1   34[BANK0 ] unsigned char 
  6972 ;; Return value:  Size  Location     Type
  6973 ;;                  1    wreg      void 
  6974 ;; Registers used:
  6975 ;;		wreg, status,2, status,0, cstack
  6976 ;; Tracked objects:
  6977 ;;		On entry : 0/0
  6978 ;;		On exit  : 0/0
  6979 ;;		Unchanged: 0/0
  6980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6981 ;;      Params:         0       0       0       0       0       0       0
  6982 ;;      Locals:         0       1       0       0       0       0       0
  6983 ;;      Temps:          0       0       0       0       0       0       0
  6984 ;;      Totals:         0       1       0       0       0       0       0
  6985 ;;Total ram usage:        1 bytes
  6986 ;; Hardware stack levels used:    1
  6987 ;; Hardware stack levels required when called:   13
  6988 ;; This function calls:
  6989 ;;		_lcd_putc
  6990 ;; This function is called by:
  6991 ;;		_printf
  6992 ;;		_send_float
  6993 ;;		_send_int32
  6994 ;;		_send_int16
  6995 ;;		_send_float_vt
  6996 ;;		_send_int32_vt
  6997 ;;		_send_int16_vt
  6998 ;; This function uses a non-reentrant model
  6999 ;;
  7000                           
  7001                           	psect	text15
  7002  00521A                     __ptext15:
  7003                           	opt stack 0
  7004  00521A                     _putch:
  7005                           	opt stack 14
  7006                           
  7007                           ;incstack = 0
  7008                           ;putch@val stored from wreg
  7009  00521A  0100               	movlb	0	; () banked
  7010  00521C  6F82               	movwf	putch@val& (0+255),b
  7011                           
  7012                           ;IOConfig.h: 60: lcd_putc(val);
  7013  00521E  0100               	movlb	0	; () banked
  7014  005220  5182               	movf	putch@val& (0+255),w,b
  7015  005222  EC3A  F025         	call	_lcd_putc
  7016  005226  0012               	return		;funcret
  7017  005228                     __end_of_putch:
  7018                           	opt stack 0
  7019                           tblptru	equ	0xFF8
  7020                           tblptrh	equ	0xFF7
  7021                           tblptrl	equ	0xFF6
  7022                           tablat	equ	0xFF5
  7023                           prodh	equ	0xFF4
  7024                           prodl	equ	0xFF3
  7025                           intcon	equ	0xFF2
  7026                           postinc0	equ	0xFEE
  7027                           wreg	equ	0xFE8
  7028                           postdec1	equ	0xFE5
  7029                           fsr1l	equ	0xFE1
  7030                           indf2	equ	0xFDF
  7031                           postinc2	equ	0xFDE
  7032                           postdec2	equ	0xFDD
  7033                           fsr2h	equ	0xFDA
  7034                           fsr2l	equ	0xFD9
  7035                           status	equ	0xFD8
  7036                           
  7037 ;; *************** function _lcd_putc *****************
  7038 ;; Defined at:
  7039 ;;		line 212 in file "source/../../vclib_lcd.h"
  7040 ;; Parameters:    Size  Location     Type
  7041 ;;  cha             1    wreg     unsigned char 
  7042 ;; Auto vars:     Size  Location     Type
  7043 ;;  cha             1   33[BANK0 ] unsigned char 
  7044 ;; Return value:  Size  Location     Type
  7045 ;;                  1    wreg      void 
  7046 ;; Registers used:
  7047 ;;		wreg, status,2, status,0, cstack
  7048 ;; Tracked objects:
  7049 ;;		On entry : 0/0
  7050 ;;		On exit  : 0/0
  7051 ;;		Unchanged: 0/0
  7052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7053 ;;      Params:         0       0       0       0       0       0       0
  7054 ;;      Locals:         0       1       0       0       0       0       0
  7055 ;;      Temps:          0       1       0       0       0       0       0
  7056 ;;      Totals:         0       2       0       0       0       0       0
  7057 ;;Total ram usage:        2 bytes
  7058 ;; Hardware stack levels used:    1
  7059 ;; Hardware stack levels required when called:   12
  7060 ;; This function calls:
  7061 ;;		_lcd_gotoxy
  7062 ;;		_lcd_send_byte
  7063 ;; This function is called by:
  7064 ;;		_putch
  7065 ;;		_drawMenu
  7066 ;; This function uses a non-reentrant model
  7067 ;;
  7068                           
  7069                           	psect	text16
  7070  004A74                     __ptext16:
  7071                           	opt stack 0
  7072  004A74                     _lcd_putc:
  7073                           	opt stack 14
  7074                           
  7075                           ;incstack = 0
  7076                           ;lcd_putc@cha stored from wreg
  7077  004A74  0100               	movlb	0	; () banked
  7078  004A76  6F81               	movwf	lcd_putc@cha& (0+255),b
  7079                           
  7080                           ;vclib_lcd.h: 213: switch (cha) {
  7081  004A78  D02B               	goto	l7596
  7082  004A7A                     l7582:
  7083  004A7A  0E01               	movlw	1
  7084  004A7C  0100               	movlb	0	; () banked
  7085  004A7E  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  7086  004A80  0E01               	movlw	1
  7087  004A82  EC14  F028         	call	_lcd_gotoxy
  7088                           
  7089                           ;vclib_lcd.h: 215: break;
  7090  004A86  0012               	return	
  7091  004A88                     l7584:
  7092  004A88  0E01               	movlw	1
  7093  004A8A  0100               	movlb	0	; () banked
  7094  004A8C  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7095  004A8E  0E00               	movlw	0
  7096  004A90  EC48  F027         	call	_lcd_send_byte
  7097                           
  7098                           ;vclib_lcd.h: 218: _delay((unsigned long)((2)*(16000000/4000.0)));
  7099  004A94  0E0B               	movlw	11
  7100  004A96  0100               	movlb	0	; () banked
  7101  004A98  6F80               	movwf	??_lcd_putc& (0+255),b
  7102  004A9A  0E62               	movlw	98
  7103  004A9C                     u12117:
  7104  004A9C  2EE8               	decfsz	wreg,f,c
  7105  004A9E  D7FE               	goto	u12117
  7106  004AA0  2F80               	decfsz	??_lcd_putc& (0+255),f,b
  7107  004AA2  D7FC               	goto	u12117
  7108  004AA4  D000               	nop2	
  7109                           
  7110                           ;vclib_lcd.h: 223: break;
  7111  004AA6  0012               	return	
  7112  004AA8                     l7588:
  7113  004AA8  0E02               	movlw	2
  7114  004AAA  0100               	movlb	0	; () banked
  7115  004AAC  6F7D               	movwf	lcd_gotoxy@fila& (0+255),b
  7116  004AAE  0E01               	movlw	1
  7117  004AB0  EC14  F028         	call	_lcd_gotoxy
  7118                           
  7119                           ;vclib_lcd.h: 236: break;
  7120  004AB4  0012               	return	
  7121  004AB6                     l7590:
  7122  004AB6  0E10               	movlw	16
  7123  004AB8  0100               	movlb	0	; () banked
  7124  004ABA  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7125  004ABC  0E00               	movlw	0
  7126  004ABE  EC48  F027         	call	_lcd_send_byte
  7127                           
  7128                           ;vclib_lcd.h: 240: break;
  7129  004AC2  0012               	return	
  7130  004AC4                     l7592:
  7131  004AC4  C081  F07A         	movff	lcd_putc@cha,lcd_send_byte@n
  7132  004AC8  0E01               	movlw	1
  7133  004ACA  EC48  F027         	call	_lcd_send_byte
  7134                           
  7135                           ;vclib_lcd.h: 253: }
  7136                           
  7137                           ;vclib_lcd.h: 251: break;
  7138  004ACE  0012               	return	
  7139  004AD0                     l7596:
  7140  004AD0  0100               	movlb	0	; () banked
  7141  004AD2  5181               	movf	lcd_putc@cha& (0+255),w,b
  7142                           
  7143                           ; Switch size 1, requested type "space"
  7144                           ; Number of cases is 4, Range of values is 7 to 12
  7145                           ; switch strategies available:
  7146                           ; Name         Instructions Cycles
  7147                           ; simple_byte           13     7 (average)
  7148                           ;	Chosen strategy is simple_byte
  7149  004AD4  0A07               	xorlw	7	; case 7
  7150  004AD6  B4D8               	btfsc	status,2,c
  7151  004AD8  D7D0               	goto	l7582
  7152  004ADA  0A0F               	xorlw	15	; case 8
  7153  004ADC  B4D8               	btfsc	status,2,c
  7154  004ADE  D7EB               	goto	l7590
  7155  004AE0  0A02               	xorlw	2	; case 10
  7156  004AE2  B4D8               	btfsc	status,2,c
  7157  004AE4  D7E1               	goto	l7588
  7158  004AE6  0A06               	xorlw	6	; case 12
  7159  004AE8  B4D8               	btfsc	status,2,c
  7160  004AEA  D7CE               	goto	l7584
  7161  004AEC  D7EB               	goto	l7592
  7162  004AEE                     __end_of_lcd_putc:
  7163                           	opt stack 0
  7164                           tblptru	equ	0xFF8
  7165                           tblptrh	equ	0xFF7
  7166                           tblptrl	equ	0xFF6
  7167                           tablat	equ	0xFF5
  7168                           prodh	equ	0xFF4
  7169                           prodl	equ	0xFF3
  7170                           intcon	equ	0xFF2
  7171                           postinc0	equ	0xFEE
  7172                           wreg	equ	0xFE8
  7173                           postdec1	equ	0xFE5
  7174                           fsr1l	equ	0xFE1
  7175                           indf2	equ	0xFDF
  7176                           postinc2	equ	0xFDE
  7177                           postdec2	equ	0xFDD
  7178                           fsr2h	equ	0xFDA
  7179                           fsr2l	equ	0xFD9
  7180                           status	equ	0xFD8
  7181                           
  7182 ;; *************** function _lcd_gotoxy *****************
  7183 ;; Defined at:
  7184 ;;		line 198 in file "source/../../vclib_lcd.h"
  7185 ;; Parameters:    Size  Location     Type
  7186 ;;  pos             1    wreg     unsigned char 
  7187 ;;  fila            1   29[BANK0 ] unsigned char 
  7188 ;; Auto vars:     Size  Location     Type
  7189 ;;  pos             1   30[BANK0 ] unsigned char 
  7190 ;;  address         1   31[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  1    wreg      void 
  7193 ;; Registers used:
  7194 ;;		wreg, status,2, status,0, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7200 ;;      Params:         0       1       0       0       0       0       0
  7201 ;;      Locals:         0       2       0       0       0       0       0
  7202 ;;      Temps:          0       0       0       0       0       0       0
  7203 ;;      Totals:         0       3       0       0       0       0       0
  7204 ;;Total ram usage:        3 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:   11
  7207 ;; This function calls:
  7208 ;;		_lcd_send_byte
  7209 ;; This function is called by:
  7210 ;;		_lcd_putc
  7211 ;;		_drawMenu
  7212 ;;		_drawChanVal
  7213 ;;		_drawPassWord
  7214 ;;		_drawBadPass
  7215 ;;		_drawAdvON
  7216 ;;		_drawAdvOFF
  7217 ;;		_drawSNquest
  7218 ;;		_lcd_getc
  7219 ;; This function uses a non-reentrant model
  7220 ;;
  7221                           
  7222                           	psect	text17
  7223  005028                     __ptext17:
  7224                           	opt stack 0
  7225  005028                     _lcd_gotoxy:
  7226                           	opt stack 14
  7227                           
  7228                           ;incstack = 0
  7229                           ;lcd_gotoxy@pos stored from wreg
  7230  005028  0100               	movlb	0	; () banked
  7231  00502A  6F7E               	movwf	lcd_gotoxy@pos& (0+255),b
  7232                           
  7233                           ;vclib_lcd.h: 199: unsigned char address;
  7234                           ;vclib_lcd.h: 200: if (fila != 1)
  7235  00502C  0100               	movlb	0	; () banked
  7236  00502E  057D               	decf	lcd_gotoxy@fila& (0+255),w,b
  7237  005030  B4D8               	btfsc	status,2,c
  7238  005032  D002               	goto	l7444
  7239                           
  7240                           ; BSR set to: 0
  7241                           ;vclib_lcd.h: 201: address = 0x40;
  7242  005034  0E40               	movlw	64
  7243  005036  D001               	goto	L4
  7244  005038                     l7444:
  7245                           
  7246                           ; BSR set to: 0
  7247                           ;vclib_lcd.h: 202: else
  7248                           ;vclib_lcd.h: 203: address = 0;
  7249  005038  0E00               	movlw	0
  7250  00503A                     L4:
  7251  00503A  0100               	movlb	0	; () banked
  7252  00503C  6F7F               	movwf	lcd_gotoxy@address& (0+255),b
  7253                           
  7254                           ; BSR set to: 0
  7255                           ;vclib_lcd.h: 204: address += pos - 1;
  7256                           
  7257                           ; BSR set to: 0
  7258  00503E  0100               	movlb	0	; () banked
  7259  005040  057E               	decf	lcd_gotoxy@pos& (0+255),w,b
  7260  005042  0100               	movlb	0	; () banked
  7261  005044  277F               	addwf	lcd_gotoxy@address& (0+255),f,b
  7262                           
  7263                           ; BSR set to: 0
  7264                           ;vclib_lcd.h: 205: lcd_send_byte(0, 0b10000000 | address);
  7265  005046  0100               	movlb	0	; () banked
  7266  005048  517F               	movf	lcd_gotoxy@address& (0+255),w,b
  7267  00504A  0980               	iorlw	128
  7268  00504C  0100               	movlb	0	; () banked
  7269  00504E  6F7A               	movwf	lcd_send_byte@n& (0+255),b
  7270  005050  0E00               	movlw	0
  7271  005052  EC48  F027         	call	_lcd_send_byte
  7272  005056  0012               	return		;funcret
  7273  005058                     __end_of_lcd_gotoxy:
  7274                           	opt stack 0
  7275                           tblptru	equ	0xFF8
  7276                           tblptrh	equ	0xFF7
  7277                           tblptrl	equ	0xFF6
  7278                           tablat	equ	0xFF5
  7279                           prodh	equ	0xFF4
  7280                           prodl	equ	0xFF3
  7281                           intcon	equ	0xFF2
  7282                           postinc0	equ	0xFEE
  7283                           wreg	equ	0xFE8
  7284                           postdec1	equ	0xFE5
  7285                           fsr1l	equ	0xFE1
  7286                           indf2	equ	0xFDF
  7287                           postinc2	equ	0xFDE
  7288                           postdec2	equ	0xFDD
  7289                           fsr2h	equ	0xFDA
  7290                           fsr2l	equ	0xFD9
  7291                           status	equ	0xFD8
  7292                           
  7293 ;; *************** function _lcd_send_byte *****************
  7294 ;; Defined at:
  7295 ;;		line 163 in file "source/../../vclib_lcd.h"
  7296 ;; Parameters:    Size  Location     Type
  7297 ;;  address         1    wreg     unsigned char 
  7298 ;;  n               1   26[BANK0 ] unsigned char 
  7299 ;; Auto vars:     Size  Location     Type
  7300 ;;  address         1   28[BANK0 ] unsigned char 
  7301 ;; Return value:  Size  Location     Type
  7302 ;;                  1    wreg      void 
  7303 ;; Registers used:
  7304 ;;		wreg, status,2, status,0, cstack
  7305 ;; Tracked objects:
  7306 ;;		On entry : 0/0
  7307 ;;		On exit  : 0/0
  7308 ;;		Unchanged: 0/0
  7309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7310 ;;      Params:         0       1       0       0       0       0       0
  7311 ;;      Locals:         0       1       0       0       0       0       0
  7312 ;;      Temps:          0       1       0       0       0       0       0
  7313 ;;      Totals:         0       3       0       0       0       0       0
  7314 ;;Total ram usage:        3 bytes
  7315 ;; Hardware stack levels used:    1
  7316 ;; Hardware stack levels required when called:   10
  7317 ;; This function calls:
  7318 ;;		_lcd_read_byte
  7319 ;;		_lcd_send_4bits
  7320 ;; This function is called by:
  7321 ;;		_lcd_init
  7322 ;;		_lcd_gotoxy
  7323 ;;		_lcd_putc
  7324 ;;		_lcd_set_cgram_char
  7325 ;;		_lcd_cursor_en
  7326 ;;		_lcd_clear
  7327 ;;		_lcd_shift_right
  7328 ;;		_lcd_shift_left
  7329 ;; This function uses a non-reentrant model
  7330 ;;
  7331                           
  7332                           	psect	text18
  7333  004E90                     __ptext18:
  7334                           	opt stack 0
  7335  004E90                     _lcd_send_byte:
  7336                           	opt stack 19
  7337                           
  7338                           ;incstack = 0
  7339                           ;lcd_send_byte@address stored from wreg
  7340  004E90  0100               	movlb	0	; () banked
  7341  004E92  6F7C               	movwf	lcd_send_byte@address& (0+255),b
  7342                           
  7343                           ;vclib_lcd.h: 164: PORTBbits.RB1 = 0;
  7344  004E94  9281               	bcf	3969,1,c	;volatile
  7345  004E96                     l7436:
  7346  004E96  ECDF  F026         	call	_lcd_read_byte	;wreg free
  7347  004E9A  0100               	movlb	0	; () banked
  7348  004E9C  6F7B               	movwf	??_lcd_send_byte& (0+255),b
  7349  004E9E  0100               	movlb	0	; () banked
  7350  004EA0  BF7B               	btfsc	??_lcd_send_byte& (0+255),7,b
  7351  004EA2  D7F9               	goto	l7436
  7352                           
  7353                           ; BSR set to: 0
  7354                           ;vclib_lcd.h: 166: PORTBbits.RB1 = address;
  7355  004EA4  0100               	movlb	0	; () banked
  7356  004EA6  B17C               	btfsc	lcd_send_byte@address& (0+255),0,b
  7357  004EA8  D002               	bra	u8815
  7358  004EAA  9281               	bcf	3969,1,c	;volatile
  7359  004EAC  D001               	bra	u8816
  7360  004EAE                     u8815:
  7361  004EAE  8281               	bsf	3969,1,c	;volatile
  7362  004EB0                     u8816:
  7363                           
  7364                           ;vclib_lcd.h: 167: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7365  004EB0  D000               	nop2		;2 cycle nop
  7366  004EB2  D000               	nop2		;2 cycle nop
  7367                           
  7368                           ;vclib_lcd.h: 168: PORTBbits.RB2 = 0;
  7369  004EB4  9481               	bcf	3969,2,c	;volatile
  7370                           
  7371                           ;vclib_lcd.h: 169: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7372  004EB6  D000               	nop2		;2 cycle nop
  7373  004EB8  D000               	nop2		;2 cycle nop
  7374                           
  7375                           ;vclib_lcd.h: 170: PORTBbits.RB3 = 0;
  7376  004EBA  9681               	bcf	3969,3,c	;volatile
  7377                           
  7378                           ;vclib_lcd.h: 171: lcd_send_4bits(n >> 4);
  7379  004EBC  0100               	movlb	0	; () banked
  7380  004EBE  397A               	swapf	lcd_send_byte@n& (0+255),w,b
  7381  004EC0  0B0F               	andlw	15
  7382  004EC2  ECAC  F024         	call	_lcd_send_4bits
  7383                           
  7384                           ;vclib_lcd.h: 172: lcd_send_4bits(n & 0b00001111 );
  7385  004EC6  0100               	movlb	0	; () banked
  7386  004EC8  517A               	movf	lcd_send_byte@n& (0+255),w,b
  7387  004ECA  0B0F               	andlw	15
  7388  004ECC  ECAC  F024         	call	_lcd_send_4bits
  7389  004ED0  0012               	return		;funcret
  7390  004ED2                     __end_of_lcd_send_byte:
  7391                           	opt stack 0
  7392                           tblptru	equ	0xFF8
  7393                           tblptrh	equ	0xFF7
  7394                           tblptrl	equ	0xFF6
  7395                           tablat	equ	0xFF5
  7396                           prodh	equ	0xFF4
  7397                           prodl	equ	0xFF3
  7398                           intcon	equ	0xFF2
  7399                           postinc0	equ	0xFEE
  7400                           wreg	equ	0xFE8
  7401                           postdec1	equ	0xFE5
  7402                           fsr1l	equ	0xFE1
  7403                           indf2	equ	0xFDF
  7404                           postinc2	equ	0xFDE
  7405                           postdec2	equ	0xFDD
  7406                           fsr2h	equ	0xFDA
  7407                           fsr2l	equ	0xFD9
  7408                           status	equ	0xFD8
  7409                           
  7410 ;; *************** function _lcd_send_4bits *****************
  7411 ;; Defined at:
  7412 ;;		line 151 in file "source/../../vclib_lcd.h"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  n               1    wreg     unsigned char 
  7415 ;; Auto vars:     Size  Location     Type
  7416 ;;  n               1   25[BANK0 ] unsigned char 
  7417 ;; Return value:  Size  Location     Type
  7418 ;;                  1    wreg      void 
  7419 ;; Registers used:
  7420 ;;		wreg, status,2, cstack
  7421 ;; Tracked objects:
  7422 ;;		On entry : 0/0
  7423 ;;		On exit  : 0/0
  7424 ;;		Unchanged: 0/0
  7425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7426 ;;      Params:         0       0       0       0       0       0       0
  7427 ;;      Locals:         0       5       0       0       0       0       0
  7428 ;;      Temps:          0       0       0       0       0       0       0
  7429 ;;      Totals:         0       5       0       0       0       0       0
  7430 ;;Total ram usage:        5 bytes
  7431 ;; Hardware stack levels used:    1
  7432 ;; Hardware stack levels required when called:    8
  7433 ;; This function calls:
  7434 ;;		Nothing
  7435 ;; This function is called by:
  7436 ;;		_lcd_send_byte
  7437 ;;		_lcd_init
  7438 ;; This function uses a non-reentrant model
  7439 ;;
  7440                           
  7441                           	psect	text19
  7442  004958                     __ptext19:
  7443                           	opt stack 0
  7444  004958                     _lcd_send_4bits:
  7445                           	opt stack 20
  7446                           
  7447                           ;incstack = 0
  7448                           ;lcd_send_4bits@n stored from wreg
  7449  004958  0100               	movlb	0	; () banked
  7450  00495A  6F79               	movwf	lcd_send_4bits@n& (0+255),b
  7451                           
  7452                           ;vclib_lcd.h: 153: PORTBbits.RB4 = 0 || n & 1;
  7453  00495C  0E01               	movlw	1
  7454  00495E  0100               	movlb	0	; () banked
  7455  004960  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7456                           
  7457                           ; BSR set to: 0
  7458  004962  0100               	movlb	0	; () banked
  7459  004964  B179               	btfsc	lcd_send_4bits@n& (0+255),0,b
  7460  004966  D003               	goto	l7406
  7461                           
  7462                           ; BSR set to: 0
  7463  004968  0E00               	movlw	0
  7464  00496A  0100               	movlb	0	; () banked
  7465  00496C  6F75               	movwf	_lcd_send_4bits$1602& (0+255),b
  7466  00496E                     l7406:
  7467                           
  7468                           ; BSR set to: 0
  7469  00496E  0100               	movlb	0	; () banked
  7470  004970  B175               	btfsc	_lcd_send_4bits$1602& (0+255),0,b
  7471  004972  D002               	bra	u8735
  7472  004974  9881               	bcf	3969,4,c	;volatile
  7473  004976  D001               	bra	u8736
  7474  004978                     u8735:
  7475  004978  8881               	bsf	3969,4,c	;volatile
  7476  00497A                     u8736:
  7477                           
  7478                           ;vclib_lcd.h: 154: PORTBbits.RB5 = 0 || n & 2;
  7479  00497A  0E01               	movlw	1
  7480  00497C  0100               	movlb	0	; () banked
  7481  00497E  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7482                           
  7483                           ; BSR set to: 0
  7484  004980  0100               	movlb	0	; () banked
  7485  004982  B379               	btfsc	lcd_send_4bits@n& (0+255),1,b
  7486  004984  D003               	goto	l7412
  7487                           
  7488                           ; BSR set to: 0
  7489  004986  0E00               	movlw	0
  7490  004988  0100               	movlb	0	; () banked
  7491  00498A  6F76               	movwf	_lcd_send_4bits$1603& (0+255),b
  7492  00498C                     l7412:
  7493                           
  7494                           ; BSR set to: 0
  7495  00498C  0100               	movlb	0	; () banked
  7496  00498E  B176               	btfsc	_lcd_send_4bits$1603& (0+255),0,b
  7497  004990  D002               	bra	u8755
  7498  004992  9A81               	bcf	3969,5,c	;volatile
  7499  004994  D001               	bra	u8756
  7500  004996                     u8755:
  7501  004996  8A81               	bsf	3969,5,c	;volatile
  7502  004998                     u8756:
  7503                           
  7504                           ;vclib_lcd.h: 155: PORTBbits.RB6 = 0 || n & 4;
  7505  004998  0E01               	movlw	1
  7506  00499A  0100               	movlb	0	; () banked
  7507  00499C  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7508                           
  7509                           ; BSR set to: 0
  7510  00499E  0100               	movlb	0	; () banked
  7511  0049A0  B579               	btfsc	lcd_send_4bits@n& (0+255),2,b
  7512  0049A2  D003               	goto	l7418
  7513                           
  7514                           ; BSR set to: 0
  7515  0049A4  0E00               	movlw	0
  7516  0049A6  0100               	movlb	0	; () banked
  7517  0049A8  6F77               	movwf	_lcd_send_4bits$1604& (0+255),b
  7518  0049AA                     l7418:
  7519                           
  7520                           ; BSR set to: 0
  7521  0049AA  0100               	movlb	0	; () banked
  7522  0049AC  B177               	btfsc	_lcd_send_4bits$1604& (0+255),0,b
  7523  0049AE  D002               	bra	u8775
  7524  0049B0  9C81               	bcf	3969,6,c	;volatile
  7525  0049B2  D001               	bra	u8776
  7526  0049B4                     u8775:
  7527  0049B4  8C81               	bsf	3969,6,c	;volatile
  7528  0049B6                     u8776:
  7529                           
  7530                           ;vclib_lcd.h: 156: PORTBbits.RB7 = 0 || n & 8;
  7531  0049B6  0E01               	movlw	1
  7532  0049B8  0100               	movlb	0	; () banked
  7533  0049BA  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7534                           
  7535                           ; BSR set to: 0
  7536  0049BC  0100               	movlb	0	; () banked
  7537  0049BE  B779               	btfsc	lcd_send_4bits@n& (0+255),3,b
  7538  0049C0  D003               	goto	l7424
  7539                           
  7540                           ; BSR set to: 0
  7541  0049C2  0E00               	movlw	0
  7542  0049C4  0100               	movlb	0	; () banked
  7543  0049C6  6F78               	movwf	_lcd_send_4bits$1605& (0+255),b
  7544  0049C8                     l7424:
  7545                           
  7546                           ; BSR set to: 0
  7547  0049C8  0100               	movlb	0	; () banked
  7548  0049CA  B178               	btfsc	_lcd_send_4bits$1605& (0+255),0,b
  7549  0049CC  D002               	bra	u8795
  7550  0049CE  9E81               	bcf	3969,7,c	;volatile
  7551  0049D0  D001               	bra	u8796
  7552  0049D2                     u8795:
  7553  0049D2  8E81               	bsf	3969,7,c	;volatile
  7554  0049D4                     u8796:
  7555                           
  7556                           ;vclib_lcd.h: 157: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7557  0049D4  D000               	nop2		;2 cycle nop
  7558  0049D6  D000               	nop2		;2 cycle nop
  7559                           
  7560                           ;vclib_lcd.h: 158: PORTBbits.RB3 = 1;
  7561  0049D8  8681               	bsf	3969,3,c	;volatile
  7562                           
  7563                           ;vclib_lcd.h: 159: _delay((unsigned long)((2)*(16000000/4000000.0)));
  7564  0049DA  0E02               	movlw	2
  7565  0049DC                     u12127:
  7566  0049DC  2EE8               	decfsz	wreg,f,c
  7567  0049DE  D7FE               	goto	u12127
  7568  0049E0  D000               	nop2		;nop
  7569                           
  7570                           ;vclib_lcd.h: 160: PORTBbits.RB3 = 0;
  7571  0049E2  9681               	bcf	3969,3,c	;volatile
  7572  0049E4  0012               	return		;funcret
  7573  0049E6                     __end_of_lcd_send_4bits:
  7574                           	opt stack 0
  7575                           tblptru	equ	0xFF8
  7576                           tblptrh	equ	0xFF7
  7577                           tblptrl	equ	0xFF6
  7578                           tablat	equ	0xFF5
  7579                           prodh	equ	0xFF4
  7580                           prodl	equ	0xFF3
  7581                           intcon	equ	0xFF2
  7582                           postinc0	equ	0xFEE
  7583                           wreg	equ	0xFE8
  7584                           postdec1	equ	0xFE5
  7585                           fsr1l	equ	0xFE1
  7586                           indf2	equ	0xFDF
  7587                           postinc2	equ	0xFDE
  7588                           postdec2	equ	0xFDD
  7589                           fsr2h	equ	0xFDA
  7590                           fsr2l	equ	0xFD9
  7591                           status	equ	0xFD8
  7592                           
  7593 ;; *************** function _lcd_read_byte *****************
  7594 ;; Defined at:
  7595 ;;		line 127 in file "source/../../vclib_lcd.h"
  7596 ;; Parameters:    Size  Location     Type
  7597 ;;		None
  7598 ;; Auto vars:     Size  Location     Type
  7599 ;;  high            1   24[BANK0 ] unsigned char 
  7600 ;;  low             1   23[BANK0 ] unsigned char 
  7601 ;; Return value:  Size  Location     Type
  7602 ;;                  1    wreg      unsigned char 
  7603 ;; Registers used:
  7604 ;;		wreg, status,2, status,0, cstack
  7605 ;; Tracked objects:
  7606 ;;		On entry : 0/0
  7607 ;;		On exit  : 0/0
  7608 ;;		Unchanged: 0/0
  7609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7610 ;;      Params:         0       0       0       0       0       0       0
  7611 ;;      Locals:         0       2       0       0       0       0       0
  7612 ;;      Temps:          0       0       0       0       0       0       0
  7613 ;;      Totals:         0       2       0       0       0       0       0
  7614 ;;Total ram usage:        2 bytes
  7615 ;; Hardware stack levels used:    1
  7616 ;; Hardware stack levels required when called:    9
  7617 ;; This function calls:
  7618 ;;		_lcd_read_4bits
  7619 ;; This function is called by:
  7620 ;;		_lcd_send_byte
  7621 ;;		_lcd_getc
  7622 ;; This function uses a non-reentrant model
  7623 ;;
  7624                           
  7625                           	psect	text20
  7626  004DBE                     __ptext20:
  7627                           	opt stack 0
  7628  004DBE                     _lcd_read_byte:
  7629                           	opt stack 19
  7630                           
  7631                           ;vclib_lcd.h: 128: unsigned char low, high;
  7632                           ;vclib_lcd.h: 129: TRISBbits.TRISB4 = 1;
  7633                           
  7634                           ;incstack = 0
  7635  004DBE  8893               	bsf	3987,4,c	;volatile
  7636                           
  7637                           ;vclib_lcd.h: 130: TRISBbits.TRISB5 = 1;
  7638  004DC0  8A93               	bsf	3987,5,c	;volatile
  7639                           
  7640                           ;vclib_lcd.h: 131: TRISBbits.TRISB6 = 1;
  7641  004DC2  8C93               	bsf	3987,6,c	;volatile
  7642                           
  7643                           ;vclib_lcd.h: 132: TRISBbits.TRISB7 = 1;
  7644  004DC4  8E93               	bsf	3987,7,c	;volatile
  7645                           
  7646                           ;vclib_lcd.h: 133: PORTBbits.RB2 = 1;
  7647  004DC6  8481               	bsf	3969,2,c	;volatile
  7648                           
  7649                           ;vclib_lcd.h: 134: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7650  004DC8  D000               	nop2		;2 cycle nop
  7651  004DCA  D000               	nop2		;2 cycle nop
  7652                           
  7653                           ;vclib_lcd.h: 135: PORTBbits.RB3 = 1;
  7654  004DCC  8681               	bsf	3969,3,c	;volatile
  7655                           
  7656                           ;vclib_lcd.h: 136: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7657  004DCE  D000               	nop2		;2 cycle nop
  7658  004DD0  D000               	nop2		;2 cycle nop
  7659                           
  7660                           ;vclib_lcd.h: 137: high = lcd_read_4bits();
  7661  004DD2  EC77  F025         	call	_lcd_read_4bits	;wreg free
  7662  004DD6  0100               	movlb	0	; () banked
  7663  004DD8  6F78               	movwf	lcd_read_byte@high& (0+255),b
  7664                           
  7665                           ; BSR set to: 0
  7666                           ;vclib_lcd.h: 138: PORTBbits.RB3 = 0;
  7667  004DDA  9681               	bcf	3969,3,c	;volatile
  7668                           
  7669                           ; BSR set to: 0
  7670                           ;vclib_lcd.h: 139: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7671  004DDC  D000               	nop2		;2 cycle nop
  7672  004DDE  D000               	nop2		;2 cycle nop
  7673                           
  7674                           ;vclib_lcd.h: 140: PORTBbits.RB3 = 1;
  7675  004DE0  8681               	bsf	3969,3,c	;volatile
  7676                           
  7677                           ;vclib_lcd.h: 141: _delay((unsigned long)((1)*(16000000/4000000.0)));
  7678  004DE2  D000               	nop2		;2 cycle nop
  7679  004DE4  D000               	nop2		;2 cycle nop
  7680                           
  7681                           ;vclib_lcd.h: 142: low = lcd_read_4bits();
  7682  004DE6  EC77  F025         	call	_lcd_read_4bits	;wreg free
  7683  004DEA  0100               	movlb	0	; () banked
  7684  004DEC  6F77               	movwf	lcd_read_byte@low& (0+255),b
  7685                           
  7686                           ; BSR set to: 0
  7687                           ;vclib_lcd.h: 143: PORTBbits.RB3 = 0;
  7688  004DEE  9681               	bcf	3969,3,c	;volatile
  7689                           
  7690                           ; BSR set to: 0
  7691                           ;vclib_lcd.h: 144: TRISBbits.TRISB4 = 0;
  7692  004DF0  9893               	bcf	3987,4,c	;volatile
  7693                           
  7694                           ; BSR set to: 0
  7695                           ;vclib_lcd.h: 145: TRISBbits.TRISB5 = 0;
  7696  004DF2  9A93               	bcf	3987,5,c	;volatile
  7697                           
  7698                           ; BSR set to: 0
  7699                           ;vclib_lcd.h: 146: TRISBbits.TRISB6 = 0;
  7700  004DF4  9C93               	bcf	3987,6,c	;volatile
  7701                           
  7702                           ; BSR set to: 0
  7703                           ;vclib_lcd.h: 147: TRISBbits.TRISB7 = 0;
  7704  004DF6  9E93               	bcf	3987,7,c	;volatile
  7705                           
  7706                           ; BSR set to: 0
  7707                           ;vclib_lcd.h: 148: return ( (high << 4) | low);
  7708  004DF8  0100               	movlb	0	; () banked
  7709  004DFA  3978               	swapf	lcd_read_byte@high& (0+255),w,b
  7710  004DFC  0BF0               	andlw	240
  7711  004DFE  0100               	movlb	0	; () banked
  7712  004E00  1177               	iorwf	lcd_read_byte@low& (0+255),w,b
  7713  004E02  0012               	return	
  7714  004E04                     __end_of_lcd_read_byte:
  7715                           	opt stack 0
  7716                           tblptru	equ	0xFF8
  7717                           tblptrh	equ	0xFF7
  7718                           tblptrl	equ	0xFF6
  7719                           tablat	equ	0xFF5
  7720                           prodh	equ	0xFF4
  7721                           prodl	equ	0xFF3
  7722                           intcon	equ	0xFF2
  7723                           postinc0	equ	0xFEE
  7724                           wreg	equ	0xFE8
  7725                           postdec1	equ	0xFE5
  7726                           fsr1l	equ	0xFE1
  7727                           indf2	equ	0xFDF
  7728                           postinc2	equ	0xFDE
  7729                           postdec2	equ	0xFDD
  7730                           fsr2h	equ	0xFDA
  7731                           fsr2l	equ	0xFD9
  7732                           status	equ	0xFD8
  7733                           
  7734 ;; *************** function _lcd_read_4bits *****************
  7735 ;; Defined at:
  7736 ;;		line 117 in file "source/../../vclib_lcd.h"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;		None
  7739 ;; Auto vars:     Size  Location     Type
  7740 ;;  n               1   22[BANK0 ] unsigned char 
  7741 ;; Return value:  Size  Location     Type
  7742 ;;                  1    wreg      unsigned char 
  7743 ;; Registers used:
  7744 ;;		wreg, status,2, status,0
  7745 ;; Tracked objects:
  7746 ;;		On entry : 0/0
  7747 ;;		On exit  : 0/0
  7748 ;;		Unchanged: 0/0
  7749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7750 ;;      Params:         0       0       0       0       0       0       0
  7751 ;;      Locals:         0       1       0       0       0       0       0
  7752 ;;      Temps:          0       1       0       0       0       0       0
  7753 ;;      Totals:         0       2       0       0       0       0       0
  7754 ;;Total ram usage:        2 bytes
  7755 ;; Hardware stack levels used:    1
  7756 ;; Hardware stack levels required when called:    8
  7757 ;; This function calls:
  7758 ;;		Nothing
  7759 ;; This function is called by:
  7760 ;;		_lcd_read_byte
  7761 ;; This function uses a non-reentrant model
  7762 ;;
  7763                           
  7764                           	psect	text21
  7765  004AEE                     __ptext21:
  7766                           	opt stack 0
  7767  004AEE                     _lcd_read_4bits:
  7768                           	opt stack 19
  7769                           
  7770                           ;vclib_lcd.h: 118: unsigned char n = 0x00;
  7771                           
  7772                           ; BSR set to: 0
  7773                           ;incstack = 0
  7774  004AEE  0E00               	movlw	0
  7775  004AF0  0100               	movlb	0	; () banked
  7776  004AF2  6F76               	movwf	lcd_read_4bits@n& (0+255),b
  7777                           
  7778                           ; BSR set to: 0
  7779                           ;vclib_lcd.h: 120: n |= PORTBbits.RB4;
  7780  004AF4  A881               	btfss	3969,4,c	;volatile
  7781  004AF6  D002               	goto	u8680
  7782  004AF8  0E01               	movlw	1
  7783  004AFA  D001               	goto	u8686
  7784  004AFC                     u8680:
  7785  004AFC  0E00               	movlw	0
  7786  004AFE                     u8686:
  7787  004AFE  0100               	movlb	0	; () banked
  7788  004B00  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7789                           
  7790                           ; BSR set to: 0
  7791                           ;vclib_lcd.h: 121: n |= PORTBbits.RB5 << 1;
  7792  004B02  AA81               	btfss	3969,5,c	;volatile
  7793  004B04  D004               	goto	u8690
  7794  004B06  0100               	movlb	0	; () banked
  7795  004B08  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7796  004B0A  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7797  004B0C  D002               	goto	u8698
  7798  004B0E                     u8690:
  7799  004B0E  0100               	movlb	0	; () banked
  7800  004B10  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7801  004B12                     u8698:
  7802  004B12  0100               	movlb	0	; () banked
  7803  004B14  90D8               	bcf	status,0,c
  7804  004B16  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7805  004B18  0100               	movlb	0	; () banked
  7806  004B1A  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;vclib_lcd.h: 122: n |= PORTBbits.RB6 << 2;
  7810  004B1C  AC81               	btfss	3969,6,c	;volatile
  7811  004B1E  D004               	goto	u8700
  7812  004B20  0100               	movlb	0	; () banked
  7813  004B22  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7814  004B24  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7815  004B26  D002               	goto	u8708
  7816  004B28                     u8700:
  7817  004B28  0100               	movlb	0	; () banked
  7818  004B2A  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7819  004B2C                     u8708:
  7820  004B2C  0100               	movlb	0	; () banked
  7821  004B2E  90D8               	bcf	status,0,c
  7822  004B30  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7823  004B32  0100               	movlb	0	; () banked
  7824  004B34  90D8               	bcf	status,0,c
  7825  004B36  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7826  004B38  0100               	movlb	0	; () banked
  7827  004B3A  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7828                           
  7829                           ; BSR set to: 0
  7830                           ;vclib_lcd.h: 123: n |= PORTBbits.RB7 << 3;
  7831  004B3C  AE81               	btfss	3969,7,c	;volatile
  7832  004B3E  D004               	goto	u8710
  7833  004B40  0100               	movlb	0	; () banked
  7834  004B42  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7835  004B44  2B75               	incf	??_lcd_read_4bits& (0+255),f,b
  7836  004B46  D002               	goto	u8718
  7837  004B48                     u8710:
  7838  004B48  0100               	movlb	0	; () banked
  7839  004B4A  6B75               	clrf	??_lcd_read_4bits& (0+255),b
  7840  004B4C                     u8718:
  7841  004B4C  0100               	movlb	0	; () banked
  7842  004B4E  90D8               	bcf	status,0,c
  7843  004B50  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7844  004B52  0100               	movlb	0	; () banked
  7845  004B54  90D8               	bcf	status,0,c
  7846  004B56  3775               	rlcf	??_lcd_read_4bits& (0+255),f,b
  7847  004B58  0100               	movlb	0	; () banked
  7848  004B5A  90D8               	bcf	status,0,c
  7849  004B5C  3575               	rlcf	??_lcd_read_4bits& (0+255),w,b
  7850  004B5E  0100               	movlb	0	; () banked
  7851  004B60  1376               	iorwf	lcd_read_4bits@n& (0+255),f,b
  7852                           
  7853                           ;vclib_lcd.h: 124: return (n);
  7854  004B62  0100               	movlb	0	; () banked
  7855  004B64  5176               	movf	lcd_read_4bits@n& (0+255),w,b
  7856  004B66  0012               	return	
  7857  004B68                     __end_of_lcd_read_4bits:
  7858                           	opt stack 0
  7859                           tblptru	equ	0xFF8
  7860                           tblptrh	equ	0xFF7
  7861                           tblptrl	equ	0xFF6
  7862                           tablat	equ	0xFF5
  7863                           prodh	equ	0xFF4
  7864                           prodl	equ	0xFF3
  7865                           intcon	equ	0xFF2
  7866                           postinc0	equ	0xFEE
  7867                           wreg	equ	0xFE8
  7868                           postdec1	equ	0xFE5
  7869                           fsr1l	equ	0xFE1
  7870                           indf2	equ	0xFDF
  7871                           postinc2	equ	0xFDE
  7872                           postdec2	equ	0xFDD
  7873                           fsr2h	equ	0xFDA
  7874                           fsr2l	equ	0xFD9
  7875                           status	equ	0xFD8
  7876                           
  7877 ;; *************** function _isdigit *****************
  7878 ;; Defined at:
  7879 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\isdigit.c"
  7880 ;; Parameters:    Size  Location     Type
  7881 ;;  c               1    wreg     unsigned char 
  7882 ;; Auto vars:     Size  Location     Type
  7883 ;;  c               1   23[BANK0 ] unsigned char 
  7884 ;; Return value:  Size  Location     Type
  7885 ;;		None               void
  7886 ;; Registers used:
  7887 ;;		wreg, status,2, status,0
  7888 ;; Tracked objects:
  7889 ;;		On entry : 0/0
  7890 ;;		On exit  : 0/0
  7891 ;;		Unchanged: 0/0
  7892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7893 ;;      Params:         0       0       0       0       0       0       0
  7894 ;;      Locals:         0       2       0       0       0       0       0
  7895 ;;      Temps:          0       1       0       0       0       0       0
  7896 ;;      Totals:         0       3       0       0       0       0       0
  7897 ;;Total ram usage:        3 bytes
  7898 ;; Hardware stack levels used:    1
  7899 ;; Hardware stack levels required when called:    8
  7900 ;; This function calls:
  7901 ;;		Nothing
  7902 ;; This function is called by:
  7903 ;;		_printf
  7904 ;; This function uses a non-reentrant model
  7905 ;;
  7906                           
  7907                           	psect	text22
  7908  00510E                     __ptext22:
  7909                           	opt stack 0
  7910  00510E                     _isdigit:
  7911                           	opt stack 19
  7912                           
  7913                           ; BSR set to: 0
  7914                           ;incstack = 0
  7915                           ;isdigit@c stored from wreg
  7916  00510E  0100               	movlb	0	; () banked
  7917  005110  6F77               	movwf	isdigit@c& (0+255),b
  7918  005112  0E00               	movlw	0
  7919  005114  0100               	movlb	0	; () banked
  7920  005116  6F76               	movwf	_isdigit$2357& (0+255),b
  7921                           
  7922                           ; BSR set to: 0
  7923  005118  0E3A               	movlw	58
  7924  00511A  0100               	movlb	0	; () banked
  7925  00511C  6177               	cpfslt	isdigit@c& (0+255),b
  7926  00511E  D007               	goto	l8024
  7927                           
  7928                           ; BSR set to: 0
  7929  005120  0E2F               	movlw	47
  7930  005122  0100               	movlb	0	; () banked
  7931  005124  6577               	cpfsgt	isdigit@c& (0+255),b
  7932  005126  D003               	goto	l8024
  7933                           
  7934                           ; BSR set to: 0
  7935  005128  0E01               	movlw	1
  7936  00512A  0100               	movlb	0	; () banked
  7937  00512C  6F76               	movwf	_isdigit$2357& (0+255),b
  7938  00512E                     l8024:
  7939                           
  7940                           ; BSR set to: 0
  7941  00512E  C076  F075         	movff	_isdigit$2357,??_isdigit
  7942  005132  0100               	movlb	0	; () banked
  7943  005134  3175               	rrcf	??_isdigit& (0+255),w,b
  7944  005136  0012               	return	
  7945  005138                     __end_of_isdigit:
  7946                           	opt stack 0
  7947                           tblptru	equ	0xFF8
  7948                           tblptrh	equ	0xFF7
  7949                           tblptrl	equ	0xFF6
  7950                           tablat	equ	0xFF5
  7951                           prodh	equ	0xFF4
  7952                           prodl	equ	0xFF3
  7953                           intcon	equ	0xFF2
  7954                           postinc0	equ	0xFEE
  7955                           wreg	equ	0xFE8
  7956                           postdec1	equ	0xFE5
  7957                           fsr1l	equ	0xFE1
  7958                           indf2	equ	0xFDF
  7959                           postinc2	equ	0xFDE
  7960                           postdec2	equ	0xFDD
  7961                           fsr2h	equ	0xFDA
  7962                           fsr2l	equ	0xFD9
  7963                           status	equ	0xFD8
  7964                           
  7965 ;; *************** function _fround *****************
  7966 ;; Defined at:
  7967 ;;		line 409 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\doprnt.c"
  7968 ;; Parameters:    Size  Location     Type
  7969 ;;  prec            1    wreg     unsigned char 
  7970 ;; Auto vars:     Size  Location     Type
  7971 ;;  prec            1   72[BANK0 ] unsigned char 
  7972 ;; Return value:  Size  Location     Type
  7973 ;;                  4   60[BANK0 ] unsigned char 
  7974 ;; Registers used:
  7975 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7976 ;; Tracked objects:
  7977 ;;		On entry : 0/0
  7978 ;;		On exit  : 0/0
  7979 ;;		Unchanged: 0/0
  7980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7981 ;;      Params:         0       4       0       0       0       0       0
  7982 ;;      Locals:         0       9       0       0       0       0       0
  7983 ;;      Temps:          0       0       0       0       0       0       0
  7984 ;;      Totals:         0      13       0       0       0       0       0
  7985 ;;Total ram usage:       13 bytes
  7986 ;; Hardware stack levels used:    1
  7987 ;; Hardware stack levels required when called:    9
  7988 ;; This function calls:
  7989 ;;		___awdiv
  7990 ;;		___awmod
  7991 ;;		___flmul
  7992 ;; This function is called by:
  7993 ;;		_printf
  7994 ;; This function uses a non-reentrant model
  7995 ;;
  7996                           
  7997                           	psect	text23
  7998  0025D6                     __ptext23:
  7999                           	opt stack 0
  8000  0025D6                     _fround:
  8001                           	opt stack 18
  8002                           
  8003                           ; BSR set to: 0
  8004                           ;incstack = 0
  8005                           ;fround@prec stored from wreg
  8006  0025D6  0100               	movlb	0	; () banked
  8007  0025D8  6FA8               	movwf	fround@prec& (0+255),b
  8008                           
  8009                           ;doprnt.c: 413: if(prec>=110)
  8010  0025DA  0E6D               	movlw	109
  8011  0025DC  0100               	movlb	0	; () banked
  8012  0025DE  65A8               	cpfsgt	fround@prec& (0+255),b
  8013  0025E0  D0C4               	goto	l7966
  8014                           
  8015                           ; BSR set to: 0
  8016                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8017  0025E2  0E00               	movlw	0
  8018  0025E4  0100               	movlb	0	; () banked
  8019  0025E6  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8020  0025E8  0E0A               	movlw	10
  8021  0025EA  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8022  0025EC  0E00               	movlw	0
  8023  0025EE  0100               	movlb	0	; () banked
  8024  0025F0  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8025  0025F2  0E64               	movlw	100
  8026  0025F4  6F77               	movwf	___awmod@divisor& (0+255),b
  8027  0025F6  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8028  0025FA  0100               	movlb	0	; () banked
  8029  0025FC  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8030  0025FE  EC33  F023         	call	___awmod	;wreg free
  8031  002602  C075  F07B         	movff	?___awmod,___awdiv@dividend
  8032  002606  C076  F07C         	movff	?___awmod+1,___awdiv@dividend+1
  8033  00260A  EC25  F022         	call	___awdiv	;wreg free
  8034  00260E  0100               	movlb	0	; () banked
  8035  002610  90D8               	bcf	status,0,c
  8036  002612  377B               	rlcf	?___awdiv& (0+255),f,b
  8037  002614  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8038  002616  0100               	movlb	0	; () banked
  8039  002618  90D8               	bcf	status,0,c
  8040  00261A  377B               	rlcf	?___awdiv& (0+255),f,b
  8041  00261C  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8042  00261E  0E24               	movlw	36
  8043  002620  0100               	movlb	0	; () banked
  8044  002622  277B               	addwf	?___awdiv& (0+255),f,b
  8045  002624  0E00               	movlw	0
  8046  002626  0100               	movlb	0	; () banked
  8047  002628  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8048  00262A  0E53               	movlw	low __npowers_
  8049  00262C  0100               	movlb	0	; () banked
  8050  00262E  257B               	addwf	?___awdiv& (0+255),w,b
  8051  002630  6EF6               	movwf	tblptrl,c
  8052  002632  0E7D               	movlw	high __npowers_
  8053  002634  0100               	movlb	0	; () banked
  8054  002636  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8055  002638  6EF7               	movwf	tblptrh,c
  8056  00263A                     	if	0	;There are less than 3 active tblptr bytes
  8057  00263A                     	endif
  8058  00263A  0009               	tblrd		*+
  8059  00263C  CFF5 F087          	movff	tablat,___flmul@a
  8060  002640  0009               	tblrd		*+
  8061  002642  CFF5 F088          	movff	tablat,___flmul@a+1
  8062  002646  0009               	tblrd		*+
  8063  002648  CFF5 F089          	movff	tablat,___flmul@a+2
  8064  00264C  000A               	tblrd		*-
  8065  00264E  CFF5 F08A          	movff	tablat,___flmul@a+3
  8066  002652  0E00               	movlw	0
  8067  002654  0100               	movlb	0	; () banked
  8068  002656  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8069  002658  0E64               	movlw	100
  8070  00265A  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8071  00265C  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  8072  002660  0100               	movlb	0	; () banked
  8073  002662  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  8074  002664  EC25  F022         	call	___awdiv	;wreg free
  8075  002668  0100               	movlb	0	; () banked
  8076  00266A  90D8               	bcf	status,0,c
  8077  00266C  377B               	rlcf	?___awdiv& (0+255),f,b
  8078  00266E  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8079  002670  0100               	movlb	0	; () banked
  8080  002672  90D8               	bcf	status,0,c
  8081  002674  377B               	rlcf	?___awdiv& (0+255),f,b
  8082  002676  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8083  002678  0E48               	movlw	72
  8084  00267A  0100               	movlb	0	; () banked
  8085  00267C  277B               	addwf	?___awdiv& (0+255),f,b
  8086  00267E  0E00               	movlw	0
  8087  002680  0100               	movlb	0	; () banked
  8088  002682  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8089  002684  0E53               	movlw	low __npowers_
  8090  002686  0100               	movlb	0	; () banked
  8091  002688  257B               	addwf	?___awdiv& (0+255),w,b
  8092  00268A  6EF6               	movwf	tblptrl,c
  8093  00268C  0E7D               	movlw	high __npowers_
  8094  00268E  0100               	movlb	0	; () banked
  8095  002690  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8096  002692  6EF7               	movwf	tblptrh,c
  8097  002694                     	if	0	;There are less than 3 active tblptr bytes
  8098  002694                     	endif
  8099  002694  0009               	tblrd		*+
  8100  002696  CFF5 F083          	movff	tablat,___flmul@b
  8101  00269A  0009               	tblrd		*+
  8102  00269C  CFF5 F084          	movff	tablat,___flmul@b+1
  8103  0026A0  0009               	tblrd		*+
  8104  0026A2  CFF5 F085          	movff	tablat,___flmul@b+2
  8105  0026A6  000A               	tblrd		*-
  8106  0026A8  CFF5 F086          	movff	tablat,___flmul@b+3
  8107  0026AC  EC4F  F00B         	call	___flmul	;wreg free
  8108  0026B0  C083  F0A4         	movff	?___flmul,_fround$2839
  8109  0026B4  C084  F0A5         	movff	?___flmul+1,_fround$2839+1
  8110  0026B8  C085  F0A6         	movff	?___flmul+2,_fround$2839+2
  8111  0026BC  C086  F0A7         	movff	?___flmul+3,_fround$2839+3
  8112                           
  8113                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8114  0026C0  0E00               	movlw	0
  8115  0026C2  0100               	movlb	0	; () banked
  8116  0026C4  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8117  0026C6  0E0A               	movlw	10
  8118  0026C8  6F77               	movwf	___awmod@divisor& (0+255),b
  8119  0026CA  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8120  0026CE  0100               	movlb	0	; () banked
  8121  0026D0  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8122  0026D2  EC33  F023         	call	___awmod	;wreg free
  8123  0026D6  0100               	movlb	0	; () banked
  8124  0026D8  90D8               	bcf	status,0,c
  8125  0026DA  3775               	rlcf	?___awmod& (0+255),f,b
  8126  0026DC  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8127  0026DE  0100               	movlb	0	; () banked
  8128  0026E0  90D8               	bcf	status,0,c
  8129  0026E2  3775               	rlcf	?___awmod& (0+255),f,b
  8130  0026E4  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8131  0026E6  0E53               	movlw	low __npowers_
  8132  0026E8  0100               	movlb	0	; () banked
  8133  0026EA  2575               	addwf	?___awmod& (0+255),w,b
  8134  0026EC  6EF6               	movwf	tblptrl,c
  8135  0026EE  0E7D               	movlw	high __npowers_
  8136  0026F0  0100               	movlb	0	; () banked
  8137  0026F2  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8138  0026F4  6EF7               	movwf	tblptrh,c
  8139  0026F6                     	if	0	;There are less than 3 active tblptr bytes
  8140  0026F6                     	endif
  8141  0026F6  0009               	tblrd		*+
  8142  0026F8  CFF5 F087          	movff	tablat,___flmul@a
  8143  0026FC  0009               	tblrd		*+
  8144  0026FE  CFF5 F088          	movff	tablat,___flmul@a+1
  8145  002702  0009               	tblrd		*+
  8146  002704  CFF5 F089          	movff	tablat,___flmul@a+2
  8147  002708  000A               	tblrd		*-
  8148  00270A  CFF5 F08A          	movff	tablat,___flmul@a+3
  8149  00270E  C0A4  F083         	movff	_fround$2839,___flmul@b
  8150  002712  C0A5  F084         	movff	_fround$2839+1,___flmul@b+1
  8151  002716  C0A6  F085         	movff	_fround$2839+2,___flmul@b+2
  8152  00271A  C0A7  F086         	movff	_fround$2839+3,___flmul@b+3
  8153  00271E  EC4F  F00B         	call	___flmul	;wreg free
  8154  002722  C083  F0A0         	movff	?___flmul,_fround$2840
  8155  002726  C084  F0A1         	movff	?___flmul+1,_fround$2840+1
  8156  00272A  C085  F0A2         	movff	?___flmul+2,_fround$2840+2
  8157  00272E  C086  F0A3         	movff	?___flmul+3,_fround$2840+3
  8158                           
  8159                           ;doprnt.c: 414: return 0.5 * _npowers_[prec/100+18] * _npowers_[(prec%100)/10+9] * _npow
      +                          ers_[prec%10];
  8160  002732  C0A0  F083         	movff	_fround$2840,___flmul@b
  8161  002736  C0A1  F084         	movff	_fround$2840+1,___flmul@b+1
  8162  00273A  C0A2  F085         	movff	_fround$2840+2,___flmul@b+2
  8163  00273E  C0A3  F086         	movff	_fround$2840+3,___flmul@b+3
  8164  002742  0E00               	movlw	0
  8165  002744  0100               	movlb	0	; () banked
  8166  002746  6F87               	movwf	___flmul@a& (0+255),b
  8167  002748  0E00               	movlw	0
  8168  00274A  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8169  00274C  0E00               	movlw	0
  8170  00274E  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8171  002750  0E3F               	movlw	63
  8172  002752  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8173  002754  EC4F  F00B         	call	___flmul	;wreg free
  8174  002758  C083  F09C         	movff	?___flmul,?_fround
  8175  00275C  C084  F09D         	movff	?___flmul+1,?_fround+1
  8176  002760  C085  F09E         	movff	?___flmul+2,?_fround+2
  8177  002764  C086  F09F         	movff	?___flmul+3,?_fround+3
  8178  002768  0012               	return	
  8179  00276A                     l7966:
  8180                           
  8181                           ;doprnt.c: 415: else if(prec > 10)
  8182  00276A  0E0A               	movlw	10
  8183  00276C  0100               	movlb	0	; () banked
  8184  00276E  65A8               	cpfsgt	fround@prec& (0+255),b
  8185  002770  D072               	goto	l7974
  8186                           
  8187                           ; BSR set to: 0
  8188                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8189  002772  0E00               	movlw	0
  8190  002774  0100               	movlb	0	; () banked
  8191  002776  6F78               	movwf	(___awmod@divisor+1)& (0+255),b
  8192  002778  0E0A               	movlw	10
  8193  00277A  6F77               	movwf	___awmod@divisor& (0+255),b
  8194  00277C  C0A8  F075         	movff	fround@prec,___awmod@dividend
  8195  002780  0100               	movlb	0	; () banked
  8196  002782  6B76               	clrf	(___awmod@dividend+1)& (0+255),b
  8197  002784  EC33  F023         	call	___awmod	;wreg free
  8198  002788  0100               	movlb	0	; () banked
  8199  00278A  90D8               	bcf	status,0,c
  8200  00278C  3775               	rlcf	?___awmod& (0+255),f,b
  8201  00278E  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8202  002790  0100               	movlb	0	; () banked
  8203  002792  90D8               	bcf	status,0,c
  8204  002794  3775               	rlcf	?___awmod& (0+255),f,b
  8205  002796  3776               	rlcf	(?___awmod+1)& (0+255),f,b
  8206  002798  0E53               	movlw	low __npowers_
  8207  00279A  0100               	movlb	0	; () banked
  8208  00279C  2575               	addwf	?___awmod& (0+255),w,b
  8209  00279E  6EF6               	movwf	tblptrl,c
  8210  0027A0  0E7D               	movlw	high __npowers_
  8211  0027A2  0100               	movlb	0	; () banked
  8212  0027A4  2176               	addwfc	(?___awmod+1)& (0+255),w,b
  8213  0027A6  6EF7               	movwf	tblptrh,c
  8214  0027A8                     	if	0	;There are less than 3 active tblptr bytes
  8215  0027A8                     	endif
  8216  0027A8  0009               	tblrd		*+
  8217  0027AA  CFF5 F087          	movff	tablat,___flmul@a
  8218  0027AE  0009               	tblrd		*+
  8219  0027B0  CFF5 F088          	movff	tablat,___flmul@a+1
  8220  0027B4  0009               	tblrd		*+
  8221  0027B6  CFF5 F089          	movff	tablat,___flmul@a+2
  8222  0027BA  000A               	tblrd		*-
  8223  0027BC  CFF5 F08A          	movff	tablat,___flmul@a+3
  8224  0027C0  0E00               	movlw	0
  8225  0027C2  0100               	movlb	0	; () banked
  8226  0027C4  6F7E               	movwf	(___awdiv@divisor+1)& (0+255),b
  8227  0027C6  0E0A               	movlw	10
  8228  0027C8  6F7D               	movwf	___awdiv@divisor& (0+255),b
  8229  0027CA  C0A8  F07B         	movff	fround@prec,___awdiv@dividend
  8230  0027CE  0100               	movlb	0	; () banked
  8231  0027D0  6B7C               	clrf	(___awdiv@dividend+1)& (0+255),b
  8232  0027D2  EC25  F022         	call	___awdiv	;wreg free
  8233  0027D6  0100               	movlb	0	; () banked
  8234  0027D8  90D8               	bcf	status,0,c
  8235  0027DA  377B               	rlcf	?___awdiv& (0+255),f,b
  8236  0027DC  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8237  0027DE  0100               	movlb	0	; () banked
  8238  0027E0  90D8               	bcf	status,0,c
  8239  0027E2  377B               	rlcf	?___awdiv& (0+255),f,b
  8240  0027E4  377C               	rlcf	(?___awdiv+1)& (0+255),f,b
  8241  0027E6  0E24               	movlw	36
  8242  0027E8  0100               	movlb	0	; () banked
  8243  0027EA  277B               	addwf	?___awdiv& (0+255),f,b
  8244  0027EC  0E00               	movlw	0
  8245  0027EE  0100               	movlb	0	; () banked
  8246  0027F0  237C               	addwfc	(?___awdiv+1)& (0+255),f,b
  8247  0027F2  0E53               	movlw	low __npowers_
  8248  0027F4  0100               	movlb	0	; () banked
  8249  0027F6  257B               	addwf	?___awdiv& (0+255),w,b
  8250  0027F8  6EF6               	movwf	tblptrl,c
  8251  0027FA  0E7D               	movlw	high __npowers_
  8252  0027FC  0100               	movlb	0	; () banked
  8253  0027FE  217C               	addwfc	(?___awdiv+1)& (0+255),w,b
  8254  002800  6EF7               	movwf	tblptrh,c
  8255  002802                     	if	0	;There are less than 3 active tblptr bytes
  8256  002802                     	endif
  8257  002802  0009               	tblrd		*+
  8258  002804  CFF5 F083          	movff	tablat,___flmul@b
  8259  002808  0009               	tblrd		*+
  8260  00280A  CFF5 F084          	movff	tablat,___flmul@b+1
  8261  00280E  0009               	tblrd		*+
  8262  002810  CFF5 F085          	movff	tablat,___flmul@b+2
  8263  002814  000A               	tblrd		*-
  8264  002816  CFF5 F086          	movff	tablat,___flmul@b+3
  8265  00281A  EC4F  F00B         	call	___flmul	;wreg free
  8266  00281E  C083  F0A4         	movff	?___flmul,_fround$2839
  8267  002822  C084  F0A5         	movff	?___flmul+1,_fround$2839+1
  8268  002826  C085  F0A6         	movff	?___flmul+2,_fround$2839+2
  8269  00282A  C086  F0A7         	movff	?___flmul+3,_fround$2839+3
  8270                           
  8271                           ;doprnt.c: 416: return 0.5 * _npowers_[prec/10+9] * _npowers_[prec%10];
  8272  00282E  C0A4  F083         	movff	_fround$2839,___flmul@b
  8273  002832  C0A5  F084         	movff	_fround$2839+1,___flmul@b+1
  8274  002836  C0A6  F085         	movff	_fround$2839+2,___flmul@b+2
  8275  00283A  C0A7  F086         	movff	_fround$2839+3,___flmul@b+3
  8276  00283E  0E00               	movlw	0
  8277  002840  0100               	movlb	0	; () banked
  8278  002842  6F87               	movwf	___flmul@a& (0+255),b
  8279  002844  0E00               	movlw	0
  8280  002846  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8281  002848  0E00               	movlw	0
  8282  00284A  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8283  00284C  0E3F               	movlw	63
  8284  00284E  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8285  002850  EC4F  F00B         	call	___flmul	;wreg free
  8286  002854  D781               	goto	L5
  8287  002856                     l7974:
  8288                           
  8289                           ;doprnt.c: 417: return 0.5 * _npowers_[prec];
  8290  002856  0100               	movlb	0	; () banked
  8291  002858  51A8               	movf	fround@prec& (0+255),w,b
  8292  00285A  0D04               	mullw	4
  8293  00285C  0E53               	movlw	low __npowers_
  8294  00285E  24F3               	addwf	prodl,w,c
  8295  002860  6EF6               	movwf	tblptrl,c
  8296  002862  0E7D               	movlw	high __npowers_
  8297  002864  20F4               	addwfc	prodh,w,c
  8298  002866  6EF7               	movwf	tblptrh,c
  8299  002868                     	if	0	;There are less than 3 active tblptr bytes
  8300  002868                     	endif
  8301  002868  0009               	tblrd		*+
  8302  00286A  CFF5 F083          	movff	tablat,___flmul@b
  8303  00286E  0009               	tblrd		*+
  8304  002870  CFF5 F084          	movff	tablat,___flmul@b+1
  8305  002874  0009               	tblrd		*+
  8306  002876  CFF5 F085          	movff	tablat,___flmul@b+2
  8307  00287A  000A               	tblrd		*-
  8308  00287C  CFF5 F086          	movff	tablat,___flmul@b+3
  8309  002880  0E00               	movlw	0
  8310  002882  0100               	movlb	0	; () banked
  8311  002884  6F87               	movwf	___flmul@a& (0+255),b
  8312  002886  0E00               	movlw	0
  8313  002888  6F88               	movwf	(___flmul@a+1)& (0+255),b
  8314  00288A  0E00               	movlw	0
  8315  00288C  6F89               	movwf	(___flmul@a+2)& (0+255),b
  8316  00288E  0E3F               	movlw	63
  8317  002890  6F8A               	movwf	(___flmul@a+3)& (0+255),b
  8318  002892  EC4F  F00B         	call	___flmul	;wreg free
  8319  002896  C083  F09C         	movff	?___flmul,?_fround
  8320  00289A  C084  F09D         	movff	?___flmul+1,?_fround+1
  8321  00289E  C085  F09E         	movff	?___flmul+2,?_fround+2
  8322  0028A2  C086  F09F         	movff	?___flmul+3,?_fround+3
  8323  0028A6  0012               	return	
  8324  0028A8                     __end_of_fround:
  8325                           	opt stack 0
  8326                           tblptru	equ	0xFF8
  8327                           tblptrh	equ	0xFF7
  8328                           tblptrl	equ	0xFF6
  8329                           tablat	equ	0xFF5
  8330                           prodh	equ	0xFF4
  8331                           prodl	equ	0xFF3
  8332                           intcon	equ	0xFF2
  8333                           postinc0	equ	0xFEE
  8334                           wreg	equ	0xFE8
  8335                           postdec1	equ	0xFE5
  8336                           fsr1l	equ	0xFE1
  8337                           indf2	equ	0xFDF
  8338                           postinc2	equ	0xFDE
  8339                           postdec2	equ	0xFDD
  8340                           fsr2h	equ	0xFDA
  8341                           fsr2l	equ	0xFD9
  8342                           status	equ	0xFD8
  8343                           
  8344 ;; *************** function ___awmod *****************
  8345 ;; Defined at:
  8346 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awmod.c"
  8347 ;; Parameters:    Size  Location     Type
  8348 ;;  dividend        2   21[BANK0 ] int 
  8349 ;;  divisor         2   23[BANK0 ] int 
  8350 ;; Auto vars:     Size  Location     Type
  8351 ;;  sign            1   26[BANK0 ] unsigned char 
  8352 ;;  counter         1   25[BANK0 ] unsigned char 
  8353 ;; Return value:  Size  Location     Type
  8354 ;;                  2   21[BANK0 ] int 
  8355 ;; Registers used:
  8356 ;;		wreg, status,2, status,0
  8357 ;; Tracked objects:
  8358 ;;		On entry : 0/0
  8359 ;;		On exit  : 0/0
  8360 ;;		Unchanged: 0/0
  8361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8362 ;;      Params:         0       4       0       0       0       0       0
  8363 ;;      Locals:         0       2       0       0       0       0       0
  8364 ;;      Temps:          0       0       0       0       0       0       0
  8365 ;;      Totals:         0       6       0       0       0       0       0
  8366 ;;Total ram usage:        6 bytes
  8367 ;; Hardware stack levels used:    1
  8368 ;; Hardware stack levels required when called:    8
  8369 ;; This function calls:
  8370 ;;		Nothing
  8371 ;; This function is called by:
  8372 ;;		_fround
  8373 ;;		_scale
  8374 ;; This function uses a non-reentrant model
  8375 ;;
  8376                           
  8377                           	psect	text24
  8378  004666                     __ptext24:
  8379                           	opt stack 0
  8380  004666                     ___awmod:
  8381                           	opt stack 18
  8382                           
  8383                           ;incstack = 0
  8384  004666  0E00               	movlw	0
  8385  004668  0100               	movlb	0	; () banked
  8386  00466A  6F7A               	movwf	___awmod@sign& (0+255),b
  8387                           
  8388                           ; BSR set to: 0
  8389  00466C  0100               	movlb	0	; () banked
  8390  00466E  AF76               	btfss	(___awmod@dividend+1)& (0+255),7,b
  8391  004670  D008               	goto	l7866
  8392                           
  8393                           ; BSR set to: 0
  8394  004672  0100               	movlb	0	; () banked
  8395  004674  6D75               	negf	___awmod@dividend& (0+255),b
  8396  004676  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8397  004678  B0D8               	btfsc	status,0,c
  8398  00467A  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8399                           
  8400                           ; BSR set to: 0
  8401  00467C  0E01               	movlw	1
  8402  00467E  0100               	movlb	0	; () banked
  8403  004680  6F7A               	movwf	___awmod@sign& (0+255),b
  8404  004682                     l7866:
  8405                           
  8406                           ; BSR set to: 0
  8407  004682  0100               	movlb	0	; () banked
  8408  004684  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8409  004686  D005               	goto	l7870
  8410                           
  8411                           ; BSR set to: 0
  8412  004688  0100               	movlb	0	; () banked
  8413  00468A  6D77               	negf	___awmod@divisor& (0+255),b
  8414  00468C  1F78               	comf	(___awmod@divisor+1)& (0+255),f,b
  8415  00468E  B0D8               	btfsc	status,0,c
  8416  004690  2B78               	incf	(___awmod@divisor+1)& (0+255),f,b
  8417  004692                     l7870:
  8418                           
  8419                           ; BSR set to: 0
  8420  004692  0100               	movlb	0	; () banked
  8421  004694  5177               	movf	___awmod@divisor& (0+255),w,b
  8422  004696  0100               	movlb	0	; () banked
  8423  004698  1178               	iorwf	(___awmod@divisor+1)& (0+255),w,b
  8424  00469A  B4D8               	btfsc	status,2,c
  8425  00469C  D026               	goto	l7886
  8426                           
  8427                           ; BSR set to: 0
  8428  00469E  0E01               	movlw	1
  8429  0046A0  0100               	movlb	0	; () banked
  8430  0046A2  6F79               	movwf	___awmod@counter& (0+255),b
  8431  0046A4  D006               	goto	l7876
  8432  0046A6                     l7874:
  8433                           
  8434                           ; BSR set to: 0
  8435  0046A6  0100               	movlb	0	; () banked
  8436  0046A8  90D8               	bcf	status,0,c
  8437  0046AA  3777               	rlcf	___awmod@divisor& (0+255),f,b
  8438  0046AC  3778               	rlcf	(___awmod@divisor+1)& (0+255),f,b
  8439  0046AE  0100               	movlb	0	; () banked
  8440  0046B0  2B79               	incf	___awmod@counter& (0+255),f,b
  8441  0046B2                     l7876:
  8442                           
  8443                           ; BSR set to: 0
  8444  0046B2  0100               	movlb	0	; () banked
  8445  0046B4  AF78               	btfss	(___awmod@divisor+1)& (0+255),7,b
  8446  0046B6  D7F7               	goto	l7874
  8447  0046B8                     l7878:
  8448                           
  8449                           ; BSR set to: 0
  8450  0046B8  0100               	movlb	0	; () banked
  8451  0046BA  5177               	movf	___awmod@divisor& (0+255),w,b
  8452  0046BC  0100               	movlb	0	; () banked
  8453  0046BE  5D75               	subwf	___awmod@dividend& (0+255),w,b
  8454  0046C0  0100               	movlb	0	; () banked
  8455  0046C2  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8456  0046C4  0100               	movlb	0	; () banked
  8457  0046C6  5976               	subwfb	(___awmod@dividend+1)& (0+255),w,b
  8458  0046C8  A0D8               	btfss	status,0,c
  8459  0046CA  D008               	goto	l7882
  8460                           
  8461                           ; BSR set to: 0
  8462  0046CC  0100               	movlb	0	; () banked
  8463  0046CE  5177               	movf	___awmod@divisor& (0+255),w,b
  8464  0046D0  0100               	movlb	0	; () banked
  8465  0046D2  5F75               	subwf	___awmod@dividend& (0+255),f,b
  8466  0046D4  0100               	movlb	0	; () banked
  8467  0046D6  5178               	movf	(___awmod@divisor+1)& (0+255),w,b
  8468  0046D8  0100               	movlb	0	; () banked
  8469  0046DA  5B76               	subwfb	(___awmod@dividend+1)& (0+255),f,b
  8470  0046DC                     l7882:
  8471                           
  8472                           ; BSR set to: 0
  8473  0046DC  0100               	movlb	0	; () banked
  8474  0046DE  90D8               	bcf	status,0,c
  8475  0046E0  3378               	rrcf	(___awmod@divisor+1)& (0+255),f,b
  8476  0046E2  3377               	rrcf	___awmod@divisor& (0+255),f,b
  8477                           
  8478                           ; BSR set to: 0
  8479  0046E4  0100               	movlb	0	; () banked
  8480  0046E6  2F79               	decfsz	___awmod@counter& (0+255),f,b
  8481  0046E8  D7E7               	goto	l7878
  8482  0046EA                     l7886:
  8483                           
  8484                           ; BSR set to: 0
  8485  0046EA  0100               	movlb	0	; () banked
  8486  0046EC  517A               	movf	___awmod@sign& (0+255),w,b
  8487  0046EE  0100               	movlb	0	; () banked
  8488  0046F0  B4D8               	btfsc	status,2,c
  8489  0046F2  D005               	goto	l7890
  8490                           
  8491                           ; BSR set to: 0
  8492  0046F4  0100               	movlb	0	; () banked
  8493  0046F6  6D75               	negf	___awmod@dividend& (0+255),b
  8494  0046F8  1F76               	comf	(___awmod@dividend+1)& (0+255),f,b
  8495  0046FA  B0D8               	btfsc	status,0,c
  8496  0046FC  2B76               	incf	(___awmod@dividend+1)& (0+255),f,b
  8497  0046FE                     l7890:
  8498                           
  8499                           ; BSR set to: 0
  8500  0046FE  C075  F075         	movff	___awmod@dividend,?___awmod
  8501  004702  C076  F076         	movff	___awmod@dividend+1,?___awmod+1
  8502  004706  0012               	return	
  8503  004708                     __end_of___awmod:
  8504                           	opt stack 0
  8505                           tblptru	equ	0xFF8
  8506                           tblptrh	equ	0xFF7
  8507                           tblptrl	equ	0xFF6
  8508                           tablat	equ	0xFF5
  8509                           prodh	equ	0xFF4
  8510                           prodl	equ	0xFF3
  8511                           intcon	equ	0xFF2
  8512                           postinc0	equ	0xFEE
  8513                           wreg	equ	0xFE8
  8514                           postdec1	equ	0xFE5
  8515                           fsr1l	equ	0xFE1
  8516                           indf2	equ	0xFDF
  8517                           postinc2	equ	0xFDE
  8518                           postdec2	equ	0xFDD
  8519                           fsr2h	equ	0xFDA
  8520                           fsr2l	equ	0xFD9
  8521                           status	equ	0xFD8
  8522                           
  8523 ;; *************** function ___awdiv *****************
  8524 ;; Defined at:
  8525 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\awdiv.c"
  8526 ;; Parameters:    Size  Location     Type
  8527 ;;  dividend        2   27[BANK0 ] int 
  8528 ;;  divisor         2   29[BANK0 ] int 
  8529 ;; Auto vars:     Size  Location     Type
  8530 ;;  quotient        2   33[BANK0 ] int 
  8531 ;;  sign            1   32[BANK0 ] unsigned char 
  8532 ;;  counter         1   31[BANK0 ] unsigned char 
  8533 ;; Return value:  Size  Location     Type
  8534 ;;                  2   27[BANK0 ] int 
  8535 ;; Registers used:
  8536 ;;		wreg, status,2, status,0
  8537 ;; Tracked objects:
  8538 ;;		On entry : 0/0
  8539 ;;		On exit  : 0/0
  8540 ;;		Unchanged: 0/0
  8541 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8542 ;;      Params:         0       4       0       0       0       0       0
  8543 ;;      Locals:         0       4       0       0       0       0       0
  8544 ;;      Temps:          0       0       0       0       0       0       0
  8545 ;;      Totals:         0       8       0       0       0       0       0
  8546 ;;Total ram usage:        8 bytes
  8547 ;; Hardware stack levels used:    1
  8548 ;; Hardware stack levels required when called:    8
  8549 ;; This function calls:
  8550 ;;		Nothing
  8551 ;; This function is called by:
  8552 ;;		_fround
  8553 ;;		_scale
  8554 ;;		_printf
  8555 ;; This function uses a non-reentrant model
  8556 ;;
  8557                           
  8558                           	psect	text25
  8559  00444A                     __ptext25:
  8560                           	opt stack 0
  8561  00444A                     ___awdiv:
  8562                           	opt stack 18
  8563                           
  8564                           ; BSR set to: 0
  8565                           ;incstack = 0
  8566  00444A  0E00               	movlw	0
  8567  00444C  0100               	movlb	0	; () banked
  8568  00444E  6F80               	movwf	___awdiv@sign& (0+255),b
  8569                           
  8570                           ; BSR set to: 0
  8571  004450  0100               	movlb	0	; () banked
  8572  004452  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8573  004454  D008               	goto	l7822
  8574                           
  8575                           ; BSR set to: 0
  8576  004456  0100               	movlb	0	; () banked
  8577  004458  6D7D               	negf	___awdiv@divisor& (0+255),b
  8578  00445A  1F7E               	comf	(___awdiv@divisor+1)& (0+255),f,b
  8579  00445C  B0D8               	btfsc	status,0,c
  8580  00445E  2B7E               	incf	(___awdiv@divisor+1)& (0+255),f,b
  8581                           
  8582                           ; BSR set to: 0
  8583  004460  0E01               	movlw	1
  8584  004462  0100               	movlb	0	; () banked
  8585  004464  6F80               	movwf	___awdiv@sign& (0+255),b
  8586  004466                     l7822:
  8587                           
  8588                           ; BSR set to: 0
  8589  004466  0100               	movlb	0	; () banked
  8590  004468  AF7C               	btfss	(___awdiv@dividend+1)& (0+255),7,b
  8591  00446A  D008               	goto	l7828
  8592                           
  8593                           ; BSR set to: 0
  8594  00446C  0100               	movlb	0	; () banked
  8595  00446E  6D7B               	negf	___awdiv@dividend& (0+255),b
  8596  004470  1F7C               	comf	(___awdiv@dividend+1)& (0+255),f,b
  8597  004472  B0D8               	btfsc	status,0,c
  8598  004474  2B7C               	incf	(___awdiv@dividend+1)& (0+255),f,b
  8599                           
  8600                           ; BSR set to: 0
  8601  004476  0E01               	movlw	1
  8602  004478  0100               	movlb	0	; () banked
  8603  00447A  1B80               	xorwf	___awdiv@sign& (0+255),f,b
  8604  00447C                     l7828:
  8605                           
  8606                           ; BSR set to: 0
  8607  00447C  0E00               	movlw	0
  8608  00447E  0100               	movlb	0	; () banked
  8609  004480  6F82               	movwf	(___awdiv@quotient+1)& (0+255),b
  8610  004482  0E00               	movlw	0
  8611  004484  6F81               	movwf	___awdiv@quotient& (0+255),b
  8612                           
  8613                           ; BSR set to: 0
  8614  004486  0100               	movlb	0	; () banked
  8615  004488  517D               	movf	___awdiv@divisor& (0+255),w,b
  8616  00448A  0100               	movlb	0	; () banked
  8617  00448C  117E               	iorwf	(___awdiv@divisor+1)& (0+255),w,b
  8618  00448E  B4D8               	btfsc	status,2,c
  8619  004490  D02C               	goto	l7850
  8620                           
  8621                           ; BSR set to: 0
  8622  004492  0E01               	movlw	1
  8623  004494  0100               	movlb	0	; () banked
  8624  004496  6F7F               	movwf	___awdiv@counter& (0+255),b
  8625  004498  D006               	goto	l7836
  8626  00449A                     l7834:
  8627                           
  8628                           ; BSR set to: 0
  8629  00449A  0100               	movlb	0	; () banked
  8630  00449C  90D8               	bcf	status,0,c
  8631  00449E  377D               	rlcf	___awdiv@divisor& (0+255),f,b
  8632  0044A0  377E               	rlcf	(___awdiv@divisor+1)& (0+255),f,b
  8633  0044A2  0100               	movlb	0	; () banked
  8634  0044A4  2B7F               	incf	___awdiv@counter& (0+255),f,b
  8635  0044A6                     l7836:
  8636                           
  8637                           ; BSR set to: 0
  8638  0044A6  0100               	movlb	0	; () banked
  8639  0044A8  AF7E               	btfss	(___awdiv@divisor+1)& (0+255),7,b
  8640  0044AA  D7F7               	goto	l7834
  8641  0044AC                     l7838:
  8642                           
  8643                           ; BSR set to: 0
  8644  0044AC  0100               	movlb	0	; () banked
  8645  0044AE  90D8               	bcf	status,0,c
  8646  0044B0  3781               	rlcf	___awdiv@quotient& (0+255),f,b
  8647  0044B2  3782               	rlcf	(___awdiv@quotient+1)& (0+255),f,b
  8648                           
  8649                           ; BSR set to: 0
  8650  0044B4  0100               	movlb	0	; () banked
  8651  0044B6  517D               	movf	___awdiv@divisor& (0+255),w,b
  8652  0044B8  0100               	movlb	0	; () banked
  8653  0044BA  5D7B               	subwf	___awdiv@dividend& (0+255),w,b
  8654  0044BC  0100               	movlb	0	; () banked
  8655  0044BE  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8656  0044C0  0100               	movlb	0	; () banked
  8657  0044C2  597C               	subwfb	(___awdiv@dividend+1)& (0+255),w,b
  8658  0044C4  A0D8               	btfss	status,0,c
  8659  0044C6  D00A               	goto	l7846
  8660                           
  8661                           ; BSR set to: 0
  8662  0044C8  0100               	movlb	0	; () banked
  8663  0044CA  517D               	movf	___awdiv@divisor& (0+255),w,b
  8664  0044CC  0100               	movlb	0	; () banked
  8665  0044CE  5F7B               	subwf	___awdiv@dividend& (0+255),f,b
  8666  0044D0  0100               	movlb	0	; () banked
  8667  0044D2  517E               	movf	(___awdiv@divisor+1)& (0+255),w,b
  8668  0044D4  0100               	movlb	0	; () banked
  8669  0044D6  5B7C               	subwfb	(___awdiv@dividend+1)& (0+255),f,b
  8670                           
  8671                           ; BSR set to: 0
  8672  0044D8  0100               	movlb	0	; () banked
  8673  0044DA  8181               	bsf	___awdiv@quotient& (0+255),0,b
  8674  0044DC                     l7846:
  8675                           
  8676                           ; BSR set to: 0
  8677  0044DC  0100               	movlb	0	; () banked
  8678  0044DE  90D8               	bcf	status,0,c
  8679  0044E0  337E               	rrcf	(___awdiv@divisor+1)& (0+255),f,b
  8680  0044E2  337D               	rrcf	___awdiv@divisor& (0+255),f,b
  8681                           
  8682                           ; BSR set to: 0
  8683  0044E4  0100               	movlb	0	; () banked
  8684  0044E6  2F7F               	decfsz	___awdiv@counter& (0+255),f,b
  8685  0044E8  D7E1               	goto	l7838
  8686  0044EA                     l7850:
  8687                           
  8688                           ; BSR set to: 0
  8689  0044EA  0100               	movlb	0	; () banked
  8690  0044EC  5180               	movf	___awdiv@sign& (0+255),w,b
  8691  0044EE  0100               	movlb	0	; () banked
  8692  0044F0  B4D8               	btfsc	status,2,c
  8693  0044F2  D005               	goto	l7854
  8694                           
  8695                           ; BSR set to: 0
  8696  0044F4  0100               	movlb	0	; () banked
  8697  0044F6  6D81               	negf	___awdiv@quotient& (0+255),b
  8698  0044F8  1F82               	comf	(___awdiv@quotient+1)& (0+255),f,b
  8699  0044FA  B0D8               	btfsc	status,0,c
  8700  0044FC  2B82               	incf	(___awdiv@quotient+1)& (0+255),f,b
  8701  0044FE                     l7854:
  8702                           
  8703                           ; BSR set to: 0
  8704  0044FE  C081  F07B         	movff	___awdiv@quotient,?___awdiv
  8705  004502  C082  F07C         	movff	___awdiv@quotient+1,?___awdiv+1
  8706  004506  0012               	return	
  8707  004508                     __end_of___awdiv:
  8708                           	opt stack 0
  8709                           tblptru	equ	0xFF8
  8710                           tblptrh	equ	0xFF7
  8711                           tblptrl	equ	0xFF6
  8712                           tablat	equ	0xFF5
  8713                           prodh	equ	0xFF4
  8714                           prodl	equ	0xFF3
  8715                           intcon	equ	0xFF2
  8716                           postinc0	equ	0xFEE
  8717                           wreg	equ	0xFE8
  8718                           postdec1	equ	0xFE5
  8719                           fsr1l	equ	0xFE1
  8720                           indf2	equ	0xFDF
  8721                           postinc2	equ	0xFDE
  8722                           postdec2	equ	0xFDD
  8723                           fsr2h	equ	0xFDA
  8724                           fsr2l	equ	0xFD9
  8725                           status	equ	0xFD8
  8726                           
  8727 ;; *************** function __tdiv_to_l_ *****************
  8728 ;; Defined at:
  8729 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\ftdivl.c"
  8730 ;; Parameters:    Size  Location     Type
  8731 ;;  f1              4   21[BANK0 ] float 
  8732 ;;  f2              4   25[BANK0 ] float 
  8733 ;; Auto vars:     Size  Location     Type
  8734 ;;  quot            4   32[BANK0 ] unsigned long 
  8735 ;;  exp1            1   37[BANK0 ] unsigned char 
  8736 ;;  cntr            1   36[BANK0 ] unsigned char 
  8737 ;; Return value:  Size  Location     Type
  8738 ;;                  4   21[BANK0 ] unsigned long 
  8739 ;; Registers used:
  8740 ;;		wreg, status,2, status,0
  8741 ;; Tracked objects:
  8742 ;;		On entry : 0/0
  8743 ;;		On exit  : 0/0
  8744 ;;		Unchanged: 0/0
  8745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8746 ;;      Params:         0       8       0       0       0       0       0
  8747 ;;      Locals:         0       6       0       0       0       0       0
  8748 ;;      Temps:          0       3       0       0       0       0       0
  8749 ;;      Totals:         0      17       0       0       0       0       0
  8750 ;;Total ram usage:       17 bytes
  8751 ;; Hardware stack levels used:    1
  8752 ;; Hardware stack levels required when called:    8
  8753 ;; This function calls:
  8754 ;;		Nothing
  8755 ;; This function is called by:
  8756 ;;		_printf
  8757 ;; This function uses a non-reentrant model
  8758 ;;
  8759                           
  8760                           	psect	text26
  8761  00323A                     __ptext26:
  8762                           	opt stack 0
  8763  00323A                     __tdiv_to_l_:
  8764                           	opt stack 19
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;incstack = 0
  8768  00323A  C077  F07D         	movff	__tdiv_to_l_@f1+2,??__tdiv_to_l_
  8769  00323E  0100               	movlb	0	; () banked
  8770  003240  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8771  003242  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8772  003244  0100               	movlb	0	; () banked
  8773  003246  3576               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8774  003248  0100               	movlb	0	; () banked
  8775  00324A  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8776  00324C  E301               	bnc	u9631
  8777  00324E  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8778  003250                     u9631:
  8779  003250  0100               	movlb	0	; () banked
  8780  003252  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  8781  003254  0100               	movlb	0	; () banked
  8782  003256  6F85               	movwf	__tdiv_to_l_@exp1& (0+255),b
  8783  003258  0100               	movlb	0	; () banked
  8784  00325A  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8785  00325C  A4D8               	btfss	status,2,c
  8786  00325E  D00A               	goto	l8034
  8787                           
  8788                           ; BSR set to: 0
  8789  003260  0E00               	movlw	0
  8790  003262  0100               	movlb	0	; () banked
  8791  003264  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8792  003266  0E00               	movlw	0
  8793  003268  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8794  00326A  0E00               	movlw	0
  8795  00326C  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8796  00326E  0E00               	movlw	0
  8797  003270  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8798                           
  8799                           ; BSR set to: 0
  8800  003272  0012               	return	
  8801  003274                     l8034:
  8802                           
  8803                           ; BSR set to: 0
  8804  003274  C07B  F07D         	movff	__tdiv_to_l_@f2+2,??__tdiv_to_l_
  8805  003278  0100               	movlb	0	; () banked
  8806  00327A  6B7E               	clrf	(??__tdiv_to_l_+1)& (0+255),b
  8807  00327C  6B7F               	clrf	(??__tdiv_to_l_+2)& (0+255),b
  8808  00327E  0100               	movlb	0	; () banked
  8809  003280  357A               	rlcf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8810  003282  0100               	movlb	0	; () banked
  8811  003284  377D               	rlcf	??__tdiv_to_l_& (0+255),f,b
  8812  003286  E301               	bnc	u9651
  8813  003288  817E               	bsf	(??__tdiv_to_l_+1)& (0+255),0,b
  8814  00328A                     u9651:
  8815  00328A  0100               	movlb	0	; () banked
  8816  00328C  517D               	movf	??__tdiv_to_l_& (0+255),w,b
  8817  00328E  0100               	movlb	0	; () banked
  8818  003290  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8819  003292  0100               	movlb	0	; () banked
  8820  003294  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8821  003296  A4D8               	btfss	status,2,c
  8822  003298  D00A               	goto	l8040
  8823                           
  8824                           ; BSR set to: 0
  8825  00329A  0E00               	movlw	0
  8826  00329C  0100               	movlb	0	; () banked
  8827  00329E  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8828  0032A0  0E00               	movlw	0
  8829  0032A2  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8830  0032A4  0E00               	movlw	0
  8831  0032A6  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8832  0032A8  0E00               	movlw	0
  8833  0032AA  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8834                           
  8835                           ; BSR set to: 0
  8836  0032AC  0012               	return	
  8837  0032AE                     l8040:
  8838                           
  8839                           ; BSR set to: 0
  8840  0032AE  0100               	movlb	0	; () banked
  8841  0032B0  8F76               	bsf	(__tdiv_to_l_@f1+1)& (0+255),7,b
  8842                           
  8843                           ; BSR set to: 0
  8844  0032B2  0EFF               	movlw	255
  8845  0032B4  0100               	movlb	0	; () banked
  8846  0032B6  1775               	andwf	__tdiv_to_l_@f1& (0+255),f,b
  8847  0032B8  0EFF               	movlw	255
  8848  0032BA  0100               	movlb	0	; () banked
  8849  0032BC  1776               	andwf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8850  0032BE  0E00               	movlw	0
  8851  0032C0  0100               	movlb	0	; () banked
  8852  0032C2  1777               	andwf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8853  0032C4  0100               	movlb	0	; () banked
  8854  0032C6  8F7A               	bsf	(__tdiv_to_l_@f2+1)& (0+255),7,b
  8855                           
  8856                           ; BSR set to: 0
  8857  0032C8  0EFF               	movlw	255
  8858  0032CA  0100               	movlb	0	; () banked
  8859  0032CC  1779               	andwf	__tdiv_to_l_@f2& (0+255),f,b
  8860  0032CE  0EFF               	movlw	255
  8861  0032D0  0100               	movlb	0	; () banked
  8862  0032D2  177A               	andwf	(__tdiv_to_l_@f2+1)& (0+255),f,b
  8863  0032D4  0E00               	movlw	0
  8864  0032D6  0100               	movlb	0	; () banked
  8865  0032D8  177B               	andwf	(__tdiv_to_l_@f2+2)& (0+255),f,b
  8866                           
  8867                           ; BSR set to: 0
  8868  0032DA  0E00               	movlw	0
  8869  0032DC  0100               	movlb	0	; () banked
  8870  0032DE  6F80               	movwf	__tdiv_to_l_@quot& (0+255),b
  8871  0032E0  0E00               	movlw	0
  8872  0032E2  6F81               	movwf	(__tdiv_to_l_@quot+1)& (0+255),b
  8873  0032E4  0E00               	movlw	0
  8874  0032E6  6F82               	movwf	(__tdiv_to_l_@quot+2)& (0+255),b
  8875  0032E8  0E00               	movlw	0
  8876  0032EA  6F83               	movwf	(__tdiv_to_l_@quot+3)& (0+255),b
  8877                           
  8878                           ; BSR set to: 0
  8879  0032EC  0E7F               	movlw	127
  8880  0032EE  0100               	movlb	0	; () banked
  8881  0032F0  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8882                           
  8883                           ; BSR set to: 0
  8884  0032F2  0100               	movlb	0	; () banked
  8885  0032F4  5184               	movf	__tdiv_to_l_@cntr& (0+255),w,b
  8886  0032F6  0F98               	addlw	152
  8887  0032F8  0100               	movlb	0	; () banked
  8888  0032FA  5F85               	subwf	__tdiv_to_l_@exp1& (0+255),f,b
  8889                           
  8890                           ; BSR set to: 0
  8891  0032FC  0E18               	movlw	24
  8892  0032FE  0100               	movlb	0	; () banked
  8893  003300  6F84               	movwf	__tdiv_to_l_@cntr& (0+255),b
  8894  003302                     l1168:
  8895                           
  8896                           ; BSR set to: 0
  8897  003302  0100               	movlb	0	; () banked
  8898  003304  90D8               	bcf	status,0,c
  8899  003306  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  8900  003308  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8901  00330A  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8902  00330C  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8903                           
  8904                           ; BSR set to: 0
  8905  00330E  0100               	movlb	0	; () banked
  8906  003310  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8907  003312  0100               	movlb	0	; () banked
  8908  003314  5D75               	subwf	__tdiv_to_l_@f1& (0+255),w,b
  8909  003316  0100               	movlb	0	; () banked
  8910  003318  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8911  00331A  0100               	movlb	0	; () banked
  8912  00331C  5976               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),w,b
  8913  00331E  0100               	movlb	0	; () banked
  8914  003320  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8915  003322  0100               	movlb	0	; () banked
  8916  003324  5977               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),w,b
  8917  003326  A0D8               	btfss	status,0,c
  8918  003328  D00E               	goto	l1169
  8919                           
  8920                           ; BSR set to: 0
  8921  00332A  0100               	movlb	0	; () banked
  8922  00332C  5179               	movf	__tdiv_to_l_@f2& (0+255),w,b
  8923  00332E  0100               	movlb	0	; () banked
  8924  003330  5F75               	subwf	__tdiv_to_l_@f1& (0+255),f,b
  8925  003332  0100               	movlb	0	; () banked
  8926  003334  517A               	movf	(__tdiv_to_l_@f2+1)& (0+255),w,b
  8927  003336  0100               	movlb	0	; () banked
  8928  003338  5B76               	subwfb	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8929  00333A  0100               	movlb	0	; () banked
  8930  00333C  517B               	movf	(__tdiv_to_l_@f2+2)& (0+255),w,b
  8931  00333E  0100               	movlb	0	; () banked
  8932  003340  5B77               	subwfb	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8933                           
  8934                           ; BSR set to: 0
  8935  003342  0100               	movlb	0	; () banked
  8936  003344  8180               	bsf	__tdiv_to_l_@quot& (0+255),0,b
  8937  003346                     l1169:
  8938                           
  8939                           ; BSR set to: 0
  8940  003346  0100               	movlb	0	; () banked
  8941  003348  90D8               	bcf	status,0,c
  8942  00334A  3775               	rlcf	__tdiv_to_l_@f1& (0+255),f,b
  8943  00334C  3776               	rlcf	(__tdiv_to_l_@f1+1)& (0+255),f,b
  8944  00334E  3777               	rlcf	(__tdiv_to_l_@f1+2)& (0+255),f,b
  8945                           
  8946                           ; BSR set to: 0
  8947  003350  0100               	movlb	0	; () banked
  8948  003352  2F84               	decfsz	__tdiv_to_l_@cntr& (0+255),f,b
  8949  003354  D7D6               	goto	l1168
  8950                           
  8951                           ; BSR set to: 0
  8952                           
  8953                           ; BSR set to: 0
  8954  003356  0100               	movlb	0	; () banked
  8955  003358  AF85               	btfss	__tdiv_to_l_@exp1& (0+255),7,b
  8956  00335A  D01A               	goto	l8074
  8957                           
  8958                           ; BSR set to: 0
  8959  00335C  0100               	movlb	0	; () banked
  8960  00335E  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  8961  003360  0A80               	xorlw	128
  8962  003362  0F97               	addlw	151
  8963  003364  B0D8               	btfsc	status,0,c
  8964  003366  D00A               	goto	l8070
  8965                           
  8966                           ; BSR set to: 0
  8967  003368  0E00               	movlw	0
  8968  00336A  0100               	movlb	0	; () banked
  8969  00336C  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  8970  00336E  0E00               	movlw	0
  8971  003370  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  8972  003372  0E00               	movlw	0
  8973  003374  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  8974  003376  0E00               	movlw	0
  8975  003378  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  8976                           
  8977                           ; BSR set to: 0
  8978  00337A  0012               	return	
  8979  00337C                     l8070:
  8980                           
  8981                           ; BSR set to: 0
  8982  00337C  0100               	movlb	0	; () banked
  8983  00337E  90D8               	bcf	status,0,c
  8984  003380  3383               	rrcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  8985  003382  3382               	rrcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  8986  003384  3381               	rrcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  8987  003386  3380               	rrcf	__tdiv_to_l_@quot& (0+255),f,b
  8988                           
  8989                           ; BSR set to: 0
  8990  003388  0100               	movlb	0	; () banked
  8991  00338A  3F85               	incfsz	__tdiv_to_l_@exp1& (0+255),f,b
  8992  00338C  D7F7               	goto	l8070
  8993                           
  8994                           ; BSR set to: 0
  8995  00338E  D01B               	goto	l1175
  8996  003390                     l8074:
  8997                           
  8998                           ; BSR set to: 0
  8999  003390  0E17               	movlw	23
  9000  003392  0100               	movlb	0	; () banked
  9001  003394  6585               	cpfsgt	__tdiv_to_l_@exp1& (0+255),b
  9002  003396  D012               	goto	l8082
  9003                           
  9004                           ; BSR set to: 0
  9005  003398  0E00               	movlw	0
  9006  00339A  0100               	movlb	0	; () banked
  9007  00339C  6F75               	movwf	?__tdiv_to_l_& (0+255),b
  9008  00339E  0E00               	movlw	0
  9009  0033A0  6F76               	movwf	(?__tdiv_to_l_+1)& (0+255),b
  9010  0033A2  0E00               	movlw	0
  9011  0033A4  6F77               	movwf	(?__tdiv_to_l_+2)& (0+255),b
  9012  0033A6  0E00               	movlw	0
  9013  0033A8  6F78               	movwf	(?__tdiv_to_l_+3)& (0+255),b
  9014                           
  9015                           ; BSR set to: 0
  9016  0033AA  0012               	return	
  9017  0033AC                     l8080:
  9018                           
  9019                           ; BSR set to: 0
  9020  0033AC  0100               	movlb	0	; () banked
  9021  0033AE  90D8               	bcf	status,0,c
  9022  0033B0  3780               	rlcf	__tdiv_to_l_@quot& (0+255),f,b
  9023  0033B2  3781               	rlcf	(__tdiv_to_l_@quot+1)& (0+255),f,b
  9024  0033B4  3782               	rlcf	(__tdiv_to_l_@quot+2)& (0+255),f,b
  9025  0033B6  3783               	rlcf	(__tdiv_to_l_@quot+3)& (0+255),f,b
  9026  0033B8  0100               	movlb	0	; () banked
  9027  0033BA  0785               	decf	__tdiv_to_l_@exp1& (0+255),f,b
  9028  0033BC                     l8082:
  9029                           
  9030                           ; BSR set to: 0
  9031  0033BC  0100               	movlb	0	; () banked
  9032  0033BE  5185               	movf	__tdiv_to_l_@exp1& (0+255),w,b
  9033  0033C0  0100               	movlb	0	; () banked
  9034  0033C2  A4D8               	btfss	status,2,c
  9035  0033C4  D7F3               	goto	l8080
  9036  0033C6                     l1175:
  9037                           
  9038                           ; BSR set to: 0
  9039  0033C6  C080  F075         	movff	__tdiv_to_l_@quot,?__tdiv_to_l_
  9040  0033CA  C081  F076         	movff	__tdiv_to_l_@quot+1,?__tdiv_to_l_+1
  9041  0033CE  C082  F077         	movff	__tdiv_to_l_@quot+2,?__tdiv_to_l_+2
  9042  0033D2  C083  F078         	movff	__tdiv_to_l_@quot+3,?__tdiv_to_l_+3
  9043                           
  9044                           ; BSR set to: 0
  9045  0033D6  0012               	return		;funcret
  9046  0033D8                     __end_of__tdiv_to_l_:
  9047                           	opt stack 0
  9048                           tblptru	equ	0xFF8
  9049                           tblptrh	equ	0xFF7
  9050                           tblptrl	equ	0xFF6
  9051                           tablat	equ	0xFF5
  9052                           prodh	equ	0xFF4
  9053                           prodl	equ	0xFF3
  9054                           intcon	equ	0xFF2
  9055                           postinc0	equ	0xFEE
  9056                           wreg	equ	0xFE8
  9057                           postdec1	equ	0xFE5
  9058                           fsr1l	equ	0xFE1
  9059                           indf2	equ	0xFDF
  9060                           postinc2	equ	0xFDE
  9061                           postdec2	equ	0xFDD
  9062                           fsr2h	equ	0xFDA
  9063                           fsr2l	equ	0xFD9
  9064                           status	equ	0xFD8
  9065                           
  9066 ;; *************** function __div_to_l_ *****************
  9067 ;; Defined at:
  9068 ;;		line 60 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fldivl.c"
  9069 ;; Parameters:    Size  Location     Type
  9070 ;;  f1              4   21[BANK0 ] unsigned long 
  9071 ;;  f2              4   25[BANK0 ] unsigned long 
  9072 ;; Auto vars:     Size  Location     Type
  9073 ;;  quot            4   29[BANK0 ] unsigned long 
  9074 ;;  exp1            1   34[BANK0 ] unsigned char 
  9075 ;;  cntr            1   33[BANK0 ] unsigned char 
  9076 ;; Return value:  Size  Location     Type
  9077 ;;                  4   21[BANK0 ] unsigned long 
  9078 ;; Registers used:
  9079 ;;		wreg, status,2, status,0
  9080 ;; Tracked objects:
  9081 ;;		On entry : 0/0
  9082 ;;		On exit  : 0/0
  9083 ;;		Unchanged: 0/0
  9084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9085 ;;      Params:         0       8       0       0       0       0       0
  9086 ;;      Locals:         0       6       0       0       0       0       0
  9087 ;;      Temps:          0       0       0       0       0       0       0
  9088 ;;      Totals:         0      14       0       0       0       0       0
  9089 ;;Total ram usage:       14 bytes
  9090 ;; Hardware stack levels used:    1
  9091 ;; Hardware stack levels required when called:    8
  9092 ;; This function calls:
  9093 ;;		Nothing
  9094 ;; This function is called by:
  9095 ;;		_printf
  9096 ;; This function uses a non-reentrant model
  9097 ;;
  9098                           
  9099                           	psect	text27
  9100  003568                     __ptext27:
  9101                           	opt stack 0
  9102  003568                     __div_to_l_:
  9103                           	opt stack 19
  9104                           
  9105                           ; BSR set to: 0
  9106                           ;incstack = 0
  9107  003568  0100               	movlb	0	; () banked
  9108  00356A  3577               	rlcf	(__div_to_l_@f1+2)& (0+255),w,b
  9109  00356C  3578               	rlcf	(__div_to_l_@f1+3)& (0+255),w,b
  9110  00356E  0100               	movlb	0	; () banked
  9111  003570  6F82               	movwf	__div_to_l_@exp1& (0+255),b
  9112  003572  0100               	movlb	0	; () banked
  9113  003574  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9114  003576  A4D8               	btfss	status,2,c
  9115  003578  D00A               	goto	l8090
  9116                           
  9117                           ; BSR set to: 0
  9118  00357A  0E00               	movlw	0
  9119  00357C  0100               	movlb	0	; () banked
  9120  00357E  6F75               	movwf	?__div_to_l_& (0+255),b
  9121  003580  0E00               	movlw	0
  9122  003582  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9123  003584  0E00               	movlw	0
  9124  003586  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9125  003588  0E00               	movlw	0
  9126  00358A  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9127                           
  9128                           ; BSR set to: 0
  9129  00358C  0012               	return	
  9130  00358E                     l8090:
  9131                           
  9132                           ; BSR set to: 0
  9133  00358E  0100               	movlb	0	; () banked
  9134  003590  357B               	rlcf	(__div_to_l_@f2+2)& (0+255),w,b
  9135  003592  357C               	rlcf	(__div_to_l_@f2+3)& (0+255),w,b
  9136  003594  0100               	movlb	0	; () banked
  9137  003596  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9138  003598  0100               	movlb	0	; () banked
  9139  00359A  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9140  00359C  A4D8               	btfss	status,2,c
  9141  00359E  D00A               	goto	l8096
  9142                           
  9143                           ; BSR set to: 0
  9144  0035A0  0E00               	movlw	0
  9145  0035A2  0100               	movlb	0	; () banked
  9146  0035A4  6F75               	movwf	?__div_to_l_& (0+255),b
  9147  0035A6  0E00               	movlw	0
  9148  0035A8  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9149  0035AA  0E00               	movlw	0
  9150  0035AC  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9151  0035AE  0E00               	movlw	0
  9152  0035B0  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9153                           
  9154                           ; BSR set to: 0
  9155  0035B2  0012               	return	
  9156  0035B4                     l8096:
  9157                           
  9158                           ; BSR set to: 0
  9159  0035B4  0100               	movlb	0	; () banked
  9160  0035B6  8F77               	bsf	(__div_to_l_@f1+2)& (0+255),7,b
  9161                           
  9162                           ; BSR set to: 0
  9163  0035B8  0EFF               	movlw	255
  9164  0035BA  0100               	movlb	0	; () banked
  9165  0035BC  1775               	andwf	__div_to_l_@f1& (0+255),f,b
  9166  0035BE  0EFF               	movlw	255
  9167  0035C0  1776               	andwf	(__div_to_l_@f1+1)& (0+255),f,b
  9168  0035C2  0EFF               	movlw	255
  9169  0035C4  1777               	andwf	(__div_to_l_@f1+2)& (0+255),f,b
  9170  0035C6  0E00               	movlw	0
  9171  0035C8  1778               	andwf	(__div_to_l_@f1+3)& (0+255),f,b
  9172                           
  9173                           ; BSR set to: 0
  9174  0035CA  0100               	movlb	0	; () banked
  9175  0035CC  8F7B               	bsf	(__div_to_l_@f2+2)& (0+255),7,b
  9176  0035CE  0EFF               	movlw	255
  9177  0035D0  0100               	movlb	0	; () banked
  9178  0035D2  1779               	andwf	__div_to_l_@f2& (0+255),f,b
  9179  0035D4  0EFF               	movlw	255
  9180  0035D6  177A               	andwf	(__div_to_l_@f2+1)& (0+255),f,b
  9181  0035D8  0EFF               	movlw	255
  9182  0035DA  177B               	andwf	(__div_to_l_@f2+2)& (0+255),f,b
  9183  0035DC  0E00               	movlw	0
  9184  0035DE  177C               	andwf	(__div_to_l_@f2+3)& (0+255),f,b
  9185                           
  9186                           ; BSR set to: 0
  9187  0035E0  0E00               	movlw	0
  9188  0035E2  0100               	movlb	0	; () banked
  9189  0035E4  6F7D               	movwf	__div_to_l_@quot& (0+255),b
  9190  0035E6  0E00               	movlw	0
  9191  0035E8  6F7E               	movwf	(__div_to_l_@quot+1)& (0+255),b
  9192  0035EA  0E00               	movlw	0
  9193  0035EC  6F7F               	movwf	(__div_to_l_@quot+2)& (0+255),b
  9194  0035EE  0E00               	movlw	0
  9195  0035F0  6F80               	movwf	(__div_to_l_@quot+3)& (0+255),b
  9196                           
  9197                           ; BSR set to: 0
  9198  0035F2  0E7F               	movlw	127
  9199  0035F4  0100               	movlb	0	; () banked
  9200  0035F6  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9201                           
  9202                           ; BSR set to: 0
  9203  0035F8  0100               	movlb	0	; () banked
  9204  0035FA  5181               	movf	__div_to_l_@cntr& (0+255),w,b
  9205  0035FC  0FA0               	addlw	160
  9206  0035FE  0100               	movlb	0	; () banked
  9207  003600  5F82               	subwf	__div_to_l_@exp1& (0+255),f,b
  9208                           
  9209                           ; BSR set to: 0
  9210  003602  0E20               	movlw	32
  9211  003604  0100               	movlb	0	; () banked
  9212  003606  6F81               	movwf	__div_to_l_@cntr& (0+255),b
  9213  003608                     l8110:
  9214                           
  9215                           ; BSR set to: 0
  9216  003608  0100               	movlb	0	; () banked
  9217  00360A  90D8               	bcf	status,0,c
  9218  00360C  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9219  00360E  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9220  003610  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9221  003612  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9222                           
  9223                           ; BSR set to: 0
  9224  003614  0100               	movlb	0	; () banked
  9225  003616  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9226  003618  0100               	movlb	0	; () banked
  9227  00361A  5D75               	subwf	__div_to_l_@f1& (0+255),w,b
  9228  00361C  0100               	movlb	0	; () banked
  9229  00361E  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9230  003620  0100               	movlb	0	; () banked
  9231  003622  5976               	subwfb	(__div_to_l_@f1+1)& (0+255),w,b
  9232  003624  0100               	movlb	0	; () banked
  9233  003626  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9234  003628  0100               	movlb	0	; () banked
  9235  00362A  5977               	subwfb	(__div_to_l_@f1+2)& (0+255),w,b
  9236  00362C  0100               	movlb	0	; () banked
  9237  00362E  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9238  003630  0100               	movlb	0	; () banked
  9239  003632  5978               	subwfb	(__div_to_l_@f1+3)& (0+255),w,b
  9240  003634  A0D8               	btfss	status,0,c
  9241  003636  D012               	goto	l8118
  9242                           
  9243                           ; BSR set to: 0
  9244  003638  0100               	movlb	0	; () banked
  9245  00363A  5179               	movf	__div_to_l_@f2& (0+255),w,b
  9246  00363C  0100               	movlb	0	; () banked
  9247  00363E  5F75               	subwf	__div_to_l_@f1& (0+255),f,b
  9248  003640  0100               	movlb	0	; () banked
  9249  003642  517A               	movf	(__div_to_l_@f2+1)& (0+255),w,b
  9250  003644  0100               	movlb	0	; () banked
  9251  003646  5B76               	subwfb	(__div_to_l_@f1+1)& (0+255),f,b
  9252  003648  0100               	movlb	0	; () banked
  9253  00364A  517B               	movf	(__div_to_l_@f2+2)& (0+255),w,b
  9254  00364C  0100               	movlb	0	; () banked
  9255  00364E  5B77               	subwfb	(__div_to_l_@f1+2)& (0+255),f,b
  9256  003650  0100               	movlb	0	; () banked
  9257  003652  517C               	movf	(__div_to_l_@f2+3)& (0+255),w,b
  9258  003654  0100               	movlb	0	; () banked
  9259  003656  5B78               	subwfb	(__div_to_l_@f1+3)& (0+255),f,b
  9260                           
  9261                           ; BSR set to: 0
  9262  003658  0100               	movlb	0	; () banked
  9263  00365A  817D               	bsf	__div_to_l_@quot& (0+255),0,b
  9264  00365C                     l8118:
  9265                           
  9266                           ; BSR set to: 0
  9267  00365C  0100               	movlb	0	; () banked
  9268  00365E  90D8               	bcf	status,0,c
  9269  003660  3775               	rlcf	__div_to_l_@f1& (0+255),f,b
  9270  003662  3776               	rlcf	(__div_to_l_@f1+1)& (0+255),f,b
  9271  003664  3777               	rlcf	(__div_to_l_@f1+2)& (0+255),f,b
  9272  003666  3778               	rlcf	(__div_to_l_@f1+3)& (0+255),f,b
  9273                           
  9274                           ; BSR set to: 0
  9275  003668  0100               	movlb	0	; () banked
  9276  00366A  2F81               	decfsz	__div_to_l_@cntr& (0+255),f,b
  9277  00366C  D7CD               	goto	l8110
  9278                           
  9279                           ; BSR set to: 0
  9280                           
  9281                           ; BSR set to: 0
  9282  00366E  0100               	movlb	0	; () banked
  9283  003670  AF82               	btfss	__div_to_l_@exp1& (0+255),7,b
  9284  003672  D01A               	goto	l8134
  9285                           
  9286                           ; BSR set to: 0
  9287  003674  0100               	movlb	0	; () banked
  9288  003676  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9289  003678  0A80               	xorlw	128
  9290  00367A  0F9F               	addlw	159
  9291  00367C  B0D8               	btfsc	status,0,c
  9292  00367E  D00A               	goto	l8130
  9293                           
  9294                           ; BSR set to: 0
  9295  003680  0E00               	movlw	0
  9296  003682  0100               	movlb	0	; () banked
  9297  003684  6F75               	movwf	?__div_to_l_& (0+255),b
  9298  003686  0E00               	movlw	0
  9299  003688  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9300  00368A  0E00               	movlw	0
  9301  00368C  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9302  00368E  0E00               	movlw	0
  9303  003690  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9304                           
  9305                           ; BSR set to: 0
  9306  003692  0012               	return	
  9307  003694                     l8130:
  9308                           
  9309                           ; BSR set to: 0
  9310  003694  0100               	movlb	0	; () banked
  9311  003696  90D8               	bcf	status,0,c
  9312  003698  3380               	rrcf	(__div_to_l_@quot+3)& (0+255),f,b
  9313  00369A  337F               	rrcf	(__div_to_l_@quot+2)& (0+255),f,b
  9314  00369C  337E               	rrcf	(__div_to_l_@quot+1)& (0+255),f,b
  9315  00369E  337D               	rrcf	__div_to_l_@quot& (0+255),f,b
  9316                           
  9317                           ; BSR set to: 0
  9318  0036A0  0100               	movlb	0	; () banked
  9319  0036A2  3F82               	incfsz	__div_to_l_@exp1& (0+255),f,b
  9320  0036A4  D7F7               	goto	l8130
  9321                           
  9322                           ; BSR set to: 0
  9323  0036A6  D01B               	goto	l1071
  9324  0036A8                     l8134:
  9325                           
  9326                           ; BSR set to: 0
  9327  0036A8  0E1F               	movlw	31
  9328  0036AA  0100               	movlb	0	; () banked
  9329  0036AC  6582               	cpfsgt	__div_to_l_@exp1& (0+255),b
  9330  0036AE  D012               	goto	l8142
  9331                           
  9332                           ; BSR set to: 0
  9333  0036B0  0E00               	movlw	0
  9334  0036B2  0100               	movlb	0	; () banked
  9335  0036B4  6F75               	movwf	?__div_to_l_& (0+255),b
  9336  0036B6  0E00               	movlw	0
  9337  0036B8  6F76               	movwf	(?__div_to_l_+1)& (0+255),b
  9338  0036BA  0E00               	movlw	0
  9339  0036BC  6F77               	movwf	(?__div_to_l_+2)& (0+255),b
  9340  0036BE  0E00               	movlw	0
  9341  0036C0  6F78               	movwf	(?__div_to_l_+3)& (0+255),b
  9342                           
  9343                           ; BSR set to: 0
  9344  0036C2  0012               	return	
  9345  0036C4                     l8140:
  9346                           
  9347                           ; BSR set to: 0
  9348  0036C4  0100               	movlb	0	; () banked
  9349  0036C6  90D8               	bcf	status,0,c
  9350  0036C8  377D               	rlcf	__div_to_l_@quot& (0+255),f,b
  9351  0036CA  377E               	rlcf	(__div_to_l_@quot+1)& (0+255),f,b
  9352  0036CC  377F               	rlcf	(__div_to_l_@quot+2)& (0+255),f,b
  9353  0036CE  3780               	rlcf	(__div_to_l_@quot+3)& (0+255),f,b
  9354  0036D0  0100               	movlb	0	; () banked
  9355  0036D2  0782               	decf	__div_to_l_@exp1& (0+255),f,b
  9356  0036D4                     l8142:
  9357                           
  9358                           ; BSR set to: 0
  9359  0036D4  0100               	movlb	0	; () banked
  9360  0036D6  5182               	movf	__div_to_l_@exp1& (0+255),w,b
  9361  0036D8  0100               	movlb	0	; () banked
  9362  0036DA  A4D8               	btfss	status,2,c
  9363  0036DC  D7F3               	goto	l8140
  9364  0036DE                     l1071:
  9365                           
  9366                           ; BSR set to: 0
  9367  0036DE  C07D  F075         	movff	__div_to_l_@quot,?__div_to_l_
  9368  0036E2  C07E  F076         	movff	__div_to_l_@quot+1,?__div_to_l_+1
  9369  0036E6  C07F  F077         	movff	__div_to_l_@quot+2,?__div_to_l_+2
  9370  0036EA  C080  F078         	movff	__div_to_l_@quot+3,?__div_to_l_+3
  9371                           
  9372                           ; BSR set to: 0
  9373  0036EE  0012               	return		;funcret
  9374  0036F0                     __end_of__div_to_l_:
  9375                           	opt stack 0
  9376                           tblptru	equ	0xFF8
  9377                           tblptrh	equ	0xFF7
  9378                           tblptrl	equ	0xFF6
  9379                           tablat	equ	0xFF5
  9380                           prodh	equ	0xFF4
  9381                           prodl	equ	0xFF3
  9382                           intcon	equ	0xFF2
  9383                           postinc0	equ	0xFEE
  9384                           wreg	equ	0xFE8
  9385                           postdec1	equ	0xFE5
  9386                           fsr1l	equ	0xFE1
  9387                           indf2	equ	0xFDF
  9388                           postinc2	equ	0xFDE
  9389                           postdec2	equ	0xFDD
  9390                           fsr2h	equ	0xFDA
  9391                           fsr2l	equ	0xFD9
  9392                           status	equ	0xFD8
  9393                           
  9394 ;; *************** function ___xxtofl *****************
  9395 ;; Defined at:
  9396 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\xxtofl.c"
  9397 ;; Parameters:    Size  Location     Type
  9398 ;;  sign            1    wreg     unsigned char 
  9399 ;;  val             4   21[BANK0 ] long 
  9400 ;; Auto vars:     Size  Location     Type
  9401 ;;  sign            1   29[BANK0 ] unsigned char 
  9402 ;;  arg             4   31[BANK0 ] unsigned long 
  9403 ;;  exp             1   30[BANK0 ] unsigned char 
  9404 ;; Return value:  Size  Location     Type
  9405 ;;                  4   21[BANK0 ] unsigned char 
  9406 ;; Registers used:
  9407 ;;		wreg, status,2, status,0
  9408 ;; Tracked objects:
  9409 ;;		On entry : 0/0
  9410 ;;		On exit  : 0/0
  9411 ;;		Unchanged: 0/0
  9412 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9413 ;;      Params:         0       4       0       0       0       0       0
  9414 ;;      Locals:         0       6       0       0       0       0       0
  9415 ;;      Temps:          0       4       0       0       0       0       0
  9416 ;;      Totals:         0      14       0       0       0       0       0
  9417 ;;Total ram usage:       14 bytes
  9418 ;; Hardware stack levels used:    1
  9419 ;; Hardware stack levels required when called:    8
  9420 ;; This function calls:
  9421 ;;		Nothing
  9422 ;; This function is called by:
  9423 ;;		_printf
  9424 ;;		_preAutoCal
  9425 ;; This function uses a non-reentrant model
  9426 ;;
  9427                           
  9428                           	psect	text28
  9429  00306C                     __ptext28:
  9430                           	opt stack 0
  9431  00306C                     ___xxtofl:
  9432                           	opt stack 19
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;incstack = 0
  9436                           ;___xxtofl@sign stored from wreg
  9437  00306C  0100               	movlb	0	; () banked
  9438  00306E  6F7D               	movwf	___xxtofl@sign& (0+255),b
  9439  003070  0100               	movlb	0	; () banked
  9440  003072  517D               	movf	___xxtofl@sign& (0+255),w,b
  9441  003074  0100               	movlb	0	; () banked
  9442  003076  B4D8               	btfsc	status,2,c
  9443  003078  D01E               	goto	l1452
  9444                           
  9445                           ; BSR set to: 0
  9446  00307A  0100               	movlb	0	; () banked
  9447  00307C  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9448  00307E  D01B               	goto	l1452
  9449                           
  9450                           ; BSR set to: 0
  9451  003080  C075  F079         	movff	___xxtofl@val,??___xxtofl
  9452  003084  C076  F07A         	movff	___xxtofl@val+1,??___xxtofl+1
  9453  003088  C077  F07B         	movff	___xxtofl@val+2,??___xxtofl+2
  9454  00308C  C078  F07C         	movff	___xxtofl@val+3,??___xxtofl+3
  9455  003090  0100               	movlb	0	; () banked
  9456  003092  1F79               	comf	??___xxtofl& (0+255),f,b
  9457  003094  1F7A               	comf	(??___xxtofl+1)& (0+255),f,b
  9458  003096  1F7B               	comf	(??___xxtofl+2)& (0+255),f,b
  9459  003098  1F7C               	comf	(??___xxtofl+3)& (0+255),f,b
  9460  00309A  2B79               	incf	??___xxtofl& (0+255),f,b
  9461  00309C  0E00               	movlw	0
  9462  00309E  237A               	addwfc	(??___xxtofl+1)& (0+255),f,b
  9463  0030A0  237B               	addwfc	(??___xxtofl+2)& (0+255),f,b
  9464  0030A2  237C               	addwfc	(??___xxtofl+3)& (0+255),f,b
  9465  0030A4  C079  F07F         	movff	??___xxtofl,___xxtofl@arg
  9466  0030A8  C07A  F080         	movff	??___xxtofl+1,___xxtofl@arg+1
  9467  0030AC  C07B  F081         	movff	??___xxtofl+2,___xxtofl@arg+2
  9468  0030B0  C07C  F082         	movff	??___xxtofl+3,___xxtofl@arg+3
  9469  0030B4  D008               	goto	l8274
  9470  0030B6                     l1452:
  9471                           
  9472                           ; BSR set to: 0
  9473  0030B6  C075  F07F         	movff	___xxtofl@val,___xxtofl@arg
  9474  0030BA  C076  F080         	movff	___xxtofl@val+1,___xxtofl@arg+1
  9475  0030BE  C077  F081         	movff	___xxtofl@val+2,___xxtofl@arg+2
  9476  0030C2  C078  F082         	movff	___xxtofl@val+3,___xxtofl@arg+3
  9477  0030C6                     l8274:
  9478                           
  9479                           ; BSR set to: 0
  9480  0030C6  0100               	movlb	0	; () banked
  9481  0030C8  5175               	movf	___xxtofl@val& (0+255),w,b
  9482  0030CA  0100               	movlb	0	; () banked
  9483  0030CC  1176               	iorwf	(___xxtofl@val+1)& (0+255),w,b
  9484  0030CE  0100               	movlb	0	; () banked
  9485  0030D0  1177               	iorwf	(___xxtofl@val+2)& (0+255),w,b
  9486  0030D2  0100               	movlb	0	; () banked
  9487  0030D4  1178               	iorwf	(___xxtofl@val+3)& (0+255),w,b
  9488  0030D6  A4D8               	btfss	status,2,c
  9489  0030D8  D00A               	goto	l8280
  9490                           
  9491                           ; BSR set to: 0
  9492  0030DA  0E00               	movlw	0
  9493  0030DC  0100               	movlb	0	; () banked
  9494  0030DE  6F75               	movwf	?___xxtofl& (0+255),b
  9495  0030E0  0E00               	movlw	0
  9496  0030E2  6F76               	movwf	(?___xxtofl+1)& (0+255),b
  9497  0030E4  0E00               	movlw	0
  9498  0030E6  6F77               	movwf	(?___xxtofl+2)& (0+255),b
  9499  0030E8  0E00               	movlw	0
  9500  0030EA  6F78               	movwf	(?___xxtofl+3)& (0+255),b
  9501                           
  9502                           ; BSR set to: 0
  9503  0030EC  0012               	return	
  9504  0030EE                     l8280:
  9505                           
  9506                           ; BSR set to: 0
  9507  0030EE  0E96               	movlw	150
  9508  0030F0  0100               	movlb	0	; () banked
  9509  0030F2  6F7E               	movwf	___xxtofl@exp& (0+255),b
  9510  0030F4  D008               	goto	l8284
  9511  0030F6                     l8282:
  9512                           
  9513                           ; BSR set to: 0
  9514  0030F6  0100               	movlb	0	; () banked
  9515  0030F8  2B7E               	incf	___xxtofl@exp& (0+255),f,b
  9516  0030FA  0100               	movlb	0	; () banked
  9517  0030FC  90D8               	bcf	status,0,c
  9518  0030FE  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9519  003100  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9520  003102  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9521  003104  337F               	rrcf	___xxtofl@arg& (0+255),f,b
  9522  003106                     l8284:
  9523                           
  9524                           ; BSR set to: 0
  9525  003106  0E00               	movlw	0
  9526  003108  0100               	movlb	0	; () banked
  9527  00310A  157F               	andwf	___xxtofl@arg& (0+255),w,b
  9528  00310C  0100               	movlb	0	; () banked
  9529  00310E  6F79               	movwf	??___xxtofl& (0+255),b
  9530  003110  0E00               	movlw	0
  9531  003112  0100               	movlb	0	; () banked
  9532  003114  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9533  003116  0100               	movlb	0	; () banked
  9534  003118  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
  9535  00311A  0E00               	movlw	0
  9536  00311C  0100               	movlb	0	; () banked
  9537  00311E  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9538  003120  0100               	movlb	0	; () banked
  9539  003122  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
  9540  003124  0EFE               	movlw	254
  9541  003126  0100               	movlb	0	; () banked
  9542  003128  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9543  00312A  0100               	movlb	0	; () banked
  9544  00312C  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
  9545  00312E  0100               	movlb	0	; () banked
  9546  003130  5179               	movf	??___xxtofl& (0+255),w,b
  9547  003132  0100               	movlb	0	; () banked
  9548  003134  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9549  003136  0100               	movlb	0	; () banked
  9550  003138  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9551  00313A  0100               	movlb	0	; () banked
  9552  00313C  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9553  00313E  B4D8               	btfsc	status,2,c
  9554  003140  D010               	goto	l1459
  9555  003142  D7D9               	goto	l8282
  9556  003144                     l8286:
  9557                           
  9558                           ; BSR set to: 0
  9559  003144  0100               	movlb	0	; () banked
  9560  003146  2B7E               	incf	___xxtofl@exp& (0+255),f,b
  9561                           
  9562                           ; BSR set to: 0
  9563  003148  0E01               	movlw	1
  9564  00314A  0100               	movlb	0	; () banked
  9565  00314C  277F               	addwf	___xxtofl@arg& (0+255),f,b
  9566  00314E  0E00               	movlw	0
  9567  003150  2380               	addwfc	(___xxtofl@arg+1)& (0+255),f,b
  9568  003152  2381               	addwfc	(___xxtofl@arg+2)& (0+255),f,b
  9569  003154  2382               	addwfc	(___xxtofl@arg+3)& (0+255),f,b
  9570                           
  9571                           ; BSR set to: 0
  9572  003156  0100               	movlb	0	; () banked
  9573  003158  90D8               	bcf	status,0,c
  9574  00315A  3382               	rrcf	(___xxtofl@arg+3)& (0+255),f,b
  9575  00315C  3381               	rrcf	(___xxtofl@arg+2)& (0+255),f,b
  9576  00315E  3380               	rrcf	(___xxtofl@arg+1)& (0+255),f,b
  9577  003160  337F               	rrcf	___xxtofl@arg& (0+255),f,b
  9578  003162                     l1459:
  9579                           
  9580                           ; BSR set to: 0
  9581  003162  0E00               	movlw	0
  9582  003164  0100               	movlb	0	; () banked
  9583  003166  157F               	andwf	___xxtofl@arg& (0+255),w,b
  9584  003168  0100               	movlb	0	; () banked
  9585  00316A  6F79               	movwf	??___xxtofl& (0+255),b
  9586  00316C  0E00               	movlw	0
  9587  00316E  0100               	movlb	0	; () banked
  9588  003170  1580               	andwf	(___xxtofl@arg+1)& (0+255),w,b
  9589  003172  0100               	movlb	0	; () banked
  9590  003174  6F7A               	movwf	(??___xxtofl+1)& (0+255),b
  9591  003176  0E00               	movlw	0
  9592  003178  0100               	movlb	0	; () banked
  9593  00317A  1581               	andwf	(___xxtofl@arg+2)& (0+255),w,b
  9594  00317C  0100               	movlb	0	; () banked
  9595  00317E  6F7B               	movwf	(??___xxtofl+2)& (0+255),b
  9596  003180  0EFF               	movlw	255
  9597  003182  0100               	movlb	0	; () banked
  9598  003184  1582               	andwf	(___xxtofl@arg+3)& (0+255),w,b
  9599  003186  0100               	movlb	0	; () banked
  9600  003188  6F7C               	movwf	(??___xxtofl+3)& (0+255),b
  9601  00318A  0100               	movlb	0	; () banked
  9602  00318C  5179               	movf	??___xxtofl& (0+255),w,b
  9603  00318E  0100               	movlb	0	; () banked
  9604  003190  117A               	iorwf	(??___xxtofl+1)& (0+255),w,b
  9605  003192  0100               	movlb	0	; () banked
  9606  003194  117B               	iorwf	(??___xxtofl+2)& (0+255),w,b
  9607  003196  0100               	movlb	0	; () banked
  9608  003198  117C               	iorwf	(??___xxtofl+3)& (0+255),w,b
  9609  00319A  B4D8               	btfsc	status,2,c
  9610  00319C  D009               	goto	l8294
  9611  00319E  D7D2               	goto	l8286
  9612  0031A0                     l8292:
  9613                           
  9614                           ; BSR set to: 0
  9615  0031A0  0100               	movlb	0	; () banked
  9616  0031A2  077E               	decf	___xxtofl@exp& (0+255),f,b
  9617  0031A4  0100               	movlb	0	; () banked
  9618  0031A6  90D8               	bcf	status,0,c
  9619  0031A8  377F               	rlcf	___xxtofl@arg& (0+255),f,b
  9620  0031AA  3780               	rlcf	(___xxtofl@arg+1)& (0+255),f,b
  9621  0031AC  3781               	rlcf	(___xxtofl@arg+2)& (0+255),f,b
  9622  0031AE  3782               	rlcf	(___xxtofl@arg+3)& (0+255),f,b
  9623  0031B0                     l8294:
  9624                           
  9625                           ; BSR set to: 0
  9626  0031B0  0100               	movlb	0	; () banked
  9627  0031B2  BF81               	btfsc	(___xxtofl@arg+2)& (0+255),7,b
  9628  0031B4  D004               	goto	l1466
  9629                           
  9630                           ; BSR set to: 0
  9631  0031B6  0E02               	movlw	2
  9632  0031B8  0100               	movlb	0	; () banked
  9633  0031BA  617E               	cpfslt	___xxtofl@exp& (0+255),b
  9634  0031BC  D7F1               	goto	l8292
  9635  0031BE                     l1466:
  9636                           
  9637                           ; BSR set to: 0
  9638  0031BE  0100               	movlb	0	; () banked
  9639  0031C0  B17E               	btfsc	___xxtofl@exp& (0+255),0,b
  9640  0031C2  D009               	goto	l1467
  9641                           
  9642                           ; BSR set to: 0
  9643  0031C4  0EFF               	movlw	255
  9644  0031C6  0100               	movlb	0	; () banked
  9645  0031C8  177F               	andwf	___xxtofl@arg& (0+255),f,b
  9646  0031CA  0EFF               	movlw	255
  9647  0031CC  1780               	andwf	(___xxtofl@arg+1)& (0+255),f,b
  9648  0031CE  0E7F               	movlw	127
  9649  0031D0  1781               	andwf	(___xxtofl@arg+2)& (0+255),f,b
  9650  0031D2  0EFF               	movlw	255
  9651  0031D4  1782               	andwf	(___xxtofl@arg+3)& (0+255),f,b
  9652  0031D6                     l1467:
  9653                           
  9654                           ; BSR set to: 0
  9655  0031D6  0100               	movlb	0	; () banked
  9656  0031D8  90D8               	bcf	status,0,c
  9657  0031DA  337E               	rrcf	___xxtofl@exp& (0+255),f,b
  9658  0031DC  C07E  F079         	movff	___xxtofl@exp,??___xxtofl
  9659  0031E0  0100               	movlb	0	; () banked
  9660  0031E2  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
  9661  0031E4  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
  9662  0031E6  6B7C               	clrf	(??___xxtofl+3)& (0+255),b
  9663  0031E8  C079  F07C         	movff	??___xxtofl,??___xxtofl+3
  9664  0031EC  0100               	movlb	0	; () banked
  9665  0031EE  6B7B               	clrf	(??___xxtofl+2)& (0+255),b
  9666  0031F0  6B7A               	clrf	(??___xxtofl+1)& (0+255),b
  9667  0031F2  6B79               	clrf	??___xxtofl& (0+255),b
  9668  0031F4  0100               	movlb	0	; () banked
  9669  0031F6  5179               	movf	??___xxtofl& (0+255),w,b
  9670  0031F8  0100               	movlb	0	; () banked
  9671  0031FA  137F               	iorwf	___xxtofl@arg& (0+255),f,b
  9672  0031FC  0100               	movlb	0	; () banked
  9673  0031FE  517A               	movf	(??___xxtofl+1)& (0+255),w,b
  9674  003200  0100               	movlb	0	; () banked
  9675  003202  1380               	iorwf	(___xxtofl@arg+1)& (0+255),f,b
  9676  003204  0100               	movlb	0	; () banked
  9677  003206  517B               	movf	(??___xxtofl+2)& (0+255),w,b
  9678  003208  0100               	movlb	0	; () banked
  9679  00320A  1381               	iorwf	(___xxtofl@arg+2)& (0+255),f,b
  9680  00320C  0100               	movlb	0	; () banked
  9681  00320E  517C               	movf	(??___xxtofl+3)& (0+255),w,b
  9682  003210  0100               	movlb	0	; () banked
  9683  003212  1382               	iorwf	(___xxtofl@arg+3)& (0+255),f,b
  9684                           
  9685                           ; BSR set to: 0
  9686  003214  0100               	movlb	0	; () banked
  9687  003216  517D               	movf	___xxtofl@sign& (0+255),w,b
  9688  003218  0100               	movlb	0	; () banked
  9689  00321A  B4D8               	btfsc	status,2,c
  9690  00321C  D005               	goto	l8306
  9691                           
  9692                           ; BSR set to: 0
  9693  00321E  0100               	movlb	0	; () banked
  9694  003220  AF78               	btfss	(___xxtofl@val+3)& (0+255),7,b
  9695  003222  D002               	goto	l8306
  9696                           
  9697                           ; BSR set to: 0
  9698  003224  0100               	movlb	0	; () banked
  9699  003226  8F82               	bsf	(___xxtofl@arg+3)& (0+255),7,b
  9700  003228                     l8306:
  9701                           
  9702                           ; BSR set to: 0
  9703  003228  C07F  F075         	movff	___xxtofl@arg,?___xxtofl
  9704  00322C  C080  F076         	movff	___xxtofl@arg+1,?___xxtofl+1
  9705  003230  C081  F077         	movff	___xxtofl@arg+2,?___xxtofl+2
  9706  003234  C082  F078         	movff	___xxtofl@arg+3,?___xxtofl+3
  9707  003238  0012               	return	
  9708  00323A                     __end_of___xxtofl:
  9709                           	opt stack 0
  9710                           tblptru	equ	0xFF8
  9711                           tblptrh	equ	0xFF7
  9712                           tblptrl	equ	0xFF6
  9713                           tablat	equ	0xFF5
  9714                           prodh	equ	0xFF4
  9715                           prodl	equ	0xFF3
  9716                           intcon	equ	0xFF2
  9717                           postinc0	equ	0xFEE
  9718                           wreg	equ	0xFE8
  9719                           postdec1	equ	0xFE5
  9720                           fsr1l	equ	0xFE1
  9721                           indf2	equ	0xFDF
  9722                           postinc2	equ	0xFDE
  9723                           postdec2	equ	0xFDD
  9724                           fsr2h	equ	0xFDA
  9725                           fsr2l	equ	0xFD9
  9726                           status	equ	0xFD8
  9727                           
  9728 ;; *************** function ___wmul *****************
  9729 ;; Defined at:
  9730 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\Umul16.c"
  9731 ;; Parameters:    Size  Location     Type
  9732 ;;  multiplier      2   21[BANK0 ] unsigned int 
  9733 ;;  multiplicand    2   23[BANK0 ] unsigned int 
  9734 ;; Auto vars:     Size  Location     Type
  9735 ;;  product         2   25[BANK0 ] unsigned int 
  9736 ;; Return value:  Size  Location     Type
  9737 ;;                  2   21[BANK0 ] unsigned int 
  9738 ;; Registers used:
  9739 ;;		wreg, status,2, status,0, prodl, prodh
  9740 ;; Tracked objects:
  9741 ;;		On entry : 0/0
  9742 ;;		On exit  : 0/0
  9743 ;;		Unchanged: 0/0
  9744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9745 ;;      Params:         0       4       0       0       0       0       0
  9746 ;;      Locals:         0       2       0       0       0       0       0
  9747 ;;      Temps:          0       0       0       0       0       0       0
  9748 ;;      Totals:         0       6       0       0       0       0       0
  9749 ;;Total ram usage:        6 bytes
  9750 ;; Hardware stack levels used:    1
  9751 ;; Hardware stack levels required when called:    8
  9752 ;; This function calls:
  9753 ;;		Nothing
  9754 ;; This function is called by:
  9755 ;;		_printf
  9756 ;; This function uses a non-reentrant model
  9757 ;;
  9758                           
  9759                           	psect	text29
  9760  004FC0                     __ptext29:
  9761                           	opt stack 0
  9762  004FC0                     ___wmul:
  9763                           	opt stack 19
  9764                           
  9765                           ; BSR set to: 0
  9766                           ;incstack = 0
  9767  004FC0  0100               	movlb	0	; () banked
  9768  004FC2  5175               	movf	___wmul@multiplier& (0+255),w,b
  9769  004FC4  0100               	movlb	0	; () banked
  9770  004FC6  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9771  004FC8  CFF3 F079          	movff	prodl,___wmul@product
  9772  004FCC  CFF4 F07A          	movff	prodh,___wmul@product+1
  9773  004FD0  0100               	movlb	0	; () banked
  9774  004FD2  5175               	movf	___wmul@multiplier& (0+255),w,b
  9775  004FD4  0100               	movlb	0	; () banked
  9776  004FD6  0378               	mulwf	(___wmul@multiplicand+1)& (0+255),b
  9777  004FD8  50F3               	movf	prodl,w,c
  9778  004FDA  0100               	movlb	0	; () banked
  9779  004FDC  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9780  004FDE  0100               	movlb	0	; () banked
  9781  004FE0  5176               	movf	(___wmul@multiplier+1)& (0+255),w,b
  9782  004FE2  0100               	movlb	0	; () banked
  9783  004FE4  0377               	mulwf	___wmul@multiplicand& (0+255),b
  9784  004FE6  50F3               	movf	prodl,w,c
  9785  004FE8  0100               	movlb	0	; () banked
  9786  004FEA  277A               	addwf	(___wmul@product+1)& (0+255),f,b
  9787                           
  9788                           ; BSR set to: 0
  9789  004FEC  C079  F075         	movff	___wmul@product,?___wmul
  9790  004FF0  C07A  F076         	movff	___wmul@product+1,?___wmul+1
  9791  004FF4  0012               	return	
  9792  004FF6                     __end_of___wmul:
  9793                           	opt stack 0
  9794                           tblptru	equ	0xFF8
  9795                           tblptrh	equ	0xFF7
  9796                           tblptrl	equ	0xFF6
  9797                           tablat	equ	0xFF5
  9798                           prodh	equ	0xFF4
  9799                           prodl	equ	0xFF3
  9800                           intcon	equ	0xFF2
  9801                           postinc0	equ	0xFEE
  9802                           wreg	equ	0xFE8
  9803                           postdec1	equ	0xFE5
  9804                           fsr1l	equ	0xFE1
  9805                           indf2	equ	0xFDF
  9806                           postinc2	equ	0xFDE
  9807                           postdec2	equ	0xFDD
  9808                           fsr2h	equ	0xFDA
  9809                           fsr2l	equ	0xFD9
  9810                           status	equ	0xFD8
  9811                           
  9812 ;; *************** function ___llmod *****************
  9813 ;; Defined at:
  9814 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\llmod.c"
  9815 ;; Parameters:    Size  Location     Type
  9816 ;;  dividend        4   34[BANK0 ] unsigned long 
  9817 ;;  divisor         4   38[BANK0 ] unsigned long 
  9818 ;; Auto vars:     Size  Location     Type
  9819 ;;  counter         1   42[BANK0 ] unsigned char 
  9820 ;; Return value:  Size  Location     Type
  9821 ;;                  4   34[BANK0 ] unsigned long 
  9822 ;; Registers used:
  9823 ;;		wreg, status,2, status,0
  9824 ;; Tracked objects:
  9825 ;;		On entry : 0/0
  9826 ;;		On exit  : 0/0
  9827 ;;		Unchanged: 0/0
  9828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9829 ;;      Params:         0       8       0       0       0       0       0
  9830 ;;      Locals:         0       1       0       0       0       0       0
  9831 ;;      Temps:          0       0       0       0       0       0       0
  9832 ;;      Totals:         0       9       0       0       0       0       0
  9833 ;;Total ram usage:        9 bytes
  9834 ;; Hardware stack levels used:    1
  9835 ;; Hardware stack levels required when called:    8
  9836 ;; This function calls:
  9837 ;;		Nothing
  9838 ;; This function is called by:
  9839 ;;		_printf
  9840 ;; This function uses a non-reentrant model
  9841 ;;
  9842                           
  9843                           	psect	text30
  9844  004708                     __ptext30:
  9845                           	opt stack 0
  9846  004708                     ___llmod:
  9847                           	opt stack 19
  9848                           
  9849                           ; BSR set to: 0
  9850                           ;incstack = 0
  9851  004708  0100               	movlb	0	; () banked
  9852  00470A  5186               	movf	___llmod@divisor& (0+255),w,b
  9853  00470C  0100               	movlb	0	; () banked
  9854  00470E  1187               	iorwf	(___llmod@divisor+1)& (0+255),w,b
  9855  004710  0100               	movlb	0	; () banked
  9856  004712  1188               	iorwf	(___llmod@divisor+2)& (0+255),w,b
  9857  004714  0100               	movlb	0	; () banked
  9858  004716  1189               	iorwf	(___llmod@divisor+3)& (0+255),w,b
  9859  004718  B4D8               	btfsc	status,2,c
  9860  00471A  D03A               	goto	l1260
  9861                           
  9862                           ; BSR set to: 0
  9863  00471C  0E01               	movlw	1
  9864  00471E  0100               	movlb	0	; () banked
  9865  004720  6F8A               	movwf	___llmod@counter& (0+255),b
  9866  004722  D008               	goto	l8258
  9867  004724                     l8256:
  9868                           
  9869                           ; BSR set to: 0
  9870  004724  0100               	movlb	0	; () banked
  9871  004726  90D8               	bcf	status,0,c
  9872  004728  3786               	rlcf	___llmod@divisor& (0+255),f,b
  9873  00472A  3787               	rlcf	(___llmod@divisor+1)& (0+255),f,b
  9874  00472C  3788               	rlcf	(___llmod@divisor+2)& (0+255),f,b
  9875  00472E  3789               	rlcf	(___llmod@divisor+3)& (0+255),f,b
  9876  004730  0100               	movlb	0	; () banked
  9877  004732  2B8A               	incf	___llmod@counter& (0+255),f,b
  9878  004734                     l8258:
  9879                           
  9880                           ; BSR set to: 0
  9881  004734  0100               	movlb	0	; () banked
  9882  004736  AF89               	btfss	(___llmod@divisor+3)& (0+255),7,b
  9883  004738  D7F5               	goto	l8256
  9884  00473A                     l8260:
  9885                           
  9886                           ; BSR set to: 0
  9887  00473A  0100               	movlb	0	; () banked
  9888  00473C  5186               	movf	___llmod@divisor& (0+255),w,b
  9889  00473E  0100               	movlb	0	; () banked
  9890  004740  5D82               	subwf	___llmod@dividend& (0+255),w,b
  9891  004742  0100               	movlb	0	; () banked
  9892  004744  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
  9893  004746  0100               	movlb	0	; () banked
  9894  004748  5983               	subwfb	(___llmod@dividend+1)& (0+255),w,b
  9895  00474A  0100               	movlb	0	; () banked
  9896  00474C  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
  9897  00474E  0100               	movlb	0	; () banked
  9898  004750  5984               	subwfb	(___llmod@dividend+2)& (0+255),w,b
  9899  004752  0100               	movlb	0	; () banked
  9900  004754  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
  9901  004756  0100               	movlb	0	; () banked
  9902  004758  5985               	subwfb	(___llmod@dividend+3)& (0+255),w,b
  9903  00475A  A0D8               	btfss	status,0,c
  9904  00475C  D010               	goto	l8264
  9905                           
  9906                           ; BSR set to: 0
  9907  00475E  0100               	movlb	0	; () banked
  9908  004760  5186               	movf	___llmod@divisor& (0+255),w,b
  9909  004762  0100               	movlb	0	; () banked
  9910  004764  5F82               	subwf	___llmod@dividend& (0+255),f,b
  9911  004766  0100               	movlb	0	; () banked
  9912  004768  5187               	movf	(___llmod@divisor+1)& (0+255),w,b
  9913  00476A  0100               	movlb	0	; () banked
  9914  00476C  5B83               	subwfb	(___llmod@dividend+1)& (0+255),f,b
  9915  00476E  0100               	movlb	0	; () banked
  9916  004770  5188               	movf	(___llmod@divisor+2)& (0+255),w,b
  9917  004772  0100               	movlb	0	; () banked
  9918  004774  5B84               	subwfb	(___llmod@dividend+2)& (0+255),f,b
  9919  004776  0100               	movlb	0	; () banked
  9920  004778  5189               	movf	(___llmod@divisor+3)& (0+255),w,b
  9921  00477A  0100               	movlb	0	; () banked
  9922  00477C  5B85               	subwfb	(___llmod@dividend+3)& (0+255),f,b
  9923  00477E                     l8264:
  9924                           
  9925                           ; BSR set to: 0
  9926  00477E  0100               	movlb	0	; () banked
  9927  004780  90D8               	bcf	status,0,c
  9928  004782  3389               	rrcf	(___llmod@divisor+3)& (0+255),f,b
  9929  004784  3388               	rrcf	(___llmod@divisor+2)& (0+255),f,b
  9930  004786  3387               	rrcf	(___llmod@divisor+1)& (0+255),f,b
  9931  004788  3386               	rrcf	___llmod@divisor& (0+255),f,b
  9932                           
  9933                           ; BSR set to: 0
  9934  00478A  0100               	movlb	0	; () banked
  9935  00478C  2F8A               	decfsz	___llmod@counter& (0+255),f,b
  9936  00478E  D7D5               	goto	l8260
  9937  004790                     l1260:
  9938                           
  9939                           ; BSR set to: 0
  9940  004790  C082  F082         	movff	___llmod@dividend,?___llmod
  9941  004794  C083  F083         	movff	___llmod@dividend+1,?___llmod+1
  9942  004798  C084  F084         	movff	___llmod@dividend+2,?___llmod+2
  9943  00479C  C085  F085         	movff	___llmod@dividend+3,?___llmod+3
  9944                           
  9945                           ; BSR set to: 0
  9946  0047A0  0012               	return		;funcret
  9947  0047A2                     __end_of___llmod:
  9948                           	opt stack 0
  9949                           tblptru	equ	0xFF8
  9950                           tblptrh	equ	0xFF7
  9951                           tblptrl	equ	0xFF6
  9952                           tablat	equ	0xFF5
  9953                           prodh	equ	0xFF4
  9954                           prodl	equ	0xFF3
  9955                           intcon	equ	0xFF2
  9956                           postinc0	equ	0xFEE
  9957                           wreg	equ	0xFE8
  9958                           postdec1	equ	0xFE5
  9959                           fsr1l	equ	0xFE1
  9960                           indf2	equ	0xFDF
  9961                           postinc2	equ	0xFDE
  9962                           postdec2	equ	0xFDD
  9963                           fsr2h	equ	0xFDA
  9964                           fsr2l	equ	0xFD9
  9965                           status	equ	0xFD8
  9966                           
  9967 ;; *************** function ___lldiv *****************
  9968 ;; Defined at:
  9969 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\lldiv.c"
  9970 ;; Parameters:    Size  Location     Type
  9971 ;;  dividend        4   21[BANK0 ] unsigned long 
  9972 ;;  divisor         4   25[BANK0 ] unsigned long 
  9973 ;; Auto vars:     Size  Location     Type
  9974 ;;  quotient        4   29[BANK0 ] unsigned long 
  9975 ;;  counter         1   33[BANK0 ] unsigned char 
  9976 ;; Return value:  Size  Location     Type
  9977 ;;                  4   21[BANK0 ] unsigned long 
  9978 ;; Registers used:
  9979 ;;		wreg, status,2, status,0
  9980 ;; Tracked objects:
  9981 ;;		On entry : 0/0
  9982 ;;		On exit  : 0/0
  9983 ;;		Unchanged: 0/0
  9984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9985 ;;      Params:         0       8       0       0       0       0       0
  9986 ;;      Locals:         0       5       0       0       0       0       0
  9987 ;;      Temps:          0       0       0       0       0       0       0
  9988 ;;      Totals:         0      13       0       0       0       0       0
  9989 ;;Total ram usage:       13 bytes
  9990 ;; Hardware stack levels used:    1
  9991 ;; Hardware stack levels required when called:    8
  9992 ;; This function calls:
  9993 ;;		Nothing
  9994 ;; This function is called by:
  9995 ;;		_printf
  9996 ;; This function uses a non-reentrant model
  9997 ;;
  9998                           
  9999                           	psect	text31
 10000  004508                     __ptext31:
 10001                           	opt stack 0
 10002  004508                     ___lldiv:
 10003                           	opt stack 19
 10004                           
 10005                           ; BSR set to: 0
 10006                           ;incstack = 0
 10007  004508  0E00               	movlw	0
 10008  00450A  0100               	movlb	0	; () banked
 10009  00450C  6F7D               	movwf	___lldiv@quotient& (0+255),b
 10010  00450E  0E00               	movlw	0
 10011  004510  6F7E               	movwf	(___lldiv@quotient+1)& (0+255),b
 10012  004512  0E00               	movlw	0
 10013  004514  6F7F               	movwf	(___lldiv@quotient+2)& (0+255),b
 10014  004516  0E00               	movlw	0
 10015  004518  6F80               	movwf	(___lldiv@quotient+3)& (0+255),b
 10016                           
 10017                           ; BSR set to: 0
 10018  00451A  0100               	movlb	0	; () banked
 10019  00451C  5179               	movf	___lldiv@divisor& (0+255),w,b
 10020  00451E  0100               	movlb	0	; () banked
 10021  004520  117A               	iorwf	(___lldiv@divisor+1)& (0+255),w,b
 10022  004522  0100               	movlb	0	; () banked
 10023  004524  117B               	iorwf	(___lldiv@divisor+2)& (0+255),w,b
 10024  004526  0100               	movlb	0	; () banked
 10025  004528  117C               	iorwf	(___lldiv@divisor+3)& (0+255),w,b
 10026  00452A  B4D8               	btfsc	status,2,c
 10027  00452C  D042               	goto	l1250
 10028                           
 10029                           ; BSR set to: 0
 10030  00452E  0E01               	movlw	1
 10031  004530  0100               	movlb	0	; () banked
 10032  004532  6F81               	movwf	___lldiv@counter& (0+255),b
 10033  004534  D008               	goto	l8238
 10034  004536                     l8236:
 10035                           
 10036                           ; BSR set to: 0
 10037  004536  0100               	movlb	0	; () banked
 10038  004538  90D8               	bcf	status,0,c
 10039  00453A  3779               	rlcf	___lldiv@divisor& (0+255),f,b
 10040  00453C  377A               	rlcf	(___lldiv@divisor+1)& (0+255),f,b
 10041  00453E  377B               	rlcf	(___lldiv@divisor+2)& (0+255),f,b
 10042  004540  377C               	rlcf	(___lldiv@divisor+3)& (0+255),f,b
 10043  004542  0100               	movlb	0	; () banked
 10044  004544  2B81               	incf	___lldiv@counter& (0+255),f,b
 10045  004546                     l8238:
 10046                           
 10047                           ; BSR set to: 0
 10048  004546  0100               	movlb	0	; () banked
 10049  004548  AF7C               	btfss	(___lldiv@divisor+3)& (0+255),7,b
 10050  00454A  D7F5               	goto	l8236
 10051  00454C                     l8240:
 10052                           
 10053                           ; BSR set to: 0
 10054  00454C  0100               	movlb	0	; () banked
 10055  00454E  90D8               	bcf	status,0,c
 10056  004550  377D               	rlcf	___lldiv@quotient& (0+255),f,b
 10057  004552  377E               	rlcf	(___lldiv@quotient+1)& (0+255),f,b
 10058  004554  377F               	rlcf	(___lldiv@quotient+2)& (0+255),f,b
 10059  004556  3780               	rlcf	(___lldiv@quotient+3)& (0+255),f,b
 10060                           
 10061                           ; BSR set to: 0
 10062  004558  0100               	movlb	0	; () banked
 10063  00455A  5179               	movf	___lldiv@divisor& (0+255),w,b
 10064  00455C  0100               	movlb	0	; () banked
 10065  00455E  5D75               	subwf	___lldiv@dividend& (0+255),w,b
 10066  004560  0100               	movlb	0	; () banked
 10067  004562  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10068  004564  0100               	movlb	0	; () banked
 10069  004566  5976               	subwfb	(___lldiv@dividend+1)& (0+255),w,b
 10070  004568  0100               	movlb	0	; () banked
 10071  00456A  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10072  00456C  0100               	movlb	0	; () banked
 10073  00456E  5977               	subwfb	(___lldiv@dividend+2)& (0+255),w,b
 10074  004570  0100               	movlb	0	; () banked
 10075  004572  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10076  004574  0100               	movlb	0	; () banked
 10077  004576  5978               	subwfb	(___lldiv@dividend+3)& (0+255),w,b
 10078  004578  A0D8               	btfss	status,0,c
 10079  00457A  D012               	goto	l8248
 10080                           
 10081                           ; BSR set to: 0
 10082  00457C  0100               	movlb	0	; () banked
 10083  00457E  5179               	movf	___lldiv@divisor& (0+255),w,b
 10084  004580  0100               	movlb	0	; () banked
 10085  004582  5F75               	subwf	___lldiv@dividend& (0+255),f,b
 10086  004584  0100               	movlb	0	; () banked
 10087  004586  517A               	movf	(___lldiv@divisor+1)& (0+255),w,b
 10088  004588  0100               	movlb	0	; () banked
 10089  00458A  5B76               	subwfb	(___lldiv@dividend+1)& (0+255),f,b
 10090  00458C  0100               	movlb	0	; () banked
 10091  00458E  517B               	movf	(___lldiv@divisor+2)& (0+255),w,b
 10092  004590  0100               	movlb	0	; () banked
 10093  004592  5B77               	subwfb	(___lldiv@dividend+2)& (0+255),f,b
 10094  004594  0100               	movlb	0	; () banked
 10095  004596  517C               	movf	(___lldiv@divisor+3)& (0+255),w,b
 10096  004598  0100               	movlb	0	; () banked
 10097  00459A  5B78               	subwfb	(___lldiv@dividend+3)& (0+255),f,b
 10098                           
 10099                           ; BSR set to: 0
 10100  00459C  0100               	movlb	0	; () banked
 10101  00459E  817D               	bsf	___lldiv@quotient& (0+255),0,b
 10102  0045A0                     l8248:
 10103                           
 10104                           ; BSR set to: 0
 10105  0045A0  0100               	movlb	0	; () banked
 10106  0045A2  90D8               	bcf	status,0,c
 10107  0045A4  337C               	rrcf	(___lldiv@divisor+3)& (0+255),f,b
 10108  0045A6  337B               	rrcf	(___lldiv@divisor+2)& (0+255),f,b
 10109  0045A8  337A               	rrcf	(___lldiv@divisor+1)& (0+255),f,b
 10110  0045AA  3379               	rrcf	___lldiv@divisor& (0+255),f,b
 10111                           
 10112                           ; BSR set to: 0
 10113  0045AC  0100               	movlb	0	; () banked
 10114  0045AE  2F81               	decfsz	___lldiv@counter& (0+255),f,b
 10115  0045B0  D7CD               	goto	l8240
 10116  0045B2                     l1250:
 10117                           
 10118                           ; BSR set to: 0
 10119  0045B2  C07D  F075         	movff	___lldiv@quotient,?___lldiv
 10120  0045B6  C07E  F076         	movff	___lldiv@quotient+1,?___lldiv+1
 10121  0045BA  C07F  F077         	movff	___lldiv@quotient+2,?___lldiv+2
 10122  0045BE  C080  F078         	movff	___lldiv@quotient+3,?___lldiv+3
 10123                           
 10124                           ; BSR set to: 0
 10125  0045C2  0012               	return		;funcret
 10126  0045C4                     __end_of___lldiv:
 10127                           	opt stack 0
 10128                           tblptru	equ	0xFF8
 10129                           tblptrh	equ	0xFF7
 10130                           tblptrl	equ	0xFF6
 10131                           tablat	equ	0xFF5
 10132                           prodh	equ	0xFF4
 10133                           prodl	equ	0xFF3
 10134                           intcon	equ	0xFF2
 10135                           postinc0	equ	0xFEE
 10136                           wreg	equ	0xFE8
 10137                           postdec1	equ	0xFE5
 10138                           fsr1l	equ	0xFE1
 10139                           indf2	equ	0xFDF
 10140                           postinc2	equ	0xFDE
 10141                           postdec2	equ	0xFDD
 10142                           fsr2h	equ	0xFDA
 10143                           fsr2l	equ	0xFD9
 10144                           status	equ	0xFD8
 10145                           
 10146 ;; *************** function ___fltol *****************
 10147 ;; Defined at:
 10148 ;;		line 43 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\fltol.c"
 10149 ;; Parameters:    Size  Location     Type
 10150 ;;  f1              4   69[BANK0 ] unsigned long 
 10151 ;; Auto vars:     Size  Location     Type
 10152 ;;  exp1            1   78[BANK0 ] unsigned char 
 10153 ;;  sign1           1   77[BANK0 ] unsigned char 
 10154 ;; Return value:  Size  Location     Type
 10155 ;;                  4   69[BANK0 ] long 
 10156 ;; Registers used:
 10157 ;;		wreg, status,2, status,0
 10158 ;; Tracked objects:
 10159 ;;		On entry : 0/0
 10160 ;;		On exit  : 0/0
 10161 ;;		Unchanged: 0/0
 10162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10163 ;;      Params:         0       4       0       0       0       0       0
 10164 ;;      Locals:         0       2       0       0       0       0       0
 10165 ;;      Temps:          0       4       0       0       0       0       0
 10166 ;;      Totals:         0      10       0       0       0       0       0
 10167 ;;Total ram usage:       10 bytes
 10168 ;; Hardware stack levels used:    1
 10169 ;; Hardware stack levels required when called:    8
 10170 ;; This function calls:
 10171 ;;		Nothing
 10172 ;; This function is called by:
 10173 ;;		_printf
 10174 ;; This function uses a non-reentrant model
 10175 ;;
 10176                           
 10177                           	psect	text32
 10178  003E58                     __ptext32:
 10179                           	opt stack 0
 10180  003E58                     ___fltol:
 10181                           	opt stack 19
 10182                           
 10183                           ; BSR set to: 0
 10184                           ;incstack = 0
 10185  003E58  0100               	movlb	0	; () banked
 10186  003E5A  35A7               	rlcf	(___fltol@f1+2)& (0+255),w,b
 10187  003E5C  35A8               	rlcf	(___fltol@f1+3)& (0+255),w,b
 10188  003E5E  0100               	movlb	0	; () banked
 10189  003E60  6FAE               	movwf	___fltol@exp1& (0+255),b
 10190  003E62  0100               	movlb	0	; () banked
 10191  003E64  51AE               	movf	___fltol@exp1& (0+255),w,b
 10192  003E66  A4D8               	btfss	status,2,c
 10193  003E68  D00A               	goto	l8192
 10194                           
 10195                           ; BSR set to: 0
 10196  003E6A  0E00               	movlw	0
 10197  003E6C  0100               	movlb	0	; () banked
 10198  003E6E  6FA5               	movwf	?___fltol& (0+255),b
 10199  003E70  0E00               	movlw	0
 10200  003E72  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10201  003E74  0E00               	movlw	0
 10202  003E76  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10203  003E78  0E00               	movlw	0
 10204  003E7A  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10205                           
 10206                           ; BSR set to: 0
 10207  003E7C  0012               	return	
 10208  003E7E                     l8192:
 10209                           
 10210                           ; BSR set to: 0
 10211  003E7E  C0A5  F0A9         	movff	___fltol@f1,??___fltol
 10212  003E82  C0A6  F0AA         	movff	___fltol@f1+1,??___fltol+1
 10213  003E86  C0A7  F0AB         	movff	___fltol@f1+2,??___fltol+2
 10214  003E8A  C0A8  F0AC         	movff	___fltol@f1+3,??___fltol+3
 10215  003E8E  0E20               	movlw	32
 10216  003E90  D006               	goto	u9860
 10217  003E92                     u9865:
 10218  003E92  0100               	movlb	0	; () banked
 10219  003E94  90D8               	bcf	status,0,c
 10220  003E96  33AC               	rrcf	(??___fltol+3)& (0+255),f,b
 10221  003E98  33AB               	rrcf	(??___fltol+2)& (0+255),f,b
 10222  003E9A  33AA               	rrcf	(??___fltol+1)& (0+255),f,b
 10223  003E9C  33A9               	rrcf	??___fltol& (0+255),f,b
 10224  003E9E                     u9860:
 10225  003E9E  2EE8               	decfsz	wreg,f,c
 10226  003EA0  D7F8               	goto	u9865
 10227  003EA2  0100               	movlb	0	; () banked
 10228  003EA4  51A9               	movf	??___fltol& (0+255),w,b
 10229  003EA6  0100               	movlb	0	; () banked
 10230  003EA8  6FAD               	movwf	___fltol@sign1& (0+255),b
 10231                           
 10232                           ; BSR set to: 0
 10233  003EAA  0100               	movlb	0	; () banked
 10234  003EAC  8FA7               	bsf	(___fltol@f1+2)& (0+255),7,b
 10235                           
 10236                           ; BSR set to: 0
 10237  003EAE  0EFF               	movlw	255
 10238  003EB0  0100               	movlb	0	; () banked
 10239  003EB2  17A5               	andwf	___fltol@f1& (0+255),f,b
 10240  003EB4  0EFF               	movlw	255
 10241  003EB6  17A6               	andwf	(___fltol@f1+1)& (0+255),f,b
 10242  003EB8  0EFF               	movlw	255
 10243  003EBA  17A7               	andwf	(___fltol@f1+2)& (0+255),f,b
 10244  003EBC  0E00               	movlw	0
 10245  003EBE  17A8               	andwf	(___fltol@f1+3)& (0+255),f,b
 10246                           
 10247                           ; BSR set to: 0
 10248  003EC0  0E96               	movlw	150
 10249  003EC2  0100               	movlb	0	; () banked
 10250  003EC4  5FAE               	subwf	___fltol@exp1& (0+255),f,b
 10251                           
 10252                           ; BSR set to: 0
 10253  003EC6  0100               	movlb	0	; () banked
 10254  003EC8  AFAE               	btfss	___fltol@exp1& (0+255),7,b
 10255  003ECA  D01A               	goto	l8212
 10256                           
 10257                           ; BSR set to: 0
 10258  003ECC  0100               	movlb	0	; () banked
 10259  003ECE  51AE               	movf	___fltol@exp1& (0+255),w,b
 10260  003ED0  0A80               	xorlw	128
 10261  003ED2  0F97               	addlw	151
 10262  003ED4  B0D8               	btfsc	status,0,c
 10263  003ED6  D00A               	goto	l8208
 10264                           
 10265                           ; BSR set to: 0
 10266  003ED8  0E00               	movlw	0
 10267  003EDA  0100               	movlb	0	; () banked
 10268  003EDC  6FA5               	movwf	?___fltol& (0+255),b
 10269  003EDE  0E00               	movlw	0
 10270  003EE0  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10271  003EE2  0E00               	movlw	0
 10272  003EE4  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10273  003EE6  0E00               	movlw	0
 10274  003EE8  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10275                           
 10276                           ; BSR set to: 0
 10277  003EEA  0012               	return	
 10278  003EEC                     l8208:
 10279                           
 10280                           ; BSR set to: 0
 10281  003EEC  0100               	movlb	0	; () banked
 10282  003EEE  90D8               	bcf	status,0,c
 10283  003EF0  33A8               	rrcf	(___fltol@f1+3)& (0+255),f,b
 10284  003EF2  33A7               	rrcf	(___fltol@f1+2)& (0+255),f,b
 10285  003EF4  33A6               	rrcf	(___fltol@f1+1)& (0+255),f,b
 10286  003EF6  33A5               	rrcf	___fltol@f1& (0+255),f,b
 10287                           
 10288                           ; BSR set to: 0
 10289  003EF8  0100               	movlb	0	; () banked
 10290  003EFA  3FAE               	incfsz	___fltol@exp1& (0+255),f,b
 10291  003EFC  D7F7               	goto	l8208
 10292                           
 10293                           ; BSR set to: 0
 10294  003EFE  D01B               	goto	l8222
 10295  003F00                     l8212:
 10296                           
 10297                           ; BSR set to: 0
 10298  003F00  0E1F               	movlw	31
 10299  003F02  0100               	movlb	0	; () banked
 10300  003F04  65AE               	cpfsgt	___fltol@exp1& (0+255),b
 10301  003F06  D012               	goto	l8220
 10302                           
 10303                           ; BSR set to: 0
 10304  003F08  0E00               	movlw	0
 10305  003F0A  0100               	movlb	0	; () banked
 10306  003F0C  6FA5               	movwf	?___fltol& (0+255),b
 10307  003F0E  0E00               	movlw	0
 10308  003F10  6FA6               	movwf	(?___fltol+1)& (0+255),b
 10309  003F12  0E00               	movlw	0
 10310  003F14  6FA7               	movwf	(?___fltol+2)& (0+255),b
 10311  003F16  0E00               	movlw	0
 10312  003F18  6FA8               	movwf	(?___fltol+3)& (0+255),b
 10313                           
 10314                           ; BSR set to: 0
 10315  003F1A  0012               	return	
 10316  003F1C                     l8218:
 10317                           
 10318                           ; BSR set to: 0
 10319  003F1C  0100               	movlb	0	; () banked
 10320  003F1E  90D8               	bcf	status,0,c
 10321  003F20  37A5               	rlcf	___fltol@f1& (0+255),f,b
 10322  003F22  37A6               	rlcf	(___fltol@f1+1)& (0+255),f,b
 10323  003F24  37A7               	rlcf	(___fltol@f1+2)& (0+255),f,b
 10324  003F26  37A8               	rlcf	(___fltol@f1+3)& (0+255),f,b
 10325  003F28  0100               	movlb	0	; () banked
 10326  003F2A  07AE               	decf	___fltol@exp1& (0+255),f,b
 10327  003F2C                     l8220:
 10328                           
 10329                           ; BSR set to: 0
 10330  003F2C  0100               	movlb	0	; () banked
 10331  003F2E  51AE               	movf	___fltol@exp1& (0+255),w,b
 10332  003F30  0100               	movlb	0	; () banked
 10333  003F32  A4D8               	btfss	status,2,c
 10334  003F34  D7F3               	goto	l8218
 10335  003F36                     l8222:
 10336                           
 10337                           ; BSR set to: 0
 10338  003F36  0100               	movlb	0	; () banked
 10339  003F38  51AD               	movf	___fltol@sign1& (0+255),w,b
 10340  003F3A  0100               	movlb	0	; () banked
 10341  003F3C  B4D8               	btfsc	status,2,c
 10342  003F3E  D009               	goto	l8226
 10343                           
 10344                           ; BSR set to: 0
 10345  003F40  0100               	movlb	0	; () banked
 10346  003F42  1FA8               	comf	(___fltol@f1+3)& (0+255),f,b
 10347  003F44  1FA7               	comf	(___fltol@f1+2)& (0+255),f,b
 10348  003F46  1FA6               	comf	(___fltol@f1+1)& (0+255),f,b
 10349  003F48  6DA5               	negf	___fltol@f1& (0+255),b
 10350  003F4A  0E00               	movlw	0
 10351  003F4C  23A6               	addwfc	(___fltol@f1+1)& (0+255),f,b
 10352  003F4E  23A7               	addwfc	(___fltol@f1+2)& (0+255),f,b
 10353  003F50  23A8               	addwfc	(___fltol@f1+3)& (0+255),f,b
 10354  003F52                     l8226:
 10355                           
 10356                           ; BSR set to: 0
 10357  003F52  C0A5  F0A5         	movff	___fltol@f1,?___fltol
 10358  003F56  C0A6  F0A6         	movff	___fltol@f1+1,?___fltol+1
 10359  003F5A  C0A7  F0A7         	movff	___fltol@f1+2,?___fltol+2
 10360  003F5E  C0A8  F0A8         	movff	___fltol@f1+3,?___fltol+3
 10361  003F62  0012               	return	
 10362  003F64                     __end_of___fltol:
 10363                           	opt stack 0
 10364                           tblptru	equ	0xFF8
 10365                           tblptrh	equ	0xFF7
 10366                           tblptrl	equ	0xFF6
 10367                           tablat	equ	0xFF5
 10368                           prodh	equ	0xFF4
 10369                           prodl	equ	0xFF3
 10370                           intcon	equ	0xFF2
 10371                           postinc0	equ	0xFEE
 10372                           wreg	equ	0xFE8
 10373                           postdec1	equ	0xFE5
 10374                           fsr1l	equ	0xFE1
 10375                           indf2	equ	0xFDF
 10376                           postinc2	equ	0xFDE
 10377                           postdec2	equ	0xFDD
 10378                           fsr2h	equ	0xFDA
 10379                           fsr2l	equ	0xFD9
 10380                           status	equ	0xFD8
 10381                           
 10382 ;; *************** function ___flsub *****************
 10383 ;; Defined at:
 10384 ;;		line 245 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10385 ;; Parameters:    Size  Location     Type
 10386 ;;  b               4   93[BANK0 ] long 
 10387 ;;  a               4   97[BANK0 ] long 
 10388 ;; Auto vars:     Size  Location     Type
 10389 ;;		None
 10390 ;; Return value:  Size  Location     Type
 10391 ;;                  4   93[BANK0 ] long 
 10392 ;; Registers used:
 10393 ;;		wreg, status,2, status,0, cstack
 10394 ;; Tracked objects:
 10395 ;;		On entry : 0/0
 10396 ;;		On exit  : 0/0
 10397 ;;		Unchanged: 0/0
 10398 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10399 ;;      Params:         0       8       0       0       0       0       0
 10400 ;;      Locals:         0       0       0       0       0       0       0
 10401 ;;      Temps:          0       0       0       0       0       0       0
 10402 ;;      Totals:         0       8       0       0       0       0       0
 10403 ;;Total ram usage:        8 bytes
 10404 ;; Hardware stack levels used:    1
 10405 ;; Hardware stack levels required when called:    9
 10406 ;; This function calls:
 10407 ;;		___fladd
 10408 ;; This function is called by:
 10409 ;;		_printf
 10410 ;; This function uses a non-reentrant model
 10411 ;;
 10412                           
 10413                           	psect	text33
 10414  004D76                     __ptext33:
 10415                           	opt stack 0
 10416  004D76                     ___flsub:
 10417                           	opt stack 18
 10418                           
 10419                           ; BSR set to: 0
 10420                           ;incstack = 0
 10421  004D76  0E00               	movlw	0
 10422  004D78  0100               	movlb	0	; () banked
 10423  004D7A  1BC1               	xorwf	___flsub@a& (0+255),f,b
 10424  004D7C  0E00               	movlw	0
 10425  004D7E  1BC2               	xorwf	(___flsub@a+1)& (0+255),f,b
 10426  004D80  0E00               	movlw	0
 10427  004D82  1BC3               	xorwf	(___flsub@a+2)& (0+255),f,b
 10428  004D84  0E80               	movlw	128
 10429  004D86  1BC4               	xorwf	(___flsub@a+3)& (0+255),f,b
 10430                           
 10431                           ; BSR set to: 0
 10432  004D88  C0BD  F0A9         	movff	___flsub@b,___fladd@b
 10433  004D8C  C0BE  F0AA         	movff	___flsub@b+1,___fladd@b+1
 10434  004D90  C0BF  F0AB         	movff	___flsub@b+2,___fladd@b+2
 10435  004D94  C0C0  F0AC         	movff	___flsub@b+3,___fladd@b+3
 10436  004D98  C0C1  F0AD         	movff	___flsub@a,___fladd@a
 10437  004D9C  C0C2  F0AE         	movff	___flsub@a+1,___fladd@a+1
 10438  004DA0  C0C3  F0AF         	movff	___flsub@a+2,___fladd@a+2
 10439  004DA4  C0C4  F0B0         	movff	___flsub@a+3,___fladd@a+3
 10440  004DA8  ECFB  F008         	call	___fladd	;wreg free
 10441  004DAC  C0A9  F0BD         	movff	?___fladd,?___flsub
 10442  004DB0  C0AA  F0BE         	movff	?___fladd+1,?___flsub+1
 10443  004DB4  C0AB  F0BF         	movff	?___fladd+2,?___flsub+2
 10444  004DB8  C0AC  F0C0         	movff	?___fladd+3,?___flsub+3
 10445  004DBC  0012               	return	
 10446  004DBE                     __end_of___flsub:
 10447                           	opt stack 0
 10448                           tblptru	equ	0xFF8
 10449                           tblptrh	equ	0xFF7
 10450                           tblptrl	equ	0xFF6
 10451                           tablat	equ	0xFF5
 10452                           prodh	equ	0xFF4
 10453                           prodl	equ	0xFF3
 10454                           intcon	equ	0xFF2
 10455                           postinc0	equ	0xFEE
 10456                           wreg	equ	0xFE8
 10457                           postdec1	equ	0xFE5
 10458                           fsr1l	equ	0xFE1
 10459                           indf2	equ	0xFDF
 10460                           postinc2	equ	0xFDE
 10461                           postdec2	equ	0xFDD
 10462                           fsr2h	equ	0xFDA
 10463                           fsr2l	equ	0xFD9
 10464                           status	equ	0xFD8
 10465                           
 10466 ;; *************** function ___fladd *****************
 10467 ;; Defined at:
 10468 ;;		line 10 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcadd.c"
 10469 ;; Parameters:    Size  Location     Type
 10470 ;;  b               4   73[BANK0 ] long 
 10471 ;;  a               4   77[BANK0 ] long 
 10472 ;; Auto vars:     Size  Location     Type
 10473 ;;  grs             1   92[BANK0 ] unsigned char 
 10474 ;;  bexp            1   91[BANK0 ] unsigned char 
 10475 ;;  aexp            1   90[BANK0 ] unsigned char 
 10476 ;;  signs           1   89[BANK0 ] unsigned char 
 10477 ;; Return value:  Size  Location     Type
 10478 ;;                  4   73[BANK0 ] unsigned char 
 10479 ;; Registers used:
 10480 ;;		wreg, status,2, status,0
 10481 ;; Tracked objects:
 10482 ;;		On entry : 0/0
 10483 ;;		On exit  : 0/0
 10484 ;;		Unchanged: 0/0
 10485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10486 ;;      Params:         0       8       0       0       0       0       0
 10487 ;;      Locals:         0       4       0       0       0       0       0
 10488 ;;      Temps:          0       8       0       0       0       0       0
 10489 ;;      Totals:         0      20       0       0       0       0       0
 10490 ;;Total ram usage:       20 bytes
 10491 ;; Hardware stack levels used:    1
 10492 ;; Hardware stack levels required when called:    8
 10493 ;; This function calls:
 10494 ;;		Nothing
 10495 ;; This function is called by:
 10496 ;;		_printf
 10497 ;;		___flsub
 10498 ;; This function uses a non-reentrant model
 10499 ;;
 10500                           
 10501                           	psect	text34
 10502  0011F6                     __ptext34:
 10503                           	opt stack 0
 10504  0011F6                     ___fladd:
 10505                           	opt stack 18
 10506                           
 10507                           ;incstack = 0
 10508  0011F6  0100               	movlb	0	; () banked
 10509  0011F8  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10510  0011FA  0B80               	andlw	128
 10511  0011FC  0100               	movlb	0	; () banked
 10512  0011FE  6FB9               	movwf	___fladd@signs& (0+255),b
 10513  001200  0100               	movlb	0	; () banked
 10514  001202  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10515  001204  25AC               	addwf	(___fladd@b+3)& (0+255),w,b
 10516  001206  0100               	movlb	0	; () banked
 10517  001208  6FBB               	movwf	___fladd@bexp& (0+255),b
 10518                           
 10519                           ; BSR set to: 0
 10520  00120A  0100               	movlb	0	; () banked
 10521  00120C  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 10522  00120E  D002               	goto	l7618
 10523                           
 10524                           ; BSR set to: 0
 10525  001210  0100               	movlb	0	; () banked
 10526  001212  81BB               	bsf	___fladd@bexp& (0+255),0,b
 10527  001214                     l7618:
 10528                           
 10529                           ; BSR set to: 0
 10530  001214  0100               	movlb	0	; () banked
 10531  001216  51BB               	movf	___fladd@bexp& (0+255),w,b
 10532  001218  0100               	movlb	0	; () banked
 10533  00121A  B4D8               	btfsc	status,2,c
 10534  00121C  D012               	goto	l7628
 10535                           
 10536                           ; BSR set to: 0
 10537  00121E  0100               	movlb	0	; () banked
 10538  001220  29BB               	incf	___fladd@bexp& (0+255),w,b
 10539  001222  A4D8               	btfss	status,2,c
 10540  001224  D009               	goto	l7624
 10541                           
 10542                           ; BSR set to: 0
 10543  001226  0E00               	movlw	0
 10544  001228  0100               	movlb	0	; () banked
 10545  00122A  6FA9               	movwf	___fladd@b& (0+255),b
 10546  00122C  0E00               	movlw	0
 10547  00122E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10548  001230  0E00               	movlw	0
 10549  001232  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10550  001234  0E00               	movlw	0
 10551  001236  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10552  001238                     l7624:
 10553                           
 10554                           ; BSR set to: 0
 10555  001238  0100               	movlb	0	; () banked
 10556  00123A  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 10557                           
 10558                           ; BSR set to: 0
 10559  00123C  0E00               	movlw	0
 10560  00123E  0100               	movlb	0	; () banked
 10561  001240  D008               	goto	L6
 10562  001242                     l7628:
 10563                           
 10564                           ; BSR set to: 0
 10565  001242  0E00               	movlw	0
 10566  001244  0100               	movlb	0	; () banked
 10567  001246  6FA9               	movwf	___fladd@b& (0+255),b
 10568  001248  0E00               	movlw	0
 10569  00124A  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10570  00124C  0E00               	movlw	0
 10571  00124E  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10572  001250  0E00               	movlw	0
 10573  001252                     L6:
 10574  001252  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10575                           
 10576                           ; BSR set to: 0
 10577                           
 10578                           ; BSR set to: 0
 10579  001254  0100               	movlb	0	; () banked
 10580  001256  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10581  001258  0B80               	andlw	128
 10582  00125A  0100               	movlb	0	; () banked
 10583  00125C  6FBA               	movwf	___fladd@aexp& (0+255),b
 10584                           
 10585                           ; BSR set to: 0
 10586  00125E  0100               	movlb	0	; () banked
 10587  001260  51B9               	movf	___fladd@signs& (0+255),w,b
 10588  001262  0100               	movlb	0	; () banked
 10589  001264  19BA               	xorwf	___fladd@aexp& (0+255),w,b
 10590  001266  B4D8               	btfsc	status,2,c
 10591  001268  D002               	goto	l7636
 10592                           
 10593                           ; BSR set to: 0
 10594  00126A  0100               	movlb	0	; () banked
 10595  00126C  8DB9               	bsf	___fladd@signs& (0+255),6,b
 10596  00126E                     l7636:
 10597                           
 10598                           ; BSR set to: 0
 10599  00126E  0100               	movlb	0	; () banked
 10600  001270  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10601  001272  25B0               	addwf	(___fladd@a+3)& (0+255),w,b
 10602  001274  0100               	movlb	0	; () banked
 10603  001276  6FBA               	movwf	___fladd@aexp& (0+255),b
 10604                           
 10605                           ; BSR set to: 0
 10606  001278  0100               	movlb	0	; () banked
 10607  00127A  AFAF               	btfss	(___fladd@a+2)& (0+255),7,b
 10608  00127C  D002               	goto	l7642
 10609                           
 10610                           ; BSR set to: 0
 10611  00127E  0100               	movlb	0	; () banked
 10612  001280  81BA               	bsf	___fladd@aexp& (0+255),0,b
 10613  001282                     l7642:
 10614                           
 10615                           ; BSR set to: 0
 10616  001282  0100               	movlb	0	; () banked
 10617  001284  51BA               	movf	___fladd@aexp& (0+255),w,b
 10618  001286  0100               	movlb	0	; () banked
 10619  001288  B4D8               	btfsc	status,2,c
 10620  00128A  D012               	goto	l7652
 10621                           
 10622                           ; BSR set to: 0
 10623  00128C  0100               	movlb	0	; () banked
 10624  00128E  29BA               	incf	___fladd@aexp& (0+255),w,b
 10625  001290  A4D8               	btfss	status,2,c
 10626  001292  D009               	goto	l7648
 10627                           
 10628                           ; BSR set to: 0
 10629  001294  0E00               	movlw	0
 10630  001296  0100               	movlb	0	; () banked
 10631  001298  6FAD               	movwf	___fladd@a& (0+255),b
 10632  00129A  0E00               	movlw	0
 10633  00129C  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10634  00129E  0E00               	movlw	0
 10635  0012A0  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10636  0012A2  0E00               	movlw	0
 10637  0012A4  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10638  0012A6                     l7648:
 10639                           
 10640                           ; BSR set to: 0
 10641  0012A6  0100               	movlb	0	; () banked
 10642  0012A8  8FAF               	bsf	(___fladd@a+2)& (0+255),7,b
 10643                           
 10644                           ; BSR set to: 0
 10645  0012AA  0E00               	movlw	0
 10646  0012AC  0100               	movlb	0	; () banked
 10647  0012AE  D008               	goto	L7
 10648  0012B0                     l7652:
 10649                           
 10650                           ; BSR set to: 0
 10651  0012B0  0E00               	movlw	0
 10652  0012B2  0100               	movlb	0	; () banked
 10653  0012B4  6FAD               	movwf	___fladd@a& (0+255),b
 10654  0012B6  0E00               	movlw	0
 10655  0012B8  6FAE               	movwf	(___fladd@a+1)& (0+255),b
 10656  0012BA  0E00               	movlw	0
 10657  0012BC  6FAF               	movwf	(___fladd@a+2)& (0+255),b
 10658  0012BE  0E00               	movlw	0
 10659  0012C0                     L7:
 10660  0012C0  6FB0               	movwf	(___fladd@a+3)& (0+255),b
 10661                           
 10662                           ; BSR set to: 0
 10663                           
 10664                           ; BSR set to: 0
 10665  0012C2  0100               	movlb	0	; () banked
 10666  0012C4  51BB               	movf	___fladd@bexp& (0+255),w,b
 10667  0012C6  0100               	movlb	0	; () banked
 10668  0012C8  5DBA               	subwf	___fladd@aexp& (0+255),w,b
 10669  0012CA  B0D8               	btfsc	status,0,c
 10670  0012CC  D024               	goto	l7690
 10671                           
 10672                           ; BSR set to: 0
 10673  0012CE  0100               	movlb	0	; () banked
 10674  0012D0  ADB9               	btfss	___fladd@signs& (0+255),6,b
 10675  0012D2  D003               	goto	l7660
 10676                           
 10677                           ; BSR set to: 0
 10678  0012D4  0E80               	movlw	128
 10679  0012D6  0100               	movlb	0	; () banked
 10680  0012D8  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 10681  0012DA                     l7660:
 10682                           
 10683                           ; BSR set to: 0
 10684  0012DA  C0BB  F0BC         	movff	___fladd@bexp,___fladd@grs
 10685                           
 10686                           ; BSR set to: 0
 10687  0012DE  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10688                           
 10689                           ; BSR set to: 0
 10690  0012E2  C0BC  F0BA         	movff	___fladd@grs,___fladd@aexp
 10691                           
 10692                           ; BSR set to: 0
 10693  0012E6  C0A9  F0BC         	movff	___fladd@b,___fladd@grs
 10694                           
 10695                           ; BSR set to: 0
 10696  0012EA  C0AD  F0A9         	movff	___fladd@a,___fladd@b
 10697                           
 10698                           ; BSR set to: 0
 10699  0012EE  C0BC  F0AD         	movff	___fladd@grs,___fladd@a
 10700                           
 10701                           ; BSR set to: 0
 10702  0012F2  C0AA  F0BC         	movff	___fladd@b+1,___fladd@grs
 10703                           
 10704                           ; BSR set to: 0
 10705  0012F6  C0AE  F0AA         	movff	___fladd@a+1,___fladd@b+1
 10706                           
 10707                           ; BSR set to: 0
 10708  0012FA  C0BC  F0AE         	movff	___fladd@grs,___fladd@a+1
 10709                           
 10710                           ; BSR set to: 0
 10711  0012FE  C0AB  F0BC         	movff	___fladd@b+2,___fladd@grs
 10712                           
 10713                           ; BSR set to: 0
 10714  001302  C0AF  F0AB         	movff	___fladd@a+2,___fladd@b+2
 10715                           
 10716                           ; BSR set to: 0
 10717  001306  C0BC  F0AF         	movff	___fladd@grs,___fladd@a+2
 10718                           
 10719                           ; BSR set to: 0
 10720  00130A  C0AC  F0BC         	movff	___fladd@b+3,___fladd@grs
 10721                           
 10722                           ; BSR set to: 0
 10723  00130E  C0B0  F0AC         	movff	___fladd@a+3,___fladd@b+3
 10724                           
 10725                           ; BSR set to: 0
 10726  001312  C0BC  F0B0         	movff	___fladd@grs,___fladd@a+3
 10727  001316                     l7690:
 10728                           
 10729                           ; BSR set to: 0
 10730  001316  0E00               	movlw	0
 10731  001318  0100               	movlb	0	; () banked
 10732  00131A  6FBC               	movwf	___fladd@grs& (0+255),b
 10733                           
 10734                           ; BSR set to: 0
 10735  00131C  0100               	movlb	0	; () banked
 10736  00131E  51BB               	movf	___fladd@bexp& (0+255),w,b
 10737  001320  0100               	movlb	0	; () banked
 10738  001322  6FB1               	movwf	??___fladd& (0+255),b
 10739  001324  6BB2               	clrf	(??___fladd+1)& (0+255),b
 10740  001326  0100               	movlb	0	; () banked
 10741  001328  1FB1               	comf	??___fladd& (0+255),f,b
 10742  00132A  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10743  00132C  4BB1               	infsnz	??___fladd& (0+255),f,b
 10744  00132E  2BB2               	incf	(??___fladd+1)& (0+255),f,b
 10745  001330  0100               	movlb	0	; () banked
 10746  001332  51BA               	movf	___fladd@aexp& (0+255),w,b
 10747  001334  0100               	movlb	0	; () banked
 10748  001336  6FB3               	movwf	(??___fladd+2)& (0+255),b
 10749  001338  6BB4               	clrf	(??___fladd+3)& (0+255),b
 10750  00133A  0100               	movlb	0	; () banked
 10751  00133C  51B1               	movf	??___fladd& (0+255),w,b
 10752  00133E  0100               	movlb	0	; () banked
 10753  001340  27B3               	addwf	(??___fladd+2)& (0+255),f,b
 10754  001342  0100               	movlb	0	; () banked
 10755  001344  51B2               	movf	(??___fladd+1)& (0+255),w,b
 10756  001346  0100               	movlb	0	; () banked
 10757  001348  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10758  00134A  0100               	movlb	0	; () banked
 10759  00134C  BFB4               	btfsc	(??___fladd+3)& (0+255),7,b
 10760  00134E  D03D               	goto	l1345
 10761  001350  0100               	movlb	0	; () banked
 10762  001352  51B4               	movf	(??___fladd+3)& (0+255),w,b
 10763  001354  E105               	bnz	u9110
 10764  001356  0E1A               	movlw	26
 10765  001358  0100               	movlb	0	; () banked
 10766  00135A  5DB3               	subwf	(??___fladd+2)& (0+255),w,b
 10767  00135C  A0D8               	btfss	status,0,c
 10768  00135E  D035               	goto	l1345
 10769  001360                     u9110:
 10770                           
 10771                           ; BSR set to: 0
 10772  001360  0100               	movlb	0	; () banked
 10773  001362  51A9               	movf	___fladd@b& (0+255),w,b
 10774  001364  0100               	movlb	0	; () banked
 10775  001366  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 10776  001368  0100               	movlb	0	; () banked
 10777  00136A  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 10778  00136C  0100               	movlb	0	; () banked
 10779  00136E  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 10780  001370  B4D8               	btfsc	status,2,c
 10781  001372  D002               	goto	u9120
 10782  001374  0E01               	movlw	1
 10783  001376  D001               	goto	u9130
 10784  001378                     u9120:
 10785  001378  0E00               	movlw	0
 10786  00137A                     u9130:
 10787  00137A  0100               	movlb	0	; () banked
 10788  00137C  6FBC               	movwf	___fladd@grs& (0+255),b
 10789                           
 10790                           ; BSR set to: 0
 10791  00137E  0E00               	movlw	0
 10792  001380  0100               	movlb	0	; () banked
 10793  001382  6FA9               	movwf	___fladd@b& (0+255),b
 10794  001384  0E00               	movlw	0
 10795  001386  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 10796  001388  0E00               	movlw	0
 10797  00138A  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 10798  00138C  0E00               	movlw	0
 10799  00138E  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 10800                           
 10801                           ; BSR set to: 0
 10802  001390  C0BA  F0BB         	movff	___fladd@aexp,___fladd@bexp
 10803  001394  D020               	goto	l1344
 10804  001396                     l1346:
 10805                           
 10806                           ; BSR set to: 0
 10807  001396  0100               	movlb	0	; () banked
 10808  001398  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10809  00139A  D007               	goto	l7702
 10810                           
 10811                           ; BSR set to: 0
 10812  00139C  0100               	movlb	0	; () banked
 10813  00139E  90D8               	bcf	status,0,c
 10814  0013A0  31BC               	rrcf	___fladd@grs& (0+255),w,b
 10815  0013A2  0901               	iorlw	1
 10816  0013A4  0100               	movlb	0	; () banked
 10817  0013A6  6FBC               	movwf	___fladd@grs& (0+255),b
 10818  0013A8  D003               	goto	l7704
 10819  0013AA                     l7702:
 10820                           
 10821                           ; BSR set to: 0
 10822  0013AA  0100               	movlb	0	; () banked
 10823  0013AC  90D8               	bcf	status,0,c
 10824  0013AE  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10825  0013B0                     l7704:
 10826                           
 10827                           ; BSR set to: 0
 10828  0013B0  0100               	movlb	0	; () banked
 10829  0013B2  A1A9               	btfss	___fladd@b& (0+255),0,b
 10830  0013B4  D002               	goto	l7708
 10831                           
 10832                           ; BSR set to: 0
 10833  0013B6  0100               	movlb	0	; () banked
 10834  0013B8  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10835  0013BA                     l7708:
 10836                           
 10837                           ; BSR set to: 0
 10838  0013BA  0100               	movlb	0	; () banked
 10839  0013BC  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10840  0013BE  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10841  0013C0  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10842  0013C2  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10843  0013C4  33A9               	rrcf	___fladd@b& (0+255),f,b
 10844                           
 10845                           ; BSR set to: 0
 10846  0013C6  0100               	movlb	0	; () banked
 10847  0013C8  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10848  0013CA                     l1345:
 10849                           
 10850                           ; BSR set to: 0
 10851  0013CA  0100               	movlb	0	; () banked
 10852  0013CC  51BA               	movf	___fladd@aexp& (0+255),w,b
 10853  0013CE  0100               	movlb	0	; () banked
 10854  0013D0  5DBB               	subwf	___fladd@bexp& (0+255),w,b
 10855  0013D2  A0D8               	btfss	status,0,c
 10856  0013D4  D7E0               	goto	l1346
 10857  0013D6                     l1344:
 10858                           
 10859                           ; BSR set to: 0
 10860  0013D6  0100               	movlb	0	; () banked
 10861  0013D8  BDB9               	btfsc	___fladd@signs& (0+255),6,b
 10862  0013DA  D03F               	goto	l7736
 10863                           
 10864                           ; BSR set to: 0
 10865  0013DC  0100               	movlb	0	; () banked
 10866  0013DE  51BB               	movf	___fladd@bexp& (0+255),w,b
 10867  0013E0  0100               	movlb	0	; () banked
 10868  0013E2  A4D8               	btfss	status,2,c
 10869  0013E4  D00A               	goto	l7718
 10870                           
 10871                           ; BSR set to: 0
 10872  0013E6  0E00               	movlw	0
 10873  0013E8  0100               	movlb	0	; () banked
 10874  0013EA  6FA9               	movwf	?___fladd& (0+255),b
 10875  0013EC  0E00               	movlw	0
 10876  0013EE  6FAA               	movwf	(?___fladd+1)& (0+255),b
 10877  0013F0  0E00               	movlw	0
 10878  0013F2  6FAB               	movwf	(?___fladd+2)& (0+255),b
 10879  0013F4  0E00               	movlw	0
 10880  0013F6  6FAC               	movwf	(?___fladd+3)& (0+255),b
 10881                           
 10882                           ; BSR set to: 0
 10883  0013F8  0012               	return	
 10884  0013FA                     l7718:
 10885                           
 10886                           ; BSR set to: 0
 10887  0013FA  0100               	movlb	0	; () banked
 10888  0013FC  51AD               	movf	___fladd@a& (0+255),w,b
 10889  0013FE  0100               	movlb	0	; () banked
 10890  001400  27A9               	addwf	___fladd@b& (0+255),f,b
 10891  001402  0100               	movlb	0	; () banked
 10892  001404  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10893  001406  0100               	movlb	0	; () banked
 10894  001408  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 10895  00140A  0100               	movlb	0	; () banked
 10896  00140C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10897  00140E  0100               	movlb	0	; () banked
 10898  001410  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 10899  001412  0100               	movlb	0	; () banked
 10900  001414  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10901  001416  0100               	movlb	0	; () banked
 10902  001418  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 10903                           
 10904                           ; BSR set to: 0
 10905  00141A  0100               	movlb	0	; () banked
 10906  00141C  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 10907  00141E  D0CC               	goto	l7772
 10908                           
 10909                           ; BSR set to: 0
 10910  001420  0100               	movlb	0	; () banked
 10911  001422  A1BC               	btfss	___fladd@grs& (0+255),0,b
 10912  001424  D009               	goto	l7726
 10913                           
 10914                           ; BSR set to: 0
 10915  001426  0100               	movlb	0	; () banked
 10916  001428  90D8               	bcf	status,0,c
 10917  00142A  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10918  00142C  0100               	movlb	0	; () banked
 10919  00142E  51BC               	movf	___fladd@grs& (0+255),w,b
 10920  001430  0901               	iorlw	1
 10921  001432  0100               	movlb	0	; () banked
 10922  001434  6FBC               	movwf	___fladd@grs& (0+255),b
 10923  001436  D003               	goto	l7728
 10924  001438                     l7726:
 10925                           
 10926                           ; BSR set to: 0
 10927  001438  0100               	movlb	0	; () banked
 10928  00143A  90D8               	bcf	status,0,c
 10929  00143C  33BC               	rrcf	___fladd@grs& (0+255),f,b
 10930  00143E                     l7728:
 10931                           
 10932                           ; BSR set to: 0
 10933  00143E  0100               	movlb	0	; () banked
 10934  001440  A1A9               	btfss	___fladd@b& (0+255),0,b
 10935  001442  D002               	goto	l7732
 10936                           
 10937                           ; BSR set to: 0
 10938  001444  0100               	movlb	0	; () banked
 10939  001446  8FBC               	bsf	___fladd@grs& (0+255),7,b
 10940  001448                     l7732:
 10941                           
 10942                           ; BSR set to: 0
 10943  001448  0100               	movlb	0	; () banked
 10944  00144A  35AC               	rlcf	(___fladd@b+3)& (0+255),w,b
 10945  00144C  33AC               	rrcf	(___fladd@b+3)& (0+255),f,b
 10946  00144E  33AB               	rrcf	(___fladd@b+2)& (0+255),f,b
 10947  001450  33AA               	rrcf	(___fladd@b+1)& (0+255),f,b
 10948  001452  33A9               	rrcf	___fladd@b& (0+255),f,b
 10949                           
 10950                           ; BSR set to: 0
 10951  001454  0100               	movlb	0	; () banked
 10952  001456  2BBB               	incf	___fladd@bexp& (0+255),f,b
 10953                           
 10954                           ; BSR set to: 0
 10955  001458  D0AF               	goto	l7772
 10956  00145A                     l7736:
 10957                           
 10958                           ; BSR set to: 0
 10959  00145A  0100               	movlb	0	; () banked
 10960  00145C  51AD               	movf	___fladd@a& (0+255),w,b
 10961  00145E  0100               	movlb	0	; () banked
 10962  001460  5DA9               	subwf	___fladd@b& (0+255),w,b
 10963  001462  0100               	movlb	0	; () banked
 10964  001464  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 10965  001466  0100               	movlb	0	; () banked
 10966  001468  59AA               	subwfb	(___fladd@b+1)& (0+255),w,b
 10967  00146A  0100               	movlb	0	; () banked
 10968  00146C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 10969  00146E  0100               	movlb	0	; () banked
 10970  001470  59AB               	subwfb	(___fladd@b+2)& (0+255),w,b
 10971  001472  0100               	movlb	0	; () banked
 10972  001474  51AC               	movf	(___fladd@b+3)& (0+255),w,b
 10973  001476  0A80               	xorlw	128
 10974  001478  0100               	movlb	0	; () banked
 10975  00147A  6FB1               	movwf	??___fladd& (0+255),b
 10976  00147C  0100               	movlb	0	; () banked
 10977  00147E  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 10978  001480  0A80               	xorlw	128
 10979  001482  0100               	movlb	0	; () banked
 10980  001484  59B1               	subwfb	??___fladd& (0+255),w,b
 10981  001486  B0D8               	btfsc	status,0,c
 10982  001488  D050               	goto	l7746
 10983                           
 10984                           ; BSR set to: 0
 10985  00148A  C0A9  F0B1         	movff	___fladd@b,??___fladd
 10986  00148E  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 10987  001492  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 10988  001496  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 10989  00149A  0100               	movlb	0	; () banked
 10990  00149C  1FB1               	comf	??___fladd& (0+255),f,b
 10991  00149E  1FB2               	comf	(??___fladd+1)& (0+255),f,b
 10992  0014A0  1FB3               	comf	(??___fladd+2)& (0+255),f,b
 10993  0014A2  1FB4               	comf	(??___fladd+3)& (0+255),f,b
 10994  0014A4  2BB1               	incf	??___fladd& (0+255),f,b
 10995  0014A6  0E00               	movlw	0
 10996  0014A8  23B2               	addwfc	(??___fladd+1)& (0+255),f,b
 10997  0014AA  23B3               	addwfc	(??___fladd+2)& (0+255),f,b
 10998  0014AC  23B4               	addwfc	(??___fladd+3)& (0+255),f,b
 10999  0014AE  0100               	movlb	0	; () banked
 11000  0014B0  51AD               	movf	___fladd@a& (0+255),w,b
 11001  0014B2  0100               	movlb	0	; () banked
 11002  0014B4  25B1               	addwf	??___fladd& (0+255),w,b
 11003  0014B6  0100               	movlb	0	; () banked
 11004  0014B8  6FB5               	movwf	(??___fladd+4)& (0+255),b
 11005  0014BA  0100               	movlb	0	; () banked
 11006  0014BC  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 11007  0014BE  0100               	movlb	0	; () banked
 11008  0014C0  21B2               	addwfc	(??___fladd+1)& (0+255),w,b
 11009  0014C2  0100               	movlb	0	; () banked
 11010  0014C4  6FB6               	movwf	(??___fladd+5)& (0+255),b
 11011  0014C6  0100               	movlb	0	; () banked
 11012  0014C8  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 11013  0014CA  0100               	movlb	0	; () banked
 11014  0014CC  21B3               	addwfc	(??___fladd+2)& (0+255),w,b
 11015  0014CE  0100               	movlb	0	; () banked
 11016  0014D0  6FB7               	movwf	(??___fladd+6)& (0+255),b
 11017  0014D2  0100               	movlb	0	; () banked
 11018  0014D4  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 11019  0014D6  0100               	movlb	0	; () banked
 11020  0014D8  21B4               	addwfc	(??___fladd+3)& (0+255),w,b
 11021  0014DA  0100               	movlb	0	; () banked
 11022  0014DC  6FB8               	movwf	(??___fladd+7)& (0+255),b
 11023  0014DE  0EFF               	movlw	255
 11024  0014E0  0100               	movlb	0	; () banked
 11025  0014E2  25B5               	addwf	(??___fladd+4)& (0+255),w,b
 11026  0014E4  0100               	movlb	0	; () banked
 11027  0014E6  6FA9               	movwf	___fladd@b& (0+255),b
 11028  0014E8  0EFF               	movlw	255
 11029  0014EA  0100               	movlb	0	; () banked
 11030  0014EC  21B6               	addwfc	(??___fladd+5)& (0+255),w,b
 11031  0014EE  0100               	movlb	0	; () banked
 11032  0014F0  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 11033  0014F2  0EFF               	movlw	255
 11034  0014F4  0100               	movlb	0	; () banked
 11035  0014F6  21B7               	addwfc	(??___fladd+6)& (0+255),w,b
 11036  0014F8  0100               	movlb	0	; () banked
 11037  0014FA  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 11038  0014FC  0EFF               	movlw	255
 11039  0014FE  0100               	movlb	0	; () banked
 11040  001500  21B8               	addwfc	(??___fladd+7)& (0+255),w,b
 11041  001502  0100               	movlb	0	; () banked
 11042  001504  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11043  001506  0E80               	movlw	128
 11044  001508  0100               	movlb	0	; () banked
 11045  00150A  1BB9               	xorwf	___fladd@signs& (0+255),f,b
 11046                           
 11047                           ; BSR set to: 0
 11048  00150C  0100               	movlb	0	; () banked
 11049  00150E  6DBC               	negf	___fladd@grs& (0+255),b
 11050                           
 11051                           ; BSR set to: 0
 11052  001510  0100               	movlb	0	; () banked
 11053  001512  51BC               	movf	___fladd@grs& (0+255),w,b
 11054  001514  0100               	movlb	0	; () banked
 11055  001516  A4D8               	btfss	status,2,c
 11056  001518  D018               	goto	l1361
 11057                           
 11058                           ; BSR set to: 0
 11059  00151A  0E01               	movlw	1
 11060  00151C  0100               	movlb	0	; () banked
 11061  00151E  27A9               	addwf	___fladd@b& (0+255),f,b
 11062  001520  0E00               	movlw	0
 11063  001522  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 11064  001524  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 11065  001526  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 11066                           
 11067                           ; BSR set to: 0
 11068  001528  D010               	goto	l1361
 11069  00152A                     l7746:
 11070                           
 11071                           ; BSR set to: 0
 11072  00152A  0100               	movlb	0	; () banked
 11073  00152C  51AD               	movf	___fladd@a& (0+255),w,b
 11074  00152E  0100               	movlb	0	; () banked
 11075  001530  5FA9               	subwf	___fladd@b& (0+255),f,b
 11076  001532  0100               	movlb	0	; () banked
 11077  001534  51AE               	movf	(___fladd@a+1)& (0+255),w,b
 11078  001536  0100               	movlb	0	; () banked
 11079  001538  5BAA               	subwfb	(___fladd@b+1)& (0+255),f,b
 11080  00153A  0100               	movlb	0	; () banked
 11081  00153C  51AF               	movf	(___fladd@a+2)& (0+255),w,b
 11082  00153E  0100               	movlb	0	; () banked
 11083  001540  5BAB               	subwfb	(___fladd@b+2)& (0+255),f,b
 11084  001542  0100               	movlb	0	; () banked
 11085  001544  51B0               	movf	(___fladd@a+3)& (0+255),w,b
 11086  001546  0100               	movlb	0	; () banked
 11087  001548  5BAC               	subwfb	(___fladd@b+3)& (0+255),f,b
 11088  00154A                     l1361:
 11089                           
 11090                           ; BSR set to: 0
 11091  00154A  0100               	movlb	0	; () banked
 11092  00154C  51A9               	movf	___fladd@b& (0+255),w,b
 11093  00154E  0100               	movlb	0	; () banked
 11094  001550  11AA               	iorwf	(___fladd@b+1)& (0+255),w,b
 11095  001552  0100               	movlb	0	; () banked
 11096  001554  11AB               	iorwf	(___fladd@b+2)& (0+255),w,b
 11097  001556  0100               	movlb	0	; () banked
 11098  001558  11AC               	iorwf	(___fladd@b+3)& (0+255),w,b
 11099  00155A  A4D8               	btfss	status,2,c
 11100  00155C  D02A               	goto	l7770
 11101                           
 11102                           ; BSR set to: 0
 11103  00155E  0100               	movlb	0	; () banked
 11104  001560  51BC               	movf	___fladd@grs& (0+255),w,b
 11105  001562  0100               	movlb	0	; () banked
 11106  001564  A4D8               	btfss	status,2,c
 11107  001566  D025               	goto	l7770
 11108                           
 11109                           ; BSR set to: 0
 11110  001568  0E00               	movlw	0
 11111  00156A  0100               	movlb	0	; () banked
 11112  00156C  6FA9               	movwf	?___fladd& (0+255),b
 11113  00156E  0E00               	movlw	0
 11114  001570  6FAA               	movwf	(?___fladd+1)& (0+255),b
 11115  001572  0E00               	movlw	0
 11116  001574  6FAB               	movwf	(?___fladd+2)& (0+255),b
 11117  001576  0E00               	movlw	0
 11118  001578  6FAC               	movwf	(?___fladd+3)& (0+255),b
 11119                           
 11120                           ; BSR set to: 0
 11121  00157A  0012               	return	
 11122  00157C                     l7754:
 11123                           
 11124                           ; BSR set to: 0
 11125  00157C  0100               	movlb	0	; () banked
 11126  00157E  90D8               	bcf	status,0,c
 11127  001580  37A9               	rlcf	___fladd@b& (0+255),f,b
 11128  001582  37AA               	rlcf	(___fladd@b+1)& (0+255),f,b
 11129  001584  37AB               	rlcf	(___fladd@b+2)& (0+255),f,b
 11130  001586  37AC               	rlcf	(___fladd@b+3)& (0+255),f,b
 11131                           
 11132                           ; BSR set to: 0
 11133  001588  0100               	movlb	0	; () banked
 11134  00158A  AFBC               	btfss	___fladd@grs& (0+255),7,b
 11135  00158C  D002               	goto	l7760
 11136                           
 11137                           ; BSR set to: 0
 11138  00158E  0100               	movlb	0	; () banked
 11139  001590  81A9               	bsf	___fladd@b& (0+255),0,b
 11140  001592                     l7760:
 11141                           
 11142                           ; BSR set to: 0
 11143  001592  0100               	movlb	0	; () banked
 11144  001594  A1BC               	btfss	___fladd@grs& (0+255),0,b
 11145  001596  D003               	goto	l7764
 11146                           
 11147                           ; BSR set to: 0
 11148  001598  80D8               	bsf	status,0,c
 11149  00159A  0100               	movlb	0	; () banked
 11150  00159C  D002               	goto	L8
 11151  00159E                     l7764:
 11152                           
 11153                           ; BSR set to: 0
 11154  00159E  0100               	movlb	0	; () banked
 11155  0015A0  90D8               	bcf	status,0,c
 11156  0015A2                     L8:
 11157  0015A2  37BC               	rlcf	___fladd@grs& (0+255),f,b
 11158                           
 11159                           ; BSR set to: 0
 11160                           
 11161                           ; BSR set to: 0
 11162  0015A4  0100               	movlb	0	; () banked
 11163  0015A6  51BB               	movf	___fladd@bexp& (0+255),w,b
 11164  0015A8  0100               	movlb	0	; () banked
 11165  0015AA  B4D8               	btfsc	status,2,c
 11166  0015AC  D002               	goto	l7770
 11167                           
 11168                           ; BSR set to: 0
 11169  0015AE  0100               	movlb	0	; () banked
 11170  0015B0  07BB               	decf	___fladd@bexp& (0+255),f,b
 11171  0015B2                     l7770:
 11172                           
 11173                           ; BSR set to: 0
 11174  0015B2  0100               	movlb	0	; () banked
 11175  0015B4  AFAB               	btfss	(___fladd@b+2)& (0+255),7,b
 11176  0015B6  D7E2               	goto	l7754
 11177  0015B8                     l7772:
 11178                           
 11179                           ; BSR set to: 0
 11180  0015B8  0E00               	movlw	0
 11181  0015BA  0100               	movlb	0	; () banked
 11182  0015BC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11183                           
 11184                           ; BSR set to: 0
 11185  0015BE  0100               	movlb	0	; () banked
 11186  0015C0  AFBC               	btfss	___fladd@grs& (0+255),7,b
 11187  0015C2  D00D               	goto	l1370
 11188                           
 11189                           ; BSR set to: 0
 11190  0015C4  C0BC  F0B1         	movff	___fladd@grs,??___fladd
 11191  0015C8  0E7F               	movlw	127
 11192  0015CA  0100               	movlb	0	; () banked
 11193  0015CC  17B1               	andwf	??___fladd& (0+255),f,b
 11194  0015CE  A4D8               	btfss	status,2,c
 11195  0015D0  D003               	goto	l7780
 11196                           
 11197                           ; BSR set to: 0
 11198                           
 11199                           ; BSR set to: 0
 11200  0015D2  0100               	movlb	0	; () banked
 11201  0015D4  A1A9               	btfss	___fladd@b& (0+255),0,b
 11202  0015D6  D003               	goto	l1370
 11203  0015D8                     l7780:
 11204                           
 11205                           ; BSR set to: 0
 11206  0015D8  0E01               	movlw	1
 11207  0015DA  0100               	movlb	0	; () banked
 11208  0015DC  6FBA               	movwf	___fladd@aexp& (0+255),b
 11209  0015DE                     l1370:
 11210                           
 11211                           ; BSR set to: 0
 11212  0015DE  0100               	movlb	0	; () banked
 11213  0015E0  51BA               	movf	___fladd@aexp& (0+255),w,b
 11214  0015E2  0100               	movlb	0	; () banked
 11215  0015E4  B4D8               	btfsc	status,2,c
 11216  0015E6  D026               	goto	l7790
 11217                           
 11218                           ; BSR set to: 0
 11219  0015E8  0E01               	movlw	1
 11220  0015EA  0100               	movlb	0	; () banked
 11221  0015EC  27A9               	addwf	___fladd@b& (0+255),f,b
 11222  0015EE  0E00               	movlw	0
 11223  0015F0  23AA               	addwfc	(___fladd@b+1)& (0+255),f,b
 11224  0015F2  23AB               	addwfc	(___fladd@b+2)& (0+255),f,b
 11225  0015F4  23AC               	addwfc	(___fladd@b+3)& (0+255),f,b
 11226                           
 11227                           ; BSR set to: 0
 11228  0015F6  0100               	movlb	0	; () banked
 11229  0015F8  A1AC               	btfss	(___fladd@b+3)& (0+255),0,b
 11230  0015FA  D01C               	goto	l7790
 11231                           
 11232                           ; BSR set to: 0
 11233  0015FC  C0A9  F0B1         	movff	___fladd@b,??___fladd
 11234  001600  C0AA  F0B2         	movff	___fladd@b+1,??___fladd+1
 11235  001604  C0AB  F0B3         	movff	___fladd@b+2,??___fladd+2
 11236  001608  C0AC  F0B4         	movff	___fladd@b+3,??___fladd+3
 11237  00160C  0100               	movlb	0	; () banked
 11238  00160E  35B4               	rlcf	(??___fladd+3)& (0+255),w,b
 11239  001610  33B4               	rrcf	(??___fladd+3)& (0+255),f,b
 11240  001612  33B3               	rrcf	(??___fladd+2)& (0+255),f,b
 11241  001614  33B2               	rrcf	(??___fladd+1)& (0+255),f,b
 11242  001616  33B1               	rrcf	??___fladd& (0+255),f,b
 11243  001618  C0B1  F0A9         	movff	??___fladd,___fladd@b
 11244  00161C  C0B2  F0AA         	movff	??___fladd+1,___fladd@b+1
 11245  001620  C0B3  F0AB         	movff	??___fladd+2,___fladd@b+2
 11246  001624  C0B4  F0AC         	movff	??___fladd+3,___fladd@b+3
 11247  001628  0100               	movlb	0	; () banked
 11248  00162A  29BB               	incf	___fladd@bexp& (0+255),w,b
 11249  00162C  B4D8               	btfsc	status,2,c
 11250  00162E  D002               	goto	l7790
 11251                           
 11252                           ; BSR set to: 0
 11253  001630  0100               	movlb	0	; () banked
 11254  001632  2BBB               	incf	___fladd@bexp& (0+255),f,b
 11255  001634                     l7790:
 11256                           
 11257                           ; BSR set to: 0
 11258  001634  0100               	movlb	0	; () banked
 11259  001636  29BB               	incf	___fladd@bexp& (0+255),w,b
 11260  001638  B4D8               	btfsc	status,2,c
 11261  00163A  D005               	goto	l7794
 11262                           
 11263                           ; BSR set to: 0
 11264  00163C  0100               	movlb	0	; () banked
 11265  00163E  51BB               	movf	___fladd@bexp& (0+255),w,b
 11266  001640  0100               	movlb	0	; () banked
 11267  001642  A4D8               	btfss	status,2,c
 11268  001644  D011               	goto	l7798
 11269  001646                     l7794:
 11270                           
 11271                           ; BSR set to: 0
 11272  001646  0E00               	movlw	0
 11273  001648  0100               	movlb	0	; () banked
 11274  00164A  6FA9               	movwf	___fladd@b& (0+255),b
 11275  00164C  0E00               	movlw	0
 11276  00164E  6FAA               	movwf	(___fladd@b+1)& (0+255),b
 11277  001650  0E00               	movlw	0
 11278  001652  6FAB               	movwf	(___fladd@b+2)& (0+255),b
 11279  001654  0E00               	movlw	0
 11280  001656  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11281  001658  0100               	movlb	0	; () banked
 11282  00165A  51BB               	movf	___fladd@bexp& (0+255),w,b
 11283  00165C  0100               	movlb	0	; () banked
 11284  00165E  A4D8               	btfss	status,2,c
 11285  001660  D003               	goto	l7798
 11286                           
 11287                           ; BSR set to: 0
 11288  001662  0E00               	movlw	0
 11289  001664  0100               	movlb	0	; () banked
 11290  001666  6FB9               	movwf	___fladd@signs& (0+255),b
 11291  001668                     l7798:
 11292                           
 11293                           ; BSR set to: 0
 11294  001668  0100               	movlb	0	; () banked
 11295  00166A  A1BB               	btfss	___fladd@bexp& (0+255),0,b
 11296  00166C  D003               	goto	l7802
 11297                           
 11298                           ; BSR set to: 0
 11299  00166E  0100               	movlb	0	; () banked
 11300  001670  8FAB               	bsf	(___fladd@b+2)& (0+255),7,b
 11301  001672  D002               	goto	l7804
 11302  001674                     l7802:
 11303                           
 11304                           ; BSR set to: 0
 11305  001674  0100               	movlb	0	; () banked
 11306  001676  9FAB               	bcf	(___fladd@b+2)& (0+255),7,b
 11307  001678                     l7804:
 11308                           
 11309                           ; BSR set to: 0
 11310  001678  0100               	movlb	0	; () banked
 11311  00167A  90D8               	bcf	status,0,c
 11312  00167C  31BB               	rrcf	___fladd@bexp& (0+255),w,b
 11313  00167E  0100               	movlb	0	; () banked
 11314  001680  6FAC               	movwf	(___fladd@b+3)& (0+255),b
 11315                           
 11316                           ; BSR set to: 0
 11317  001682  0100               	movlb	0	; () banked
 11318  001684  AFB9               	btfss	___fladd@signs& (0+255),7,b
 11319  001686  D002               	goto	l7810
 11320                           
 11321                           ; BSR set to: 0
 11322  001688  0100               	movlb	0	; () banked
 11323  00168A  8FAC               	bsf	(___fladd@b+3)& (0+255),7,b
 11324  00168C                     l7810:
 11325                           
 11326                           ; BSR set to: 0
 11327  00168C  C0A9  F0A9         	movff	___fladd@b,?___fladd
 11328  001690  C0AA  F0AA         	movff	___fladd@b+1,?___fladd+1
 11329  001694  C0AB  F0AB         	movff	___fladd@b+2,?___fladd+2
 11330  001698  C0AC  F0AC         	movff	___fladd@b+3,?___fladd+3
 11331  00169C  0012               	return	
 11332  00169E                     __end_of___fladd:
 11333                           	opt stack 0
 11334                           tblptru	equ	0xFF8
 11335                           tblptrh	equ	0xFF7
 11336                           tblptrl	equ	0xFF6
 11337                           tablat	equ	0xFF5
 11338                           prodh	equ	0xFF4
 11339                           prodl	equ	0xFF3
 11340                           intcon	equ	0xFF2
 11341                           postinc0	equ	0xFEE
 11342                           wreg	equ	0xFE8
 11343                           postdec1	equ	0xFE5
 11344                           fsr1l	equ	0xFE1
 11345                           indf2	equ	0xFDF
 11346                           postinc2	equ	0xFDE
 11347                           postdec2	equ	0xFDD
 11348                           fsr2h	equ	0xFDA
 11349                           fsr2l	equ	0xFD9
 11350                           status	equ	0xFD8
 11351                           
 11352 ;; *************** function ___flneg *****************
 11353 ;; Defined at:
 11354 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flneg.c"
 11355 ;; Parameters:    Size  Location     Type
 11356 ;;  f1              4   21[BANK0 ] unsigned char 
 11357 ;; Auto vars:     Size  Location     Type
 11358 ;;		None
 11359 ;; Return value:  Size  Location     Type
 11360 ;;                  4   21[BANK0 ] unsigned char 
 11361 ;; Registers used:
 11362 ;;		wreg, status,2, status,0
 11363 ;; Tracked objects:
 11364 ;;		On entry : 0/0
 11365 ;;		On exit  : 0/0
 11366 ;;		Unchanged: 0/0
 11367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11368 ;;      Params:         0       4       0       0       0       0       0
 11369 ;;      Locals:         0       0       0       0       0       0       0
 11370 ;;      Temps:          0       0       0       0       0       0       0
 11371 ;;      Totals:         0       4       0       0       0       0       0
 11372 ;;Total ram usage:        4 bytes
 11373 ;; Hardware stack levels used:    1
 11374 ;; Hardware stack levels required when called:    8
 11375 ;; This function calls:
 11376 ;;		Nothing
 11377 ;; This function is called by:
 11378 ;;		_printf
 11379 ;; This function uses a non-reentrant model
 11380 ;;
 11381                           
 11382                           	psect	text35
 11383  004F50                     __ptext35:
 11384                           	opt stack 0
 11385  004F50                     ___flneg:
 11386                           	opt stack 19
 11387                           
 11388                           ; BSR set to: 0
 11389                           ;incstack = 0
 11390  004F50  0100               	movlb	0	; () banked
 11391  004F52  5175               	movf	___flneg@f1& (0+255),w,b
 11392  004F54  0100               	movlb	0	; () banked
 11393  004F56  1176               	iorwf	(___flneg@f1+1)& (0+255),w,b
 11394  004F58  0100               	movlb	0	; () banked
 11395  004F5A  1177               	iorwf	(___flneg@f1+2)& (0+255),w,b
 11396  004F5C  0100               	movlb	0	; () banked
 11397  004F5E  1178               	iorwf	(___flneg@f1+3)& (0+255),w,b
 11398  004F60  B4D8               	btfsc	status,2,c
 11399  004F62  D009               	goto	l8182
 11400                           
 11401                           ; BSR set to: 0
 11402  004F64  0E00               	movlw	0
 11403  004F66  0100               	movlb	0	; () banked
 11404  004F68  1B75               	xorwf	___flneg@f1& (0+255),f,b
 11405  004F6A  0E00               	movlw	0
 11406  004F6C  1B76               	xorwf	(___flneg@f1+1)& (0+255),f,b
 11407  004F6E  0E00               	movlw	0
 11408  004F70  1B77               	xorwf	(___flneg@f1+2)& (0+255),f,b
 11409  004F72  0E80               	movlw	128
 11410  004F74  1B78               	xorwf	(___flneg@f1+3)& (0+255),f,b
 11411  004F76                     l8182:
 11412                           
 11413                           ; BSR set to: 0
 11414  004F76  C075  F075         	movff	___flneg@f1,?___flneg
 11415  004F7A  C076  F076         	movff	___flneg@f1+1,?___flneg+1
 11416  004F7E  C077  F077         	movff	___flneg@f1+2,?___flneg+2
 11417  004F82  C078  F078         	movff	___flneg@f1+3,?___flneg+3
 11418  004F86  0012               	return	
 11419  004F88                     __end_of___flneg:
 11420                           	opt stack 0
 11421                           tblptru	equ	0xFF8
 11422                           tblptrh	equ	0xFF7
 11423                           tblptrl	equ	0xFF6
 11424                           tablat	equ	0xFF5
 11425                           prodh	equ	0xFF4
 11426                           prodl	equ	0xFF3
 11427                           intcon	equ	0xFF2
 11428                           postinc0	equ	0xFEE
 11429                           wreg	equ	0xFE8
 11430                           postdec1	equ	0xFE5
 11431                           fsr1l	equ	0xFE1
 11432                           indf2	equ	0xFDF
 11433                           postinc2	equ	0xFDE
 11434                           postdec2	equ	0xFDD
 11435                           fsr2h	equ	0xFDA
 11436                           fsr2l	equ	0xFD9
 11437                           status	equ	0xFD8
 11438                           
 11439 ;; *************** function ___flge *****************
 11440 ;; Defined at:
 11441 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\flge.c"
 11442 ;; Parameters:    Size  Location     Type
 11443 ;;  ff1             4   21[BANK0 ] unsigned char 
 11444 ;;  ff2             4   25[BANK0 ] unsigned char 
 11445 ;; Auto vars:     Size  Location     Type
 11446 ;;		None
 11447 ;; Return value:  Size  Location     Type
 11448 ;;		None               void
 11449 ;; Registers used:
 11450 ;;		wreg, status,2, status,0
 11451 ;; Tracked objects:
 11452 ;;		On entry : 0/0
 11453 ;;		On exit  : 0/0
 11454 ;;		Unchanged: 0/0
 11455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11456 ;;      Params:         0       8       0       0       0       0       0
 11457 ;;      Locals:         0       0       0       0       0       0       0
 11458 ;;      Temps:          0       4       0       0       0       0       0
 11459 ;;      Totals:         0      12       0       0       0       0       0
 11460 ;;Total ram usage:       12 bytes
 11461 ;; Hardware stack levels used:    1
 11462 ;; Hardware stack levels required when called:    8
 11463 ;; This function calls:
 11464 ;;		Nothing
 11465 ;; This function is called by:
 11466 ;;		_printf
 11467 ;; This function uses a non-reentrant model
 11468 ;;
 11469                           
 11470                           	psect	text36
 11471  0033D8                     __ptext36:
 11472                           	opt stack 0
 11473  0033D8                     ___flge:
 11474                           	opt stack 19
 11475                           
 11476                           ; BSR set to: 0
 11477                           ;incstack = 0
 11478  0033D8  0E00               	movlw	0
 11479  0033DA  0100               	movlb	0	; () banked
 11480  0033DC  1575               	andwf	___flge@ff1& (0+255),w,b
 11481  0033DE  0100               	movlb	0	; () banked
 11482  0033E0  6F7D               	movwf	??___flge& (0+255),b
 11483  0033E2  0E00               	movlw	0
 11484  0033E4  0100               	movlb	0	; () banked
 11485  0033E6  1576               	andwf	(___flge@ff1+1)& (0+255),w,b
 11486  0033E8  0100               	movlb	0	; () banked
 11487  0033EA  6F7E               	movwf	(??___flge+1)& (0+255),b
 11488  0033EC  0E80               	movlw	128
 11489  0033EE  0100               	movlb	0	; () banked
 11490  0033F0  1577               	andwf	(___flge@ff1+2)& (0+255),w,b
 11491  0033F2  0100               	movlb	0	; () banked
 11492  0033F4  6F7F               	movwf	(??___flge+2)& (0+255),b
 11493  0033F6  0E7F               	movlw	127
 11494  0033F8  0100               	movlb	0	; () banked
 11495  0033FA  1578               	andwf	(___flge@ff1+3)& (0+255),w,b
 11496  0033FC  0100               	movlb	0	; () banked
 11497  0033FE  6F80               	movwf	(??___flge+3)& (0+255),b
 11498  003400  0100               	movlb	0	; () banked
 11499  003402  517D               	movf	??___flge& (0+255),w,b
 11500  003404  0100               	movlb	0	; () banked
 11501  003406  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11502  003408  0100               	movlb	0	; () banked
 11503  00340A  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11504  00340C  0100               	movlb	0	; () banked
 11505  00340E  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11506  003410  A4D8               	btfss	status,2,c
 11507  003412  D009               	goto	l8160
 11508                           
 11509                           ; BSR set to: 0
 11510  003414  0E00               	movlw	0
 11511  003416  0100               	movlb	0	; () banked
 11512  003418  6F75               	movwf	___flge@ff1& (0+255),b
 11513  00341A  0E00               	movlw	0
 11514  00341C  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11515  00341E  0E00               	movlw	0
 11516  003420  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11517  003422  0E00               	movlw	0
 11518  003424  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11519  003426                     l8160:
 11520                           
 11521                           ; BSR set to: 0
 11522  003426  0E00               	movlw	0
 11523  003428  0100               	movlb	0	; () banked
 11524  00342A  1579               	andwf	___flge@ff2& (0+255),w,b
 11525  00342C  0100               	movlb	0	; () banked
 11526  00342E  6F7D               	movwf	??___flge& (0+255),b
 11527  003430  0E00               	movlw	0
 11528  003432  0100               	movlb	0	; () banked
 11529  003434  157A               	andwf	(___flge@ff2+1)& (0+255),w,b
 11530  003436  0100               	movlb	0	; () banked
 11531  003438  6F7E               	movwf	(??___flge+1)& (0+255),b
 11532  00343A  0E80               	movlw	128
 11533  00343C  0100               	movlb	0	; () banked
 11534  00343E  157B               	andwf	(___flge@ff2+2)& (0+255),w,b
 11535  003440  0100               	movlb	0	; () banked
 11536  003442  6F7F               	movwf	(??___flge+2)& (0+255),b
 11537  003444  0E7F               	movlw	127
 11538  003446  0100               	movlb	0	; () banked
 11539  003448  157C               	andwf	(___flge@ff2+3)& (0+255),w,b
 11540  00344A  0100               	movlb	0	; () banked
 11541  00344C  6F80               	movwf	(??___flge+3)& (0+255),b
 11542  00344E  0100               	movlb	0	; () banked
 11543  003450  517D               	movf	??___flge& (0+255),w,b
 11544  003452  0100               	movlb	0	; () banked
 11545  003454  117E               	iorwf	(??___flge+1)& (0+255),w,b
 11546  003456  0100               	movlb	0	; () banked
 11547  003458  117F               	iorwf	(??___flge+2)& (0+255),w,b
 11548  00345A  0100               	movlb	0	; () banked
 11549  00345C  1180               	iorwf	(??___flge+3)& (0+255),w,b
 11550  00345E  A4D8               	btfss	status,2,c
 11551  003460  D009               	goto	l8164
 11552                           
 11553                           ; BSR set to: 0
 11554  003462  0E00               	movlw	0
 11555  003464  0100               	movlb	0	; () banked
 11556  003466  6F79               	movwf	___flge@ff2& (0+255),b
 11557  003468  0E00               	movlw	0
 11558  00346A  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11559  00346C  0E00               	movlw	0
 11560  00346E  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11561  003470  0E00               	movlw	0
 11562  003472  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11563  003474                     l8164:
 11564                           
 11565                           ; BSR set to: 0
 11566  003474  0100               	movlb	0	; () banked
 11567  003476  AF78               	btfss	(___flge@ff1+3)& (0+255),7,b
 11568  003478  D026               	goto	l8168
 11569                           
 11570                           ; BSR set to: 0
 11571  00347A  C075  F07D         	movff	___flge@ff1,??___flge
 11572  00347E  C076  F07E         	movff	___flge@ff1+1,??___flge+1
 11573  003482  C077  F07F         	movff	___flge@ff1+2,??___flge+2
 11574  003486  C078  F080         	movff	___flge@ff1+3,??___flge+3
 11575  00348A  0100               	movlb	0	; () banked
 11576  00348C  1F7D               	comf	??___flge& (0+255),f,b
 11577  00348E  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11578  003490  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11579  003492  1F80               	comf	(??___flge+3)& (0+255),f,b
 11580  003494  2B7D               	incf	??___flge& (0+255),f,b
 11581  003496  0E00               	movlw	0
 11582  003498  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11583  00349A  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11584  00349C  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11585  00349E  0E00               	movlw	0
 11586  0034A0  0100               	movlb	0	; () banked
 11587  0034A2  257D               	addwf	??___flge& (0+255),w,b
 11588  0034A4  0100               	movlb	0	; () banked
 11589  0034A6  6F75               	movwf	___flge@ff1& (0+255),b
 11590  0034A8  0E00               	movlw	0
 11591  0034AA  0100               	movlb	0	; () banked
 11592  0034AC  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11593  0034AE  0100               	movlb	0	; () banked
 11594  0034B0  6F76               	movwf	(___flge@ff1+1)& (0+255),b
 11595  0034B2  0E00               	movlw	0
 11596  0034B4  0100               	movlb	0	; () banked
 11597  0034B6  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11598  0034B8  0100               	movlb	0	; () banked
 11599  0034BA  6F77               	movwf	(___flge@ff1+2)& (0+255),b
 11600  0034BC  0E80               	movlw	128
 11601  0034BE  0100               	movlb	0	; () banked
 11602  0034C0  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11603  0034C2  0100               	movlb	0	; () banked
 11604  0034C4  6F78               	movwf	(___flge@ff1+3)& (0+255),b
 11605  0034C6                     l8168:
 11606                           
 11607                           ; BSR set to: 0
 11608  0034C6  0100               	movlb	0	; () banked
 11609  0034C8  AF7C               	btfss	(___flge@ff2+3)& (0+255),7,b
 11610  0034CA  D026               	goto	l1081
 11611                           
 11612                           ; BSR set to: 0
 11613  0034CC  C079  F07D         	movff	___flge@ff2,??___flge
 11614  0034D0  C07A  F07E         	movff	___flge@ff2+1,??___flge+1
 11615  0034D4  C07B  F07F         	movff	___flge@ff2+2,??___flge+2
 11616  0034D8  C07C  F080         	movff	___flge@ff2+3,??___flge+3
 11617  0034DC  0100               	movlb	0	; () banked
 11618  0034DE  1F7D               	comf	??___flge& (0+255),f,b
 11619  0034E0  1F7E               	comf	(??___flge+1)& (0+255),f,b
 11620  0034E2  1F7F               	comf	(??___flge+2)& (0+255),f,b
 11621  0034E4  1F80               	comf	(??___flge+3)& (0+255),f,b
 11622  0034E6  2B7D               	incf	??___flge& (0+255),f,b
 11623  0034E8  0E00               	movlw	0
 11624  0034EA  237E               	addwfc	(??___flge+1)& (0+255),f,b
 11625  0034EC  237F               	addwfc	(??___flge+2)& (0+255),f,b
 11626  0034EE  2380               	addwfc	(??___flge+3)& (0+255),f,b
 11627  0034F0  0E00               	movlw	0
 11628  0034F2  0100               	movlb	0	; () banked
 11629  0034F4  257D               	addwf	??___flge& (0+255),w,b
 11630  0034F6  0100               	movlb	0	; () banked
 11631  0034F8  6F79               	movwf	___flge@ff2& (0+255),b
 11632  0034FA  0E00               	movlw	0
 11633  0034FC  0100               	movlb	0	; () banked
 11634  0034FE  217E               	addwfc	(??___flge+1)& (0+255),w,b
 11635  003500  0100               	movlb	0	; () banked
 11636  003502  6F7A               	movwf	(___flge@ff2+1)& (0+255),b
 11637  003504  0E00               	movlw	0
 11638  003506  0100               	movlb	0	; () banked
 11639  003508  217F               	addwfc	(??___flge+2)& (0+255),w,b
 11640  00350A  0100               	movlb	0	; () banked
 11641  00350C  6F7B               	movwf	(___flge@ff2+2)& (0+255),b
 11642  00350E  0E80               	movlw	128
 11643  003510  0100               	movlb	0	; () banked
 11644  003512  2180               	addwfc	(??___flge+3)& (0+255),w,b
 11645  003514  0100               	movlb	0	; () banked
 11646  003516  6F7C               	movwf	(___flge@ff2+3)& (0+255),b
 11647  003518                     l1081:
 11648                           
 11649                           ; BSR set to: 0
 11650  003518  0E00               	movlw	0
 11651  00351A  0100               	movlb	0	; () banked
 11652  00351C  1B75               	xorwf	___flge@ff1& (0+255),f,b
 11653  00351E  0E00               	movlw	0
 11654  003520  1B76               	xorwf	(___flge@ff1+1)& (0+255),f,b
 11655  003522  0E00               	movlw	0
 11656  003524  1B77               	xorwf	(___flge@ff1+2)& (0+255),f,b
 11657  003526  0E80               	movlw	128
 11658  003528  1B78               	xorwf	(___flge@ff1+3)& (0+255),f,b
 11659  00352A  0E00               	movlw	0
 11660  00352C  0100               	movlb	0	; () banked
 11661  00352E  1B79               	xorwf	___flge@ff2& (0+255),f,b
 11662  003530  0E00               	movlw	0
 11663  003532  1B7A               	xorwf	(___flge@ff2+1)& (0+255),f,b
 11664  003534  0E00               	movlw	0
 11665  003536  1B7B               	xorwf	(___flge@ff2+2)& (0+255),f,b
 11666  003538  0E80               	movlw	128
 11667  00353A  1B7C               	xorwf	(___flge@ff2+3)& (0+255),f,b
 11668  00353C  0100               	movlb	0	; () banked
 11669  00353E  5179               	movf	___flge@ff2& (0+255),w,b
 11670  003540  0100               	movlb	0	; () banked
 11671  003542  5D75               	subwf	___flge@ff1& (0+255),w,b
 11672  003544  0100               	movlb	0	; () banked
 11673  003546  517A               	movf	(___flge@ff2+1)& (0+255),w,b
 11674  003548  0100               	movlb	0	; () banked
 11675  00354A  5976               	subwfb	(___flge@ff1+1)& (0+255),w,b
 11676  00354C  0100               	movlb	0	; () banked
 11677  00354E  517B               	movf	(___flge@ff2+2)& (0+255),w,b
 11678  003550  0100               	movlb	0	; () banked
 11679  003552  5977               	subwfb	(___flge@ff1+2)& (0+255),w,b
 11680  003554  0100               	movlb	0	; () banked
 11681  003556  517C               	movf	(___flge@ff2+3)& (0+255),w,b
 11682  003558  0100               	movlb	0	; () banked
 11683  00355A  5978               	subwfb	(___flge@ff1+3)& (0+255),w,b
 11684  00355C  B0D8               	btfsc	status,0,c
 11685  00355E  D002               	goto	l8174
 11686                           
 11687                           ; BSR set to: 0
 11688  003560  90D8               	bcf	status,0,c
 11689  003562  0012               	return	
 11690  003564                     l8174:
 11691                           
 11692                           ; BSR set to: 0
 11693  003564  80D8               	bsf	status,0,c
 11694                           
 11695                           ; BSR set to: 0
 11696  003566  0012               	return	
 11697  003568                     __end_of___flge:
 11698                           	opt stack 0
 11699                           tblptru	equ	0xFF8
 11700                           tblptrh	equ	0xFF7
 11701                           tblptrl	equ	0xFF6
 11702                           tablat	equ	0xFF5
 11703                           prodh	equ	0xFF4
 11704                           prodl	equ	0xFF3
 11705                           intcon	equ	0xFF2
 11706                           postinc0	equ	0xFEE
 11707                           wreg	equ	0xFE8
 11708                           postdec1	equ	0xFE5
 11709                           fsr1l	equ	0xFE1
 11710                           indf2	equ	0xFDF
 11711                           postinc2	equ	0xFDE
 11712                           postdec2	equ	0xFDD
 11713                           fsr2h	equ	0xFDA
 11714                           fsr2l	equ	0xFD9
 11715                           status	equ	0xFD8
 11716                           
 11717 ;; *************** function _clockConfig *****************
 11718 ;; Defined at:
 11719 ;;		line 76 in file "source/SYSConfig.h"
 11720 ;; Parameters:    Size  Location     Type
 11721 ;;		None
 11722 ;; Auto vars:     Size  Location     Type
 11723 ;;		None
 11724 ;; Return value:  Size  Location     Type
 11725 ;;                  1    wreg      void 
 11726 ;; Registers used:
 11727 ;;		wreg, status,2
 11728 ;; Tracked objects:
 11729 ;;		On entry : 0/0
 11730 ;;		On exit  : 0/0
 11731 ;;		Unchanged: 0/0
 11732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11733 ;;      Params:         0       0       0       0       0       0       0
 11734 ;;      Locals:         0       0       0       0       0       0       0
 11735 ;;      Temps:          0       0       0       0       0       0       0
 11736 ;;      Totals:         0       0       0       0       0       0       0
 11737 ;;Total ram usage:        0 bytes
 11738 ;; Hardware stack levels used:    1
 11739 ;; Hardware stack levels required when called:    8
 11740 ;; This function calls:
 11741 ;;		Nothing
 11742 ;; This function is called by:
 11743 ;;		_main
 11744 ;; This function uses a non-reentrant model
 11745 ;;
 11746                           
 11747                           	psect	text37
 11748  005162                     __ptext37:
 11749                           	opt stack 0
 11750  005162                     _clockConfig:
 11751                           	opt stack 22
 11752                           
 11753                           ;SYSConfig.h: 77: OSCCONbits.IDLEN = 1;
 11754                           
 11755                           ; BSR set to: 0
 11756                           ;incstack = 0
 11757  005162  8ED3               	bsf	4051,7,c	;volatile
 11758                           
 11759                           ;SYSConfig.h: 78: OSCCONbits.IRCF = 0b111;
 11760  005164  88D3               	bsf	4051,4,c	;volatile
 11761  005166  8AD3               	bsf	4051,5,c	;volatile
 11762  005168  8CD3               	bsf	4051,6,c	;volatile
 11763  00516A                     l81:
 11764  00516A  A4D3               	btfss	4051,2,c	;volatile
 11765  00516C  D7FE               	goto	l81
 11766                           
 11767                           ;SYSConfig.h: 80: OSCCONbits.SCS = 0b11;
 11768  00516E  0E03               	movlw	3
 11769  005170  12D3               	iorwf	4051,f,c	;volatile
 11770                           
 11771                           ;SYSConfig.h: 81: OSCCON2bits.MFIOSEL = 0;
 11772  005172  98D2               	bcf	4050,4,c	;volatile
 11773                           
 11774                           ;SYSConfig.h: 82: OSCCON2bits.SOSCGO = 0;
 11775  005174  96D2               	bcf	4050,3,c	;volatile
 11776                           
 11777                           ;SYSConfig.h: 83: OSCTUNEbits.INTSRC = 0;
 11778  005176  9E9B               	bcf	3995,7,c	;volatile
 11779                           
 11780                           ;SYSConfig.h: 84: OSCTUNEbits.TUN = 0b011111;
 11781  005178  809B               	bsf	3995,0,c	;volatile
 11782  00517A  829B               	bsf	3995,1,c	;volatile
 11783  00517C  849B               	bsf	3995,2,c	;volatile
 11784  00517E  869B               	bsf	3995,3,c	;volatile
 11785  005180  889B               	bsf	3995,4,c	;volatile
 11786  005182  9A9B               	bcf	3995,5,c	;volatile
 11787                           
 11788                           ;SYSConfig.h: 85: OSCTUNEbits.PLLEN = 1;
 11789  005184  8C9B               	bsf	3995,6,c	;volatile
 11790                           
 11791                           ;SYSConfig.h: 87: WDTCONbits.SWDTEN = 1;
 11792  005186  80D1               	bsf	4049,0,c	;volatile
 11793  005188  0012               	return		;funcret
 11794  00518A                     __end_of_clockConfig:
 11795                           	opt stack 0
 11796                           tblptru	equ	0xFF8
 11797                           tblptrh	equ	0xFF7
 11798                           tblptrl	equ	0xFF6
 11799                           tablat	equ	0xFF5
 11800                           prodh	equ	0xFF4
 11801                           prodl	equ	0xFF3
 11802                           intcon	equ	0xFF2
 11803                           postinc0	equ	0xFEE
 11804                           wreg	equ	0xFE8
 11805                           postdec1	equ	0xFE5
 11806                           fsr1l	equ	0xFE1
 11807                           indf2	equ	0xFDF
 11808                           postinc2	equ	0xFDE
 11809                           postdec2	equ	0xFDD
 11810                           fsr2h	equ	0xFDA
 11811                           fsr2l	equ	0xFD9
 11812                           status	equ	0xFD8
 11813                           
 11814 ;; *************** function _buttonChecking *****************
 11815 ;; Defined at:
 11816 ;;		line 9 in file "source/ButtonController.h"
 11817 ;; Parameters:    Size  Location     Type
 11818 ;;		None
 11819 ;; Auto vars:     Size  Location     Type
 11820 ;;		None
 11821 ;; Return value:  Size  Location     Type
 11822 ;;                  1    wreg      void 
 11823 ;; Registers used:
 11824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11825 ;; Tracked objects:
 11826 ;;		On entry : 0/0
 11827 ;;		On exit  : 0/0
 11828 ;;		Unchanged: 0/0
 11829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11830 ;;      Params:         0       0       0       0       0       0       0
 11831 ;;      Locals:         0       0       0       0       0       0       0
 11832 ;;      Temps:          0       0       0       0       0       0       0
 11833 ;;      Totals:         0       0       0       0       0       0       0
 11834 ;;Total ram usage:        0 bytes
 11835 ;; Hardware stack levels used:    1
 11836 ;; Hardware stack levels required when called:   13
 11837 ;; This function calls:
 11838 ;;		_delay_ms
 11839 ;;		_longPressDOWN
 11840 ;;		_longPressENTER
 11841 ;;		_longPressRETRO
 11842 ;;		_longPressUP
 11843 ;;		_pressDOWN
 11844 ;;		_pressENTER
 11845 ;;		_pressRETRO
 11846 ;;		_pressUP
 11847 ;;		_releaseDOWN
 11848 ;;		_releaseENTER
 11849 ;;		_releaseRETRO
 11850 ;;		_releaseUP
 11851 ;; This function is called by:
 11852 ;;		_main
 11853 ;; This function uses a non-reentrant model
 11854 ;;
 11855                           
 11856                           	psect	text38
 11857  002E0A                     __ptext38:
 11858                           	opt stack 0
 11859  002E0A                     _buttonChecking:
 11860                           	opt stack 17
 11861                           
 11862                           ;ButtonController.h: 10: if(!PORTAbits.RA2 && lastSttUP) {
 11863                           
 11864                           ;incstack = 0
 11865  002E0A  B480               	btfsc	3968,2,c	;volatile
 11866  002E0C  D00D               	goto	l664
 11867  002E0E  5042               	movf	_lastSttUP,w,c
 11868  002E10  B4D8               	btfsc	status,2,c
 11869  002E12  D00A               	goto	l664
 11870                           
 11871                           ;ButtonController.h: 11: lastSttUP = 0;
 11872  002E14  0E00               	movlw	0
 11873  002E16  6E42               	movwf	_lastSttUP,c
 11874                           
 11875                           ;ButtonController.h: 12: delay_ms(200);
 11876  002E18  0E00               	movlw	0
 11877  002E1A  0100               	movlb	0	; () banked
 11878  002E1C  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11879  002E1E  0EC8               	movlw	200
 11880  002E20  6F75               	movwf	delay_ms@del& (0+255),b
 11881  002E22  EC25  F027         	call	_delay_ms	;wreg free
 11882                           
 11883                           ;ButtonController.h: 13: }else if(PORTAbits.RA2 && !lastSttUP) {
 11884  002E26  D040               	goto	l9498
 11885  002E28                     l664:
 11886  002E28  A480               	btfss	3968,2,c	;volatile
 11887  002E2A  D013               	goto	l9476
 11888  002E2C  5042               	movf	_lastSttUP,w,c
 11889  002E2E  A4D8               	btfss	status,2,c
 11890  002E30  D010               	goto	l9476
 11891                           
 11892                           ;ButtonController.h: 14: lastSttUP = 1;
 11893  002E32  0E01               	movlw	1
 11894  002E34  6E42               	movwf	_lastSttUP,c
 11895                           
 11896                           ;ButtonController.h: 15: if(holdUPcont < 10)
 11897  002E36  0E0A               	movlw	10
 11898  002E38  0100               	movlb	0	; () banked
 11899  002E3A  61D3               	cpfslt	_holdUPcont& (0+255),b
 11900  002E3C  D002               	goto	l9474
 11901                           
 11902                           ; BSR set to: 0
 11903                           ;ButtonController.h: 16: pressUP();
 11904  002E3E  ECB2  F01F         	call	_pressUP	;wreg free
 11905  002E42                     l9474:
 11906                           
 11907                           ;ButtonController.h: 17: delay_ms(50);
 11908  002E42  0E00               	movlw	0
 11909  002E44  0100               	movlb	0	; () banked
 11910  002E46  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11911  002E48  0E32               	movlw	50
 11912  002E4A  6F75               	movwf	delay_ms@del& (0+255),b
 11913  002E4C  EC25  F027         	call	_delay_ms	;wreg free
 11914                           
 11915                           ;ButtonController.h: 18: }else if(PORTAbits.RA2 == lastSttUP) {
 11916  002E50  D02B               	goto	l9498
 11917  002E52                     l9476:
 11918  002E52  A480               	btfss	3968,2,c	;volatile
 11919  002E54  D002               	goto	u11610
 11920  002E56  0E01               	movlw	1
 11921  002E58  D001               	goto	u11616
 11922  002E5A                     u11610:
 11923  002E5A  0E00               	movlw	0
 11924  002E5C                     u11616:
 11925  002E5C  1842               	xorwf	_lastSttUP,w,c
 11926  002E5E  A4D8               	btfss	status,2,c
 11927  002E60  D023               	goto	l9498
 11928                           
 11929                           ;ButtonController.h: 19: if(PORTAbits.RA2) {
 11930  002E62  A480               	btfss	3968,2,c	;volatile
 11931  002E64  D006               	goto	l9484
 11932                           
 11933                           ;ButtonController.h: 20: holdUPcont = 0;
 11934  002E66  0E00               	movlw	0
 11935  002E68  0100               	movlb	0	; () banked
 11936  002E6A  6FD3               	movwf	_holdUPcont& (0+255),b
 11937                           
 11938                           ; BSR set to: 0
 11939                           ;ButtonController.h: 21: releaseUP();
 11940  002E6C  EC22  F029         	call	_releaseUP	;wreg free
 11941                           
 11942                           ;ButtonController.h: 22: }
 11943  002E70  D01B               	goto	l9498
 11944  002E72                     l9484:
 11945                           
 11946                           ;ButtonController.h: 23: else {
 11947                           ;ButtonController.h: 24: if(!UPsecurLock)
 11948  002E72  0101               	movlb	1	; () banked
 11949  002E74  5149               	movf	_UPsecurLock& (0+255),w,b
 11950  002E76  A4D8               	btfss	status,2,c
 11951  002E78  D002               	goto	l9488
 11952                           
 11953                           ; BSR set to: 1
 11954                           ;ButtonController.h: 25: holdUPcont++;
 11955  002E7A  0100               	movlb	0	; () banked
 11956  002E7C  2BD3               	incf	_holdUPcont& (0+255),f,b
 11957  002E7E                     l9488:
 11958                           
 11959                           ;ButtonController.h: 26: if(holdUPcont > 9) {
 11960  002E7E  0E09               	movlw	9
 11961  002E80  0100               	movlb	0	; () banked
 11962  002E82  65D3               	cpfsgt	_holdUPcont& (0+255),b
 11963  002E84  D00A               	goto	l9496
 11964                           
 11965                           ; BSR set to: 0
 11966                           ;ButtonController.h: 27: if(holdUPcont < 26)
 11967  002E86  0E1A               	movlw	26
 11968  002E88  0100               	movlb	0	; () banked
 11969  002E8A  61D3               	cpfslt	_holdUPcont& (0+255),b
 11970  002E8C  D003               	goto	l9494
 11971                           
 11972                           ; BSR set to: 0
 11973                           ;ButtonController.h: 28: longPressUP();
 11974  002E8E  EC91  F026         	call	_longPressUP	;wreg free
 11975  002E92  D003               	goto	l9496
 11976  002E94                     l9494:
 11977                           
 11978                           ;ButtonController.h: 29: else
 11979                           ;ButtonController.h: 30: UPsecurLock = 1;
 11980  002E94  0E01               	movlw	1
 11981  002E96  0101               	movlb	1	; () banked
 11982  002E98  6F49               	movwf	_UPsecurLock& (0+255),b
 11983  002E9A                     l9496:
 11984                           
 11985                           ;ButtonController.h: 31: }
 11986                           ;ButtonController.h: 32: delay_ms(200);
 11987  002E9A  0E00               	movlw	0
 11988  002E9C  0100               	movlb	0	; () banked
 11989  002E9E  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 11990  002EA0  0EC8               	movlw	200
 11991  002EA2  6F75               	movwf	delay_ms@del& (0+255),b
 11992  002EA4  EC25  F027         	call	_delay_ms	;wreg free
 11993  002EA8                     l9498:
 11994                           
 11995                           ;ButtonController.h: 33: }
 11996                           ;ButtonController.h: 34: }
 11997                           ;ButtonController.h: 35: if(!PORTAbits.RA3 && lastSttDOWN) {
 11998  002EA8  B680               	btfsc	3968,3,c	;volatile
 11999  002EAA  D00D               	goto	l676
 12000  002EAC  503F               	movf	_lastSttDOWN,w,c
 12001  002EAE  B4D8               	btfsc	status,2,c
 12002  002EB0  D00A               	goto	l676
 12003                           
 12004                           ;ButtonController.h: 36: lastSttDOWN = 0;
 12005  002EB2  0E00               	movlw	0
 12006  002EB4  6E3F               	movwf	_lastSttDOWN,c
 12007                           
 12008                           ;ButtonController.h: 37: delay_ms(200);
 12009  002EB6  0E00               	movlw	0
 12010  002EB8  0100               	movlb	0	; () banked
 12011  002EBA  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12012  002EBC  0EC8               	movlw	200
 12013  002EBE  6F75               	movwf	delay_ms@del& (0+255),b
 12014  002EC0  EC25  F027         	call	_delay_ms	;wreg free
 12015                           
 12016                           ;ButtonController.h: 38: }else if(PORTAbits.RA3 && !lastSttDOWN) {
 12017  002EC4  D03A               	goto	l9538
 12018  002EC6                     l676:
 12019  002EC6  A680               	btfss	3968,3,c	;volatile
 12020  002EC8  D012               	goto	l9516
 12021  002ECA  503F               	movf	_lastSttDOWN,w,c
 12022  002ECC  A4D8               	btfss	status,2,c
 12023  002ECE  D00F               	goto	l9516
 12024                           
 12025                           ;ButtonController.h: 39: lastSttDOWN = 1;
 12026  002ED0  0E01               	movlw	1
 12027  002ED2  6E3F               	movwf	_lastSttDOWN,c
 12028                           
 12029                           ;ButtonController.h: 40: if(holdDOWNcont < 10)
 12030  002ED4  0E0A               	movlw	10
 12031  002ED6  6047               	cpfslt	_holdDOWNcont,c
 12032  002ED8  D002               	goto	l9514
 12033                           
 12034                           ;ButtonController.h: 41: pressDOWN();
 12035  002EDA  EC3E  F021         	call	_pressDOWN	;wreg free
 12036  002EDE                     l9514:
 12037                           
 12038                           ;ButtonController.h: 42: delay_ms(50);
 12039  002EDE  0E00               	movlw	0
 12040  002EE0  0100               	movlb	0	; () banked
 12041  002EE2  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12042  002EE4  0E32               	movlw	50
 12043  002EE6  6F75               	movwf	delay_ms@del& (0+255),b
 12044  002EE8  EC25  F027         	call	_delay_ms	;wreg free
 12045                           
 12046                           ;ButtonController.h: 43: }else if(PORTAbits.RA3 == lastSttDOWN) {
 12047  002EEC  D026               	goto	l9538
 12048  002EEE                     l9516:
 12049  002EEE  A680               	btfss	3968,3,c	;volatile
 12050  002EF0  D002               	goto	u11720
 12051  002EF2  0E01               	movlw	1
 12052  002EF4  D001               	goto	u11726
 12053  002EF6                     u11720:
 12054  002EF6  0E00               	movlw	0
 12055  002EF8                     u11726:
 12056  002EF8  183F               	xorwf	_lastSttDOWN,w,c
 12057  002EFA  A4D8               	btfss	status,2,c
 12058  002EFC  D01E               	goto	l9538
 12059                           
 12060                           ;ButtonController.h: 44: if(PORTAbits.RA3) {
 12061  002EFE  A680               	btfss	3968,3,c	;volatile
 12062  002F00  D005               	goto	l9524
 12063                           
 12064                           ;ButtonController.h: 45: holdDOWNcont = 0;
 12065  002F02  0E00               	movlw	0
 12066  002F04  6E47               	movwf	_holdDOWNcont,c
 12067                           
 12068                           ;ButtonController.h: 46: releaseDOWN();
 12069  002F06  EC28  F029         	call	_releaseDOWN	;wreg free
 12070                           
 12071                           ;ButtonController.h: 47: }
 12072  002F0A  D017               	goto	l9538
 12073  002F0C                     l9524:
 12074                           
 12075                           ;ButtonController.h: 48: else {
 12076                           ;ButtonController.h: 49: if(!DOWNsecurLock)
 12077  002F0C  0101               	movlb	1	; () banked
 12078  002F0E  5144               	movf	_DOWNsecurLock& (0+255),w,b
 12079  002F10  B4D8               	btfsc	status,2,c
 12080                           
 12081                           ; BSR set to: 1
 12082                           ;ButtonController.h: 50: holdDOWNcont++;
 12083  002F12  2A47               	incf	_holdDOWNcont,f,c
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;ButtonController.h: 51: if(holdDOWNcont > 9) {
 12087                           
 12088                           ; BSR set to: 1
 12089  002F14  0E09               	movlw	9
 12090  002F16  6447               	cpfsgt	_holdDOWNcont,c
 12091  002F18  D009               	goto	l9536
 12092                           
 12093                           ; BSR set to: 1
 12094                           ;ButtonController.h: 52: if(holdDOWNcont < 26)
 12095  002F1A  0E1A               	movlw	26
 12096  002F1C  6047               	cpfslt	_holdDOWNcont,c
 12097  002F1E  D003               	goto	l9534
 12098                           
 12099                           ; BSR set to: 1
 12100                           ;ButtonController.h: 53: longPressDOWN();
 12101  002F20  EC2E  F029         	call	_longPressDOWN	;wreg free
 12102  002F24  D003               	goto	l9536
 12103  002F26                     l9534:
 12104                           
 12105                           ;ButtonController.h: 54: else
 12106                           ;ButtonController.h: 55: DOWNsecurLock = 1;
 12107  002F26  0E01               	movlw	1
 12108  002F28  0101               	movlb	1	; () banked
 12109  002F2A  6F44               	movwf	_DOWNsecurLock& (0+255),b
 12110  002F2C                     l9536:
 12111                           
 12112                           ;ButtonController.h: 56: }
 12113                           ;ButtonController.h: 57: delay_ms(200);
 12114  002F2C  0E00               	movlw	0
 12115  002F2E  0100               	movlb	0	; () banked
 12116  002F30  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12117  002F32  0EC8               	movlw	200
 12118  002F34  6F75               	movwf	delay_ms@del& (0+255),b
 12119  002F36  EC25  F027         	call	_delay_ms	;wreg free
 12120  002F3A                     l9538:
 12121                           
 12122                           ;ButtonController.h: 58: }
 12123                           ;ButtonController.h: 59: }
 12124                           ;ButtonController.h: 60: if(!PORTAbits.RA4 && lastSttRETRO) {
 12125  002F3A  B880               	btfsc	3968,4,c	;volatile
 12126  002F3C  D00D               	goto	l688
 12127  002F3E  5041               	movf	_lastSttRETRO,w,c
 12128  002F40  B4D8               	btfsc	status,2,c
 12129  002F42  D00A               	goto	l688
 12130                           
 12131                           ;ButtonController.h: 61: lastSttRETRO = 0;
 12132  002F44  0E00               	movlw	0
 12133  002F46  6E41               	movwf	_lastSttRETRO,c
 12134                           
 12135                           ;ButtonController.h: 62: delay_ms(200);
 12136  002F48  0E00               	movlw	0
 12137  002F4A  0100               	movlb	0	; () banked
 12138  002F4C  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12139  002F4E  0EC8               	movlw	200
 12140  002F50  6F75               	movwf	delay_ms@del& (0+255),b
 12141  002F52  EC25  F027         	call	_delay_ms	;wreg free
 12142                           
 12143                           ;ButtonController.h: 63: }else if(PORTAbits.RA4 && !lastSttRETRO) {
 12144  002F56  D03A               	goto	l9576
 12145  002F58                     l688:
 12146  002F58  A880               	btfss	3968,4,c	;volatile
 12147  002F5A  D012               	goto	l9554
 12148  002F5C  5041               	movf	_lastSttRETRO,w,c
 12149  002F5E  A4D8               	btfss	status,2,c
 12150  002F60  D00F               	goto	l9554
 12151                           
 12152                           ;ButtonController.h: 64: lastSttRETRO = 1;
 12153  002F62  0E01               	movlw	1
 12154  002F64  6E41               	movwf	_lastSttRETRO,c
 12155                           
 12156                           ;ButtonController.h: 65: if(holdRETROcont < 10)
 12157  002F66  0E0A               	movlw	10
 12158  002F68  6048               	cpfslt	_holdRETROcont,c
 12159  002F6A  D002               	goto	l691
 12160                           
 12161                           ;ButtonController.h: 66: pressRETRO();
 12162  002F6C  EC02  F027         	call	_pressRETRO	;wreg free
 12163  002F70                     l691:
 12164                           
 12165                           ;ButtonController.h: 67: delay_ms(50);
 12166  002F70  0E00               	movlw	0
 12167  002F72  0100               	movlb	0	; () banked
 12168  002F74  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12169  002F76  0E32               	movlw	50
 12170  002F78  6F75               	movwf	delay_ms@del& (0+255),b
 12171  002F7A  EC25  F027         	call	_delay_ms	;wreg free
 12172                           
 12173                           ;ButtonController.h: 68: }else if(PORTAbits.RA4 == lastSttRETRO) {
 12174  002F7E  D026               	goto	l9576
 12175  002F80                     l9554:
 12176  002F80  A880               	btfss	3968,4,c	;volatile
 12177  002F82  D002               	goto	u11830
 12178  002F84  0E01               	movlw	1
 12179  002F86  D001               	goto	u11836
 12180  002F88                     u11830:
 12181  002F88  0E00               	movlw	0
 12182  002F8A                     u11836:
 12183  002F8A  1841               	xorwf	_lastSttRETRO,w,c
 12184  002F8C  A4D8               	btfss	status,2,c
 12185  002F8E  D01E               	goto	l9576
 12186                           
 12187                           ;ButtonController.h: 69: if(PORTAbits.RA4) {
 12188  002F90  A880               	btfss	3968,4,c	;volatile
 12189  002F92  D005               	goto	l9562
 12190                           
 12191                           ;ButtonController.h: 70: holdRETROcont = 0;
 12192  002F94  0E00               	movlw	0
 12193  002F96  6E48               	movwf	_holdRETROcont,c
 12194                           
 12195                           ;ButtonController.h: 71: releaseRETRO();
 12196  002F98  EC14  F029         	call	_releaseRETRO	;wreg free
 12197                           
 12198                           ;ButtonController.h: 72: }
 12199  002F9C  D017               	goto	l9576
 12200  002F9E                     l9562:
 12201                           
 12202                           ;ButtonController.h: 73: else {
 12203                           ;ButtonController.h: 74: if(!RETROsecurLock)
 12204  002F9E  0101               	movlb	1	; () banked
 12205  002FA0  5148               	movf	_RETROsecurLock& (0+255),w,b
 12206  002FA2  B4D8               	btfsc	status,2,c
 12207                           
 12208                           ; BSR set to: 1
 12209                           ;ButtonController.h: 75: holdRETROcont++;
 12210  002FA4  2A48               	incf	_holdRETROcont,f,c
 12211                           
 12212                           ; BSR set to: 1
 12213                           ;ButtonController.h: 76: if(holdRETROcont > 9) {
 12214                           
 12215                           ; BSR set to: 1
 12216  002FA6  0E09               	movlw	9
 12217  002FA8  6448               	cpfsgt	_holdRETROcont,c
 12218  002FAA  D009               	goto	l9574
 12219                           
 12220                           ; BSR set to: 1
 12221                           ;ButtonController.h: 77: if(holdRETROcont < 26)
 12222  002FAC  0E1A               	movlw	26
 12223  002FAE  6048               	cpfslt	_holdRETROcont,c
 12224  002FB0  D003               	goto	l9572
 12225                           
 12226                           ; BSR set to: 1
 12227                           ;ButtonController.h: 78: longPressRETRO();
 12228  002FB2  EC8A  F027         	call	_longPressRETRO	;wreg free
 12229  002FB6  D003               	goto	l9574
 12230  002FB8                     l9572:
 12231                           
 12232                           ;ButtonController.h: 79: else
 12233                           ;ButtonController.h: 80: RETROsecurLock = 1;
 12234  002FB8  0E01               	movlw	1
 12235  002FBA  0101               	movlb	1	; () banked
 12236  002FBC  6F48               	movwf	_RETROsecurLock& (0+255),b
 12237  002FBE                     l9574:
 12238                           
 12239                           ;ButtonController.h: 81: }
 12240                           ;ButtonController.h: 82: delay_ms(200);
 12241  002FBE  0E00               	movlw	0
 12242  002FC0  0100               	movlb	0	; () banked
 12243  002FC2  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12244  002FC4  0EC8               	movlw	200
 12245  002FC6  6F75               	movwf	delay_ms@del& (0+255),b
 12246  002FC8  EC25  F027         	call	_delay_ms	;wreg free
 12247  002FCC                     l9576:
 12248                           
 12249                           ;ButtonController.h: 83: }
 12250                           ;ButtonController.h: 84: }
 12251                           ;ButtonController.h: 85: if(!PORTAbits.RA5 && lastSttENTER) {
 12252  002FCC  BA80               	btfsc	3968,5,c	;volatile
 12253  002FCE  D00D               	goto	l700
 12254  002FD0  5040               	movf	_lastSttENTER,w,c
 12255  002FD2  B4D8               	btfsc	status,2,c
 12256  002FD4  D00A               	goto	l700
 12257                           
 12258                           ;ButtonController.h: 86: lastSttENTER = 0;
 12259  002FD6  0E00               	movlw	0
 12260  002FD8  6E40               	movwf	_lastSttENTER,c
 12261                           
 12262                           ;ButtonController.h: 87: delay_ms(200);
 12263  002FDA  0E00               	movlw	0
 12264  002FDC  0100               	movlb	0	; () banked
 12265  002FDE  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12266  002FE0  0EC8               	movlw	200
 12267  002FE2  6F75               	movwf	delay_ms@del& (0+255),b
 12268  002FE4  EC25  F027         	call	_delay_ms	;wreg free
 12269                           
 12270                           ;ButtonController.h: 88: }else if(PORTAbits.RA5 && !lastSttENTER) {
 12271  002FE8  0012               	return	
 12272  002FEA                     l700:
 12273  002FEA  AA80               	btfss	3968,5,c	;volatile
 12274  002FEC  D013               	goto	l9594
 12275  002FEE  5040               	movf	_lastSttENTER,w,c
 12276  002FF0  A4D8               	btfss	status,2,c
 12277  002FF2  D010               	goto	l9594
 12278                           
 12279                           ;ButtonController.h: 89: lastSttENTER = 1;
 12280  002FF4  0E01               	movlw	1
 12281  002FF6  6E40               	movwf	_lastSttENTER,c
 12282                           
 12283                           ;ButtonController.h: 90: if(holdENTERcont < 10)
 12284  002FF8  0E0A               	movlw	10
 12285  002FFA  0100               	movlb	0	; () banked
 12286  002FFC  61D2               	cpfslt	_holdENTERcont& (0+255),b
 12287  002FFE  D002               	goto	l9592
 12288                           
 12289                           ; BSR set to: 0
 12290                           ;ButtonController.h: 91: pressENTER();
 12291  003000  EC78  F01B         	call	_pressENTER	;wreg free
 12292  003004                     l9592:
 12293                           
 12294                           ;ButtonController.h: 92: delay_ms(50);
 12295  003004  0E00               	movlw	0
 12296  003006  0100               	movlb	0	; () banked
 12297  003008  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12298  00300A  0E32               	movlw	50
 12299  00300C  6F75               	movwf	delay_ms@del& (0+255),b
 12300  00300E  EC25  F027         	call	_delay_ms	;wreg free
 12301                           
 12302                           ;ButtonController.h: 93: }else if(PORTAbits.RA5 == lastSttENTER) {
 12303  003012  0012               	return	
 12304  003014                     l9594:
 12305  003014  AA80               	btfss	3968,5,c	;volatile
 12306  003016  D002               	goto	u11940
 12307  003018  0E01               	movlw	1
 12308  00301A  D001               	goto	u11946
 12309  00301C                     u11940:
 12310  00301C  0E00               	movlw	0
 12311  00301E                     u11946:
 12312  00301E  1840               	xorwf	_lastSttENTER,w,c
 12313  003020  A4D8               	btfss	status,2,c
 12314  003022  0012               	return	
 12315                           
 12316                           ;ButtonController.h: 94: if(PORTAbits.RA5) {
 12317  003024  AA80               	btfss	3968,5,c	;volatile
 12318  003026  D006               	goto	l9602
 12319                           
 12320                           ;ButtonController.h: 95: holdENTERcont = 0;
 12321  003028  0E00               	movlw	0
 12322  00302A  0100               	movlb	0	; () banked
 12323  00302C  6FD2               	movwf	_holdENTERcont& (0+255),b
 12324                           
 12325                           ; BSR set to: 0
 12326                           ;ButtonController.h: 96: releaseENTER();
 12327  00302E  EC1B  F029         	call	_releaseENTER	;wreg free
 12328                           
 12329                           ;ButtonController.h: 97: }
 12330  003032  0012               	return	
 12331  003034                     l9602:
 12332                           
 12333                           ;ButtonController.h: 98: else {
 12334                           ;ButtonController.h: 99: if(!ENTERsecurLock)
 12335  003034  0101               	movlb	1	; () banked
 12336  003036  5146               	movf	_ENTERsecurLock& (0+255),w,b
 12337  003038  A4D8               	btfss	status,2,c
 12338  00303A  D002               	goto	l9606
 12339                           
 12340                           ; BSR set to: 1
 12341                           ;ButtonController.h: 100: holdENTERcont++;
 12342  00303C  0100               	movlb	0	; () banked
 12343  00303E  2BD2               	incf	_holdENTERcont& (0+255),f,b
 12344  003040                     l9606:
 12345                           
 12346                           ;ButtonController.h: 101: if(holdENTERcont > 9) {
 12347  003040  0E09               	movlw	9
 12348  003042  0100               	movlb	0	; () banked
 12349  003044  65D2               	cpfsgt	_holdENTERcont& (0+255),b
 12350  003046  D00A               	goto	l9614
 12351                           
 12352                           ; BSR set to: 0
 12353                           ;ButtonController.h: 102: if(holdENTERcont < 26)
 12354  003048  0E1A               	movlw	26
 12355  00304A  0100               	movlb	0	; () banked
 12356  00304C  61D2               	cpfslt	_holdENTERcont& (0+255),b
 12357  00304E  D003               	goto	l9612
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;ButtonController.h: 103: longPressENTER();
 12361  003050  EC28  F026         	call	_longPressENTER	;wreg free
 12362  003054  D003               	goto	l9614
 12363  003056                     l9612:
 12364                           
 12365                           ;ButtonController.h: 104: else
 12366                           ;ButtonController.h: 105: ENTERsecurLock = 1;
 12367  003056  0E01               	movlw	1
 12368  003058  0101               	movlb	1	; () banked
 12369  00305A  6F46               	movwf	_ENTERsecurLock& (0+255),b
 12370  00305C                     l9614:
 12371                           
 12372                           ;ButtonController.h: 106: }
 12373                           ;ButtonController.h: 107: delay_ms(200);
 12374  00305C  0E00               	movlw	0
 12375  00305E  0100               	movlb	0	; () banked
 12376  003060  6F76               	movwf	(delay_ms@del+1)& (0+255),b
 12377  003062  0EC8               	movlw	200
 12378  003064  6F75               	movwf	delay_ms@del& (0+255),b
 12379  003066  EC25  F027         	call	_delay_ms	;wreg free
 12380  00306A  0012               	return	
 12381  00306C                     __end_of_buttonChecking:
 12382                           	opt stack 0
 12383                           tblptru	equ	0xFF8
 12384                           tblptrh	equ	0xFF7
 12385                           tblptrl	equ	0xFF6
 12386                           tablat	equ	0xFF5
 12387                           prodh	equ	0xFF4
 12388                           prodl	equ	0xFF3
 12389                           intcon	equ	0xFF2
 12390                           postinc0	equ	0xFEE
 12391                           wreg	equ	0xFE8
 12392                           postdec1	equ	0xFE5
 12393                           fsr1l	equ	0xFE1
 12394                           indf2	equ	0xFDF
 12395                           postinc2	equ	0xFDE
 12396                           postdec2	equ	0xFDD
 12397                           fsr2h	equ	0xFDA
 12398                           fsr2l	equ	0xFD9
 12399                           status	equ	0xFD8
 12400                           
 12401 ;; *************** function _releaseUP *****************
 12402 ;; Defined at:
 12403 ;;		line 160 in file "source/DisplayProtocol.h"
 12404 ;; Parameters:    Size  Location     Type
 12405 ;;		None
 12406 ;; Auto vars:     Size  Location     Type
 12407 ;;		None
 12408 ;; Return value:  Size  Location     Type
 12409 ;;                  1    wreg      void 
 12410 ;; Registers used:
 12411 ;;		wreg, status,2
 12412 ;; Tracked objects:
 12413 ;;		On entry : 0/0
 12414 ;;		On exit  : 0/0
 12415 ;;		Unchanged: 0/0
 12416 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12417 ;;      Params:         0       0       0       0       0       0       0
 12418 ;;      Locals:         0       0       0       0       0       0       0
 12419 ;;      Temps:          0       0       0       0       0       0       0
 12420 ;;      Totals:         0       0       0       0       0       0       0
 12421 ;;Total ram usage:        0 bytes
 12422 ;; Hardware stack levels used:    1
 12423 ;; Hardware stack levels required when called:    8
 12424 ;; This function calls:
 12425 ;;		Nothing
 12426 ;; This function is called by:
 12427 ;;		_buttonChecking
 12428 ;; This function uses a non-reentrant model
 12429 ;;
 12430                           
 12431                           	psect	text39
 12432  005244                     __ptext39:
 12433                           	opt stack 0
 12434  005244                     _releaseUP:
 12435                           	opt stack 21
 12436                           
 12437                           ;DisplayProtocol.h: 161: UPisLP = 0;
 12438                           
 12439                           ;incstack = 0
 12440  005244  0E00               	movlw	0
 12441  005246  6E46               	movwf	_UPisLP,c
 12442                           
 12443                           ;DisplayProtocol.h: 162: UPsecurLock = 0;
 12444  005248  0E00               	movlw	0
 12445  00524A  0101               	movlb	1	; () banked
 12446  00524C  6F49               	movwf	_UPsecurLock& (0+255),b
 12447                           
 12448                           ; BSR set to: 1
 12449  00524E  0012               	return		;funcret
 12450  005250                     __end_of_releaseUP:
 12451                           	opt stack 0
 12452                           tblptru	equ	0xFF8
 12453                           tblptrh	equ	0xFF7
 12454                           tblptrl	equ	0xFF6
 12455                           tablat	equ	0xFF5
 12456                           prodh	equ	0xFF4
 12457                           prodl	equ	0xFF3
 12458                           intcon	equ	0xFF2
 12459                           postinc0	equ	0xFEE
 12460                           wreg	equ	0xFE8
 12461                           postdec1	equ	0xFE5
 12462                           fsr1l	equ	0xFE1
 12463                           indf2	equ	0xFDF
 12464                           postinc2	equ	0xFDE
 12465                           postdec2	equ	0xFDD
 12466                           fsr2h	equ	0xFDA
 12467                           fsr2l	equ	0xFD9
 12468                           status	equ	0xFD8
 12469                           
 12470 ;; *************** function _releaseRETRO *****************
 12471 ;; Defined at:
 12472 ;;		line 243 in file "source/DisplayProtocol.h"
 12473 ;; Parameters:    Size  Location     Type
 12474 ;;		None
 12475 ;; Auto vars:     Size  Location     Type
 12476 ;;		None
 12477 ;; Return value:  Size  Location     Type
 12478 ;;                  1    wreg      void 
 12479 ;; Registers used:
 12480 ;;		wreg, status,2
 12481 ;; Tracked objects:
 12482 ;;		On entry : 0/0
 12483 ;;		On exit  : 0/0
 12484 ;;		Unchanged: 0/0
 12485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12486 ;;      Params:         0       0       0       0       0       0       0
 12487 ;;      Locals:         0       0       0       0       0       0       0
 12488 ;;      Temps:          0       0       0       0       0       0       0
 12489 ;;      Totals:         0       0       0       0       0       0       0
 12490 ;;Total ram usage:        0 bytes
 12491 ;; Hardware stack levels used:    1
 12492 ;; Hardware stack levels required when called:    8
 12493 ;; This function calls:
 12494 ;;		Nothing
 12495 ;; This function is called by:
 12496 ;;		_buttonChecking
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           	psect	text40
 12501  005228                     __ptext40:
 12502                           	opt stack 0
 12503  005228                     _releaseRETRO:
 12504                           	opt stack 21
 12505                           
 12506                           ;DisplayProtocol.h: 244: RETROisLP = 0;
 12507                           
 12508                           ; BSR set to: 1
 12509                           ;incstack = 0
 12510  005228  0E00               	movlw	0
 12511  00522A  0101               	movlb	1	; () banked
 12512  00522C  6F47               	movwf	_RETROisLP& (0+255),b
 12513                           
 12514                           ;DisplayProtocol.h: 245: RETROsecurLock = 0;
 12515  00522E  0E00               	movlw	0
 12516  005230  0101               	movlb	1	; () banked
 12517  005232  6F48               	movwf	_RETROsecurLock& (0+255),b
 12518                           
 12519                           ; BSR set to: 1
 12520  005234  0012               	return		;funcret
 12521  005236                     __end_of_releaseRETRO:
 12522                           	opt stack 0
 12523                           tblptru	equ	0xFF8
 12524                           tblptrh	equ	0xFF7
 12525                           tblptrl	equ	0xFF6
 12526                           tablat	equ	0xFF5
 12527                           prodh	equ	0xFF4
 12528                           prodl	equ	0xFF3
 12529                           intcon	equ	0xFF2
 12530                           postinc0	equ	0xFEE
 12531                           wreg	equ	0xFE8
 12532                           postdec1	equ	0xFE5
 12533                           fsr1l	equ	0xFE1
 12534                           indf2	equ	0xFDF
 12535                           postinc2	equ	0xFDE
 12536                           postdec2	equ	0xFDD
 12537                           fsr2h	equ	0xFDA
 12538                           fsr2l	equ	0xFD9
 12539                           status	equ	0xFD8
 12540                           
 12541 ;; *************** function _releaseENTER *****************
 12542 ;; Defined at:
 12543 ;;		line 334 in file "source/DisplayProtocol.h"
 12544 ;; Parameters:    Size  Location     Type
 12545 ;;		None
 12546 ;; Auto vars:     Size  Location     Type
 12547 ;;		None
 12548 ;; Return value:  Size  Location     Type
 12549 ;;                  1    wreg      void 
 12550 ;; Registers used:
 12551 ;;		wreg, status,2
 12552 ;; Tracked objects:
 12553 ;;		On entry : 0/0
 12554 ;;		On exit  : 0/0
 12555 ;;		Unchanged: 0/0
 12556 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12557 ;;      Params:         0       0       0       0       0       0       0
 12558 ;;      Locals:         0       0       0       0       0       0       0
 12559 ;;      Temps:          0       0       0       0       0       0       0
 12560 ;;      Totals:         0       0       0       0       0       0       0
 12561 ;;Total ram usage:        0 bytes
 12562 ;; Hardware stack levels used:    1
 12563 ;; Hardware stack levels required when called:    8
 12564 ;; This function calls:
 12565 ;;		Nothing
 12566 ;; This function is called by:
 12567 ;;		_buttonChecking
 12568 ;; This function uses a non-reentrant model
 12569 ;;
 12570                           
 12571                           	psect	text41
 12572  005236                     __ptext41:
 12573                           	opt stack 0
 12574  005236                     _releaseENTER:
 12575                           	opt stack 21
 12576                           
 12577                           ;DisplayProtocol.h: 335: ENTERisLP = 0;
 12578                           
 12579                           ; BSR set to: 1
 12580                           ;incstack = 0
 12581  005236  0E00               	movlw	0
 12582  005238  0101               	movlb	1	; () banked
 12583  00523A  6F45               	movwf	_ENTERisLP& (0+255),b
 12584                           
 12585                           ;DisplayProtocol.h: 336: ENTERsecurLock = 0;
 12586  00523C  0E00               	movlw	0
 12587  00523E  0101               	movlb	1	; () banked
 12588  005240  6F46               	movwf	_ENTERsecurLock& (0+255),b
 12589                           
 12590                           ; BSR set to: 1
 12591  005242  0012               	return		;funcret
 12592  005244                     __end_of_releaseENTER:
 12593                           	opt stack 0
 12594                           tblptru	equ	0xFF8
 12595                           tblptrh	equ	0xFF7
 12596                           tblptrl	equ	0xFF6
 12597                           tablat	equ	0xFF5
 12598                           prodh	equ	0xFF4
 12599                           prodl	equ	0xFF3
 12600                           intcon	equ	0xFF2
 12601                           postinc0	equ	0xFEE
 12602                           wreg	equ	0xFE8
 12603                           postdec1	equ	0xFE5
 12604                           fsr1l	equ	0xFE1
 12605                           indf2	equ	0xFDF
 12606                           postinc2	equ	0xFDE
 12607                           postdec2	equ	0xFDD
 12608                           fsr2h	equ	0xFDA
 12609                           fsr2l	equ	0xFD9
 12610                           status	equ	0xFD8
 12611                           
 12612 ;; *************** function _releaseDOWN *****************
 12613 ;; Defined at:
 12614 ;;		line 215 in file "source/DisplayProtocol.h"
 12615 ;; Parameters:    Size  Location     Type
 12616 ;;		None
 12617 ;; Auto vars:     Size  Location     Type
 12618 ;;		None
 12619 ;; Return value:  Size  Location     Type
 12620 ;;                  1    wreg      void 
 12621 ;; Registers used:
 12622 ;;		wreg, status,2
 12623 ;; Tracked objects:
 12624 ;;		On entry : 0/0
 12625 ;;		On exit  : 0/0
 12626 ;;		Unchanged: 0/0
 12627 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12628 ;;      Params:         0       0       0       0       0       0       0
 12629 ;;      Locals:         0       0       0       0       0       0       0
 12630 ;;      Temps:          0       0       0       0       0       0       0
 12631 ;;      Totals:         0       0       0       0       0       0       0
 12632 ;;Total ram usage:        0 bytes
 12633 ;; Hardware stack levels used:    1
 12634 ;; Hardware stack levels required when called:    8
 12635 ;; This function calls:
 12636 ;;		Nothing
 12637 ;; This function is called by:
 12638 ;;		_buttonChecking
 12639 ;; This function uses a non-reentrant model
 12640 ;;
 12641                           
 12642                           	psect	text42
 12643  005250                     __ptext42:
 12644                           	opt stack 0
 12645  005250                     _releaseDOWN:
 12646                           	opt stack 21
 12647                           
 12648                           ;DisplayProtocol.h: 216: DOWNisLP = 0;
 12649                           
 12650                           ; BSR set to: 1
 12651                           ;incstack = 0
 12652  005250  0E00               	movlw	0
 12653  005252  6E45               	movwf	_DOWNisLP,c
 12654                           
 12655                           ;DisplayProtocol.h: 217: DOWNsecurLock = 0;
 12656  005254  0E00               	movlw	0
 12657  005256  0101               	movlb	1	; () banked
 12658  005258  6F44               	movwf	_DOWNsecurLock& (0+255),b
 12659                           
 12660                           ; BSR set to: 1
 12661  00525A  0012               	return		;funcret
 12662  00525C                     __end_of_releaseDOWN:
 12663                           	opt stack 0
 12664                           tblptru	equ	0xFF8
 12665                           tblptrh	equ	0xFF7
 12666                           tblptrl	equ	0xFF6
 12667                           tablat	equ	0xFF5
 12668                           prodh	equ	0xFF4
 12669                           prodl	equ	0xFF3
 12670                           intcon	equ	0xFF2
 12671                           postinc0	equ	0xFEE
 12672                           wreg	equ	0xFE8
 12673                           postdec1	equ	0xFE5
 12674                           fsr1l	equ	0xFE1
 12675                           indf2	equ	0xFDF
 12676                           postinc2	equ	0xFDE
 12677                           postdec2	equ	0xFDD
 12678                           fsr2h	equ	0xFDA
 12679                           fsr2l	equ	0xFD9
 12680                           status	equ	0xFD8
 12681                           
 12682 ;; *************** function _pressUP *****************
 12683 ;; Defined at:
 12684 ;;		line 101 in file "source/DisplayProtocol.h"
 12685 ;; Parameters:    Size  Location     Type
 12686 ;;		None
 12687 ;; Auto vars:     Size  Location     Type
 12688 ;;		None
 12689 ;; Return value:  Size  Location     Type
 12690 ;;                  1    wreg      void 
 12691 ;; Registers used:
 12692 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 12693 ;; Tracked objects:
 12694 ;;		On entry : 0/0
 12695 ;;		On exit  : 0/0
 12696 ;;		Unchanged: 0/0
 12697 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12698 ;;      Params:         0       0       0       0       0       0       0
 12699 ;;      Locals:         0       0       0       0       0       0       0
 12700 ;;      Temps:          0       1       0       0       0       0       0
 12701 ;;      Totals:         0       1       0       0       0       0       0
 12702 ;;Total ram usage:        1 bytes
 12703 ;; Hardware stack levels used:    1
 12704 ;; Hardware stack levels required when called:    8
 12705 ;; This function calls:
 12706 ;;		Nothing
 12707 ;; This function is called by:
 12708 ;;		_buttonChecking
 12709 ;; This function uses a non-reentrant model
 12710 ;;
 12711                           
 12712                           	psect	text43
 12713  003F64                     __ptext43:
 12714                           	opt stack 0
 12715  003F64                     _pressUP:
 12716                           	opt stack 21
 12717                           
 12718                           ;DisplayProtocol.h: 102: if (actualScreen == 0 || actualScreen == 4) {
 12719                           
 12720                           ; BSR set to: 1
 12721                           ;incstack = 0
 12722  003F64  0100               	movlb	0	; () banked
 12723  003F66  51D1               	movf	_actualScreen& (0+255),w,b
 12724  003F68  B4D8               	btfsc	status,2,c
 12725  003F6A  D005               	goto	l6520
 12726                           
 12727                           ; BSR set to: 0
 12728  003F6C  0E04               	movlw	4
 12729  003F6E  0100               	movlb	0	; () banked
 12730  003F70  19D1               	xorwf	_actualScreen& (0+255),w,b
 12731  003F72  A4D8               	btfss	status,2,c
 12732  003F74  D00C               	goto	l6526
 12733  003F76                     l6520:
 12734                           
 12735                           ; BSR set to: 0
 12736                           ;DisplayProtocol.h: 103: menuSection++;
 12737  003F76  0100               	movlb	0	; () banked
 12738  003F78  2BD4               	incf	_menuSection& (0+255),f,b
 12739                           
 12740                           ; BSR set to: 0
 12741                           ;DisplayProtocol.h: 104: if (menuSection > 6)
 12742  003F7A  0100               	movlb	0	; () banked
 12743  003F7C  51D4               	movf	_menuSection& (0+255),w,b
 12744  003F7E  0A80               	xorlw	128
 12745  003F80  0F79               	addlw	-135
 12746  003F82  A0D8               	btfss	status,0,c
 12747  003F84  0012               	return	
 12748                           
 12749                           ; BSR set to: 0
 12750                           ;DisplayProtocol.h: 105: menuSection = 0;
 12751  003F86  0E00               	movlw	0
 12752  003F88  0100               	movlb	0	; () banked
 12753  003F8A  6FD4               	movwf	_menuSection& (0+255),b
 12754                           
 12755                           ; BSR set to: 0
 12756                           ;DisplayProtocol.h: 106: } else if (actualScreen == 1) {
 12757  003F8C  0012               	return	
 12758  003F8E                     l6526:
 12759                           
 12760                           ; BSR set to: 0
 12761  003F8E  0100               	movlb	0	; () banked
 12762  003F90  05D1               	decf	_actualScreen& (0+255),w,b
 12763  003F92  A4D8               	btfss	status,2,c
 12764  003F94  D024               	goto	l6532
 12765                           
 12766                           ; BSR set to: 0
 12767                           ;DisplayProtocol.h: 107: introducido[passSection]++;
 12768  003F96  0100               	movlb	0	; () banked
 12769  003F98  51D5               	movf	_passSection& (0+255),w,b
 12770  003F9A  0D01               	mullw	1
 12771  003F9C  0E35               	movlw	low _introducido
 12772  003F9E  24F3               	addwf	prodl,w,c
 12773  003FA0  6ED9               	movwf	fsr2l,c
 12774  003FA2  0E01               	movlw	high _introducido
 12775  003FA4  20F4               	addwfc	prodh,w,c
 12776  003FA6  6EDA               	movwf	fsr2h,c
 12777  003FA8  2ADF               	incf	indf2,f,c
 12778                           
 12779                           ;DisplayProtocol.h: 108: if (introducido[passSection] > 9)
 12780  003FAA  0100               	movlb	0	; () banked
 12781  003FAC  51D5               	movf	_passSection& (0+255),w,b
 12782  003FAE  0D01               	mullw	1
 12783  003FB0  0E35               	movlw	low _introducido
 12784  003FB2  24F3               	addwf	prodl,w,c
 12785  003FB4  6ED9               	movwf	fsr2l,c
 12786  003FB6  0E01               	movlw	high _introducido
 12787  003FB8  20F4               	addwfc	prodh,w,c
 12788  003FBA  6EDA               	movwf	fsr2h,c
 12789  003FBC  50DF               	movf	indf2,w,c
 12790  003FBE  0A80               	xorlw	128
 12791  003FC0  0F76               	addlw	-138
 12792  003FC2  A0D8               	btfss	status,0,c
 12793  003FC4  0012               	return	
 12794                           
 12795                           ; BSR set to: 0
 12796                           ;DisplayProtocol.h: 109: introducido[passSection] = 0;
 12797  003FC6  0100               	movlb	0	; () banked
 12798  003FC8  51D5               	movf	_passSection& (0+255),w,b
 12799  003FCA  0D01               	mullw	1
 12800  003FCC  0E35               	movlw	low _introducido
 12801  003FCE  24F3               	addwf	prodl,w,c
 12802  003FD0  6ED9               	movwf	fsr2l,c
 12803  003FD2  0E01               	movlw	high _introducido
 12804  003FD4  20F4               	addwfc	prodh,w,c
 12805  003FD6  6EDA               	movwf	fsr2h,c
 12806  003FD8  0E00               	movlw	0
 12807  003FDA  6EDF               	movwf	indf2,c
 12808                           
 12809                           ; BSR set to: 0
 12810                           ;DisplayProtocol.h: 110: } else if (actualScreen == 2 || actualScreen == 3
 12811  003FDC  0012               	return	
 12812  003FDE                     l6532:
 12813                           
 12814                           ; BSR set to: 0
 12815                           ;DisplayProtocol.h: 111: || actualScreen == 10) {
 12816  003FDE  0E02               	movlw	2
 12817  003FE0  0100               	movlb	0	; () banked
 12818  003FE2  19D1               	xorwf	_actualScreen& (0+255),w,b
 12819  003FE4  B4D8               	btfsc	status,2,c
 12820  003FE6  D00A               	goto	l6538
 12821                           
 12822                           ; BSR set to: 0
 12823  003FE8  0E03               	movlw	3
 12824  003FEA  0100               	movlb	0	; () banked
 12825  003FEC  19D1               	xorwf	_actualScreen& (0+255),w,b
 12826  003FEE  B4D8               	btfsc	status,2,c
 12827  003FF0  D005               	goto	l6538
 12828                           
 12829                           ; BSR set to: 0
 12830  003FF2  0E0A               	movlw	10
 12831  003FF4  0100               	movlb	0	; () banked
 12832  003FF6  19D1               	xorwf	_actualScreen& (0+255),w,b
 12833  003FF8  A4D8               	btfss	status,2,c
 12834  003FFA  D011               	goto	l6544
 12835  003FFC                     l6538:
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;DisplayProtocol.h: 112: selSN = !selSN;
 12839  003FFC  0100               	movlb	0	; () banked
 12840  003FFE  51D7               	movf	_selSN& (0+255),w,b
 12841  004000  A4D8               	btfss	status,2,c
 12842  004002  D002               	goto	u7360
 12843  004004  0E01               	movlw	1
 12844  004006  D001               	goto	u7370
 12845  004008                     u7360:
 12846  004008  0E00               	movlw	0
 12847  00400A                     u7370:
 12848  00400A  0100               	movlb	0	; () banked
 12849  00400C  6FD7               	movwf	_selSN& (0+255),b
 12850                           
 12851                           ; BSR set to: 0
 12852                           ;DisplayProtocol.h: 113: if(selSN > 1)
 12853  00400E  0E01               	movlw	1
 12854  004010  0100               	movlb	0	; () banked
 12855  004012  65D7               	cpfsgt	_selSN& (0+255),b
 12856  004014  0012               	return	
 12857                           
 12858                           ; BSR set to: 0
 12859                           ;DisplayProtocol.h: 114: selSN = 0;
 12860  004016  0E00               	movlw	0
 12861  004018  0100               	movlb	0	; () banked
 12862  00401A  6FD7               	movwf	_selSN& (0+255),b
 12863                           
 12864                           ; BSR set to: 0
 12865                           ;DisplayProtocol.h: 115: }else if(actualScreen == 5) {
 12866  00401C  0012               	return	
 12867  00401E                     l6544:
 12868                           
 12869                           ; BSR set to: 0
 12870  00401E  0E05               	movlw	5
 12871  004020  0100               	movlb	0	; () banked
 12872  004022  19D1               	xorwf	_actualScreen& (0+255),w,b
 12873  004024  A4D8               	btfss	status,2,c
 12874  004026  0012               	return	
 12875  004028  D00C               	goto	l6556
 12876  00402A                     l6548:
 12877                           
 12878                           ; BSR set to: 0
 12879                           ;DisplayProtocol.h: 120: selKMT++;
 12880  00402A  0100               	movlb	0	; () banked
 12881  00402C  2BD6               	incf	_selKMT& (0+255),f,b
 12882                           
 12883                           ; BSR set to: 0
 12884                           ;DisplayProtocol.h: 121: if(selKMT > 2)
 12885  00402E  0100               	movlb	0	; () banked
 12886  004030  51D6               	movf	_selKMT& (0+255),w,b
 12887  004032  0A80               	xorlw	128
 12888  004034  0F7D               	addlw	-131
 12889  004036  A0D8               	btfss	status,0,c
 12890  004038  0012               	return	
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;DisplayProtocol.h: 122: selKMT = 0;
 12894  00403A  0E00               	movlw	0
 12895  00403C  0100               	movlb	0	; () banked
 12896  00403E  6FD6               	movwf	_selKMT& (0+255),b
 12897                           
 12898                           ; BSR set to: 0
 12899                           ;DisplayProtocol.h: 139: }
 12900                           ;DisplayProtocol.h: 140: }
 12901                           
 12902                           ; BSR set to: 0
 12903                           ;DisplayProtocol.h: 138: break;
 12904                           
 12905                           ;DisplayProtocol.h: 136: }case (6): {
 12906                           
 12907                           ; BSR set to: 0
 12908                           ;DisplayProtocol.h: 135: break;
 12909                           
 12910                           ;DisplayProtocol.h: 133: }case (5): {
 12911                           
 12912                           ; BSR set to: 0
 12913                           ;DisplayProtocol.h: 132: break;
 12914                           
 12915                           ;DisplayProtocol.h: 130: }case (4): {
 12916                           
 12917                           ; BSR set to: 0
 12918                           ;DisplayProtocol.h: 129: break;
 12919                           
 12920                           ;DisplayProtocol.h: 127: }case (3): {
 12921                           
 12922                           ; BSR set to: 0
 12923                           ;DisplayProtocol.h: 126: break;
 12924                           
 12925                           ;DisplayProtocol.h: 124: }case (2): {
 12926                           
 12927                           ; BSR set to: 0
 12928                           ;DisplayProtocol.h: 123: break;
 12929  004040  0012               	return	
 12930  004042                     l6556:
 12931                           
 12932                           ; BSR set to: 0
 12933  004042  0100               	movlb	0	; () banked
 12934  004044  51D4               	movf	_menuSection& (0+255),w,b
 12935                           
 12936                           ; Switch size 1, requested type "space"
 12937                           ; Number of cases is 7, Range of values is 0 to 6
 12938                           ; switch strategies available:
 12939                           ; Name         Instructions Cycles
 12940                           ; simple_byte           22    12 (average)
 12941                           ;	Chosen strategy is simple_byte
 12942  004046  0A00               	xorlw	0	; case 0
 12943  004048  B4D8               	btfsc	status,2,c
 12944  00404A  0012               	return	
 12945  00404C  0A01               	xorlw	1	; case 1
 12946  00404E  B4D8               	btfsc	status,2,c
 12947  004050  D7EC               	goto	l6548
 12948  004052  0A03               	xorlw	3	; case 2
 12949  004054  B4D8               	btfsc	status,2,c
 12950  004056  0012               	return	
 12951  004058  0A01               	xorlw	1	; case 3
 12952  00405A  B4D8               	btfsc	status,2,c
 12953  00405C  0012               	return	
 12954  00405E  0A07               	xorlw	7	; case 4
 12955  004060  B4D8               	btfsc	status,2,c
 12956  004062  0012               	return	
 12957  004064  0A01               	xorlw	1	; case 5
 12958  004066  B4D8               	btfsc	status,2,c
 12959  004068  0012               	return	
 12960  00406A  0A03               	xorlw	3	; case 6
 12961                           
 12962                           ; BSR set to: 0
 12963                           
 12964                           ; BSR set to: 0
 12965                           
 12966                           ; BSR set to: 0
 12967                           
 12968                           ; BSR set to: 0
 12969  00406C  0012               	return	
 12970  00406E                     __end_of_pressUP:
 12971                           	opt stack 0
 12972                           tblptru	equ	0xFF8
 12973                           tblptrh	equ	0xFF7
 12974                           tblptrl	equ	0xFF6
 12975                           tablat	equ	0xFF5
 12976                           prodh	equ	0xFF4
 12977                           prodl	equ	0xFF3
 12978                           intcon	equ	0xFF2
 12979                           postinc0	equ	0xFEE
 12980                           wreg	equ	0xFE8
 12981                           postdec1	equ	0xFE5
 12982                           fsr1l	equ	0xFE1
 12983                           indf2	equ	0xFDF
 12984                           postinc2	equ	0xFDE
 12985                           postdec2	equ	0xFDD
 12986                           fsr2h	equ	0xFDA
 12987                           fsr2l	equ	0xFD9
 12988                           status	equ	0xFD8
 12989                           
 12990 ;; *************** function _pressRETRO *****************
 12991 ;; Defined at:
 12992 ;;		line 220 in file "source/DisplayProtocol.h"
 12993 ;; Parameters:    Size  Location     Type
 12994 ;;		None
 12995 ;; Auto vars:     Size  Location     Type
 12996 ;;		None
 12997 ;; Return value:  Size  Location     Type
 12998 ;;                  1    wreg      void 
 12999 ;; Registers used:
 13000 ;;		wreg, status,2, status,0
 13001 ;; Tracked objects:
 13002 ;;		On entry : 0/0
 13003 ;;		On exit  : 0/0
 13004 ;;		Unchanged: 0/0
 13005 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13006 ;;      Params:         0       0       0       0       0       0       0
 13007 ;;      Locals:         0       0       0       0       0       0       0
 13008 ;;      Temps:          0       0       0       0       0       0       0
 13009 ;;      Totals:         0       0       0       0       0       0       0
 13010 ;;Total ram usage:        0 bytes
 13011 ;; Hardware stack levels used:    1
 13012 ;; Hardware stack levels required when called:    8
 13013 ;; This function calls:
 13014 ;;		Nothing
 13015 ;; This function is called by:
 13016 ;;		_buttonChecking
 13017 ;; This function uses a non-reentrant model
 13018 ;;
 13019                           
 13020                           	psect	text44
 13021  004E04                     __ptext44:
 13022                           	opt stack 0
 13023  004E04                     _pressRETRO:
 13024                           	opt stack 21
 13025                           
 13026                           ;DisplayProtocol.h: 221: if (actualScreen == 1) {
 13027                           
 13028                           ; BSR set to: 0
 13029                           ;incstack = 0
 13030  004E04  0100               	movlb	0	; () banked
 13031  004E06  05D1               	decf	_actualScreen& (0+255),w,b
 13032  004E08  A4D8               	btfss	status,2,c
 13033  004E0A  D004               	goto	l6630
 13034                           
 13035                           ; BSR set to: 0
 13036                           ;DisplayProtocol.h: 222: actualScreen = 0;
 13037  004E0C  0E00               	movlw	0
 13038  004E0E  0100               	movlb	0	; () banked
 13039  004E10  6FD1               	movwf	_actualScreen& (0+255),b
 13040                           
 13041                           ;DisplayProtocol.h: 223: }else if (actualScreen == 2 || actualScreen == 3
 13042  004E12  0012               	return	
 13043  004E14                     l6630:
 13044                           
 13045                           ; BSR set to: 0
 13046                           ;DisplayProtocol.h: 224: || actualScreen == 10)
 13047  004E14  0E02               	movlw	2
 13048  004E16  0100               	movlb	0	; () banked
 13049  004E18  19D1               	xorwf	_actualScreen& (0+255),w,b
 13050  004E1A  B4D8               	btfsc	status,2,c
 13051  004E1C  D00A               	goto	l550
 13052                           
 13053                           ; BSR set to: 0
 13054  004E1E  0E03               	movlw	3
 13055  004E20  0100               	movlb	0	; () banked
 13056  004E22  19D1               	xorwf	_actualScreen& (0+255),w,b
 13057  004E24  B4D8               	btfsc	status,2,c
 13058  004E26  D005               	goto	l550
 13059                           
 13060                           ; BSR set to: 0
 13061  004E28  0E0A               	movlw	10
 13062  004E2A  0100               	movlb	0	; () banked
 13063  004E2C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13064  004E2E  A4D8               	btfss	status,2,c
 13065  004E30  D003               	goto	l6636
 13066  004E32                     l550:
 13067                           
 13068                           ; BSR set to: 0
 13069                           ;DisplayProtocol.h: 225: actualScreen = tempLastScreen;
 13070  004E32  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13071  004E36  0012               	return	
 13072  004E38                     l6636:
 13073                           
 13074                           ; BSR set to: 0
 13075                           ;DisplayProtocol.h: 226: else if(actualScreen == 5)
 13076  004E38  0E05               	movlw	5
 13077  004E3A  0100               	movlb	0	; () banked
 13078  004E3C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13079  004E3E  A4D8               	btfss	status,2,c
 13080  004E40  0012               	return	
 13081                           
 13082                           ; BSR set to: 0
 13083                           ;DisplayProtocol.h: 227: actualScreen = 4;
 13084  004E42  0E04               	movlw	4
 13085  004E44  0100               	movlb	0	; () banked
 13086  004E46  6FD1               	movwf	_actualScreen& (0+255),b
 13087                           
 13088                           ; BSR set to: 0
 13089                           
 13090                           ; BSR set to: 0
 13091  004E48  0012               	return	
 13092  004E4A                     __end_of_pressRETRO:
 13093                           	opt stack 0
 13094                           tblptru	equ	0xFF8
 13095                           tblptrh	equ	0xFF7
 13096                           tblptrl	equ	0xFF6
 13097                           tablat	equ	0xFF5
 13098                           prodh	equ	0xFF4
 13099                           prodl	equ	0xFF3
 13100                           intcon	equ	0xFF2
 13101                           postinc0	equ	0xFEE
 13102                           wreg	equ	0xFE8
 13103                           postdec1	equ	0xFE5
 13104                           fsr1l	equ	0xFE1
 13105                           indf2	equ	0xFDF
 13106                           postinc2	equ	0xFDE
 13107                           postdec2	equ	0xFDD
 13108                           fsr2h	equ	0xFDA
 13109                           fsr2l	equ	0xFD9
 13110                           status	equ	0xFD8
 13111                           
 13112 ;; *************** function _pressENTER *****************
 13113 ;; Defined at:
 13114 ;;		line 248 in file "source/DisplayProtocol.h"
 13115 ;; Parameters:    Size  Location     Type
 13116 ;;		None
 13117 ;; Auto vars:     Size  Location     Type
 13118 ;;		None
 13119 ;; Return value:  Size  Location     Type
 13120 ;;                  1    wreg      void 
 13121 ;; Registers used:
 13122 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13123 ;; Tracked objects:
 13124 ;;		On entry : 0/0
 13125 ;;		On exit  : 0/0
 13126 ;;		Unchanged: 0/0
 13127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13128 ;;      Params:         0       0       0       0       0       0       0
 13129 ;;      Locals:         0       0       0       0       0       0       0
 13130 ;;      Temps:          0       0       0       0       0       0       0
 13131 ;;      Totals:         0       0       0       0       0       0       0
 13132 ;;Total ram usage:        0 bytes
 13133 ;; Hardware stack levels used:    1
 13134 ;; Hardware stack levels required when called:   12
 13135 ;; This function calls:
 13136 ;;		_checkPass
 13137 ;;		_confirmEdition
 13138 ;; This function is called by:
 13139 ;;		_buttonChecking
 13140 ;; This function uses a non-reentrant model
 13141 ;;
 13142                           
 13143                           	psect	text45
 13144  0036F0                     __ptext45:
 13145                           	opt stack 0
 13146  0036F0                     _pressENTER:
 13147                           	opt stack 17
 13148                           
 13149                           ;DisplayProtocol.h: 249: if (actualScreen == 1) {
 13150                           
 13151                           ; BSR set to: 0
 13152                           ;incstack = 0
 13153  0036F0  0100               	movlb	0	; () banked
 13154  0036F2  05D1               	decf	_actualScreen& (0+255),w,b
 13155  0036F4  A4D8               	btfss	status,2,c
 13156  0036F6  D018               	goto	l9228
 13157                           
 13158                           ; BSR set to: 0
 13159                           ;DisplayProtocol.h: 250: passSection++;
 13160  0036F8  0100               	movlb	0	; () banked
 13161  0036FA  2BD5               	incf	_passSection& (0+255),f,b
 13162                           
 13163                           ; BSR set to: 0
 13164                           ;DisplayProtocol.h: 251: if (passSection > 3) {
 13165  0036FC  0100               	movlb	0	; () banked
 13166  0036FE  51D5               	movf	_passSection& (0+255),w,b
 13167  003700  0A80               	xorlw	128
 13168  003702  0F7C               	addlw	-132
 13169  003704  A0D8               	btfss	status,0,c
 13170  003706  0012               	return	
 13171                           
 13172                           ; BSR set to: 0
 13173                           ;DisplayProtocol.h: 252: passSection = 0;
 13174  003708  0E00               	movlw	0
 13175  00370A  0100               	movlb	0	; () banked
 13176  00370C  6FD5               	movwf	_passSection& (0+255),b
 13177                           
 13178                           ; BSR set to: 0
 13179                           ;DisplayProtocol.h: 253: if (checkPass())
 13180  00370E  ECF3  F024         	call	_checkPass	;wreg free
 13181  003712  0900               	iorlw	0
 13182  003714  B4D8               	btfsc	status,2,c
 13183  003716  D004               	goto	l9226
 13184                           
 13185                           ;DisplayProtocol.h: 254: actualScreen = 8;
 13186  003718  0E08               	movlw	8
 13187  00371A  0100               	movlb	0	; () banked
 13188  00371C  6FD1               	movwf	_actualScreen& (0+255),b
 13189  00371E  0012               	return	
 13190  003720                     l9226:
 13191                           
 13192                           ;DisplayProtocol.h: 255: else
 13193                           ;DisplayProtocol.h: 256: actualScreen = 7;
 13194  003720  0E07               	movlw	7
 13195  003722  0100               	movlb	0	; () banked
 13196  003724  6FD1               	movwf	_actualScreen& (0+255),b
 13197                           
 13198                           ; BSR set to: 0
 13199                           ;DisplayProtocol.h: 257: }
 13200                           ;DisplayProtocol.h: 258: }else if(actualScreen == 4) {
 13201                           
 13202                           ; BSR set to: 0
 13203  003726  0012               	return	
 13204  003728                     l9228:
 13205                           
 13206                           ; BSR set to: 0
 13207  003728  0E04               	movlw	4
 13208  00372A  0100               	movlb	0	; () banked
 13209  00372C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13210  00372E  B4D8               	btfsc	status,2,c
 13211  003730  D01D               	goto	l9242
 13212  003732  D032               	goto	l9244
 13213  003734                     l574:
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;DisplayProtocol.h: 261: tempLastScreen = actualScreen;
 13217  003734  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13218                           
 13219                           ; BSR set to: 0
 13220                           ;DisplayProtocol.h: 262: if(ProcessStarted) {
 13221  003738  0100               	movlb	0	; () banked
 13222  00373A  51D0               	movf	_ProcessStarted& (0+255),w,b
 13223  00373C  B4D8               	btfsc	status,2,c
 13224  00373E  D007               	goto	l9236
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;DisplayProtocol.h: 263: actualScreen = 3;
 13228  003740  0E03               	movlw	3
 13229  003742  0100               	movlb	0	; () banked
 13230  003744  6FD1               	movwf	_actualScreen& (0+255),b
 13231                           
 13232                           ;DisplayProtocol.h: 264: selSN = 0;
 13233  003746  0E00               	movlw	0
 13234  003748  0100               	movlb	0	; () banked
 13235  00374A  6FD7               	movwf	_selSN& (0+255),b
 13236                           
 13237                           ;DisplayProtocol.h: 265: }else {
 13238  00374C  0012               	return	
 13239  00374E                     l9236:
 13240                           
 13241                           ; BSR set to: 0
 13242                           ;DisplayProtocol.h: 266: actualScreen = 2;
 13243  00374E  0E02               	movlw	2
 13244  003750  0100               	movlb	0	; () banked
 13245  003752  6FD1               	movwf	_actualScreen& (0+255),b
 13246                           
 13247                           ;DisplayProtocol.h: 267: selSN = 1;
 13248  003754  0E01               	movlw	1
 13249  003756  0100               	movlb	0	; () banked
 13250  003758  6FD7               	movwf	_selSN& (0+255),b
 13251                           
 13252                           ; BSR set to: 0
 13253                           ;DisplayProtocol.h: 268: }
 13254                           ;DisplayProtocol.h: 269: break;
 13255  00375A  0012               	return	
 13256  00375C                     l578:
 13257                           
 13258                           ; BSR set to: 0
 13259                           ;DisplayProtocol.h: 271: tempLastScreen = actualScreen;
 13260  00375C  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13261                           
 13262                           ;DisplayProtocol.h: 272: selKMT = tVarProceso;
 13263  003760  C0E3  F0D6         	movff	_tVarProceso,_selKMT
 13264                           
 13265                           ; BSR set to: 0
 13266                           ;DisplayProtocol.h: 273: actualScreen = 5;
 13267  003764  0E05               	movlw	5
 13268  003766  0100               	movlb	0	; () banked
 13269  003768  6FD1               	movwf	_actualScreen& (0+255),b
 13270                           
 13271                           ; BSR set to: 0
 13272                           ;DisplayProtocol.h: 290: }
 13273                           ;DisplayProtocol.h: 291: }
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;DisplayProtocol.h: 289: break;
 13277                           
 13278                           ;DisplayProtocol.h: 287: }case (6): {
 13279                           
 13280                           ; BSR set to: 0
 13281                           ;DisplayProtocol.h: 286: break;
 13282                           
 13283                           ;DisplayProtocol.h: 284: }case (5): {
 13284                           
 13285                           ; BSR set to: 0
 13286                           ;DisplayProtocol.h: 283: break;
 13287                           
 13288                           ;DisplayProtocol.h: 281: }case (4): {
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;DisplayProtocol.h: 280: break;
 13292                           
 13293                           ;DisplayProtocol.h: 278: }case (3): {
 13294                           
 13295                           ; BSR set to: 0
 13296                           ;DisplayProtocol.h: 277: break;
 13297                           
 13298                           ;DisplayProtocol.h: 275: }case (2): {
 13299                           
 13300                           ;DisplayProtocol.h: 274: break;
 13301  00376A  0012               	return	
 13302  00376C                     l9242:
 13303                           
 13304                           ; BSR set to: 0
 13305  00376C  0100               	movlb	0	; () banked
 13306  00376E  51D4               	movf	_menuSection& (0+255),w,b
 13307                           
 13308                           ; Switch size 1, requested type "space"
 13309                           ; Number of cases is 7, Range of values is 0 to 6
 13310                           ; switch strategies available:
 13311                           ; Name         Instructions Cycles
 13312                           ; simple_byte           22    12 (average)
 13313                           ;	Chosen strategy is simple_byte
 13314  003770  0A00               	xorlw	0	; case 0
 13315  003772  B4D8               	btfsc	status,2,c
 13316  003774  D7DF               	goto	l574
 13317  003776  0A01               	xorlw	1	; case 1
 13318  003778  B4D8               	btfsc	status,2,c
 13319  00377A  D7F0               	goto	l578
 13320  00377C  0A03               	xorlw	3	; case 2
 13321  00377E  B4D8               	btfsc	status,2,c
 13322  003780  0012               	return	
 13323  003782  0A01               	xorlw	1	; case 3
 13324  003784  B4D8               	btfsc	status,2,c
 13325  003786  0012               	return	
 13326  003788  0A07               	xorlw	7	; case 4
 13327  00378A  B4D8               	btfsc	status,2,c
 13328  00378C  0012               	return	
 13329  00378E  0A01               	xorlw	1	; case 5
 13330  003790  B4D8               	btfsc	status,2,c
 13331  003792  0012               	return	
 13332  003794  0A03               	xorlw	3	; case 6
 13333                           
 13334                           ; BSR set to: 0
 13335                           ;DisplayProtocol.h: 292: }else if(actualScreen == 7)
 13336  003796  0012               	return	
 13337  003798                     l9244:
 13338                           
 13339                           ; BSR set to: 0
 13340  003798  0E07               	movlw	7
 13341  00379A  0100               	movlb	0	; () banked
 13342  00379C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13343  00379E  A4D8               	btfss	status,2,c
 13344  0037A0  D004               	goto	l9248
 13345                           
 13346                           ; BSR set to: 0
 13347                           ;DisplayProtocol.h: 293: actualScreen = 1;
 13348  0037A2  0E01               	movlw	1
 13349  0037A4  0100               	movlb	0	; () banked
 13350  0037A6  6FD1               	movwf	_actualScreen& (0+255),b
 13351  0037A8  0012               	return	
 13352  0037AA                     l9248:
 13353                           
 13354                           ; BSR set to: 0
 13355                           ;DisplayProtocol.h: 294: else if(actualScreen == 6) {
 13356  0037AA  0E06               	movlw	6
 13357  0037AC  0100               	movlb	0	; () banked
 13358  0037AE  19D1               	xorwf	_actualScreen& (0+255),w,b
 13359  0037B0  B4D8               	btfsc	status,2,c
 13360  0037B2  0012               	return	
 13361                           
 13362                           ; BSR set to: 0
 13363                           
 13364                           ; BSR set to: 0
 13365                           
 13366                           ; BSR set to: 0
 13367                           ;DisplayProtocol.h: 296: }else if(actualScreen == 5)
 13368  0037B4  0E05               	movlw	5
 13369  0037B6  0100               	movlb	0	; () banked
 13370  0037B8  19D1               	xorwf	_actualScreen& (0+255),w,b
 13371  0037BA  A4D8               	btfss	status,2,c
 13372  0037BC  D00A               	goto	l9256
 13373                           
 13374                           ; BSR set to: 0
 13375                           ;DisplayProtocol.h: 297: confirmEdition(!ProcessStarted);
 13376  0037BE  0100               	movlb	0	; () banked
 13377  0037C0  51D0               	movf	_ProcessStarted& (0+255),w,b
 13378  0037C2  A4D8               	btfss	status,2,c
 13379  0037C4  D002               	goto	u11380
 13380  0037C6  0E01               	movlw	1
 13381  0037C8  D001               	goto	u11390
 13382  0037CA                     u11380:
 13383  0037CA  0E00               	movlw	0
 13384  0037CC                     u11390:
 13385  0037CC  EC73  F01D         	call	_confirmEdition
 13386  0037D0  0012               	return	
 13387  0037D2                     l9256:
 13388                           
 13389                           ;DisplayProtocol.h: 298: else if(actualScreen == 2) {
 13390  0037D2  0E02               	movlw	2
 13391  0037D4  0100               	movlb	0	; () banked
 13392  0037D6  19D1               	xorwf	_actualScreen& (0+255),w,b
 13393  0037D8  A4D8               	btfss	status,2,c
 13394  0037DA  D00C               	goto	l9262
 13395                           
 13396                           ; BSR set to: 0
 13397                           ;DisplayProtocol.h: 299: ProcessStarted = !selSN;
 13398  0037DC  0100               	movlb	0	; () banked
 13399  0037DE  51D7               	movf	_selSN& (0+255),w,b
 13400  0037E0  A4D8               	btfss	status,2,c
 13401  0037E2  D002               	goto	u11410
 13402  0037E4  0E01               	movlw	1
 13403  0037E6  D001               	goto	u11420
 13404  0037E8                     u11410:
 13405  0037E8  0E00               	movlw	0
 13406  0037EA                     u11420:
 13407  0037EA  0100               	movlb	0	; () banked
 13408  0037EC  6FD0               	movwf	_ProcessStarted& (0+255),b
 13409                           
 13410                           ; BSR set to: 0
 13411                           ;DisplayProtocol.h: 300: actualScreen = tempLastScreen;
 13412  0037EE  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13413                           
 13414                           ;DisplayProtocol.h: 301: }else if(actualScreen == 3) {
 13415  0037F2  0012               	return	
 13416  0037F4                     l9262:
 13417                           
 13418                           ; BSR set to: 0
 13419  0037F4  0E03               	movlw	3
 13420  0037F6  0100               	movlb	0	; () banked
 13421  0037F8  19D1               	xorwf	_actualScreen& (0+255),w,b
 13422  0037FA  A4D8               	btfss	status,2,c
 13423  0037FC  D005               	goto	l9266
 13424                           
 13425                           ; BSR set to: 0
 13426                           ;DisplayProtocol.h: 302: ProcessStarted = selSN;
 13427  0037FE  C0D7  F0D0         	movff	_selSN,_ProcessStarted
 13428                           
 13429                           ;DisplayProtocol.h: 303: actualScreen = tempLastScreen;
 13430  003802  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13431                           
 13432                           ;DisplayProtocol.h: 304: }else if(actualScreen == 10) {
 13433  003806  0012               	return	
 13434  003808                     l9266:
 13435                           
 13436                           ; BSR set to: 0
 13437  003808  0E0A               	movlw	10
 13438  00380A  0100               	movlb	0	; () banked
 13439  00380C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13440  00380E  A4D8               	btfss	status,2,c
 13441  003810  D00B               	goto	l9272
 13442                           
 13443                           ; BSR set to: 0
 13444                           ;DisplayProtocol.h: 305: if(!selSN)
 13445  003812  0100               	movlb	0	; () banked
 13446  003814  51D7               	movf	_selSN& (0+255),w,b
 13447  003816  A4D8               	btfss	status,2,c
 13448  003818  D004               	goto	l596
 13449                           
 13450                           ; BSR set to: 0
 13451                           ;DisplayProtocol.h: 306: confirmEdition(1);
 13452  00381A  0E01               	movlw	1
 13453  00381C  EC73  F01D         	call	_confirmEdition
 13454  003820  0012               	return	
 13455  003822                     l596:
 13456                           
 13457                           ; BSR set to: 0
 13458                           ;DisplayProtocol.h: 307: else
 13459                           ;DisplayProtocol.h: 308: actualScreen = tempLastScreen;
 13460  003822  C0D8  F0D1         	movff	_tempLastScreen,_actualScreen
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;DisplayProtocol.h: 309: }else if(actualScreen == 8)
 13464  003826  0012               	return	
 13465  003828                     l9272:
 13466                           
 13467                           ; BSR set to: 0
 13468  003828  0E08               	movlw	8
 13469  00382A  0100               	movlb	0	; () banked
 13470  00382C  19D1               	xorwf	_actualScreen& (0+255),w,b
 13471  00382E  A4D8               	btfss	status,2,c
 13472  003830  D004               	goto	l9276
 13473                           
 13474                           ; BSR set to: 0
 13475                           ;DisplayProtocol.h: 310: actualScreen = 4;
 13476  003832  0E04               	movlw	4
 13477  003834  0100               	movlb	0	; () banked
 13478  003836  6FD1               	movwf	_actualScreen& (0+255),b
 13479  003838  0012               	return	
 13480  00383A                     l9276:
 13481                           
 13482                           ; BSR set to: 0
 13483                           ;DisplayProtocol.h: 311: else if(actualScreen == 9)
 13484  00383A  0E09               	movlw	9
 13485  00383C  0100               	movlb	0	; () banked
 13486  00383E  19D1               	xorwf	_actualScreen& (0+255),w,b
 13487  003840  A4D8               	btfss	status,2,c
 13488  003842  0012               	return	
 13489                           
 13490                           ; BSR set to: 0
 13491                           ;DisplayProtocol.h: 312: actualScreen = 0;
 13492  003844  0E00               	movlw	0
 13493  003846  0100               	movlb	0	; () banked
 13494  003848  6FD1               	movwf	_actualScreen& (0+255),b
 13495                           
 13496                           ; BSR set to: 0
 13497                           
 13498                           ; BSR set to: 0
 13499                           
 13500                           ; BSR set to: 0
 13501                           
 13502                           ; BSR set to: 0
 13503                           
 13504                           ; BSR set to: 0
 13505                           
 13506                           ; BSR set to: 0
 13507                           
 13508                           ; BSR set to: 0
 13509                           
 13510                           ; BSR set to: 0
 13511                           
 13512                           ; BSR set to: 0
 13513  00384A  0012               	return	
 13514  00384C                     __end_of_pressENTER:
 13515                           	opt stack 0
 13516                           tblptru	equ	0xFF8
 13517                           tblptrh	equ	0xFF7
 13518                           tblptrl	equ	0xFF6
 13519                           tablat	equ	0xFF5
 13520                           prodh	equ	0xFF4
 13521                           prodl	equ	0xFF3
 13522                           intcon	equ	0xFF2
 13523                           postinc0	equ	0xFEE
 13524                           wreg	equ	0xFE8
 13525                           postdec1	equ	0xFE5
 13526                           fsr1l	equ	0xFE1
 13527                           indf2	equ	0xFDF
 13528                           postinc2	equ	0xFDE
 13529                           postdec2	equ	0xFDD
 13530                           fsr2h	equ	0xFDA
 13531                           fsr2l	equ	0xFD9
 13532                           status	equ	0xFD8
 13533                           
 13534 ;; *************** function _confirmEdition *****************
 13535 ;; Defined at:
 13536 ;;		line 27 in file "source/DisplayProtocol.h"
 13537 ;; Parameters:    Size  Location     Type
 13538 ;;  yes             1    wreg     unsigned char 
 13539 ;; Auto vars:     Size  Location     Type
 13540 ;;  yes             1   64[BANK0 ] unsigned char 
 13541 ;; Return value:  Size  Location     Type
 13542 ;;                  1    wreg      void 
 13543 ;; Registers used:
 13544 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13545 ;; Tracked objects:
 13546 ;;		On entry : 0/0
 13547 ;;		On exit  : 0/0
 13548 ;;		Unchanged: 0/0
 13549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13550 ;;      Params:         0       0       0       0       0       0       0
 13551 ;;      Locals:         0       1       0       0       0       0       0
 13552 ;;      Temps:          0       0       0       0       0       0       0
 13553 ;;      Totals:         0       1       0       0       0       0       0
 13554 ;;Total ram usage:        1 bytes
 13555 ;; Hardware stack levels used:    1
 13556 ;; Hardware stack levels required when called:   11
 13557 ;; This function calls:
 13558 ;;		_saveSysParams
 13559 ;; This function is called by:
 13560 ;;		_pressENTER
 13561 ;; This function uses a non-reentrant model
 13562 ;;
 13563                           
 13564                           	psect	text46
 13565  003AE6                     __ptext46:
 13566                           	opt stack 0
 13567  003AE6                     _confirmEdition:
 13568                           	opt stack 17
 13569                           
 13570                           ;incstack = 0
 13571                           ;confirmEdition@yes stored from wreg
 13572  003AE6  0100               	movlb	0	; () banked
 13573  003AE8  6FA0               	movwf	confirmEdition@yes& (0+255),b
 13574                           
 13575                           ;DisplayProtocol.h: 28: switch (menuSection) {
 13576  003AEA  D07A               	goto	l8932
 13577  003AEC                     l8880:
 13578                           
 13579                           ;DisplayProtocol.h: 32: if(yes) {
 13580  003AEC  0100               	movlb	0	; () banked
 13581  003AEE  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13582  003AF0  0100               	movlb	0	; () banked
 13583  003AF2  B4D8               	btfsc	status,2,c
 13584  003AF4  D008               	goto	l450
 13585                           
 13586                           ; BSR set to: 0
 13587                           ;DisplayProtocol.h: 33: tVarProceso = selKMT;
 13588  003AF6  C0D6  F0E3         	movff	_selKMT,_tVarProceso
 13589                           
 13590                           ; BSR set to: 0
 13591                           ;DisplayProtocol.h: 34: actualScreen = 4;
 13592  003AFA  0E04               	movlw	4
 13593  003AFC  0100               	movlb	0	; () banked
 13594  003AFE  6FD1               	movwf	_actualScreen& (0+255),b
 13595                           
 13596                           ; BSR set to: 0
 13597                           ;DisplayProtocol.h: 35: saveSysParams();
 13598  003B00  EC08  F01E         	call	_saveSysParams	;wreg free
 13599                           
 13600                           ;DisplayProtocol.h: 36: }else {
 13601  003B04  0012               	return	
 13602  003B06                     l450:
 13603                           
 13604                           ; BSR set to: 0
 13605                           ;DisplayProtocol.h: 37: tempLastScreen = actualScreen;
 13606  003B06  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13607                           
 13608                           ; BSR set to: 0
 13609                           ;DisplayProtocol.h: 38: actualScreen = 10;
 13610  003B0A  0E0A               	movlw	10
 13611  003B0C  0100               	movlb	0	; () banked
 13612  003B0E  6FD1               	movwf	_actualScreen& (0+255),b
 13613                           
 13614                           ;DisplayProtocol.h: 39: selSN = 1;
 13615  003B10  0E01               	movlw	1
 13616  003B12  0100               	movlb	0	; () banked
 13617  003B14  6FD7               	movwf	_selSN& (0+255),b
 13618                           
 13619                           ; BSR set to: 0
 13620                           ;DisplayProtocol.h: 40: }
 13621                           ;DisplayProtocol.h: 41: break;
 13622  003B16  0012               	return	
 13623  003B18                     l8890:
 13624                           
 13625                           ; BSR set to: 0
 13626                           ;DisplayProtocol.h: 43: if(yes) {
 13627  003B18  0100               	movlb	0	; () banked
 13628  003B1A  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13629  003B1C  0100               	movlb	0	; () banked
 13630  003B1E  B4D8               	btfsc	status,2,c
 13631  003B20  D006               	goto	l453
 13632                           
 13633                           ; BSR set to: 0
 13634                           ;DisplayProtocol.h: 45: actualScreen = 4;
 13635  003B22  0E04               	movlw	4
 13636  003B24  0100               	movlb	0	; () banked
 13637  003B26  6FD1               	movwf	_actualScreen& (0+255),b
 13638                           
 13639                           ; BSR set to: 0
 13640                           ;DisplayProtocol.h: 46: saveSysParams();
 13641  003B28  EC08  F01E         	call	_saveSysParams	;wreg free
 13642                           
 13643                           ;DisplayProtocol.h: 47: }else {
 13644  003B2C  0012               	return	
 13645  003B2E                     l453:
 13646                           
 13647                           ; BSR set to: 0
 13648                           ;DisplayProtocol.h: 48: tempLastScreen = actualScreen;
 13649  003B2E  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13650                           
 13651                           ; BSR set to: 0
 13652                           ;DisplayProtocol.h: 49: actualScreen = 10;
 13653  003B32  0E0A               	movlw	10
 13654  003B34  0100               	movlb	0	; () banked
 13655  003B36  6FD1               	movwf	_actualScreen& (0+255),b
 13656                           
 13657                           ;DisplayProtocol.h: 50: selSN = 1;
 13658  003B38  0E01               	movlw	1
 13659  003B3A  0100               	movlb	0	; () banked
 13660  003B3C  6FD7               	movwf	_selSN& (0+255),b
 13661                           
 13662                           ; BSR set to: 0
 13663                           ;DisplayProtocol.h: 51: }
 13664                           ;DisplayProtocol.h: 52: break;
 13665  003B3E  0012               	return	
 13666  003B40                     l8898:
 13667                           
 13668                           ; BSR set to: 0
 13669                           ;DisplayProtocol.h: 54: if(yes) {
 13670  003B40  0100               	movlb	0	; () banked
 13671  003B42  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13672  003B44  0100               	movlb	0	; () banked
 13673  003B46  B4D8               	btfsc	status,2,c
 13674  003B48  D006               	goto	l456
 13675                           
 13676                           ; BSR set to: 0
 13677                           ;DisplayProtocol.h: 56: actualScreen = 4;
 13678  003B4A  0E04               	movlw	4
 13679  003B4C  0100               	movlb	0	; () banked
 13680  003B4E  6FD1               	movwf	_actualScreen& (0+255),b
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;DisplayProtocol.h: 57: saveSysParams();
 13684  003B50  EC08  F01E         	call	_saveSysParams	;wreg free
 13685                           
 13686                           ;DisplayProtocol.h: 58: }else {
 13687  003B54  0012               	return	
 13688  003B56                     l456:
 13689                           
 13690                           ; BSR set to: 0
 13691                           ;DisplayProtocol.h: 59: tempLastScreen = actualScreen;
 13692  003B56  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13693                           
 13694                           ; BSR set to: 0
 13695                           ;DisplayProtocol.h: 60: actualScreen = 10;
 13696  003B5A  0E0A               	movlw	10
 13697  003B5C  0100               	movlb	0	; () banked
 13698  003B5E  6FD1               	movwf	_actualScreen& (0+255),b
 13699                           
 13700                           ;DisplayProtocol.h: 61: selSN = 1;
 13701  003B60  0E01               	movlw	1
 13702  003B62  0100               	movlb	0	; () banked
 13703  003B64  6FD7               	movwf	_selSN& (0+255),b
 13704                           
 13705                           ; BSR set to: 0
 13706                           ;DisplayProtocol.h: 62: }
 13707                           ;DisplayProtocol.h: 63: break;
 13708  003B66  0012               	return	
 13709  003B68                     l8906:
 13710                           
 13711                           ; BSR set to: 0
 13712                           ;DisplayProtocol.h: 65: if(yes) {
 13713  003B68  0100               	movlb	0	; () banked
 13714  003B6A  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13715  003B6C  0100               	movlb	0	; () banked
 13716  003B6E  B4D8               	btfsc	status,2,c
 13717  003B70  D006               	goto	l459
 13718                           
 13719                           ; BSR set to: 0
 13720                           ;DisplayProtocol.h: 67: actualScreen = 4;
 13721  003B72  0E04               	movlw	4
 13722  003B74  0100               	movlb	0	; () banked
 13723  003B76  6FD1               	movwf	_actualScreen& (0+255),b
 13724                           
 13725                           ; BSR set to: 0
 13726                           ;DisplayProtocol.h: 68: saveSysParams();
 13727  003B78  EC08  F01E         	call	_saveSysParams	;wreg free
 13728                           
 13729                           ;DisplayProtocol.h: 69: }else {
 13730  003B7C  0012               	return	
 13731  003B7E                     l459:
 13732                           
 13733                           ; BSR set to: 0
 13734                           ;DisplayProtocol.h: 70: tempLastScreen = actualScreen;
 13735  003B7E  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13736                           
 13737                           ; BSR set to: 0
 13738                           ;DisplayProtocol.h: 71: actualScreen = 10;
 13739  003B82  0E0A               	movlw	10
 13740  003B84  0100               	movlb	0	; () banked
 13741  003B86  6FD1               	movwf	_actualScreen& (0+255),b
 13742                           
 13743                           ;DisplayProtocol.h: 72: selSN = 1;
 13744  003B88  0E01               	movlw	1
 13745  003B8A  0100               	movlb	0	; () banked
 13746  003B8C  6FD7               	movwf	_selSN& (0+255),b
 13747                           
 13748                           ; BSR set to: 0
 13749                           ;DisplayProtocol.h: 73: }
 13750                           ;DisplayProtocol.h: 74: break;
 13751  003B8E  0012               	return	
 13752  003B90                     l8914:
 13753                           
 13754                           ; BSR set to: 0
 13755                           ;DisplayProtocol.h: 76: if(yes) {
 13756  003B90  0100               	movlb	0	; () banked
 13757  003B92  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13758  003B94  0100               	movlb	0	; () banked
 13759  003B96  B4D8               	btfsc	status,2,c
 13760  003B98  D006               	goto	l462
 13761                           
 13762                           ; BSR set to: 0
 13763                           ;DisplayProtocol.h: 78: actualScreen = 4;
 13764  003B9A  0E04               	movlw	4
 13765  003B9C  0100               	movlb	0	; () banked
 13766  003B9E  6FD1               	movwf	_actualScreen& (0+255),b
 13767                           
 13768                           ; BSR set to: 0
 13769                           ;DisplayProtocol.h: 79: saveSysParams();
 13770  003BA0  EC08  F01E         	call	_saveSysParams	;wreg free
 13771                           
 13772                           ;DisplayProtocol.h: 80: }else {
 13773  003BA4  0012               	return	
 13774  003BA6                     l462:
 13775                           
 13776                           ; BSR set to: 0
 13777                           ;DisplayProtocol.h: 81: tempLastScreen = actualScreen;
 13778  003BA6  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13779                           
 13780                           ; BSR set to: 0
 13781                           ;DisplayProtocol.h: 82: actualScreen = 10;
 13782  003BAA  0E0A               	movlw	10
 13783  003BAC  0100               	movlb	0	; () banked
 13784  003BAE  6FD1               	movwf	_actualScreen& (0+255),b
 13785                           
 13786                           ;DisplayProtocol.h: 83: selSN = 1;
 13787  003BB0  0E01               	movlw	1
 13788  003BB2  0100               	movlb	0	; () banked
 13789  003BB4  6FD7               	movwf	_selSN& (0+255),b
 13790                           
 13791                           ; BSR set to: 0
 13792                           ;DisplayProtocol.h: 84: }
 13793                           ;DisplayProtocol.h: 85: break;
 13794  003BB6  0012               	return	
 13795  003BB8                     l8922:
 13796                           
 13797                           ; BSR set to: 0
 13798                           ;DisplayProtocol.h: 87: if(yes) {
 13799  003BB8  0100               	movlb	0	; () banked
 13800  003BBA  51A0               	movf	confirmEdition@yes& (0+255),w,b
 13801  003BBC  0100               	movlb	0	; () banked
 13802  003BBE  B4D8               	btfsc	status,2,c
 13803  003BC0  D006               	goto	l465
 13804                           
 13805                           ; BSR set to: 0
 13806                           ;DisplayProtocol.h: 89: actualScreen = 4;
 13807  003BC2  0E04               	movlw	4
 13808  003BC4  0100               	movlb	0	; () banked
 13809  003BC6  6FD1               	movwf	_actualScreen& (0+255),b
 13810                           
 13811                           ; BSR set to: 0
 13812                           ;DisplayProtocol.h: 90: saveSysParams();
 13813  003BC8  EC08  F01E         	call	_saveSysParams	;wreg free
 13814                           
 13815                           ;DisplayProtocol.h: 91: }else {
 13816  003BCC  0012               	return	
 13817  003BCE                     l465:
 13818                           
 13819                           ; BSR set to: 0
 13820                           ;DisplayProtocol.h: 92: tempLastScreen = actualScreen;
 13821  003BCE  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 13822                           
 13823                           ; BSR set to: 0
 13824                           ;DisplayProtocol.h: 93: actualScreen = 10;
 13825  003BD2  0E0A               	movlw	10
 13826  003BD4  0100               	movlb	0	; () banked
 13827  003BD6  6FD1               	movwf	_actualScreen& (0+255),b
 13828                           
 13829                           ;DisplayProtocol.h: 94: selSN = 1;
 13830  003BD8  0E01               	movlw	1
 13831  003BDA  0100               	movlb	0	; () banked
 13832  003BDC  6FD7               	movwf	_selSN& (0+255),b
 13833                           
 13834                           ; BSR set to: 0
 13835                           ;DisplayProtocol.h: 97: }
 13836                           ;DisplayProtocol.h: 98: }
 13837                           
 13838                           ; BSR set to: 0
 13839                           ;DisplayProtocol.h: 95: }
 13840                           ;DisplayProtocol.h: 96: break;
 13841  003BDE  0012               	return	
 13842  003BE0                     l8932:
 13843  003BE0  0100               	movlb	0	; () banked
 13844  003BE2  51D4               	movf	_menuSection& (0+255),w,b
 13845                           
 13846                           ; Switch size 1, requested type "space"
 13847                           ; Number of cases is 7, Range of values is 0 to 6
 13848                           ; switch strategies available:
 13849                           ; Name         Instructions Cycles
 13850                           ; simple_byte           22    12 (average)
 13851                           ;	Chosen strategy is simple_byte
 13852  003BE4  0A00               	xorlw	0	; case 0
 13853  003BE6  B4D8               	btfsc	status,2,c
 13854  003BE8  0012               	return	
 13855  003BEA  0A01               	xorlw	1	; case 1
 13856  003BEC  B4D8               	btfsc	status,2,c
 13857  003BEE  D77E               	goto	l8880
 13858  003BF0  0A03               	xorlw	3	; case 2
 13859  003BF2  B4D8               	btfsc	status,2,c
 13860  003BF4  D791               	goto	l8890
 13861  003BF6  0A01               	xorlw	1	; case 3
 13862  003BF8  B4D8               	btfsc	status,2,c
 13863  003BFA  D7A2               	goto	l8898
 13864  003BFC  0A07               	xorlw	7	; case 4
 13865  003BFE  B4D8               	btfsc	status,2,c
 13866  003C00  D7B3               	goto	l8906
 13867  003C02  0A01               	xorlw	1	; case 5
 13868  003C04  B4D8               	btfsc	status,2,c
 13869  003C06  D7C4               	goto	l8914
 13870  003C08  0A03               	xorlw	3	; case 6
 13871  003C0A  A4D8               	btfss	status,2,c
 13872  003C0C  0012               	return	
 13873  003C0E  D7D4               	goto	l8922
 13874  003C10                     __end_of_confirmEdition:
 13875                           	opt stack 0
 13876                           tblptru	equ	0xFF8
 13877                           tblptrh	equ	0xFF7
 13878                           tblptrl	equ	0xFF6
 13879                           tablat	equ	0xFF5
 13880                           prodh	equ	0xFF4
 13881                           prodl	equ	0xFF3
 13882                           intcon	equ	0xFF2
 13883                           postinc0	equ	0xFEE
 13884                           wreg	equ	0xFE8
 13885                           postdec1	equ	0xFE5
 13886                           fsr1l	equ	0xFE1
 13887                           indf2	equ	0xFDF
 13888                           postinc2	equ	0xFDE
 13889                           postdec2	equ	0xFDD
 13890                           fsr2h	equ	0xFDA
 13891                           fsr2l	equ	0xFD9
 13892                           status	equ	0xFD8
 13893                           
 13894 ;; *************** function _saveSysParams *****************
 13895 ;; Defined at:
 13896 ;;		line 72 in file "source/sysParams.h"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;		None
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;		None
 13901 ;; Return value:  Size  Location     Type
 13902 ;;                  1    wreg      void 
 13903 ;; Registers used:
 13904 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 13905 ;; Tracked objects:
 13906 ;;		On entry : 0/0
 13907 ;;		On exit  : 0/0
 13908 ;;		Unchanged: 0/0
 13909 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13910 ;;      Params:         0       0       0       0       0       0       0
 13911 ;;      Locals:         0       0       0       0       0       0       0
 13912 ;;      Temps:          0       0       0       0       0       0       0
 13913 ;;      Totals:         0       0       0       0       0       0       0
 13914 ;;Total ram usage:        0 bytes
 13915 ;; Hardware stack levels used:    1
 13916 ;; Hardware stack levels required when called:   10
 13917 ;; This function calls:
 13918 ;;		_calcSysVars
 13919 ;;		_writeEEPROM
 13920 ;; This function is called by:
 13921 ;;		_confirmEdition
 13922 ;;		_autoCal
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text47
 13927  003C10                     __ptext47:
 13928                           	opt stack 0
 13929  003C10                     _saveSysParams:
 13930                           	opt stack 17
 13931                           
 13932                           ;sysParams.h: 73: EECON1bits.WREN = 1;
 13933                           
 13934                           ;incstack = 0
 13935  003C10  84A6               	bsf	4006,2,c	;volatile
 13936                           
 13937                           ;sysParams.h: 74: ie = INTCONbits.GIE;
 13938  003C12  0E00               	movlw	0
 13939  003C14  BEF2               	btfsc	intcon,7,c	;volatile
 13940  003C16  0E01               	movlw	1
 13941  003C18  6E49               	movwf	_ie,c
 13942                           
 13943                           ;sysParams.h: 75: INTCONbits.GIE = 0;
 13944  003C1A  9EF2               	bcf	intcon,7,c	;volatile
 13945                           
 13946                           ;sysParams.h: 76: writeEEPROM(1, tVarProceso);
 13947  003C1C  C0E3  F075         	movff	_tVarProceso,writeEEPROM@data
 13948  003C20  0E01               	movlw	1
 13949  003C22  ECC5  F028         	call	_writeEEPROM
 13950                           
 13951                           ;sysParams.h: 77: fData.floatdat = tiXcorte;
 13952  003C26  C037  F0CC         	movff	_tiXcorte,_fData
 13953  003C2A  C038  F0CD         	movff	_tiXcorte+1,_fData+1
 13954  003C2E  C039  F0CE         	movff	_tiXcorte+2,_fData+2
 13955  003C32  C03A  F0CF         	movff	_tiXcorte+3,_fData+3
 13956                           
 13957                           ;sysParams.h: 78: writeEEPROM(2, fData.floatMB);
 13958  003C36  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13959  003C3A  0E02               	movlw	2
 13960  003C3C  ECC5  F028         	call	_writeEEPROM
 13961                           
 13962                           ;sysParams.h: 79: writeEEPROM(3, fData.floatUB);
 13963  003C40  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 13964  003C44  0E03               	movlw	3
 13965  003C46  ECC5  F028         	call	_writeEEPROM
 13966                           
 13967                           ;sysParams.h: 80: writeEEPROM(4, fData.floatHB);
 13968  003C4A  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 13969  003C4E  0E04               	movlw	4
 13970  003C50  ECC5  F028         	call	_writeEEPROM
 13971                           
 13972                           ;sysParams.h: 81: writeEEPROM(5, fData.floatLB);
 13973  003C54  C0CC  F075         	movff	_fData,writeEEPROM@data
 13974  003C58  0E05               	movlw	5
 13975  003C5A  ECC5  F028         	call	_writeEEPROM
 13976                           
 13977                           ;sysParams.h: 82: i16Data.int16dat = numCortes;
 13978  003C5E  C0E1  F043         	movff	_numCortes,_i16Data
 13979  003C62  C0E2  F044         	movff	_numCortes+1,_i16Data+1
 13980                           
 13981                           ;sysParams.h: 83: writeEEPROM(6, i16Data.int16HB);
 13982  003C66  C044  F075         	movff	_i16Data+1,writeEEPROM@data
 13983  003C6A  0E06               	movlw	6
 13984  003C6C  ECC5  F028         	call	_writeEEPROM
 13985                           
 13986                           ;sysParams.h: 84: writeEEPROM(7, i16Data.int16LB);
 13987  003C70  C043  F075         	movff	_i16Data,writeEEPROM@data
 13988  003C74  0E07               	movlw	7
 13989  003C76  ECC5  F028         	call	_writeEEPROM
 13990                           
 13991                           ;sysParams.h: 85: fData.floatdat = diamTubo;
 13992  003C7A  C0DD  F0CC         	movff	_diamTubo,_fData
 13993  003C7E  C0DE  F0CD         	movff	_diamTubo+1,_fData+1
 13994  003C82  C0DF  F0CE         	movff	_diamTubo+2,_fData+2
 13995  003C86  C0E0  F0CF         	movff	_diamTubo+3,_fData+3
 13996                           
 13997                           ;sysParams.h: 86: writeEEPROM(8, fData.floatMB);
 13998  003C8A  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 13999  003C8E  0E08               	movlw	8
 14000  003C90  ECC5  F028         	call	_writeEEPROM
 14001                           
 14002                           ;sysParams.h: 87: writeEEPROM(9, fData.floatUB);
 14003  003C94  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 14004  003C98  0E09               	movlw	9
 14005  003C9A  ECC5  F028         	call	_writeEEPROM
 14006                           
 14007                           ;sysParams.h: 88: writeEEPROM(10, fData.floatHB);
 14008  003C9E  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 14009  003CA2  0E0A               	movlw	10
 14010  003CA4  ECC5  F028         	call	_writeEEPROM
 14011                           
 14012                           ;sysParams.h: 89: writeEEPROM(11, fData.floatLB);
 14013  003CA8  C0CC  F075         	movff	_fData,writeEEPROM@data
 14014  003CAC  0E0B               	movlw	11
 14015  003CAE  ECC5  F028         	call	_writeEEPROM
 14016                           
 14017                           ;sysParams.h: 90: fData.floatdat = densidadMasa;
 14018  003CB2  C0D9  F0CC         	movff	_densidadMasa,_fData
 14019  003CB6  C0DA  F0CD         	movff	_densidadMasa+1,_fData+1
 14020  003CBA  C0DB  F0CE         	movff	_densidadMasa+2,_fData+2
 14021  003CBE  C0DC  F0CF         	movff	_densidadMasa+3,_fData+3
 14022                           
 14023                           ;sysParams.h: 91: writeEEPROM(12, fData.floatMB);
 14024  003CC2  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 14025  003CC6  0E0C               	movlw	12
 14026  003CC8  ECC5  F028         	call	_writeEEPROM
 14027                           
 14028                           ;sysParams.h: 92: writeEEPROM(13, fData.floatUB);
 14029  003CCC  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 14030  003CD0  0E0D               	movlw	13
 14031  003CD2  ECC5  F028         	call	_writeEEPROM
 14032                           
 14033                           ;sysParams.h: 93: writeEEPROM(14, fData.floatHB);
 14034  003CD6  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 14035  003CDA  0E0E               	movlw	14
 14036  003CDC  ECC5  F028         	call	_writeEEPROM
 14037                           
 14038                           ;sysParams.h: 94: writeEEPROM(15, fData.floatLB);
 14039  003CE0  C0CC  F075         	movff	_fData,writeEEPROM@data
 14040  003CE4  0E0F               	movlw	15
 14041  003CE6  ECC5  F028         	call	_writeEEPROM
 14042                           
 14043                           ;sysParams.h: 95: fData.floatdat = velocidadMasa;
 14044  003CEA  C03B  F0CC         	movff	_velocidadMasa,_fData
 14045  003CEE  C03C  F0CD         	movff	_velocidadMasa+1,_fData+1
 14046  003CF2  C03D  F0CE         	movff	_velocidadMasa+2,_fData+2
 14047  003CF6  C03E  F0CF         	movff	_velocidadMasa+3,_fData+3
 14048                           
 14049                           ;sysParams.h: 96: writeEEPROM(16, fData.floatMB);
 14050  003CFA  C0CF  F075         	movff	_fData+3,writeEEPROM@data
 14051  003CFE  0E10               	movlw	16
 14052  003D00  ECC5  F028         	call	_writeEEPROM
 14053                           
 14054                           ;sysParams.h: 97: writeEEPROM(17, fData.floatUB);
 14055  003D04  C0CE  F075         	movff	_fData+2,writeEEPROM@data
 14056  003D08  0E11               	movlw	17
 14057  003D0A  ECC5  F028         	call	_writeEEPROM
 14058                           
 14059                           ;sysParams.h: 98: writeEEPROM(18, fData.floatHB);
 14060  003D0E  C0CD  F075         	movff	_fData+1,writeEEPROM@data
 14061  003D12  0E12               	movlw	18
 14062  003D14  ECC5  F028         	call	_writeEEPROM
 14063                           
 14064                           ;sysParams.h: 99: writeEEPROM(19, fData.floatLB);
 14065  003D18  C0CC  F075         	movff	_fData,writeEEPROM@data
 14066  003D1C  0E13               	movlw	19
 14067  003D1E  ECC5  F028         	call	_writeEEPROM
 14068                           
 14069                           ;sysParams.h: 100: EECON1bits.WREN = 0;
 14070  003D22  94A6               	bcf	4006,2,c	;volatile
 14071                           
 14072                           ;sysParams.h: 101: INTCONbits.GIE = ie;
 14073  003D24  B049               	btfsc	_ie,0,c
 14074  003D26  D002               	bra	u9535
 14075  003D28  9EF2               	bcf	intcon,7,c	;volatile
 14076  003D2A  D001               	bra	u9536
 14077  003D2C                     u9535:
 14078  003D2C  8EF2               	bsf	intcon,7,c	;volatile
 14079  003D2E                     u9536:
 14080                           
 14081                           ;sysParams.h: 102: calcSysVars();
 14082  003D2E  EC26  F01C         	call	_calcSysVars	;wreg free
 14083  003D32  0012               	return		;funcret
 14084  003D34                     __end_of_saveSysParams:
 14085                           	opt stack 0
 14086                           tblptru	equ	0xFF8
 14087                           tblptrh	equ	0xFF7
 14088                           tblptrl	equ	0xFF6
 14089                           tablat	equ	0xFF5
 14090                           prodh	equ	0xFF4
 14091                           prodl	equ	0xFF3
 14092                           intcon	equ	0xFF2
 14093                           postinc0	equ	0xFEE
 14094                           wreg	equ	0xFE8
 14095                           postdec1	equ	0xFE5
 14096                           fsr1l	equ	0xFE1
 14097                           indf2	equ	0xFDF
 14098                           postinc2	equ	0xFDE
 14099                           postdec2	equ	0xFDD
 14100                           fsr2h	equ	0xFDA
 14101                           fsr2l	equ	0xFD9
 14102                           status	equ	0xFD8
 14103                           
 14104 ;; *************** function _writeEEPROM *****************
 14105 ;; Defined at:
 14106 ;;		line 36 in file "source/sysParams.h"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  adr             1    wreg     unsigned char 
 14109 ;;  data            1   21[BANK0 ] unsigned char 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  adr             1   22[BANK0 ] unsigned char 
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg, status,2
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14121 ;;      Params:         0       1       0       0       0       0       0
 14122 ;;      Locals:         0       1       0       0       0       0       0
 14123 ;;      Temps:          0       0       0       0       0       0       0
 14124 ;;      Totals:         0       2       0       0       0       0       0
 14125 ;;Total ram usage:        2 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    8
 14128 ;; This function calls:
 14129 ;;		Nothing
 14130 ;; This function is called by:
 14131 ;;		_saveSysParams
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text48
 14136  00518A                     __ptext48:
 14137                           	opt stack 0
 14138  00518A                     _writeEEPROM:
 14139                           	opt stack 18
 14140                           
 14141                           ;incstack = 0
 14142                           ;writeEEPROM@adr stored from wreg
 14143  00518A  0100               	movlb	0	; () banked
 14144  00518C  6F76               	movwf	writeEEPROM@adr& (0+255),b
 14145                           
 14146                           ;sysParams.h: 37: EEADR = adr;
 14147  00518E  C076  FFA9         	movff	writeEEPROM@adr,4009	;volatile
 14148                           
 14149                           ;sysParams.h: 38: EEDATA = data;
 14150  005192  C075  FFA8         	movff	writeEEPROM@data,4008	;volatile
 14151                           
 14152                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 14153  005196  9EA6               	bcf	4006,7,c	;volatile
 14154                           
 14155                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 14156  005198  9CA6               	bcf	4006,6,c	;volatile
 14157                           
 14158                           ;sysParams.h: 41: EECON2 = 0x55;
 14159  00519A  0E55               	movlw	85
 14160  00519C  6EA7               	movwf	4007,c	;volatile
 14161                           
 14162                           ;sysParams.h: 42: EECON2 = 0xAA;
 14163  00519E  0EAA               	movlw	170
 14164  0051A0  6EA7               	movwf	4007,c	;volatile
 14165                           
 14166                           ;sysParams.h: 43: EECON1bits.WR = 1;
 14167  0051A2  82A6               	bsf	4006,1,c	;volatile
 14168  0051A4                     l282:
 14169  0051A4  A2A6               	btfss	4006,1,c	;volatile
 14170  0051A6  0012               	return	
 14171  0051A8  D7FD               	goto	l282
 14172  0051AA                     __end_of_writeEEPROM:
 14173                           	opt stack 0
 14174                           tblptru	equ	0xFF8
 14175                           tblptrh	equ	0xFF7
 14176                           tblptrl	equ	0xFF6
 14177                           tablat	equ	0xFF5
 14178                           prodh	equ	0xFF4
 14179                           prodl	equ	0xFF3
 14180                           intcon	equ	0xFF2
 14181                           postinc0	equ	0xFEE
 14182                           wreg	equ	0xFE8
 14183                           postdec1	equ	0xFE5
 14184                           fsr1l	equ	0xFE1
 14185                           indf2	equ	0xFDF
 14186                           postinc2	equ	0xFDE
 14187                           postdec2	equ	0xFDD
 14188                           fsr2h	equ	0xFDA
 14189                           fsr2l	equ	0xFD9
 14190                           status	equ	0xFD8
 14191                           
 14192 ;; *************** function _calcSysVars *****************
 14193 ;; Defined at:
 14194 ;;		line 62 in file "source/sysParams.h"
 14195 ;; Parameters:    Size  Location     Type
 14196 ;;		None
 14197 ;; Auto vars:     Size  Location     Type
 14198 ;;  temp            4   60[BANK0 ] float 
 14199 ;; Return value:  Size  Location     Type
 14200 ;;                  1    wreg      void 
 14201 ;; Registers used:
 14202 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 14203 ;; Tracked objects:
 14204 ;;		On entry : 0/0
 14205 ;;		On exit  : 0/0
 14206 ;;		Unchanged: 0/0
 14207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14208 ;;      Params:         0       0       0       0       0       0       0
 14209 ;;      Locals:         0       4       0       0       0       0       0
 14210 ;;      Temps:          0       0       0       0       0       0       0
 14211 ;;      Totals:         0       4       0       0       0       0       0
 14212 ;;Total ram usage:        4 bytes
 14213 ;; Hardware stack levels used:    1
 14214 ;; Hardware stack levels required when called:    9
 14215 ;; This function calls:
 14216 ;;		___fldiv
 14217 ;;		___flmul
 14218 ;; This function is called by:
 14219 ;;		_saveSysParams
 14220 ;; This function uses a non-reentrant model
 14221 ;;
 14222                           
 14223                           	psect	text49
 14224  00384C                     __ptext49:
 14225                           	opt stack 0
 14226  00384C                     _calcSysVars:
 14227                           	opt stack 17
 14228                           
 14229                           ;sysParams.h: 63: float temp = 0;
 14230                           
 14231                           ;incstack = 0
 14232  00384C  0E00               	movlw	0
 14233  00384E  0100               	movlb	0	; () banked
 14234  003850  6F9C               	movwf	calcSysVars@temp& (0+255),b
 14235  003852  0E00               	movlw	0
 14236  003854  6F9D               	movwf	(calcSysVars@temp+1)& (0+255),b
 14237  003856  0E00               	movlw	0
 14238  003858  6F9E               	movwf	(calcSysVars@temp+2)& (0+255),b
 14239  00385A  0E00               	movlw	0
 14240  00385C  6F9F               	movwf	(calcSysVars@temp+3)& (0+255),b
 14241                           
 14242                           ; BSR set to: 0
 14243                           ;sysParams.h: 64: temp = (float)diamTubo / 2000.0f;
 14244  00385E  C0DD  F075         	movff	_diamTubo,___fldiv@b
 14245  003862  C0DE  F076         	movff	_diamTubo+1,___fldiv@b+1
 14246  003866  C0DF  F077         	movff	_diamTubo+2,___fldiv@b+2
 14247  00386A  C0E0  F078         	movff	_diamTubo+3,___fldiv@b+3
 14248  00386E  0E00               	movlw	0
 14249  003870  0100               	movlb	0	; () banked
 14250  003872  6F79               	movwf	___fldiv@a& (0+255),b
 14251  003874  0E00               	movlw	0
 14252  003876  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 14253  003878  0EFA               	movlw	250
 14254  00387A  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 14255  00387C  0E44               	movlw	68
 14256  00387E  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 14257  003880  ECA2  F00D         	call	___fldiv	;wreg free
 14258  003884  C075  F09C         	movff	?___fldiv,calcSysVars@temp
 14259  003888  C076  F09D         	movff	?___fldiv+1,calcSysVars@temp+1
 14260  00388C  C077  F09E         	movff	?___fldiv+2,calcSysVars@temp+2
 14261  003890  C078  F09F         	movff	?___fldiv+3,calcSysVars@temp+3
 14262                           
 14263                           ;sysParams.h: 65: temp *= temp;
 14264  003894  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14265  003898  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14266  00389C  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14267  0038A0  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14268  0038A4  C09C  F087         	movff	calcSysVars@temp,___flmul@a
 14269  0038A8  C09D  F088         	movff	calcSysVars@temp+1,___flmul@a+1
 14270  0038AC  C09E  F089         	movff	calcSysVars@temp+2,___flmul@a+2
 14271  0038B0  C09F  F08A         	movff	calcSysVars@temp+3,___flmul@a+3
 14272  0038B4  EC4F  F00B         	call	___flmul	;wreg free
 14273  0038B8  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14274  0038BC  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14275  0038C0  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14276  0038C4  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14277                           
 14278                           ;sysParams.h: 66: temp *= pi;
 14279  0038C8  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14280  0038CC  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14281  0038D0  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14282  0038D4  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14283  0038D8  C14F  F087         	movff	_pi,___flmul@a
 14284  0038DC  C150  F088         	movff	_pi+1,___flmul@a+1
 14285  0038E0  C151  F089         	movff	_pi+2,___flmul@a+2
 14286  0038E4  C152  F08A         	movff	_pi+3,___flmul@a+3
 14287  0038E8  EC4F  F00B         	call	___flmul	;wreg free
 14288  0038EC  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14289  0038F0  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14290  0038F4  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14291  0038F8  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14292                           
 14293                           ;sysParams.h: 67: temp *= velocidadMasa;
 14294  0038FC  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14295  003900  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14296  003904  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14297  003908  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14298  00390C  C03B  F087         	movff	_velocidadMasa,___flmul@a
 14299  003910  C03C  F088         	movff	_velocidadMasa+1,___flmul@a+1
 14300  003914  C03D  F089         	movff	_velocidadMasa+2,___flmul@a+2
 14301  003918  C03E  F08A         	movff	_velocidadMasa+3,___flmul@a+3
 14302  00391C  EC4F  F00B         	call	___flmul	;wreg free
 14303  003920  C083  F09C         	movff	?___flmul,calcSysVars@temp
 14304  003924  C084  F09D         	movff	?___flmul+1,calcSysVars@temp+1
 14305  003928  C085  F09E         	movff	?___flmul+2,calcSysVars@temp+2
 14306  00392C  C086  F09F         	movff	?___flmul+3,calcSysVars@temp+3
 14307                           
 14308                           ;sysParams.h: 68: m3Xcorte = (float)temp * tiXcorte;
 14309  003930  C09C  F083         	movff	calcSysVars@temp,___flmul@b
 14310  003934  C09D  F084         	movff	calcSysVars@temp+1,___flmul@b+1
 14311  003938  C09E  F085         	movff	calcSysVars@temp+2,___flmul@b+2
 14312  00393C  C09F  F086         	movff	calcSysVars@temp+3,___flmul@b+3
 14313  003940  C037  F087         	movff	_tiXcorte,___flmul@a
 14314  003944  C038  F088         	movff	_tiXcorte+1,___flmul@a+1
 14315  003948  C039  F089         	movff	_tiXcorte+2,___flmul@a+2
 14316  00394C  C03A  F08A         	movff	_tiXcorte+3,___flmul@a+3
 14317  003950  EC4F  F00B         	call	___flmul	;wreg free
 14318  003954  C083  F033         	movff	?___flmul,_m3Xcorte
 14319  003958  C084  F034         	movff	?___flmul+1,_m3Xcorte+1
 14320  00395C  C085  F035         	movff	?___flmul+2,_m3Xcorte+2
 14321  003960  C086  F036         	movff	?___flmul+3,_m3Xcorte+3
 14322                           
 14323                           ;sysParams.h: 69: kgXcorte = (float)densidadMasa * m3Xcorte;
 14324  003964  C0D9  F083         	movff	_densidadMasa,___flmul@b
 14325  003968  C0DA  F084         	movff	_densidadMasa+1,___flmul@b+1
 14326  00396C  C0DB  F085         	movff	_densidadMasa+2,___flmul@b+2
 14327  003970  C0DC  F086         	movff	_densidadMasa+3,___flmul@b+3
 14328  003974  C033  F087         	movff	_m3Xcorte,___flmul@a
 14329  003978  C034  F088         	movff	_m3Xcorte+1,___flmul@a+1
 14330  00397C  C035  F089         	movff	_m3Xcorte+2,___flmul@a+2
 14331  003980  C036  F08A         	movff	_m3Xcorte+3,___flmul@a+3
 14332  003984  EC4F  F00B         	call	___flmul	;wreg free
 14333  003988  C083  F02F         	movff	?___flmul,_kgXcorte
 14334  00398C  C084  F030         	movff	?___flmul+1,_kgXcorte+1
 14335  003990  C085  F031         	movff	?___flmul+2,_kgXcorte+2
 14336  003994  C086  F032         	movff	?___flmul+3,_kgXcorte+3
 14337  003998  0012               	return		;funcret
 14338  00399A                     __end_of_calcSysVars:
 14339                           	opt stack 0
 14340                           tblptru	equ	0xFF8
 14341                           tblptrh	equ	0xFF7
 14342                           tblptrl	equ	0xFF6
 14343                           tablat	equ	0xFF5
 14344                           prodh	equ	0xFF4
 14345                           prodl	equ	0xFF3
 14346                           intcon	equ	0xFF2
 14347                           postinc0	equ	0xFEE
 14348                           wreg	equ	0xFE8
 14349                           postdec1	equ	0xFE5
 14350                           fsr1l	equ	0xFE1
 14351                           indf2	equ	0xFDF
 14352                           postinc2	equ	0xFDE
 14353                           postdec2	equ	0xFDD
 14354                           fsr2h	equ	0xFDA
 14355                           fsr2l	equ	0xFD9
 14356                           status	equ	0xFD8
 14357                           
 14358 ;; *************** function ___flmul *****************
 14359 ;; Defined at:
 14360 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  b               4   35[BANK0 ] void 
 14363 ;;  a               4   39[BANK0 ] void 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  prod            4   54[BANK0 ] struct .
 14366 ;;  grs             4   49[BANK0 ] unsigned long 
 14367 ;;  temp            2   58[BANK0 ] struct .
 14368 ;;  bexp            1   53[BANK0 ] unsigned char 
 14369 ;;  aexp            1   48[BANK0 ] unsigned char 
 14370 ;;  sign            1   47[BANK0 ] unsigned char 
 14371 ;; Return value:  Size  Location     Type
 14372 ;;                  4   35[BANK0 ] unsigned char 
 14373 ;; Registers used:
 14374 ;;		wreg, status,2, status,0, prodl, prodh
 14375 ;; Tracked objects:
 14376 ;;		On entry : 0/0
 14377 ;;		On exit  : 0/0
 14378 ;;		Unchanged: 0/0
 14379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14380 ;;      Params:         0       8       0       0       0       0       0
 14381 ;;      Locals:         0      13       0       0       0       0       0
 14382 ;;      Temps:          0       4       0       0       0       0       0
 14383 ;;      Totals:         0      25       0       0       0       0       0
 14384 ;;Total ram usage:       25 bytes
 14385 ;; Hardware stack levels used:    1
 14386 ;; Hardware stack levels required when called:    8
 14387 ;; This function calls:
 14388 ;;		Nothing
 14389 ;; This function is called by:
 14390 ;;		_calcSysVars
 14391 ;;		_fround
 14392 ;;		_scale
 14393 ;;		_printf
 14394 ;;		_preAutoCal
 14395 ;;		_autoCal
 14396 ;; This function uses a non-reentrant model
 14397 ;;
 14398                           
 14399                           	psect	text50
 14400  00169E                     __ptext50:
 14401                           	opt stack 0
 14402  00169E                     ___flmul:
 14403                           	opt stack 18
 14404                           
 14405                           ;incstack = 0
 14406  00169E  0100               	movlb	0	; () banked
 14407  0016A0  5186               	movf	(___flmul@b+3)& (0+255),w,b
 14408  0016A2  0B80               	andlw	128
 14409  0016A4  0100               	movlb	0	; () banked
 14410  0016A6  6F8F               	movwf	___flmul@sign& (0+255),b
 14411  0016A8  0100               	movlb	0	; () banked
 14412  0016AA  5186               	movf	(___flmul@b+3)& (0+255),w,b
 14413  0016AC  2586               	addwf	(___flmul@b+3)& (0+255),w,b
 14414  0016AE  0100               	movlb	0	; () banked
 14415  0016B0  6F95               	movwf	___flmul@bexp& (0+255),b
 14416                           
 14417                           ; BSR set to: 0
 14418  0016B2  0100               	movlb	0	; () banked
 14419  0016B4  AF85               	btfss	(___flmul@b+2)& (0+255),7,b
 14420  0016B6  D002               	goto	l7456
 14421                           
 14422                           ; BSR set to: 0
 14423  0016B8  0100               	movlb	0	; () banked
 14424  0016BA  8195               	bsf	___flmul@bexp& (0+255),0,b
 14425  0016BC                     l7456:
 14426                           
 14427                           ; BSR set to: 0
 14428  0016BC  0100               	movlb	0	; () banked
 14429  0016BE  5195               	movf	___flmul@bexp& (0+255),w,b
 14430  0016C0  0100               	movlb	0	; () banked
 14431  0016C2  B4D8               	btfsc	status,2,c
 14432  0016C4  D010               	goto	l7464
 14433                           
 14434                           ; BSR set to: 0
 14435  0016C6  0100               	movlb	0	; () banked
 14436  0016C8  2995               	incf	___flmul@bexp& (0+255),w,b
 14437  0016CA  A4D8               	btfss	status,2,c
 14438  0016CC  D009               	goto	l7462
 14439                           
 14440                           ; BSR set to: 0
 14441  0016CE  0E00               	movlw	0
 14442  0016D0  0100               	movlb	0	; () banked
 14443  0016D2  6F83               	movwf	___flmul@b& (0+255),b
 14444  0016D4  0E00               	movlw	0
 14445  0016D6  6F84               	movwf	(___flmul@b+1)& (0+255),b
 14446  0016D8  0E00               	movlw	0
 14447  0016DA  6F85               	movwf	(___flmul@b+2)& (0+255),b
 14448  0016DC  0E00               	movlw	0
 14449  0016DE  6F86               	movwf	(___flmul@b+3)& (0+255),b
 14450  0016E0                     l7462:
 14451                           
 14452                           ; BSR set to: 0
 14453  0016E0  0100               	movlb	0	; () banked
 14454  0016E2  8F85               	bsf	(___flmul@b+2)& (0+255),7,b
 14455  0016E4  D009               	goto	l7466
 14456  0016E6                     l7464:
 14457                           
 14458                           ; BSR set to: 0
 14459  0016E6  0E00               	movlw	0
 14460  0016E8  0100               	movlb	0	; () banked
 14461  0016EA  6F83               	movwf	___flmul@b& (0+255),b
 14462  0016EC  0E00               	movlw	0
 14463  0016EE  6F84               	movwf	(___flmul@b+1)& (0+255),b
 14464  0016F0  0E00               	movlw	0
 14465  0016F2  6F85               	movwf	(___flmul@b+2)& (0+255),b
 14466  0016F4  0E00               	movlw	0
 14467  0016F6  6F86               	movwf	(___flmul@b+3)& (0+255),b
 14468  0016F8                     l7466:
 14469                           
 14470                           ; BSR set to: 0
 14471  0016F8  0100               	movlb	0	; () banked
 14472  0016FA  518A               	movf	(___flmul@a+3)& (0+255),w,b
 14473  0016FC  0B80               	andlw	128
 14474  0016FE  0100               	movlb	0	; () banked
 14475  001700  1B8F               	xorwf	___flmul@sign& (0+255),f,b
 14476                           
 14477                           ; BSR set to: 0
 14478  001702  0100               	movlb	0	; () banked
 14479  001704  518A               	movf	(___flmul@a+3)& (0+255),w,b
 14480  001706  258A               	addwf	(___flmul@a+3)& (0+255),w,b
 14481  001708  0100               	movlb	0	; () banked
 14482  00170A  6F90               	movwf	___flmul@aexp& (0+255),b
 14483                           
 14484                           ; BSR set to: 0
 14485  00170C  0100               	movlb	0	; () banked
 14486  00170E  AF89               	btfss	(___flmul@a+2)& (0+255),7,b
 14487  001710  D002               	goto	l7474
 14488                           
 14489                           ; BSR set to: 0
 14490  001712  0100               	movlb	0	; () banked
 14491  001714  8190               	bsf	___flmul@aexp& (0+255),0,b
 14492  001716                     l7474:
 14493                           
 14494                           ; BSR set to: 0
 14495  001716  0100               	movlb	0	; () banked
 14496  001718  5190               	movf	___flmul@aexp& (0+255),w,b
 14497  00171A  0100               	movlb	0	; () banked
 14498  00171C  B4D8               	btfsc	status,2,c
 14499  00171E  D010               	goto	l7482
 14500                           
 14501                           ; BSR set to: 0
 14502  001720  0100               	movlb	0	; () banked
 14503  001722  2990               	incf	___flmul@aexp& (0+255),w,b
 14504  001724  A4D8               	btfss	status,2,c
 14505  001726  D009               	goto	l7480
 14506                           
 14507                           ; BSR set to: 0
 14508  001728  0E00               	movlw	0
 14509  00172A  0100               	movlb	0	; () banked
 14510  00172C  6F87               	movwf	___flmul@a& (0+255),b
 14511  00172E  0E00               	movlw	0
 14512  001730  6F88               	movwf	(___flmul@a+1)& (0+255),b
 14513  001732  0E00               	movlw	0
 14514  001734  6F89               	movwf	(___flmul@a+2)& (0+255),b
 14515  001736  0E00               	movlw	0
 14516  001738  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 14517  00173A                     l7480:
 14518                           
 14519                           ; BSR set to: 0
 14520  00173A  0100               	movlb	0	; () banked
 14521  00173C  8F89               	bsf	(___flmul@a+2)& (0+255),7,b
 14522  00173E  D009               	goto	l1430
 14523  001740                     l7482:
 14524                           
 14525                           ; BSR set to: 0
 14526  001740  0E00               	movlw	0
 14527  001742  0100               	movlb	0	; () banked
 14528  001744  6F87               	movwf	___flmul@a& (0+255),b
 14529  001746  0E00               	movlw	0
 14530  001748  6F88               	movwf	(___flmul@a+1)& (0+255),b
 14531  00174A  0E00               	movlw	0
 14532  00174C  6F89               	movwf	(___flmul@a+2)& (0+255),b
 14533  00174E  0E00               	movlw	0
 14534  001750  6F8A               	movwf	(___flmul@a+3)& (0+255),b
 14535  001752                     l1430:
 14536                           
 14537                           ; BSR set to: 0
 14538  001752  0100               	movlb	0	; () banked
 14539  001754  5190               	movf	___flmul@aexp& (0+255),w,b
 14540  001756  0100               	movlb	0	; () banked
 14541  001758  B4D8               	btfsc	status,2,c
 14542  00175A  D005               	goto	l7486
 14543                           
 14544                           ; BSR set to: 0
 14545  00175C  0100               	movlb	0	; () banked
 14546  00175E  5195               	movf	___flmul@bexp& (0+255),w,b
 14547  001760  0100               	movlb	0	; () banked
 14548  001762  A4D8               	btfss	status,2,c
 14549  001764  D00A               	goto	l7490
 14550  001766                     l7486:
 14551                           
 14552                           ; BSR set to: 0
 14553  001766  0E00               	movlw	0
 14554  001768  0100               	movlb	0	; () banked
 14555  00176A  6F83               	movwf	?___flmul& (0+255),b
 14556  00176C  0E00               	movlw	0
 14557  00176E  6F84               	movwf	(?___flmul+1)& (0+255),b
 14558  001770  0E00               	movlw	0
 14559  001772  6F85               	movwf	(?___flmul+2)& (0+255),b
 14560  001774  0E00               	movlw	0
 14561  001776  6F86               	movwf	(?___flmul+3)& (0+255),b
 14562                           
 14563                           ; BSR set to: 0
 14564  001778  0012               	return	
 14565  00177A                     l7490:
 14566                           
 14567                           ; BSR set to: 0
 14568  00177A  0100               	movlb	0	; () banked
 14569  00177C  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14570  00177E  0100               	movlb	0	; () banked
 14571  001780  0383               	mulwf	___flmul@b& (0+255),b
 14572  001782  CFF3 F09A          	movff	prodl,___flmul@temp
 14573  001786  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14574                           
 14575                           ; BSR set to: 0
 14576  00178A  0100               	movlb	0	; () banked
 14577  00178C  519A               	movf	___flmul@temp& (0+255),w,b
 14578  00178E  0100               	movlb	0	; () banked
 14579  001790  6F91               	movwf	___flmul@grs& (0+255),b
 14580  001792  6B92               	clrf	(___flmul@grs+1)& (0+255),b
 14581  001794  6B93               	clrf	(___flmul@grs+2)& (0+255),b
 14582  001796  6B94               	clrf	(___flmul@grs+3)& (0+255),b
 14583                           
 14584                           ; BSR set to: 0
 14585  001798  0100               	movlb	0	; () banked
 14586  00179A  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14587  00179C  0100               	movlb	0	; () banked
 14588  00179E  6F96               	movwf	___flmul@prod& (0+255),b
 14589  0017A0  6B97               	clrf	(___flmul@prod+1)& (0+255),b
 14590  0017A2  6B98               	clrf	(___flmul@prod+2)& (0+255),b
 14591  0017A4  6B99               	clrf	(___flmul@prod+3)& (0+255),b
 14592  0017A6  0100               	movlb	0	; () banked
 14593  0017A8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14594  0017AA  0100               	movlb	0	; () banked
 14595  0017AC  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14596  0017AE  CFF3 F09A          	movff	prodl,___flmul@temp
 14597  0017B2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14598                           
 14599                           ; BSR set to: 0
 14600  0017B6  0100               	movlb	0	; () banked
 14601  0017B8  519A               	movf	___flmul@temp& (0+255),w,b
 14602  0017BA  0100               	movlb	0	; () banked
 14603  0017BC  2791               	addwf	___flmul@grs& (0+255),f,b
 14604  0017BE  0E00               	movlw	0
 14605  0017C0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14606  0017C2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14607  0017C4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14608                           
 14609                           ; BSR set to: 0
 14610  0017C6  0100               	movlb	0	; () banked
 14611  0017C8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14612  0017CA  0100               	movlb	0	; () banked
 14613  0017CC  2796               	addwf	___flmul@prod& (0+255),f,b
 14614  0017CE  0E00               	movlw	0
 14615  0017D0  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14616  0017D2  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14617  0017D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14618  0017D6  0100               	movlb	0	; () banked
 14619  0017D8  5187               	movf	___flmul@a& (0+255),w,b
 14620  0017DA  0100               	movlb	0	; () banked
 14621  0017DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14622  0017DE  CFF3 F09A          	movff	prodl,___flmul@temp
 14623  0017E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14624                           
 14625                           ; BSR set to: 0
 14626  0017E6  0100               	movlb	0	; () banked
 14627  0017E8  519A               	movf	___flmul@temp& (0+255),w,b
 14628  0017EA  0100               	movlb	0	; () banked
 14629  0017EC  2791               	addwf	___flmul@grs& (0+255),f,b
 14630  0017EE  0E00               	movlw	0
 14631  0017F0  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14632  0017F2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14633  0017F4  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14634                           
 14635                           ; BSR set to: 0
 14636  0017F6  0100               	movlb	0	; () banked
 14637  0017F8  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14638  0017FA  0100               	movlb	0	; () banked
 14639  0017FC  2796               	addwf	___flmul@prod& (0+255),f,b
 14640  0017FE  0E00               	movlw	0
 14641  001800  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14642  001802  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14643  001804  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14644                           
 14645                           ; BSR set to: 0
 14646  001806  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14647  00180A  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14648  00180E  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14649  001812  0100               	movlb	0	; () banked
 14650  001814  6B91               	clrf	___flmul@grs& (0+255),b
 14651                           
 14652                           ; BSR set to: 0
 14653  001816  0100               	movlb	0	; () banked
 14654  001818  5187               	movf	___flmul@a& (0+255),w,b
 14655  00181A  0100               	movlb	0	; () banked
 14656  00181C  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14657  00181E  CFF3 F09A          	movff	prodl,___flmul@temp
 14658  001822  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14659                           
 14660                           ; BSR set to: 0
 14661  001826  0100               	movlb	0	; () banked
 14662  001828  519A               	movf	___flmul@temp& (0+255),w,b
 14663  00182A  0100               	movlb	0	; () banked
 14664  00182C  2791               	addwf	___flmul@grs& (0+255),f,b
 14665  00182E  0100               	movlb	0	; () banked
 14666  001830  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14667  001832  0100               	movlb	0	; () banked
 14668  001834  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14669  001836  0E00               	movlw	0
 14670  001838  0100               	movlb	0	; () banked
 14671  00183A  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14672  00183C  0E00               	movlw	0
 14673  00183E  0100               	movlb	0	; () banked
 14674  001840  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14675                           
 14676                           ; BSR set to: 0
 14677  001842  0100               	movlb	0	; () banked
 14678  001844  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14679  001846  0100               	movlb	0	; () banked
 14680  001848  0383               	mulwf	___flmul@b& (0+255),b
 14681  00184A  CFF3 F09A          	movff	prodl,___flmul@temp
 14682  00184E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14683                           
 14684                           ; BSR set to: 0
 14685  001852  0100               	movlb	0	; () banked
 14686  001854  519A               	movf	___flmul@temp& (0+255),w,b
 14687  001856  0100               	movlb	0	; () banked
 14688  001858  2791               	addwf	___flmul@grs& (0+255),f,b
 14689  00185A  0100               	movlb	0	; () banked
 14690  00185C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14691  00185E  0100               	movlb	0	; () banked
 14692  001860  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14693  001862  0E00               	movlw	0
 14694  001864  0100               	movlb	0	; () banked
 14695  001866  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14696  001868  0E00               	movlw	0
 14697  00186A  0100               	movlb	0	; () banked
 14698  00186C  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14699                           
 14700                           ; BSR set to: 0
 14701  00186E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14702  001872  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14703  001876  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14704  00187A  0100               	movlb	0	; () banked
 14705  00187C  6B91               	clrf	___flmul@grs& (0+255),b
 14706  00187E  0100               	movlb	0	; () banked
 14707  001880  5187               	movf	___flmul@a& (0+255),w,b
 14708  001882  0100               	movlb	0	; () banked
 14709  001884  0383               	mulwf	___flmul@b& (0+255),b
 14710  001886  CFF3 F09A          	movff	prodl,___flmul@temp
 14711  00188A  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14712                           
 14713                           ; BSR set to: 0
 14714  00188E  0100               	movlb	0	; () banked
 14715  001890  519A               	movf	___flmul@temp& (0+255),w,b
 14716  001892  0100               	movlb	0	; () banked
 14717  001894  2791               	addwf	___flmul@grs& (0+255),f,b
 14718  001896  0100               	movlb	0	; () banked
 14719  001898  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14720  00189A  0100               	movlb	0	; () banked
 14721  00189C  2392               	addwfc	(___flmul@grs+1)& (0+255),f,b
 14722  00189E  0E00               	movlw	0
 14723  0018A0  0100               	movlb	0	; () banked
 14724  0018A2  2393               	addwfc	(___flmul@grs+2)& (0+255),f,b
 14725  0018A4  0E00               	movlw	0
 14726  0018A6  0100               	movlb	0	; () banked
 14727  0018A8  2394               	addwfc	(___flmul@grs+3)& (0+255),f,b
 14728                           
 14729                           ; BSR set to: 0
 14730  0018AA  0100               	movlb	0	; () banked
 14731  0018AC  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14732  0018AE  0100               	movlb	0	; () banked
 14733  0018B0  0384               	mulwf	(___flmul@b+1)& (0+255),b
 14734  0018B2  CFF3 F09A          	movff	prodl,___flmul@temp
 14735  0018B6  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14736  0018BA  0100               	movlb	0	; () banked
 14737  0018BC  519A               	movf	___flmul@temp& (0+255),w,b
 14738  0018BE  0100               	movlb	0	; () banked
 14739  0018C0  2796               	addwf	___flmul@prod& (0+255),f,b
 14740  0018C2  0100               	movlb	0	; () banked
 14741  0018C4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14742  0018C6  0100               	movlb	0	; () banked
 14743  0018C8  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14744  0018CA  0E00               	movlw	0
 14745  0018CC  0100               	movlb	0	; () banked
 14746  0018CE  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14747  0018D0  0E00               	movlw	0
 14748  0018D2  0100               	movlb	0	; () banked
 14749  0018D4  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14750                           
 14751                           ; BSR set to: 0
 14752  0018D6  0100               	movlb	0	; () banked
 14753  0018D8  5188               	movf	(___flmul@a+1)& (0+255),w,b
 14754  0018DA  0100               	movlb	0	; () banked
 14755  0018DC  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14756  0018DE  CFF3 F09A          	movff	prodl,___flmul@temp
 14757  0018E2  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14758                           
 14759                           ; BSR set to: 0
 14760  0018E6  0100               	movlb	0	; () banked
 14761  0018E8  519A               	movf	___flmul@temp& (0+255),w,b
 14762  0018EA  0100               	movlb	0	; () banked
 14763  0018EC  2796               	addwf	___flmul@prod& (0+255),f,b
 14764  0018EE  0100               	movlb	0	; () banked
 14765  0018F0  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14766  0018F2  0100               	movlb	0	; () banked
 14767  0018F4  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14768  0018F6  0E00               	movlw	0
 14769  0018F8  0100               	movlb	0	; () banked
 14770  0018FA  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14771  0018FC  0E00               	movlw	0
 14772  0018FE  0100               	movlb	0	; () banked
 14773  001900  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14774  001902  0100               	movlb	0	; () banked
 14775  001904  5189               	movf	(___flmul@a+2)& (0+255),w,b
 14776  001906  0100               	movlb	0	; () banked
 14777  001908  0385               	mulwf	(___flmul@b+2)& (0+255),b
 14778  00190A  CFF3 F09A          	movff	prodl,___flmul@temp
 14779  00190E  CFF4 F09B          	movff	prodh,___flmul@temp+1
 14780                           
 14781                           ; BSR set to: 0
 14782  001912  0100               	movlb	0	; () banked
 14783  001914  519A               	movf	___flmul@temp& (0+255),w,b
 14784  001916  0100               	movlb	0	; () banked
 14785  001918  6F8B               	movwf	??___flmul& (0+255),b
 14786  00191A  0100               	movlb	0	; () banked
 14787  00191C  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 14788  00191E  0100               	movlb	0	; () banked
 14789  001920  6F8C               	movwf	(??___flmul+1)& (0+255),b
 14790  001922  0100               	movlb	0	; () banked
 14791  001924  6B8D               	clrf	(??___flmul+2)& (0+255),b
 14792  001926  0100               	movlb	0	; () banked
 14793  001928  6B8E               	clrf	(??___flmul+3)& (0+255),b
 14794  00192A  C08D  F08E         	movff	??___flmul+2,??___flmul+3
 14795  00192E  C08C  F08D         	movff	??___flmul+1,??___flmul+2
 14796  001932  C08B  F08C         	movff	??___flmul,??___flmul+1
 14797  001936  0100               	movlb	0	; () banked
 14798  001938  6B8B               	clrf	??___flmul& (0+255),b
 14799  00193A  0100               	movlb	0	; () banked
 14800  00193C  518B               	movf	??___flmul& (0+255),w,b
 14801  00193E  0100               	movlb	0	; () banked
 14802  001940  2796               	addwf	___flmul@prod& (0+255),f,b
 14803  001942  0100               	movlb	0	; () banked
 14804  001944  518C               	movf	(??___flmul+1)& (0+255),w,b
 14805  001946  0100               	movlb	0	; () banked
 14806  001948  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14807  00194A  0100               	movlb	0	; () banked
 14808  00194C  518D               	movf	(??___flmul+2)& (0+255),w,b
 14809  00194E  0100               	movlb	0	; () banked
 14810  001950  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14811  001952  0100               	movlb	0	; () banked
 14812  001954  518E               	movf	(??___flmul+3)& (0+255),w,b
 14813  001956  0100               	movlb	0	; () banked
 14814  001958  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14815                           
 14816                           ; BSR set to: 0
 14817  00195A  C091  F08B         	movff	___flmul@grs,??___flmul
 14818  00195E  C092  F08C         	movff	___flmul@grs+1,??___flmul+1
 14819  001962  C093  F08D         	movff	___flmul@grs+2,??___flmul+2
 14820  001966  C094  F08E         	movff	___flmul@grs+3,??___flmul+3
 14821  00196A  0E19               	movlw	25
 14822  00196C  D006               	goto	u8910
 14823  00196E                     u8915:
 14824  00196E  0100               	movlb	0	; () banked
 14825  001970  90D8               	bcf	status,0,c
 14826  001972  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 14827  001974  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 14828  001976  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 14829  001978  338B               	rrcf	??___flmul& (0+255),f,b
 14830  00197A                     u8910:
 14831  00197A  2EE8               	decfsz	wreg,f,c
 14832  00197C  D7F8               	goto	u8915
 14833  00197E  0100               	movlb	0	; () banked
 14834  001980  518B               	movf	??___flmul& (0+255),w,b
 14835  001982  0100               	movlb	0	; () banked
 14836  001984  2796               	addwf	___flmul@prod& (0+255),f,b
 14837  001986  0100               	movlb	0	; () banked
 14838  001988  518C               	movf	(??___flmul+1)& (0+255),w,b
 14839  00198A  0100               	movlb	0	; () banked
 14840  00198C  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14841  00198E  0100               	movlb	0	; () banked
 14842  001990  518D               	movf	(??___flmul+2)& (0+255),w,b
 14843  001992  0100               	movlb	0	; () banked
 14844  001994  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14845  001996  0100               	movlb	0	; () banked
 14846  001998  518E               	movf	(??___flmul+3)& (0+255),w,b
 14847  00199A  0100               	movlb	0	; () banked
 14848  00199C  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14849                           
 14850                           ; BSR set to: 0
 14851  00199E  C093  F094         	movff	___flmul@grs+2,___flmul@grs+3
 14852  0019A2  C092  F093         	movff	___flmul@grs+1,___flmul@grs+2
 14853  0019A6  C091  F092         	movff	___flmul@grs,___flmul@grs+1
 14854  0019AA  0100               	movlb	0	; () banked
 14855  0019AC  6B91               	clrf	___flmul@grs& (0+255),b
 14856                           
 14857                           ; BSR set to: 0
 14858  0019AE  0100               	movlb	0	; () banked
 14859  0019B0  5190               	movf	___flmul@aexp& (0+255),w,b
 14860  0019B2  C095  F08B         	movff	___flmul@bexp,??___flmul
 14861  0019B6  0100               	movlb	0	; () banked
 14862  0019B8  6B8C               	clrf	(??___flmul+1)& (0+255),b
 14863  0019BA  0100               	movlb	0	; () banked
 14864  0019BC  278B               	addwf	??___flmul& (0+255),f,b
 14865  0019BE  0E00               	movlw	0
 14866  0019C0  238C               	addwfc	(??___flmul+1)& (0+255),f,b
 14867  0019C2  0E82               	movlw	130
 14868  0019C4  0100               	movlb	0	; () banked
 14869  0019C6  258B               	addwf	??___flmul& (0+255),w,b
 14870  0019C8  0100               	movlb	0	; () banked
 14871  0019CA  6F9A               	movwf	___flmul@temp& (0+255),b
 14872  0019CC  0EFF               	movlw	255
 14873  0019CE  0100               	movlb	0	; () banked
 14874  0019D0  218C               	addwfc	(??___flmul+1)& (0+255),w,b
 14875  0019D2  0100               	movlb	0	; () banked
 14876  0019D4  6F9B               	movwf	(___flmul@temp+1)& (0+255),b
 14877  0019D6  D015               	goto	l7538
 14878  0019D8                     l7532:
 14879                           
 14880                           ; BSR set to: 0
 14881  0019D8  0100               	movlb	0	; () banked
 14882  0019DA  90D8               	bcf	status,0,c
 14883  0019DC  3796               	rlcf	___flmul@prod& (0+255),f,b
 14884  0019DE  3797               	rlcf	(___flmul@prod+1)& (0+255),f,b
 14885  0019E0  3798               	rlcf	(___flmul@prod+2)& (0+255),f,b
 14886  0019E2  3799               	rlcf	(___flmul@prod+3)& (0+255),f,b
 14887                           
 14888                           ; BSR set to: 0
 14889  0019E4  0100               	movlb	0	; () banked
 14890  0019E6  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 14891  0019E8  D002               	goto	l1437
 14892                           
 14893                           ; BSR set to: 0
 14894  0019EA  0100               	movlb	0	; () banked
 14895  0019EC  8196               	bsf	___flmul@prod& (0+255),0,b
 14896  0019EE                     l1437:
 14897                           
 14898                           ; BSR set to: 0
 14899  0019EE  0100               	movlb	0	; () banked
 14900  0019F0  90D8               	bcf	status,0,c
 14901  0019F2  3791               	rlcf	___flmul@grs& (0+255),f,b
 14902  0019F4  3792               	rlcf	(___flmul@grs+1)& (0+255),f,b
 14903  0019F6  3793               	rlcf	(___flmul@grs+2)& (0+255),f,b
 14904  0019F8  3794               	rlcf	(___flmul@grs+3)& (0+255),f,b
 14905  0019FA  0100               	movlb	0	; () banked
 14906  0019FC  079A               	decf	___flmul@temp& (0+255),f,b
 14907  0019FE  A0D8               	btfss	status,0,c
 14908  001A00  079B               	decf	(___flmul@temp+1)& (0+255),f,b
 14909  001A02                     l7538:
 14910                           
 14911                           ; BSR set to: 0
 14912  001A02  0100               	movlb	0	; () banked
 14913  001A04  AF98               	btfss	(___flmul@prod+2)& (0+255),7,b
 14914  001A06  D7E8               	goto	l7532
 14915                           
 14916                           ; BSR set to: 0
 14917                           
 14918                           ; BSR set to: 0
 14919  001A08  0E00               	movlw	0
 14920  001A0A  0100               	movlb	0	; () banked
 14921  001A0C  6F90               	movwf	___flmul@aexp& (0+255),b
 14922                           
 14923                           ; BSR set to: 0
 14924  001A0E  0100               	movlb	0	; () banked
 14925  001A10  AF94               	btfss	(___flmul@grs+3)& (0+255),7,b
 14926  001A12  D024               	goto	l1439
 14927                           
 14928                           ; BSR set to: 0
 14929  001A14  0EFF               	movlw	255
 14930  001A16  0100               	movlb	0	; () banked
 14931  001A18  1591               	andwf	___flmul@grs& (0+255),w,b
 14932  001A1A  0100               	movlb	0	; () banked
 14933  001A1C  6F8B               	movwf	??___flmul& (0+255),b
 14934  001A1E  0EFF               	movlw	255
 14935  001A20  0100               	movlb	0	; () banked
 14936  001A22  1592               	andwf	(___flmul@grs+1)& (0+255),w,b
 14937  001A24  0100               	movlb	0	; () banked
 14938  001A26  6F8C               	movwf	(??___flmul+1)& (0+255),b
 14939  001A28  0EFF               	movlw	255
 14940  001A2A  0100               	movlb	0	; () banked
 14941  001A2C  1593               	andwf	(___flmul@grs+2)& (0+255),w,b
 14942  001A2E  0100               	movlb	0	; () banked
 14943  001A30  6F8D               	movwf	(??___flmul+2)& (0+255),b
 14944  001A32  0E7F               	movlw	127
 14945  001A34  0100               	movlb	0	; () banked
 14946  001A36  1594               	andwf	(___flmul@grs+3)& (0+255),w,b
 14947  001A38  0100               	movlb	0	; () banked
 14948  001A3A  6F8E               	movwf	(??___flmul+3)& (0+255),b
 14949  001A3C  0100               	movlb	0	; () banked
 14950  001A3E  518B               	movf	??___flmul& (0+255),w,b
 14951  001A40  0100               	movlb	0	; () banked
 14952  001A42  118C               	iorwf	(??___flmul+1)& (0+255),w,b
 14953  001A44  0100               	movlb	0	; () banked
 14954  001A46  118D               	iorwf	(??___flmul+2)& (0+255),w,b
 14955  001A48  0100               	movlb	0	; () banked
 14956  001A4A  118E               	iorwf	(??___flmul+3)& (0+255),w,b
 14957  001A4C  A4D8               	btfss	status,2,c
 14958  001A4E  D003               	goto	l7548
 14959                           
 14960                           ; BSR set to: 0
 14961                           
 14962                           ; BSR set to: 0
 14963  001A50  0100               	movlb	0	; () banked
 14964  001A52  A196               	btfss	___flmul@prod& (0+255),0,b
 14965  001A54  D003               	goto	l1439
 14966  001A56                     l7548:
 14967                           
 14968                           ; BSR set to: 0
 14969  001A56  0E01               	movlw	1
 14970  001A58  0100               	movlb	0	; () banked
 14971  001A5A  6F90               	movwf	___flmul@aexp& (0+255),b
 14972  001A5C                     l1439:
 14973                           
 14974                           ; BSR set to: 0
 14975  001A5C  0100               	movlb	0	; () banked
 14976  001A5E  5190               	movf	___flmul@aexp& (0+255),w,b
 14977  001A60  0100               	movlb	0	; () banked
 14978  001A62  B4D8               	btfsc	status,2,c
 14979  001A64  D023               	goto	l7558
 14980                           
 14981                           ; BSR set to: 0
 14982  001A66  0E01               	movlw	1
 14983  001A68  0100               	movlb	0	; () banked
 14984  001A6A  2796               	addwf	___flmul@prod& (0+255),f,b
 14985  001A6C  0E00               	movlw	0
 14986  001A6E  2397               	addwfc	(___flmul@prod+1)& (0+255),f,b
 14987  001A70  2398               	addwfc	(___flmul@prod+2)& (0+255),f,b
 14988  001A72  2399               	addwfc	(___flmul@prod+3)& (0+255),f,b
 14989                           
 14990                           ; BSR set to: 0
 14991  001A74  0100               	movlb	0	; () banked
 14992  001A76  A199               	btfss	(___flmul@prod+3)& (0+255),0,b
 14993  001A78  D019               	goto	l7558
 14994                           
 14995                           ; BSR set to: 0
 14996  001A7A  C096  F08B         	movff	___flmul@prod,??___flmul
 14997  001A7E  C097  F08C         	movff	___flmul@prod+1,??___flmul+1
 14998  001A82  C098  F08D         	movff	___flmul@prod+2,??___flmul+2
 14999  001A86  C099  F08E         	movff	___flmul@prod+3,??___flmul+3
 15000  001A8A  0100               	movlb	0	; () banked
 15001  001A8C  358E               	rlcf	(??___flmul+3)& (0+255),w,b
 15002  001A8E  338E               	rrcf	(??___flmul+3)& (0+255),f,b
 15003  001A90  338D               	rrcf	(??___flmul+2)& (0+255),f,b
 15004  001A92  338C               	rrcf	(??___flmul+1)& (0+255),f,b
 15005  001A94  338B               	rrcf	??___flmul& (0+255),f,b
 15006  001A96  C08B  F096         	movff	??___flmul,___flmul@prod
 15007  001A9A  C08C  F097         	movff	??___flmul+1,___flmul@prod+1
 15008  001A9E  C08D  F098         	movff	??___flmul+2,___flmul@prod+2
 15009  001AA2  C08E  F099         	movff	??___flmul+3,___flmul@prod+3
 15010                           
 15011                           ; BSR set to: 0
 15012  001AA6  0100               	movlb	0	; () banked
 15013  001AA8  4B9A               	infsnz	___flmul@temp& (0+255),f,b
 15014  001AAA  2B9B               	incf	(___flmul@temp+1)& (0+255),f,b
 15015  001AAC                     l7558:
 15016                           
 15017                           ; BSR set to: 0
 15018  001AAC  0100               	movlb	0	; () banked
 15019  001AAE  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15020  001AB0  D010               	goto	l7562
 15021  001AB2  0100               	movlb	0	; () banked
 15022  001AB4  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 15023  001AB6  E104               	bnz	u8990
 15024  001AB8  0100               	movlb	0	; () banked
 15025  001ABA  299A               	incf	___flmul@temp& (0+255),w,b
 15026  001ABC  A0D8               	btfss	status,0,c
 15027  001ABE  D009               	goto	l7562
 15028  001AC0                     u8990:
 15029                           
 15030                           ; BSR set to: 0
 15031  001AC0  0E00               	movlw	0
 15032  001AC2  0100               	movlb	0	; () banked
 15033  001AC4  6F96               	movwf	___flmul@prod& (0+255),b
 15034  001AC6  0E00               	movlw	0
 15035  001AC8  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 15036  001ACA  0E80               	movlw	128
 15037  001ACC  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 15038  001ACE  0E7F               	movlw	127
 15039  001AD0  D02B               	goto	L9
 15040  001AD2                     l7562:
 15041                           
 15042                           ; BSR set to: 0
 15043  001AD2  0100               	movlb	0	; () banked
 15044  001AD4  BF9B               	btfsc	(___flmul@temp+1)& (0+255),7,b
 15045  001AD6  D007               	goto	l7564
 15046  001AD8  0100               	movlb	0	; () banked
 15047  001ADA  519B               	movf	(___flmul@temp+1)& (0+255),w,b
 15048  001ADC  E111               	bnz	l1447
 15049  001ADE  0100               	movlb	0	; () banked
 15050  001AE0  059A               	decf	___flmul@temp& (0+255),w,b
 15051  001AE2  B0D8               	btfsc	status,0,c
 15052  001AE4  D00D               	goto	l1447
 15053  001AE6                     l7564:
 15054                           
 15055                           ; BSR set to: 0
 15056  001AE6  0E00               	movlw	0
 15057  001AE8  0100               	movlb	0	; () banked
 15058  001AEA  6F96               	movwf	___flmul@prod& (0+255),b
 15059  001AEC  0E00               	movlw	0
 15060  001AEE  6F97               	movwf	(___flmul@prod+1)& (0+255),b
 15061  001AF0  0E00               	movlw	0
 15062  001AF2  6F98               	movwf	(___flmul@prod+2)& (0+255),b
 15063  001AF4  0E00               	movlw	0
 15064  001AF6  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 15065  001AF8  0E00               	movlw	0
 15066  001AFA  0100               	movlb	0	; () banked
 15067  001AFC  6F8F               	movwf	___flmul@sign& (0+255),b
 15068  001AFE  D015               	goto	l7574
 15069  001B00                     l1447:
 15070                           
 15071                           ; BSR set to: 0
 15072  001B00  C09A  F095         	movff	___flmul@temp,___flmul@bexp
 15073                           
 15074                           ; BSR set to: 0
 15075  001B04  0EFF               	movlw	255
 15076  001B06  0100               	movlb	0	; () banked
 15077  001B08  1796               	andwf	___flmul@prod& (0+255),f,b
 15078  001B0A  0EFF               	movlw	255
 15079  001B0C  1797               	andwf	(___flmul@prod+1)& (0+255),f,b
 15080  001B0E  0E7F               	movlw	127
 15081  001B10  1798               	andwf	(___flmul@prod+2)& (0+255),f,b
 15082  001B12  0E00               	movlw	0
 15083  001B14  1799               	andwf	(___flmul@prod+3)& (0+255),f,b
 15084                           
 15085                           ; BSR set to: 0
 15086  001B16  0100               	movlb	0	; () banked
 15087  001B18  A195               	btfss	___flmul@bexp& (0+255),0,b
 15088  001B1A  D002               	goto	l7572
 15089                           
 15090                           ; BSR set to: 0
 15091  001B1C  0100               	movlb	0	; () banked
 15092  001B1E  8F98               	bsf	(___flmul@prod+2)& (0+255),7,b
 15093  001B20                     l7572:
 15094                           
 15095                           ; BSR set to: 0
 15096  001B20  0100               	movlb	0	; () banked
 15097  001B22  90D8               	bcf	status,0,c
 15098  001B24  3195               	rrcf	___flmul@bexp& (0+255),w,b
 15099  001B26  0100               	movlb	0	; () banked
 15100  001B28                     L9:
 15101  001B28  6F99               	movwf	(___flmul@prod+3)& (0+255),b
 15102  001B2A                     l7574:
 15103                           
 15104                           ; BSR set to: 0
 15105  001B2A  0100               	movlb	0	; () banked
 15106  001B2C  518F               	movf	___flmul@sign& (0+255),w,b
 15107  001B2E  0100               	movlb	0	; () banked
 15108  001B30  1399               	iorwf	(___flmul@prod+3)& (0+255),f,b
 15109                           
 15110                           ; BSR set to: 0
 15111  001B32  C096  F083         	movff	___flmul@prod,?___flmul
 15112  001B36  C097  F084         	movff	___flmul@prod+1,?___flmul+1
 15113  001B3A  C098  F085         	movff	___flmul@prod+2,?___flmul+2
 15114  001B3E  C099  F086         	movff	___flmul@prod+3,?___flmul+3
 15115  001B42  0012               	return	
 15116  001B44                     __end_of___flmul:
 15117                           	opt stack 0
 15118                           tblptru	equ	0xFF8
 15119                           tblptrh	equ	0xFF7
 15120                           tblptrl	equ	0xFF6
 15121                           tablat	equ	0xFF5
 15122                           prodh	equ	0xFF4
 15123                           prodl	equ	0xFF3
 15124                           intcon	equ	0xFF2
 15125                           postinc0	equ	0xFEE
 15126                           wreg	equ	0xFE8
 15127                           postdec1	equ	0xFE5
 15128                           fsr1l	equ	0xFE1
 15129                           indf2	equ	0xFDF
 15130                           postinc2	equ	0xFDE
 15131                           postdec2	equ	0xFDD
 15132                           fsr2h	equ	0xFDA
 15133                           fsr2l	equ	0xFD9
 15134                           status	equ	0xFD8
 15135                           
 15136 ;; *************** function ___fldiv *****************
 15137 ;; Defined at:
 15138 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 15139 ;; Parameters:    Size  Location     Type
 15140 ;;  b               4   21[BANK0 ] unsigned char 
 15141 ;;  a               4   25[BANK0 ] unsigned char 
 15142 ;; Auto vars:     Size  Location     Type
 15143 ;;  grs             4   40[BANK0 ] unsigned long 
 15144 ;;  rem             4   34[BANK0 ] unsigned long 
 15145 ;;  new_exp         2   38[BANK0 ] int 
 15146 ;;  aexp            1   45[BANK0 ] unsigned char 
 15147 ;;  bexp            1   44[BANK0 ] unsigned char 
 15148 ;;  sign            1   33[BANK0 ] unsigned char 
 15149 ;; Return value:  Size  Location     Type
 15150 ;;                  4   21[BANK0 ] unsigned char 
 15151 ;; Registers used:
 15152 ;;		wreg, status,2, status,0
 15153 ;; Tracked objects:
 15154 ;;		On entry : 0/0
 15155 ;;		On exit  : 0/0
 15156 ;;		Unchanged: 0/0
 15157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15158 ;;      Params:         0       8       0       0       0       0       0
 15159 ;;      Locals:         0      13       0       0       0       0       0
 15160 ;;      Temps:          0       4       0       0       0       0       0
 15161 ;;      Totals:         0      25       0       0       0       0       0
 15162 ;;Total ram usage:       25 bytes
 15163 ;; Hardware stack levels used:    1
 15164 ;; Hardware stack levels required when called:    8
 15165 ;; This function calls:
 15166 ;;		Nothing
 15167 ;; This function is called by:
 15168 ;;		_calcSysVars
 15169 ;;		_preAutoCal
 15170 ;;		_autoCal
 15171 ;; This function uses a non-reentrant model
 15172 ;;
 15173                           
 15174                           	psect	text51
 15175  001B44                     __ptext51:
 15176                           	opt stack 0
 15177  001B44                     ___fldiv:
 15178                           	opt stack 17
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;incstack = 0
 15182  001B44  0100               	movlb	0	; () banked
 15183  001B46  5178               	movf	(___fldiv@b+3)& (0+255),w,b
 15184  001B48  0B80               	andlw	128
 15185  001B4A  0100               	movlb	0	; () banked
 15186  001B4C  6F81               	movwf	___fldiv@sign& (0+255),b
 15187  001B4E  0100               	movlb	0	; () banked
 15188  001B50  5178               	movf	(___fldiv@b+3)& (0+255),w,b
 15189  001B52  2578               	addwf	(___fldiv@b+3)& (0+255),w,b
 15190  001B54  0100               	movlb	0	; () banked
 15191  001B56  6F8C               	movwf	___fldiv@bexp& (0+255),b
 15192                           
 15193                           ; BSR set to: 0
 15194  001B58  0100               	movlb	0	; () banked
 15195  001B5A  AF77               	btfss	(___fldiv@b+2)& (0+255),7,b
 15196  001B5C  D002               	goto	l4560
 15197                           
 15198                           ; BSR set to: 0
 15199  001B5E  0100               	movlb	0	; () banked
 15200  001B60  818C               	bsf	___fldiv@bexp& (0+255),0,b
 15201  001B62                     l4560:
 15202                           
 15203                           ; BSR set to: 0
 15204  001B62  0100               	movlb	0	; () banked
 15205  001B64  518C               	movf	___fldiv@bexp& (0+255),w,b
 15206  001B66  0100               	movlb	0	; () banked
 15207  001B68  B4D8               	btfsc	status,2,c
 15208  001B6A  D012               	goto	l4570
 15209                           
 15210                           ; BSR set to: 0
 15211  001B6C  0100               	movlb	0	; () banked
 15212  001B6E  298C               	incf	___fldiv@bexp& (0+255),w,b
 15213  001B70  A4D8               	btfss	status,2,c
 15214  001B72  D009               	goto	l4566
 15215                           
 15216                           ; BSR set to: 0
 15217  001B74  0E00               	movlw	0
 15218  001B76  0100               	movlb	0	; () banked
 15219  001B78  6F75               	movwf	___fldiv@b& (0+255),b
 15220  001B7A  0E00               	movlw	0
 15221  001B7C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15222  001B7E  0E00               	movlw	0
 15223  001B80  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15224  001B82  0E00               	movlw	0
 15225  001B84  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15226  001B86                     l4566:
 15227                           
 15228                           ; BSR set to: 0
 15229  001B86  0100               	movlb	0	; () banked
 15230  001B88  8F77               	bsf	(___fldiv@b+2)& (0+255),7,b
 15231                           
 15232                           ; BSR set to: 0
 15233  001B8A  0E00               	movlw	0
 15234  001B8C  0100               	movlb	0	; () banked
 15235  001B8E  D008               	goto	L10
 15236  001B90                     l4570:
 15237                           
 15238                           ; BSR set to: 0
 15239  001B90  0E00               	movlw	0
 15240  001B92  0100               	movlb	0	; () banked
 15241  001B94  6F75               	movwf	___fldiv@b& (0+255),b
 15242  001B96  0E00               	movlw	0
 15243  001B98  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15244  001B9A  0E00               	movlw	0
 15245  001B9C  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15246  001B9E  0E00               	movlw	0
 15247  001BA0                     L10:
 15248  001BA0  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15249                           
 15250                           ; BSR set to: 0
 15251                           
 15252                           ; BSR set to: 0
 15253  001BA2  0100               	movlb	0	; () banked
 15254  001BA4  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15255  001BA6  0B80               	andlw	128
 15256  001BA8  0100               	movlb	0	; () banked
 15257  001BAA  1B81               	xorwf	___fldiv@sign& (0+255),f,b
 15258                           
 15259                           ; BSR set to: 0
 15260  001BAC  0100               	movlb	0	; () banked
 15261  001BAE  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15262  001BB0  257C               	addwf	(___fldiv@a+3)& (0+255),w,b
 15263  001BB2  0100               	movlb	0	; () banked
 15264  001BB4  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15265                           
 15266                           ; BSR set to: 0
 15267  001BB6  0100               	movlb	0	; () banked
 15268  001BB8  AF7B               	btfss	(___fldiv@a+2)& (0+255),7,b
 15269  001BBA  D002               	goto	l4580
 15270                           
 15271                           ; BSR set to: 0
 15272  001BBC  0100               	movlb	0	; () banked
 15273  001BBE  818D               	bsf	___fldiv@aexp& (0+255),0,b
 15274  001BC0                     l4580:
 15275                           
 15276                           ; BSR set to: 0
 15277  001BC0  0100               	movlb	0	; () banked
 15278  001BC2  518D               	movf	___fldiv@aexp& (0+255),w,b
 15279  001BC4  0100               	movlb	0	; () banked
 15280  001BC6  B4D8               	btfsc	status,2,c
 15281  001BC8  D012               	goto	l4590
 15282                           
 15283                           ; BSR set to: 0
 15284  001BCA  0100               	movlb	0	; () banked
 15285  001BCC  298D               	incf	___fldiv@aexp& (0+255),w,b
 15286  001BCE  A4D8               	btfss	status,2,c
 15287  001BD0  D009               	goto	l4586
 15288                           
 15289                           ; BSR set to: 0
 15290  001BD2  0E00               	movlw	0
 15291  001BD4  0100               	movlb	0	; () banked
 15292  001BD6  6F79               	movwf	___fldiv@a& (0+255),b
 15293  001BD8  0E00               	movlw	0
 15294  001BDA  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 15295  001BDC  0E00               	movlw	0
 15296  001BDE  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 15297  001BE0  0E00               	movlw	0
 15298  001BE2  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 15299  001BE4                     l4586:
 15300                           
 15301                           ; BSR set to: 0
 15302  001BE4  0100               	movlb	0	; () banked
 15303  001BE6  8F7B               	bsf	(___fldiv@a+2)& (0+255),7,b
 15304                           
 15305                           ; BSR set to: 0
 15306  001BE8  0E00               	movlw	0
 15307  001BEA  0100               	movlb	0	; () banked
 15308  001BEC  D008               	goto	L11
 15309  001BEE                     l4590:
 15310                           
 15311                           ; BSR set to: 0
 15312  001BEE  0E00               	movlw	0
 15313  001BF0  0100               	movlb	0	; () banked
 15314  001BF2  6F79               	movwf	___fldiv@a& (0+255),b
 15315  001BF4  0E00               	movlw	0
 15316  001BF6  6F7A               	movwf	(___fldiv@a+1)& (0+255),b
 15317  001BF8  0E00               	movlw	0
 15318  001BFA  6F7B               	movwf	(___fldiv@a+2)& (0+255),b
 15319  001BFC  0E00               	movlw	0
 15320  001BFE                     L11:
 15321  001BFE  6F7C               	movwf	(___fldiv@a+3)& (0+255),b
 15322                           
 15323                           ; BSR set to: 0
 15324                           
 15325                           ; BSR set to: 0
 15326  001C00  0100               	movlb	0	; () banked
 15327  001C02  5179               	movf	___fldiv@a& (0+255),w,b
 15328  001C04  0100               	movlb	0	; () banked
 15329  001C06  117A               	iorwf	(___fldiv@a+1)& (0+255),w,b
 15330  001C08  0100               	movlb	0	; () banked
 15331  001C0A  117B               	iorwf	(___fldiv@a+2)& (0+255),w,b
 15332  001C0C  0100               	movlb	0	; () banked
 15333  001C0E  117C               	iorwf	(___fldiv@a+3)& (0+255),w,b
 15334  001C10  A4D8               	btfss	status,2,c
 15335  001C12  D017               	goto	l4602
 15336                           
 15337                           ; BSR set to: 0
 15338  001C14  0E00               	movlw	0
 15339  001C16  0100               	movlb	0	; () banked
 15340  001C18  6F75               	movwf	___fldiv@b& (0+255),b
 15341  001C1A  0E00               	movlw	0
 15342  001C1C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15343  001C1E  0E00               	movlw	0
 15344  001C20  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15345  001C22  0E00               	movlw	0
 15346  001C24  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15347                           
 15348                           ; BSR set to: 0
 15349  001C26  0100               	movlb	0	; () banked
 15350  001C28  0E80               	movlw	128
 15351  001C2A  1377               	iorwf	(___fldiv@b+2)& (0+255),f,b
 15352  001C2C  0E7F               	movlw	127
 15353  001C2E  1378               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15354                           
 15355                           ; BSR set to: 0
 15356  001C30  C075  F075         	movff	___fldiv@b,?___fldiv
 15357  001C34  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15358  001C38  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15359  001C3C  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15360                           
 15361                           ; BSR set to: 0
 15362  001C40  0012               	return	
 15363  001C42                     l4602:
 15364                           
 15365                           ; BSR set to: 0
 15366  001C42  0100               	movlb	0	; () banked
 15367  001C44  518C               	movf	___fldiv@bexp& (0+255),w,b
 15368  001C46  0100               	movlb	0	; () banked
 15369  001C48  A4D8               	btfss	status,2,c
 15370  001C4A  D012               	goto	l4610
 15371                           
 15372                           ; BSR set to: 0
 15373  001C4C  0E00               	movlw	0
 15374  001C4E  0100               	movlb	0	; () banked
 15375  001C50  6F75               	movwf	___fldiv@b& (0+255),b
 15376  001C52  0E00               	movlw	0
 15377  001C54  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15378  001C56  0E00               	movlw	0
 15379  001C58  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15380  001C5A  0E00               	movlw	0
 15381  001C5C  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15382                           
 15383                           ; BSR set to: 0
 15384  001C5E  C075  F075         	movff	___fldiv@b,?___fldiv
 15385  001C62  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15386  001C66  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15387  001C6A  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15388                           
 15389                           ; BSR set to: 0
 15390  001C6E  0012               	return	
 15391  001C70                     l4610:
 15392                           
 15393                           ; BSR set to: 0
 15394  001C70  0100               	movlb	0	; () banked
 15395  001C72  518D               	movf	___fldiv@aexp& (0+255),w,b
 15396  001C74  0100               	movlb	0	; () banked
 15397  001C76  6F7D               	movwf	??___fldiv& (0+255),b
 15398  001C78  6B7E               	clrf	(??___fldiv+1)& (0+255),b
 15399  001C7A  0100               	movlb	0	; () banked
 15400  001C7C  1F7D               	comf	??___fldiv& (0+255),f,b
 15401  001C7E  1F7E               	comf	(??___fldiv+1)& (0+255),f,b
 15402  001C80  4B7D               	infsnz	??___fldiv& (0+255),f,b
 15403  001C82  2B7E               	incf	(??___fldiv+1)& (0+255),f,b
 15404  001C84  0100               	movlb	0	; () banked
 15405  001C86  518C               	movf	___fldiv@bexp& (0+255),w,b
 15406  001C88  0100               	movlb	0	; () banked
 15407  001C8A  6F7F               	movwf	(??___fldiv+2)& (0+255),b
 15408  001C8C  6B80               	clrf	(??___fldiv+3)& (0+255),b
 15409  001C8E  0100               	movlb	0	; () banked
 15410  001C90  517D               	movf	??___fldiv& (0+255),w,b
 15411  001C92  0100               	movlb	0	; () banked
 15412  001C94  277F               	addwf	(??___fldiv+2)& (0+255),f,b
 15413  001C96  0100               	movlb	0	; () banked
 15414  001C98  517E               	movf	(??___fldiv+1)& (0+255),w,b
 15415  001C9A  0100               	movlb	0	; () banked
 15416  001C9C  2380               	addwfc	(??___fldiv+3)& (0+255),f,b
 15417  001C9E  0E7F               	movlw	127
 15418  001CA0  0100               	movlb	0	; () banked
 15419  001CA2  257F               	addwf	(??___fldiv+2)& (0+255),w,b
 15420  001CA4  0100               	movlb	0	; () banked
 15421  001CA6  6F86               	movwf	___fldiv@new_exp& (0+255),b
 15422  001CA8  0E00               	movlw	0
 15423  001CAA  0100               	movlb	0	; () banked
 15424  001CAC  2180               	addwfc	(??___fldiv+3)& (0+255),w,b
 15425  001CAE  0100               	movlb	0	; () banked
 15426  001CB0  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15427                           
 15428                           ; BSR set to: 0
 15429  001CB2  C075  F082         	movff	___fldiv@b,___fldiv@rem
 15430  001CB6  C076  F083         	movff	___fldiv@b+1,___fldiv@rem+1
 15431  001CBA  C077  F084         	movff	___fldiv@b+2,___fldiv@rem+2
 15432  001CBE  C078  F085         	movff	___fldiv@b+3,___fldiv@rem+3
 15433                           
 15434                           ; BSR set to: 0
 15435  001CC2  0E00               	movlw	0
 15436  001CC4  0100               	movlb	0	; () banked
 15437  001CC6  6F75               	movwf	___fldiv@b& (0+255),b
 15438  001CC8  0E00               	movlw	0
 15439  001CCA  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15440  001CCC  0E00               	movlw	0
 15441  001CCE  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15442  001CD0  0E00               	movlw	0
 15443  001CD2  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15444                           
 15445                           ; BSR set to: 0
 15446  001CD4  0E00               	movlw	0
 15447  001CD6  0100               	movlb	0	; () banked
 15448  001CD8  6F88               	movwf	___fldiv@grs& (0+255),b
 15449  001CDA  0E00               	movlw	0
 15450  001CDC  6F89               	movwf	(___fldiv@grs+1)& (0+255),b
 15451  001CDE  0E00               	movlw	0
 15452  001CE0  6F8A               	movwf	(___fldiv@grs+2)& (0+255),b
 15453  001CE2  0E00               	movlw	0
 15454  001CE4  6F8B               	movwf	(___fldiv@grs+3)& (0+255),b
 15455                           
 15456                           ; BSR set to: 0
 15457  001CE6  0E00               	movlw	0
 15458  001CE8  0100               	movlb	0	; () banked
 15459  001CEA  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15460  001CEC  D042               	goto	l1400
 15461  001CEE                     l4620:
 15462                           
 15463                           ; BSR set to: 0
 15464  001CEE  0100               	movlb	0	; () banked
 15465  001CF0  518D               	movf	___fldiv@aexp& (0+255),w,b
 15466  001CF2  0100               	movlb	0	; () banked
 15467  001CF4  B4D8               	btfsc	status,2,c
 15468  001CF6  D017               	goto	l4628
 15469                           
 15470                           ; BSR set to: 0
 15471  001CF8  0100               	movlb	0	; () banked
 15472  001CFA  90D8               	bcf	status,0,c
 15473  001CFC  3782               	rlcf	___fldiv@rem& (0+255),f,b
 15474  001CFE  3783               	rlcf	(___fldiv@rem+1)& (0+255),f,b
 15475  001D00  3784               	rlcf	(___fldiv@rem+2)& (0+255),f,b
 15476  001D02  3785               	rlcf	(___fldiv@rem+3)& (0+255),f,b
 15477  001D04  0100               	movlb	0	; () banked
 15478  001D06  90D8               	bcf	status,0,c
 15479  001D08  3775               	rlcf	___fldiv@b& (0+255),f,b
 15480  001D0A  3776               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15481  001D0C  3777               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15482  001D0E  3778               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15483                           
 15484                           ; BSR set to: 0
 15485  001D10  0100               	movlb	0	; () banked
 15486  001D12  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15487  001D14  D002               	goto	l1403
 15488                           
 15489                           ; BSR set to: 0
 15490  001D16  0100               	movlb	0	; () banked
 15491  001D18  8175               	bsf	___fldiv@b& (0+255),0,b
 15492  001D1A                     l1403:
 15493                           
 15494                           ; BSR set to: 0
 15495  001D1A  0100               	movlb	0	; () banked
 15496  001D1C  90D8               	bcf	status,0,c
 15497  001D1E  3788               	rlcf	___fldiv@grs& (0+255),f,b
 15498  001D20  3789               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15499  001D22  378A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15500  001D24  378B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15501  001D26                     l4628:
 15502                           
 15503                           ; BSR set to: 0
 15504  001D26  0100               	movlb	0	; () banked
 15505  001D28  5179               	movf	___fldiv@a& (0+255),w,b
 15506  001D2A  0100               	movlb	0	; () banked
 15507  001D2C  5D82               	subwf	___fldiv@rem& (0+255),w,b
 15508  001D2E  0100               	movlb	0	; () banked
 15509  001D30  517A               	movf	(___fldiv@a+1)& (0+255),w,b
 15510  001D32  0100               	movlb	0	; () banked
 15511  001D34  5983               	subwfb	(___fldiv@rem+1)& (0+255),w,b
 15512  001D36  0100               	movlb	0	; () banked
 15513  001D38  517B               	movf	(___fldiv@a+2)& (0+255),w,b
 15514  001D3A  0100               	movlb	0	; () banked
 15515  001D3C  5984               	subwfb	(___fldiv@rem+2)& (0+255),w,b
 15516  001D3E  0100               	movlb	0	; () banked
 15517  001D40  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15518  001D42  0100               	movlb	0	; () banked
 15519  001D44  5985               	subwfb	(___fldiv@rem+3)& (0+255),w,b
 15520  001D46  A0D8               	btfss	status,0,c
 15521  001D48  D012               	goto	l4634
 15522                           
 15523                           ; BSR set to: 0
 15524  001D4A  0100               	movlb	0	; () banked
 15525  001D4C  8D8B               	bsf	(___fldiv@grs+3)& (0+255),6,b
 15526                           
 15527                           ; BSR set to: 0
 15528  001D4E  0100               	movlb	0	; () banked
 15529  001D50  5179               	movf	___fldiv@a& (0+255),w,b
 15530  001D52  0100               	movlb	0	; () banked
 15531  001D54  5F82               	subwf	___fldiv@rem& (0+255),f,b
 15532  001D56  0100               	movlb	0	; () banked
 15533  001D58  517A               	movf	(___fldiv@a+1)& (0+255),w,b
 15534  001D5A  0100               	movlb	0	; () banked
 15535  001D5C  5B83               	subwfb	(___fldiv@rem+1)& (0+255),f,b
 15536  001D5E  0100               	movlb	0	; () banked
 15537  001D60  517B               	movf	(___fldiv@a+2)& (0+255),w,b
 15538  001D62  0100               	movlb	0	; () banked
 15539  001D64  5B84               	subwfb	(___fldiv@rem+2)& (0+255),f,b
 15540  001D66  0100               	movlb	0	; () banked
 15541  001D68  517C               	movf	(___fldiv@a+3)& (0+255),w,b
 15542  001D6A  0100               	movlb	0	; () banked
 15543  001D6C  5B85               	subwfb	(___fldiv@rem+3)& (0+255),f,b
 15544  001D6E                     l4634:
 15545                           
 15546                           ; BSR set to: 0
 15547  001D6E  0100               	movlb	0	; () banked
 15548  001D70  2B8D               	incf	___fldiv@aexp& (0+255),f,b
 15549  001D72                     l1400:
 15550                           
 15551                           ; BSR set to: 0
 15552  001D72  0E19               	movlw	25
 15553  001D74  0100               	movlb	0	; () banked
 15554  001D76  658D               	cpfsgt	___fldiv@aexp& (0+255),b
 15555  001D78  D7BA               	goto	l4620
 15556                           
 15557                           ; BSR set to: 0
 15558                           
 15559                           ; BSR set to: 0
 15560  001D7A  0100               	movlb	0	; () banked
 15561  001D7C  5182               	movf	___fldiv@rem& (0+255),w,b
 15562  001D7E  0100               	movlb	0	; () banked
 15563  001D80  1183               	iorwf	(___fldiv@rem+1)& (0+255),w,b
 15564  001D82  0100               	movlb	0	; () banked
 15565  001D84  1184               	iorwf	(___fldiv@rem+2)& (0+255),w,b
 15566  001D86  0100               	movlb	0	; () banked
 15567  001D88  1185               	iorwf	(___fldiv@rem+3)& (0+255),w,b
 15568  001D8A  B4D8               	btfsc	status,2,c
 15569  001D8C  D018               	goto	l4646
 15570                           
 15571                           ; BSR set to: 0
 15572  001D8E  0100               	movlb	0	; () banked
 15573  001D90  8188               	bsf	___fldiv@grs& (0+255),0,b
 15574                           
 15575                           ; BSR set to: 0
 15576  001D92  D015               	goto	l4646
 15577  001D94                     l4640:
 15578                           
 15579                           ; BSR set to: 0
 15580  001D94  0100               	movlb	0	; () banked
 15581  001D96  90D8               	bcf	status,0,c
 15582  001D98  3775               	rlcf	___fldiv@b& (0+255),f,b
 15583  001D9A  3776               	rlcf	(___fldiv@b+1)& (0+255),f,b
 15584  001D9C  3777               	rlcf	(___fldiv@b+2)& (0+255),f,b
 15585  001D9E  3778               	rlcf	(___fldiv@b+3)& (0+255),f,b
 15586                           
 15587                           ; BSR set to: 0
 15588  001DA0  0100               	movlb	0	; () banked
 15589  001DA2  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15590  001DA4  D002               	goto	l1409
 15591                           
 15592                           ; BSR set to: 0
 15593  001DA6  0100               	movlb	0	; () banked
 15594  001DA8  8175               	bsf	___fldiv@b& (0+255),0,b
 15595  001DAA                     l1409:
 15596                           
 15597                           ; BSR set to: 0
 15598  001DAA  0100               	movlb	0	; () banked
 15599  001DAC  90D8               	bcf	status,0,c
 15600  001DAE  3788               	rlcf	___fldiv@grs& (0+255),f,b
 15601  001DB0  3789               	rlcf	(___fldiv@grs+1)& (0+255),f,b
 15602  001DB2  378A               	rlcf	(___fldiv@grs+2)& (0+255),f,b
 15603  001DB4  378B               	rlcf	(___fldiv@grs+3)& (0+255),f,b
 15604  001DB6  0100               	movlb	0	; () banked
 15605  001DB8  0786               	decf	___fldiv@new_exp& (0+255),f,b
 15606  001DBA  A0D8               	btfss	status,0,c
 15607  001DBC  0787               	decf	(___fldiv@new_exp+1)& (0+255),f,b
 15608  001DBE                     l4646:
 15609                           
 15610                           ; BSR set to: 0
 15611  001DBE  0100               	movlb	0	; () banked
 15612  001DC0  AF77               	btfss	(___fldiv@b+2)& (0+255),7,b
 15613  001DC2  D7E8               	goto	l4640
 15614                           
 15615                           ; BSR set to: 0
 15616                           
 15617                           ; BSR set to: 0
 15618  001DC4  0E00               	movlw	0
 15619  001DC6  0100               	movlb	0	; () banked
 15620  001DC8  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15621                           
 15622                           ; BSR set to: 0
 15623  001DCA  0100               	movlb	0	; () banked
 15624  001DCC  AF8B               	btfss	(___fldiv@grs+3)& (0+255),7,b
 15625  001DCE  D024               	goto	l1411
 15626                           
 15627                           ; BSR set to: 0
 15628  001DD0  0EFF               	movlw	255
 15629  001DD2  0100               	movlb	0	; () banked
 15630  001DD4  1588               	andwf	___fldiv@grs& (0+255),w,b
 15631  001DD6  0100               	movlb	0	; () banked
 15632  001DD8  6F7D               	movwf	??___fldiv& (0+255),b
 15633  001DDA  0EFF               	movlw	255
 15634  001DDC  0100               	movlb	0	; () banked
 15635  001DDE  1589               	andwf	(___fldiv@grs+1)& (0+255),w,b
 15636  001DE0  0100               	movlb	0	; () banked
 15637  001DE2  6F7E               	movwf	(??___fldiv+1)& (0+255),b
 15638  001DE4  0EFF               	movlw	255
 15639  001DE6  0100               	movlb	0	; () banked
 15640  001DE8  158A               	andwf	(___fldiv@grs+2)& (0+255),w,b
 15641  001DEA  0100               	movlb	0	; () banked
 15642  001DEC  6F7F               	movwf	(??___fldiv+2)& (0+255),b
 15643  001DEE  0E7F               	movlw	127
 15644  001DF0  0100               	movlb	0	; () banked
 15645  001DF2  158B               	andwf	(___fldiv@grs+3)& (0+255),w,b
 15646  001DF4  0100               	movlb	0	; () banked
 15647  001DF6  6F80               	movwf	(??___fldiv+3)& (0+255),b
 15648  001DF8  0100               	movlb	0	; () banked
 15649  001DFA  517D               	movf	??___fldiv& (0+255),w,b
 15650  001DFC  0100               	movlb	0	; () banked
 15651  001DFE  117E               	iorwf	(??___fldiv+1)& (0+255),w,b
 15652  001E00  0100               	movlb	0	; () banked
 15653  001E02  117F               	iorwf	(??___fldiv+2)& (0+255),w,b
 15654  001E04  0100               	movlb	0	; () banked
 15655  001E06  1180               	iorwf	(??___fldiv+3)& (0+255),w,b
 15656  001E08  A4D8               	btfss	status,2,c
 15657  001E0A  D003               	goto	l4656
 15658                           
 15659                           ; BSR set to: 0
 15660                           
 15661                           ; BSR set to: 0
 15662  001E0C  0100               	movlb	0	; () banked
 15663  001E0E  A175               	btfss	___fldiv@b& (0+255),0,b
 15664  001E10  D003               	goto	l1411
 15665  001E12                     l4656:
 15666                           
 15667                           ; BSR set to: 0
 15668  001E12  0E01               	movlw	1
 15669  001E14  0100               	movlb	0	; () banked
 15670  001E16  6F8D               	movwf	___fldiv@aexp& (0+255),b
 15671  001E18                     l1411:
 15672                           
 15673                           ; BSR set to: 0
 15674  001E18  0100               	movlb	0	; () banked
 15675  001E1A  518D               	movf	___fldiv@aexp& (0+255),w,b
 15676  001E1C  0100               	movlb	0	; () banked
 15677  001E1E  B4D8               	btfsc	status,2,c
 15678  001E20  D023               	goto	l4666
 15679                           
 15680                           ; BSR set to: 0
 15681  001E22  0E01               	movlw	1
 15682  001E24  0100               	movlb	0	; () banked
 15683  001E26  2775               	addwf	___fldiv@b& (0+255),f,b
 15684  001E28  0E00               	movlw	0
 15685  001E2A  2376               	addwfc	(___fldiv@b+1)& (0+255),f,b
 15686  001E2C  2377               	addwfc	(___fldiv@b+2)& (0+255),f,b
 15687  001E2E  2378               	addwfc	(___fldiv@b+3)& (0+255),f,b
 15688                           
 15689                           ; BSR set to: 0
 15690  001E30  0100               	movlb	0	; () banked
 15691  001E32  A178               	btfss	(___fldiv@b+3)& (0+255),0,b
 15692  001E34  D019               	goto	l4666
 15693                           
 15694                           ; BSR set to: 0
 15695  001E36  C075  F07D         	movff	___fldiv@b,??___fldiv
 15696  001E3A  C076  F07E         	movff	___fldiv@b+1,??___fldiv+1
 15697  001E3E  C077  F07F         	movff	___fldiv@b+2,??___fldiv+2
 15698  001E42  C078  F080         	movff	___fldiv@b+3,??___fldiv+3
 15699  001E46  0100               	movlb	0	; () banked
 15700  001E48  3580               	rlcf	(??___fldiv+3)& (0+255),w,b
 15701  001E4A  3380               	rrcf	(??___fldiv+3)& (0+255),f,b
 15702  001E4C  337F               	rrcf	(??___fldiv+2)& (0+255),f,b
 15703  001E4E  337E               	rrcf	(??___fldiv+1)& (0+255),f,b
 15704  001E50  337D               	rrcf	??___fldiv& (0+255),f,b
 15705  001E52  C07D  F075         	movff	??___fldiv,___fldiv@b
 15706  001E56  C07E  F076         	movff	??___fldiv+1,___fldiv@b+1
 15707  001E5A  C07F  F077         	movff	??___fldiv+2,___fldiv@b+2
 15708  001E5E  C080  F078         	movff	??___fldiv+3,___fldiv@b+3
 15709                           
 15710                           ; BSR set to: 0
 15711  001E62  0100               	movlb	0	; () banked
 15712  001E64  4B86               	infsnz	___fldiv@new_exp& (0+255),f,b
 15713  001E66  2B87               	incf	(___fldiv@new_exp+1)& (0+255),f,b
 15714  001E68                     l4666:
 15715                           
 15716                           ; BSR set to: 0
 15717  001E68  0100               	movlb	0	; () banked
 15718  001E6A  BF87               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15719  001E6C  D014               	goto	l4670
 15720  001E6E  0100               	movlb	0	; () banked
 15721  001E70  5187               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15722  001E72  E104               	bnz	u4710
 15723  001E74  0100               	movlb	0	; () banked
 15724  001E76  2986               	incf	___fldiv@new_exp& (0+255),w,b
 15725  001E78  A0D8               	btfss	status,0,c
 15726  001E7A  D00D               	goto	l4670
 15727  001E7C                     u4710:
 15728                           
 15729                           ; BSR set to: 0
 15730  001E7C  0E00               	movlw	0
 15731  001E7E  0100               	movlb	0	; () banked
 15732  001E80  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15733  001E82  6986               	setf	___fldiv@new_exp& (0+255),b
 15734  001E84  0E00               	movlw	0
 15735  001E86  0100               	movlb	0	; () banked
 15736  001E88  6F75               	movwf	___fldiv@b& (0+255),b
 15737  001E8A  0E00               	movlw	0
 15738  001E8C  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15739  001E8E  0E00               	movlw	0
 15740  001E90  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15741  001E92  0E00               	movlw	0
 15742  001E94  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15743  001E96                     l4670:
 15744                           
 15745                           ; BSR set to: 0
 15746  001E96  0100               	movlb	0	; () banked
 15747  001E98  BF87               	btfsc	(___fldiv@new_exp+1)& (0+255),7,b
 15748  001E9A  D007               	goto	l4672
 15749  001E9C  0100               	movlb	0	; () banked
 15750  001E9E  5187               	movf	(___fldiv@new_exp+1)& (0+255),w,b
 15751  001EA0  E115               	bnz	l4674
 15752  001EA2  0100               	movlb	0	; () banked
 15753  001EA4  0586               	decf	___fldiv@new_exp& (0+255),w,b
 15754  001EA6  B0D8               	btfsc	status,0,c
 15755  001EA8  D011               	goto	l4674
 15756  001EAA                     l4672:
 15757                           
 15758                           ; BSR set to: 0
 15759  001EAA  0E00               	movlw	0
 15760  001EAC  0100               	movlb	0	; () banked
 15761  001EAE  6F87               	movwf	(___fldiv@new_exp+1)& (0+255),b
 15762  001EB0  0E00               	movlw	0
 15763  001EB2  6F86               	movwf	___fldiv@new_exp& (0+255),b
 15764  001EB4  0E00               	movlw	0
 15765  001EB6  0100               	movlb	0	; () banked
 15766  001EB8  6F75               	movwf	___fldiv@b& (0+255),b
 15767  001EBA  0E00               	movlw	0
 15768  001EBC  6F76               	movwf	(___fldiv@b+1)& (0+255),b
 15769  001EBE  0E00               	movlw	0
 15770  001EC0  6F77               	movwf	(___fldiv@b+2)& (0+255),b
 15771  001EC2  0E00               	movlw	0
 15772  001EC4  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15773  001EC6  0E00               	movlw	0
 15774  001EC8  0100               	movlb	0	; () banked
 15775  001ECA  6F81               	movwf	___fldiv@sign& (0+255),b
 15776  001ECC                     l4674:
 15777                           
 15778                           ; BSR set to: 0
 15779  001ECC  C086  F08C         	movff	___fldiv@new_exp,___fldiv@bexp
 15780                           
 15781                           ; BSR set to: 0
 15782  001ED0  0100               	movlb	0	; () banked
 15783  001ED2  A18C               	btfss	___fldiv@bexp& (0+255),0,b
 15784  001ED4  D003               	goto	l4680
 15785                           
 15786                           ; BSR set to: 0
 15787  001ED6  0100               	movlb	0	; () banked
 15788  001ED8  8F77               	bsf	(___fldiv@b+2)& (0+255),7,b
 15789  001EDA  D002               	goto	l4682
 15790  001EDC                     l4680:
 15791                           
 15792                           ; BSR set to: 0
 15793  001EDC  0100               	movlb	0	; () banked
 15794  001EDE  9F77               	bcf	(___fldiv@b+2)& (0+255),7,b
 15795  001EE0                     l4682:
 15796                           
 15797                           ; BSR set to: 0
 15798  001EE0  0100               	movlb	0	; () banked
 15799  001EE2  90D8               	bcf	status,0,c
 15800  001EE4  318C               	rrcf	___fldiv@bexp& (0+255),w,b
 15801  001EE6  0100               	movlb	0	; () banked
 15802  001EE8  6F78               	movwf	(___fldiv@b+3)& (0+255),b
 15803                           
 15804                           ; BSR set to: 0
 15805  001EEA  0100               	movlb	0	; () banked
 15806  001EEC  5181               	movf	___fldiv@sign& (0+255),w,b
 15807  001EEE  0100               	movlb	0	; () banked
 15808  001EF0  1378               	iorwf	(___fldiv@b+3)& (0+255),f,b
 15809                           
 15810                           ; BSR set to: 0
 15811  001EF2  C075  F075         	movff	___fldiv@b,?___fldiv
 15812  001EF6  C076  F076         	movff	___fldiv@b+1,?___fldiv+1
 15813  001EFA  C077  F077         	movff	___fldiv@b+2,?___fldiv+2
 15814  001EFE  C078  F078         	movff	___fldiv@b+3,?___fldiv+3
 15815  001F02  0012               	return	
 15816  001F04                     __end_of___fldiv:
 15817                           	opt stack 0
 15818                           tblptru	equ	0xFF8
 15819                           tblptrh	equ	0xFF7
 15820                           tblptrl	equ	0xFF6
 15821                           tablat	equ	0xFF5
 15822                           prodh	equ	0xFF4
 15823                           prodl	equ	0xFF3
 15824                           intcon	equ	0xFF2
 15825                           postinc0	equ	0xFEE
 15826                           wreg	equ	0xFE8
 15827                           postdec1	equ	0xFE5
 15828                           fsr1l	equ	0xFE1
 15829                           indf2	equ	0xFDF
 15830                           postinc2	equ	0xFDE
 15831                           postdec2	equ	0xFDD
 15832                           fsr2h	equ	0xFDA
 15833                           fsr2l	equ	0xFD9
 15834                           status	equ	0xFD8
 15835                           
 15836 ;; *************** function _checkPass *****************
 15837 ;; Defined at:
 15838 ;;		line 13 in file "source/DisplayProtocol.h"
 15839 ;; Parameters:    Size  Location     Type
 15840 ;;		None
 15841 ;; Auto vars:     Size  Location     Type
 15842 ;;  i               2   26[BANK0 ] int 
 15843 ;;  passOK          1   25[BANK0 ] unsigned char 
 15844 ;; Return value:  Size  Location     Type
 15845 ;;                  1    wreg      unsigned char 
 15846 ;; Registers used:
 15847 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 15848 ;; Tracked objects:
 15849 ;;		On entry : 0/0
 15850 ;;		On exit  : 0/0
 15851 ;;		Unchanged: 0/0
 15852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15853 ;;      Params:         0       0       0       0       0       0       0
 15854 ;;      Locals:         0       3       0       0       0       0       0
 15855 ;;      Temps:          0       4       0       0       0       0       0
 15856 ;;      Totals:         0       7       0       0       0       0       0
 15857 ;;Total ram usage:        7 bytes
 15858 ;; Hardware stack levels used:    1
 15859 ;; Hardware stack levels required when called:    8
 15860 ;; This function calls:
 15861 ;;		Nothing
 15862 ;; This function is called by:
 15863 ;;		_pressENTER
 15864 ;; This function uses a non-reentrant model
 15865 ;;
 15866                           
 15867                           	psect	text52
 15868  0049E6                     __ptext52:
 15869                           	opt stack 0
 15870  0049E6                     _checkPass:
 15871                           	opt stack 20
 15872                           
 15873                           ;DisplayProtocol.h: 14: int i;
 15874                           ;DisplayProtocol.h: 15: char passOK = 0;
 15875                           
 15876                           ; BSR set to: 0
 15877                           ;incstack = 0
 15878  0049E6  0E00               	movlw	0
 15879  0049E8  0100               	movlb	0	; () banked
 15880  0049EA  6F79               	movwf	checkPass@passOK& (0+255),b
 15881                           
 15882                           ;DisplayProtocol.h: 16: for (i = 0; i < 4; i++) {
 15883  0049EC  0E00               	movlw	0
 15884  0049EE  0100               	movlb	0	; () banked
 15885  0049F0  6F7B               	movwf	(checkPass@i+1)& (0+255),b
 15886  0049F2  0E00               	movlw	0
 15887  0049F4  6F7A               	movwf	checkPass@i& (0+255),b
 15888  0049F6                     l6142:
 15889                           
 15890                           ; BSR set to: 0
 15891  0049F6  0100               	movlb	0	; () banked
 15892  0049F8  BF7B               	btfsc	(checkPass@i+1)& (0+255),7,b
 15893  0049FA  D008               	goto	l6146
 15894  0049FC  0100               	movlb	0	; () banked
 15895  0049FE  517B               	movf	(checkPass@i+1)& (0+255),w,b
 15896  004A00  E136               	bnz	l6156
 15897  004A02  0E04               	movlw	4
 15898  004A04  0100               	movlb	0	; () banked
 15899  004A06  5D7A               	subwf	checkPass@i& (0+255),w,b
 15900  004A08  B0D8               	btfsc	status,0,c
 15901  004A0A  D031               	goto	l6156
 15902  004A0C                     l6146:
 15903                           
 15904                           ; BSR set to: 0
 15905                           ;DisplayProtocol.h: 17: if (introducido[i] == contra[i])
 15906  004A0C  0E4B               	movlw	low _contra
 15907  004A0E  0100               	movlb	0	; () banked
 15908  004A10  257A               	addwf	checkPass@i& (0+255),w,b
 15909  004A12  6ED9               	movwf	fsr2l,c
 15910  004A14  0E01               	movlw	high _contra
 15911  004A16  0100               	movlb	0	; () banked
 15912  004A18  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 15913  004A1A  6EDA               	movwf	fsr2h,c
 15914  004A1C  50DF               	movf	indf2,w,c
 15915  004A1E  0100               	movlb	0	; () banked
 15916  004A20  6F75               	movwf	??_checkPass& (0+255),b
 15917  004A22  6B76               	clrf	(??_checkPass+1)& (0+255),b
 15918  004A24  0E35               	movlw	low _introducido
 15919  004A26  0100               	movlb	0	; () banked
 15920  004A28  257A               	addwf	checkPass@i& (0+255),w,b
 15921  004A2A  6ED9               	movwf	fsr2l,c
 15922  004A2C  0E01               	movlw	high _introducido
 15923  004A2E  0100               	movlb	0	; () banked
 15924  004A30  217B               	addwfc	(checkPass@i+1)& (0+255),w,b
 15925  004A32  6EDA               	movwf	fsr2h,c
 15926  004A34  50DF               	movf	indf2,w,c
 15927  004A36  0100               	movlb	0	; () banked
 15928  004A38  6F77               	movwf	(??_checkPass+2)& (0+255),b
 15929  004A3A  6B78               	clrf	(??_checkPass+3)& (0+255),b
 15930  004A3C  BF77               	btfsc	(??_checkPass+2)& (0+255),7,b
 15931  004A3E  0778               	decf	(??_checkPass+3)& (0+255),f,b
 15932  004A40  0100               	movlb	0	; () banked
 15933  004A42  5175               	movf	??_checkPass& (0+255),w,b
 15934  004A44  0100               	movlb	0	; () banked
 15935  004A46  1977               	xorwf	(??_checkPass+2)& (0+255),w,b
 15936  004A48  E10A               	bnz	l6150
 15937  004A4A  0100               	movlb	0	; () banked
 15938  004A4C  5176               	movf	(??_checkPass+1)& (0+255),w,b
 15939  004A4E  0100               	movlb	0	; () banked
 15940  004A50  1978               	xorwf	(??_checkPass+3)& (0+255),w,b
 15941  004A52  A4D8               	btfss	status,2,c
 15942  004A54  D004               	goto	l6150
 15943                           
 15944                           ; BSR set to: 0
 15945                           ;DisplayProtocol.h: 18: passOK = 1;
 15946  004A56  0E01               	movlw	1
 15947  004A58  0100               	movlb	0	; () banked
 15948  004A5A  6F79               	movwf	checkPass@passOK& (0+255),b
 15949  004A5C  D004               	goto	l6152
 15950  004A5E                     l6150:
 15951                           
 15952                           ; BSR set to: 0
 15953                           ;DisplayProtocol.h: 19: else {
 15954                           ;DisplayProtocol.h: 20: passOK = 0;
 15955  004A5E  0E00               	movlw	0
 15956  004A60  0100               	movlb	0	; () banked
 15957  004A62  6F79               	movwf	checkPass@passOK& (0+255),b
 15958                           
 15959                           ;DisplayProtocol.h: 21: break;
 15960  004A64  D004               	goto	l6156
 15961  004A66                     l6152:
 15962                           
 15963                           ; BSR set to: 0
 15964  004A66  0100               	movlb	0	; () banked
 15965  004A68  4B7A               	infsnz	checkPass@i& (0+255),f,b
 15966  004A6A  2B7B               	incf	(checkPass@i+1)& (0+255),f,b
 15967  004A6C  D7C4               	goto	l6142
 15968  004A6E                     l6156:
 15969                           
 15970                           ; BSR set to: 0
 15971                           ;DisplayProtocol.h: 22: }
 15972                           ;DisplayProtocol.h: 23: }
 15973                           ;DisplayProtocol.h: 24: return passOK;
 15974  004A6E  0100               	movlb	0	; () banked
 15975  004A70  5179               	movf	checkPass@passOK& (0+255),w,b
 15976  004A72  0012               	return	
 15977  004A74                     __end_of_checkPass:
 15978                           	opt stack 0
 15979                           tblptru	equ	0xFF8
 15980                           tblptrh	equ	0xFF7
 15981                           tblptrl	equ	0xFF6
 15982                           tablat	equ	0xFF5
 15983                           prodh	equ	0xFF4
 15984                           prodl	equ	0xFF3
 15985                           intcon	equ	0xFF2
 15986                           postinc0	equ	0xFEE
 15987                           wreg	equ	0xFE8
 15988                           postdec1	equ	0xFE5
 15989                           fsr1l	equ	0xFE1
 15990                           indf2	equ	0xFDF
 15991                           postinc2	equ	0xFDE
 15992                           postdec2	equ	0xFDD
 15993                           fsr2h	equ	0xFDA
 15994                           fsr2l	equ	0xFD9
 15995                           status	equ	0xFD8
 15996                           
 15997 ;; *************** function _pressDOWN *****************
 15998 ;; Defined at:
 15999 ;;		line 165 in file "source/DisplayProtocol.h"
 16000 ;; Parameters:    Size  Location     Type
 16001 ;;		None
 16002 ;; Auto vars:     Size  Location     Type
 16003 ;;		None
 16004 ;; Return value:  Size  Location     Type
 16005 ;;                  1    wreg      void 
 16006 ;; Registers used:
 16007 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16008 ;; Tracked objects:
 16009 ;;		On entry : 0/0
 16010 ;;		On exit  : 0/0
 16011 ;;		Unchanged: 0/0
 16012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16013 ;;      Params:         0       0       0       0       0       0       0
 16014 ;;      Locals:         0       0       0       0       0       0       0
 16015 ;;      Temps:          0       1       0       0       0       0       0
 16016 ;;      Totals:         0       1       0       0       0       0       0
 16017 ;;Total ram usage:        1 bytes
 16018 ;; Hardware stack levels used:    1
 16019 ;; Hardware stack levels required when called:    8
 16020 ;; This function calls:
 16021 ;;		Nothing
 16022 ;; This function is called by:
 16023 ;;		_buttonChecking
 16024 ;; This function uses a non-reentrant model
 16025 ;;
 16026                           
 16027                           	psect	text53
 16028  00427C                     __ptext53:
 16029                           	opt stack 0
 16030  00427C                     _pressDOWN:
 16031                           	opt stack 21
 16032                           
 16033                           ;DisplayProtocol.h: 166: if (actualScreen == 0 || actualScreen == 4) {
 16034                           
 16035                           ; BSR set to: 0
 16036                           ;incstack = 0
 16037  00427C  0100               	movlb	0	; () banked
 16038  00427E  51D1               	movf	_actualScreen& (0+255),w,b
 16039  004280  B4D8               	btfsc	status,2,c
 16040  004282  D005               	goto	l6582
 16041                           
 16042                           ; BSR set to: 0
 16043  004284  0E04               	movlw	4
 16044  004286  0100               	movlb	0	; () banked
 16045  004288  19D1               	xorwf	_actualScreen& (0+255),w,b
 16046  00428A  A4D8               	btfss	status,2,c
 16047  00428C  D009               	goto	l6588
 16048  00428E                     l6582:
 16049                           
 16050                           ; BSR set to: 0
 16051                           ;DisplayProtocol.h: 167: menuSection--;
 16052  00428E  0100               	movlb	0	; () banked
 16053  004290  07D4               	decf	_menuSection& (0+255),f,b
 16054                           
 16055                           ; BSR set to: 0
 16056                           ;DisplayProtocol.h: 168: if (menuSection < 0)
 16057  004292  0100               	movlb	0	; () banked
 16058  004294  AFD4               	btfss	_menuSection& (0+255),7,b
 16059  004296  0012               	return	
 16060                           
 16061                           ; BSR set to: 0
 16062                           ;DisplayProtocol.h: 169: menuSection = 6;
 16063  004298  0E06               	movlw	6
 16064  00429A  0100               	movlb	0	; () banked
 16065  00429C  6FD4               	movwf	_menuSection& (0+255),b
 16066                           
 16067                           ; BSR set to: 0
 16068                           ;DisplayProtocol.h: 170: } else if (actualScreen == 1) {
 16069  00429E  0012               	return	
 16070  0042A0                     l6588:
 16071                           
 16072                           ; BSR set to: 0
 16073  0042A0  0100               	movlb	0	; () banked
 16074  0042A2  05D1               	decf	_actualScreen& (0+255),w,b
 16075  0042A4  A4D8               	btfss	status,2,c
 16076  0042A6  D022               	goto	l6594
 16077                           
 16078                           ; BSR set to: 0
 16079                           ;DisplayProtocol.h: 171: introducido[passSection]--;
 16080  0042A8  0100               	movlb	0	; () banked
 16081  0042AA  51D5               	movf	_passSection& (0+255),w,b
 16082  0042AC  0D01               	mullw	1
 16083  0042AE  0E35               	movlw	low _introducido
 16084  0042B0  24F3               	addwf	prodl,w,c
 16085  0042B2  6ED9               	movwf	fsr2l,c
 16086  0042B4  0E01               	movlw	high _introducido
 16087  0042B6  20F4               	addwfc	prodh,w,c
 16088  0042B8  6EDA               	movwf	fsr2h,c
 16089  0042BA  06DF               	decf	indf2,f,c
 16090                           
 16091                           ;DisplayProtocol.h: 172: if (introducido[passSection] < 0)
 16092  0042BC  0100               	movlb	0	; () banked
 16093  0042BE  51D5               	movf	_passSection& (0+255),w,b
 16094  0042C0  0D01               	mullw	1
 16095  0042C2  0E35               	movlw	low _introducido
 16096  0042C4  24F3               	addwf	prodl,w,c
 16097  0042C6  6ED9               	movwf	fsr2l,c
 16098  0042C8  0E01               	movlw	high _introducido
 16099  0042CA  20F4               	addwfc	prodh,w,c
 16100  0042CC  6EDA               	movwf	fsr2h,c
 16101  0042CE  0E00               	movlw	0
 16102  0042D0  AEDB               	btfss	plusw2,7,c
 16103  0042D2  0012               	return	
 16104                           
 16105                           ; BSR set to: 0
 16106                           ;DisplayProtocol.h: 173: introducido[passSection] = 9;
 16107  0042D4  0100               	movlb	0	; () banked
 16108  0042D6  51D5               	movf	_passSection& (0+255),w,b
 16109  0042D8  0D01               	mullw	1
 16110  0042DA  0E35               	movlw	low _introducido
 16111  0042DC  24F3               	addwf	prodl,w,c
 16112  0042DE  6ED9               	movwf	fsr2l,c
 16113  0042E0  0E01               	movlw	high _introducido
 16114  0042E2  20F4               	addwfc	prodh,w,c
 16115  0042E4  6EDA               	movwf	fsr2h,c
 16116  0042E6  0E09               	movlw	9
 16117  0042E8  6EDF               	movwf	indf2,c
 16118                           
 16119                           ; BSR set to: 0
 16120                           ;DisplayProtocol.h: 174: } else if (actualScreen == 2 || actualScreen == 3
 16121  0042EA  0012               	return	
 16122  0042EC                     l6594:
 16123                           
 16124                           ; BSR set to: 0
 16125                           ;DisplayProtocol.h: 175: || actualScreen == 10) {
 16126  0042EC  0E02               	movlw	2
 16127  0042EE  0100               	movlb	0	; () banked
 16128  0042F0  19D1               	xorwf	_actualScreen& (0+255),w,b
 16129  0042F2  B4D8               	btfsc	status,2,c
 16130  0042F4  D00A               	goto	l6600
 16131                           
 16132                           ; BSR set to: 0
 16133  0042F6  0E03               	movlw	3
 16134  0042F8  0100               	movlb	0	; () banked
 16135  0042FA  19D1               	xorwf	_actualScreen& (0+255),w,b
 16136  0042FC  B4D8               	btfsc	status,2,c
 16137  0042FE  D005               	goto	l6600
 16138                           
 16139                           ; BSR set to: 0
 16140  004300  0E0A               	movlw	10
 16141  004302  0100               	movlb	0	; () banked
 16142  004304  19D1               	xorwf	_actualScreen& (0+255),w,b
 16143  004306  A4D8               	btfss	status,2,c
 16144  004308  D011               	goto	l6606
 16145  00430A                     l6600:
 16146                           
 16147                           ; BSR set to: 0
 16148                           ;DisplayProtocol.h: 176: selSN = !selSN;
 16149  00430A  0100               	movlb	0	; () banked
 16150  00430C  51D7               	movf	_selSN& (0+255),w,b
 16151  00430E  A4D8               	btfss	status,2,c
 16152  004310  D002               	goto	u7550
 16153  004312  0E01               	movlw	1
 16154  004314  D001               	goto	u7560
 16155  004316                     u7550:
 16156  004316  0E00               	movlw	0
 16157  004318                     u7560:
 16158  004318  0100               	movlb	0	; () banked
 16159  00431A  6FD7               	movwf	_selSN& (0+255),b
 16160                           
 16161                           ; BSR set to: 0
 16162                           ;DisplayProtocol.h: 177: if(selSN > 1)
 16163  00431C  0E01               	movlw	1
 16164  00431E  0100               	movlb	0	; () banked
 16165  004320  65D7               	cpfsgt	_selSN& (0+255),b
 16166  004322  0012               	return	
 16167                           
 16168                           ; BSR set to: 0
 16169                           ;DisplayProtocol.h: 178: selSN = 0;
 16170  004324  0E00               	movlw	0
 16171  004326  0100               	movlb	0	; () banked
 16172  004328  6FD7               	movwf	_selSN& (0+255),b
 16173                           
 16174                           ; BSR set to: 0
 16175                           ;DisplayProtocol.h: 179: }else if(actualScreen == 5) {
 16176  00432A  0012               	return	
 16177  00432C                     l6606:
 16178                           
 16179                           ; BSR set to: 0
 16180  00432C  0E05               	movlw	5
 16181  00432E  0100               	movlb	0	; () banked
 16182  004330  19D1               	xorwf	_actualScreen& (0+255),w,b
 16183  004332  A4D8               	btfss	status,2,c
 16184  004334  0012               	return	
 16185  004336  D009               	goto	l6618
 16186  004338                     l6610:
 16187                           
 16188                           ; BSR set to: 0
 16189                           ;DisplayProtocol.h: 184: selKMT--;
 16190  004338  0100               	movlb	0	; () banked
 16191  00433A  07D6               	decf	_selKMT& (0+255),f,b
 16192                           
 16193                           ; BSR set to: 0
 16194                           ;DisplayProtocol.h: 185: if(selKMT < 0)
 16195  00433C  0100               	movlb	0	; () banked
 16196  00433E  AFD6               	btfss	_selKMT& (0+255),7,b
 16197  004340  0012               	return	
 16198                           
 16199                           ; BSR set to: 0
 16200                           ;DisplayProtocol.h: 186: selKMT = 2;
 16201  004342  0E02               	movlw	2
 16202  004344  0100               	movlb	0	; () banked
 16203  004346  6FD6               	movwf	_selKMT& (0+255),b
 16204                           
 16205                           ; BSR set to: 0
 16206                           ;DisplayProtocol.h: 203: }
 16207                           ;DisplayProtocol.h: 204: }
 16208                           
 16209                           ; BSR set to: 0
 16210                           ;DisplayProtocol.h: 202: break;
 16211                           
 16212                           ;DisplayProtocol.h: 200: }case (6): {
 16213                           
 16214                           ; BSR set to: 0
 16215                           ;DisplayProtocol.h: 199: break;
 16216                           
 16217                           ;DisplayProtocol.h: 197: }case (5): {
 16218                           
 16219                           ; BSR set to: 0
 16220                           ;DisplayProtocol.h: 196: break;
 16221                           
 16222                           ;DisplayProtocol.h: 194: }case (4): {
 16223                           
 16224                           ; BSR set to: 0
 16225                           ;DisplayProtocol.h: 193: break;
 16226                           
 16227                           ;DisplayProtocol.h: 191: }case (3): {
 16228                           
 16229                           ; BSR set to: 0
 16230                           ;DisplayProtocol.h: 190: break;
 16231                           
 16232                           ;DisplayProtocol.h: 188: }case (2): {
 16233                           
 16234                           ; BSR set to: 0
 16235                           ;DisplayProtocol.h: 187: break;
 16236  004348  0012               	return	
 16237  00434A                     l6618:
 16238                           
 16239                           ; BSR set to: 0
 16240  00434A  0100               	movlb	0	; () banked
 16241  00434C  51D4               	movf	_menuSection& (0+255),w,b
 16242                           
 16243                           ; Switch size 1, requested type "space"
 16244                           ; Number of cases is 7, Range of values is 0 to 6
 16245                           ; switch strategies available:
 16246                           ; Name         Instructions Cycles
 16247                           ; simple_byte           22    12 (average)
 16248                           ;	Chosen strategy is simple_byte
 16249  00434E  0A00               	xorlw	0	; case 0
 16250  004350  B4D8               	btfsc	status,2,c
 16251  004352  0012               	return	
 16252  004354  0A01               	xorlw	1	; case 1
 16253  004356  B4D8               	btfsc	status,2,c
 16254  004358  D7EF               	goto	l6610
 16255  00435A  0A03               	xorlw	3	; case 2
 16256  00435C  B4D8               	btfsc	status,2,c
 16257  00435E  0012               	return	
 16258  004360  0A01               	xorlw	1	; case 3
 16259  004362  B4D8               	btfsc	status,2,c
 16260  004364  0012               	return	
 16261  004366  0A07               	xorlw	7	; case 4
 16262  004368  B4D8               	btfsc	status,2,c
 16263  00436A  0012               	return	
 16264  00436C  0A01               	xorlw	1	; case 5
 16265  00436E  B4D8               	btfsc	status,2,c
 16266  004370  0012               	return	
 16267  004372  0A03               	xorlw	3	; case 6
 16268                           
 16269                           ; BSR set to: 0
 16270                           
 16271                           ; BSR set to: 0
 16272                           
 16273                           ; BSR set to: 0
 16274                           
 16275                           ; BSR set to: 0
 16276  004374  0012               	return	
 16277  004376                     __end_of_pressDOWN:
 16278                           	opt stack 0
 16279                           tblptru	equ	0xFF8
 16280                           tblptrh	equ	0xFF7
 16281                           tblptrl	equ	0xFF6
 16282                           tablat	equ	0xFF5
 16283                           prodh	equ	0xFF4
 16284                           prodl	equ	0xFF3
 16285                           intcon	equ	0xFF2
 16286                           postinc0	equ	0xFEE
 16287                           wreg	equ	0xFE8
 16288                           postdec1	equ	0xFE5
 16289                           fsr1l	equ	0xFE1
 16290                           indf2	equ	0xFDF
 16291                           postinc2	equ	0xFDE
 16292                           postdec2	equ	0xFDD
 16293                           plusw2	equ	0xFDB
 16294                           fsr2h	equ	0xFDA
 16295                           fsr2l	equ	0xFD9
 16296                           status	equ	0xFD8
 16297                           
 16298 ;; *************** function _longPressUP *****************
 16299 ;; Defined at:
 16300 ;;		line 144 in file "source/DisplayProtocol.h"
 16301 ;; Parameters:    Size  Location     Type
 16302 ;;		None
 16303 ;; Auto vars:     Size  Location     Type
 16304 ;;		None
 16305 ;; Return value:  Size  Location     Type
 16306 ;;                  1    wreg      void 
 16307 ;; Registers used:
 16308 ;;		wreg, status,2, status,0
 16309 ;; Tracked objects:
 16310 ;;		On entry : 0/0
 16311 ;;		On exit  : 0/0
 16312 ;;		Unchanged: 0/0
 16313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16314 ;;      Params:         0       0       0       0       0       0       0
 16315 ;;      Locals:         0       0       0       0       0       0       0
 16316 ;;      Temps:          0       0       0       0       0       0       0
 16317 ;;      Totals:         0       0       0       0       0       0       0
 16318 ;;Total ram usage:        0 bytes
 16319 ;; Hardware stack levels used:    1
 16320 ;; Hardware stack levels required when called:    8
 16321 ;; This function calls:
 16322 ;;		Nothing
 16323 ;; This function is called by:
 16324 ;;		_buttonChecking
 16325 ;; This function uses a non-reentrant model
 16326 ;;
 16327                           
 16328                           	psect	text54
 16329  004D22                     __ptext54:
 16330                           	opt stack 0
 16331  004D22                     _longPressUP:
 16332                           	opt stack 21
 16333                           
 16334                           ;DisplayProtocol.h: 145: if (!UPisLP) {
 16335                           
 16336                           ; BSR set to: 0
 16337                           ;incstack = 0
 16338  004D22  5046               	movf	_UPisLP,w,c
 16339  004D24  A4D8               	btfss	status,2,c
 16340  004D26  0012               	return	
 16341                           
 16342                           ;DisplayProtocol.h: 146: UPisLP = 1;
 16343  004D28  0E01               	movlw	1
 16344  004D2A  6E46               	movwf	_UPisLP,c
 16345                           
 16346                           ;DisplayProtocol.h: 147: if (actualScreen == 0 || actualScreen == 4) {
 16347  004D2C  0100               	movlb	0	; () banked
 16348  004D2E  51D1               	movf	_actualScreen& (0+255),w,b
 16349  004D30  B4D8               	btfsc	status,2,c
 16350  004D32  D005               	goto	l6564
 16351                           
 16352                           ; BSR set to: 0
 16353  004D34  0E04               	movlw	4
 16354  004D36  0100               	movlb	0	; () banked
 16355  004D38  19D1               	xorwf	_actualScreen& (0+255),w,b
 16356  004D3A  A4D8               	btfss	status,2,c
 16357  004D3C  0012               	return	
 16358  004D3E                     l6564:
 16359                           
 16360                           ; BSR set to: 0
 16361                           ;DisplayProtocol.h: 148: if (holdENTERcont > 5) {
 16362  004D3E  0E05               	movlw	5
 16363  004D40  0100               	movlb	0	; () banked
 16364  004D42  65D2               	cpfsgt	_holdENTERcont& (0+255),b
 16365  004D44  D014               	goto	l6574
 16366                           
 16367                           ; BSR set to: 0
 16368                           ;DisplayProtocol.h: 149: if (actualScreen == 0) {
 16369  004D46  0100               	movlb	0	; () banked
 16370  004D48  51D1               	movf	_actualScreen& (0+255),w,b
 16371  004D4A  A4D8               	btfss	status,2,c
 16372  004D4C  D007               	goto	l6570
 16373                           
 16374                           ; BSR set to: 0
 16375                           ;DisplayProtocol.h: 150: actualScreen = 1;
 16376  004D4E  0E01               	movlw	1
 16377  004D50  0100               	movlb	0	; () banked
 16378  004D52  6FD1               	movwf	_actualScreen& (0+255),b
 16379                           
 16380                           ;DisplayProtocol.h: 151: fd = 0;
 16381  004D54  0E00               	movlw	0
 16382  004D56  0101               	movlb	1	; () banked
 16383  004D58  6F4A               	movwf	_fd& (0+255),b
 16384                           
 16385                           ;DisplayProtocol.h: 152: } else if (actualScreen == 4)
 16386  004D5A  0012               	return	
 16387  004D5C                     l6570:
 16388  004D5C  0E04               	movlw	4
 16389  004D5E  0100               	movlb	0	; () banked
 16390  004D60  19D1               	xorwf	_actualScreen& (0+255),w,b
 16391  004D62  A4D8               	btfss	status,2,c
 16392  004D64  0012               	return	
 16393                           
 16394                           ; BSR set to: 0
 16395                           ;DisplayProtocol.h: 153: actualScreen = 9;
 16396  004D66  0E09               	movlw	9
 16397  004D68  0100               	movlb	0	; () banked
 16398  004D6A  6FD1               	movwf	_actualScreen& (0+255),b
 16399                           
 16400                           ; BSR set to: 0
 16401                           ;DisplayProtocol.h: 154: } else
 16402                           
 16403                           ; BSR set to: 0
 16404  004D6C  0012               	return	
 16405  004D6E                     l6574:
 16406                           
 16407                           ; BSR set to: 0
 16408                           ;DisplayProtocol.h: 155: menuSection = 0;
 16409  004D6E  0E00               	movlw	0
 16410  004D70  0100               	movlb	0	; () banked
 16411  004D72  6FD4               	movwf	_menuSection& (0+255),b
 16412                           
 16413                           ; BSR set to: 0
 16414                           
 16415                           ; BSR set to: 0
 16416  004D74  0012               	return	
 16417  004D76                     __end_of_longPressUP:
 16418                           	opt stack 0
 16419                           tblptru	equ	0xFF8
 16420                           tblptrh	equ	0xFF7
 16421                           tblptrl	equ	0xFF6
 16422                           tablat	equ	0xFF5
 16423                           prodh	equ	0xFF4
 16424                           prodl	equ	0xFF3
 16425                           intcon	equ	0xFF2
 16426                           postinc0	equ	0xFEE
 16427                           wreg	equ	0xFE8
 16428                           postdec1	equ	0xFE5
 16429                           fsr1l	equ	0xFE1
 16430                           indf2	equ	0xFDF
 16431                           postinc2	equ	0xFDE
 16432                           postdec2	equ	0xFDD
 16433                           plusw2	equ	0xFDB
 16434                           fsr2h	equ	0xFDA
 16435                           fsr2l	equ	0xFD9
 16436                           status	equ	0xFD8
 16437                           
 16438 ;; *************** function _longPressRETRO *****************
 16439 ;; Defined at:
 16440 ;;		line 230 in file "source/DisplayProtocol.h"
 16441 ;; Parameters:    Size  Location     Type
 16442 ;;		None
 16443 ;; Auto vars:     Size  Location     Type
 16444 ;;		None
 16445 ;; Return value:  Size  Location     Type
 16446 ;;                  1    wreg      void 
 16447 ;; Registers used:
 16448 ;;		wreg, status,2, status,0
 16449 ;; Tracked objects:
 16450 ;;		On entry : 0/0
 16451 ;;		On exit  : 0/0
 16452 ;;		Unchanged: 0/0
 16453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16454 ;;      Params:         0       0       0       0       0       0       0
 16455 ;;      Locals:         0       0       0       0       0       0       0
 16456 ;;      Temps:          0       0       0       0       0       0       0
 16457 ;;      Totals:         0       0       0       0       0       0       0
 16458 ;;Total ram usage:        0 bytes
 16459 ;; Hardware stack levels used:    1
 16460 ;; Hardware stack levels required when called:    8
 16461 ;; This function calls:
 16462 ;;		Nothing
 16463 ;; This function is called by:
 16464 ;;		_buttonChecking
 16465 ;; This function uses a non-reentrant model
 16466 ;;
 16467                           
 16468                           	psect	text55
 16469  004F14                     __ptext55:
 16470                           	opt stack 0
 16471  004F14                     _longPressRETRO:
 16472                           	opt stack 21
 16473                           
 16474                           ;DisplayProtocol.h: 231: if (!RETROisLP) {
 16475                           
 16476                           ;incstack = 0
 16477  004F14  0101               	movlb	1	; () banked
 16478  004F16  5147               	movf	_RETROisLP& (0+255),w,b
 16479  004F18  0101               	movlb	1	; () banked
 16480  004F1A  A4D8               	btfss	status,2,c
 16481  004F1C  0012               	return	
 16482                           
 16483                           ; BSR set to: 1
 16484                           ;DisplayProtocol.h: 232: RETROisLP = 1;
 16485  004F1E  0E01               	movlw	1
 16486  004F20  0101               	movlb	1	; () banked
 16487  004F22  6F47               	movwf	_RETROisLP& (0+255),b
 16488                           
 16489                           ;DisplayProtocol.h: 233: if(actualScreen == 0 || actualScreen == 4) {
 16490  004F24  0100               	movlb	0	; () banked
 16491  004F26  51D1               	movf	_actualScreen& (0+255),w,b
 16492  004F28  B4D8               	btfsc	status,2,c
 16493  004F2A  D005               	goto	l6646
 16494                           
 16495                           ; BSR set to: 0
 16496  004F2C  0E04               	movlw	4
 16497  004F2E  0100               	movlb	0	; () banked
 16498  004F30  19D1               	xorwf	_actualScreen& (0+255),w,b
 16499  004F32  A4D8               	btfss	status,2,c
 16500  004F34  0012               	return	
 16501  004F36                     l6646:
 16502                           
 16503                           ; BSR set to: 0
 16504                           ;DisplayProtocol.h: 234: if(ProcessStarted) {
 16505  004F36  0100               	movlb	0	; () banked
 16506  004F38  51D0               	movf	_ProcessStarted& (0+255),w,b
 16507  004F3A  B4D8               	btfsc	status,2,c
 16508  004F3C  0012               	return	
 16509                           
 16510                           ; BSR set to: 0
 16511                           ;DisplayProtocol.h: 235: tempLastScreen = actualScreen;
 16512  004F3E  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 16513                           
 16514                           ; BSR set to: 0
 16515                           ;DisplayProtocol.h: 236: actualScreen = 3;
 16516  004F42  0E03               	movlw	3
 16517  004F44  0100               	movlb	0	; () banked
 16518  004F46  6FD1               	movwf	_actualScreen& (0+255),b
 16519                           
 16520                           ;DisplayProtocol.h: 237: selSN = 0;
 16521  004F48  0E00               	movlw	0
 16522  004F4A  0100               	movlb	0	; () banked
 16523  004F4C  6FD7               	movwf	_selSN& (0+255),b
 16524                           
 16525                           ; BSR set to: 0
 16526                           
 16527                           ; BSR set to: 0
 16528  004F4E  0012               	return	
 16529  004F50                     __end_of_longPressRETRO:
 16530                           	opt stack 0
 16531                           tblptru	equ	0xFF8
 16532                           tblptrh	equ	0xFF7
 16533                           tblptrl	equ	0xFF6
 16534                           tablat	equ	0xFF5
 16535                           prodh	equ	0xFF4
 16536                           prodl	equ	0xFF3
 16537                           intcon	equ	0xFF2
 16538                           postinc0	equ	0xFEE
 16539                           wreg	equ	0xFE8
 16540                           postdec1	equ	0xFE5
 16541                           fsr1l	equ	0xFE1
 16542                           indf2	equ	0xFDF
 16543                           postinc2	equ	0xFDE
 16544                           postdec2	equ	0xFDD
 16545                           plusw2	equ	0xFDB
 16546                           fsr2h	equ	0xFDA
 16547                           fsr2l	equ	0xFD9
 16548                           status	equ	0xFD8
 16549                           
 16550 ;; *************** function _longPressENTER *****************
 16551 ;; Defined at:
 16552 ;;		line 315 in file "source/DisplayProtocol.h"
 16553 ;; Parameters:    Size  Location     Type
 16554 ;;		None
 16555 ;; Auto vars:     Size  Location     Type
 16556 ;;		None
 16557 ;; Return value:  Size  Location     Type
 16558 ;;                  1    wreg      void 
 16559 ;; Registers used:
 16560 ;;		wreg, status,2, status,0
 16561 ;; Tracked objects:
 16562 ;;		On entry : 0/0
 16563 ;;		On exit  : 0/0
 16564 ;;		Unchanged: 0/0
 16565 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16566 ;;      Params:         0       0       0       0       0       0       0
 16567 ;;      Locals:         0       0       0       0       0       0       0
 16568 ;;      Temps:          0       0       0       0       0       0       0
 16569 ;;      Totals:         0       0       0       0       0       0       0
 16570 ;;Total ram usage:        0 bytes
 16571 ;; Hardware stack levels used:    1
 16572 ;; Hardware stack levels required when called:    8
 16573 ;; This function calls:
 16574 ;;		Nothing
 16575 ;; This function is called by:
 16576 ;;		_buttonChecking
 16577 ;; This function uses a non-reentrant model
 16578 ;;
 16579                           
 16580                           	psect	text56
 16581  004C50                     __ptext56:
 16582                           	opt stack 0
 16583  004C50                     _longPressENTER:
 16584                           	opt stack 21
 16585                           
 16586                           ;DisplayProtocol.h: 316: if (!ENTERisLP) {
 16587                           
 16588                           ;incstack = 0
 16589  004C50  0101               	movlb	1	; () banked
 16590  004C52  5145               	movf	_ENTERisLP& (0+255),w,b
 16591  004C54  0101               	movlb	1	; () banked
 16592  004C56  A4D8               	btfss	status,2,c
 16593  004C58  0012               	return	
 16594                           
 16595                           ; BSR set to: 1
 16596                           ;DisplayProtocol.h: 317: ENTERisLP = 1;
 16597  004C5A  0E01               	movlw	1
 16598  004C5C  0101               	movlb	1	; () banked
 16599  004C5E  6F45               	movwf	_ENTERisLP& (0+255),b
 16600                           
 16601                           ;DisplayProtocol.h: 318: if(actualScreen == 0 || actualScreen == 4) {
 16602  004C60  0100               	movlb	0	; () banked
 16603  004C62  51D1               	movf	_actualScreen& (0+255),w,b
 16604  004C64  B4D8               	btfsc	status,2,c
 16605  004C66  D005               	goto	l6726
 16606                           
 16607                           ; BSR set to: 0
 16608  004C68  0E04               	movlw	4
 16609  004C6A  0100               	movlb	0	; () banked
 16610  004C6C  19D1               	xorwf	_actualScreen& (0+255),w,b
 16611  004C6E  A4D8               	btfss	status,2,c
 16612  004C70  0012               	return	
 16613  004C72                     l6726:
 16614                           
 16615                           ; BSR set to: 0
 16616                           ;DisplayProtocol.h: 319: if (holdUPcont > 5) {
 16617  004C72  0E05               	movlw	5
 16618  004C74  0100               	movlb	0	; () banked
 16619  004C76  65D3               	cpfsgt	_holdUPcont& (0+255),b
 16620  004C78  D014               	goto	l6736
 16621                           
 16622                           ; BSR set to: 0
 16623                           ;DisplayProtocol.h: 320: if (actualScreen == 0) {
 16624  004C7A  0100               	movlb	0	; () banked
 16625  004C7C  51D1               	movf	_actualScreen& (0+255),w,b
 16626  004C7E  A4D8               	btfss	status,2,c
 16627  004C80  D007               	goto	l6732
 16628                           
 16629                           ; BSR set to: 0
 16630                           ;DisplayProtocol.h: 321: actualScreen = 1;
 16631  004C82  0E01               	movlw	1
 16632  004C84  0100               	movlb	0	; () banked
 16633  004C86  6FD1               	movwf	_actualScreen& (0+255),b
 16634                           
 16635                           ;DisplayProtocol.h: 322: fd = 0;
 16636  004C88  0E00               	movlw	0
 16637  004C8A  0101               	movlb	1	; () banked
 16638  004C8C  6F4A               	movwf	_fd& (0+255),b
 16639                           
 16640                           ;DisplayProtocol.h: 323: } else if (actualScreen == 4)
 16641  004C8E  0012               	return	
 16642  004C90                     l6732:
 16643  004C90  0E04               	movlw	4
 16644  004C92  0100               	movlb	0	; () banked
 16645  004C94  19D1               	xorwf	_actualScreen& (0+255),w,b
 16646  004C96  A4D8               	btfss	status,2,c
 16647  004C98  0012               	return	
 16648                           
 16649                           ; BSR set to: 0
 16650                           ;DisplayProtocol.h: 324: actualScreen = 9;
 16651  004C9A  0E09               	movlw	9
 16652  004C9C  0100               	movlb	0	; () banked
 16653  004C9E  6FD1               	movwf	_actualScreen& (0+255),b
 16654                           
 16655                           ; BSR set to: 0
 16656                           ;DisplayProtocol.h: 325: } else if(!ProcessStarted) {
 16657                           
 16658                           ; BSR set to: 0
 16659  004CA0  0012               	return	
 16660  004CA2                     l6736:
 16661                           
 16662                           ; BSR set to: 0
 16663  004CA2  0100               	movlb	0	; () banked
 16664  004CA4  51D0               	movf	_ProcessStarted& (0+255),w,b
 16665  004CA6  A4D8               	btfss	status,2,c
 16666  004CA8  0012               	return	
 16667                           
 16668                           ; BSR set to: 0
 16669                           ;DisplayProtocol.h: 326: tempLastScreen = actualScreen;
 16670  004CAA  C0D1  F0D8         	movff	_actualScreen,_tempLastScreen
 16671                           
 16672                           ; BSR set to: 0
 16673                           ;DisplayProtocol.h: 327: actualScreen = 2;
 16674  004CAE  0E02               	movlw	2
 16675  004CB0  0100               	movlb	0	; () banked
 16676  004CB2  6FD1               	movwf	_actualScreen& (0+255),b
 16677                           
 16678                           ;DisplayProtocol.h: 328: selSN = 1;
 16679  004CB4  0E01               	movlw	1
 16680  004CB6  0100               	movlb	0	; () banked
 16681  004CB8  6FD7               	movwf	_selSN& (0+255),b
 16682                           
 16683                           ; BSR set to: 0
 16684                           
 16685                           ; BSR set to: 0
 16686                           
 16687                           ; BSR set to: 0
 16688  004CBA  0012               	return	
 16689  004CBC                     __end_of_longPressENTER:
 16690                           	opt stack 0
 16691                           tblptru	equ	0xFF8
 16692                           tblptrh	equ	0xFF7
 16693                           tblptrl	equ	0xFF6
 16694                           tablat	equ	0xFF5
 16695                           prodh	equ	0xFF4
 16696                           prodl	equ	0xFF3
 16697                           intcon	equ	0xFF2
 16698                           postinc0	equ	0xFEE
 16699                           wreg	equ	0xFE8
 16700                           postdec1	equ	0xFE5
 16701                           fsr1l	equ	0xFE1
 16702                           indf2	equ	0xFDF
 16703                           postinc2	equ	0xFDE
 16704                           postdec2	equ	0xFDD
 16705                           plusw2	equ	0xFDB
 16706                           fsr2h	equ	0xFDA
 16707                           fsr2l	equ	0xFD9
 16708                           status	equ	0xFD8
 16709                           
 16710 ;; *************** function _longPressDOWN *****************
 16711 ;; Defined at:
 16712 ;;		line 208 in file "source/DisplayProtocol.h"
 16713 ;; Parameters:    Size  Location     Type
 16714 ;;		None
 16715 ;; Auto vars:     Size  Location     Type
 16716 ;;		None
 16717 ;; Return value:  Size  Location     Type
 16718 ;;                  1    wreg      void 
 16719 ;; Registers used:
 16720 ;;		wreg, status,2
 16721 ;; Tracked objects:
 16722 ;;		On entry : 0/0
 16723 ;;		On exit  : 0/0
 16724 ;;		Unchanged: 0/0
 16725 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16726 ;;      Params:         0       0       0       0       0       0       0
 16727 ;;      Locals:         0       0       0       0       0       0       0
 16728 ;;      Temps:          0       0       0       0       0       0       0
 16729 ;;      Totals:         0       0       0       0       0       0       0
 16730 ;;Total ram usage:        0 bytes
 16731 ;; Hardware stack levels used:    1
 16732 ;; Hardware stack levels required when called:    8
 16733 ;; This function calls:
 16734 ;;		Nothing
 16735 ;; This function is called by:
 16736 ;;		_buttonChecking
 16737 ;; This function uses a non-reentrant model
 16738 ;;
 16739                           
 16740                           	psect	text57
 16741  00525C                     __ptext57:
 16742                           	opt stack 0
 16743  00525C                     _longPressDOWN:
 16744                           	opt stack 21
 16745                           
 16746                           ;DisplayProtocol.h: 209: if (!DOWNisLP) {
 16747                           
 16748                           ;incstack = 0
 16749  00525C  5045               	movf	_DOWNisLP,w,c
 16750  00525E  A4D8               	btfss	status,2,c
 16751  005260  0012               	return	
 16752                           
 16753                           ;DisplayProtocol.h: 210: DOWNisLP = 1;
 16754  005262  0E01               	movlw	1
 16755  005264  6E45               	movwf	_DOWNisLP,c
 16756  005266  0012               	return	
 16757  005268                     __end_of_longPressDOWN:
 16758                           	opt stack 0
 16759                           tblptru	equ	0xFF8
 16760                           tblptrh	equ	0xFF7
 16761                           tblptrl	equ	0xFF6
 16762                           tablat	equ	0xFF5
 16763                           prodh	equ	0xFF4
 16764                           prodl	equ	0xFF3
 16765                           intcon	equ	0xFF2
 16766                           postinc0	equ	0xFEE
 16767                           wreg	equ	0xFE8
 16768                           postdec1	equ	0xFE5
 16769                           fsr1l	equ	0xFE1
 16770                           indf2	equ	0xFDF
 16771                           postinc2	equ	0xFDE
 16772                           postdec2	equ	0xFDD
 16773                           plusw2	equ	0xFDB
 16774                           fsr2h	equ	0xFDA
 16775                           fsr2l	equ	0xFD9
 16776                           status	equ	0xFD8
 16777                           
 16778 ;; *************** function _delay_ms *****************
 16779 ;; Defined at:
 16780 ;;		line 13 in file "source/../../delay.h"
 16781 ;; Parameters:    Size  Location     Type
 16782 ;;  del             2   21[BANK0 ] int 
 16783 ;; Auto vars:     Size  Location     Type
 16784 ;;  i               2   24[BANK0 ] int 
 16785 ;; Return value:  Size  Location     Type
 16786 ;;                  1    wreg      void 
 16787 ;; Registers used:
 16788 ;;		wreg, status,2, status,0
 16789 ;; Tracked objects:
 16790 ;;		On entry : 0/0
 16791 ;;		On exit  : 0/0
 16792 ;;		Unchanged: 0/0
 16793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16794 ;;      Params:         0       2       0       0       0       0       0
 16795 ;;      Locals:         0       2       0       0       0       0       0
 16796 ;;      Temps:          0       1       0       0       0       0       0
 16797 ;;      Totals:         0       5       0       0       0       0       0
 16798 ;;Total ram usage:        5 bytes
 16799 ;; Hardware stack levels used:    1
 16800 ;; Hardware stack levels required when called:    8
 16801 ;; This function calls:
 16802 ;;		Nothing
 16803 ;; This function is called by:
 16804 ;;		_buttonChecking
 16805 ;; This function uses a non-reentrant model
 16806 ;;
 16807                           
 16808                           	psect	text58
 16809  004E4A                     __ptext58:
 16810                           	opt stack 0
 16811  004E4A                     _delay_ms:
 16812                           	opt stack 21
 16813                           
 16814                           ;delay.h: 14: for(int i = 1;i <= del;i++)
 16815                           
 16816                           ;incstack = 0
 16817  004E4A  0E00               	movlw	0
 16818  004E4C  0100               	movlb	0	; () banked
 16819  004E4E  6F79               	movwf	(delay_ms@i+1)& (0+255),b
 16820  004E50  0E01               	movlw	1
 16821  004E52  6F78               	movwf	delay_ms@i& (0+255),b
 16822  004E54  D00C               	goto	l90
 16823  004E56                     l6246:
 16824                           
 16825                           ; BSR set to: 0
 16826                           ;delay.h: 15: _delay((unsigned long)((1)*(16000000/4000.0)));
 16827  004E56  0E06               	movlw	6
 16828  004E58  0100               	movlb	0	; () banked
 16829  004E5A  6F77               	movwf	??_delay_ms& (0+255),b
 16830  004E5C  0E30               	movlw	48
 16831  004E5E                     u12137:
 16832  004E5E  2EE8               	decfsz	wreg,f,c
 16833  004E60  D7FE               	goto	u12137
 16834  004E62  2F77               	decfsz	??_delay_ms& (0+255),f,b
 16835  004E64  D7FC               	goto	u12137
 16836  004E66  D000               	nop2	
 16837  004E68  0100               	movlb	0	; () banked
 16838  004E6A  4B78               	infsnz	delay_ms@i& (0+255),f,b
 16839  004E6C  2B79               	incf	(delay_ms@i+1)& (0+255),f,b
 16840  004E6E                     l90:
 16841                           
 16842                           ; BSR set to: 0
 16843  004E6E  0100               	movlb	0	; () banked
 16844  004E70  5178               	movf	delay_ms@i& (0+255),w,b
 16845  004E72  0100               	movlb	0	; () banked
 16846  004E74  5D75               	subwf	delay_ms@del& (0+255),w,b
 16847  004E76  0100               	movlb	0	; () banked
 16848  004E78  5176               	movf	(delay_ms@del+1)& (0+255),w,b
 16849  004E7A  0A80               	xorlw	128
 16850  004E7C  0100               	movlb	0	; () banked
 16851  004E7E  6F77               	movwf	??_delay_ms& (0+255),b
 16852  004E80  0100               	movlb	0	; () banked
 16853  004E82  5179               	movf	(delay_ms@i+1)& (0+255),w,b
 16854  004E84  0A80               	xorlw	128
 16855  004E86  0100               	movlb	0	; () banked
 16856  004E88  5977               	subwfb	??_delay_ms& (0+255),w,b
 16857  004E8A  A0D8               	btfss	status,0,c
 16858  004E8C  0012               	return	
 16859  004E8E  D7E3               	goto	l6246
 16860  004E90                     __end_of_delay_ms:
 16861                           	opt stack 0
 16862                           tblptru	equ	0xFF8
 16863                           tblptrh	equ	0xFF7
 16864                           tblptrl	equ	0xFF6
 16865                           tablat	equ	0xFF5
 16866                           prodh	equ	0xFF4
 16867                           prodl	equ	0xFF3
 16868                           intcon	equ	0xFF2
 16869                           postinc0	equ	0xFEE
 16870                           wreg	equ	0xFE8
 16871                           postdec1	equ	0xFE5
 16872                           fsr1l	equ	0xFE1
 16873                           indf2	equ	0xFDF
 16874                           postinc2	equ	0xFDE
 16875                           postdec2	equ	0xFDD
 16876                           plusw2	equ	0xFDB
 16877                           fsr2h	equ	0xFDA
 16878                           fsr2l	equ	0xFD9
 16879                           status	equ	0xFD8
 16880                           
 16881 ;; *************** function _UARTConfig *****************
 16882 ;; Defined at:
 16883 ;;		line 60 in file "source/UARTConfig.h"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;		None
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;		None
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  1    wreg      void 
 16890 ;; Registers used:
 16891 ;;		wreg, status,2
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16897 ;;      Params:         0       0       0       0       0       0       0
 16898 ;;      Locals:         0       0       0       0       0       0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0
 16900 ;;      Totals:         0       0       0       0       0       0       0
 16901 ;;Total ram usage:        0 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; Hardware stack levels required when called:    8
 16904 ;; This function calls:
 16905 ;;		Nothing
 16906 ;; This function is called by:
 16907 ;;		_main
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text59
 16912  004F88                     __ptext59:
 16913                           	opt stack 0
 16914  004F88                     _UARTConfig:
 16915                           	opt stack 22
 16916                           
 16917                           ;UARTConfig.h: 61: RCSTA1bits.SPEN = 0;
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;incstack = 0
 16921  004F88  9EAB               	bcf	4011,7,c	;volatile
 16922                           
 16923                           ;UARTConfig.h: 62: SPBRGH1 = 0;
 16924  004F8A  0E00               	movlw	0
 16925  004F8C  6EB0               	movwf	4016,c	;volatile
 16926                           
 16927                           ;UARTConfig.h: 63: SPBRG1 = 34;
 16928  004F8E  0E22               	movlw	34
 16929  004F90  6EAF               	movwf	4015,c	;volatile
 16930                           
 16931                           ;UARTConfig.h: 64: ANSELCbits.ANSC6 = 0;
 16932  004F92  010F               	movlb	15	; () banked
 16933  004F94  9D3A               	bcf	58,6,b	;volatile
 16934                           
 16935                           ; BSR set to: 15
 16936                           ;UARTConfig.h: 65: ANSELCbits.ANSC7 = 0;
 16937  004F96  010F               	movlb	15	; () banked
 16938  004F98  9F3A               	bcf	58,7,b	;volatile
 16939                           
 16940                           ; BSR set to: 15
 16941                           ;UARTConfig.h: 66: TRISCbits.TRISC6 = 1;
 16942  004F9A  8C94               	bsf	3988,6,c	;volatile
 16943                           
 16944                           ; BSR set to: 15
 16945                           ;UARTConfig.h: 67: TRISCbits.TRISC7 = 1;
 16946  004F9C  8E94               	bsf	3988,7,c	;volatile
 16947                           
 16948                           ; BSR set to: 15
 16949                           ;UARTConfig.h: 68: TXSTA1bits.TX9 = 0;
 16950  004F9E  9CAC               	bcf	4012,6,c	;volatile
 16951                           
 16952                           ; BSR set to: 15
 16953                           ;UARTConfig.h: 69: TXSTA1bits.SYNC = 0;
 16954  004FA0  98AC               	bcf	4012,4,c	;volatile
 16955                           
 16956                           ; BSR set to: 15
 16957                           ;UARTConfig.h: 70: TXSTA1bits.SENDB = 0;
 16958  004FA2  96AC               	bcf	4012,3,c	;volatile
 16959                           
 16960                           ; BSR set to: 15
 16961                           ;UARTConfig.h: 71: TXSTA1bits.BRGH = 1;
 16962  004FA4  84AC               	bsf	4012,2,c	;volatile
 16963                           
 16964                           ; BSR set to: 15
 16965                           ;UARTConfig.h: 72: RCSTA1bits.RX9 = 0;
 16966  004FA6  9CAB               	bcf	4011,6,c	;volatile
 16967                           
 16968                           ; BSR set to: 15
 16969                           ;UARTConfig.h: 73: BAUDCON1bits.DTRXP = 0;
 16970  004FA8  9AB8               	bcf	4024,5,c	;volatile
 16971                           
 16972                           ; BSR set to: 15
 16973                           ;UARTConfig.h: 74: BAUDCON1bits.CKTXP = 0;
 16974  004FAA  98B8               	bcf	4024,4,c	;volatile
 16975                           
 16976                           ; BSR set to: 15
 16977                           ;UARTConfig.h: 75: BAUDCON1bits.BRG16 = 1;
 16978  004FAC  86B8               	bsf	4024,3,c	;volatile
 16979                           
 16980                           ; BSR set to: 15
 16981                           ;UARTConfig.h: 76: BAUDCON1bits.WUE = 0;
 16982  004FAE  92B8               	bcf	4024,1,c	;volatile
 16983                           
 16984                           ; BSR set to: 15
 16985                           ;UARTConfig.h: 77: BAUDCON1bits.ABDEN = 0;
 16986  004FB0  90B8               	bcf	4024,0,c	;volatile
 16987                           
 16988                           ; BSR set to: 15
 16989                           ;UARTConfig.h: 78: RCSTA1bits.CREN = 1;
 16990  004FB2  88AB               	bsf	4011,4,c	;volatile
 16991                           
 16992                           ; BSR set to: 15
 16993                           ;UARTConfig.h: 79: TXSTA1bits.TXEN = 1;
 16994  004FB4  8AAC               	bsf	4012,5,c	;volatile
 16995                           
 16996                           ; BSR set to: 15
 16997                           ;UARTConfig.h: 80: IPR1bits.RC1IP = 0;
 16998  004FB6  9A9F               	bcf	3999,5,c	;volatile
 16999                           
 17000                           ; BSR set to: 15
 17001                           ;UARTConfig.h: 81: PIR1bits.RC1IF = 0;
 17002  004FB8  9A9E               	bcf	3998,5,c	;volatile
 17003                           
 17004                           ; BSR set to: 15
 17005                           ;UARTConfig.h: 82: PIE1bits.RC1IE = 1;
 17006  004FBA  8A9D               	bsf	3997,5,c	;volatile
 17007                           
 17008                           ; BSR set to: 15
 17009                           ;UARTConfig.h: 83: RCSTA1bits.SPEN = 1;
 17010  004FBC  8EAB               	bsf	4011,7,c	;volatile
 17011                           
 17012                           ; BSR set to: 15
 17013  004FBE  0012               	return		;funcret
 17014  004FC0                     __end_of_UARTConfig:
 17015                           	opt stack 0
 17016                           tblptru	equ	0xFF8
 17017                           tblptrh	equ	0xFF7
 17018                           tblptrl	equ	0xFF6
 17019                           tablat	equ	0xFF5
 17020                           prodh	equ	0xFF4
 17021                           prodl	equ	0xFF3
 17022                           intcon	equ	0xFF2
 17023                           postinc0	equ	0xFEE
 17024                           wreg	equ	0xFE8
 17025                           postdec1	equ	0xFE5
 17026                           fsr1l	equ	0xFE1
 17027                           indf2	equ	0xFDF
 17028                           postinc2	equ	0xFDE
 17029                           postdec2	equ	0xFDD
 17030                           plusw2	equ	0xFDB
 17031                           fsr2h	equ	0xFDA
 17032                           fsr2l	equ	0xFD9
 17033                           status	equ	0xFD8
 17034                           
 17035 ;; *************** function _PWM2Config *****************
 17036 ;; Defined at:
 17037 ;;		line 45 in file "source/PWMConfig.h"
 17038 ;; Parameters:    Size  Location     Type
 17039 ;;		None
 17040 ;; Auto vars:     Size  Location     Type
 17041 ;;		None
 17042 ;; Return value:  Size  Location     Type
 17043 ;;                  1    wreg      void 
 17044 ;; Registers used:
 17045 ;;		wreg, status,2, status,0, cstack
 17046 ;; Tracked objects:
 17047 ;;		On entry : 0/0
 17048 ;;		On exit  : 0/0
 17049 ;;		Unchanged: 0/0
 17050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17051 ;;      Params:         0       0       0       0       0       0       0
 17052 ;;      Locals:         0       0       0       0       0       0       0
 17053 ;;      Temps:          0       0       0       0       0       0       0
 17054 ;;      Totals:         0       0       0       0       0       0       0
 17055 ;;Total ram usage:        0 bytes
 17056 ;; Hardware stack levels used:    1
 17057 ;; Hardware stack levels required when called:    9
 17058 ;; This function calls:
 17059 ;;		_setPWM2duty
 17060 ;;		_t2config
 17061 ;; This function is called by:
 17062 ;;		_main
 17063 ;; This function uses a non-reentrant model
 17064 ;;
 17065                           
 17066                           	psect	text60
 17067  004CBC                     __ptext60:
 17068                           	opt stack 0
 17069  004CBC                     _PWM2Config:
 17070                           	opt stack 21
 17071                           
 17072                           ;PWMConfig.h: 46: TRISCbits.TRISC0 = 1;
 17073                           
 17074                           ; BSR set to: 15
 17075                           ;incstack = 0
 17076  004CBC  8094               	bsf	3988,0,c	;volatile
 17077                           
 17078                           ;PWMConfig.h: 47: TRISCbits.TRISC1 = 1;
 17079  004CBE  8294               	bsf	3988,1,c	;volatile
 17080                           
 17081                           ;PWMConfig.h: 48: PSTR2CONbits.STR2A = 1;
 17082  004CC0  8063               	bsf	3939,0,c	;volatile
 17083                           
 17084                           ;PWMConfig.h: 49: PSTR2CONbits.STR2B = 1;
 17085  004CC2  8263               	bsf	3939,1,c	;volatile
 17086                           
 17087                           ;PWMConfig.h: 50: PSTR2CONbits.STR2C = 0;
 17088  004CC4  9463               	bcf	3939,2,c	;volatile
 17089                           
 17090                           ;PWMConfig.h: 51: PSTR2CONbits.STR2D = 0;
 17091  004CC6  9663               	bcf	3939,3,c	;volatile
 17092                           
 17093                           ;PWMConfig.h: 52: CCPTMRS0bits.C2TSEL = 0b00;
 17094  004CC8  0EE7               	movlw	-25
 17095  004CCA  010F               	movlb	15	; () banked
 17096  004CCC  1749               	andwf	73,f,b	;volatile
 17097                           
 17098                           ;PWMConfig.h: 53: PR2 = 199;
 17099  004CCE  0EC7               	movlw	199
 17100  004CD0  6EBB               	movwf	4027,c	;volatile
 17101                           
 17102                           ; BSR set to: 15
 17103                           ;PWMConfig.h: 54: ECCP2ASbits.CCP2AS = 0b000;
 17104  004CD2  9864               	bcf	3940,4,c	;volatile
 17105  004CD4  9A64               	bcf	3940,5,c	;volatile
 17106  004CD6  9C64               	bcf	3940,6,c	;volatile
 17107                           
 17108                           ;PWMConfig.h: 55: ECCP2ASbits.PSS2AC = 0b00;
 17109  004CD8  0EF3               	movlw	-13
 17110  004CDA  1664               	andwf	3940,f,c	;volatile
 17111                           
 17112                           ;PWMConfig.h: 56: ECCP2ASbits.PSS2BD = 0b00;
 17113  004CDC  0EFC               	movlw	-4
 17114  004CDE  1664               	andwf	3940,f,c	;volatile
 17115                           
 17116                           ; BSR set to: 15
 17117                           ;PWMConfig.h: 57: PWM2CONbits.P2RSEN = 0;
 17118  004CE0  9E65               	bcf	3941,7,c	;volatile
 17119                           
 17120                           ;PWMConfig.h: 58: ECCP2ASbits.CCP2AS = 1;
 17121  004CE2  5064               	movf	3940,w,c	;volatile
 17122  004CE4  0B8F               	andlw	-113
 17123  004CE6  0910               	iorlw	16
 17124  004CE8  6E64               	movwf	3940,c	;volatile
 17125                           
 17126                           ;PWMConfig.h: 59: CCP2CONbits.P2M = 0b10;
 17127  004CEA  5066               	movf	3942,w,c	;volatile
 17128  004CEC  0B3F               	andlw	-193
 17129  004CEE  0980               	iorlw	128
 17130  004CF0  6E66               	movwf	3942,c	;volatile
 17131                           
 17132                           ;PWMConfig.h: 60: CCP2CONbits.CCP2M = 0b1100;
 17133  004CF2  5066               	movf	3942,w,c	;volatile
 17134  004CF4  0BF0               	andlw	-16
 17135  004CF6  090C               	iorlw	12
 17136  004CF8  6E66               	movwf	3942,c	;volatile
 17137                           
 17138                           ; BSR set to: 15
 17139                           ;PWMConfig.h: 61: setPWM2duty(0);
 17140  004CFA  0E00               	movlw	0
 17141  004CFC  0100               	movlb	0	; () banked
 17142  004CFE  6F76               	movwf	(setPWM2duty@actuator+1)& (0+255),b
 17143  004D00  0E00               	movlw	0
 17144  004D02  6F75               	movwf	setPWM2duty@actuator& (0+255),b
 17145  004D04  ECD1  F023         	call	_setPWM2duty	;wreg free
 17146                           
 17147                           ;PWMConfig.h: 62: PWM2CONbits.P2DC = 16;
 17148  004D08  9065               	bcf	3941,0,c	;volatile
 17149  004D0A  9265               	bcf	3941,1,c	;volatile
 17150  004D0C  9465               	bcf	3941,2,c	;volatile
 17151  004D0E  9665               	bcf	3941,3,c	;volatile
 17152  004D10  8865               	bsf	3941,4,c	;volatile
 17153  004D12  9A65               	bcf	3941,5,c	;volatile
 17154  004D14  9C65               	bcf	3941,6,c	;volatile
 17155                           
 17156                           ;PWMConfig.h: 63: t2config();
 17157  004D16  ECE4  F028         	call	_t2config	;wreg free
 17158                           
 17159                           ;PWMConfig.h: 64: TRISCbits.TRISC0 = 0;
 17160  004D1A  9094               	bcf	3988,0,c	;volatile
 17161                           
 17162                           ;PWMConfig.h: 65: TRISCbits.TRISC1 = 0;
 17163  004D1C  9294               	bcf	3988,1,c	;volatile
 17164                           
 17165                           ;PWMConfig.h: 66: ECCP2ASbits.CCP2ASE = 0;
 17166  004D1E  9E64               	bcf	3940,7,c	;volatile
 17167  004D20  0012               	return		;funcret
 17168  004D22                     __end_of_PWM2Config:
 17169                           	opt stack 0
 17170                           tblptru	equ	0xFF8
 17171                           tblptrh	equ	0xFF7
 17172                           tblptrl	equ	0xFF6
 17173                           tablat	equ	0xFF5
 17174                           prodh	equ	0xFF4
 17175                           prodl	equ	0xFF3
 17176                           intcon	equ	0xFF2
 17177                           postinc0	equ	0xFEE
 17178                           wreg	equ	0xFE8
 17179                           postdec1	equ	0xFE5
 17180                           fsr1l	equ	0xFE1
 17181                           indf2	equ	0xFDF
 17182                           postinc2	equ	0xFDE
 17183                           postdec2	equ	0xFDD
 17184                           plusw2	equ	0xFDB
 17185                           fsr2h	equ	0xFDA
 17186                           fsr2l	equ	0xFD9
 17187                           status	equ	0xFD8
 17188                           
 17189 ;; *************** function _t2config *****************
 17190 ;; Defined at:
 17191 ;;		line 12 in file "source/PWMConfig.h"
 17192 ;; Parameters:    Size  Location     Type
 17193 ;;		None
 17194 ;; Auto vars:     Size  Location     Type
 17195 ;;		None
 17196 ;; Return value:  Size  Location     Type
 17197 ;;                  1    wreg      void 
 17198 ;; Registers used:
 17199 ;;		wreg, status,2
 17200 ;; Tracked objects:
 17201 ;;		On entry : 0/0
 17202 ;;		On exit  : 0/0
 17203 ;;		Unchanged: 0/0
 17204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17205 ;;      Params:         0       0       0       0       0       0       0
 17206 ;;      Locals:         0       0       0       0       0       0       0
 17207 ;;      Temps:          0       0       0       0       0       0       0
 17208 ;;      Totals:         0       0       0       0       0       0       0
 17209 ;;Total ram usage:        0 bytes
 17210 ;; Hardware stack levels used:    1
 17211 ;; Hardware stack levels required when called:    8
 17212 ;; This function calls:
 17213 ;;		Nothing
 17214 ;; This function is called by:
 17215 ;;		_PWM2Config
 17216 ;; This function uses a non-reentrant model
 17217 ;;
 17218                           
 17219                           	psect	text61
 17220  0051C8                     __ptext61:
 17221                           	opt stack 0
 17222  0051C8                     _t2config:
 17223                           	opt stack 21
 17224                           
 17225                           ;PWMConfig.h: 13: T2CONbits.TMR2ON = 0;
 17226                           
 17227                           ;incstack = 0
 17228  0051C8  94BA               	bcf	4026,2,c	;volatile
 17229                           
 17230                           ;PWMConfig.h: 14: T2CONbits.T2CKPS = 0b00;
 17231  0051CA  0EFC               	movlw	-4
 17232  0051CC  16BA               	andwf	4026,f,c	;volatile
 17233                           
 17234                           ;PWMConfig.h: 15: T2CONbits.T2OUTPS = 0b1111;
 17235  0051CE  86BA               	bsf	4026,3,c	;volatile
 17236  0051D0  88BA               	bsf	4026,4,c	;volatile
 17237  0051D2  8ABA               	bsf	4026,5,c	;volatile
 17238  0051D4  8CBA               	bsf	4026,6,c	;volatile
 17239                           
 17240                           ;PWMConfig.h: 17: PIR1bits.TMR2IF = 0;
 17241  0051D6  929E               	bcf	3998,1,c	;volatile
 17242                           
 17243                           ;PWMConfig.h: 18: IPR1bits.TMR2IP = 1;
 17244  0051D8  829F               	bsf	3999,1,c	;volatile
 17245                           
 17246                           ;PWMConfig.h: 19: PIE1bits.TMR2IE = 1;
 17247  0051DA  829D               	bsf	3997,1,c	;volatile
 17248                           
 17249                           ;PWMConfig.h: 20: T2CONbits.TMR2ON = 1;
 17250  0051DC  84BA               	bsf	4026,2,c	;volatile
 17251  0051DE  0012               	return		;funcret
 17252  0051E0                     __end_of_t2config:
 17253                           	opt stack 0
 17254                           tblptru	equ	0xFF8
 17255                           tblptrh	equ	0xFF7
 17256                           tblptrl	equ	0xFF6
 17257                           tablat	equ	0xFF5
 17258                           prodh	equ	0xFF4
 17259                           prodl	equ	0xFF3
 17260                           intcon	equ	0xFF2
 17261                           postinc0	equ	0xFEE
 17262                           wreg	equ	0xFE8
 17263                           postdec1	equ	0xFE5
 17264                           fsr1l	equ	0xFE1
 17265                           indf2	equ	0xFDF
 17266                           postinc2	equ	0xFDE
 17267                           postdec2	equ	0xFDD
 17268                           plusw2	equ	0xFDB
 17269                           fsr2h	equ	0xFDA
 17270                           fsr2l	equ	0xFD9
 17271                           status	equ	0xFD8
 17272                           
 17273 ;; *************** function _setPWM2duty *****************
 17274 ;; Defined at:
 17275 ;;		line 23 in file "source/PWMConfig.h"
 17276 ;; Parameters:    Size  Location     Type
 17277 ;;  actuator        2   21[BANK0 ] short 
 17278 ;; Auto vars:     Size  Location     Type
 17279 ;;  act             2   25[BANK0 ] short 
 17280 ;; Return value:  Size  Location     Type
 17281 ;;                  1    wreg      void 
 17282 ;; Registers used:
 17283 ;;		wreg, status,2, status,0
 17284 ;; Tracked objects:
 17285 ;;		On entry : 0/0
 17286 ;;		On exit  : 0/0
 17287 ;;		Unchanged: 0/0
 17288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17289 ;;      Params:         0       2       0       0       0       0       0
 17290 ;;      Locals:         0       2       0       0       0       0       0
 17291 ;;      Temps:          0       2       0       0       0       0       0
 17292 ;;      Totals:         0       6       0       0       0       0       0
 17293 ;;Total ram usage:        6 bytes
 17294 ;; Hardware stack levels used:    1
 17295 ;; Hardware stack levels required when called:    8
 17296 ;; This function calls:
 17297 ;;		Nothing
 17298 ;; This function is called by:
 17299 ;;		_PWM2Config
 17300 ;; This function uses a non-reentrant model
 17301 ;;
 17302                           
 17303                           	psect	text62
 17304  0047A2                     __ptext62:
 17305                           	opt stack 0
 17306  0047A2                     _setPWM2duty:
 17307                           	opt stack 21
 17308                           
 17309                           ;PWMConfig.h: 24: short act = 400;
 17310                           
 17311                           ;incstack = 0
 17312  0047A2  0E01               	movlw	1
 17313  0047A4  0100               	movlb	0	; () banked
 17314  0047A6  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17315  0047A8  0E90               	movlw	144
 17316  0047AA  6F79               	movwf	setPWM2duty@act& (0+255),b
 17317                           
 17318                           ; BSR set to: 0
 17319                           ;PWMConfig.h: 25: if(actuator > 400)
 17320  0047AC  0100               	movlb	0	; () banked
 17321  0047AE  BF76               	btfsc	(setPWM2duty@actuator+1)& (0+255),7,b
 17322  0047B0  D00D               	goto	l6768
 17323  0047B2  0E91               	movlw	145
 17324  0047B4  0100               	movlb	0	; () banked
 17325  0047B6  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 17326  0047B8  0E01               	movlw	1
 17327  0047BA  0100               	movlb	0	; () banked
 17328  0047BC  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 17329  0047BE  A0D8               	btfss	status,0,c
 17330  0047C0  D005               	goto	l6768
 17331                           
 17332                           ; BSR set to: 0
 17333                           ;PWMConfig.h: 26: act = 800;
 17334  0047C2  0E03               	movlw	3
 17335  0047C4  0100               	movlb	0	; () banked
 17336  0047C6  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17337  0047C8  0E20               	movlw	32
 17338  0047CA  D00F               	goto	L12
 17339  0047CC                     l6768:
 17340                           
 17341                           ; BSR set to: 0
 17342                           ;PWMConfig.h: 27: else if(actuator < -400)
 17343  0047CC  0100               	movlb	0	; () banked
 17344  0047CE  AF76               	btfss	(setPWM2duty@actuator+1)& (0+255),7,b
 17345  0047D0  D00E               	goto	l6772
 17346  0047D2  0E70               	movlw	112
 17347  0047D4  0100               	movlb	0	; () banked
 17348  0047D6  5D75               	subwf	setPWM2duty@actuator& (0+255),w,b
 17349  0047D8  0EFE               	movlw	254
 17350  0047DA  0100               	movlb	0	; () banked
 17351  0047DC  5976               	subwfb	(setPWM2duty@actuator+1)& (0+255),w,b
 17352  0047DE  B0D8               	btfsc	status,0,c
 17353  0047E0  D006               	goto	l6772
 17354                           
 17355                           ; BSR set to: 0
 17356                           ;PWMConfig.h: 28: act = 0;
 17357  0047E2  0E00               	movlw	0
 17358  0047E4  0100               	movlb	0	; () banked
 17359  0047E6  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17360  0047E8  0E00               	movlw	0
 17361  0047EA                     L12:
 17362  0047EA  6F79               	movwf	setPWM2duty@act& (0+255),b
 17363  0047EC  D00A               	goto	l642
 17364  0047EE                     l6772:
 17365                           
 17366                           ; BSR set to: 0
 17367                           ;PWMConfig.h: 29: else
 17368                           ;PWMConfig.h: 30: act = actuator + 400;
 17369  0047EE  0E90               	movlw	144
 17370  0047F0  0100               	movlb	0	; () banked
 17371  0047F2  2575               	addwf	setPWM2duty@actuator& (0+255),w,b
 17372  0047F4  0100               	movlb	0	; () banked
 17373  0047F6  6F79               	movwf	setPWM2duty@act& (0+255),b
 17374  0047F8  0E01               	movlw	1
 17375  0047FA  0100               	movlb	0	; () banked
 17376  0047FC  2176               	addwfc	(setPWM2duty@actuator+1)& (0+255),w,b
 17377  0047FE  0100               	movlb	0	; () banked
 17378  004800  6F7A               	movwf	(setPWM2duty@act+1)& (0+255),b
 17379  004802                     l642:
 17380                           
 17381                           ; BSR set to: 0
 17382                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 17383  004802  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 17384  004806  0100               	movlb	0	; () banked
 17385  004808  3B77               	swapf	??_setPWM2duty& (0+255),f,b
 17386  00480A  5066               	movf	3942,w,c	;volatile
 17387  00480C  0100               	movlb	0	; () banked
 17388  00480E  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 17389  004810  0BCF               	andlw	-49
 17390  004812  1977               	xorwf	??_setPWM2duty& (0+255),w,b
 17391  004814  6E66               	movwf	3942,c	;volatile
 17392                           
 17393                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 17394  004816  C079  F077         	movff	setPWM2duty@act,??_setPWM2duty
 17395  00481A  C07A  F078         	movff	setPWM2duty@act+1,??_setPWM2duty+1
 17396  00481E  0100               	movlb	0	; () banked
 17397  004820  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 17398  004822  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 17399  004824  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 17400  004826  0100               	movlb	0	; () banked
 17401  004828  3578               	rlcf	(??_setPWM2duty+1)& (0+255),w,b
 17402  00482A  3378               	rrcf	(??_setPWM2duty+1)& (0+255),f,b
 17403  00482C  3377               	rrcf	??_setPWM2duty& (0+255),f,b
 17404  00482E  0100               	movlb	0	; () banked
 17405  004830  5177               	movf	??_setPWM2duty& (0+255),w,b
 17406  004832  6E67               	movwf	3943,c	;volatile
 17407                           
 17408                           ; BSR set to: 0
 17409  004834  0012               	return		;funcret
 17410  004836                     __end_of_setPWM2duty:
 17411                           	opt stack 0
 17412                           tblptru	equ	0xFF8
 17413                           tblptrh	equ	0xFF7
 17414                           tblptrl	equ	0xFF6
 17415                           tablat	equ	0xFF5
 17416                           prodh	equ	0xFF4
 17417                           prodl	equ	0xFF3
 17418                           intcon	equ	0xFF2
 17419                           postinc0	equ	0xFEE
 17420                           wreg	equ	0xFE8
 17421                           postdec1	equ	0xFE5
 17422                           fsr1l	equ	0xFE1
 17423                           indf2	equ	0xFDF
 17424                           postinc2	equ	0xFDE
 17425                           postdec2	equ	0xFDD
 17426                           plusw2	equ	0xFDB
 17427                           fsr2h	equ	0xFDA
 17428                           fsr2l	equ	0xFD9
 17429                           status	equ	0xFD8
 17430                           
 17431 ;; *************** function _EEPROMConfig *****************
 17432 ;; Defined at:
 17433 ;;		line 56 in file "source/sysParams.h"
 17434 ;; Parameters:    Size  Location     Type
 17435 ;;		None
 17436 ;; Auto vars:     Size  Location     Type
 17437 ;;		None
 17438 ;; Return value:  Size  Location     Type
 17439 ;;                  1    wreg      void 
 17440 ;; Registers used:
 17441 ;;		None
 17442 ;; Tracked objects:
 17443 ;;		On entry : 0/0
 17444 ;;		On exit  : 0/0
 17445 ;;		Unchanged: 0/0
 17446 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17447 ;;      Params:         0       0       0       0       0       0       0
 17448 ;;      Locals:         0       0       0       0       0       0       0
 17449 ;;      Temps:          0       0       0       0       0       0       0
 17450 ;;      Totals:         0       0       0       0       0       0       0
 17451 ;;Total ram usage:        0 bytes
 17452 ;; Hardware stack levels used:    1
 17453 ;; Hardware stack levels required when called:    8
 17454 ;; This function calls:
 17455 ;;		Nothing
 17456 ;; This function is called by:
 17457 ;;		_main
 17458 ;; This function uses a non-reentrant model
 17459 ;;
 17460                           
 17461                           	psect	text63
 17462  00529C                     __ptext63:
 17463                           	opt stack 0
 17464  00529C                     _EEPROMConfig:
 17465                           	opt stack 22
 17466                           
 17467                           ;sysParams.h: 57: EECON1bits.WREN = 0;
 17468                           
 17469                           ; BSR set to: 0
 17470                           ;incstack = 0
 17471  00529C  94A6               	bcf	4006,2,c	;volatile
 17472                           
 17473                           ;sysParams.h: 58: EECON1bits.FREE = 0;
 17474  00529E  98A6               	bcf	4006,4,c	;volatile
 17475  0052A0  0012               	return		;funcret
 17476  0052A2                     __end_of_EEPROMConfig:
 17477                           	opt stack 0
 17478                           tblptru	equ	0xFF8
 17479                           tblptrh	equ	0xFF7
 17480                           tblptrl	equ	0xFF6
 17481                           tablat	equ	0xFF5
 17482                           prodh	equ	0xFF4
 17483                           prodl	equ	0xFF3
 17484                           intcon	equ	0xFF2
 17485                           postinc0	equ	0xFEE
 17486                           wreg	equ	0xFE8
 17487                           postdec1	equ	0xFE5
 17488                           fsr1l	equ	0xFE1
 17489                           indf2	equ	0xFDF
 17490                           postinc2	equ	0xFDE
 17491                           postdec2	equ	0xFDD
 17492                           plusw2	equ	0xFDB
 17493                           fsr2h	equ	0xFDA
 17494                           fsr2l	equ	0xFD9
 17495                           status	equ	0xFD8
 17496                           
 17497 ;; *************** function _isr *****************
 17498 ;; Defined at:
 17499 ;;		line 20 in file "source/main.c"
 17500 ;; Parameters:    Size  Location     Type
 17501 ;;		None
 17502 ;; Auto vars:     Size  Location     Type
 17503 ;;		None
 17504 ;; Return value:  Size  Location     Type
 17505 ;;                  1    wreg      void 
 17506 ;; Registers used:
 17507 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17508 ;; Tracked objects:
 17509 ;;		On entry : 0/0
 17510 ;;		On exit  : 0/0
 17511 ;;		Unchanged: 0/0
 17512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17513 ;;      Params:         0       0       0       0       0       0       0
 17514 ;;      Locals:         0       0       0       0       0       0       0
 17515 ;;      Temps:          0      17       0       0       0       0       0
 17516 ;;      Totals:         0      17       0       0       0       0       0
 17517 ;;Total ram usage:       17 bytes
 17518 ;; Hardware stack levels used:    1
 17519 ;; Hardware stack levels required when called:    7
 17520 ;; This function calls:
 17521 ;;		_UARTint
 17522 ;; This function is called by:
 17523 ;;		Interrupt level 1
 17524 ;; This function uses a non-reentrant model
 17525 ;;
 17526                           
 17527                           	psect	intcodelo
 17528  000018                     __pintcodelo:
 17529                           	opt stack 0
 17530  000018                     _isr:
 17531                           	opt stack 14
 17532                           
 17533                           ;incstack = 0
 17534  000018  804A               	bsf	btemp,0,c	;set compiler interrupt flag (level 1)
 17535  00001A  CFD8 F064          	movff	status,??_isr
 17536  00001E  CFE8 F065          	movff	wreg,??_isr+1
 17537  000022  CFE0 F066          	movff	bsr,??_isr+2
 17538  000026  CFFA F067          	movff	pclath,??_isr+3
 17539  00002A  CFFB F068          	movff	pclatu,??_isr+4
 17540  00002E  CFE9 F069          	movff	fsr0l,??_isr+5
 17541  000032  CFEA F06A          	movff	fsr0h,??_isr+6
 17542  000036  CFE1 F06B          	movff	fsr1l,??_isr+7
 17543  00003A  CFE2 F06C          	movff	fsr1h,??_isr+8
 17544  00003E  CFD9 F06D          	movff	fsr2l,??_isr+9
 17545  000042  CFDA F06E          	movff	fsr2h,??_isr+10
 17546  000046  CFF3 F06F          	movff	prodl,??_isr+11
 17547  00004A  CFF4 F070          	movff	prodh,??_isr+12
 17548  00004E  CFF6 F071          	movff	tblptrl,??_isr+13
 17549  000052  CFF7 F072          	movff	tblptrh,??_isr+14
 17550  000056  CFF8 F073          	movff	tblptru,??_isr+15
 17551  00005A  CFF5 F074          	movff	tablat,??_isr+16
 17552                           
 17553                           ;main.c: 21: if(PIE1bits.RC1IE && PIR1bits.RC1IF) {
 17554  00005E  BA9D               	btfsc	3997,5,c	;volatile
 17555  000060  AA9E               	btfss	3998,5,c	;volatile
 17556  000062  D003               	goto	i1l720
 17557                           
 17558                           ;main.c: 22: UARTint();
 17559  000064  EC69  F027         	call	_UARTint	;wreg free
 17560                           
 17561                           ;main.c: 23: PIR1bits.RC1IF = 0;
 17562  000068  9A9E               	bcf	3998,5,c	;volatile
 17563  00006A                     i1l720:
 17564  00006A  C074  FFF5         	movff	??_isr+16,tablat
 17565  00006E  C073  FFF8         	movff	??_isr+15,tblptru
 17566  000072  C072  FFF7         	movff	??_isr+14,tblptrh
 17567  000076  C071  FFF6         	movff	??_isr+13,tblptrl
 17568  00007A  C070  FFF4         	movff	??_isr+12,prodh
 17569  00007E  C06F  FFF3         	movff	??_isr+11,prodl
 17570  000082  C06E  FFDA         	movff	??_isr+10,fsr2h
 17571  000086  C06D  FFD9         	movff	??_isr+9,fsr2l
 17572  00008A  C06C  FFE2         	movff	??_isr+8,fsr1h
 17573  00008E  C06B  FFE1         	movff	??_isr+7,fsr1l
 17574  000092  C06A  FFEA         	movff	??_isr+6,fsr0h
 17575  000096  C069  FFE9         	movff	??_isr+5,fsr0l
 17576  00009A  C068  FFFB         	movff	??_isr+4,pclatu
 17577  00009E  C067  FFFA         	movff	??_isr+3,pclath
 17578  0000A2  C066  FFE0         	movff	??_isr+2,bsr
 17579  0000A6  C065  FFE8         	movff	??_isr+1,wreg
 17580  0000AA  C064  FFD8         	movff	??_isr,status
 17581  0000AE  904A               	bcf	btemp,0,c	;clear compiler interrupt flag (level 1)
 17582  0000B0  0010               	retfie	
 17583  0000B2                     __end_of_isr:
 17584                           	opt stack 0
 17585                           pclatu	equ	0xFFB
 17586                           pclath	equ	0xFFA
 17587                           tblptru	equ	0xFF8
 17588                           tblptrh	equ	0xFF7
 17589                           tblptrl	equ	0xFF6
 17590                           tablat	equ	0xFF5
 17591                           prodh	equ	0xFF4
 17592                           prodl	equ	0xFF3
 17593                           intcon	equ	0xFF2
 17594                           postinc0	equ	0xFEE
 17595                           fsr0h	equ	0xFEA
 17596                           fsr0l	equ	0xFE9
 17597                           wreg	equ	0xFE8
 17598                           postdec1	equ	0xFE5
 17599                           fsr1h	equ	0xFE2
 17600                           fsr1l	equ	0xFE1
 17601                           bsr	equ	0xFE0
 17602                           indf2	equ	0xFDF
 17603                           postinc2	equ	0xFDE
 17604                           postdec2	equ	0xFDD
 17605                           plusw2	equ	0xFDB
 17606                           fsr2h	equ	0xFDA
 17607                           fsr2l	equ	0xFD9
 17608                           status	equ	0xFD8
 17609                           
 17610 ;; *************** function _UARTint *****************
 17611 ;; Defined at:
 17612 ;;		line 16 in file "source/UARTConfig.h"
 17613 ;; Parameters:    Size  Location     Type
 17614 ;;		None
 17615 ;; Auto vars:     Size  Location     Type
 17616 ;;  sas             1   45[COMRAM] unsigned char 
 17617 ;; Return value:  Size  Location     Type
 17618 ;;                  1    wreg      void 
 17619 ;; Registers used:
 17620 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17621 ;; Tracked objects:
 17622 ;;		On entry : 0/0
 17623 ;;		On exit  : 0/0
 17624 ;;		Unchanged: 0/0
 17625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17626 ;;      Params:         0       0       0       0       0       0       0
 17627 ;;      Locals:         1       0       0       0       0       0       0
 17628 ;;      Temps:          0       0       0       0       0       0       0
 17629 ;;      Totals:         1       0       0       0       0       0       0
 17630 ;;Total ram usage:        1 bytes
 17631 ;; Hardware stack levels used:    1
 17632 ;; Hardware stack levels required when called:    6
 17633 ;; This function calls:
 17634 ;;		_putchUART
 17635 ;;		_sysParamInit
 17636 ;;		i1_saveSysParams
 17637 ;; This function is called by:
 17638 ;;		_isr
 17639 ;; This function uses a non-reentrant model
 17640 ;;
 17641                           
 17642                           	psect	text65
 17643  004ED2                     __ptext65:
 17644                           	opt stack 0
 17645  004ED2                     _UARTint:
 17646                           	opt stack 14
 17647                           
 17648                           ;UARTConfig.h: 17: char sas = RCREG1;
 17649                           
 17650                           ;incstack = 0
 17651  004ED2  CFAE F02E          	movff	4014,UARTint@sas	;volatile
 17652                           
 17653                           ;UARTConfig.h: 18: if(sas == 'A') {
 17654  004ED6  0E41               	movlw	65
 17655  004ED8  182E               	xorwf	UARTint@sas,w,c
 17656  004EDA  A4D8               	btfss	status,2,c
 17657  004EDC  D00D               	goto	i1l9450
 17658                           
 17659                           ;UARTConfig.h: 19: putchUART(actualScreen);
 17660  004EDE  0100               	movlb	0	; () banked
 17661  004EE0  51D1               	movf	_actualScreen& (0+255),w,b
 17662  004EE2  EC34  F029         	call	_putchUART
 17663                           
 17664                           ;UARTConfig.h: 20: putchUART(menuSection);
 17665  004EE6  0100               	movlb	0	; () banked
 17666  004EE8  51D4               	movf	_menuSection& (0+255),w,b
 17667  004EEA  EC34  F029         	call	_putchUART
 17668                           
 17669                           ;UARTConfig.h: 21: putchUART(passSection);
 17670  004EEE  0100               	movlb	0	; () banked
 17671  004EF0  51D5               	movf	_passSection& (0+255),w,b
 17672  004EF2  EC34  F029         	call	_putchUART
 17673                           
 17674                           ;UARTConfig.h: 22: }else if(sas == 'B') {
 17675  004EF6  0012               	return	
 17676  004EF8                     i1l9450:
 17677  004EF8  0E42               	movlw	66
 17678  004EFA  182E               	xorwf	UARTint@sas,w,c
 17679  004EFC  A4D8               	btfss	status,2,c
 17680  004EFE  D003               	goto	i1l9454
 17681                           
 17682                           ;UARTConfig.h: 23: saveSysParams();
 17683  004F00  EC9A  F01E         	call	i1_saveSysParams	;wreg free
 17684                           
 17685                           ;UARTConfig.h: 24: }else if(sas == 'C') {
 17686  004F04  0012               	return	
 17687  004F06                     i1l9454:
 17688  004F06  0E43               	movlw	67
 17689  004F08  182E               	xorwf	UARTint@sas,w,c
 17690  004F0A  A4D8               	btfss	status,2,c
 17691  004F0C  0012               	return	
 17692                           
 17693                           ;UARTConfig.h: 25: sysParamInit();
 17694  004F0E  EC37  F020         	call	_sysParamInit	;wreg free
 17695  004F12  0012               	return	
 17696  004F14                     __end_of_UARTint:
 17697                           	opt stack 0
 17698                           pclatu	equ	0xFFB
 17699                           pclath	equ	0xFFA
 17700                           tblptru	equ	0xFF8
 17701                           tblptrh	equ	0xFF7
 17702                           tblptrl	equ	0xFF6
 17703                           tablat	equ	0xFF5
 17704                           prodh	equ	0xFF4
 17705                           prodl	equ	0xFF3
 17706                           intcon	equ	0xFF2
 17707                           postinc0	equ	0xFEE
 17708                           fsr0h	equ	0xFEA
 17709                           fsr0l	equ	0xFE9
 17710                           wreg	equ	0xFE8
 17711                           postdec1	equ	0xFE5
 17712                           fsr1h	equ	0xFE2
 17713                           fsr1l	equ	0xFE1
 17714                           bsr	equ	0xFE0
 17715                           indf2	equ	0xFDF
 17716                           postinc2	equ	0xFDE
 17717                           postdec2	equ	0xFDD
 17718                           plusw2	equ	0xFDB
 17719                           fsr2h	equ	0xFDA
 17720                           fsr2l	equ	0xFD9
 17721                           status	equ	0xFD8
 17722                           
 17723 ;; *************** function i1_saveSysParams *****************
 17724 ;; Defined at:
 17725 ;;		line 72 in file "source/sysParams.h"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;		None
 17728 ;; Auto vars:     Size  Location     Type
 17729 ;;		None
 17730 ;; Return value:  Size  Location     Type
 17731 ;;                  1    wreg      void 
 17732 ;; Registers used:
 17733 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 17734 ;; Tracked objects:
 17735 ;;		On entry : 0/0
 17736 ;;		On exit  : 0/0
 17737 ;;		Unchanged: 0/0
 17738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17739 ;;      Params:         0       0       0       0       0       0       0
 17740 ;;      Locals:         0       0       0       0       0       0       0
 17741 ;;      Temps:          0       0       0       0       0       0       0
 17742 ;;      Totals:         0       0       0       0       0       0       0
 17743 ;;Total ram usage:        0 bytes
 17744 ;; Hardware stack levels used:    1
 17745 ;; Hardware stack levels required when called:    5
 17746 ;; This function calls:
 17747 ;;		i1_calcSysVars
 17748 ;;		i1_writeEEPROM
 17749 ;; This function is called by:
 17750 ;;		_UARTint
 17751 ;; This function uses a non-reentrant model
 17752 ;;
 17753                           
 17754                           	psect	text66
 17755  003D34                     __ptext66:
 17756                           	opt stack 0
 17757  003D34                     i1_saveSysParams:
 17758                           	opt stack 14
 17759                           
 17760                           ;sysParams.h: 73: EECON1bits.WREN = 1;
 17761                           
 17762                           ;incstack = 0
 17763  003D34  84A6               	bsf	4006,2,c	;volatile
 17764                           
 17765                           ;sysParams.h: 74: ie = INTCONbits.GIE;
 17766  003D36  0E00               	movlw	0
 17767  003D38  BEF2               	btfsc	intcon,7,c	;volatile
 17768  003D3A  0E01               	movlw	1
 17769  003D3C  6E49               	movwf	_ie,c
 17770                           
 17771                           ;sysParams.h: 75: INTCONbits.GIE = 0;
 17772  003D3E  9EF2               	bcf	intcon,7,c	;volatile
 17773                           
 17774                           ;sysParams.h: 76: writeEEPROM(1, tVarProceso);
 17775  003D40  C0E3  F015         	movff	_tVarProceso,i1writeEEPROM@data
 17776  003D44  0E01               	movlw	1
 17777  003D46  ECD5  F028         	call	i1_writeEEPROM
 17778                           
 17779                           ;sysParams.h: 77: fData.floatdat = tiXcorte;
 17780  003D4A  C037  F0CC         	movff	_tiXcorte,_fData
 17781  003D4E  C038  F0CD         	movff	_tiXcorte+1,_fData+1
 17782  003D52  C039  F0CE         	movff	_tiXcorte+2,_fData+2
 17783  003D56  C03A  F0CF         	movff	_tiXcorte+3,_fData+3
 17784                           
 17785                           ;sysParams.h: 78: writeEEPROM(2, fData.floatMB);
 17786  003D5A  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17787  003D5E  0E02               	movlw	2
 17788  003D60  ECD5  F028         	call	i1_writeEEPROM
 17789                           
 17790                           ;sysParams.h: 79: writeEEPROM(3, fData.floatUB);
 17791  003D64  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17792  003D68  0E03               	movlw	3
 17793  003D6A  ECD5  F028         	call	i1_writeEEPROM
 17794                           
 17795                           ;sysParams.h: 80: writeEEPROM(4, fData.floatHB);
 17796  003D6E  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17797  003D72  0E04               	movlw	4
 17798  003D74  ECD5  F028         	call	i1_writeEEPROM
 17799                           
 17800                           ;sysParams.h: 81: writeEEPROM(5, fData.floatLB);
 17801  003D78  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17802  003D7C  0E05               	movlw	5
 17803  003D7E  ECD5  F028         	call	i1_writeEEPROM
 17804                           
 17805                           ;sysParams.h: 82: i16Data.int16dat = numCortes;
 17806  003D82  C0E1  F043         	movff	_numCortes,_i16Data
 17807  003D86  C0E2  F044         	movff	_numCortes+1,_i16Data+1
 17808                           
 17809                           ;sysParams.h: 83: writeEEPROM(6, i16Data.int16HB);
 17810  003D8A  C044  F015         	movff	_i16Data+1,i1writeEEPROM@data
 17811  003D8E  0E06               	movlw	6
 17812  003D90  ECD5  F028         	call	i1_writeEEPROM
 17813                           
 17814                           ;sysParams.h: 84: writeEEPROM(7, i16Data.int16LB);
 17815  003D94  C043  F015         	movff	_i16Data,i1writeEEPROM@data
 17816  003D98  0E07               	movlw	7
 17817  003D9A  ECD5  F028         	call	i1_writeEEPROM
 17818                           
 17819                           ;sysParams.h: 85: fData.floatdat = diamTubo;
 17820  003D9E  C0DD  F0CC         	movff	_diamTubo,_fData
 17821  003DA2  C0DE  F0CD         	movff	_diamTubo+1,_fData+1
 17822  003DA6  C0DF  F0CE         	movff	_diamTubo+2,_fData+2
 17823  003DAA  C0E0  F0CF         	movff	_diamTubo+3,_fData+3
 17824                           
 17825                           ;sysParams.h: 86: writeEEPROM(8, fData.floatMB);
 17826  003DAE  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17827  003DB2  0E08               	movlw	8
 17828  003DB4  ECD5  F028         	call	i1_writeEEPROM
 17829                           
 17830                           ;sysParams.h: 87: writeEEPROM(9, fData.floatUB);
 17831  003DB8  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17832  003DBC  0E09               	movlw	9
 17833  003DBE  ECD5  F028         	call	i1_writeEEPROM
 17834                           
 17835                           ;sysParams.h: 88: writeEEPROM(10, fData.floatHB);
 17836  003DC2  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17837  003DC6  0E0A               	movlw	10
 17838  003DC8  ECD5  F028         	call	i1_writeEEPROM
 17839                           
 17840                           ;sysParams.h: 89: writeEEPROM(11, fData.floatLB);
 17841  003DCC  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17842  003DD0  0E0B               	movlw	11
 17843  003DD2  ECD5  F028         	call	i1_writeEEPROM
 17844                           
 17845                           ;sysParams.h: 90: fData.floatdat = densidadMasa;
 17846  003DD6  C0D9  F0CC         	movff	_densidadMasa,_fData
 17847  003DDA  C0DA  F0CD         	movff	_densidadMasa+1,_fData+1
 17848  003DDE  C0DB  F0CE         	movff	_densidadMasa+2,_fData+2
 17849  003DE2  C0DC  F0CF         	movff	_densidadMasa+3,_fData+3
 17850                           
 17851                           ;sysParams.h: 91: writeEEPROM(12, fData.floatMB);
 17852  003DE6  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17853  003DEA  0E0C               	movlw	12
 17854  003DEC  ECD5  F028         	call	i1_writeEEPROM
 17855                           
 17856                           ;sysParams.h: 92: writeEEPROM(13, fData.floatUB);
 17857  003DF0  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17858  003DF4  0E0D               	movlw	13
 17859  003DF6  ECD5  F028         	call	i1_writeEEPROM
 17860                           
 17861                           ;sysParams.h: 93: writeEEPROM(14, fData.floatHB);
 17862  003DFA  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17863  003DFE  0E0E               	movlw	14
 17864  003E00  ECD5  F028         	call	i1_writeEEPROM
 17865                           
 17866                           ;sysParams.h: 94: writeEEPROM(15, fData.floatLB);
 17867  003E04  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17868  003E08  0E0F               	movlw	15
 17869  003E0A  ECD5  F028         	call	i1_writeEEPROM
 17870                           
 17871                           ;sysParams.h: 95: fData.floatdat = velocidadMasa;
 17872  003E0E  C03B  F0CC         	movff	_velocidadMasa,_fData
 17873  003E12  C03C  F0CD         	movff	_velocidadMasa+1,_fData+1
 17874  003E16  C03D  F0CE         	movff	_velocidadMasa+2,_fData+2
 17875  003E1A  C03E  F0CF         	movff	_velocidadMasa+3,_fData+3
 17876                           
 17877                           ;sysParams.h: 96: writeEEPROM(16, fData.floatMB);
 17878  003E1E  C0CF  F015         	movff	_fData+3,i1writeEEPROM@data
 17879  003E22  0E10               	movlw	16
 17880  003E24  ECD5  F028         	call	i1_writeEEPROM
 17881                           
 17882                           ;sysParams.h: 97: writeEEPROM(17, fData.floatUB);
 17883  003E28  C0CE  F015         	movff	_fData+2,i1writeEEPROM@data
 17884  003E2C  0E11               	movlw	17
 17885  003E2E  ECD5  F028         	call	i1_writeEEPROM
 17886                           
 17887                           ;sysParams.h: 98: writeEEPROM(18, fData.floatHB);
 17888  003E32  C0CD  F015         	movff	_fData+1,i1writeEEPROM@data
 17889  003E36  0E12               	movlw	18
 17890  003E38  ECD5  F028         	call	i1_writeEEPROM
 17891                           
 17892                           ;sysParams.h: 99: writeEEPROM(19, fData.floatLB);
 17893  003E3C  C0CC  F015         	movff	_fData,i1writeEEPROM@data
 17894  003E40  0E13               	movlw	19
 17895  003E42  ECD5  F028         	call	i1_writeEEPROM
 17896                           
 17897                           ;sysParams.h: 100: EECON1bits.WREN = 0;
 17898  003E46  94A6               	bcf	4006,2,c	;volatile
 17899                           
 17900                           ;sysParams.h: 101: INTCONbits.GIE = ie;
 17901  003E48  B049               	btfsc	_ie,0,c
 17902  003E4A  D002               	bra	i1u1148_25
 17903  003E4C  9EF2               	bcf	intcon,7,c	;volatile
 17904  003E4E  D001               	bra	i1u1148_26
 17905  003E50                     i1u1148_25:
 17906  003E50  8EF2               	bsf	intcon,7,c	;volatile
 17907  003E52                     i1u1148_26:
 17908                           
 17909                           ;sysParams.h: 102: calcSysVars();
 17910  003E52  ECCD  F01C         	call	i1_calcSysVars	;wreg free
 17911  003E56  0012               	return		;funcret
 17912  003E58                     __end_ofi1_saveSysParams:
 17913                           	opt stack 0
 17914                           pclatu	equ	0xFFB
 17915                           pclath	equ	0xFFA
 17916                           tblptru	equ	0xFF8
 17917                           tblptrh	equ	0xFF7
 17918                           tblptrl	equ	0xFF6
 17919                           tablat	equ	0xFF5
 17920                           prodh	equ	0xFF4
 17921                           prodl	equ	0xFF3
 17922                           intcon	equ	0xFF2
 17923                           postinc0	equ	0xFEE
 17924                           fsr0h	equ	0xFEA
 17925                           fsr0l	equ	0xFE9
 17926                           wreg	equ	0xFE8
 17927                           postdec1	equ	0xFE5
 17928                           fsr1h	equ	0xFE2
 17929                           fsr1l	equ	0xFE1
 17930                           bsr	equ	0xFE0
 17931                           indf2	equ	0xFDF
 17932                           postinc2	equ	0xFDE
 17933                           postdec2	equ	0xFDD
 17934                           plusw2	equ	0xFDB
 17935                           fsr2h	equ	0xFDA
 17936                           fsr2l	equ	0xFD9
 17937                           status	equ	0xFD8
 17938                           
 17939 ;; *************** function i1_writeEEPROM *****************
 17940 ;; Defined at:
 17941 ;;		line 36 in file "source/sysParams.h"
 17942 ;; Parameters:    Size  Location     Type
 17943 ;;  adr             1    wreg     unsigned char 
 17944 ;;  data            1   20[COMRAM] unsigned char 
 17945 ;; Auto vars:     Size  Location     Type
 17946 ;;  adr             1   21[COMRAM] unsigned char 
 17947 ;; Return value:  Size  Location     Type
 17948 ;;                  1    wreg      void 
 17949 ;; Registers used:
 17950 ;;		wreg, status,2
 17951 ;; Tracked objects:
 17952 ;;		On entry : 0/0
 17953 ;;		On exit  : 0/0
 17954 ;;		Unchanged: 0/0
 17955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 17956 ;;      Params:         1       0       0       0       0       0       0
 17957 ;;      Locals:         1       0       0       0       0       0       0
 17958 ;;      Temps:          0       0       0       0       0       0       0
 17959 ;;      Totals:         2       0       0       0       0       0       0
 17960 ;;Total ram usage:        2 bytes
 17961 ;; Hardware stack levels used:    1
 17962 ;; Hardware stack levels required when called:    3
 17963 ;; This function calls:
 17964 ;;		Nothing
 17965 ;; This function is called by:
 17966 ;;		i1_saveSysParams
 17967 ;; This function uses a non-reentrant model
 17968 ;;
 17969                           
 17970                           	psect	text67
 17971  0051AA                     __ptext67:
 17972                           	opt stack 0
 17973  0051AA                     i1_writeEEPROM:
 17974                           	opt stack 15
 17975                           
 17976                           ;incstack = 0
 17977                           ;i1writeEEPROM@adr stored from wreg
 17978  0051AA  6E16               	movwf	i1writeEEPROM@adr,c
 17979                           
 17980                           ;sysParams.h: 37: EEADR = adr;
 17981  0051AC  C016  FFA9         	movff	i1writeEEPROM@adr,4009	;volatile
 17982                           
 17983                           ;sysParams.h: 38: EEDATA = data;
 17984  0051B0  C015  FFA8         	movff	i1writeEEPROM@data,4008	;volatile
 17985                           
 17986                           ;sysParams.h: 39: EECON1bits.EEPGD = 0;
 17987  0051B4  9EA6               	bcf	4006,7,c	;volatile
 17988                           
 17989                           ;sysParams.h: 40: EECON1bits.CFGS = 0;
 17990  0051B6  9CA6               	bcf	4006,6,c	;volatile
 17991                           
 17992                           ;sysParams.h: 41: EECON2 = 0x55;
 17993  0051B8  0E55               	movlw	85
 17994  0051BA  6EA7               	movwf	4007,c	;volatile
 17995                           
 17996                           ;sysParams.h: 42: EECON2 = 0xAA;
 17997  0051BC  0EAA               	movlw	170
 17998  0051BE  6EA7               	movwf	4007,c	;volatile
 17999                           
 18000                           ;sysParams.h: 43: EECON1bits.WR = 1;
 18001  0051C0  82A6               	bsf	4006,1,c	;volatile
 18002  0051C2                     i1l282:
 18003  0051C2  A2A6               	btfss	4006,1,c	;volatile
 18004  0051C4  0012               	return	
 18005  0051C6  D7FD               	goto	i1l282
 18006  0051C8                     __end_ofi1_writeEEPROM:
 18007                           	opt stack 0
 18008                           pclatu	equ	0xFFB
 18009                           pclath	equ	0xFFA
 18010                           tblptru	equ	0xFF8
 18011                           tblptrh	equ	0xFF7
 18012                           tblptrl	equ	0xFF6
 18013                           tablat	equ	0xFF5
 18014                           prodh	equ	0xFF4
 18015                           prodl	equ	0xFF3
 18016                           intcon	equ	0xFF2
 18017                           postinc0	equ	0xFEE
 18018                           fsr0h	equ	0xFEA
 18019                           fsr0l	equ	0xFE9
 18020                           wreg	equ	0xFE8
 18021                           postdec1	equ	0xFE5
 18022                           fsr1h	equ	0xFE2
 18023                           fsr1l	equ	0xFE1
 18024                           bsr	equ	0xFE0
 18025                           indf2	equ	0xFDF
 18026                           postinc2	equ	0xFDE
 18027                           postdec2	equ	0xFDD
 18028                           plusw2	equ	0xFDB
 18029                           fsr2h	equ	0xFDA
 18030                           fsr2l	equ	0xFD9
 18031                           status	equ	0xFD8
 18032                           
 18033 ;; *************** function _sysParamInit *****************
 18034 ;; Defined at:
 18035 ;;		line 134 in file "source/sysParams.h"
 18036 ;; Parameters:    Size  Location     Type
 18037 ;;		None
 18038 ;; Auto vars:     Size  Location     Type
 18039 ;;		None
 18040 ;; Return value:  Size  Location     Type
 18041 ;;                  1    wreg      void 
 18042 ;; Registers used:
 18043 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18044 ;; Tracked objects:
 18045 ;;		On entry : 0/0
 18046 ;;		On exit  : 0/0
 18047 ;;		Unchanged: 0/0
 18048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18049 ;;      Params:         0       0       0       0       0       0       0
 18050 ;;      Locals:         0       0       0       0       0       0       0
 18051 ;;      Temps:          0       0       0       0       0       0       0
 18052 ;;      Totals:         0       0       0       0       0       0       0
 18053 ;;Total ram usage:        0 bytes
 18054 ;; Hardware stack levels used:    1
 18055 ;; Hardware stack levels required when called:    5
 18056 ;; This function calls:
 18057 ;;		_readEEPROM
 18058 ;;		i1_calcSysVars
 18059 ;; This function is called by:
 18060 ;;		_UARTint
 18061 ;; This function uses a non-reentrant model
 18062 ;;
 18063                           
 18064                           	psect	text68
 18065  00406E                     __ptext68:
 18066                           	opt stack 0
 18067  00406E                     _sysParamInit:
 18068                           	opt stack 14
 18069                           
 18070                           ;sysParams.h: 135: tVarProceso = readEEPROM(1);
 18071                           
 18072                           ;incstack = 0
 18073  00406E  0E01               	movlw	1
 18074  004070  ECFA  F028         	call	_readEEPROM
 18075  004074  0100               	movlb	0	; () banked
 18076  004076  6FE3               	movwf	_tVarProceso& (0+255),b
 18077                           
 18078                           ;sysParams.h: 136: fData.floatMB = readEEPROM(2);
 18079  004078  0E02               	movlw	2
 18080  00407A  ECFA  F028         	call	_readEEPROM
 18081  00407E  0100               	movlb	0	; () banked
 18082  004080  6FCF               	movwf	(_fData+3)& (0+255),b
 18083                           
 18084                           ;sysParams.h: 137: fData.floatUB = readEEPROM(3);
 18085  004082  0E03               	movlw	3
 18086  004084  ECFA  F028         	call	_readEEPROM
 18087  004088  0100               	movlb	0	; () banked
 18088  00408A  6FCE               	movwf	(_fData+2)& (0+255),b
 18089                           
 18090                           ;sysParams.h: 138: fData.floatHB = readEEPROM(4);
 18091  00408C  0E04               	movlw	4
 18092  00408E  ECFA  F028         	call	_readEEPROM
 18093  004092  0100               	movlb	0	; () banked
 18094  004094  6FCD               	movwf	(_fData+1)& (0+255),b
 18095                           
 18096                           ;sysParams.h: 139: fData.floatLB = readEEPROM(5);
 18097  004096  0E05               	movlw	5
 18098  004098  ECFA  F028         	call	_readEEPROM
 18099  00409C  0100               	movlb	0	; () banked
 18100  00409E  6FCC               	movwf	_fData& (0+255),b
 18101                           
 18102                           ; BSR set to: 0
 18103                           ;sysParams.h: 140: tiXcorte = fData.floatdat;
 18104  0040A0  C0CC  F037         	movff	_fData,_tiXcorte
 18105  0040A4  C0CD  F038         	movff	_fData+1,_tiXcorte+1
 18106  0040A8  C0CE  F039         	movff	_fData+2,_tiXcorte+2
 18107  0040AC  C0CF  F03A         	movff	_fData+3,_tiXcorte+3
 18108                           
 18109                           ;sysParams.h: 141: i16Data.int16HB = readEEPROM(6);
 18110  0040B0  0E06               	movlw	6
 18111  0040B2  ECFA  F028         	call	_readEEPROM
 18112  0040B6  6E44               	movwf	_i16Data+1,c
 18113                           
 18114                           ;sysParams.h: 142: i16Data.int16LB = readEEPROM(7);
 18115  0040B8  0E07               	movlw	7
 18116  0040BA  ECFA  F028         	call	_readEEPROM
 18117  0040BE  6E43               	movwf	_i16Data,c
 18118                           
 18119                           ;sysParams.h: 143: numCortes = i16Data.int16dat;
 18120  0040C0  C043  F0E1         	movff	_i16Data,_numCortes
 18121  0040C4  C044  F0E2         	movff	_i16Data+1,_numCortes+1
 18122                           
 18123                           ;sysParams.h: 144: fData.floatMB = readEEPROM(8);
 18124  0040C8  0E08               	movlw	8
 18125  0040CA  ECFA  F028         	call	_readEEPROM
 18126  0040CE  0100               	movlb	0	; () banked
 18127  0040D0  6FCF               	movwf	(_fData+3)& (0+255),b
 18128                           
 18129                           ;sysParams.h: 145: fData.floatUB = readEEPROM(9);
 18130  0040D2  0E09               	movlw	9
 18131  0040D4  ECFA  F028         	call	_readEEPROM
 18132  0040D8  0100               	movlb	0	; () banked
 18133  0040DA  6FCE               	movwf	(_fData+2)& (0+255),b
 18134                           
 18135                           ;sysParams.h: 146: fData.floatHB = readEEPROM(10);
 18136  0040DC  0E0A               	movlw	10
 18137  0040DE  ECFA  F028         	call	_readEEPROM
 18138  0040E2  0100               	movlb	0	; () banked
 18139  0040E4  6FCD               	movwf	(_fData+1)& (0+255),b
 18140                           
 18141                           ;sysParams.h: 147: fData.floatLB = readEEPROM(11);
 18142  0040E6  0E0B               	movlw	11
 18143  0040E8  ECFA  F028         	call	_readEEPROM
 18144  0040EC  0100               	movlb	0	; () banked
 18145  0040EE  6FCC               	movwf	_fData& (0+255),b
 18146                           
 18147                           ; BSR set to: 0
 18148                           ;sysParams.h: 148: diamTubo = fData.floatdat;
 18149  0040F0  C0CC  F0DD         	movff	_fData,_diamTubo
 18150  0040F4  C0CD  F0DE         	movff	_fData+1,_diamTubo+1
 18151  0040F8  C0CE  F0DF         	movff	_fData+2,_diamTubo+2
 18152  0040FC  C0CF  F0E0         	movff	_fData+3,_diamTubo+3
 18153                           
 18154                           ;sysParams.h: 149: fData.floatMB = readEEPROM(12);
 18155  004100  0E0C               	movlw	12
 18156  004102  ECFA  F028         	call	_readEEPROM
 18157  004106  0100               	movlb	0	; () banked
 18158  004108  6FCF               	movwf	(_fData+3)& (0+255),b
 18159                           
 18160                           ;sysParams.h: 150: fData.floatUB = readEEPROM(13);
 18161  00410A  0E0D               	movlw	13
 18162  00410C  ECFA  F028         	call	_readEEPROM
 18163  004110  0100               	movlb	0	; () banked
 18164  004112  6FCE               	movwf	(_fData+2)& (0+255),b
 18165                           
 18166                           ;sysParams.h: 151: fData.floatHB = readEEPROM(14);
 18167  004114  0E0E               	movlw	14
 18168  004116  ECFA  F028         	call	_readEEPROM
 18169  00411A  0100               	movlb	0	; () banked
 18170  00411C  6FCD               	movwf	(_fData+1)& (0+255),b
 18171                           
 18172                           ;sysParams.h: 152: fData.floatLB = readEEPROM(15);
 18173  00411E  0E0F               	movlw	15
 18174  004120  ECFA  F028         	call	_readEEPROM
 18175  004124  0100               	movlb	0	; () banked
 18176  004126  6FCC               	movwf	_fData& (0+255),b
 18177                           
 18178                           ; BSR set to: 0
 18179                           ;sysParams.h: 153: densidadMasa = fData.floatdat;
 18180  004128  C0CC  F0D9         	movff	_fData,_densidadMasa
 18181  00412C  C0CD  F0DA         	movff	_fData+1,_densidadMasa+1
 18182  004130  C0CE  F0DB         	movff	_fData+2,_densidadMasa+2
 18183  004134  C0CF  F0DC         	movff	_fData+3,_densidadMasa+3
 18184                           
 18185                           ;sysParams.h: 154: fData.floatMB = readEEPROM(16);
 18186  004138  0E10               	movlw	16
 18187  00413A  ECFA  F028         	call	_readEEPROM
 18188  00413E  0100               	movlb	0	; () banked
 18189  004140  6FCF               	movwf	(_fData+3)& (0+255),b
 18190                           
 18191                           ;sysParams.h: 155: fData.floatUB = readEEPROM(17);
 18192  004142  0E11               	movlw	17
 18193  004144  ECFA  F028         	call	_readEEPROM
 18194  004148  0100               	movlb	0	; () banked
 18195  00414A  6FCE               	movwf	(_fData+2)& (0+255),b
 18196                           
 18197                           ;sysParams.h: 156: fData.floatHB = readEEPROM(18);
 18198  00414C  0E12               	movlw	18
 18199  00414E  ECFA  F028         	call	_readEEPROM
 18200  004152  0100               	movlb	0	; () banked
 18201  004154  6FCD               	movwf	(_fData+1)& (0+255),b
 18202                           
 18203                           ;sysParams.h: 157: fData.floatLB = readEEPROM(19);
 18204  004156  0E13               	movlw	19
 18205  004158  ECFA  F028         	call	_readEEPROM
 18206  00415C  0100               	movlb	0	; () banked
 18207  00415E  6FCC               	movwf	_fData& (0+255),b
 18208                           
 18209                           ; BSR set to: 0
 18210                           ;sysParams.h: 158: velocidadMasa = fData.floatdat;
 18211  004160  C0CC  F03B         	movff	_fData,_velocidadMasa
 18212  004164  C0CD  F03C         	movff	_fData+1,_velocidadMasa+1
 18213  004168  C0CE  F03D         	movff	_fData+2,_velocidadMasa+2
 18214  00416C  C0CF  F03E         	movff	_fData+3,_velocidadMasa+3
 18215                           
 18216                           ; BSR set to: 0
 18217                           ;sysParams.h: 159: calcSysVars();
 18218  004170  ECCD  F01C         	call	i1_calcSysVars	;wreg free
 18219  004174  0012               	return		;funcret
 18220  004176                     __end_of_sysParamInit:
 18221                           	opt stack 0
 18222                           pclatu	equ	0xFFB
 18223                           pclath	equ	0xFFA
 18224                           tblptru	equ	0xFF8
 18225                           tblptrh	equ	0xFF7
 18226                           tblptrl	equ	0xFF6
 18227                           tablat	equ	0xFF5
 18228                           prodh	equ	0xFF4
 18229                           prodl	equ	0xFF3
 18230                           intcon	equ	0xFF2
 18231                           postinc0	equ	0xFEE
 18232                           fsr0h	equ	0xFEA
 18233                           fsr0l	equ	0xFE9
 18234                           wreg	equ	0xFE8
 18235                           postdec1	equ	0xFE5
 18236                           fsr1h	equ	0xFE2
 18237                           fsr1l	equ	0xFE1
 18238                           bsr	equ	0xFE0
 18239                           indf2	equ	0xFDF
 18240                           postinc2	equ	0xFDE
 18241                           postdec2	equ	0xFDD
 18242                           plusw2	equ	0xFDB
 18243                           fsr2h	equ	0xFDA
 18244                           fsr2l	equ	0xFD9
 18245                           status	equ	0xFD8
 18246                           
 18247 ;; *************** function i1_calcSysVars *****************
 18248 ;; Defined at:
 18249 ;;		line 62 in file "source/sysParams.h"
 18250 ;; Parameters:    Size  Location     Type
 18251 ;;		None
 18252 ;; Auto vars:     Size  Location     Type
 18253 ;;  calcSysVars     4    0[BANK0 ] float 
 18254 ;; Return value:  Size  Location     Type
 18255 ;;                  1    wreg      void 
 18256 ;; Registers used:
 18257 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 18258 ;; Tracked objects:
 18259 ;;		On entry : 0/0
 18260 ;;		On exit  : 0/0
 18261 ;;		Unchanged: 0/0
 18262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18263 ;;      Params:         0       0       0       0       0       0       0
 18264 ;;      Locals:         0       4       0       0       0       0       0
 18265 ;;      Temps:          0       0       0       0       0       0       0
 18266 ;;      Totals:         0       4       0       0       0       0       0
 18267 ;;Total ram usage:        4 bytes
 18268 ;; Hardware stack levels used:    1
 18269 ;; Hardware stack levels required when called:    4
 18270 ;; This function calls:
 18271 ;;		i1___fldiv
 18272 ;;		i1___flmul
 18273 ;; This function is called by:
 18274 ;;		_sysParamInit
 18275 ;;		i1_saveSysParams
 18276 ;; This function uses a non-reentrant model
 18277 ;;
 18278                           
 18279                           	psect	text69
 18280  00399A                     __ptext69:
 18281                           	opt stack 0
 18282  00399A                     i1_calcSysVars:
 18283                           	opt stack 14
 18284                           
 18285                           ;sysParams.h: 63: float temp = 0;
 18286                           
 18287                           ;incstack = 0
 18288  00399A  0E00               	movlw	0
 18289  00399C  0100               	movlb	0	; () banked
 18290  00399E  6F60               	movwf	i1calcSysVars@temp& (0+255),b
 18291  0039A0  0E00               	movlw	0
 18292  0039A2  6F61               	movwf	(i1calcSysVars@temp+1)& (0+255),b
 18293  0039A4  0E00               	movlw	0
 18294  0039A6  6F62               	movwf	(i1calcSysVars@temp+2)& (0+255),b
 18295  0039A8  0E00               	movlw	0
 18296  0039AA  6F63               	movwf	(i1calcSysVars@temp+3)& (0+255),b
 18297                           
 18298                           ; BSR set to: 0
 18299                           ;sysParams.h: 64: temp = (float)diamTubo / 2000.0f;
 18300  0039AC  C0DD  F015         	movff	_diamTubo,i1___fldiv@b
 18301  0039B0  C0DE  F016         	movff	_diamTubo+1,i1___fldiv@b+1
 18302  0039B4  C0DF  F017         	movff	_diamTubo+2,i1___fldiv@b+2
 18303  0039B8  C0E0  F018         	movff	_diamTubo+3,i1___fldiv@b+3
 18304  0039BC  0E00               	movlw	0
 18305  0039BE  6E19               	movwf	i1___fldiv@a,c
 18306  0039C0  0E00               	movlw	0
 18307  0039C2  6E1A               	movwf	i1___fldiv@a+1,c
 18308  0039C4  0EFA               	movlw	250
 18309  0039C6  6E1B               	movwf	i1___fldiv@a+2,c
 18310  0039C8  0E44               	movlw	68
 18311  0039CA  6E1C               	movwf	i1___fldiv@a+3,c
 18312  0039CC  EC54  F014         	call	i1___fldiv	;wreg free
 18313  0039D0  C015  F060         	movff	?i1___fldiv,i1calcSysVars@temp
 18314  0039D4  C016  F061         	movff	?i1___fldiv+1,i1calcSysVars@temp+1
 18315  0039D8  C017  F062         	movff	?i1___fldiv+2,i1calcSysVars@temp+2
 18316  0039DC  C018  F063         	movff	?i1___fldiv+3,i1calcSysVars@temp+3
 18317                           
 18318                           ;sysParams.h: 65: temp *= temp;
 18319  0039E0  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18320  0039E4  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18321  0039E8  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18322  0039EC  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18323  0039F0  C060  F019         	movff	i1calcSysVars@temp,i1___flmul@a
 18324  0039F4  C061  F01A         	movff	i1calcSysVars@temp+1,i1___flmul@a+1
 18325  0039F8  C062  F01B         	movff	i1calcSysVars@temp+2,i1___flmul@a+2
 18326  0039FC  C063  F01C         	movff	i1calcSysVars@temp+3,i1___flmul@a+3
 18327  003A00  EC43  F011         	call	i1___flmul	;wreg free
 18328  003A04  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18329  003A08  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18330  003A0C  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18331  003A10  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18332                           
 18333                           ;sysParams.h: 66: temp *= pi;
 18334  003A14  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18335  003A18  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18336  003A1C  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18337  003A20  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18338  003A24  C14F  F019         	movff	_pi,i1___flmul@a
 18339  003A28  C150  F01A         	movff	_pi+1,i1___flmul@a+1
 18340  003A2C  C151  F01B         	movff	_pi+2,i1___flmul@a+2
 18341  003A30  C152  F01C         	movff	_pi+3,i1___flmul@a+3
 18342  003A34  EC43  F011         	call	i1___flmul	;wreg free
 18343  003A38  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18344  003A3C  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18345  003A40  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18346  003A44  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18347                           
 18348                           ;sysParams.h: 67: temp *= velocidadMasa;
 18349  003A48  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18350  003A4C  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18351  003A50  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18352  003A54  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18353  003A58  C03B  F019         	movff	_velocidadMasa,i1___flmul@a
 18354  003A5C  C03C  F01A         	movff	_velocidadMasa+1,i1___flmul@a+1
 18355  003A60  C03D  F01B         	movff	_velocidadMasa+2,i1___flmul@a+2
 18356  003A64  C03E  F01C         	movff	_velocidadMasa+3,i1___flmul@a+3
 18357  003A68  EC43  F011         	call	i1___flmul	;wreg free
 18358  003A6C  C015  F060         	movff	?i1___flmul,i1calcSysVars@temp
 18359  003A70  C016  F061         	movff	?i1___flmul+1,i1calcSysVars@temp+1
 18360  003A74  C017  F062         	movff	?i1___flmul+2,i1calcSysVars@temp+2
 18361  003A78  C018  F063         	movff	?i1___flmul+3,i1calcSysVars@temp+3
 18362                           
 18363                           ;sysParams.h: 68: m3Xcorte = (float)temp * tiXcorte;
 18364  003A7C  C060  F015         	movff	i1calcSysVars@temp,i1___flmul@b
 18365  003A80  C061  F016         	movff	i1calcSysVars@temp+1,i1___flmul@b+1
 18366  003A84  C062  F017         	movff	i1calcSysVars@temp+2,i1___flmul@b+2
 18367  003A88  C063  F018         	movff	i1calcSysVars@temp+3,i1___flmul@b+3
 18368  003A8C  C037  F019         	movff	_tiXcorte,i1___flmul@a
 18369  003A90  C038  F01A         	movff	_tiXcorte+1,i1___flmul@a+1
 18370  003A94  C039  F01B         	movff	_tiXcorte+2,i1___flmul@a+2
 18371  003A98  C03A  F01C         	movff	_tiXcorte+3,i1___flmul@a+3
 18372  003A9C  EC43  F011         	call	i1___flmul	;wreg free
 18373  003AA0  C015  F033         	movff	?i1___flmul,_m3Xcorte
 18374  003AA4  C016  F034         	movff	?i1___flmul+1,_m3Xcorte+1
 18375  003AA8  C017  F035         	movff	?i1___flmul+2,_m3Xcorte+2
 18376  003AAC  C018  F036         	movff	?i1___flmul+3,_m3Xcorte+3
 18377                           
 18378                           ;sysParams.h: 69: kgXcorte = (float)densidadMasa * m3Xcorte;
 18379  003AB0  C0D9  F015         	movff	_densidadMasa,i1___flmul@b
 18380  003AB4  C0DA  F016         	movff	_densidadMasa+1,i1___flmul@b+1
 18381  003AB8  C0DB  F017         	movff	_densidadMasa+2,i1___flmul@b+2
 18382  003ABC  C0DC  F018         	movff	_densidadMasa+3,i1___flmul@b+3
 18383  003AC0  C033  F019         	movff	_m3Xcorte,i1___flmul@a
 18384  003AC4  C034  F01A         	movff	_m3Xcorte+1,i1___flmul@a+1
 18385  003AC8  C035  F01B         	movff	_m3Xcorte+2,i1___flmul@a+2
 18386  003ACC  C036  F01C         	movff	_m3Xcorte+3,i1___flmul@a+3
 18387  003AD0  EC43  F011         	call	i1___flmul	;wreg free
 18388  003AD4  C015  F02F         	movff	?i1___flmul,_kgXcorte
 18389  003AD8  C016  F030         	movff	?i1___flmul+1,_kgXcorte+1
 18390  003ADC  C017  F031         	movff	?i1___flmul+2,_kgXcorte+2
 18391  003AE0  C018  F032         	movff	?i1___flmul+3,_kgXcorte+3
 18392  003AE4  0012               	return		;funcret
 18393  003AE6                     __end_ofi1_calcSysVars:
 18394                           	opt stack 0
 18395                           pclatu	equ	0xFFB
 18396                           pclath	equ	0xFFA
 18397                           tblptru	equ	0xFF8
 18398                           tblptrh	equ	0xFF7
 18399                           tblptrl	equ	0xFF6
 18400                           tablat	equ	0xFF5
 18401                           prodh	equ	0xFF4
 18402                           prodl	equ	0xFF3
 18403                           intcon	equ	0xFF2
 18404                           postinc0	equ	0xFEE
 18405                           fsr0h	equ	0xFEA
 18406                           fsr0l	equ	0xFE9
 18407                           wreg	equ	0xFE8
 18408                           postdec1	equ	0xFE5
 18409                           fsr1h	equ	0xFE2
 18410                           fsr1l	equ	0xFE1
 18411                           bsr	equ	0xFE0
 18412                           indf2	equ	0xFDF
 18413                           postinc2	equ	0xFDE
 18414                           postdec2	equ	0xFDD
 18415                           plusw2	equ	0xFDB
 18416                           fsr2h	equ	0xFDA
 18417                           fsr2l	equ	0xFD9
 18418                           status	equ	0xFD8
 18419                           
 18420 ;; *************** function i1___flmul *****************
 18421 ;; Defined at:
 18422 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcmul.c"
 18423 ;; Parameters:    Size  Location     Type
 18424 ;;  b               4   20[COMRAM] void 
 18425 ;;  a               4   24[COMRAM] void 
 18426 ;; Auto vars:     Size  Location     Type
 18427 ;;  __flmul         4   39[COMRAM] struct .
 18428 ;;  __flmul         4   34[COMRAM] unsigned long 
 18429 ;;  __flmul         2   43[COMRAM] struct .
 18430 ;;  __flmul         1   38[COMRAM] unsigned char 
 18431 ;;  __flmul         1   33[COMRAM] unsigned char 
 18432 ;;  __flmul         1   32[COMRAM] unsigned char 
 18433 ;; Return value:  Size  Location     Type
 18434 ;;                  4   20[COMRAM] unsigned char 
 18435 ;; Registers used:
 18436 ;;		wreg, status,2, status,0, prodl, prodh
 18437 ;; Tracked objects:
 18438 ;;		On entry : 0/0
 18439 ;;		On exit  : 0/0
 18440 ;;		Unchanged: 0/0
 18441 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18442 ;;      Params:         8       0       0       0       0       0       0
 18443 ;;      Locals:        13       0       0       0       0       0       0
 18444 ;;      Temps:          4       0       0       0       0       0       0
 18445 ;;      Totals:        25       0       0       0       0       0       0
 18446 ;;Total ram usage:       25 bytes
 18447 ;; Hardware stack levels used:    1
 18448 ;; Hardware stack levels required when called:    3
 18449 ;; This function calls:
 18450 ;;		Nothing
 18451 ;; This function is called by:
 18452 ;;		i1_calcSysVars
 18453 ;; This function uses a non-reentrant model
 18454 ;;
 18455                           
 18456                           	psect	text70
 18457  002286                     __ptext70:
 18458                           	opt stack 0
 18459  002286                     i1___flmul:
 18460                           	opt stack 14
 18461                           
 18462                           ;incstack = 0
 18463  002286  5018               	movf	i1___flmul@b+3,w,c
 18464  002288  0B80               	andlw	128
 18465  00228A  6E21               	movwf	i1___flmul@sign,c
 18466  00228C  5018               	movf	i1___flmul@b+3,w,c
 18467  00228E  2418               	addwf	i1___flmul@b+3,w,c
 18468  002290  6E27               	movwf	i1___flmul@bexp,c
 18469  002292  BE17               	btfsc	i1___flmul@b+2,7,c
 18470  002294  8027               	bsf	i1___flmul@bexp,0,c
 18471  002296  5027               	movf	i1___flmul@bexp,w,c
 18472  002298  B4D8               	btfsc	status,2,c
 18473  00229A  D00D               	goto	i1l8460
 18474  00229C  2827               	incf	i1___flmul@bexp,w,c
 18475  00229E  A4D8               	btfss	status,2,c
 18476  0022A0  D008               	goto	i1l8458
 18477  0022A2  0E00               	movlw	0
 18478  0022A4  6E15               	movwf	i1___flmul@b,c
 18479  0022A6  0E00               	movlw	0
 18480  0022A8  6E16               	movwf	i1___flmul@b+1,c
 18481  0022AA  0E00               	movlw	0
 18482  0022AC  6E17               	movwf	i1___flmul@b+2,c
 18483  0022AE  0E00               	movlw	0
 18484  0022B0  6E18               	movwf	i1___flmul@b+3,c
 18485  0022B2                     i1l8458:
 18486  0022B2  8E17               	bsf	i1___flmul@b+2,7,c
 18487  0022B4  D008               	goto	i1l8462
 18488  0022B6                     i1l8460:
 18489  0022B6  0E00               	movlw	0
 18490  0022B8  6E15               	movwf	i1___flmul@b,c
 18491  0022BA  0E00               	movlw	0
 18492  0022BC  6E16               	movwf	i1___flmul@b+1,c
 18493  0022BE  0E00               	movlw	0
 18494  0022C0  6E17               	movwf	i1___flmul@b+2,c
 18495  0022C2  0E00               	movlw	0
 18496  0022C4  6E18               	movwf	i1___flmul@b+3,c
 18497  0022C6                     i1l8462:
 18498  0022C6  501C               	movf	i1___flmul@a+3,w,c
 18499  0022C8  0B80               	andlw	128
 18500  0022CA  1A21               	xorwf	i1___flmul@sign,f,c
 18501  0022CC  501C               	movf	i1___flmul@a+3,w,c
 18502  0022CE  241C               	addwf	i1___flmul@a+3,w,c
 18503  0022D0  6E22               	movwf	i1___flmul@aexp,c
 18504  0022D2  BE1B               	btfsc	i1___flmul@a+2,7,c
 18505  0022D4  8022               	bsf	i1___flmul@aexp,0,c
 18506  0022D6  5022               	movf	i1___flmul@aexp,w,c
 18507  0022D8  B4D8               	btfsc	status,2,c
 18508  0022DA  D00D               	goto	i1l8478
 18509  0022DC  2822               	incf	i1___flmul@aexp,w,c
 18510  0022DE  A4D8               	btfss	status,2,c
 18511  0022E0  D008               	goto	i1l8476
 18512  0022E2  0E00               	movlw	0
 18513  0022E4  6E19               	movwf	i1___flmul@a,c
 18514  0022E6  0E00               	movlw	0
 18515  0022E8  6E1A               	movwf	i1___flmul@a+1,c
 18516  0022EA  0E00               	movlw	0
 18517  0022EC  6E1B               	movwf	i1___flmul@a+2,c
 18518  0022EE  0E00               	movlw	0
 18519  0022F0  6E1C               	movwf	i1___flmul@a+3,c
 18520  0022F2                     i1l8476:
 18521  0022F2  8E1B               	bsf	i1___flmul@a+2,7,c
 18522  0022F4  D008               	goto	i1l1430
 18523  0022F6                     i1l8478:
 18524  0022F6  0E00               	movlw	0
 18525  0022F8  6E19               	movwf	i1___flmul@a,c
 18526  0022FA  0E00               	movlw	0
 18527  0022FC  6E1A               	movwf	i1___flmul@a+1,c
 18528  0022FE  0E00               	movlw	0
 18529  002300  6E1B               	movwf	i1___flmul@a+2,c
 18530  002302  0E00               	movlw	0
 18531  002304  6E1C               	movwf	i1___flmul@a+3,c
 18532  002306                     i1l1430:
 18533  002306  5022               	movf	i1___flmul@aexp,w,c
 18534  002308  B4D8               	btfsc	status,2,c
 18535  00230A  D003               	goto	i1l8482
 18536  00230C  5027               	movf	i1___flmul@bexp,w,c
 18537  00230E  A4D8               	btfss	status,2,c
 18538  002310  D009               	goto	i1l8486
 18539  002312                     i1l8482:
 18540  002312  0E00               	movlw	0
 18541  002314  6E15               	movwf	?i1___flmul,c
 18542  002316  0E00               	movlw	0
 18543  002318  6E16               	movwf	?i1___flmul+1,c
 18544  00231A  0E00               	movlw	0
 18545  00231C  6E17               	movwf	?i1___flmul+2,c
 18546  00231E  0E00               	movlw	0
 18547  002320  6E18               	movwf	?i1___flmul+3,c
 18548  002322  0012               	return	
 18549  002324                     i1l8486:
 18550  002324  501B               	movf	i1___flmul@a+2,w,c
 18551  002326  0215               	mulwf	i1___flmul@b,c
 18552  002328  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18553  00232C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18554  002330  502C               	movf	i1___flmul@temp,w,c
 18555  002332  6E23               	movwf	i1___flmul@grs,c
 18556  002334  6A24               	clrf	i1___flmul@grs+1,c
 18557  002336  6A25               	clrf	i1___flmul@grs+2,c
 18558  002338  6A26               	clrf	i1___flmul@grs+3,c
 18559  00233A  502D               	movf	i1___flmul@temp+1,w,c
 18560  00233C  6E28               	movwf	i1___flmul@prod,c
 18561  00233E  6A29               	clrf	i1___flmul@prod+1,c
 18562  002340  6A2A               	clrf	i1___flmul@prod+2,c
 18563  002342  6A2B               	clrf	i1___flmul@prod+3,c
 18564  002344  501A               	movf	i1___flmul@a+1,w,c
 18565  002346  0216               	mulwf	i1___flmul@b+1,c
 18566  002348  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18567  00234C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18568  002350  502C               	movf	i1___flmul@temp,w,c
 18569  002352  2623               	addwf	i1___flmul@grs,f,c
 18570  002354  0E00               	movlw	0
 18571  002356  2224               	addwfc	i1___flmul@grs+1,f,c
 18572  002358  2225               	addwfc	i1___flmul@grs+2,f,c
 18573  00235A  2226               	addwfc	i1___flmul@grs+3,f,c
 18574  00235C  502D               	movf	i1___flmul@temp+1,w,c
 18575  00235E  2628               	addwf	i1___flmul@prod,f,c
 18576  002360  0E00               	movlw	0
 18577  002362  2229               	addwfc	i1___flmul@prod+1,f,c
 18578  002364  222A               	addwfc	i1___flmul@prod+2,f,c
 18579  002366  222B               	addwfc	i1___flmul@prod+3,f,c
 18580  002368  5019               	movf	i1___flmul@a,w,c
 18581  00236A  0217               	mulwf	i1___flmul@b+2,c
 18582  00236C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18583  002370  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18584  002374  502C               	movf	i1___flmul@temp,w,c
 18585  002376  2623               	addwf	i1___flmul@grs,f,c
 18586  002378  0E00               	movlw	0
 18587  00237A  2224               	addwfc	i1___flmul@grs+1,f,c
 18588  00237C  2225               	addwfc	i1___flmul@grs+2,f,c
 18589  00237E  2226               	addwfc	i1___flmul@grs+3,f,c
 18590  002380  502D               	movf	i1___flmul@temp+1,w,c
 18591  002382  2628               	addwf	i1___flmul@prod,f,c
 18592  002384  0E00               	movlw	0
 18593  002386  2229               	addwfc	i1___flmul@prod+1,f,c
 18594  002388  222A               	addwfc	i1___flmul@prod+2,f,c
 18595  00238A  222B               	addwfc	i1___flmul@prod+3,f,c
 18596  00238C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18597  002390  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18598  002394  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18599  002398  6A23               	clrf	i1___flmul@grs,c
 18600  00239A  5019               	movf	i1___flmul@a,w,c
 18601  00239C  0216               	mulwf	i1___flmul@b+1,c
 18602  00239E  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18603  0023A2  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18604  0023A6  502C               	movf	i1___flmul@temp,w,c
 18605  0023A8  2623               	addwf	i1___flmul@grs,f,c
 18606  0023AA  502D               	movf	i1___flmul@temp+1,w,c
 18607  0023AC  2224               	addwfc	i1___flmul@grs+1,f,c
 18608  0023AE  0E00               	movlw	0
 18609  0023B0  2225               	addwfc	i1___flmul@grs+2,f,c
 18610  0023B2  0E00               	movlw	0
 18611  0023B4  2226               	addwfc	i1___flmul@grs+3,f,c
 18612  0023B6  501A               	movf	i1___flmul@a+1,w,c
 18613  0023B8  0215               	mulwf	i1___flmul@b,c
 18614  0023BA  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18615  0023BE  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18616  0023C2  502C               	movf	i1___flmul@temp,w,c
 18617  0023C4  2623               	addwf	i1___flmul@grs,f,c
 18618  0023C6  502D               	movf	i1___flmul@temp+1,w,c
 18619  0023C8  2224               	addwfc	i1___flmul@grs+1,f,c
 18620  0023CA  0E00               	movlw	0
 18621  0023CC  2225               	addwfc	i1___flmul@grs+2,f,c
 18622  0023CE  0E00               	movlw	0
 18623  0023D0  2226               	addwfc	i1___flmul@grs+3,f,c
 18624  0023D2  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18625  0023D6  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18626  0023DA  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18627  0023DE  6A23               	clrf	i1___flmul@grs,c
 18628  0023E0  5019               	movf	i1___flmul@a,w,c
 18629  0023E2  0215               	mulwf	i1___flmul@b,c
 18630  0023E4  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18631  0023E8  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18632  0023EC  502C               	movf	i1___flmul@temp,w,c
 18633  0023EE  2623               	addwf	i1___flmul@grs,f,c
 18634  0023F0  502D               	movf	i1___flmul@temp+1,w,c
 18635  0023F2  2224               	addwfc	i1___flmul@grs+1,f,c
 18636  0023F4  0E00               	movlw	0
 18637  0023F6  2225               	addwfc	i1___flmul@grs+2,f,c
 18638  0023F8  0E00               	movlw	0
 18639  0023FA  2226               	addwfc	i1___flmul@grs+3,f,c
 18640  0023FC  501B               	movf	i1___flmul@a+2,w,c
 18641  0023FE  0216               	mulwf	i1___flmul@b+1,c
 18642  002400  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18643  002404  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18644  002408  502C               	movf	i1___flmul@temp,w,c
 18645  00240A  2628               	addwf	i1___flmul@prod,f,c
 18646  00240C  502D               	movf	i1___flmul@temp+1,w,c
 18647  00240E  2229               	addwfc	i1___flmul@prod+1,f,c
 18648  002410  0E00               	movlw	0
 18649  002412  222A               	addwfc	i1___flmul@prod+2,f,c
 18650  002414  0E00               	movlw	0
 18651  002416  222B               	addwfc	i1___flmul@prod+3,f,c
 18652  002418  501A               	movf	i1___flmul@a+1,w,c
 18653  00241A  0217               	mulwf	i1___flmul@b+2,c
 18654  00241C  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18655  002420  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18656  002424  502C               	movf	i1___flmul@temp,w,c
 18657  002426  2628               	addwf	i1___flmul@prod,f,c
 18658  002428  502D               	movf	i1___flmul@temp+1,w,c
 18659  00242A  2229               	addwfc	i1___flmul@prod+1,f,c
 18660  00242C  0E00               	movlw	0
 18661  00242E  222A               	addwfc	i1___flmul@prod+2,f,c
 18662  002430  0E00               	movlw	0
 18663  002432  222B               	addwfc	i1___flmul@prod+3,f,c
 18664  002434  501B               	movf	i1___flmul@a+2,w,c
 18665  002436  0217               	mulwf	i1___flmul@b+2,c
 18666  002438  CFF3 F02C          	movff	prodl,i1___flmul@temp
 18667  00243C  CFF4 F02D          	movff	prodh,i1___flmul@temp+1
 18668  002440  502C               	movf	i1___flmul@temp,w,c
 18669  002442  6E1D               	movwf	??i1___flmul& (0+255),c
 18670  002444  502D               	movf	i1___flmul@temp+1,w,c
 18671  002446  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 18672  002448  6A1F               	clrf	(??i1___flmul+2)& (0+255),c
 18673  00244A  6A20               	clrf	(??i1___flmul+3)& (0+255),c
 18674  00244C  C01F  F020         	movff	??i1___flmul+2,??i1___flmul+3
 18675  002450  C01E  F01F         	movff	??i1___flmul+1,??i1___flmul+2
 18676  002454  C01D  F01E         	movff	??i1___flmul,??i1___flmul+1
 18677  002458  6A1D               	clrf	??i1___flmul,c
 18678  00245A  501D               	movf	??i1___flmul,w,c
 18679  00245C  2628               	addwf	i1___flmul@prod,f,c
 18680  00245E  501E               	movf	??i1___flmul+1,w,c
 18681  002460  2229               	addwfc	i1___flmul@prod+1,f,c
 18682  002462  501F               	movf	??i1___flmul+2,w,c
 18683  002464  222A               	addwfc	i1___flmul@prod+2,f,c
 18684  002466  5020               	movf	??i1___flmul+3,w,c
 18685  002468  222B               	addwfc	i1___flmul@prod+3,f,c
 18686  00246A  C023  F01D         	movff	i1___flmul@grs,??i1___flmul
 18687  00246E  C024  F01E         	movff	i1___flmul@grs+1,??i1___flmul+1
 18688  002472  C025  F01F         	movff	i1___flmul@grs+2,??i1___flmul+2
 18689  002476  C026  F020         	movff	i1___flmul@grs+3,??i1___flmul+3
 18690  00247A  0E19               	movlw	25
 18691  00247C  D005               	goto	i1u1039_20
 18692  00247E                     i1u1039_25:
 18693  00247E  90D8               	bcf	status,0,c
 18694  002480  3220               	rrcf	??i1___flmul+3,f,c
 18695  002482  321F               	rrcf	??i1___flmul+2,f,c
 18696  002484  321E               	rrcf	??i1___flmul+1,f,c
 18697  002486  321D               	rrcf	??i1___flmul,f,c
 18698  002488                     i1u1039_20:
 18699  002488  2EE8               	decfsz	wreg,f,c
 18700  00248A  D7F9               	goto	i1u1039_25
 18701  00248C  501D               	movf	??i1___flmul,w,c
 18702  00248E  2628               	addwf	i1___flmul@prod,f,c
 18703  002490  501E               	movf	??i1___flmul+1,w,c
 18704  002492  2229               	addwfc	i1___flmul@prod+1,f,c
 18705  002494  501F               	movf	??i1___flmul+2,w,c
 18706  002496  222A               	addwfc	i1___flmul@prod+2,f,c
 18707  002498  5020               	movf	??i1___flmul+3,w,c
 18708  00249A  222B               	addwfc	i1___flmul@prod+3,f,c
 18709  00249C  C025  F026         	movff	i1___flmul@grs+2,i1___flmul@grs+3
 18710  0024A0  C024  F025         	movff	i1___flmul@grs+1,i1___flmul@grs+2
 18711  0024A4  C023  F024         	movff	i1___flmul@grs,i1___flmul@grs+1
 18712  0024A8  6A23               	clrf	i1___flmul@grs,c
 18713  0024AA  5022               	movf	i1___flmul@aexp,w,c
 18714  0024AC  C027  F01D         	movff	i1___flmul@bexp,??i1___flmul
 18715  0024B0  6A1E               	clrf	(??i1___flmul+1)& (0+255),c
 18716  0024B2  261D               	addwf	??i1___flmul,f,c
 18717  0024B4  0E00               	movlw	0
 18718  0024B6  221E               	addwfc	??i1___flmul+1,f,c
 18719  0024B8  0E82               	movlw	130
 18720  0024BA  241D               	addwf	??i1___flmul,w,c
 18721  0024BC  6E2C               	movwf	i1___flmul@temp,c
 18722  0024BE  0EFF               	movlw	255
 18723  0024C0  201E               	addwfc	??i1___flmul+1,w,c
 18724  0024C2  6E2D               	movwf	i1___flmul@temp+1,c
 18725  0024C4  D00F               	goto	i1l8534
 18726  0024C6                     i1l8528:
 18727  0024C6  90D8               	bcf	status,0,c
 18728  0024C8  3628               	rlcf	i1___flmul@prod,f,c
 18729  0024CA  3629               	rlcf	i1___flmul@prod+1,f,c
 18730  0024CC  362A               	rlcf	i1___flmul@prod+2,f,c
 18731  0024CE  362B               	rlcf	i1___flmul@prod+3,f,c
 18732  0024D0  BE26               	btfsc	i1___flmul@grs+3,7,c
 18733  0024D2  8028               	bsf	i1___flmul@prod,0,c
 18734  0024D4  90D8               	bcf	status,0,c
 18735  0024D6  3623               	rlcf	i1___flmul@grs,f,c
 18736  0024D8  3624               	rlcf	i1___flmul@grs+1,f,c
 18737  0024DA  3625               	rlcf	i1___flmul@grs+2,f,c
 18738  0024DC  3626               	rlcf	i1___flmul@grs+3,f,c
 18739  0024DE  062C               	decf	i1___flmul@temp,f,c
 18740  0024E0  A0D8               	btfss	status,0,c
 18741  0024E2  062D               	decf	i1___flmul@temp+1,f,c
 18742  0024E4                     i1l8534:
 18743  0024E4  AE2A               	btfss	i1___flmul@prod+2,7,c
 18744  0024E6  D7EF               	goto	i1l8528
 18745  0024E8  0E00               	movlw	0
 18746  0024EA  6E22               	movwf	i1___flmul@aexp,c
 18747  0024EC  AE26               	btfss	i1___flmul@grs+3,7,c
 18748  0024EE  D016               	goto	i1l1439
 18749  0024F0  0EFF               	movlw	255
 18750  0024F2  1423               	andwf	i1___flmul@grs,w,c
 18751  0024F4  6E1D               	movwf	??i1___flmul& (0+255),c
 18752  0024F6  0EFF               	movlw	255
 18753  0024F8  1424               	andwf	i1___flmul@grs+1,w,c
 18754  0024FA  6E1E               	movwf	(??i1___flmul+1)& (0+255),c
 18755  0024FC  0EFF               	movlw	255
 18756  0024FE  1425               	andwf	i1___flmul@grs+2,w,c
 18757  002500  6E1F               	movwf	(??i1___flmul+2)& (0+255),c
 18758  002502  0E7F               	movlw	127
 18759  002504  1426               	andwf	i1___flmul@grs+3,w,c
 18760  002506  6E20               	movwf	(??i1___flmul+3)& (0+255),c
 18761  002508  501D               	movf	??i1___flmul,w,c
 18762  00250A  101E               	iorwf	??i1___flmul+1,w,c
 18763  00250C  101F               	iorwf	??i1___flmul+2,w,c
 18764  00250E  1020               	iorwf	??i1___flmul+3,w,c
 18765  002510  A4D8               	btfss	status,2,c
 18766  002512  D002               	goto	i1l8544
 18767  002514  A028               	btfss	i1___flmul@prod,0,c
 18768  002516  D002               	goto	i1l1439
 18769  002518                     i1l8544:
 18770  002518  0E01               	movlw	1
 18771  00251A  6E22               	movwf	i1___flmul@aexp,c
 18772  00251C                     i1l1439:
 18773  00251C  5022               	movf	i1___flmul@aexp,w,c
 18774  00251E  B4D8               	btfsc	status,2,c
 18775  002520  D01F               	goto	i1l8554
 18776  002522  0E01               	movlw	1
 18777  002524  2628               	addwf	i1___flmul@prod,f,c
 18778  002526  0E00               	movlw	0
 18779  002528  2229               	addwfc	i1___flmul@prod+1,f,c
 18780  00252A  222A               	addwfc	i1___flmul@prod+2,f,c
 18781  00252C  222B               	addwfc	i1___flmul@prod+3,f,c
 18782  00252E  A02B               	btfss	i1___flmul@prod+3,0,c
 18783  002530  D017               	goto	i1l8554
 18784  002532  C028  F01D         	movff	i1___flmul@prod,??i1___flmul
 18785  002536  C029  F01E         	movff	i1___flmul@prod+1,??i1___flmul+1
 18786  00253A  C02A  F01F         	movff	i1___flmul@prod+2,??i1___flmul+2
 18787  00253E  C02B  F020         	movff	i1___flmul@prod+3,??i1___flmul+3
 18788  002542  3420               	rlcf	??i1___flmul+3,w,c
 18789  002544  3220               	rrcf	??i1___flmul+3,f,c
 18790  002546  321F               	rrcf	??i1___flmul+2,f,c
 18791  002548  321E               	rrcf	??i1___flmul+1,f,c
 18792  00254A  321D               	rrcf	??i1___flmul,f,c
 18793  00254C  C01D  F028         	movff	??i1___flmul,i1___flmul@prod
 18794  002550  C01E  F029         	movff	??i1___flmul+1,i1___flmul@prod+1
 18795  002554  C01F  F02A         	movff	??i1___flmul+2,i1___flmul@prod+2
 18796  002558  C020  F02B         	movff	??i1___flmul+3,i1___flmul@prod+3
 18797  00255C  4A2C               	infsnz	i1___flmul@temp,f,c
 18798  00255E  2A2D               	incf	i1___flmul@temp+1,f,c
 18799  002560                     i1l8554:
 18800  002560  BE2D               	btfsc	i1___flmul@temp+1,7,c
 18801  002562  D00D               	goto	i1l8558
 18802  002564  502D               	movf	i1___flmul@temp+1,w,c
 18803  002566  E103               	bnz	i1u1047_20
 18804  002568  282C               	incf	i1___flmul@temp,w,c
 18805  00256A  A0D8               	btfss	status,0,c
 18806  00256C  D008               	goto	i1l8558
 18807  00256E                     i1u1047_20:
 18808  00256E  0E00               	movlw	0
 18809  002570  6E28               	movwf	i1___flmul@prod,c
 18810  002572  0E00               	movlw	0
 18811  002574  6E29               	movwf	i1___flmul@prod+1,c
 18812  002576  0E80               	movlw	128
 18813  002578  6E2A               	movwf	i1___flmul@prod+2,c
 18814  00257A  0E7F               	movlw	127
 18815  00257C  D020               	goto	L13
 18816  00257E                     i1l8558:
 18817  00257E  BE2D               	btfsc	i1___flmul@temp+1,7,c
 18818  002580  D005               	goto	i1l8560
 18819  002582  502D               	movf	i1___flmul@temp+1,w,c
 18820  002584  E10E               	bnz	i1l1447
 18821  002586  042C               	decf	i1___flmul@temp,w,c
 18822  002588  B0D8               	btfsc	status,0,c
 18823  00258A  D00B               	goto	i1l1447
 18824  00258C                     i1l8560:
 18825  00258C  0E00               	movlw	0
 18826  00258E  6E28               	movwf	i1___flmul@prod,c
 18827  002590  0E00               	movlw	0
 18828  002592  6E29               	movwf	i1___flmul@prod+1,c
 18829  002594  0E00               	movlw	0
 18830  002596  6E2A               	movwf	i1___flmul@prod+2,c
 18831  002598  0E00               	movlw	0
 18832  00259A  6E2B               	movwf	i1___flmul@prod+3,c
 18833  00259C  0E00               	movlw	0
 18834  00259E  6E21               	movwf	i1___flmul@sign,c
 18835  0025A0  D00F               	goto	i1l8570
 18836  0025A2                     i1l1447:
 18837  0025A2  C02C  F027         	movff	i1___flmul@temp,i1___flmul@bexp
 18838  0025A6  0EFF               	movlw	255
 18839  0025A8  1628               	andwf	i1___flmul@prod,f,c
 18840  0025AA  0EFF               	movlw	255
 18841  0025AC  1629               	andwf	i1___flmul@prod+1,f,c
 18842  0025AE  0E7F               	movlw	127
 18843  0025B0  162A               	andwf	i1___flmul@prod+2,f,c
 18844  0025B2  0E00               	movlw	0
 18845  0025B4  162B               	andwf	i1___flmul@prod+3,f,c
 18846  0025B6  B027               	btfsc	i1___flmul@bexp,0,c
 18847  0025B8  8E2A               	bsf	i1___flmul@prod+2,7,c
 18848  0025BA  90D8               	bcf	status,0,c
 18849  0025BC  3027               	rrcf	i1___flmul@bexp,w,c
 18850  0025BE                     L13:
 18851  0025BE  6E2B               	movwf	i1___flmul@prod+3,c
 18852  0025C0                     i1l8570:
 18853  0025C0  5021               	movf	i1___flmul@sign,w,c
 18854  0025C2  122B               	iorwf	i1___flmul@prod+3,f,c
 18855  0025C4  C028  F015         	movff	i1___flmul@prod,?i1___flmul
 18856  0025C8  C029  F016         	movff	i1___flmul@prod+1,?i1___flmul+1
 18857  0025CC  C02A  F017         	movff	i1___flmul@prod+2,?i1___flmul+2
 18858  0025D0  C02B  F018         	movff	i1___flmul@prod+3,?i1___flmul+3
 18859  0025D4  0012               	return	
 18860  0025D6                     __end_ofi1___flmul:
 18861                           	opt stack 0
 18862                           pclatu	equ	0xFFB
 18863                           pclath	equ	0xFFA
 18864                           tblptru	equ	0xFF8
 18865                           tblptrh	equ	0xFF7
 18866                           tblptrl	equ	0xFF6
 18867                           tablat	equ	0xFF5
 18868                           prodh	equ	0xFF4
 18869                           prodl	equ	0xFF3
 18870                           intcon	equ	0xFF2
 18871                           postinc0	equ	0xFEE
 18872                           fsr0h	equ	0xFEA
 18873                           fsr0l	equ	0xFE9
 18874                           wreg	equ	0xFE8
 18875                           postdec1	equ	0xFE5
 18876                           fsr1h	equ	0xFE2
 18877                           fsr1l	equ	0xFE1
 18878                           bsr	equ	0xFE0
 18879                           indf2	equ	0xFDF
 18880                           postinc2	equ	0xFDE
 18881                           postdec2	equ	0xFDD
 18882                           plusw2	equ	0xFDB
 18883                           fsr2h	equ	0xFDA
 18884                           fsr2l	equ	0xFD9
 18885                           status	equ	0xFD8
 18886                           
 18887 ;; *************** function i1___fldiv *****************
 18888 ;; Defined at:
 18889 ;;		line 11 in file "C:\Program Files (x86)\Microchip\xc8\v1.38\sources\common\sprcdiv.c"
 18890 ;; Parameters:    Size  Location     Type
 18891 ;;  b               4   20[COMRAM] unsigned char 
 18892 ;;  a               4   24[COMRAM] unsigned char 
 18893 ;; Auto vars:     Size  Location     Type
 18894 ;;  __fldiv         4   39[COMRAM] unsigned long 
 18895 ;;  __fldiv         4   33[COMRAM] unsigned long 
 18896 ;;  __fldiv         2   37[COMRAM] int 
 18897 ;;  __fldiv         1   44[COMRAM] unsigned char 
 18898 ;;  __fldiv         1   43[COMRAM] unsigned char 
 18899 ;;  __fldiv         1   32[COMRAM] unsigned char 
 18900 ;; Return value:  Size  Location     Type
 18901 ;;                  4   20[COMRAM] unsigned char 
 18902 ;; Registers used:
 18903 ;;		wreg, status,2, status,0
 18904 ;; Tracked objects:
 18905 ;;		On entry : 0/0
 18906 ;;		On exit  : 0/0
 18907 ;;		Unchanged: 0/0
 18908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 18909 ;;      Params:         8       0       0       0       0       0       0
 18910 ;;      Locals:        13       0       0       0       0       0       0
 18911 ;;      Temps:          4       0       0       0       0       0       0
 18912 ;;      Totals:        25       0       0       0       0       0       0
 18913 ;;Total ram usage:       25 bytes
 18914 ;; Hardware stack levels used:    1
 18915 ;; Hardware stack levels required when called:    3
 18916 ;; This function calls:
 18917 ;;		Nothing
 18918 ;; This function is called by:
 18919 ;;		i1_calcSysVars
 18920 ;; This function uses a non-reentrant model
 18921 ;;
 18922                           
 18923                           	psect	text71
 18924  0028A8                     __ptext71:
 18925                           	opt stack 0
 18926  0028A8                     i1___fldiv:
 18927                           	opt stack 14
 18928                           
 18929                           ;incstack = 0
 18930  0028A8  5018               	movf	i1___fldiv@b+3,w,c
 18931  0028AA  0B80               	andlw	128
 18932  0028AC  6E21               	movwf	i1___fldiv@sign,c
 18933  0028AE  5018               	movf	i1___fldiv@b+3,w,c
 18934  0028B0  2418               	addwf	i1___fldiv@b+3,w,c
 18935  0028B2  6E2C               	movwf	i1___fldiv@bexp,c
 18936  0028B4  BE17               	btfsc	i1___fldiv@b+2,7,c
 18937  0028B6  802C               	bsf	i1___fldiv@bexp,0,c
 18938  0028B8  502C               	movf	i1___fldiv@bexp,w,c
 18939  0028BA  B4D8               	btfsc	status,2,c
 18940  0028BC  D00D               	goto	i1l8326
 18941  0028BE  282C               	incf	i1___fldiv@bexp,w,c
 18942  0028C0  A4D8               	btfss	status,2,c
 18943  0028C2  D008               	goto	i1l8322
 18944  0028C4  0E00               	movlw	0
 18945  0028C6  6E15               	movwf	i1___fldiv@b,c
 18946  0028C8  0E00               	movlw	0
 18947  0028CA  6E16               	movwf	i1___fldiv@b+1,c
 18948  0028CC  0E00               	movlw	0
 18949  0028CE  6E17               	movwf	i1___fldiv@b+2,c
 18950  0028D0  0E00               	movlw	0
 18951  0028D2  6E18               	movwf	i1___fldiv@b+3,c
 18952  0028D4                     i1l8322:
 18953  0028D4  8E17               	bsf	i1___fldiv@b+2,7,c
 18954  0028D6  D006               	goto	L14
 18955  0028D8                     i1l8326:
 18956  0028D8  0E00               	movlw	0
 18957  0028DA  6E15               	movwf	i1___fldiv@b,c
 18958  0028DC  0E00               	movlw	0
 18959  0028DE  6E16               	movwf	i1___fldiv@b+1,c
 18960  0028E0  0E00               	movlw	0
 18961  0028E2  6E17               	movwf	i1___fldiv@b+2,c
 18962  0028E4                     L14:
 18963  0028E4  0E00               	movlw	0
 18964  0028E6  6E18               	movwf	i1___fldiv@b+3,c
 18965  0028E8  501C               	movf	i1___fldiv@a+3,w,c
 18966  0028EA  0B80               	andlw	128
 18967  0028EC  1A21               	xorwf	i1___fldiv@sign,f,c
 18968  0028EE  501C               	movf	i1___fldiv@a+3,w,c
 18969  0028F0  241C               	addwf	i1___fldiv@a+3,w,c
 18970  0028F2  6E2D               	movwf	i1___fldiv@aexp,c
 18971  0028F4  BE1B               	btfsc	i1___fldiv@a+2,7,c
 18972  0028F6  802D               	bsf	i1___fldiv@aexp,0,c
 18973  0028F8  502D               	movf	i1___fldiv@aexp,w,c
 18974  0028FA  B4D8               	btfsc	status,2,c
 18975  0028FC  D00D               	goto	i1l8346
 18976  0028FE  282D               	incf	i1___fldiv@aexp,w,c
 18977  002900  A4D8               	btfss	status,2,c
 18978  002902  D008               	goto	i1l8342
 18979  002904  0E00               	movlw	0
 18980  002906  6E19               	movwf	i1___fldiv@a,c
 18981  002908  0E00               	movlw	0
 18982  00290A  6E1A               	movwf	i1___fldiv@a+1,c
 18983  00290C  0E00               	movlw	0
 18984  00290E  6E1B               	movwf	i1___fldiv@a+2,c
 18985  002910  0E00               	movlw	0
 18986  002912  6E1C               	movwf	i1___fldiv@a+3,c
 18987  002914                     i1l8342:
 18988  002914  8E1B               	bsf	i1___fldiv@a+2,7,c
 18989  002916  D006               	goto	L15
 18990  002918                     i1l8346:
 18991  002918  0E00               	movlw	0
 18992  00291A  6E19               	movwf	i1___fldiv@a,c
 18993  00291C  0E00               	movlw	0
 18994  00291E  6E1A               	movwf	i1___fldiv@a+1,c
 18995  002920  0E00               	movlw	0
 18996  002922  6E1B               	movwf	i1___fldiv@a+2,c
 18997  002924                     L15:
 18998  002924  0E00               	movlw	0
 18999  002926  6E1C               	movwf	i1___fldiv@a+3,c
 19000  002928  5019               	movf	i1___fldiv@a,w,c
 19001  00292A  101A               	iorwf	i1___fldiv@a+1,w,c
 19002  00292C  101B               	iorwf	i1___fldiv@a+2,w,c
 19003  00292E  101C               	iorwf	i1___fldiv@a+3,w,c
 19004  002930  A4D8               	btfss	status,2,c
 19005  002932  D015               	goto	i1l8358
 19006  002934  0E00               	movlw	0
 19007  002936  6E15               	movwf	i1___fldiv@b,c
 19008  002938  0E00               	movlw	0
 19009  00293A  6E16               	movwf	i1___fldiv@b+1,c
 19010  00293C  0E00               	movlw	0
 19011  00293E  6E17               	movwf	i1___fldiv@b+2,c
 19012  002940  0E00               	movlw	0
 19013  002942  6E18               	movwf	i1___fldiv@b+3,c
 19014  002944  0E80               	movlw	128
 19015  002946  1217               	iorwf	i1___fldiv@b+2,f,c
 19016  002948  0E7F               	movlw	127
 19017  00294A  1218               	iorwf	i1___fldiv@b+3,f,c
 19018  00294C  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 19019  002950  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 19020  002954  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 19021  002958  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 19022  00295C  0012               	return	
 19023  00295E                     i1l8358:
 19024  00295E  502C               	movf	i1___fldiv@bexp,w,c
 19025  002960  A4D8               	btfss	status,2,c
 19026  002962  D011               	goto	i1l8366
 19027  002964  0E00               	movlw	0
 19028  002966  6E15               	movwf	i1___fldiv@b,c
 19029  002968  0E00               	movlw	0
 19030  00296A  6E16               	movwf	i1___fldiv@b+1,c
 19031  00296C  0E00               	movlw	0
 19032  00296E  6E17               	movwf	i1___fldiv@b+2,c
 19033  002970  0E00               	movlw	0
 19034  002972  6E18               	movwf	i1___fldiv@b+3,c
 19035  002974  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 19036  002978  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 19037  00297C  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 19038  002980  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 19039  002984  0012               	return	
 19040  002986                     i1l8366:
 19041  002986  502D               	movf	i1___fldiv@aexp,w,c
 19042  002988  6E1D               	movwf	??i1___fldiv& (0+255),c
 19043  00298A  6A1E               	clrf	(??i1___fldiv+1)& (0+255),c
 19044  00298C  1E1D               	comf	??i1___fldiv,f,c
 19045  00298E  1E1E               	comf	??i1___fldiv+1,f,c
 19046  002990  4A1D               	infsnz	??i1___fldiv,f,c
 19047  002992  2A1E               	incf	??i1___fldiv+1,f,c
 19048  002994  502C               	movf	i1___fldiv@bexp,w,c
 19049  002996  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 19050  002998  6A20               	clrf	(??i1___fldiv+3)& (0+255),c
 19051  00299A  501D               	movf	??i1___fldiv,w,c
 19052  00299C  261F               	addwf	??i1___fldiv+2,f,c
 19053  00299E  501E               	movf	??i1___fldiv+1,w,c
 19054  0029A0  2220               	addwfc	??i1___fldiv+3,f,c
 19055  0029A2  0E7F               	movlw	127
 19056  0029A4  241F               	addwf	??i1___fldiv+2,w,c
 19057  0029A6  6E26               	movwf	i1___fldiv@new_exp,c
 19058  0029A8  0E00               	movlw	0
 19059  0029AA  2020               	addwfc	??i1___fldiv+3,w,c
 19060  0029AC  6E27               	movwf	i1___fldiv@new_exp+1,c
 19061  0029AE  C015  F022         	movff	i1___fldiv@b,i1___fldiv@rem
 19062  0029B2  C016  F023         	movff	i1___fldiv@b+1,i1___fldiv@rem+1
 19063  0029B6  C017  F024         	movff	i1___fldiv@b+2,i1___fldiv@rem+2
 19064  0029BA  C018  F025         	movff	i1___fldiv@b+3,i1___fldiv@rem+3
 19065  0029BE  0E00               	movlw	0
 19066  0029C0  6E15               	movwf	i1___fldiv@b,c
 19067  0029C2  0E00               	movlw	0
 19068  0029C4  6E16               	movwf	i1___fldiv@b+1,c
 19069  0029C6  0E00               	movlw	0
 19070  0029C8  6E17               	movwf	i1___fldiv@b+2,c
 19071  0029CA  0E00               	movlw	0
 19072  0029CC  6E18               	movwf	i1___fldiv@b+3,c
 19073  0029CE  0E00               	movlw	0
 19074  0029D0  6E28               	movwf	i1___fldiv@grs,c
 19075  0029D2  0E00               	movlw	0
 19076  0029D4  6E29               	movwf	i1___fldiv@grs+1,c
 19077  0029D6  0E00               	movlw	0
 19078  0029D8  6E2A               	movwf	i1___fldiv@grs+2,c
 19079  0029DA  0E00               	movlw	0
 19080  0029DC  6E2B               	movwf	i1___fldiv@grs+3,c
 19081  0029DE  0E00               	movlw	0
 19082  0029E0  6E2D               	movwf	i1___fldiv@aexp,c
 19083  0029E2  D028               	goto	i1l1400
 19084  0029E4                     i1l8376:
 19085  0029E4  502D               	movf	i1___fldiv@aexp,w,c
 19086  0029E6  B4D8               	btfsc	status,2,c
 19087  0029E8  D011               	goto	i1l8384
 19088  0029EA  90D8               	bcf	status,0,c
 19089  0029EC  3622               	rlcf	i1___fldiv@rem,f,c
 19090  0029EE  3623               	rlcf	i1___fldiv@rem+1,f,c
 19091  0029F0  3624               	rlcf	i1___fldiv@rem+2,f,c
 19092  0029F2  3625               	rlcf	i1___fldiv@rem+3,f,c
 19093  0029F4  90D8               	bcf	status,0,c
 19094  0029F6  3615               	rlcf	i1___fldiv@b,f,c
 19095  0029F8  3616               	rlcf	i1___fldiv@b+1,f,c
 19096  0029FA  3617               	rlcf	i1___fldiv@b+2,f,c
 19097  0029FC  3618               	rlcf	i1___fldiv@b+3,f,c
 19098  0029FE  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 19099  002A00  8015               	bsf	i1___fldiv@b,0,c
 19100  002A02  90D8               	bcf	status,0,c
 19101  002A04  3628               	rlcf	i1___fldiv@grs,f,c
 19102  002A06  3629               	rlcf	i1___fldiv@grs+1,f,c
 19103  002A08  362A               	rlcf	i1___fldiv@grs+2,f,c
 19104  002A0A  362B               	rlcf	i1___fldiv@grs+3,f,c
 19105  002A0C                     i1l8384:
 19106  002A0C  5019               	movf	i1___fldiv@a,w,c
 19107  002A0E  5C22               	subwf	i1___fldiv@rem,w,c
 19108  002A10  501A               	movf	i1___fldiv@a+1,w,c
 19109  002A12  5823               	subwfb	i1___fldiv@rem+1,w,c
 19110  002A14  501B               	movf	i1___fldiv@a+2,w,c
 19111  002A16  5824               	subwfb	i1___fldiv@rem+2,w,c
 19112  002A18  501C               	movf	i1___fldiv@a+3,w,c
 19113  002A1A  5825               	subwfb	i1___fldiv@rem+3,w,c
 19114  002A1C  A0D8               	btfss	status,0,c
 19115  002A1E  D009               	goto	i1l8390
 19116  002A20  8C2B               	bsf	i1___fldiv@grs+3,6,c
 19117  002A22  5019               	movf	i1___fldiv@a,w,c
 19118  002A24  5E22               	subwf	i1___fldiv@rem,f,c
 19119  002A26  501A               	movf	i1___fldiv@a+1,w,c
 19120  002A28  5A23               	subwfb	i1___fldiv@rem+1,f,c
 19121  002A2A  501B               	movf	i1___fldiv@a+2,w,c
 19122  002A2C  5A24               	subwfb	i1___fldiv@rem+2,f,c
 19123  002A2E  501C               	movf	i1___fldiv@a+3,w,c
 19124  002A30  5A25               	subwfb	i1___fldiv@rem+3,f,c
 19125  002A32                     i1l8390:
 19126  002A32  2A2D               	incf	i1___fldiv@aexp,f,c
 19127  002A34                     i1l1400:
 19128  002A34  0E19               	movlw	25
 19129  002A36  642D               	cpfsgt	i1___fldiv@aexp,c
 19130  002A38  D7D5               	goto	i1l8376
 19131  002A3A  5022               	movf	i1___fldiv@rem,w,c
 19132  002A3C  1023               	iorwf	i1___fldiv@rem+1,w,c
 19133  002A3E  1024               	iorwf	i1___fldiv@rem+2,w,c
 19134  002A40  1025               	iorwf	i1___fldiv@rem+3,w,c
 19135  002A42  B4D8               	btfsc	status,2,c
 19136  002A44  D011               	goto	i1l8402
 19137  002A46  8028               	bsf	i1___fldiv@grs,0,c
 19138  002A48  D00F               	goto	i1l8402
 19139  002A4A                     i1l8396:
 19140  002A4A  90D8               	bcf	status,0,c
 19141  002A4C  3615               	rlcf	i1___fldiv@b,f,c
 19142  002A4E  3616               	rlcf	i1___fldiv@b+1,f,c
 19143  002A50  3617               	rlcf	i1___fldiv@b+2,f,c
 19144  002A52  3618               	rlcf	i1___fldiv@b+3,f,c
 19145  002A54  BE2B               	btfsc	i1___fldiv@grs+3,7,c
 19146  002A56  8015               	bsf	i1___fldiv@b,0,c
 19147  002A58  90D8               	bcf	status,0,c
 19148  002A5A  3628               	rlcf	i1___fldiv@grs,f,c
 19149  002A5C  3629               	rlcf	i1___fldiv@grs+1,f,c
 19150  002A5E  362A               	rlcf	i1___fldiv@grs+2,f,c
 19151  002A60  362B               	rlcf	i1___fldiv@grs+3,f,c
 19152  002A62  0626               	decf	i1___fldiv@new_exp,f,c
 19153  002A64  A0D8               	btfss	status,0,c
 19154  002A66  0627               	decf	i1___fldiv@new_exp+1,f,c
 19155  002A68                     i1l8402:
 19156  002A68  AE17               	btfss	i1___fldiv@b+2,7,c
 19157  002A6A  D7EF               	goto	i1l8396
 19158  002A6C  0E00               	movlw	0
 19159  002A6E  6E2D               	movwf	i1___fldiv@aexp,c
 19160  002A70  AE2B               	btfss	i1___fldiv@grs+3,7,c
 19161  002A72  D016               	goto	i1l1411
 19162  002A74  0EFF               	movlw	255
 19163  002A76  1428               	andwf	i1___fldiv@grs,w,c
 19164  002A78  6E1D               	movwf	??i1___fldiv& (0+255),c
 19165  002A7A  0EFF               	movlw	255
 19166  002A7C  1429               	andwf	i1___fldiv@grs+1,w,c
 19167  002A7E  6E1E               	movwf	(??i1___fldiv+1)& (0+255),c
 19168  002A80  0EFF               	movlw	255
 19169  002A82  142A               	andwf	i1___fldiv@grs+2,w,c
 19170  002A84  6E1F               	movwf	(??i1___fldiv+2)& (0+255),c
 19171  002A86  0E7F               	movlw	127
 19172  002A88  142B               	andwf	i1___fldiv@grs+3,w,c
 19173  002A8A  6E20               	movwf	(??i1___fldiv+3)& (0+255),c
 19174  002A8C  501D               	movf	??i1___fldiv,w,c
 19175  002A8E  101E               	iorwf	??i1___fldiv+1,w,c
 19176  002A90  101F               	iorwf	??i1___fldiv+2,w,c
 19177  002A92  1020               	iorwf	??i1___fldiv+3,w,c
 19178  002A94  A4D8               	btfss	status,2,c
 19179  002A96  D002               	goto	i1l8412
 19180  002A98  A015               	btfss	i1___fldiv@b,0,c
 19181  002A9A  D002               	goto	i1l1411
 19182  002A9C                     i1l8412:
 19183  002A9C  0E01               	movlw	1
 19184  002A9E  6E2D               	movwf	i1___fldiv@aexp,c
 19185  002AA0                     i1l1411:
 19186  002AA0  502D               	movf	i1___fldiv@aexp,w,c
 19187  002AA2  B4D8               	btfsc	status,2,c
 19188  002AA4  D01F               	goto	i1l8422
 19189  002AA6  0E01               	movlw	1
 19190  002AA8  2615               	addwf	i1___fldiv@b,f,c
 19191  002AAA  0E00               	movlw	0
 19192  002AAC  2216               	addwfc	i1___fldiv@b+1,f,c
 19193  002AAE  2217               	addwfc	i1___fldiv@b+2,f,c
 19194  002AB0  2218               	addwfc	i1___fldiv@b+3,f,c
 19195  002AB2  A018               	btfss	i1___fldiv@b+3,0,c
 19196  002AB4  D017               	goto	i1l8422
 19197  002AB6  C015  F01D         	movff	i1___fldiv@b,??i1___fldiv
 19198  002ABA  C016  F01E         	movff	i1___fldiv@b+1,??i1___fldiv+1
 19199  002ABE  C017  F01F         	movff	i1___fldiv@b+2,??i1___fldiv+2
 19200  002AC2  C018  F020         	movff	i1___fldiv@b+3,??i1___fldiv+3
 19201  002AC6  3420               	rlcf	??i1___fldiv+3,w,c
 19202  002AC8  3220               	rrcf	??i1___fldiv+3,f,c
 19203  002ACA  321F               	rrcf	??i1___fldiv+2,f,c
 19204  002ACC  321E               	rrcf	??i1___fldiv+1,f,c
 19205  002ACE  321D               	rrcf	??i1___fldiv,f,c
 19206  002AD0  C01D  F015         	movff	??i1___fldiv,i1___fldiv@b
 19207  002AD4  C01E  F016         	movff	??i1___fldiv+1,i1___fldiv@b+1
 19208  002AD8  C01F  F017         	movff	??i1___fldiv+2,i1___fldiv@b+2
 19209  002ADC  C020  F018         	movff	??i1___fldiv+3,i1___fldiv@b+3
 19210  002AE0  4A26               	infsnz	i1___fldiv@new_exp,f,c
 19211  002AE2  2A27               	incf	i1___fldiv@new_exp+1,f,c
 19212  002AE4                     i1l8422:
 19213  002AE4  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 19214  002AE6  D010               	goto	i1l8426
 19215  002AE8  5027               	movf	i1___fldiv@new_exp+1,w,c
 19216  002AEA  E103               	bnz	i1u1028_20
 19217  002AEC  2826               	incf	i1___fldiv@new_exp,w,c
 19218  002AEE  A0D8               	btfss	status,0,c
 19219  002AF0  D00B               	goto	i1l8426
 19220  002AF2                     i1u1028_20:
 19221  002AF2  0E00               	movlw	0
 19222  002AF4  6E27               	movwf	i1___fldiv@new_exp+1,c
 19223  002AF6  6826               	setf	i1___fldiv@new_exp,c
 19224  002AF8  0E00               	movlw	0
 19225  002AFA  6E15               	movwf	i1___fldiv@b,c
 19226  002AFC  0E00               	movlw	0
 19227  002AFE  6E16               	movwf	i1___fldiv@b+1,c
 19228  002B00  0E00               	movlw	0
 19229  002B02  6E17               	movwf	i1___fldiv@b+2,c
 19230  002B04  0E00               	movlw	0
 19231  002B06  6E18               	movwf	i1___fldiv@b+3,c
 19232  002B08                     i1l8426:
 19233  002B08  BE27               	btfsc	i1___fldiv@new_exp+1,7,c
 19234  002B0A  D005               	goto	i1l8428
 19235  002B0C  5027               	movf	i1___fldiv@new_exp+1,w,c
 19236  002B0E  E111               	bnz	i1l8430
 19237  002B10  0426               	decf	i1___fldiv@new_exp,w,c
 19238  002B12  B0D8               	btfsc	status,0,c
 19239  002B14  D00E               	goto	i1l8430
 19240  002B16                     i1l8428:
 19241  002B16  0E00               	movlw	0
 19242  002B18  6E27               	movwf	i1___fldiv@new_exp+1,c
 19243  002B1A  0E00               	movlw	0
 19244  002B1C  6E26               	movwf	i1___fldiv@new_exp,c
 19245  002B1E  0E00               	movlw	0
 19246  002B20  6E15               	movwf	i1___fldiv@b,c
 19247  002B22  0E00               	movlw	0
 19248  002B24  6E16               	movwf	i1___fldiv@b+1,c
 19249  002B26  0E00               	movlw	0
 19250  002B28  6E17               	movwf	i1___fldiv@b+2,c
 19251  002B2A  0E00               	movlw	0
 19252  002B2C  6E18               	movwf	i1___fldiv@b+3,c
 19253  002B2E  0E00               	movlw	0
 19254  002B30  6E21               	movwf	i1___fldiv@sign,c
 19255  002B32                     i1l8430:
 19256  002B32  C026  F02C         	movff	i1___fldiv@new_exp,i1___fldiv@bexp
 19257  002B36  A02C               	btfss	i1___fldiv@bexp,0,c
 19258  002B38  D002               	goto	i1l8436
 19259  002B3A  8E17               	bsf	i1___fldiv@b+2,7,c
 19260  002B3C  D001               	goto	i1l8438
 19261  002B3E                     i1l8436:
 19262  002B3E  9E17               	bcf	i1___fldiv@b+2,7,c
 19263  002B40                     i1l8438:
 19264  002B40  90D8               	bcf	status,0,c
 19265  002B42  302C               	rrcf	i1___fldiv@bexp,w,c
 19266  002B44  6E18               	movwf	i1___fldiv@b+3,c
 19267  002B46  5021               	movf	i1___fldiv@sign,w,c
 19268  002B48  1218               	iorwf	i1___fldiv@b+3,f,c
 19269  002B4A  C015  F015         	movff	i1___fldiv@b,?i1___fldiv
 19270  002B4E  C016  F016         	movff	i1___fldiv@b+1,?i1___fldiv+1
 19271  002B52  C017  F017         	movff	i1___fldiv@b+2,?i1___fldiv+2
 19272  002B56  C018  F018         	movff	i1___fldiv@b+3,?i1___fldiv+3
 19273  002B5A  0012               	return	
 19274  002B5C                     __end_ofi1___fldiv:
 19275                           	opt stack 0
 19276                           pclatu	equ	0xFFB
 19277                           pclath	equ	0xFFA
 19278                           tblptru	equ	0xFF8
 19279                           tblptrh	equ	0xFF7
 19280                           tblptrl	equ	0xFF6
 19281                           tablat	equ	0xFF5
 19282                           prodh	equ	0xFF4
 19283                           prodl	equ	0xFF3
 19284                           intcon	equ	0xFF2
 19285                           postinc0	equ	0xFEE
 19286                           fsr0h	equ	0xFEA
 19287                           fsr0l	equ	0xFE9
 19288                           wreg	equ	0xFE8
 19289                           postdec1	equ	0xFE5
 19290                           fsr1h	equ	0xFE2
 19291                           fsr1l	equ	0xFE1
 19292                           bsr	equ	0xFE0
 19293                           indf2	equ	0xFDF
 19294                           postinc2	equ	0xFDE
 19295                           postdec2	equ	0xFDD
 19296                           plusw2	equ	0xFDB
 19297                           fsr2h	equ	0xFDA
 19298                           fsr2l	equ	0xFD9
 19299                           status	equ	0xFD8
 19300                           
 19301 ;; *************** function _readEEPROM *****************
 19302 ;; Defined at:
 19303 ;;		line 47 in file "source/sysParams.h"
 19304 ;; Parameters:    Size  Location     Type
 19305 ;;  adr             1    wreg     unsigned char 
 19306 ;; Auto vars:     Size  Location     Type
 19307 ;;  adr             1   20[COMRAM] unsigned char 
 19308 ;; Return value:  Size  Location     Type
 19309 ;;                  1    wreg      unsigned char 
 19310 ;; Registers used:
 19311 ;;		wreg, status,2
 19312 ;; Tracked objects:
 19313 ;;		On entry : 0/0
 19314 ;;		On exit  : 0/0
 19315 ;;		Unchanged: 0/0
 19316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19317 ;;      Params:         0       0       0       0       0       0       0
 19318 ;;      Locals:         1       0       0       0       0       0       0
 19319 ;;      Temps:          0       0       0       0       0       0       0
 19320 ;;      Totals:         1       0       0       0       0       0       0
 19321 ;;Total ram usage:        1 bytes
 19322 ;; Hardware stack levels used:    1
 19323 ;; Hardware stack levels required when called:    3
 19324 ;; This function calls:
 19325 ;;		Nothing
 19326 ;; This function is called by:
 19327 ;;		_sysParamInit
 19328 ;; This function uses a non-reentrant model
 19329 ;;
 19330                           
 19331                           	psect	text72
 19332  0051F4                     __ptext72:
 19333                           	opt stack 0
 19334  0051F4                     _readEEPROM:
 19335                           	opt stack 15
 19336                           
 19337                           ;incstack = 0
 19338                           ;readEEPROM@adr stored from wreg
 19339  0051F4  6E15               	movwf	readEEPROM@adr,c
 19340                           
 19341                           ;sysParams.h: 48: EEADR = adr;
 19342  0051F6  C015  FFA9         	movff	readEEPROM@adr,4009	;volatile
 19343                           
 19344                           ;sysParams.h: 49: EECON1bits.EEPGD = 0;
 19345  0051FA  9EA6               	bcf	4006,7,c	;volatile
 19346                           
 19347                           ;sysParams.h: 50: EECON1bits.CFGS = 0;
 19348  0051FC  9CA6               	bcf	4006,6,c	;volatile
 19349                           
 19350                           ;sysParams.h: 51: EECON1bits.RD = 1;
 19351  0051FE  80A6               	bsf	4006,0,c	;volatile
 19352  005200                     i1l288:
 19353  005200  B0A6               	btfsc	4006,0,c	;volatile
 19354  005202  D7FE               	goto	i1l288
 19355                           
 19356                           ;sysParams.h: 53: return EEDATA;
 19357  005204  50A8               	movf	4008,w,c	;volatile
 19358  005206  0012               	return		;funcret
 19359  005208                     __end_of_readEEPROM:
 19360                           	opt stack 0
 19361                           pclatu	equ	0xFFB
 19362                           pclath	equ	0xFFA
 19363                           tblptru	equ	0xFF8
 19364                           tblptrh	equ	0xFF7
 19365                           tblptrl	equ	0xFF6
 19366                           tablat	equ	0xFF5
 19367                           prodh	equ	0xFF4
 19368                           prodl	equ	0xFF3
 19369                           intcon	equ	0xFF2
 19370                           postinc0	equ	0xFEE
 19371                           fsr0h	equ	0xFEA
 19372                           fsr0l	equ	0xFE9
 19373                           wreg	equ	0xFE8
 19374                           postdec1	equ	0xFE5
 19375                           fsr1h	equ	0xFE2
 19376                           fsr1l	equ	0xFE1
 19377                           bsr	equ	0xFE0
 19378                           indf2	equ	0xFDF
 19379                           postinc2	equ	0xFDE
 19380                           postdec2	equ	0xFDD
 19381                           plusw2	equ	0xFDB
 19382                           fsr2h	equ	0xFDA
 19383                           fsr2l	equ	0xFD9
 19384                           status	equ	0xFD8
 19385                           
 19386 ;; *************** function _putchUART *****************
 19387 ;; Defined at:
 19388 ;;		line 11 in file "source/UARTConfig.h"
 19389 ;; Parameters:    Size  Location     Type
 19390 ;;  val             1    wreg     unsigned char 
 19391 ;; Auto vars:     Size  Location     Type
 19392 ;;  val             1   20[COMRAM] unsigned char 
 19393 ;; Return value:  Size  Location     Type
 19394 ;;                  1    wreg      void 
 19395 ;; Registers used:
 19396 ;;		wreg
 19397 ;; Tracked objects:
 19398 ;;		On entry : 0/0
 19399 ;;		On exit  : 0/0
 19400 ;;		Unchanged: 0/0
 19401 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19402 ;;      Params:         0       0       0       0       0       0       0
 19403 ;;      Locals:         1       0       0       0       0       0       0
 19404 ;;      Temps:          0       0       0       0       0       0       0
 19405 ;;      Totals:         1       0       0       0       0       0       0
 19406 ;;Total ram usage:        1 bytes
 19407 ;; Hardware stack levels used:    1
 19408 ;; Hardware stack levels required when called:    3
 19409 ;; This function calls:
 19410 ;;		Nothing
 19411 ;; This function is called by:
 19412 ;;		_UARTint
 19413 ;; This function uses a non-reentrant model
 19414 ;;
 19415                           
 19416                           	psect	text73
 19417  005268                     __ptext73:
 19418                           	opt stack 0
 19419  005268                     _putchUART:
 19420                           	opt stack 16
 19421                           
 19422                           ;incstack = 0
 19423                           ;putchUART@val stored from wreg
 19424  005268  6E15               	movwf	putchUART@val,c
 19425  00526A                     i1l621:
 19426  00526A  A2AC               	btfss	4012,1,c	;volatile
 19427  00526C  D7FE               	goto	i1l621
 19428                           
 19429                           ;UARTConfig.h: 13: TXREG1 = val;
 19430  00526E  C015  FFAD         	movff	putchUART@val,4013	;volatile
 19431  005272  0012               	return		;funcret
 19432  005274                     __end_of_putchUART:
 19433                           	opt stack 0
 19434                           pclatu	equ	0xFFB
 19435                           pclath	equ	0xFFA
 19436                           tblptru	equ	0xFF8
 19437                           tblptrh	equ	0xFF7
 19438                           tblptrl	equ	0xFF6
 19439                           tablat	equ	0xFF5
 19440                           prodh	equ	0xFF4
 19441                           prodl	equ	0xFF3
 19442                           intcon	equ	0xFF2
 19443                           postinc0	equ	0xFEE
 19444                           fsr0h	equ	0xFEA
 19445                           fsr0l	equ	0xFE9
 19446                           wreg	equ	0xFE8
 19447                           postdec1	equ	0xFE5
 19448                           fsr1h	equ	0xFE2
 19449                           fsr1l	equ	0xFE1
 19450                           bsr	equ	0xFE0
 19451                           indf2	equ	0xFDF
 19452                           postinc2	equ	0xFDE
 19453                           postdec2	equ	0xFDD
 19454                           plusw2	equ	0xFDB
 19455                           fsr2h	equ	0xFDA
 19456                           fsr2l	equ	0xFD9
 19457                           status	equ	0xFD8
 19458                           
 19459 ;; *************** function _hp_isr *****************
 19460 ;; Defined at:
 19461 ;;		line 13 in file "source/main.c"
 19462 ;; Parameters:    Size  Location     Type
 19463 ;;		None
 19464 ;; Auto vars:     Size  Location     Type
 19465 ;;		None
 19466 ;; Return value:  Size  Location     Type
 19467 ;;                  1    wreg      void 
 19468 ;; Registers used:
 19469 ;;		wreg, status,2, status,0, cstack
 19470 ;; Tracked objects:
 19471 ;;		On entry : 0/0
 19472 ;;		On exit  : 0/0
 19473 ;;		Unchanged: 0/0
 19474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19475 ;;      Params:         0       0       0       0       0       0       0
 19476 ;;      Locals:         0       0       0       0       0       0       0
 19477 ;;      Temps:         14       0       0       0       0       0       0
 19478 ;;      Totals:        14       0       0       0       0       0       0
 19479 ;;Total ram usage:       14 bytes
 19480 ;; Hardware stack levels used:    1
 19481 ;; Hardware stack levels required when called:    2
 19482 ;; This function calls:
 19483 ;;		_T2int
 19484 ;; This function is called by:
 19485 ;;		Interrupt level 2
 19486 ;; This function uses a non-reentrant model
 19487 ;;
 19488                           
 19489                           	psect	intcode
 19490  000008                     __pintcode:
 19491                           	opt stack 0
 19492  000008                     _hp_isr:
 19493                           	opt stack 14
 19494                           
 19495                           ;incstack = 0
 19496  000008  824A               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
 19497  00000A  CFFA F007          	movff	pclath,??_hp_isr
 19498  00000E  CFFB F008          	movff	pclatu,??_hp_isr+1
 19499  000012  EFB4  F025         	goto	int_func
 19500                           pclatu	equ	0xFFB
 19501                           pclath	equ	0xFFA
 19502                           tblptru	equ	0xFF8
 19503                           tblptrh	equ	0xFF7
 19504                           tblptrl	equ	0xFF6
 19505                           tablat	equ	0xFF5
 19506                           prodh	equ	0xFF4
 19507                           prodl	equ	0xFF3
 19508                           intcon	equ	0xFF2
 19509                           postinc0	equ	0xFEE
 19510                           fsr0h	equ	0xFEA
 19511                           fsr0l	equ	0xFE9
 19512                           wreg	equ	0xFE8
 19513                           postdec1	equ	0xFE5
 19514                           fsr1h	equ	0xFE2
 19515                           fsr1l	equ	0xFE1
 19516                           bsr	equ	0xFE0
 19517                           indf2	equ	0xFDF
 19518                           postinc2	equ	0xFDE
 19519                           postdec2	equ	0xFDD
 19520                           plusw2	equ	0xFDB
 19521                           fsr2h	equ	0xFDA
 19522                           fsr2l	equ	0xFD9
 19523                           status	equ	0xFD8
 19524                           
 19525                           	psect	intcode_body
 19526  004B68                     __pintcode_body:
 19527                           	opt stack 14
 19528  004B68                     int_func:
 19529                           	opt stack 14
 19530  004B68  CFE9 F009          	movff	fsr0l,??_hp_isr+2
 19531  004B6C  CFEA F00A          	movff	fsr0h,??_hp_isr+3
 19532  004B70  CFE1 F00B          	movff	fsr1l,??_hp_isr+4
 19533  004B74  CFE2 F00C          	movff	fsr1h,??_hp_isr+5
 19534  004B78  CFD9 F00D          	movff	fsr2l,??_hp_isr+6
 19535  004B7C  CFDA F00E          	movff	fsr2h,??_hp_isr+7
 19536  004B80  CFF3 F00F          	movff	prodl,??_hp_isr+8
 19537  004B84  CFF4 F010          	movff	prodh,??_hp_isr+9
 19538  004B88  CFF6 F011          	movff	tblptrl,??_hp_isr+10
 19539  004B8C  CFF7 F012          	movff	tblptrh,??_hp_isr+11
 19540  004B90  CFF8 F013          	movff	tblptru,??_hp_isr+12
 19541  004B94  CFF5 F014          	movff	tablat,??_hp_isr+13
 19542                           
 19543                           ;main.c: 14: if(PIE1bits.TMR2IE && PIR1bits.TMR2IF) {
 19544  004B98  B29D               	btfsc	3997,1,c	;volatile
 19545  004B9A  A29E               	btfss	3998,1,c	;volatile
 19546  004B9C  D003               	goto	i2l716
 19547                           
 19548                           ;main.c: 15: T2int();
 19549  004B9E  EC9C  F028         	call	_T2int	;wreg free
 19550                           
 19551                           ;main.c: 16: PIR1bits.TMR2IF = 0;
 19552  004BA2  929E               	bcf	3998,1,c	;volatile
 19553  004BA4                     i2l716:
 19554  004BA4  C014  FFF5         	movff	??_hp_isr+13,tablat
 19555  004BA8  C013  FFF8         	movff	??_hp_isr+12,tblptru
 19556  004BAC  C012  FFF7         	movff	??_hp_isr+11,tblptrh
 19557  004BB0  C011  FFF6         	movff	??_hp_isr+10,tblptrl
 19558  004BB4  C010  FFF4         	movff	??_hp_isr+9,prodh
 19559  004BB8  C00F  FFF3         	movff	??_hp_isr+8,prodl
 19560  004BBC  C00E  FFDA         	movff	??_hp_isr+7,fsr2h
 19561  004BC0  C00D  FFD9         	movff	??_hp_isr+6,fsr2l
 19562  004BC4  C00C  FFE2         	movff	??_hp_isr+5,fsr1h
 19563  004BC8  C00B  FFE1         	movff	??_hp_isr+4,fsr1l
 19564  004BCC  C00A  FFEA         	movff	??_hp_isr+3,fsr0h
 19565  004BD0  C009  FFE9         	movff	??_hp_isr+2,fsr0l
 19566  004BD4  C008  FFFB         	movff	??_hp_isr+1,pclatu
 19567  004BD8  C007  FFFA         	movff	??_hp_isr,pclath
 19568  004BDC  924A               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
 19569  004BDE  0011               	retfie		f
 19570  004BE0                     __end_of_hp_isr:
 19571                           	opt stack 0
 19572                           pclatu	equ	0xFFB
 19573                           pclath	equ	0xFFA
 19574                           tblptru	equ	0xFF8
 19575                           tblptrh	equ	0xFF7
 19576                           tblptrl	equ	0xFF6
 19577                           tablat	equ	0xFF5
 19578                           prodh	equ	0xFF4
 19579                           prodl	equ	0xFF3
 19580                           intcon	equ	0xFF2
 19581                           postinc0	equ	0xFEE
 19582                           fsr0h	equ	0xFEA
 19583                           fsr0l	equ	0xFE9
 19584                           wreg	equ	0xFE8
 19585                           postdec1	equ	0xFE5
 19586                           fsr1h	equ	0xFE2
 19587                           fsr1l	equ	0xFE1
 19588                           bsr	equ	0xFE0
 19589                           indf2	equ	0xFDF
 19590                           postinc2	equ	0xFDE
 19591                           postdec2	equ	0xFDD
 19592                           plusw2	equ	0xFDB
 19593                           fsr2h	equ	0xFDA
 19594                           fsr2l	equ	0xFD9
 19595                           status	equ	0xFD8
 19596                           
 19597 ;; *************** function _T2int *****************
 19598 ;; Defined at:
 19599 ;;		line 35 in file "source/PWMConfig.h"
 19600 ;; Parameters:    Size  Location     Type
 19601 ;;		None
 19602 ;; Auto vars:     Size  Location     Type
 19603 ;;		None
 19604 ;; Return value:  Size  Location     Type
 19605 ;;                  1    wreg      void 
 19606 ;; Registers used:
 19607 ;;		wreg, status,2, status,0, cstack
 19608 ;; Tracked objects:
 19609 ;;		On entry : 0/0
 19610 ;;		On exit  : 0/0
 19611 ;;		Unchanged: 0/0
 19612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19613 ;;      Params:         0       0       0       0       0       0       0
 19614 ;;      Locals:         0       0       0       0       0       0       0
 19615 ;;      Temps:          0       0       0       0       0       0       0
 19616 ;;      Totals:         0       0       0       0       0       0       0
 19617 ;;Total ram usage:        0 bytes
 19618 ;; Hardware stack levels used:    1
 19619 ;; Hardware stack levels required when called:    1
 19620 ;; This function calls:
 19621 ;;		i2_putchUART
 19622 ;;		i2_setPWM2duty
 19623 ;; This function is called by:
 19624 ;;		_hp_isr
 19625 ;; This function uses a non-reentrant model
 19626 ;;
 19627                           
 19628                           	psect	text75
 19629  005138                     __ptext75:
 19630                           	opt stack 0
 19631  005138                     _T2int:
 19632                           	opt stack 14
 19633                           
 19634                           ;PWMConfig.h: 36: if(PORTAbits.RA7 || PORTAbits.RA6) {
 19635                           
 19636                           ;incstack = 0
 19637  005138  AE80               	btfss	3968,7,c	;volatile
 19638  00513A  BC80               	btfsc	3968,6,c	;volatile
 19639  00513C  D001               	goto	i2l7040
 19640  00513E  0012               	return	
 19641  005140                     i2l7040:
 19642                           
 19643                           ;PWMConfig.h: 37: setPWM2duty(0);
 19644  005140  0E00               	movlw	0
 19645  005142  6E02               	movwf	i2setPWM2duty@actuator+1,c
 19646  005144  0E00               	movlw	0
 19647  005146  6E01               	movwf	i2setPWM2duty@actuator,c
 19648  005148  ECF0  F025         	call	i2_setPWM2duty	;wreg free
 19649                           
 19650                           ;PWMConfig.h: 38: if(PORTAbits.RA7)
 19651  00514C  AE80               	btfss	3968,7,c	;volatile
 19652  00514E  D003               	goto	i2l7046
 19653                           
 19654                           ;PWMConfig.h: 39: putchUART(101);
 19655  005150  0E65               	movlw	101
 19656  005152  EC3A  F029         	call	i2_putchUART
 19657  005156                     i2l7046:
 19658                           
 19659                           ;PWMConfig.h: 40: if(PORTAbits.RA6)
 19660  005156  AC80               	btfss	3968,6,c	;volatile
 19661  005158  0012               	return	
 19662                           
 19663                           ;PWMConfig.h: 41: putchUART(102);
 19664  00515A  0E66               	movlw	102
 19665  00515C  EC3A  F029         	call	i2_putchUART
 19666  005160  0012               	return	
 19667  005162                     __end_of_T2int:
 19668                           	opt stack 0
 19669                           pclatu	equ	0xFFB
 19670                           pclath	equ	0xFFA
 19671                           tblptru	equ	0xFF8
 19672                           tblptrh	equ	0xFF7
 19673                           tblptrl	equ	0xFF6
 19674                           tablat	equ	0xFF5
 19675                           prodh	equ	0xFF4
 19676                           prodl	equ	0xFF3
 19677                           intcon	equ	0xFF2
 19678                           postinc0	equ	0xFEE
 19679                           fsr0h	equ	0xFEA
 19680                           fsr0l	equ	0xFE9
 19681                           wreg	equ	0xFE8
 19682                           postdec1	equ	0xFE5
 19683                           fsr1h	equ	0xFE2
 19684                           fsr1l	equ	0xFE1
 19685                           bsr	equ	0xFE0
 19686                           indf2	equ	0xFDF
 19687                           postinc2	equ	0xFDE
 19688                           postdec2	equ	0xFDD
 19689                           plusw2	equ	0xFDB
 19690                           fsr2h	equ	0xFDA
 19691                           fsr2l	equ	0xFD9
 19692                           status	equ	0xFD8
 19693                           
 19694 ;; *************** function i2_setPWM2duty *****************
 19695 ;; Defined at:
 19696 ;;		line 23 in file "source/PWMConfig.h"
 19697 ;; Parameters:    Size  Location     Type
 19698 ;;  actuator        2    0[COMRAM] short 
 19699 ;; Auto vars:     Size  Location     Type
 19700 ;;  setPWM2duty     2    4[COMRAM] short 
 19701 ;; Return value:  Size  Location     Type
 19702 ;;                  1    wreg      void 
 19703 ;; Registers used:
 19704 ;;		wreg, status,2, status,0
 19705 ;; Tracked objects:
 19706 ;;		On entry : 0/0
 19707 ;;		On exit  : 0/0
 19708 ;;		Unchanged: 0/0
 19709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19710 ;;      Params:         2       0       0       0       0       0       0
 19711 ;;      Locals:         2       0       0       0       0       0       0
 19712 ;;      Temps:          2       0       0       0       0       0       0
 19713 ;;      Totals:         6       0       0       0       0       0       0
 19714 ;;Total ram usage:        6 bytes
 19715 ;; Hardware stack levels used:    1
 19716 ;; This function calls:
 19717 ;;		Nothing
 19718 ;; This function is called by:
 19719 ;;		_T2int
 19720 ;; This function uses a non-reentrant model
 19721 ;;
 19722                           
 19723                           	psect	text76
 19724  004BE0                     __ptext76:
 19725                           	opt stack 0
 19726  004BE0                     i2_setPWM2duty:
 19727                           	opt stack 14
 19728                           
 19729                           ;PWMConfig.h: 24: short act = 400;
 19730                           
 19731                           ;incstack = 0
 19732  004BE0  0E01               	movlw	1
 19733  004BE2  6E06               	movwf	i2setPWM2duty@act+1,c
 19734  004BE4  0E90               	movlw	144
 19735  004BE6  6E05               	movwf	i2setPWM2duty@act,c
 19736                           
 19737                           ;PWMConfig.h: 25: if(actuator > 400)
 19738  004BE8  BE02               	btfsc	i2setPWM2duty@actuator+1,7,c
 19739  004BEA  D00A               	goto	i2l6844
 19740  004BEC  0E91               	movlw	145
 19741  004BEE  5C01               	subwf	i2setPWM2duty@actuator,w,c
 19742  004BF0  0E01               	movlw	1
 19743  004BF2  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 19744  004BF4  A0D8               	btfss	status,0,c
 19745  004BF6  D004               	goto	i2l6844
 19746                           
 19747                           ;PWMConfig.h: 26: act = 800;
 19748  004BF8  0E03               	movlw	3
 19749  004BFA  6E06               	movwf	i2setPWM2duty@act+1,c
 19750  004BFC  0E20               	movlw	32
 19751  004BFE  D00B               	goto	L16
 19752  004C00                     i2l6844:
 19753                           
 19754                           ;PWMConfig.h: 27: else if(actuator < -400)
 19755  004C00  AE02               	btfss	i2setPWM2duty@actuator+1,7,c
 19756  004C02  D00B               	goto	i2l6848
 19757  004C04  0E70               	movlw	112
 19758  004C06  5C01               	subwf	i2setPWM2duty@actuator,w,c
 19759  004C08  0EFE               	movlw	254
 19760  004C0A  5802               	subwfb	i2setPWM2duty@actuator+1,w,c
 19761  004C0C  B0D8               	btfsc	status,0,c
 19762  004C0E  D005               	goto	i2l6848
 19763                           
 19764                           ;PWMConfig.h: 28: act = 0;
 19765  004C10  0E00               	movlw	0
 19766  004C12  6E06               	movwf	i2setPWM2duty@act+1,c
 19767  004C14  0E00               	movlw	0
 19768  004C16                     L16:
 19769  004C16  6E05               	movwf	i2setPWM2duty@act,c
 19770  004C18  D006               	goto	i2l642
 19771  004C1A                     i2l6848:
 19772                           
 19773                           ;PWMConfig.h: 29: else
 19774                           ;PWMConfig.h: 30: act = actuator + 400;
 19775  004C1A  0E90               	movlw	144
 19776  004C1C  2401               	addwf	i2setPWM2duty@actuator,w,c
 19777  004C1E  6E05               	movwf	i2setPWM2duty@act,c
 19778  004C20  0E01               	movlw	1
 19779  004C22  2002               	addwfc	i2setPWM2duty@actuator+1,w,c
 19780  004C24  6E06               	movwf	i2setPWM2duty@act+1,c
 19781  004C26                     i2l642:
 19782                           
 19783                           ;PWMConfig.h: 31: CCP2CONbits.DC2B = act;
 19784  004C26  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 19785  004C2A  3A03               	swapf	??i2_setPWM2duty,f,c
 19786  004C2C  5066               	movf	3942,w,c	;volatile
 19787  004C2E  1803               	xorwf	??i2_setPWM2duty,w,c
 19788  004C30  0BCF               	andlw	-49
 19789  004C32  1803               	xorwf	??i2_setPWM2duty,w,c
 19790  004C34  6E66               	movwf	3942,c	;volatile
 19791                           
 19792                           ;PWMConfig.h: 32: CCPR2L = act>>2;
 19793  004C36  C005  F003         	movff	i2setPWM2duty@act,??i2_setPWM2duty
 19794  004C3A  C006  F004         	movff	i2setPWM2duty@act+1,??i2_setPWM2duty+1
 19795  004C3E  3404               	rlcf	??i2_setPWM2duty+1,w,c
 19796  004C40  3204               	rrcf	??i2_setPWM2duty+1,f,c
 19797  004C42  3203               	rrcf	??i2_setPWM2duty,f,c
 19798  004C44  3404               	rlcf	??i2_setPWM2duty+1,w,c
 19799  004C46  3204               	rrcf	??i2_setPWM2duty+1,f,c
 19800  004C48  3203               	rrcf	??i2_setPWM2duty,f,c
 19801  004C4A  5003               	movf	??i2_setPWM2duty,w,c
 19802  004C4C  6E67               	movwf	3943,c	;volatile
 19803  004C4E  0012               	return		;funcret
 19804  004C50                     __end_ofi2_setPWM2duty:
 19805                           	opt stack 0
 19806                           pclatu	equ	0xFFB
 19807                           pclath	equ	0xFFA
 19808                           tblptru	equ	0xFF8
 19809                           tblptrh	equ	0xFF7
 19810                           tblptrl	equ	0xFF6
 19811                           tablat	equ	0xFF5
 19812                           prodh	equ	0xFF4
 19813                           prodl	equ	0xFF3
 19814                           intcon	equ	0xFF2
 19815                           postinc0	equ	0xFEE
 19816                           fsr0h	equ	0xFEA
 19817                           fsr0l	equ	0xFE9
 19818                           wreg	equ	0xFE8
 19819                           postdec1	equ	0xFE5
 19820                           fsr1h	equ	0xFE2
 19821                           fsr1l	equ	0xFE1
 19822                           bsr	equ	0xFE0
 19823                           indf2	equ	0xFDF
 19824                           postinc2	equ	0xFDE
 19825                           postdec2	equ	0xFDD
 19826                           plusw2	equ	0xFDB
 19827                           fsr2h	equ	0xFDA
 19828                           fsr2l	equ	0xFD9
 19829                           status	equ	0xFD8
 19830                           
 19831 ;; *************** function i2_putchUART *****************
 19832 ;; Defined at:
 19833 ;;		line 11 in file "source/UARTConfig.h"
 19834 ;; Parameters:    Size  Location     Type
 19835 ;;  val             1    wreg     unsigned char 
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;  val             1    0[COMRAM] unsigned char 
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  1    wreg      void 
 19840 ;; Registers used:
 19841 ;;		wreg
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 19847 ;;      Params:         0       0       0       0       0       0       0
 19848 ;;      Locals:         1       0       0       0       0       0       0
 19849 ;;      Temps:          0       0       0       0       0       0       0
 19850 ;;      Totals:         1       0       0       0       0       0       0
 19851 ;;Total ram usage:        1 bytes
 19852 ;; Hardware stack levels used:    1
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_T2int
 19857 ;; This function uses a non-reentrant model
 19858 ;;
 19859                           
 19860                           	psect	text77
 19861  005274                     __ptext77:
 19862                           	opt stack 0
 19863  005274                     i2_putchUART:
 19864                           	opt stack 14
 19865                           
 19866                           ;incstack = 0
 19867                           ;i2putchUART@val stored from wreg
 19868  005274  6E01               	movwf	i2putchUART@val,c
 19869  005276                     i2l621:
 19870  005276  A2AC               	btfss	4012,1,c	;volatile
 19871  005278  D7FE               	goto	i2l621
 19872                           
 19873                           ;UARTConfig.h: 13: TXREG1 = val;
 19874  00527A  C001  FFAD         	movff	i2putchUART@val,4013	;volatile
 19875  00527E  0012               	return		;funcret
 19876  005280                     __end_ofi2_putchUART:
 19877                           	opt stack 0
 19878                           pclatu	equ	0xFFB
 19879                           pclath	equ	0xFFA
 19880                           tblptru	equ	0xFF8
 19881                           tblptrh	equ	0xFF7
 19882                           tblptrl	equ	0xFF6
 19883                           tablat	equ	0xFF5
 19884                           prodh	equ	0xFF4
 19885                           prodl	equ	0xFF3
 19886                           intcon	equ	0xFF2
 19887                           postinc0	equ	0xFEE
 19888                           fsr0h	equ	0xFEA
 19889                           fsr0l	equ	0xFE9
 19890                           wreg	equ	0xFE8
 19891                           postdec1	equ	0xFE5
 19892                           fsr1h	equ	0xFE2
 19893                           fsr1l	equ	0xFE1
 19894                           bsr	equ	0xFE0
 19895                           indf2	equ	0xFDF
 19896                           postinc2	equ	0xFDE
 19897                           postdec2	equ	0xFDD
 19898                           plusw2	equ	0xFDB
 19899                           fsr2h	equ	0xFDA
 19900                           fsr2l	equ	0xFD9
 19901                           status	equ	0xFD8
 19902                           pclatu	equ	0xFFB
 19903                           pclath	equ	0xFFA
 19904                           tblptru	equ	0xFF8
 19905                           tblptrh	equ	0xFF7
 19906                           tblptrl	equ	0xFF6
 19907                           tablat	equ	0xFF5
 19908                           prodh	equ	0xFF4
 19909                           prodl	equ	0xFF3
 19910                           intcon	equ	0xFF2
 19911                           postinc0	equ	0xFEE
 19912                           fsr0h	equ	0xFEA
 19913                           fsr0l	equ	0xFE9
 19914                           wreg	equ	0xFE8
 19915                           postdec1	equ	0xFE5
 19916                           fsr1h	equ	0xFE2
 19917                           fsr1l	equ	0xFE1
 19918                           bsr	equ	0xFE0
 19919                           indf2	equ	0xFDF
 19920                           postinc2	equ	0xFDE
 19921                           postdec2	equ	0xFDD
 19922                           plusw2	equ	0xFDB
 19923                           fsr2h	equ	0xFDA
 19924                           fsr2l	equ	0xFD9
 19925                           status	equ	0xFD8
 19926                           
 19927                           	psect	rparam
 19928  0000                     pclatu	equ	0xFFB
 19929                           pclath	equ	0xFFA
 19930                           tblptru	equ	0xFF8
 19931                           tblptrh	equ	0xFF7
 19932                           tblptrl	equ	0xFF6
 19933                           tablat	equ	0xFF5
 19934                           prodh	equ	0xFF4
 19935                           prodl	equ	0xFF3
 19936                           intcon	equ	0xFF2
 19937                           postinc0	equ	0xFEE
 19938                           fsr0h	equ	0xFEA
 19939                           fsr0l	equ	0xFE9
 19940                           wreg	equ	0xFE8
 19941                           postdec1	equ	0xFE5
 19942                           fsr1h	equ	0xFE2
 19943                           fsr1l	equ	0xFE1
 19944                           bsr	equ	0xFE0
 19945                           indf2	equ	0xFDF
 19946                           postinc2	equ	0xFDE
 19947                           postdec2	equ	0xFDD
 19948                           plusw2	equ	0xFDB
 19949                           fsr2h	equ	0xFDA
 19950                           fsr2l	equ	0xFD9
 19951                           status	equ	0xFD8
 19952                           
 19953                           	psect	temp
 19954  00004A                     btemp:
 19955                           	opt stack 0
 19956  00004A                     	ds	1
 19957  0000                     int$flags	set	btemp
 19958                           pclatu	equ	0xFFB
 19959                           pclath	equ	0xFFA
 19960                           tblptru	equ	0xFF8
 19961                           tblptrh	equ	0xFF7
 19962                           tblptrl	equ	0xFF6
 19963                           tablat	equ	0xFF5
 19964                           prodh	equ	0xFF4
 19965                           prodl	equ	0xFF3
 19966                           intcon	equ	0xFF2
 19967                           postinc0	equ	0xFEE
 19968                           fsr0h	equ	0xFEA
 19969                           fsr0l	equ	0xFE9
 19970                           wreg	equ	0xFE8
 19971                           postdec1	equ	0xFE5
 19972                           fsr1h	equ	0xFE2
 19973                           fsr1l	equ	0xFE1
 19974                           bsr	equ	0xFE0
 19975                           indf2	equ	0xFDF
 19976                           postinc2	equ	0xFDE
 19977                           postdec2	equ	0xFDD
 19978                           plusw2	equ	0xFDB
 19979                           fsr2h	equ	0xFDA
 19980                           fsr2l	equ	0xFD9
 19981                           status	equ	0xFD8


Data Sizes:
    Strings     539
    Constant    144
    Data        49
    BSS         46
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     46      73
    BANK0           160    108     132
    BANK1           256     49      93
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    printf@cp	PTR const unsigned char  size(2) Largest target is 1
		 -> printf@c(BANK1[1]), 

    printf@f	PTR const unsigned char  size(2) Largest target is 25
		 -> STR_48(CODE[19]), STR_47(CODE[18]), STR_46(CODE[18]), STR_45(CODE[18]), 
		 -> STR_44(CODE[17]), STR_43(CODE[18]), STR_42(CODE[17]), STR_41(CODE[18]), 
		 -> STR_40(CODE[17]), STR_39(CODE[18]), STR_38(CODE[25]), STR_37(CODE[18]), 
		 -> STR_36(CODE[15]), STR_35(CODE[18]), STR_34(CODE[15]), STR_33(CODE[18]), 
		 -> STR_32(CODE[15]), STR_31(CODE[18]), STR_30(CODE[16]), STR_29(CODE[18]), 
		 -> STR_28(CODE[15]), STR_27(CODE[15]), STR_26(CODE[15]), STR_25(CODE[18]), 
		 -> STR_24(CODE[20]), STR_23(CODE[18]), STR_22(CODE[17]), STR_21(CODE[15]), 
		 -> STR_20(CODE[18]), STR_19(CODE[15]), STR_18(CODE[18]), STR_17(CODE[15]), 
		 -> STR_16(CODE[18]), STR_15(CODE[15]), STR_14(CODE[18]), STR_13(CODE[16]), 
		 -> STR_12(CODE[18]), STR_11(CODE[15]), STR_10(CODE[15]), STR_9(CODE[15]), 
		 -> STR_8(CODE[18]), STR_7(CODE[17]), STR_6(CODE[17]), STR_5(CODE[18]), 
		 -> STR_4(CODE[18]), STR_3(CODE[17]), STR_2(CODE[15]), STR_1(CODE[18]), 

    printf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_printf(BANK1[2]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _isr in COMRAM

    _isr->_UARTint
    i1_calcSysVars->i1___fldiv
    i1_calcSysVars->i1___flmul

Critical Paths under _hp_isr in COMRAM

    _T2int->i2_setPWM2duty

Critical Paths under _main in BANK0

    _lcd_init->_lcd_send_byte
    _drawScreen->_drawSNquest
    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf
    _printf->___flsub
    _scale->___flmul
    _putch->_lcd_putc
    _lcd_putc->_lcd_gotoxy
    _lcd_gotoxy->_lcd_send_byte
    _lcd_send_byte->_lcd_send_4bits
    _lcd_read_byte->_lcd_read_4bits
    _fround->___flmul
    ___awdiv->___awmod
    ___llmod->___lldiv
    ___fltol->_scale
    ___flsub->___fladd
    ___fladd->_fround
    _pressENTER->_confirmEdition
    _saveSysParams->_calcSysVars
    _calcSysVars->___flmul
    ___flmul->___awdiv
    _PWM2Config->_setPWM2duty

Critical Paths under _isr in BANK0

    i1_saveSysParams->i1_calcSysVars
    _sysParamInit->i1_calcSysVars

Critical Paths under _hp_isr in BANK0

    None.

Critical Paths under _main in BANK1

    _drawSNquest->_printf
    _drawPassWord->_printf
    _drawMenu->_printf
    _drawChanVal->_printf
    _drawBadPass->_printf
    _drawAdvON->_printf
    _drawAdvOFF->_printf

Critical Paths under _isr in BANK1

    None.

Critical Paths under _hp_isr in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Critical Paths under _hp_isr in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _hp_isr in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _isr in BANK4

    None.

Critical Paths under _hp_isr in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _isr in BANK5

    None.

Critical Paths under _hp_isr in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  446785
                       _EEPROMConfig
                         _PWM2Config
                         _UARTConfig
                     _buttonChecking
                        _clockConfig
                         _drawScreen
                    _interruptConfig
                           _ioConfig
                          _ioInitStt
                           _lcd_init
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             6     6      0    1879
                                             29 BANK0      6     6      0
                     _lcd_send_4bits
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (1) _ioInitStt                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _ioConfig                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _interruptConfig                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _drawScreen                                           0     0      0  433300
                         _drawAdvOFF
                          _drawAdvON
                        _drawBadPass
                        _drawChanVal
                           _drawMenu
                       _drawPassWord
                        _drawSNquest
 ---------------------------------------------------------------------------------
 (2) _drawSNquest                                          3     3      0   61262
                                            105 BANK0      3     3      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawPassWord                                         2     2      0   61169
                                            105 BANK0      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawMenu                                             1     1      0   66490
                                            105 BANK0      1     1      0
                         _lcd_gotoxy
                           _lcd_putc
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawChanVal                                          2     2      0   61169
                                            105 BANK0      2     2      0
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawBadPass                                          0     0      0   61070
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvON                                            0     0      0   61070
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (2) _drawAdvOFF                                           0     0      0   61070
                         _lcd_gotoxy
                             _printf
 ---------------------------------------------------------------------------------
 (3) _printf                                              54    36     18   57332
                                            101 BANK0      4     4      0
                                              0 BANK1     49    31     18
                            ___awdiv
                            ___fladd
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                            ___lldiv
                            ___llmod
                             ___wmul
                           ___xxtofl
                         __div_to_l_
                        __tdiv_to_l_
                             _fround
                            _isdigit
                              _putch
                              _scale
 ---------------------------------------------------------------------------------
 (4) _scale                                               13     9      4   11509
                                             60 BANK0      9     5      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (4) _putch                                                1     1      0    5234
                                             34 BANK0      1     1      0
                           _lcd_putc
 ---------------------------------------------------------------------------------
 (5) _lcd_putc                                             2     2      0    5203
                                             32 BANK0      2     2      0
                         _lcd_gotoxy
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (6) _lcd_gotoxy                                           3     2      1    3738
                                             29 BANK0      3     2      1
                      _lcd_send_byte
 ---------------------------------------------------------------------------------
 (2) _lcd_send_byte                                        3     2      1    1403
                                             26 BANK0      3     2      1
                      _lcd_read_byte
                     _lcd_send_4bits
 ---------------------------------------------------------------------------------
 (3) _lcd_send_4bits                                       5     5      0     272
                                             21 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (3) _lcd_read_byte                                        2     2      0     114
                                             23 BANK0      2     2      0
                     _lcd_read_4bits
 ---------------------------------------------------------------------------------
 (4) _lcd_read_4bits                                       2     2      0      46
                                             21 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (4) _isdigit                                              3     3      0      99
                                             21 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (4) _fround                                              17    13      4   11230
                                             60 BANK0     13     9      4
                            ___awdiv
                            ___awmod
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___awmod                                              6     2      4    1819
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (5) ___awdiv                                              8     4      4    1985
                                             27 BANK0      8     4      4
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (4) __tdiv_to_l_                                         17     9      8     608
                                             21 BANK0     17     9      8
 ---------------------------------------------------------------------------------
 (4) __div_to_l_                                          14     6      8     608
                                             21 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (4) ___xxtofl                                            14    10      4     630
                                             21 BANK0     14    10      4
 ---------------------------------------------------------------------------------
 (4) ___wmul                                               6     2      4     694
                                             21 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     848
                                             34 BANK0      9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     703
                                             21 BANK0     13     5      8
 ---------------------------------------------------------------------------------
 (4) ___fltol                                             10     6      4     568
                                             69 BANK0     10     6      4
                            ___flmul (ARG)
                              _scale (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flsub                                              8     0      8    3697
                                             93 BANK0      8     0      8
                            ___fladd
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             20    12      8    3364
                                             73 BANK0     20    12      8
                             _fround (ARG)
 ---------------------------------------------------------------------------------
 (4) ___flneg                                              4     0      4     142
                                             21 BANK0      4     0      4
 ---------------------------------------------------------------------------------
 (4) ___flge                                              12     4      8     728
                                             21 BANK0     12     4      8
 ---------------------------------------------------------------------------------
 (1) _clockConfig                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _buttonChecking                                       0     0      0   11390
                           _delay_ms
                      _longPressDOWN
                     _longPressENTER
                     _longPressRETRO
                        _longPressUP
                          _pressDOWN
                         _pressENTER
                         _pressRETRO
                            _pressUP
                        _releaseDOWN
                       _releaseENTER
                       _releaseRETRO
                          _releaseUP
 ---------------------------------------------------------------------------------
 (2) _releaseUP                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseRETRO                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseENTER                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _releaseDOWN                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressUP                                              1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _pressRETRO                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _pressENTER                                           0     0      0   10576
                          _checkPass
                     _confirmEdition
 ---------------------------------------------------------------------------------
 (3) _confirmEdition                                       1     1      0   10461
                                             64 BANK0      1     1      0
                      _saveSysParams
 ---------------------------------------------------------------------------------
 (4) _saveSysParams                                        0     0      0   10275
                        _calcSysVars
                        _writeEEPROM
 ---------------------------------------------------------------------------------
 (5) _writeEEPROM                                          2     1      1    1260
                                             21 BANK0      2     1      1
 ---------------------------------------------------------------------------------
 (5) _calcSysVars                                          4     4      0    9015
                                             60 BANK0      4     4      0
                            ___fldiv
                            ___flmul
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    7008
                                             35 BANK0     25    17      8
                            ___awdiv (ARG)
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fldiv                                             25    17      8    1837
                                             21 BANK0     25    17      8
 ---------------------------------------------------------------------------------
 (3) _checkPass                                            7     7      0     115
                                             21 BANK0      7     7      0
 ---------------------------------------------------------------------------------
 (2) _pressDOWN                                            1     1      0       0
                                             21 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _longPressUP                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressRETRO                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressENTER                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _longPressDOWN                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             5     3      2     814
                                             21 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _UARTConfig                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM2Config                                           0     0      0     216
                        _setPWM2duty
                           _t2config
 ---------------------------------------------------------------------------------
 (2) _t2config                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _setPWM2duty                                          6     4      2     216
                                             21 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _EEPROMConfig                                         0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (10) _isr                                                17    17      0    9192
                                              4 BANK0     17    17      0
                            _UARTint
 ---------------------------------------------------------------------------------
 (11) _UARTint                                             1     1      0    9192
                                             45 COMRAM     1     1      0
                          _putchUART
                       _sysParamInit
                    i1_saveSysParams
 ---------------------------------------------------------------------------------
 (12) i1_saveSysParams                                     0     0      0    4795
                      i1_calcSysVars
                      i1_writeEEPROM
 ---------------------------------------------------------------------------------
 (13) i1_writeEEPROM                                       2     1      1     538
                                             20 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (12) _sysParamInit                                        0     0      0    4279
                         _readEEPROM
                      i1_calcSysVars
 ---------------------------------------------------------------------------------
 (13) i1_calcSysVars                                       4     4      0    4257
                                              0 BANK0      4     4      0
                          i1___fldiv
                          i1___flmul
 ---------------------------------------------------------------------------------
 (14) i1___flmul                                          25    17      8    2462
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (14) i1___fldiv                                          25    17      8    1625
                                             20 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (13) _readEEPROM                                          1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (12) _putchUART                                           1     1      0      22
                                             20 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 14
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (15) _hp_isr                                             14    14      0     162
                                              6 COMRAM    14    14      0
                              _T2int
 ---------------------------------------------------------------------------------
 (16) _T2int                                               0     0      0     162
                        i2_putchUART
                      i2_setPWM2duty
 ---------------------------------------------------------------------------------
 (17) i2_setPWM2duty                                       6     4      2     140
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (17) i2_putchUART                                         1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 17
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _EEPROMConfig
   _PWM2Config
     _setPWM2duty
     _t2config
   _UARTConfig
   _buttonChecking
     _delay_ms
     _longPressDOWN
     _longPressENTER
     _longPressRETRO
     _longPressUP
     _pressDOWN
     _pressENTER
       _checkPass
       _confirmEdition
         _saveSysParams
           _calcSysVars
             ___fldiv
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
           _writeEEPROM
     _pressRETRO
     _pressUP
     _releaseDOWN
     _releaseENTER
     _releaseRETRO
     _releaseUP
   _clockConfig
   _drawScreen
     _drawAdvOFF
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawAdvON
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawBadPass
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawChanVal
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawMenu
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _lcd_putc
         _lcd_gotoxy
           _lcd_send_byte
             _lcd_read_byte
               _lcd_read_4bits
             _lcd_send_4bits
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawPassWord
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
     _drawSNquest
       _lcd_gotoxy
         _lcd_send_byte
           _lcd_read_byte
             _lcd_read_4bits
           _lcd_send_4bits
       _printf
         ___awdiv
           ___awmod (ARG)
         ___fladd
           _fround (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___flge
         ___flmul
           ___awdiv (ARG)
             ___awmod (ARG)
           ___awmod (ARG)
         ___flneg
         ___flsub
           ___fladd
             _fround (ARG)
               ___awdiv
                 ___awmod (ARG)
               ___awmod
               ___flmul
                 ___awdiv (ARG)
                   ___awmod (ARG)
                 ___awmod (ARG)
           ___xxtofl (ARG)
         ___fltol
           ___flmul (ARG)
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
           _scale (ARG)
             ___awdiv
               ___awmod (ARG)
             ___awmod
             ___flmul
               ___awdiv (ARG)
                 ___awmod (ARG)
               ___awmod (ARG)
         ___lldiv
         ___llmod
           ___lldiv (ARG)
         ___wmul
         ___xxtofl
         __div_to_l_
         __tdiv_to_l_
         _fround
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
         _isdigit
         _putch
           _lcd_putc
             _lcd_gotoxy
               _lcd_send_byte
                 _lcd_read_byte
                   _lcd_read_4bits
                 _lcd_send_4bits
             _lcd_send_byte
               _lcd_read_byte
                 _lcd_read_4bits
               _lcd_send_4bits
         _scale
           ___awdiv
             ___awmod (ARG)
           ___awmod
           ___flmul
             ___awdiv (ARG)
               ___awmod (ARG)
             ___awmod (ARG)
   _interruptConfig
   _ioConfig
   _ioInitStt
   _lcd_init
     _lcd_send_4bits
     _lcd_send_byte
       _lcd_read_byte
         _lcd_read_4bits
       _lcd_send_4bits

 _isr (ROOT)
   _UARTint
     _putchUART
     _sysParamInit
       _readEEPROM
       i1_calcSysVars
         i1___fldiv
         i1___flmul
     i1_saveSysParams
       i1_calcSysVars
         i1___fldiv
         i1___flmul
       i1_writeEEPROM

 _hp_isr (ROOT)
   _T2int
     i2_putchUART
     i2_setPWM2duty

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100     31      5D       6       36.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6C      84       4       82.5%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     2E      49       1       77.7%
BITSFR_1             0      0       0      40        0.0%
SFR_1                0      0       0      40        0.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     12A       9        0.0%
DATA                 0      0     12A      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.38 build -256452561 
Symbol Table                                                                                   Mon Oct 31 00:43:26 2016

            ___fldiv@aexp 008D              ___fldiv@bexp 008C              ___fldiv@sign 0081  
         ?_lcd_send_4bits 0001               i1___fldiv@a 0019               i1___fldiv@b 0015  
        i2setPWM2duty@act 0005                        l81 516A                        l90 4E6E  
          ?_lcd_send_byte 007A              ___awdiv@sign 0080                        _fd 014A  
                      _ie 0049             _holdRETROcont 0048               i1___flmul@a 0019  
             i1___flmul@b 0015          ?i1_saveSysParams 0001                        _pi 014F  
                      bsr 000FE0           ?_confirmEdition 0001       ___wmul@multiplicand 0077  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               drawMenu@adv 00C9                       l342 1F3E  
                     l416 4428                       l282 51A4                       l450 3B06  
                     l370 21C6                       l700 2FEA                       l364 210A  
                     l356 204A                       l348 1FBA                       l453 3B2E  
                     l373 2228                       l462 3BA6                       l550 4E32  
                     l367 2164                       l456 3B56                       l465 3BCE  
                     l642 4802                       l459 3B7E                       l723 5102  
                     l574 3734                       l398 41A4                       l664 2E28  
                     l578 375C                       l691 2F70                       l596 3822  
                     l676 2EC6                       l828 0890                       l688 2F58  
                     l794 0A20              __CFG_CPB$OFF 000000                       _PR2 000FBB  
            __CFG_CPD$OFF 000000    __size_ofi1_calcSysVars 014C                       _isr 0018  
 __end_of_interruptConfig 529C              ___awmod@sign 007A                       prod 000FF3  
                     wreg 000FE8                _TXSTA1bits 000FAC              __CFG_IESO$ON 000000  
            drawSNquest@i 00CA              ___flmul@aexp 0090              ___flmul@bexp 0095  
     __end_ofi2_putchUART 5280              ___flmul@sign 008F              ___flmul@temp 009A  
            ___flmul@prod 0096              __CFG_LVP$OFF 000000             i1___fldiv@grs 0028  
           i1___fldiv@rem 0022              ___fltol@exp1 00AE                      l1071 36DE  
                    l1400 1D72                      l1081 3518                      l1250 45B2  
                    l1411 1E18                      l1403 1D1A                      l1260 4790  
                    l1430 1752                      l1175 33C6                      l1344 13D6  
                    l1168 3302                      l1409 1DAA                      l1361 154A  
                    l1345 13CA                      l1169 3346                      l1370 15DE  
                    l1346 1396                      l1452 30B6                      l1437 19EE  
                    l1447 1B00                      l1439 1A5C                      l1466 31BE  
                    l1467 31D6                      l1459 3162                      l4610 1C70  
                    l4602 1C42                      l4620 1CEE                      l6150 4A5E  
                    l6142 49F6                      l6152 4A66                      l4640 1D94  
                    l4560 1B62                      l6146 4A0C                      l4634 1D6E  
                    l4570 1B90                      l6156 4A6E                      l4628 1D26  
                    l4580 1BC0                      l8012 11CA                      l6246 4E56  
                    l4670 1E96                      l4646 1DBE                      l4590 1BEE  
                    l4566 1B86                      l8110 3608                      l8006 1104  
                    l6600 430A                      l4680 1EDC                      l4672 1EAA  
                    l4656 1E12                      l6520 3F76                      l8040 32AE  
                    l8024 512E                      l9000 2016                      l6610 4338  
                    l4682 1EE0                      l4674 1ECC                      l4666 1E68  
                    l4586 1BE4                      l8130 3694                      l8034 3274  
                    l9010 2058                      l6532 3FDE                      l8220 3F2C  
                    l8212 3F00                      l8140 36C4                      l7412 498C  
                    l9020 20D6                      l9012 207A                      l6606 432C  
                    l6630 4E14                      l6526 3F8E                      l8222 3F36  
                    l8142 36D4                      l8134 36A8                      l8118 365C  
                    l8070 337C                      l7406 496E                      l9110 2C8E  
                    l9014 209C                      l6544 401E                      l8160 3426  
                    l8208 3EEC                      l8240 454C                      l8080 33AC  
                    l7424 49C8                      l9112 2CB0                      l9104 2C4E  
                    l9040 215E                      l9032 2130                      l9008 2044  
                    l6570 4D5C                      l6618 434A                      l6538 3FFC  
                    l8226 3F52                      l8218 3F1C                      l8306 3228  
                    l8090 358E                      l8082 33BC                      l8074 3390  
                    l7418 49AA                      l9130 2D5E                      l9018 20BE  
                    l9210 440E                      l6732 4C90                      l6564 4D3E  
                    l7532 19D8                      l6636 4E38                      l6548 402A  
                    l6556 4042                      l8164 3474                      l8236 4536  
                    l8260 473A                      l7436 4E96                      l7444 5038  
                    l9124 2D20                      l9108 2C6C                      l9116 2CD2  
                    l9052 21C0                      l9044 2192                      l9028 2104  
                    ?_isr 0001                      l6726 4C72                      l6646 4F36  
                    l6574 4D6E                      l6582 428E                      l7462 16E0  
                    l8174 3564                      l8182 4F76                      l7702 13AA  
                    l8238 4546                      l9118 2CEA                      l9070 2256  
                    l9150 41AE                      l9206 43F4                      l6736 4CA2  
                    l7480 173A                      l7464 16E6                      l7456 16BC  
                    l8168 34C6                      l7704 13B0                      l7624 1238  
                    l8192 3E7E                      l8248 45A0                      l8264 477E  
                    l8256 4724                      l8280 30EE                      l8096 35B4  
                    l9136 2D9C                      l9144 2DDA                      l9064 2222  
                    l9056 21F4                      l9160 41E0                      l6594 42EC  
                    l7562 1AD2                      l7538 1A02                      l7490 177A  
                    l7482 1740                      l7474 1716                      l7466 16F8  
                    l9242 376C                      l9226 3720                      l7810 168C  
                    l7802 1674                      l7642 1282                      l7618 1214  
                    l8258 4734                      l8282 30F6                      l8274 30C6  
                    l8602 01AC                      l9090 2BD6                      l9082 2BA4  
                    l9074 2B5E                      l9154 41C4                      l6772 47EE  
                    l6588 42A0                      l7572 1B20                      l7564 1AE6  
                    l7548 1A56                      l9236 374E                      l9244 3798  
                    l9228 3728                      l7804 1678                      l7732 1448  
                    l7708 13BA                      l7660 12DA                      l7652 12B0  
                    l7636 126E                      l7628 1242                      l8292 31A0  
                    l8284 3106                      l8700 0546                      l8620 0246  
                    l8612 0218                      l9084 2BB6                      l9420 48CA  
                    l7574 1B2A                      l7558 1AAC                      l7486 1766  
                    l9262 37F4                      l7726 1438                      l7718 13FA  
                    l8294 31B0                      l8286 3144                      l7822 4466  
                    l7590 4AB6                      l7582 4A7A                      l8710 05CA  
                    l8630 0296                      l8614 021E                      l8606 01F2  
                    l9086 2BC0                      l9430 48EC                      l9422 48D2  
                    l9350 45FC                      l6768 47CC                      l9272 3828  
                    l9256 37D2                      l9248 37AA                      l7760 1592  
                    l7728 143E                      l7736 145A                      l7648 12A6  
                    l7592 4AC4                      l7584 4A88                      l8720 0634  
                    l8640 02DC                      l8624 026C                      l8608 0208  
                    l9096 2BF2                      l9192 439A                      l9432 48F2  
                    l9424 48D8                      l9266 3808                      l9602 3034  
                    l9514 2EDE                      l7754 157C                      l7770 15B2  
                    l7746 152A                      l7690 1316                      l7834 449A  
                    l7850 44EA                      l8706 0598                      l8634 02AA  
                    l8626 0278                      l8650 0338                      l9434 48F8  
                    l9426 48DE                      l9442 4910                      l9346 45F2  
                    l9276 383A                      l9612 3056                      l9524 2F0C  
                    l9516 2EEE                      l7780 15D8                      l7764 159E  
                    l7772 15B8                      l7836 44A6                      l7828 447C  
                    l7588 4AA8                      l7596 4AD0                      l8820 0AC0  
                    l8812 0A94                      l8724 06AC                      l8644 02F4  
                    l8636 02C4                      l8628 027E                      l9188 4384  
                    l9436 4900                      l9428 48E6                      l9364 4638  
                    l9614 305C                      l9606 3040                      l9534 2F26  
                    l7790 1634                      l7854 44FE                      l7846 44DC  
                    l7838 44AC                      l7870 4692                      l8750 0778  
                    l8742 0748                      l8726 06B2                      l8582 00DC  
                    l9198 43B6                      l9438 4908                      l9358 461A  
                    l9536 2F2C                      l8840 0B5E                      l8832 0B06  
                    l8808 0A6C                      l8752 078C                      l8656 0352  
                    l8648 02FA                      l9368 4642                      l8922 3BB8  
                    l8914 3B90                      l8906 3B68                      l9562 2F9E  
                    l9554 2F80                      l9538 2F3A                      l9474 2E42  
                    l7794 1646                      l7890 46FE                      l7882 46DC  
                    l7874 46A6                      l7866 4682                      l8818 0ABA  
                    l8770 0872                      l8762 0842                      l8746 076A  
                    l8738 06F8                      l8690 04AC                      l8682 0428  
                    l8666 03A4                      l8578 00C6                      l8932 3BE0  
                    l9572 2FB8                      l9484 2E72                      l9476 2E52  
                    l7876 46B2                      l8860 0C16                      l8852 0BCA  
                    l8836 0B2E                      l8780 08B8                      l8764 0850  
                    l8756 07B4                      l8748 0770                      l8588 010E  
                    l8596 0184                      l9574 2FBE                      l9494 2E94  
                    l7798 1668                      l7878 46B8                      l7886 46EA  
                    l7974 2856                      l7966 276A                      l8870 0C64  
                    l8862 0C22                      l8854 0BD4                      l8846 0B92  
                    l8790 09F6                      l8774 0894                      l8694 04DE  
                    l8880 3AEC                      l9592 3004                      l9576 2FCC  
                    l9496 2E9A                      l9488 2E7E                      l8792 0A04  
                    l8784 091A                      l8768 085E                      l8696 04F4  
                    l8890 3B18                      l9594 3014                      l9498 2EA8  
                    l7994 0F68                      l8874 0CEE                      l8866 0C3C  
                    l8858 0C0C                      l8698 0530                      l7988 0EA2  
                    l8796 0A12                      l8876 0D04                      l8980 1F86  
                    l8972 1F38                      l8964 1F0A                      l7998 0F94  
                    l8990 1FC8                      STR_1 7E8F                      l8992 1FDA  
                    STR_2 7F95                      STR_3 7F63                      l8898 3B40  
                    l8994 1FEC                      l8978 1F74                      STR_4 7E47  
                    STR_5 7F0D                      l8988 1FB4                      STR_6 7F1F  
                    STR_7 7F30                      l8998 1FFE                      STR_8 7EB3  
                    STR_9 7FB3              printf@tmpval 011E                      u4710 1E7C  
                    u9110 1360                      u7360 4008                      u9120 1378  
                    u7370 400A                      u9130 137A                      u7550 4316  
                    u7560 4318                      u8700 4B28                      u8710 4B48  
                    u8708 4B2C                      u8910 197A                      u8718 4B4C  
                    u9535 3D2C                      u9631 3250                      u8735 4978  
                    u8815 4EAE                      u9536 3D2E                      u8680 4AFC  
                    u8736 497A                      u8816 4EB0                      u8690 4B0E  
                    u8915 196E                      u9651 328A                      u8755 4996  
                    u8756 4998                      u8686 4AFE                      u8775 49B4  
                    u8776 49B6                      u8698 4B12                      u8795 49D2  
                    u9860 3E9E                      u8796 49D4                      u8990 1AC0  
                    u9865 3E92             __CFG_FCMEN$ON 000000               lcd_putc@cha 0081  
         __end_of_UARTint 4F14                      _main 50E2             i1___flmul@grs 0023  
        lcd_read_byte@low 0077                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr0l 000FE9                      fsr2h 000FDA                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9                      btemp 004A  
           __CFG_BORV$285 000000            ??_drawPassWord 00C9                      pclat 000FFA  
                    prodh 000FF4                      prodl 000FF3                      start 00B2  
         ?_longPressENTER 0001           ___fldiv@new_exp 0086      __size_of_calcSysVars 014E  
         ?_longPressRETRO 0001             drawSNquest@tq 00C9     __size_of_sysParamInit 0108  
    __end_of_EEPROMConfig 52A2              ___param_bank 000010               _writeEEPROM 518A  
                   ??_isr 0064            i1___fldiv@aexp 002D            i1___fldiv@bexp 002C  
            _BAUDCON1bits 000FB8            i1___fldiv@sign 0021             ___fltol@sign1 00AD  
         __end_of___fladd 169E                     ?_main 0001           __end_of___fldiv 1F04  
         __end_of___awdiv 4508           __end_of___flneg 4F88                     _EEADR 000FA9  
                   STR_10 7FA4                     STR_11 7FD1                     STR_20 7E8F  
                   STR_12 7ED7                     STR_21 7F95                     STR_13 7F85  
                   STR_30 7F85                     STR_22 7F63                     STR_14 7E6B  
                   STR_23 7E47                     STR_31 7E6B                     STR_15 7FC2  
                   STR_32 7FC2                     STR_40 7F41                     STR_16 7E59  
                   STR_24 7DFC                     STR_33 7E59                     STR_25 7EB3  
                   STR_17 7FEF                     STR_41 7EC5                     STR_26 7FB3  
                   STR_34 7FEF                     STR_42 7F52                     STR_18 7E7D  
                   STR_35 7E7D                     STR_43 7EC5                     STR_27 7FA4  
                   STR_19 7FE0                     STR_28 7FD1                     STR_36 7FE0  
                   STR_44 7F74           __end_of___awmod 4708                     STR_29 7ED7  
                   STR_45 7EE9                     STR_37 7E35                     STR_46 7EFB  
                   STR_38 7DE3                     STR_47 7EA1                     STR_39 7E23  
                   STR_48 7E10           __end_of___flmul 1B44           __end_of___flsub 4DBE  
         __end_of___fltol 3F64           __end_of___lldiv 45C4                     u11410 37E8  
                   u12107 4628                     u11420 37EA           ___awdiv@divisor 007D  
                   u12117 4A9C                     u12127 49DC                     u12137 4E5E  
         __end_of___llmod 47A2                     u11610 2E5A             lcd_init@F7567 0157  
                   u11380 37CA                     u10820 0888                     u11390 37CC  
                   u12087 45E2                     u11720 2EF6                     u11616 2E5C  
                   u12097 460A                     u11830 2F88                     u11726 2EF8  
                   u11940 301C                     u11836 2F8A                     u11946 301E  
                   i1l282 51C2                     i1l621 526A                     i1l288 5200  
                   i1l720 006A                     i2l621 5276               ?_UARTConfig 0001  
                   i2l642 4C26                     i2l716 4BA4           ___awdiv@counter 007F  
                   _T2int 5138               ?_PWM2Config 0001             __CFG_WRT0$OFF 000000  
           __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000             __CFG_WRT3$OFF 000000  
          __CFG_EBTR0$OFF 000000            __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000  
                   _fData 00CC            __CFG_EBTR3$OFF 000000             __CFG_WRTB$OFF 000000  
           __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000            __CFG_EBTRB$OFF 000000  
         __end_of_dpowers 7DE3            i1___flmul@aexp 0022            i1___flmul@bexp 0027  
                   _selSN 00D7         lcd_read_byte@high 0078                     _scale 0D24  
         __end_of_isdigit 5138        __CFG_MCLRE$EXTMCLR 000000            i1___flmul@sign 0021  
          i1___flmul@temp 002C            i1___flmul@prod 0028                     _putch 521A  
                   tablat 000FF5             drawPassWord@i 00C9           __end_of_pressUP 406E  
            _sysParamInit 406E                     plusw2 000FDB              ?_setPWM2duty 0075  
                   status 000FD8           ??_lcd_read_byte 0077        __size_ofi1___fldiv 02B4  
          __CFG_HFOFST$ON 000000        __size_ofi1___flmul 0350              putchUART@val 0015  
           i1_calcSysVars 399A              ?_longPressUP 0001           __initialization 4836  
   __end_ofi1_writeEEPROM 51C8              __end_of_main 510E           ??_lcd_send_byte 007B  
   __end_of_saveSysParams 3D34             lcd_gotoxy@pos 007E              ?_releaseDOWN 0001  
             i2_putchUART 5274                    ??_main 00CC             __activetblptr 000002  
          __CFG_PLLCFG$ON 000000                    ?_T2int 0001      __size_of__tdiv_to_l_ 019E  
        ?_interruptConfig 0001      __size_of_clockConfig 0028          __end_of_t2config 51E0  
               ??_UARTint 002E            setPWM2duty@act 0079          ___llmod@dividend 0082  
                  ?_scale 009C                    _EEDATA 000FA8                    _CCPR2L 000F67  
                  _EECON2 000FA7          ___awdiv@dividend 007B                    ?_putch 0001  
                  i1l1400 2A34                    i1l1411 2AA0                    i1l1430 2306  
                  i1l1447 25A2                    i1l1439 251C                    i1l8402 2A68  
                  i1l8322 28D4                    i1l8412 2A9C                    i1l8430 2B32  
                  i1l8422 2AE4                    i1l8342 2914                    i1l8326 28D8  
                  i1l8426 2B08                    i1l8346 2918                    i1l8436 2B3E  
                  i1l8428 2B16                    i1l8460 22B6                    i1l8438 2B40  
                  i1l8390 2A32                    i1l8366 2986                    i1l8358 295E  
                  i1l8534 24E4                    i1l8462 22C6                    i2l7040 5140  
                  i1l8384 2A0C                    i1l8376 29E4                    i1l8560 258C  
                  i1l8544 2518                    i1l8528 24C6                    i1l8570 25C0  
                  i1l8554 2560                    i1l8482 2312                    i1l8458 22B2  
                  i1l9450 4EF8                    i1l8396 2A4A                    i1l8476 22F2  
                  i2l7046 5156                    i1l8558 257E                    i1l8486 2324  
                  i1l8478 22F6                    i1l9454 4F06                    i2l6844 4C00  
                  i2l6848 4C1A                    _RCREG1 000FAE      __size_of_drawBadPass 002E  
                  _SPBRG1 000FAF            ?i1_calcSysVars 0001                    _TXREG1 000FAD  
        __end_of___xxtofl 323A      __size_of_drawChanVal 02AE          __end_of_delay_ms 4E90  
                  _UPisLP 0046          __end_of_ioConfig 5028       __size_of_UARTConfig 0038  
          __CFG_PWRTEN$ON 000000            __CFG_XINST$OFF 000000             _DOWNsecurLock 0144  
     __size_of_PWM2Config 0066          __end_of__powers_ 7DBB      __size_of_drawSNquest 00D4  
            _CCPTMRS0bits 000F49          __end_of_drawMenu 2286          __end_of_lcd_init 4666  
                  ___flge 33D8          __end_of_lcd_putc 4AEE                 ??___fladd 00B1  
                  ___wmul 4FC0                 ??___fldiv 007D                 ??___awdiv 007F  
               ??___flneg 0079            __CFG_STVREN$ON 000000                 ??___awmod 0079  
               ??___flmul 008B                 ??___flsub 00C5                 ??___fltol 00A9  
               ??___lldiv 007D                 ??___llmod 008A                    _contra 014B  
                  _hp_isr 0008                    _selKMT 00D6                    _fround 25D6  
                  clear_0 489C                    clear_1 48A8                    clear_2 48B4  
        ___awdiv@quotient 0081           ___awmod@divisor 0077           ___awmod@counter 0079  
                  _printf 00B6         __end_ofi1___fldiv 2B5C       _lcd_send_4bits$1602 0075  
     _lcd_send_4bits$1603 0076       _lcd_send_4bits$1604 0077       _lcd_send_4bits$1605 0078  
       __end_ofi1___flmul 25D6          ??_lcd_read_4bits 0075      __end_of_drawPassWord 427C  
            __pdataCOMRAM 002F                 ??_isdigit 0075              __mediumconst 7D52  
                  tblptrh 000FF7                    tblptrl 000FF6                    tblptru 000FF8  
               ??_pressUP 0075                ___flge@ff1 0075                ___flge@ff2 0079  
            ___xxtofl@arg 007F              ___xxtofl@exp 007E              ___xxtofl@val 0075  
              __accesstop 0060   __end_of__initialization 48BA           __CFG_PBADEN$OFF 000000  
   __size_of_EEPROMConfig 0006                ___flneg@f1 0075               _UPsecurLock 0149  
           ___rparam_used 000001                ___fltol@f1 00A5          ??_lcd_send_4bits 0075  
         writeEEPROM@data 0075             __end_of_T2int 5162          ??_confirmEdition 00A0  
          __pcstackCOMRAM 0001              __pidataBANK0 5280              __pidataBANK1 5208  
      __size_of_checkPass 008E             __end_of_scale 11F6             __end_of_putch 5228  
            _actualScreen 00D1            lcd_gotoxy@fila 007D                __div_to_l_ 3568  
                 ??_T2int 0007        __size_of_ioInitStt 0008             ?_releaseENTER 0001  
      __size_of_drawAdvON 002E             ?_releaseRETRO 0001              _EEPROMConfig 529C  
       lcd_gotoxy@address 007F           __div_to_l_@exp1 0082           __div_to_l_@cntr 0081  
                 ??_scale 00A0           __div_to_l_@quot 007D                   ??_putch 0082  
        ??_longPressENTER 0075                __pbssBANK0 00CC                __pbssBANK1 0131  
         ??i1_calcSysVars 002E          ??_longPressRETRO 0075             __div_to_l_@f1 0075  
           __div_to_l_@f2 0079      __size_of_setPWM2duty 0094            _RETROsecurLock 0148  
      __CFG_CCP2MX$PORTC1 000000            i2putchUART@val 0001              ?_writeEEPROM 0075  
          lcd_send_byte@n 007A                   ?___flge 0075                   ?___wmul 0075  
      __size_of_releaseUP 000C        __CFG_CCP3MX$PORTB5 000000      __size_of_longPressUP 0054  
               ?_t2config 0001                   ?_hp_isr 0001                   ?_fround 009C  
                 ?_printf 0100                _drawAdvOFF 50B4        __size_of_pressDOWN 00FA  
   i2setPWM2duty@actuator 0001              ??_UARTConfig 0075      __size_of_releaseDOWN 000C  
          ??_releaseENTER 0075    __size_ofi2_setPWM2duty 0070            ??_releaseRETRO 0075  
            ??_PWM2Config 007B                 ?___xxtofl 0075           __CFG_WDTEN$SWON 000000  
               ?_delay_ms 0075  __size_ofi1_saveSysParams 0124                _drawScreen 48C8  
              _lcd_gotoxy 5028                 ?_ioConfig 0001        __size_of_putchUART 000C  
  __size_of_longPressDOWN 000C                   _SPBRGH1 000FB0                   _UARTint 4ED2  
               ?_drawMenu 0001                 ?_lcd_init 0001              _densidadMasa 00D9  
                 _i16Data 0043         __end_of_checkPass 4A74                 ?_lcd_putc 0001  
 __size_of_buttonChecking 0262            _tempLastScreen 00D8             ??_calcSysVars 009C  
              _holdUPcont 00D3                _readEEPROM 51F4         __end_of_ioInitStt 5294  
       __end_of__npowers_ 7D87                   __Hparam 0000                _scale$2841 00A0  
                 __Lparam 0000         __end_of_drawAdvON 50B4        __end_of_UARTConfig 4FC0  
              checkPass@i 007A        __end_of_PWM2Config 4D22           __size_of___flge 0190  
                 ___fladd 11F6                   ___fldiv 1B44                   ___awdiv 444A  
                 ___flneg 4F50                   ___awmod 4666                   ___flmul 169E  
                 ___flsub 4D76                   ___fltol 3E58                   ___lldiv 4508  
         __size_of___wmul 0036                   ___llmod 4708                ??_t2config 0075  
   __size_of_drawPassWord 0106           __size_of_hp_isr 4BD8                   __pcinit 4836  
         __size_of_fround 02D2              ?i2_putchUART 0001                   __ramtop 0600  
                 __ptext0 50E2                   __ptext1 45C4                   __ptext2 528C  
                 __ptext3 4FF6                   __ptext4 5294                   __ptext5 48C8  
                 __ptext6 4376                   __ptext7 4176                   __ptext8 1F04  
                 __ptext9 2B5C           __size_of_printf 0C6E               ?__div_to_l_ 0075  
                 _dpowers 7DBB                 _T2CONbits 000FBA                   _isdigit 510E  
            __size_of_isr 009A                ??___xxtofl 0079          ___awmod@dividend 0075  
              ??_delay_ms 0077                ??_ioConfig 0075                   _pressUP 3F64  
               _ENTERisLP 0145                   _proceso 0140                   _questSN 0142  
              ??_drawMenu 00C9                ??_lcd_init 007D         __end_of_releaseUP 5250  
          __pintcode_body 4B68                ??_lcd_putc 0080      end_of_initialization 48BA  
       i1calcSysVars@temp 0060      lcd_send_byte@address 007C                 i1u1028_20 2AF2  
               i1u1047_20 256E                 i1u1039_20 2488                 i1u1039_25 247E  
           __Lmediumconst 7D52                 i1u1148_25 3E50                 i1u1148_26 3E52  
                 int_func 4B68             i2_setPWM2duty 4BE0         __end_of_pressDOWN 4376  
   __end_of_lcd_read_byte 4E04           ___lldiv@divisor 0079              _drawPassWord 4176  
         ___lldiv@counter 0081           lcd_read_4bits@n 0076             _longPressDOWN 525C  
     __end_of_calcSysVars 399A             readEEPROM@adr 0015                   printf@c 0130  
                 printf@f 0100         __end_of_putchUART 5274                   postdec1 000FE5  
                 postdec2 000FDD                   postinc0 000FEE                   postinc2 000FDE  
              _pressENTER 36F0                _pressRETRO 4E04                 _RETROisLP 0147  
          __tdiv_to_l_@f1 0075            __tdiv_to_l_@f2 0079     __end_of_lcd_send_byte 4ED2  
           ??__tdiv_to_l_ 007D                 _PORTAbits 000F80                 _PORTBbits 000F81  
             ?_drawAdvOFF 0001             ??_clockConfig 0075              _holdDOWNcont 0047  
             ___fladd@grs 00BC             ___xxtofl@sign 007D                 _TRISAbits 000F92  
               _TRISBbits 000F93                 _TRISCbits 000F94               ?_drawScreen 0001  
             ?_lcd_gotoxy 007D                 i1___fldiv 28A8                 i1___flmul 2286  
             ___fldiv@grs 0088               ___fldiv@rem 0082             ??_drawBadPass 00C9  
          _ProcessStarted 00D0    __size_ofi1_writeEEPROM 001E             ??_drawChanVal 00C9  
  __size_of_saveSysParams 0124  __size_of_interruptConfig 0008               ___flmul@grs 0091  
       ??i1_saveSysParams 002E            ?i2_setPWM2duty 0001               ?_readEEPROM 0001  
           ??_drawSNquest 00C9               printf@width 0128               _CCP2CONbits 000F66  
       confirmEdition@yes 00A0      __end_of_releaseENTER 5244       __size_of__div_to_l_ 0188  
    __end_of_releaseRETRO 5236            ?_longPressDOWN 0001               _ECCP2ASbits 000F64  
          __end_of___flge 3568      __size_of_writeEEPROM 0020            __end_of___wmul 4FF6  
           __pidataCOMRAM 51E0            __end_of_hp_isr 4BE0            __end_of_fround 28A8  
     setPWM2duty@actuator 0075            __end_of_printf 0D24       start_initialization 4836  
     __end_of__tdiv_to_l_ 33D8                ?i1___fldiv 0015               __end_of_isr 00B2  
              ?i1___flmul 0015       __end_of_clockConfig 518A            _buttonChecking 2E0A  
             _calcSysVars 384C           ___llmod@divisor 0086       __end_of_drawBadPass 5086  
         ___llmod@counter 008A       __size_of_drawAdvOFF 002E              _lastSttENTER 0040  
            _lastSttRETRO 0041       __end_of_drawChanVal 2E0A                  ??___flge 007D  
     __size_of_drawScreen 0090       __size_of_lcd_gotoxy 0030             i1_writeEEPROM 51AA  
                ??___wmul 0079       __end_of_drawSNquest 444A               ?_pressENTER 0001  
             ?_pressRETRO 0001               __pdataBANK0 00D9               __pdataBANK1 014B  
         lcd_send_4bits@n 0079                  ??_hp_isr 0007             _saveSysParams 3C10  
                ??_fround 00A0                  ??_printf 00C5         __size_of_t2config 0018  
               ___fladd@a 00AD                 ___fladd@b 00A9                fround@prec 00A8  
     __size_of_readEEPROM 0014                 ___fldiv@a 0079                 ___fldiv@b 0075  
    __size_ofi2_putchUART 000C                 ___flmul@a 0087                 ___flmul@b 0083  
             __pbssCOMRAM 0043                 ___flsub@a 00C1                 ___flsub@b 00BD  
          writeEEPROM@adr 0076             __pcstackBANK0 0060             __pcstackBANK1 0100  
               _calFactor 0131    __end_of_buttonChecking 306C         __size_of___xxtofl 01CE  
                ?_UARTint 0001              _isdigit$2357 0076         __size_of_delay_ms 0046  
       __size_of_ioConfig 0032           ??i2_setPWM2duty 0003             ?_sysParamInit 0001  
 __size_of_lcd_read_4bits 007A             ??_setPWM2duty 0077         __size_of_drawMenu 0382  
       __size_of_lcd_init 00A2         __size_of_lcd_putc 007A     __end_ofi1_calcSysVars 3AE6  
       i1___fldiv@new_exp 0026                 _checkPass 49E6           ??_longPressDOWN 0075  
           ??_longPressUP 0075         ??_interruptConfig 0075            ?i1_writeEEPROM 0015  
               __pintcode 0008             __pmediumconst 7D52                  ?___fladd 00A9  
                ?___fldiv 0075                  ?___awdiv 007B                  ?___flneg 0075  
                ?___awmod 0075                  ?___flmul 0083                  ?___flsub 00BD  
                ?___fltol 00A5                 _ioInitStt 528C                  ?___lldiv 0075  
                ?___llmod 0082                 __npowers_ 7D53            ?_saveSysParams 0001  
               _drawAdvON 5086             ??_releaseDOWN 0075               __pintcodelo 0018  
        __CFG_PRICLKEN$ON 000000               __tdiv_to_l_ 323A   __size_of_lcd_send_4bits 008E  
            ??__div_to_l_ 007D   __size_of_confirmEdition 012A               _clockConfig 5162  
                ?_isdigit 0001            __size_of_T2int 002A                 _lastSttUP 0042  
                ?_pressUP 0001               ??i1___fldiv 001D               ??i1___flmul 001D  
         ?_buttonChecking 0001               _drawBadPass 5058            __size_of_scale 04D2  
          ??_sysParamInit 002E            __size_of_putch 000E       __size_of_pressENTER 015C  
   __size_of_releaseENTER 000E       __size_of_pressRETRO 0046               _drawChanVal 2B5C  
   __size_of_releaseRETRO 000E             _tempNumCortes 015B            ___wmul@product 0079  
                _LATBbits 000F8A                  _LATCbits 000F8B                 _releaseUP 5244  
              ?_checkPass 0001   lcd_init@LCD_INIT_STRING 007E                 delay_ms@i 0078  
                _DOWNisLP 0045               _drawSNquest 4376                  _IPR1bits 000F9F  
                _PIE1bits 000F9D                 _numCortes 00E1                  _PIR1bits 000F9E  
      __end_of__div_to_l_ 36F0       __end_of_setPWM2duty 4836                  _RCONbits 000FD0  
              UARTint@sas 002E   __size_of_longPressENTER 006C          __CFG_WDTPS$32768 000000  
               _pressDOWN 427C   __size_of_longPressRETRO 003C                ?_ioInitStt 0001  
              ?_drawAdvON 0001                 _putchUART 5268       __end_of_longPressUP 4D76  
            ??_drawAdvOFF 00C9         ___wmul@multiplier 0075                 lcd_init@i 0082  
              printf@flag 011C                printf@fval 012A                printf@prec 012E  
             _tVarProceso 00E3           i1_saveSysParams 3D34              _releaseENTER 5236  
     __end_of_releaseDOWN 525C              ??_drawScreen 00CC              _releaseRETRO 5228  
            ??_lcd_gotoxy 007E                 copy_data0 484A                 copy_data1 486A  
               copy_data2 488A          __size_of_UARTint 0042              ??_readEEPROM 0015  
              ?_releaseUP 0001                  _m3Xcorte 0033                _EECON1bits 000FA6  
         ??i1_writeEEPROM 0016        __end_of_drawAdvOFF 50E2                  __Hrparam 0000  
             _lastSttDOWN 003F                  __Lrparam 0000        __CFG_BOREN$SBORDIS 000000  
         ??_saveSysParams 00A0                ?_pressDOWN 0001         __CFG_P2BMX$PORTC0 000000  
      __end_of_drawScreen 4958        __end_of_lcd_gotoxy 5058                  _t2config 51C8  
        __size_of___fladd 04A8          __size_of___fldiv 03C0          __size_of___awdiv 00BE  
        __size_of___flneg 0038          __size_of___awmod 00A2          __size_of___flmul 04A6  
        __size_of___flsub 0048          __size_of___fltol 010C          __size_of___lldiv 00BC  
        __size_of___llmod 009A                ?_putchUART 0001               _fround$2840 00A0  
             _fround$2839 00A4                _ANSELAbits 000F38                _ANSELCbits 000F3A  
             _menuSection 00D4                  ___xxtofl 306C        __end_of_readEEPROM 5208  
                _diamTubo 00DD          __size_of_isdigit 002A    __size_of_lcd_read_byte 0046  
                _delay_ms 4E4A             ?_EEPROMConfig 0001                  _ioConfig 4FF6  
                __ptext10 5058                  __ptext11 5086                  __ptext20 4DBE  
                __ptext12 50B4                  __ptext21 4AEE                  __ptext13 00B6  
                __ptext30 4708                  __ptext22 510E                  __ptext14 0D24  
                __ptext31 4508                  __ptext23 25D6                  __ptext15 521A  
                __ptext40 5228                  __ptext32 3E58                  __ptext24 4666  
                __ptext16 4A74                  __ptext41 5236                  __ptext33 4D76  
                __ptext25 444A                  __ptext17 5028                  __ptext50 169E  
                __ptext42 5250                  __ptext34 11F6                  __ptext26 323A  
                __ptext18 4E90                  __ptext51 1B44                  __ptext43 3F64  
                __ptext35 4F50                  __ptext27 3568                  __ptext19 4958  
                __ptext60 4CBC                  __ptext52 49E6                  __ptext44 4E04  
                __ptext36 33D8                  __ptext28 306C                  __ptext61 51C8  
                __ptext53 427C                  __ptext45 36F0                  __ptext37 5162  
                __ptext29 4FC0                  __ptext70 2286                  __ptext62 47A2  
                __ptext54 4D22                  __ptext46 3AE6                  __ptext38 2E0A  
                __ptext71 28A8                  __ptext63 529C                  __ptext55 4F14  
                __ptext47 3C10                  __ptext39 5244                  __ptext72 51F4  
                __ptext56 4C50                  __ptext48 518A                  __ptext73 5268  
                __ptext65 4ED2                  __ptext57 525C                  __ptext49 384C  
                __ptext66 3D34                  __ptext58 4E4A                  __ptext75 5138  
                __ptext67 51AA                  __ptext59 4F88                  __ptext76 4BE0  
                __ptext68 406E                  __ptext77 5274                  __ptext69 399A  
                _kgXcorte 002F                  __powers_ 7D87          __size_of_pressUP 010A  
                _drawMenu 1F04                  _lcd_init 45C4                  _lcd_putc 4A74  
             _OSCCON2bits 000FD2            _lcd_read_4bits 4AEE    __size_of_lcd_send_byte 0042  
             _setPWM2duty 47A2         i1writeEEPROM@data 0015              ?_calcSysVars 0001  
           __size_of_main 002C               ??_checkPass 0075           calcSysVars@temp 009C  
                _passChar 0139               _passSection 00D5                  _tiXcorte 0037  
           ??_writeEEPROM 0076               _longPressUP 4D22              _PSTR2CONbits 000F63  
            ??_pressENTER 00A1                  int$flags 004A               ??_ioInitStt 0075  
                _questKMT 013D              ??_pressRETRO 0075               ??_drawAdvON 00C9  
 __end_ofi1_saveSysParams 3E58                 printf@len 0118                 printf@exp 0126  
               printf@val 0122      __end_of_sysParamInit 4176               _releaseDOWN 5250  
          _lcd_send_4bits 4958           checkPass@passOK 0079               _introducido 0135  
             delay_ms@del 0075            _confirmEdition 3AE6             _velocidadMasa 003B  
             _OSCTUNEbits 000F9B                _INTCONbits 000FF2            ??_EEPROMConfig 0075  
             _PWM2CONbits 000F65                  isdigit@c 0077              _tempkgXcorte 0153  
                scale@scl 00A4    __end_of_lcd_read_4bits 4B68           _interruptConfig 5294  
                intlevel1 0000                  intlevel2 0000          __tdiv_to_l_@exp1 0085  
        __tdiv_to_l_@cntr 0084        __end_of_pressENTER 384C          __tdiv_to_l_@quot 0080  
      __end_of_pressRETRO 4E4A          ___lldiv@dividend 0075               ??_releaseUP 0075  
              _RCSTA1bits 000FAB          i1writeEEPROM@adr 0016                _OSCCONbits 000FD3  
           _lcd_read_byte 4DBE            _longPressENTER 4C50            _longPressRETRO 4F14  
             ??_pressDOWN 0075                  printf@ap 011A                  printf@cp 0116  
  __end_of_lcd_send_4bits 49E6    __end_of_confirmEdition 3C10                  putch@val 0082  
           ??i2_putchUART 0001               ??_putchUART 0015             _lcd_send_byte 4E90  
     __end_of_writeEEPROM 51AA              ?__tdiv_to_l_ 0075               _printf$2842 0112  
        ??_buttonChecking 00A1              ?_clockConfig 0001                _UARTConfig 4F88  
        ___lldiv@quotient 007D                _PWM2Config 4CBC         __CFG_T3CMX$PORTC0 000000  
              _WDTCONbits 000FD1             _holdENTERcont 00D2           ?_lcd_read_4bits 0001  
            ?_drawBadPass 0001             ___fladd@signs 00B9              ?_drawChanVal 0001  
          _ENTERsecurLock 0146              ___fladd@aexp 00BA              ___fladd@bexp 00BB  
   __end_ofi2_setPWM2duty 4C50         __CFG_FOSC$INTIO67 000000              ?_drawSNquest 0001  
            drawChanVal@i 00C9    __end_of_longPressENTER 4CBC             ?_drawPassWord 0001  
          ?_lcd_read_byte 0001    __end_of_longPressRETRO 4F50     __end_of_longPressDOWN 5268  
